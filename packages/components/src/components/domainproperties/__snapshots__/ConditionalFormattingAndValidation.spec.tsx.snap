// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ConditionalFormattingAndValidation Multiple validators or formats 1`] = `
<ConditionalFormattingAndValidation
  domainFormDisplayOptions={
    Object {
      "isDragDisabled": false,
      "phiLevelDisabled": false,
      "showAddFieldsButton": true,
      "showRequired": true,
      "showTextOptions": true,
      "showValidators": true,
    }
  }
  domainIndex={1}
  field={
    Immutable.Record {
      "conceptURI": undefined,
      "conditionalFormats": Immutable.List [
        Immutable.Record {
          "formatFilter": "format.column~startswith=0&format.column~doesnotstartwith=1",
          "bold": true,
          "italic": false,
          "strikethrough": false,
          "textColor": "FF6347",
          "backgroundColor": "000080",
        },
        Immutable.Record {
          "formatFilter": "format.column~isnonblank=&format.column~gt=5",
          "bold": false,
          "italic": true,
          "strikethrough": true,
          "textColor": "9f0500",
          "backgroundColor": "fda1ff",
        },
      ],
      "defaultScale": undefined,
      "defaultValueType": undefined,
      "defaultValue": undefined,
      "defaultDisplayValue": undefined,
      "description": undefined,
      "dimension": undefined,
      "excludeFromShifting": false,
      "format": undefined,
      "hidden": false,
      "importAliases": undefined,
      "label": undefined,
      "lookupContainer": undefined,
      "lookupQuery": undefined,
      "lookupSchema": undefined,
      "lookupValidator": undefined,
      "measure": undefined,
      "mvEnabled": false,
      "name": undefined,
      "PHI": undefined,
      "primaryKey": undefined,
      "propertyId": undefined,
      "propertyURI": undefined,
      "propertyValidators": Immutable.List [],
      "rangeValidators": Immutable.List [],
      "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
      "regexValidators": Immutable.List [],
      "recommendedVariable": false,
      "required": false,
      "scale": undefined,
      "URL": undefined,
      "shownInDetailsView": true,
      "shownInInsertView": true,
      "shownInUpdateView": true,
      "visible": true,
      "dataType": Immutable.Record {
        "conceptURI": undefined,
        "display": "Text",
        "name": "string",
        "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
        "alternateRangeURI": "xsd:string",
        "shortDisplay": "String",
        "lookupSchema": undefined,
        "lookupQuery": undefined,
      },
      "lookupQueryValue": undefined,
      "lookupType": Immutable.Record {
        "conceptURI": undefined,
        "display": "Lookup",
        "name": "lookup",
        "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
        "alternateRangeURI": undefined,
        "shortDisplay": undefined,
        "lookupSchema": undefined,
        "lookupQuery": undefined,
      },
      "original": Object {
        "conceptURI": undefined,
        "dataType": Immutable.Record {
          "conceptURI": undefined,
          "display": "Text",
          "name": "string",
          "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
          "alternateRangeURI": "xsd:string",
          "shortDisplay": "String",
          "lookupSchema": undefined,
          "lookupQuery": undefined,
        },
        "rangeURI": undefined,
      },
      "updatedField": false,
      "isPrimaryKey": false,
      "lockType": "NotLocked",
      "wrappedColumnName": undefined,
    }
  }
  index={1}
  onChange={[MockFunction]}
  setDragDisabled={[MockFunction]}
  showingModal={[MockFunction]}
>
  <div>
    <Row
      bsClass="row"
      className="domain-row-expanded"
      componentClass="div"
    >
      <div
        className="domain-row-expanded row"
      >
        <Col
          bsClass="col"
          componentClass="div"
          xs={12}
        >
          <div
            className="col-xs-12"
          >
            <SectionHeading
              cls="domain-field-section-hdr"
              title="Conditional Formatting and Validation Options"
            >
              <div
                className="domain-field-section-heading domain-field-section-hdr"
              >
                Conditional Formatting and Validation Options
              </div>
            </SectionHeading>
          </div>
        </Col>
      </div>
    </Row>
    <Row
      bsClass="row"
      className="domain-row-expanded"
      componentClass="div"
    >
      <div
        className="domain-row-expanded row"
      >
        <Col
          bsClass="col"
          componentClass="div"
          xs={12}
        >
          <div
            className="col-xs-12"
          >
            <div
              className="domain-validation-group"
            >
              <div
                className="domain-field-label domain-no-wrap"
              >
                <DomainFieldLabel
                  helpTipBody={[Function]}
                  label="Create Conditional Format Criteria"
                >
                  Create Conditional Format 
                  <span
                    className="domain-no-wrap"
                  >
                    Criteria
                    <LabelHelpTip
                      body={[Function]}
                      customStyle={Object {}}
                      id="tooltip"
                      size="1x"
                      title="Create Conditional Format Criteria"
                    >
                      <span
                        className="label-help-target"
                        onMouseOut={[Function]}
                        onMouseOver={[Function]}
                      >
                        <FontAwesomeIcon
                          border={false}
                          className="label-help-icon"
                          fixedWidth={false}
                          flip={null}
                          icon={
                            Object {
                              "icon": Array [
                                512,
                                512,
                                Array [],
                                "f059",
                                "M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z",
                              ],
                              "iconName": "question-circle",
                              "prefix": "fas",
                            }
                          }
                          inverse={false}
                          listItem={false}
                          mask={null}
                          pull={null}
                          pulse={false}
                          rotation={null}
                          size="1x"
                          spin={false}
                          style={Object {}}
                          symbol={false}
                          title=""
                          transform={null}
                        >
                          <svg
                            aria-hidden="true"
                            className="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                            data-icon="question-circle"
                            data-prefix="fas"
                            focusable="false"
                            role="img"
                            style={Object {}}
                            viewBox="0 0 512 512"
                            xmlns="http://www.w3.org/2000/svg"
                          >
                            <path
                              d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                              fill="currentColor"
                              style={Object {}}
                            />
                          </svg>
                        </FontAwesomeIcon>
                        <Overlay
                          animation={[Function]}
                          placement="right"
                          rootClose={false}
                          show={false}
                          target={
                            <span
                              class="label-help-target"
                            >
                              <svg
                                aria-hidden="true"
                                class="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                                data-icon="question-circle"
                                data-prefix="fas"
                                focusable="false"
                                role="img"
                                viewBox="0 0 512 512"
                                xmlns="http://www.w3.org/2000/svg"
                              >
                                <path
                                  d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                  fill="currentColor"
                                />
                              </svg>
                            </span>
                          }
                        >
                          <Overlay
                            placement="right"
                            rootClose={false}
                            show={false}
                            target={
                              <span
                                class="label-help-target"
                              >
                                <svg
                                  aria-hidden="true"
                                  class="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                                  data-icon="question-circle"
                                  data-prefix="fas"
                                  focusable="false"
                                  role="img"
                                  viewBox="0 0 512 512"
                                  xmlns="http://www.w3.org/2000/svg"
                                >
                                  <path
                                    d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                    fill="currentColor"
                                  />
                                </svg>
                              </span>
                            }
                            transition={[Function]}
                          />
                        </Overlay>
                      </span>
                    </LabelHelpTip>
                  </span>
                </DomainFieldLabel>
              </div>
              <div>
                <Button
                  active={false}
                  block={false}
                  bsClass="btn"
                  bsStyle="default"
                  className="domain-validation-button"
                  disabled={false}
                  id="domainpropertiesrow-conditionalFormat-1-1"
                  name="domainpropertiesrow-conditionalFormat"
                  onClick={[Function]}
                >
                  <button
                    className="domain-validation-button btn btn-default"
                    disabled={false}
                    id="domainpropertiesrow-conditionalFormat-1-1"
                    name="domainpropertiesrow-conditionalFormat"
                    onClick={[Function]}
                    type="button"
                  >
                    Edit Formats
                  </button>
                </Button>
                <a
                  className="domain-validator-link"
                  onClick={[Function]}
                >
                  2 Active formats
                </a>
              </div>
            </div>
            <div
              className="domain-validation-group"
            >
              <div
                className="domain-field-label domain-no-wrap"
              >
                <DomainFieldLabel
                  helpTipBody={[Function]}
                  label="Create Regular Expression Validator"
                >
                  Create Regular Expression 
                  <span
                    className="domain-no-wrap"
                  >
                    Validator
                    <LabelHelpTip
                      body={[Function]}
                      customStyle={Object {}}
                      id="tooltip"
                      size="1x"
                      title="Create Regular Expression Validator"
                    >
                      <span
                        className="label-help-target"
                        onMouseOut={[Function]}
                        onMouseOver={[Function]}
                      >
                        <FontAwesomeIcon
                          border={false}
                          className="label-help-icon"
                          fixedWidth={false}
                          flip={null}
                          icon={
                            Object {
                              "icon": Array [
                                512,
                                512,
                                Array [],
                                "f059",
                                "M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z",
                              ],
                              "iconName": "question-circle",
                              "prefix": "fas",
                            }
                          }
                          inverse={false}
                          listItem={false}
                          mask={null}
                          pull={null}
                          pulse={false}
                          rotation={null}
                          size="1x"
                          spin={false}
                          style={Object {}}
                          symbol={false}
                          title=""
                          transform={null}
                        >
                          <svg
                            aria-hidden="true"
                            className="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                            data-icon="question-circle"
                            data-prefix="fas"
                            focusable="false"
                            role="img"
                            style={Object {}}
                            viewBox="0 0 512 512"
                            xmlns="http://www.w3.org/2000/svg"
                          >
                            <path
                              d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                              fill="currentColor"
                              style={Object {}}
                            />
                          </svg>
                        </FontAwesomeIcon>
                        <Overlay
                          animation={[Function]}
                          placement="right"
                          rootClose={false}
                          show={false}
                        >
                          <Overlay
                            placement="right"
                            rootClose={false}
                            show={false}
                            transition={[Function]}
                          />
                        </Overlay>
                      </span>
                    </LabelHelpTip>
                  </span>
                </DomainFieldLabel>
              </div>
              <div>
                <Button
                  active={false}
                  block={false}
                  bsClass="btn"
                  bsStyle="default"
                  className="domain-validation-button"
                  disabled={false}
                  id="domainpropertiesrow-regexValidator-1-1"
                  name="domainpropertiesrow-regexValidator"
                  onClick={[Function]}
                >
                  <button
                    className="domain-validation-button btn btn-default"
                    disabled={false}
                    id="domainpropertiesrow-regexValidator-1-1"
                    name="domainpropertiesrow-regexValidator"
                    onClick={[Function]}
                    type="button"
                  >
                    Add Regex
                  </button>
                </Button>
                <span
                  className="domain-text-label"
                >
                  None Set
                </span>
              </div>
            </div>
          </div>
        </Col>
      </div>
    </Row>
  </div>
</ConditionalFormattingAndValidation>
`;

exports[`ConditionalFormattingAndValidation No validators 1`] = `
<ConditionalFormattingAndValidation
  domainFormDisplayOptions={
    Object {
      "isDragDisabled": false,
      "phiLevelDisabled": false,
      "showRequired": true,
      "showTextOptions": true,
      "showValidators": false,
    }
  }
  domainIndex={1}
  field={
    Immutable.Record {
      "conceptURI": undefined,
      "conditionalFormats": Immutable.List [],
      "defaultScale": undefined,
      "defaultValueType": undefined,
      "defaultValue": undefined,
      "defaultDisplayValue": undefined,
      "description": undefined,
      "dimension": undefined,
      "excludeFromShifting": false,
      "format": undefined,
      "hidden": false,
      "importAliases": undefined,
      "label": undefined,
      "lookupContainer": undefined,
      "lookupQuery": undefined,
      "lookupSchema": undefined,
      "lookupValidator": undefined,
      "measure": undefined,
      "mvEnabled": false,
      "name": undefined,
      "PHI": undefined,
      "primaryKey": undefined,
      "propertyId": undefined,
      "propertyURI": undefined,
      "propertyValidators": Immutable.List [],
      "rangeValidators": Immutable.List [],
      "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
      "regexValidators": Immutable.List [],
      "recommendedVariable": false,
      "required": false,
      "scale": undefined,
      "URL": undefined,
      "shownInDetailsView": true,
      "shownInInsertView": true,
      "shownInUpdateView": true,
      "visible": true,
      "dataType": Immutable.Record {
        "conceptURI": undefined,
        "display": "Text",
        "name": "string",
        "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
        "alternateRangeURI": "xsd:string",
        "shortDisplay": "String",
        "lookupSchema": undefined,
        "lookupQuery": undefined,
      },
      "lookupQueryValue": undefined,
      "lookupType": Immutable.Record {
        "conceptURI": undefined,
        "display": "Lookup",
        "name": "lookup",
        "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
        "alternateRangeURI": undefined,
        "shortDisplay": undefined,
        "lookupSchema": undefined,
        "lookupQuery": undefined,
      },
      "original": Object {
        "conceptURI": undefined,
        "dataType": Immutable.Record {
          "conceptURI": undefined,
          "display": "Text",
          "name": "string",
          "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
          "alternateRangeURI": "xsd:string",
          "shortDisplay": "String",
          "lookupSchema": undefined,
          "lookupQuery": undefined,
        },
        "rangeURI": undefined,
      },
      "updatedField": false,
      "isPrimaryKey": false,
      "lockType": "NotLocked",
      "wrappedColumnName": undefined,
    }
  }
  index={1}
  onChange={[MockFunction]}
  setDragDisabled={[MockFunction]}
  showingModal={[MockFunction]}
>
  <div>
    <Row
      bsClass="row"
      className="domain-row-expanded"
      componentClass="div"
    >
      <div
        className="domain-row-expanded row"
      >
        <Col
          bsClass="col"
          componentClass="div"
          xs={12}
        >
          <div
            className="col-xs-12"
          >
            <SectionHeading
              cls="domain-field-section-hdr"
              title="Conditional Formatting and Validation Options"
            >
              <div
                className="domain-field-section-heading domain-field-section-hdr"
              >
                Conditional Formatting and Validation Options
              </div>
            </SectionHeading>
          </div>
        </Col>
      </div>
    </Row>
    <Row
      bsClass="row"
      className="domain-row-expanded"
      componentClass="div"
    >
      <div
        className="domain-row-expanded row"
      >
        <Col
          bsClass="col"
          componentClass="div"
          xs={12}
        >
          <div
            className="col-xs-12"
          >
            <div
              className="domain-validation-group"
            >
              <div
                className="domain-field-label domain-no-wrap"
              >
                <DomainFieldLabel
                  helpTipBody={[Function]}
                  label="Create Conditional Format Criteria"
                >
                  Create Conditional Format 
                  <span
                    className="domain-no-wrap"
                  >
                    Criteria
                    <LabelHelpTip
                      body={[Function]}
                      customStyle={Object {}}
                      id="tooltip"
                      size="1x"
                      title="Create Conditional Format Criteria"
                    >
                      <span
                        className="label-help-target"
                        onMouseOut={[Function]}
                        onMouseOver={[Function]}
                      >
                        <FontAwesomeIcon
                          border={false}
                          className="label-help-icon"
                          fixedWidth={false}
                          flip={null}
                          icon={
                            Object {
                              "icon": Array [
                                512,
                                512,
                                Array [],
                                "f059",
                                "M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z",
                              ],
                              "iconName": "question-circle",
                              "prefix": "fas",
                            }
                          }
                          inverse={false}
                          listItem={false}
                          mask={null}
                          pull={null}
                          pulse={false}
                          rotation={null}
                          size="1x"
                          spin={false}
                          style={Object {}}
                          symbol={false}
                          title=""
                          transform={null}
                        >
                          <svg
                            aria-hidden="true"
                            className="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                            data-icon="question-circle"
                            data-prefix="fas"
                            focusable="false"
                            role="img"
                            style={Object {}}
                            viewBox="0 0 512 512"
                            xmlns="http://www.w3.org/2000/svg"
                          >
                            <path
                              d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                              fill="currentColor"
                              style={Object {}}
                            />
                          </svg>
                        </FontAwesomeIcon>
                        <Overlay
                          animation={[Function]}
                          placement="right"
                          rootClose={false}
                          show={false}
                          target={
                            <span
                              class="label-help-target"
                            >
                              <svg
                                aria-hidden="true"
                                class="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                                data-icon="question-circle"
                                data-prefix="fas"
                                focusable="false"
                                role="img"
                                viewBox="0 0 512 512"
                                xmlns="http://www.w3.org/2000/svg"
                              >
                                <path
                                  d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                  fill="currentColor"
                                />
                              </svg>
                            </span>
                          }
                        >
                          <Overlay
                            placement="right"
                            rootClose={false}
                            show={false}
                            target={
                              <span
                                class="label-help-target"
                              >
                                <svg
                                  aria-hidden="true"
                                  class="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                                  data-icon="question-circle"
                                  data-prefix="fas"
                                  focusable="false"
                                  role="img"
                                  viewBox="0 0 512 512"
                                  xmlns="http://www.w3.org/2000/svg"
                                >
                                  <path
                                    d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                    fill="currentColor"
                                  />
                                </svg>
                              </span>
                            }
                            transition={[Function]}
                          />
                        </Overlay>
                      </span>
                    </LabelHelpTip>
                  </span>
                </DomainFieldLabel>
              </div>
              <div>
                <Button
                  active={false}
                  block={false}
                  bsClass="btn"
                  bsStyle="default"
                  className="domain-validation-button"
                  disabled={false}
                  id="domainpropertiesrow-conditionalFormat-1-1"
                  name="domainpropertiesrow-conditionalFormat"
                  onClick={[Function]}
                >
                  <button
                    className="domain-validation-button btn btn-default"
                    disabled={false}
                    id="domainpropertiesrow-conditionalFormat-1-1"
                    name="domainpropertiesrow-conditionalFormat"
                    onClick={[Function]}
                    type="button"
                  >
                    Add Format
                  </button>
                </Button>
                <span
                  className="domain-text-label"
                >
                  None Set
                </span>
              </div>
            </div>
          </div>
        </Col>
      </div>
    </Row>
  </div>
</ConditionalFormattingAndValidation>
`;

exports[`ConditionalFormattingAndValidation No validators or formats 1`] = `
<ConditionalFormattingAndValidation
  domainFormDisplayOptions={
    Object {
      "isDragDisabled": false,
      "phiLevelDisabled": false,
      "showAddFieldsButton": true,
      "showRequired": true,
      "showTextOptions": true,
      "showValidators": true,
    }
  }
  domainIndex={1}
  field={
    Immutable.Record {
      "conceptURI": undefined,
      "conditionalFormats": Immutable.List [],
      "defaultScale": undefined,
      "defaultValueType": undefined,
      "defaultValue": undefined,
      "defaultDisplayValue": undefined,
      "description": undefined,
      "dimension": undefined,
      "excludeFromShifting": false,
      "format": undefined,
      "hidden": false,
      "importAliases": undefined,
      "label": undefined,
      "lookupContainer": undefined,
      "lookupQuery": undefined,
      "lookupSchema": undefined,
      "lookupValidator": undefined,
      "measure": undefined,
      "mvEnabled": false,
      "name": undefined,
      "PHI": undefined,
      "primaryKey": undefined,
      "propertyId": undefined,
      "propertyURI": undefined,
      "propertyValidators": Immutable.List [],
      "rangeValidators": Immutable.List [],
      "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
      "regexValidators": Immutable.List [],
      "recommendedVariable": false,
      "required": false,
      "scale": undefined,
      "URL": undefined,
      "shownInDetailsView": true,
      "shownInInsertView": true,
      "shownInUpdateView": true,
      "visible": true,
      "dataType": Immutable.Record {
        "conceptURI": undefined,
        "display": "Text",
        "name": "string",
        "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
        "alternateRangeURI": "xsd:string",
        "shortDisplay": "String",
        "lookupSchema": undefined,
        "lookupQuery": undefined,
      },
      "lookupQueryValue": undefined,
      "lookupType": Immutable.Record {
        "conceptURI": undefined,
        "display": "Lookup",
        "name": "lookup",
        "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
        "alternateRangeURI": undefined,
        "shortDisplay": undefined,
        "lookupSchema": undefined,
        "lookupQuery": undefined,
      },
      "original": Object {
        "conceptURI": undefined,
        "dataType": Immutable.Record {
          "conceptURI": undefined,
          "display": "Text",
          "name": "string",
          "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
          "alternateRangeURI": "xsd:string",
          "shortDisplay": "String",
          "lookupSchema": undefined,
          "lookupQuery": undefined,
        },
        "rangeURI": undefined,
      },
      "updatedField": false,
      "isPrimaryKey": false,
      "lockType": "NotLocked",
      "wrappedColumnName": undefined,
    }
  }
  index={1}
  onChange={[MockFunction]}
  setDragDisabled={[MockFunction]}
  showingModal={[MockFunction]}
>
  <div>
    <Row
      bsClass="row"
      className="domain-row-expanded"
      componentClass="div"
    >
      <div
        className="domain-row-expanded row"
      >
        <Col
          bsClass="col"
          componentClass="div"
          xs={12}
        >
          <div
            className="col-xs-12"
          >
            <SectionHeading
              cls="domain-field-section-hdr"
              title="Conditional Formatting and Validation Options"
            >
              <div
                className="domain-field-section-heading domain-field-section-hdr"
              >
                Conditional Formatting and Validation Options
              </div>
            </SectionHeading>
          </div>
        </Col>
      </div>
    </Row>
    <Row
      bsClass="row"
      className="domain-row-expanded"
      componentClass="div"
    >
      <div
        className="domain-row-expanded row"
      >
        <Col
          bsClass="col"
          componentClass="div"
          xs={12}
        >
          <div
            className="col-xs-12"
          >
            <div
              className="domain-validation-group"
            >
              <div
                className="domain-field-label domain-no-wrap"
              >
                <DomainFieldLabel
                  helpTipBody={[Function]}
                  label="Create Conditional Format Criteria"
                >
                  Create Conditional Format 
                  <span
                    className="domain-no-wrap"
                  >
                    Criteria
                    <LabelHelpTip
                      body={[Function]}
                      customStyle={Object {}}
                      id="tooltip"
                      size="1x"
                      title="Create Conditional Format Criteria"
                    >
                      <span
                        className="label-help-target"
                        onMouseOut={[Function]}
                        onMouseOver={[Function]}
                      >
                        <FontAwesomeIcon
                          border={false}
                          className="label-help-icon"
                          fixedWidth={false}
                          flip={null}
                          icon={
                            Object {
                              "icon": Array [
                                512,
                                512,
                                Array [],
                                "f059",
                                "M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z",
                              ],
                              "iconName": "question-circle",
                              "prefix": "fas",
                            }
                          }
                          inverse={false}
                          listItem={false}
                          mask={null}
                          pull={null}
                          pulse={false}
                          rotation={null}
                          size="1x"
                          spin={false}
                          style={Object {}}
                          symbol={false}
                          title=""
                          transform={null}
                        >
                          <svg
                            aria-hidden="true"
                            className="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                            data-icon="question-circle"
                            data-prefix="fas"
                            focusable="false"
                            role="img"
                            style={Object {}}
                            viewBox="0 0 512 512"
                            xmlns="http://www.w3.org/2000/svg"
                          >
                            <path
                              d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                              fill="currentColor"
                              style={Object {}}
                            />
                          </svg>
                        </FontAwesomeIcon>
                        <Overlay
                          animation={[Function]}
                          placement="right"
                          rootClose={false}
                          show={false}
                          target={
                            <span
                              class="label-help-target"
                            >
                              <svg
                                aria-hidden="true"
                                class="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                                data-icon="question-circle"
                                data-prefix="fas"
                                focusable="false"
                                role="img"
                                viewBox="0 0 512 512"
                                xmlns="http://www.w3.org/2000/svg"
                              >
                                <path
                                  d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                  fill="currentColor"
                                />
                              </svg>
                            </span>
                          }
                        >
                          <Overlay
                            placement="right"
                            rootClose={false}
                            show={false}
                            target={
                              <span
                                class="label-help-target"
                              >
                                <svg
                                  aria-hidden="true"
                                  class="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                                  data-icon="question-circle"
                                  data-prefix="fas"
                                  focusable="false"
                                  role="img"
                                  viewBox="0 0 512 512"
                                  xmlns="http://www.w3.org/2000/svg"
                                >
                                  <path
                                    d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                    fill="currentColor"
                                  />
                                </svg>
                              </span>
                            }
                            transition={[Function]}
                          />
                        </Overlay>
                      </span>
                    </LabelHelpTip>
                  </span>
                </DomainFieldLabel>
              </div>
              <div>
                <Button
                  active={false}
                  block={false}
                  bsClass="btn"
                  bsStyle="default"
                  className="domain-validation-button"
                  disabled={false}
                  id="domainpropertiesrow-conditionalFormat-1-1"
                  name="domainpropertiesrow-conditionalFormat"
                  onClick={[Function]}
                >
                  <button
                    className="domain-validation-button btn btn-default"
                    disabled={false}
                    id="domainpropertiesrow-conditionalFormat-1-1"
                    name="domainpropertiesrow-conditionalFormat"
                    onClick={[Function]}
                    type="button"
                  >
                    Add Format
                  </button>
                </Button>
                <span
                  className="domain-text-label"
                >
                  None Set
                </span>
              </div>
            </div>
            <div
              className="domain-validation-group"
            >
              <div
                className="domain-field-label domain-no-wrap"
              >
                <DomainFieldLabel
                  helpTipBody={[Function]}
                  label="Create Regular Expression Validator"
                >
                  Create Regular Expression 
                  <span
                    className="domain-no-wrap"
                  >
                    Validator
                    <LabelHelpTip
                      body={[Function]}
                      customStyle={Object {}}
                      id="tooltip"
                      size="1x"
                      title="Create Regular Expression Validator"
                    >
                      <span
                        className="label-help-target"
                        onMouseOut={[Function]}
                        onMouseOver={[Function]}
                      >
                        <FontAwesomeIcon
                          border={false}
                          className="label-help-icon"
                          fixedWidth={false}
                          flip={null}
                          icon={
                            Object {
                              "icon": Array [
                                512,
                                512,
                                Array [],
                                "f059",
                                "M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z",
                              ],
                              "iconName": "question-circle",
                              "prefix": "fas",
                            }
                          }
                          inverse={false}
                          listItem={false}
                          mask={null}
                          pull={null}
                          pulse={false}
                          rotation={null}
                          size="1x"
                          spin={false}
                          style={Object {}}
                          symbol={false}
                          title=""
                          transform={null}
                        >
                          <svg
                            aria-hidden="true"
                            className="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                            data-icon="question-circle"
                            data-prefix="fas"
                            focusable="false"
                            role="img"
                            style={Object {}}
                            viewBox="0 0 512 512"
                            xmlns="http://www.w3.org/2000/svg"
                          >
                            <path
                              d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                              fill="currentColor"
                              style={Object {}}
                            />
                          </svg>
                        </FontAwesomeIcon>
                        <Overlay
                          animation={[Function]}
                          placement="right"
                          rootClose={false}
                          show={false}
                        >
                          <Overlay
                            placement="right"
                            rootClose={false}
                            show={false}
                            transition={[Function]}
                          />
                        </Overlay>
                      </span>
                    </LabelHelpTip>
                  </span>
                </DomainFieldLabel>
              </div>
              <div>
                <Button
                  active={false}
                  block={false}
                  bsClass="btn"
                  bsStyle="default"
                  className="domain-validation-button"
                  disabled={false}
                  id="domainpropertiesrow-regexValidator-1-1"
                  name="domainpropertiesrow-regexValidator"
                  onClick={[Function]}
                >
                  <button
                    className="domain-validation-button btn btn-default"
                    disabled={false}
                    id="domainpropertiesrow-regexValidator-1-1"
                    name="domainpropertiesrow-regexValidator"
                    onClick={[Function]}
                    type="button"
                  >
                    Add Regex
                  </button>
                </Button>
                <span
                  className="domain-text-label"
                >
                  None Set
                </span>
              </div>
            </div>
          </div>
        </Col>
      </div>
    </Row>
  </div>
</ConditionalFormattingAndValidation>
`;
