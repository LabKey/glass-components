// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`AssayDesignerPanels appPropertiesOnly for new assay 1`] = `
<AssayDesignerPanels
  appPropertiesOnly={true}
  initModel={
    Immutable.Record {
      "allowBackgroundUpload": false,
      "allowEditableResults": false,
      "allowQCStates": false,
      "allowSpacesInPath": false,
      "allowTransformationScript": false,
      "allowPlateMetadata": false,
      "autoCopyTargetContainer": undefined,
      "autoCopyTargetContainerId": undefined,
      "availableDetectionMethods": undefined,
      "availableMetadataInputFormats": undefined,
      "availablePlateTemplates": undefined,
      "backgroundUpload": false,
      "description": undefined,
      "domains": Immutable.List [
        Immutable.Record {
          "name": "Batch Fields",
          "container": undefined,
          "description": undefined,
          "domainURI": undefined,
          "domainId": null,
          "allowFileLinkProperties": true,
          "allowAttachmentProperties": true,
          "allowFlagProperties": true,
          "showDefaultValueSettings": false,
          "defaultDefaultValueType": undefined,
          "defaultValueOptions": Immutable.List [],
          "fields": Immutable.List [],
          "indices": Immutable.List [],
          "domainException": undefined,
          "mandatoryFieldNames": Immutable.List [],
          "reservedFieldNames": Immutable.List [],
          "newDesignFields": undefined,
          "instructions": undefined,
        },
        Immutable.Record {
          "name": "Run Fields",
          "container": undefined,
          "description": undefined,
          "domainURI": undefined,
          "domainId": null,
          "allowFileLinkProperties": true,
          "allowAttachmentProperties": true,
          "allowFlagProperties": true,
          "showDefaultValueSettings": false,
          "defaultDefaultValueType": undefined,
          "defaultValueOptions": Immutable.List [],
          "fields": Immutable.List [],
          "indices": Immutable.List [],
          "domainException": undefined,
          "mandatoryFieldNames": Immutable.List [],
          "reservedFieldNames": Immutable.List [],
          "newDesignFields": undefined,
          "instructions": undefined,
        },
        Immutable.Record {
          "name": "Data Fields",
          "container": undefined,
          "description": undefined,
          "domainURI": undefined,
          "domainId": null,
          "allowFileLinkProperties": true,
          "allowAttachmentProperties": true,
          "allowFlagProperties": true,
          "showDefaultValueSettings": false,
          "defaultDefaultValueType": undefined,
          "defaultValueOptions": Immutable.List [],
          "fields": Immutable.List [],
          "indices": Immutable.List [],
          "domainException": undefined,
          "mandatoryFieldNames": Immutable.List [],
          "reservedFieldNames": Immutable.List [],
          "newDesignFields": undefined,
          "instructions": undefined,
        },
      ],
      "editableResults": false,
      "editableRuns": false,
      "exception": undefined,
      "metadataInputFormatHelp": undefined,
      "moduleTransformScripts": undefined,
      "name": undefined,
      "plateMetadata": undefined,
      "protocolId": undefined,
      "protocolParameters": undefined,
      "protocolTransformScripts": undefined,
      "providerName": "General",
      "saveScriptFiles": false,
      "selectedDetectionMethod": undefined,
      "selectedMetadataInputFormat": undefined,
      "selectedPlateTemplate": undefined,
      "qcEnabled": undefined,
    }
  }
  onCancel={[Function]}
  onComplete={[Function]}
>
  <ComponentWithDomainPropertiesPanelCollapse
    appPropertiesOnly={true}
    controlledCollapse={true}
    initCollapsed={false}
    model={
      Immutable.Record {
        "allowBackgroundUpload": false,
        "allowEditableResults": false,
        "allowQCStates": false,
        "allowSpacesInPath": false,
        "allowTransformationScript": false,
        "allowPlateMetadata": false,
        "autoCopyTargetContainer": undefined,
        "autoCopyTargetContainerId": undefined,
        "availableDetectionMethods": undefined,
        "availableMetadataInputFormats": undefined,
        "availablePlateTemplates": undefined,
        "backgroundUpload": false,
        "description": undefined,
        "domains": Immutable.List [
          Immutable.Record {
            "name": "Batch Fields",
            "container": undefined,
            "description": undefined,
            "domainURI": undefined,
            "domainId": null,
            "allowFileLinkProperties": true,
            "allowAttachmentProperties": true,
            "allowFlagProperties": true,
            "showDefaultValueSettings": false,
            "defaultDefaultValueType": undefined,
            "defaultValueOptions": Immutable.List [],
            "fields": Immutable.List [],
            "indices": Immutable.List [],
            "domainException": undefined,
            "mandatoryFieldNames": Immutable.List [],
            "reservedFieldNames": Immutable.List [],
            "newDesignFields": undefined,
            "instructions": undefined,
          },
          Immutable.Record {
            "name": "Run Fields",
            "container": undefined,
            "description": undefined,
            "domainURI": undefined,
            "domainId": null,
            "allowFileLinkProperties": true,
            "allowAttachmentProperties": true,
            "allowFlagProperties": true,
            "showDefaultValueSettings": false,
            "defaultDefaultValueType": undefined,
            "defaultValueOptions": Immutable.List [],
            "fields": Immutable.List [],
            "indices": Immutable.List [],
            "domainException": undefined,
            "mandatoryFieldNames": Immutable.List [],
            "reservedFieldNames": Immutable.List [],
            "newDesignFields": undefined,
            "instructions": undefined,
          },
          Immutable.Record {
            "name": "Data Fields",
            "container": undefined,
            "description": undefined,
            "domainURI": undefined,
            "domainId": null,
            "allowFileLinkProperties": true,
            "allowAttachmentProperties": true,
            "allowFlagProperties": true,
            "showDefaultValueSettings": false,
            "defaultDefaultValueType": undefined,
            "defaultValueOptions": Immutable.List [],
            "fields": Immutable.List [],
            "indices": Immutable.List [],
            "domainException": undefined,
            "mandatoryFieldNames": Immutable.List [],
            "reservedFieldNames": Immutable.List [],
            "newDesignFields": undefined,
            "instructions": undefined,
          },
        ],
        "editableResults": false,
        "editableRuns": false,
        "exception": undefined,
        "metadataInputFormatHelp": undefined,
        "moduleTransformScripts": undefined,
        "name": undefined,
        "plateMetadata": undefined,
        "protocolId": undefined,
        "protocolParameters": undefined,
        "protocolTransformScripts": undefined,
        "providerName": "General",
        "saveScriptFiles": false,
        "selectedDetectionMethod": undefined,
        "selectedMetadataInputFormat": undefined,
        "selectedPlateTemplate": undefined,
        "qcEnabled": undefined,
      }
    }
    onChange={[Function]}
    onToggle={[Function]}
    panelStatus="NONE"
    validate={false}
  >
    <AssayPropertiesPanelImpl
      appPropertiesOnly={true}
      asPanel={true}
      collapsed={false}
      controlledCollapse={true}
      helpTopic="defineAssaySchema"
      model={
        Immutable.Record {
          "allowBackgroundUpload": false,
          "allowEditableResults": false,
          "allowQCStates": false,
          "allowSpacesInPath": false,
          "allowTransformationScript": false,
          "allowPlateMetadata": false,
          "autoCopyTargetContainer": undefined,
          "autoCopyTargetContainerId": undefined,
          "availableDetectionMethods": undefined,
          "availableMetadataInputFormats": undefined,
          "availablePlateTemplates": undefined,
          "backgroundUpload": false,
          "description": undefined,
          "domains": Immutable.List [
            Immutable.Record {
              "name": "Batch Fields",
              "container": undefined,
              "description": undefined,
              "domainURI": undefined,
              "domainId": null,
              "allowFileLinkProperties": true,
              "allowAttachmentProperties": true,
              "allowFlagProperties": true,
              "showDefaultValueSettings": false,
              "defaultDefaultValueType": undefined,
              "defaultValueOptions": Immutable.List [],
              "fields": Immutable.List [],
              "indices": Immutable.List [],
              "domainException": undefined,
              "mandatoryFieldNames": Immutable.List [],
              "reservedFieldNames": Immutable.List [],
              "newDesignFields": undefined,
              "instructions": undefined,
            },
            Immutable.Record {
              "name": "Run Fields",
              "container": undefined,
              "description": undefined,
              "domainURI": undefined,
              "domainId": null,
              "allowFileLinkProperties": true,
              "allowAttachmentProperties": true,
              "allowFlagProperties": true,
              "showDefaultValueSettings": false,
              "defaultDefaultValueType": undefined,
              "defaultValueOptions": Immutable.List [],
              "fields": Immutable.List [],
              "indices": Immutable.List [],
              "domainException": undefined,
              "mandatoryFieldNames": Immutable.List [],
              "reservedFieldNames": Immutable.List [],
              "newDesignFields": undefined,
              "instructions": undefined,
            },
            Immutable.Record {
              "name": "Data Fields",
              "container": undefined,
              "description": undefined,
              "domainURI": undefined,
              "domainId": null,
              "allowFileLinkProperties": true,
              "allowAttachmentProperties": true,
              "allowFlagProperties": true,
              "showDefaultValueSettings": false,
              "defaultDefaultValueType": undefined,
              "defaultValueOptions": Immutable.List [],
              "fields": Immutable.List [],
              "indices": Immutable.List [],
              "domainException": undefined,
              "mandatoryFieldNames": Immutable.List [],
              "reservedFieldNames": Immutable.List [],
              "newDesignFields": undefined,
              "instructions": undefined,
            },
          ],
          "editableResults": false,
          "editableRuns": false,
          "exception": undefined,
          "metadataInputFormatHelp": undefined,
          "moduleTransformScripts": undefined,
          "name": undefined,
          "plateMetadata": undefined,
          "protocolId": undefined,
          "protocolParameters": undefined,
          "protocolTransformScripts": undefined,
          "providerName": "General",
          "saveScriptFiles": false,
          "selectedDetectionMethod": undefined,
          "selectedMetadataInputFormat": undefined,
          "selectedPlateTemplate": undefined,
          "qcEnabled": undefined,
        }
      }
      onChange={[Function]}
      panelStatus="NONE"
      togglePanel={[Function]}
      validate={false}
    >
      <Uncontrolled(Panel)
        className="domain-form-panel domain-panel-no-theme"
        expanded={true}
        onToggle={[Function]}
      >
        <Panel
          bsClass="panel"
          bsStyle="default"
          className="domain-form-panel domain-panel-no-theme"
          expanded={true}
          onToggle={[Function]}
        >
          <div
            className="domain-form-panel domain-panel-no-theme panel panel-default"
          >
            <CollapsiblePanelHeader
              collapsed={false}
              controlledCollapse={true}
              iconHelpMsg="Contains errors or is missing required values."
              id="assay-properties-hdr"
              isValid={true}
              panelStatus="NONE"
              title="Assay Properties"
              togglePanel={[Function]}
            >
              <PanelHeading
                bsClass="panel"
                className="domain-panel-header domain-heading-collapsible domain-panel-header-expanded domain-panel-header-no-theme"
                componentClass="div"
                id="assay-properties-hdr"
                onClick={[Function]}
              >
                <div
                  className="domain-panel-header domain-heading-collapsible domain-panel-header-expanded domain-panel-header-no-theme panel-heading"
                  id="assay-properties-hdr"
                  onClick={[Function]}
                >
                  <span
                    className="domain-panel-title"
                  >
                    Assay Properties
                  </span>
                  <span
                    className="pull-right"
                  >
                    <FontAwesomeIcon
                      border={false}
                      className="domain-form-collapse-btn"
                      fixedWidth={false}
                      flip={null}
                      icon={
                        Object {
                          "icon": Array [
                            448,
                            512,
                            Array [],
                            "f146",
                            "M400 32H48C21.5 32 0 53.5 0 80v352c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V80c0-26.5-21.5-48-48-48zM92 296c-6.6 0-12-5.4-12-12v-56c0-6.6 5.4-12 12-12h264c6.6 0 12 5.4 12 12v56c0 6.6-5.4 12-12 12H92z",
                          ],
                          "iconName": "minus-square",
                          "prefix": "fas",
                        }
                      }
                      inverse={false}
                      listItem={false}
                      mask={null}
                      pull={null}
                      pulse={false}
                      rotation={null}
                      size="lg"
                      spin={false}
                      symbol={false}
                      title=""
                      transform={null}
                    >
                      <svg
                        aria-hidden="true"
                        className="svg-inline--fa fa-minus-square fa-w-14 fa-lg domain-form-collapse-btn"
                        data-icon="minus-square"
                        data-prefix="fas"
                        focusable="false"
                        role="img"
                        style={Object {}}
                        viewBox="0 0 448 512"
                        xmlns="http://www.w3.org/2000/svg"
                      >
                        <path
                          d="M400 32H48C21.5 32 0 53.5 0 80v352c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V80c0-26.5-21.5-48-48-48zM92 296c-6.6 0-12-5.4-12-12v-56c0-6.6 5.4-12 12-12h264c6.6 0 12 5.4 12 12v56c0 6.6-5.4 12-12 12H92z"
                          fill="currentColor"
                          style={Object {}}
                        />
                      </svg>
                    </FontAwesomeIcon>
                  </span>
                </div>
              </PanelHeading>
            </CollapsiblePanelHeader>
            <PanelBody
              bsClass="panel"
              collapsible={true}
            >
              <PanelCollapse
                bsClass="panel"
              >
                <Collapse
                  appear={false}
                  dimension="height"
                  getDimensionValue={[Function]}
                  in={true}
                  mountOnEnter={false}
                  timeout={300}
                  unmountOnExit={false}
                >
                  <Transition
                    appear={false}
                    aria-expanded={null}
                    enter={true}
                    exit={true}
                    in={true}
                    mountOnEnter={false}
                    onEnter={[Function]}
                    onEntered={[Function]}
                    onEntering={[Function]}
                    onExit={[Function]}
                    onExited={[Function]}
                    onExiting={[Function]}
                    timeout={300}
                    unmountOnExit={false}
                  >
                    <div
                      aria-expanded={null}
                      className="panel-collapse collapse in"
                    >
                      <div
                        className="panel-body"
                      >
                        <HelpTopicURL
                          helpTopic="defineAssaySchema"
                          nounPlural="assays"
                        >
                          <Row
                            bsClass="row"
                            componentClass="div"
                          >
                            <div
                              className="row"
                            >
                              <Col
                                bsClass="col"
                                componentClass="div"
                                xs={12}
                              >
                                <div
                                  className="col-xs-12"
                                >
                                  <a
                                    className="domain-field-float-right"
                                    href="https://www.labkey.org/Documentation/wiki-page.view?name=defineAssaySchema"
                                    target="_blank"
                                  >
                                    Learn more about designing assays
                                  </a>
                                </div>
                              </Col>
                            </div>
                          </Row>
                        </HelpTopicURL>
                        <Form
                          bsClass="form"
                          componentClass="form"
                          horizontal={false}
                          inline={false}
                        >
                          <form
                            className=""
                          >
                            <Col
                              bsClass="col"
                              componentClass="div"
                              lg={12}
                              xs={12}
                            >
                              <div
                                className="col-lg-12 col-xs-12"
                              >
                                <div
                                  className="domain-field-padding-bottom"
                                >
                                  <SectionHeading
                                    helpTopic="defineAssaySchema"
                                    title="Basic Properties"
                                  >
                                    <Row
                                      bsClass="row"
                                      componentClass="div"
                                    >
                                      <div
                                        className="row"
                                      >
                                        <Col
                                          bsClass="col"
                                          componentClass="div"
                                          xs={9}
                                        >
                                          <div
                                            className="col-xs-9"
                                          >
                                            <div
                                              className="domain-field-section-heading"
                                            >
                                              Basic Properties
                                            </div>
                                          </div>
                                        </Col>
                                      </div>
                                    </Row>
                                  </SectionHeading>
                                  <NameInput
                                    appPropertiesOnly={true}
                                    model={
                                      Immutable.Record {
                                        "allowBackgroundUpload": false,
                                        "allowEditableResults": false,
                                        "allowQCStates": false,
                                        "allowSpacesInPath": false,
                                        "allowTransformationScript": false,
                                        "allowPlateMetadata": false,
                                        "autoCopyTargetContainer": undefined,
                                        "autoCopyTargetContainerId": undefined,
                                        "availableDetectionMethods": undefined,
                                        "availableMetadataInputFormats": undefined,
                                        "availablePlateTemplates": undefined,
                                        "backgroundUpload": false,
                                        "description": undefined,
                                        "domains": Immutable.List [
                                          Immutable.Record {
                                            "name": "Batch Fields",
                                            "container": undefined,
                                            "description": undefined,
                                            "domainURI": undefined,
                                            "domainId": null,
                                            "allowFileLinkProperties": true,
                                            "allowAttachmentProperties": true,
                                            "allowFlagProperties": true,
                                            "showDefaultValueSettings": false,
                                            "defaultDefaultValueType": undefined,
                                            "defaultValueOptions": Immutable.List [],
                                            "fields": Immutable.List [],
                                            "indices": Immutable.List [],
                                            "domainException": undefined,
                                            "mandatoryFieldNames": Immutable.List [],
                                            "reservedFieldNames": Immutable.List [],
                                            "newDesignFields": undefined,
                                            "instructions": undefined,
                                          },
                                          Immutable.Record {
                                            "name": "Run Fields",
                                            "container": undefined,
                                            "description": undefined,
                                            "domainURI": undefined,
                                            "domainId": null,
                                            "allowFileLinkProperties": true,
                                            "allowAttachmentProperties": true,
                                            "allowFlagProperties": true,
                                            "showDefaultValueSettings": false,
                                            "defaultDefaultValueType": undefined,
                                            "defaultValueOptions": Immutable.List [],
                                            "fields": Immutable.List [],
                                            "indices": Immutable.List [],
                                            "domainException": undefined,
                                            "mandatoryFieldNames": Immutable.List [],
                                            "reservedFieldNames": Immutable.List [],
                                            "newDesignFields": undefined,
                                            "instructions": undefined,
                                          },
                                          Immutable.Record {
                                            "name": "Data Fields",
                                            "container": undefined,
                                            "description": undefined,
                                            "domainURI": undefined,
                                            "domainId": null,
                                            "allowFileLinkProperties": true,
                                            "allowAttachmentProperties": true,
                                            "allowFlagProperties": true,
                                            "showDefaultValueSettings": false,
                                            "defaultDefaultValueType": undefined,
                                            "defaultValueOptions": Immutable.List [],
                                            "fields": Immutable.List [],
                                            "indices": Immutable.List [],
                                            "domainException": undefined,
                                            "mandatoryFieldNames": Immutable.List [],
                                            "reservedFieldNames": Immutable.List [],
                                            "newDesignFields": undefined,
                                            "instructions": undefined,
                                          },
                                        ],
                                        "editableResults": false,
                                        "editableRuns": false,
                                        "exception": undefined,
                                        "metadataInputFormatHelp": undefined,
                                        "moduleTransformScripts": undefined,
                                        "name": undefined,
                                        "plateMetadata": undefined,
                                        "protocolId": undefined,
                                        "protocolParameters": undefined,
                                        "protocolTransformScripts": undefined,
                                        "providerName": "General",
                                        "saveScriptFiles": false,
                                        "selectedDetectionMethod": undefined,
                                        "selectedMetadataInputFormat": undefined,
                                        "selectedPlateTemplate": undefined,
                                        "qcEnabled": undefined,
                                      }
                                    }
                                    onChange={[Function]}
                                  >
                                    <AssayPropertiesInput
                                      appPropertiesOnly={true}
                                      helpTipBody={[Function]}
                                      label="Name"
                                      required={true}
                                    >
                                      <Row
                                        bsClass="row"
                                        className="margin-top"
                                        componentClass="div"
                                      >
                                        <div
                                          className="margin-top row"
                                        >
                                          <Col
                                            bsClass="col"
                                            componentClass="div"
                                            lg={2}
                                            xs={3}
                                          >
                                            <div
                                              className="col-lg-2 col-xs-3"
                                            >
                                              <span
                                                className="domain-no-wrap"
                                              >
                                                Name
                                                 *
                                                <LabelHelpTip
                                                  body={[Function]}
                                                  customStyle={Object {}}
                                                  id="tooltip"
                                                  required={true}
                                                  size="1x"
                                                  title="Name"
                                                >
                                                  <span
                                                    className="label-help-target"
                                                    onMouseOut={[Function]}
                                                    onMouseOver={[Function]}
                                                  >
                                                    <FontAwesomeIcon
                                                      border={false}
                                                      className="label-help-icon"
                                                      fixedWidth={false}
                                                      flip={null}
                                                      icon={
                                                        Object {
                                                          "icon": Array [
                                                            512,
                                                            512,
                                                            Array [],
                                                            "f059",
                                                            "M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z",
                                                          ],
                                                          "iconName": "question-circle",
                                                          "prefix": "fas",
                                                        }
                                                      }
                                                      inverse={false}
                                                      listItem={false}
                                                      mask={null}
                                                      pull={null}
                                                      pulse={false}
                                                      rotation={null}
                                                      size="1x"
                                                      spin={false}
                                                      style={Object {}}
                                                      symbol={false}
                                                      title=""
                                                      transform={null}
                                                    >
                                                      <svg
                                                        aria-hidden="true"
                                                        className="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                                                        data-icon="question-circle"
                                                        data-prefix="fas"
                                                        focusable="false"
                                                        role="img"
                                                        style={Object {}}
                                                        viewBox="0 0 512 512"
                                                        xmlns="http://www.w3.org/2000/svg"
                                                      >
                                                        <path
                                                          d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                          fill="currentColor"
                                                          style={Object {}}
                                                        />
                                                      </svg>
                                                    </FontAwesomeIcon>
                                                    <Overlay
                                                      animation={[Function]}
                                                      placement="right"
                                                      rootClose={false}
                                                      show={false}
                                                      target={
                                                        <span
                                                          class="label-help-target"
                                                        >
                                                          <svg
                                                            aria-hidden="true"
                                                            class="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                                                            data-icon="question-circle"
                                                            data-prefix="fas"
                                                            focusable="false"
                                                            role="img"
                                                            viewBox="0 0 512 512"
                                                            xmlns="http://www.w3.org/2000/svg"
                                                          >
                                                            <path
                                                              d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                              fill="currentColor"
                                                            />
                                                          </svg>
                                                        </span>
                                                      }
                                                    >
                                                      <Overlay
                                                        placement="right"
                                                        rootClose={false}
                                                        show={false}
                                                        target={
                                                          <span
                                                            class="label-help-target"
                                                          >
                                                            <svg
                                                              aria-hidden="true"
                                                              class="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                                                              data-icon="question-circle"
                                                              data-prefix="fas"
                                                              focusable="false"
                                                              role="img"
                                                              viewBox="0 0 512 512"
                                                              xmlns="http://www.w3.org/2000/svg"
                                                            >
                                                              <path
                                                                d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                                fill="currentColor"
                                                              />
                                                            </svg>
                                                          </span>
                                                        }
                                                        transition={[Function]}
                                                      />
                                                    </Overlay>
                                                  </span>
                                                </LabelHelpTip>
                                              </span>
                                            </div>
                                          </Col>
                                          <Col
                                            bsClass="col"
                                            componentClass="div"
                                            lg={10}
                                            xs={9}
                                          >
                                            <div
                                              className="col-lg-10 col-xs-9"
                                            >
                                              <FormControl
                                                bsClass="form-control"
                                                componentClass="input"
                                                disabled={false}
                                                id="assay-design-name"
                                                onChange={[Function]}
                                                placeholder="Enter a name for this assay"
                                                type="text"
                                                value=""
                                              >
                                                <input
                                                  className="form-control"
                                                  disabled={false}
                                                  id="assay-design-name"
                                                  onChange={[Function]}
                                                  placeholder="Enter a name for this assay"
                                                  type="text"
                                                  value=""
                                                />
                                              </FormControl>
                                            </div>
                                          </Col>
                                        </div>
                                      </Row>
                                    </AssayPropertiesInput>
                                  </NameInput>
                                  <DescriptionInput
                                    appPropertiesOnly={true}
                                    model={
                                      Immutable.Record {
                                        "allowBackgroundUpload": false,
                                        "allowEditableResults": false,
                                        "allowQCStates": false,
                                        "allowSpacesInPath": false,
                                        "allowTransformationScript": false,
                                        "allowPlateMetadata": false,
                                        "autoCopyTargetContainer": undefined,
                                        "autoCopyTargetContainerId": undefined,
                                        "availableDetectionMethods": undefined,
                                        "availableMetadataInputFormats": undefined,
                                        "availablePlateTemplates": undefined,
                                        "backgroundUpload": false,
                                        "description": undefined,
                                        "domains": Immutable.List [
                                          Immutable.Record {
                                            "name": "Batch Fields",
                                            "container": undefined,
                                            "description": undefined,
                                            "domainURI": undefined,
                                            "domainId": null,
                                            "allowFileLinkProperties": true,
                                            "allowAttachmentProperties": true,
                                            "allowFlagProperties": true,
                                            "showDefaultValueSettings": false,
                                            "defaultDefaultValueType": undefined,
                                            "defaultValueOptions": Immutable.List [],
                                            "fields": Immutable.List [],
                                            "indices": Immutable.List [],
                                            "domainException": undefined,
                                            "mandatoryFieldNames": Immutable.List [],
                                            "reservedFieldNames": Immutable.List [],
                                            "newDesignFields": undefined,
                                            "instructions": undefined,
                                          },
                                          Immutable.Record {
                                            "name": "Run Fields",
                                            "container": undefined,
                                            "description": undefined,
                                            "domainURI": undefined,
                                            "domainId": null,
                                            "allowFileLinkProperties": true,
                                            "allowAttachmentProperties": true,
                                            "allowFlagProperties": true,
                                            "showDefaultValueSettings": false,
                                            "defaultDefaultValueType": undefined,
                                            "defaultValueOptions": Immutable.List [],
                                            "fields": Immutable.List [],
                                            "indices": Immutable.List [],
                                            "domainException": undefined,
                                            "mandatoryFieldNames": Immutable.List [],
                                            "reservedFieldNames": Immutable.List [],
                                            "newDesignFields": undefined,
                                            "instructions": undefined,
                                          },
                                          Immutable.Record {
                                            "name": "Data Fields",
                                            "container": undefined,
                                            "description": undefined,
                                            "domainURI": undefined,
                                            "domainId": null,
                                            "allowFileLinkProperties": true,
                                            "allowAttachmentProperties": true,
                                            "allowFlagProperties": true,
                                            "showDefaultValueSettings": false,
                                            "defaultDefaultValueType": undefined,
                                            "defaultValueOptions": Immutable.List [],
                                            "fields": Immutable.List [],
                                            "indices": Immutable.List [],
                                            "domainException": undefined,
                                            "mandatoryFieldNames": Immutable.List [],
                                            "reservedFieldNames": Immutable.List [],
                                            "newDesignFields": undefined,
                                            "instructions": undefined,
                                          },
                                        ],
                                        "editableResults": false,
                                        "editableRuns": false,
                                        "exception": undefined,
                                        "metadataInputFormatHelp": undefined,
                                        "moduleTransformScripts": undefined,
                                        "name": undefined,
                                        "plateMetadata": undefined,
                                        "protocolId": undefined,
                                        "protocolParameters": undefined,
                                        "protocolTransformScripts": undefined,
                                        "providerName": "General",
                                        "saveScriptFiles": false,
                                        "selectedDetectionMethod": undefined,
                                        "selectedMetadataInputFormat": undefined,
                                        "selectedPlateTemplate": undefined,
                                        "qcEnabled": undefined,
                                      }
                                    }
                                    onChange={[Function]}
                                  >
                                    <AssayPropertiesInput
                                      appPropertiesOnly={true}
                                      helpTipBody={[Function]}
                                      label="Description"
                                    >
                                      <Row
                                        bsClass="row"
                                        className="margin-top"
                                        componentClass="div"
                                      >
                                        <div
                                          className="margin-top row"
                                        >
                                          <Col
                                            bsClass="col"
                                            componentClass="div"
                                            lg={2}
                                            xs={3}
                                          >
                                            <div
                                              className="col-lg-2 col-xs-3"
                                            >
                                              <span
                                                className="domain-no-wrap"
                                              >
                                                Description
                                                <LabelHelpTip
                                                  body={[Function]}
                                                  customStyle={Object {}}
                                                  id="tooltip"
                                                  size="1x"
                                                  title="Description"
                                                >
                                                  <span
                                                    className="label-help-target"
                                                    onMouseOut={[Function]}
                                                    onMouseOver={[Function]}
                                                  >
                                                    <FontAwesomeIcon
                                                      border={false}
                                                      className="label-help-icon"
                                                      fixedWidth={false}
                                                      flip={null}
                                                      icon={
                                                        Object {
                                                          "icon": Array [
                                                            512,
                                                            512,
                                                            Array [],
                                                            "f059",
                                                            "M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z",
                                                          ],
                                                          "iconName": "question-circle",
                                                          "prefix": "fas",
                                                        }
                                                      }
                                                      inverse={false}
                                                      listItem={false}
                                                      mask={null}
                                                      pull={null}
                                                      pulse={false}
                                                      rotation={null}
                                                      size="1x"
                                                      spin={false}
                                                      style={Object {}}
                                                      symbol={false}
                                                      title=""
                                                      transform={null}
                                                    >
                                                      <svg
                                                        aria-hidden="true"
                                                        className="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                                                        data-icon="question-circle"
                                                        data-prefix="fas"
                                                        focusable="false"
                                                        role="img"
                                                        style={Object {}}
                                                        viewBox="0 0 512 512"
                                                        xmlns="http://www.w3.org/2000/svg"
                                                      >
                                                        <path
                                                          d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                          fill="currentColor"
                                                          style={Object {}}
                                                        />
                                                      </svg>
                                                    </FontAwesomeIcon>
                                                    <Overlay
                                                      animation={[Function]}
                                                      placement="right"
                                                      rootClose={false}
                                                      show={false}
                                                      target={
                                                        <span
                                                          class="label-help-target"
                                                        >
                                                          <svg
                                                            aria-hidden="true"
                                                            class="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                                                            data-icon="question-circle"
                                                            data-prefix="fas"
                                                            focusable="false"
                                                            role="img"
                                                            viewBox="0 0 512 512"
                                                            xmlns="http://www.w3.org/2000/svg"
                                                          >
                                                            <path
                                                              d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                              fill="currentColor"
                                                            />
                                                          </svg>
                                                        </span>
                                                      }
                                                    >
                                                      <Overlay
                                                        placement="right"
                                                        rootClose={false}
                                                        show={false}
                                                        target={
                                                          <span
                                                            class="label-help-target"
                                                          >
                                                            <svg
                                                              aria-hidden="true"
                                                              class="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                                                              data-icon="question-circle"
                                                              data-prefix="fas"
                                                              focusable="false"
                                                              role="img"
                                                              viewBox="0 0 512 512"
                                                              xmlns="http://www.w3.org/2000/svg"
                                                            >
                                                              <path
                                                                d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                                fill="currentColor"
                                                              />
                                                            </svg>
                                                          </span>
                                                        }
                                                        transition={[Function]}
                                                      />
                                                    </Overlay>
                                                  </span>
                                                </LabelHelpTip>
                                              </span>
                                            </div>
                                          </Col>
                                          <Col
                                            bsClass="col"
                                            componentClass="div"
                                            lg={10}
                                            xs={9}
                                          >
                                            <div
                                              className="col-lg-10 col-xs-9"
                                            >
                                              <textarea
                                                className="form-control textarea-noresize"
                                                id="assay-design-description"
                                                onChange={[Function]}
                                                value=""
                                              />
                                            </div>
                                          </Col>
                                        </div>
                                      </Row>
                                    </AssayPropertiesInput>
                                  </DescriptionInput>
                                </div>
                                <div
                                  className="domain-field-padding-bottom"
                                >
                                  <SectionHeading
                                    title="Editing Settings"
                                  >
                                    <Row
                                      bsClass="row"
                                      componentClass="div"
                                    >
                                      <div
                                        className="row"
                                      >
                                        <Col
                                          bsClass="col"
                                          componentClass="div"
                                          xs={12}
                                        >
                                          <div
                                            className="col-xs-12"
                                          >
                                            <div
                                              className="domain-field-section-heading"
                                            >
                                              Editing Settings
                                            </div>
                                          </div>
                                        </Col>
                                      </div>
                                    </Row>
                                  </SectionHeading>
                                  <EditableRunsInput
                                    appPropertiesOnly={true}
                                    model={
                                      Immutable.Record {
                                        "allowBackgroundUpload": false,
                                        "allowEditableResults": false,
                                        "allowQCStates": false,
                                        "allowSpacesInPath": false,
                                        "allowTransformationScript": false,
                                        "allowPlateMetadata": false,
                                        "autoCopyTargetContainer": undefined,
                                        "autoCopyTargetContainerId": undefined,
                                        "availableDetectionMethods": undefined,
                                        "availableMetadataInputFormats": undefined,
                                        "availablePlateTemplates": undefined,
                                        "backgroundUpload": false,
                                        "description": undefined,
                                        "domains": Immutable.List [
                                          Immutable.Record {
                                            "name": "Batch Fields",
                                            "container": undefined,
                                            "description": undefined,
                                            "domainURI": undefined,
                                            "domainId": null,
                                            "allowFileLinkProperties": true,
                                            "allowAttachmentProperties": true,
                                            "allowFlagProperties": true,
                                            "showDefaultValueSettings": false,
                                            "defaultDefaultValueType": undefined,
                                            "defaultValueOptions": Immutable.List [],
                                            "fields": Immutable.List [],
                                            "indices": Immutable.List [],
                                            "domainException": undefined,
                                            "mandatoryFieldNames": Immutable.List [],
                                            "reservedFieldNames": Immutable.List [],
                                            "newDesignFields": undefined,
                                            "instructions": undefined,
                                          },
                                          Immutable.Record {
                                            "name": "Run Fields",
                                            "container": undefined,
                                            "description": undefined,
                                            "domainURI": undefined,
                                            "domainId": null,
                                            "allowFileLinkProperties": true,
                                            "allowAttachmentProperties": true,
                                            "allowFlagProperties": true,
                                            "showDefaultValueSettings": false,
                                            "defaultDefaultValueType": undefined,
                                            "defaultValueOptions": Immutable.List [],
                                            "fields": Immutable.List [],
                                            "indices": Immutable.List [],
                                            "domainException": undefined,
                                            "mandatoryFieldNames": Immutable.List [],
                                            "reservedFieldNames": Immutable.List [],
                                            "newDesignFields": undefined,
                                            "instructions": undefined,
                                          },
                                          Immutable.Record {
                                            "name": "Data Fields",
                                            "container": undefined,
                                            "description": undefined,
                                            "domainURI": undefined,
                                            "domainId": null,
                                            "allowFileLinkProperties": true,
                                            "allowAttachmentProperties": true,
                                            "allowFlagProperties": true,
                                            "showDefaultValueSettings": false,
                                            "defaultDefaultValueType": undefined,
                                            "defaultValueOptions": Immutable.List [],
                                            "fields": Immutable.List [],
                                            "indices": Immutable.List [],
                                            "domainException": undefined,
                                            "mandatoryFieldNames": Immutable.List [],
                                            "reservedFieldNames": Immutable.List [],
                                            "newDesignFields": undefined,
                                            "instructions": undefined,
                                          },
                                        ],
                                        "editableResults": false,
                                        "editableRuns": false,
                                        "exception": undefined,
                                        "metadataInputFormatHelp": undefined,
                                        "moduleTransformScripts": undefined,
                                        "name": undefined,
                                        "plateMetadata": undefined,
                                        "protocolId": undefined,
                                        "protocolParameters": undefined,
                                        "protocolTransformScripts": undefined,
                                        "providerName": "General",
                                        "saveScriptFiles": false,
                                        "selectedDetectionMethod": undefined,
                                        "selectedMetadataInputFormat": undefined,
                                        "selectedPlateTemplate": undefined,
                                        "qcEnabled": undefined,
                                      }
                                    }
                                    onChange={[Function]}
                                  >
                                    <AssayPropertiesInput
                                      appPropertiesOnly={true}
                                      helpTipBody={[Function]}
                                      label="Editable Runs"
                                    >
                                      <Row
                                        bsClass="row"
                                        className="margin-top"
                                        componentClass="div"
                                      >
                                        <div
                                          className="margin-top row"
                                        >
                                          <Col
                                            bsClass="col"
                                            componentClass="div"
                                            lg={2}
                                            xs={3}
                                          >
                                            <div
                                              className="col-lg-2 col-xs-3"
                                            >
                                              Editable 
                                              <span
                                                className="domain-no-wrap"
                                              >
                                                Runs
                                                <LabelHelpTip
                                                  body={[Function]}
                                                  customStyle={Object {}}
                                                  id="tooltip"
                                                  size="1x"
                                                  title="Editable Runs"
                                                >
                                                  <span
                                                    className="label-help-target"
                                                    onMouseOut={[Function]}
                                                    onMouseOver={[Function]}
                                                  >
                                                    <FontAwesomeIcon
                                                      border={false}
                                                      className="label-help-icon"
                                                      fixedWidth={false}
                                                      flip={null}
                                                      icon={
                                                        Object {
                                                          "icon": Array [
                                                            512,
                                                            512,
                                                            Array [],
                                                            "f059",
                                                            "M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z",
                                                          ],
                                                          "iconName": "question-circle",
                                                          "prefix": "fas",
                                                        }
                                                      }
                                                      inverse={false}
                                                      listItem={false}
                                                      mask={null}
                                                      pull={null}
                                                      pulse={false}
                                                      rotation={null}
                                                      size="1x"
                                                      spin={false}
                                                      style={Object {}}
                                                      symbol={false}
                                                      title=""
                                                      transform={null}
                                                    >
                                                      <svg
                                                        aria-hidden="true"
                                                        className="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                                                        data-icon="question-circle"
                                                        data-prefix="fas"
                                                        focusable="false"
                                                        role="img"
                                                        style={Object {}}
                                                        viewBox="0 0 512 512"
                                                        xmlns="http://www.w3.org/2000/svg"
                                                      >
                                                        <path
                                                          d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                          fill="currentColor"
                                                          style={Object {}}
                                                        />
                                                      </svg>
                                                    </FontAwesomeIcon>
                                                    <Overlay
                                                      animation={[Function]}
                                                      placement="right"
                                                      rootClose={false}
                                                      show={false}
                                                      target={
                                                        <span
                                                          class="label-help-target"
                                                        >
                                                          <svg
                                                            aria-hidden="true"
                                                            class="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                                                            data-icon="question-circle"
                                                            data-prefix="fas"
                                                            focusable="false"
                                                            role="img"
                                                            viewBox="0 0 512 512"
                                                            xmlns="http://www.w3.org/2000/svg"
                                                          >
                                                            <path
                                                              d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                              fill="currentColor"
                                                            />
                                                          </svg>
                                                        </span>
                                                      }
                                                    >
                                                      <Overlay
                                                        placement="right"
                                                        rootClose={false}
                                                        show={false}
                                                        target={
                                                          <span
                                                            class="label-help-target"
                                                          >
                                                            <svg
                                                              aria-hidden="true"
                                                              class="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                                                              data-icon="question-circle"
                                                              data-prefix="fas"
                                                              focusable="false"
                                                              role="img"
                                                              viewBox="0 0 512 512"
                                                              xmlns="http://www.w3.org/2000/svg"
                                                            >
                                                              <path
                                                                d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                                fill="currentColor"
                                                              />
                                                            </svg>
                                                          </span>
                                                        }
                                                        transition={[Function]}
                                                      />
                                                    </Overlay>
                                                  </span>
                                                </LabelHelpTip>
                                              </span>
                                            </div>
                                          </Col>
                                          <Col
                                            bsClass="col"
                                            componentClass="div"
                                            lg={10}
                                            xs={9}
                                          >
                                            <div
                                              className="col-lg-10 col-xs-9"
                                            >
                                              <input
                                                checked={false}
                                                id="assay-design-editableRuns"
                                                onChange={[Function]}
                                                type="checkbox"
                                              />
                                            </div>
                                          </Col>
                                        </div>
                                      </Row>
                                    </AssayPropertiesInput>
                                  </EditableRunsInput>
                                </div>
                              </div>
                            </Col>
                            <Col
                              bsClass="col"
                              componentClass="div"
                              lg={6}
                              xs={12}
                            >
                              <div
                                className="col-lg-6 col-xs-12"
                              />
                            </Col>
                          </form>
                        </Form>
                      </div>
                    </div>
                  </Transition>
                </Collapse>
              </PanelCollapse>
            </PanelBody>
          </div>
        </Panel>
      </Uncontrolled(Panel)>
    </AssayPropertiesPanelImpl>
  </ComponentWithDomainPropertiesPanelCollapse>
  <DomainForm
    appPropertiesOnly={true}
    controlledCollapse={true}
    domain={
      Immutable.Record {
        "name": "Batch Fields",
        "container": undefined,
        "description": undefined,
        "domainURI": undefined,
        "domainId": null,
        "allowFileLinkProperties": true,
        "allowAttachmentProperties": true,
        "allowFlagProperties": true,
        "showDefaultValueSettings": false,
        "defaultDefaultValueType": undefined,
        "defaultValueOptions": Immutable.List [],
        "fields": Immutable.List [],
        "indices": Immutable.List [],
        "domainException": undefined,
        "mandatoryFieldNames": Immutable.List [],
        "reservedFieldNames": Immutable.List [],
        "newDesignFields": undefined,
        "instructions": undefined,
      }
    }
    domainIndex={0}
    helpTopic={null}
    initCollapsed={true}
    key="0"
    modelDomains={
      Immutable.List [
        Immutable.Record {
          "name": "Batch Fields",
          "container": undefined,
          "description": undefined,
          "domainURI": undefined,
          "domainId": null,
          "allowFileLinkProperties": true,
          "allowAttachmentProperties": true,
          "allowFlagProperties": true,
          "showDefaultValueSettings": false,
          "defaultDefaultValueType": undefined,
          "defaultValueOptions": Immutable.List [],
          "fields": Immutable.List [],
          "indices": Immutable.List [],
          "domainException": undefined,
          "mandatoryFieldNames": Immutable.List [],
          "reservedFieldNames": Immutable.List [],
          "newDesignFields": undefined,
          "instructions": undefined,
        },
        Immutable.Record {
          "name": "Run Fields",
          "container": undefined,
          "description": undefined,
          "domainURI": undefined,
          "domainId": null,
          "allowFileLinkProperties": true,
          "allowAttachmentProperties": true,
          "allowFlagProperties": true,
          "showDefaultValueSettings": false,
          "defaultDefaultValueType": undefined,
          "defaultValueOptions": Immutable.List [],
          "fields": Immutable.List [],
          "indices": Immutable.List [],
          "domainException": undefined,
          "mandatoryFieldNames": Immutable.List [],
          "reservedFieldNames": Immutable.List [],
          "newDesignFields": undefined,
          "instructions": undefined,
        },
        Immutable.Record {
          "name": "Data Fields",
          "container": undefined,
          "description": undefined,
          "domainURI": undefined,
          "domainId": null,
          "allowFileLinkProperties": true,
          "allowAttachmentProperties": true,
          "allowFlagProperties": true,
          "showDefaultValueSettings": false,
          "defaultDefaultValueType": undefined,
          "defaultValueOptions": Immutable.List [],
          "fields": Immutable.List [],
          "indices": Immutable.List [],
          "domainException": undefined,
          "mandatoryFieldNames": Immutable.List [],
          "reservedFieldNames": Immutable.List [],
          "newDesignFields": undefined,
          "instructions": undefined,
        },
      ]
    }
    onChange={[Function]}
    onToggle={[Function]}
    panelStatus="TODO"
    showFilePropertyType={true}
    showInferFromFile={false}
    validate={false}
  >
    <LookupProvider>
      <DomainFormImpl
        appPropertiesOnly={true}
        controlledCollapse={true}
        domain={
          Immutable.Record {
            "name": "Batch Fields",
            "container": undefined,
            "description": undefined,
            "domainURI": undefined,
            "domainId": null,
            "allowFileLinkProperties": true,
            "allowAttachmentProperties": true,
            "allowFlagProperties": true,
            "showDefaultValueSettings": false,
            "defaultDefaultValueType": undefined,
            "defaultValueOptions": Immutable.List [],
            "fields": Immutable.List [],
            "indices": Immutable.List [],
            "domainException": undefined,
            "mandatoryFieldNames": Immutable.List [],
            "reservedFieldNames": Immutable.List [],
            "newDesignFields": undefined,
            "instructions": undefined,
          }
        }
        domainFormDisplayOptions={
          Object {
            "isDragDisabled": false,
            "phiLevelDisabled": false,
            "showAddFieldsButton": true,
            "showRequired": true,
            "showTextOptions": true,
            "showValidators": true,
          }
        }
        domainIndex={0}
        helpNoun="field designer"
        helpTopic={null}
        initCollapsed={true}
        isNew={false}
        modelDomains={
          Immutable.List [
            Immutable.Record {
              "name": "Batch Fields",
              "container": undefined,
              "description": undefined,
              "domainURI": undefined,
              "domainId": null,
              "allowFileLinkProperties": true,
              "allowAttachmentProperties": true,
              "allowFlagProperties": true,
              "showDefaultValueSettings": false,
              "defaultDefaultValueType": undefined,
              "defaultValueOptions": Immutable.List [],
              "fields": Immutable.List [],
              "indices": Immutable.List [],
              "domainException": undefined,
              "mandatoryFieldNames": Immutable.List [],
              "reservedFieldNames": Immutable.List [],
              "newDesignFields": undefined,
              "instructions": undefined,
            },
            Immutable.Record {
              "name": "Run Fields",
              "container": undefined,
              "description": undefined,
              "domainURI": undefined,
              "domainId": null,
              "allowFileLinkProperties": true,
              "allowAttachmentProperties": true,
              "allowFlagProperties": true,
              "showDefaultValueSettings": false,
              "defaultDefaultValueType": undefined,
              "defaultValueOptions": Immutable.List [],
              "fields": Immutable.List [],
              "indices": Immutable.List [],
              "domainException": undefined,
              "mandatoryFieldNames": Immutable.List [],
              "reservedFieldNames": Immutable.List [],
              "newDesignFields": undefined,
              "instructions": undefined,
            },
            Immutable.Record {
              "name": "Data Fields",
              "container": undefined,
              "description": undefined,
              "domainURI": undefined,
              "domainId": null,
              "allowFileLinkProperties": true,
              "allowAttachmentProperties": true,
              "allowFlagProperties": true,
              "showDefaultValueSettings": false,
              "defaultDefaultValueType": undefined,
              "defaultValueOptions": Immutable.List [],
              "fields": Immutable.List [],
              "indices": Immutable.List [],
              "domainException": undefined,
              "mandatoryFieldNames": Immutable.List [],
              "reservedFieldNames": Immutable.List [],
              "newDesignFields": undefined,
              "instructions": undefined,
            },
          ]
        }
        onChange={[Function]}
        onToggle={[Function]}
        panelStatus="TODO"
        showFilePropertyType={true}
        showHeader={true}
        showInferFromFile={false}
        successBsStyle="success"
        validate={false}
      >
        <Uncontrolled(Panel)
          className="domain-form-panel"
          expanded={false}
          onToggle={[Function]}
        >
          <Panel
            bsClass="panel"
            bsStyle="default"
            className="domain-form-panel"
            expanded={false}
            onToggle={[Function]}
          >
            <div
              className="domain-form-panel panel panel-default"
            >
              <CollapsiblePanelHeader
                collapsed={true}
                controlledCollapse={true}
                id="domainpropertiesrow-Batch-Fields-hdr"
                isValid={true}
                panelStatus="TODO"
                title="Batch Fields"
                togglePanel={[Function]}
              >
                <PanelHeading
                  bsClass="panel"
                  className="domain-panel-header domain-heading-collapsible domain-panel-header-collapsed"
                  componentClass="div"
                  id="domainpropertiesrow-Batch-Fields-hdr"
                  onClick={[Function]}
                >
                  <div
                    className="domain-panel-header domain-heading-collapsible domain-panel-header-collapsed panel-heading"
                    id="domainpropertiesrow-Batch-Fields-hdr"
                    onClick={[Function]}
                  >
                    <LabelHelpTip
                      body={[Function]}
                      customStyle={Object {}}
                      iconComponent={[Function]}
                      id="tooltip"
                      placement="top"
                      size="1x"
                      title="Batch Fields"
                    >
                      <span
                        className="label-help-target"
                        onMouseOut={[Function]}
                        onMouseOver={[Function]}
                      >
                        <span
                          className="domain-panel-status-icon domain-panel-status-icon-blue"
                        >
                          <FontAwesomeIcon
                            border={false}
                            className=""
                            fixedWidth={false}
                            flip={null}
                            icon={
                              Object {
                                "icon": Array [
                                  512,
                                  512,
                                  Array [],
                                  "f06a",
                                  "M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zm-248 50c-25.405 0-46 20.595-46 46s20.595 46 46 46 46-20.595 46-46-20.595-46-46-46zm-43.673-165.346l7.418 136c.347 6.364 5.609 11.346 11.982 11.346h48.546c6.373 0 11.635-4.982 11.982-11.346l7.418-136c.375-6.874-5.098-12.654-11.982-12.654h-63.383c-6.884 0-12.356 5.78-11.981 12.654z",
                                ],
                                "iconName": "exclamation-circle",
                                "prefix": "fas",
                              }
                            }
                            inverse={false}
                            listItem={false}
                            mask={null}
                            pull={null}
                            pulse={false}
                            rotation={null}
                            size={null}
                            spin={false}
                            symbol={false}
                            title=""
                            transform={null}
                          >
                            <svg
                              aria-hidden="true"
                              className="svg-inline--fa fa-exclamation-circle fa-w-16 "
                              data-icon="exclamation-circle"
                              data-prefix="fas"
                              focusable="false"
                              role="img"
                              style={Object {}}
                              viewBox="0 0 512 512"
                              xmlns="http://www.w3.org/2000/svg"
                            >
                              <path
                                d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zm-248 50c-25.405 0-46 20.595-46 46s20.595 46 46 46 46-20.595 46-46-20.595-46-46-46zm-43.673-165.346l7.418 136c.347 6.364 5.609 11.346 11.982 11.346h48.546c6.373 0 11.635-4.982 11.982-11.346l7.418-136c.375-6.874-5.098-12.654-11.982-12.654h-63.383c-6.884 0-12.356 5.78-11.981 12.654z"
                                fill="currentColor"
                                style={Object {}}
                              />
                            </svg>
                          </FontAwesomeIcon>
                        </span>
                        <Overlay
                          animation={[Function]}
                          placement="top"
                          rootClose={false}
                          show={false}
                          target={
                            <span
                              class="label-help-target"
                            >
                              <span
                                class="domain-panel-status-icon domain-panel-status-icon-blue"
                              >
                                <svg
                                  aria-hidden="true"
                                  class="svg-inline--fa fa-exclamation-circle fa-w-16 "
                                  data-icon="exclamation-circle"
                                  data-prefix="fas"
                                  focusable="false"
                                  role="img"
                                  viewBox="0 0 512 512"
                                  xmlns="http://www.w3.org/2000/svg"
                                >
                                  <path
                                    d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zm-248 50c-25.405 0-46 20.595-46 46s20.595 46 46 46 46-20.595 46-46-20.595-46-46-46zm-43.673-165.346l7.418 136c.347 6.364 5.609 11.346 11.982 11.346h48.546c6.373 0 11.635-4.982 11.982-11.346l7.418-136c.375-6.874-5.098-12.654-11.982-12.654h-63.383c-6.884 0-12.356 5.78-11.981 12.654z"
                                    fill="currentColor"
                                  />
                                </svg>
                              </span>
                            </span>
                          }
                        >
                          <Overlay
                            placement="top"
                            rootClose={false}
                            show={false}
                            target={
                              <span
                                class="label-help-target"
                              >
                                <span
                                  class="domain-panel-status-icon domain-panel-status-icon-blue"
                                >
                                  <svg
                                    aria-hidden="true"
                                    class="svg-inline--fa fa-exclamation-circle fa-w-16 "
                                    data-icon="exclamation-circle"
                                    data-prefix="fas"
                                    focusable="false"
                                    role="img"
                                    viewBox="0 0 512 512"
                                    xmlns="http://www.w3.org/2000/svg"
                                  >
                                    <path
                                      d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zm-248 50c-25.405 0-46 20.595-46 46s20.595 46 46 46 46-20.595 46-46-20.595-46-46-46zm-43.673-165.346l7.418 136c.347 6.364 5.609 11.346 11.982 11.346h48.546c6.373 0 11.635-4.982 11.982-11.346l7.418-136c.375-6.874-5.098-12.654-11.982-12.654h-63.383c-6.884 0-12.356 5.78-11.981 12.654z"
                                      fill="currentColor"
                                    />
                                  </svg>
                                </span>
                              </span>
                            }
                            transition={[Function]}
                          />
                        </Overlay>
                      </span>
                    </LabelHelpTip>
                    <span
                      className="domain-panel-title"
                    >
                      Batch Fields
                    </span>
                    <span
                      className="pull-right"
                    >
                      <FontAwesomeIcon
                        border={false}
                        className="domain-form-expand-btn"
                        fixedWidth={false}
                        flip={null}
                        icon={
                          Object {
                            "icon": Array [
                              448,
                              512,
                              Array [],
                              "f0fe",
                              "M400 32H48C21.5 32 0 53.5 0 80v352c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V80c0-26.5-21.5-48-48-48zm-32 252c0 6.6-5.4 12-12 12h-92v92c0 6.6-5.4 12-12 12h-56c-6.6 0-12-5.4-12-12v-92H92c-6.6 0-12-5.4-12-12v-56c0-6.6 5.4-12 12-12h92v-92c0-6.6 5.4-12 12-12h56c6.6 0 12 5.4 12 12v92h92c6.6 0 12 5.4 12 12v56z",
                            ],
                            "iconName": "plus-square",
                            "prefix": "fas",
                          }
                        }
                        inverse={false}
                        listItem={false}
                        mask={null}
                        pull={null}
                        pulse={false}
                        rotation={null}
                        size="lg"
                        spin={false}
                        symbol={false}
                        title=""
                        transform={null}
                      >
                        <svg
                          aria-hidden="true"
                          className="svg-inline--fa fa-plus-square fa-w-14 fa-lg domain-form-expand-btn"
                          data-icon="plus-square"
                          data-prefix="fas"
                          focusable="false"
                          role="img"
                          style={Object {}}
                          viewBox="0 0 448 512"
                          xmlns="http://www.w3.org/2000/svg"
                        >
                          <path
                            d="M400 32H48C21.5 32 0 53.5 0 80v352c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V80c0-26.5-21.5-48-48-48zm-32 252c0 6.6-5.4 12-12 12h-92v92c0 6.6-5.4 12-12 12h-56c-6.6 0-12-5.4-12-12v-92H92c-6.6 0-12-5.4-12-12v-56c0-6.6 5.4-12 12-12h92v-92c0-6.6 5.4-12 12-12h56c6.6 0 12 5.4 12 12v92h92c6.6 0 12 5.4 12 12v56z"
                            fill="currentColor"
                            style={Object {}}
                          />
                        </svg>
                      </FontAwesomeIcon>
                    </span>
                    <LabelHelpTip
                      body={[Function]}
                      customStyle={
                        Object {
                          "marginLeft": "5px",
                          "verticalAlign": "top",
                        }
                      }
                      id="tooltip"
                      placement="top"
                      size="1x"
                      title="Batch Fields"
                    >
                      <span
                        className="label-help-target"
                        onMouseOut={[Function]}
                        onMouseOver={[Function]}
                      >
                        <FontAwesomeIcon
                          border={false}
                          className="label-help-icon"
                          fixedWidth={false}
                          flip={null}
                          icon={
                            Object {
                              "icon": Array [
                                512,
                                512,
                                Array [],
                                "f059",
                                "M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z",
                              ],
                              "iconName": "question-circle",
                              "prefix": "fas",
                            }
                          }
                          inverse={false}
                          listItem={false}
                          mask={null}
                          pull={null}
                          pulse={false}
                          rotation={null}
                          size="1x"
                          spin={false}
                          style={
                            Object {
                              "marginLeft": "5px",
                              "verticalAlign": "top",
                            }
                          }
                          symbol={false}
                          title=""
                          transform={null}
                        >
                          <svg
                            aria-hidden="true"
                            className="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                            data-icon="question-circle"
                            data-prefix="fas"
                            focusable="false"
                            role="img"
                            style={
                              Object {
                                "marginLeft": "5px",
                                "verticalAlign": "top",
                              }
                            }
                            viewBox="0 0 512 512"
                            xmlns="http://www.w3.org/2000/svg"
                          >
                            <path
                              d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                              fill="currentColor"
                              style={Object {}}
                            />
                          </svg>
                        </FontAwesomeIcon>
                        <Overlay
                          animation={[Function]}
                          placement="top"
                          rootClose={false}
                          show={false}
                          target={
                            <span
                              class="label-help-target"
                            >
                              <svg
                                aria-hidden="true"
                                class="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                                data-icon="question-circle"
                                data-prefix="fas"
                                focusable="false"
                                role="img"
                                style="vertical-align: top; margin-left: 5px;"
                                viewBox="0 0 512 512"
                                xmlns="http://www.w3.org/2000/svg"
                              >
                                <path
                                  d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                  fill="currentColor"
                                />
                              </svg>
                            </span>
                          }
                        >
                          <Overlay
                            placement="top"
                            rootClose={false}
                            show={false}
                            target={
                              <span
                                class="label-help-target"
                              >
                                <svg
                                  aria-hidden="true"
                                  class="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                                  data-icon="question-circle"
                                  data-prefix="fas"
                                  focusable="false"
                                  role="img"
                                  style="vertical-align: top; margin-left: 5px;"
                                  viewBox="0 0 512 512"
                                  xmlns="http://www.w3.org/2000/svg"
                                >
                                  <path
                                    d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                    fill="currentColor"
                                  />
                                </svg>
                              </span>
                            }
                            transition={[Function]}
                          />
                        </Overlay>
                      </span>
                    </LabelHelpTip>
                  </div>
                </PanelHeading>
              </CollapsiblePanelHeader>
              <PanelBody
                bsClass="panel"
                collapsible={true}
              >
                <PanelCollapse
                  bsClass="panel"
                >
                  <Collapse
                    appear={false}
                    dimension="height"
                    getDimensionValue={[Function]}
                    in={false}
                    mountOnEnter={false}
                    timeout={300}
                    unmountOnExit={false}
                  >
                    <Transition
                      appear={false}
                      aria-expanded={null}
                      enter={true}
                      exit={true}
                      in={false}
                      mountOnEnter={false}
                      onEnter={[Function]}
                      onEntered={[Function]}
                      onEntering={[Function]}
                      onExit={[Function]}
                      onExited={[Function]}
                      onExiting={[Function]}
                      timeout={300}
                      unmountOnExit={false}
                    >
                      <div
                        aria-expanded={null}
                        className="panel-collapse collapse"
                      >
                        <div
                          className="panel-body"
                        >
                          <Row
                            bsClass="row"
                            className=""
                            componentClass="div"
                          >
                            <div
                              className="row"
                            >
                              <Col
                                bsClass="col"
                                componentClass="div"
                                xs={12}
                              >
                                <div
                                  className="col-xs-12"
                                />
                              </Col>
                            </div>
                          </Row>
                          <Uncontrolled(Panel)
                            className="domain-form-no-field-panel"
                          >
                            <Panel
                              bsClass="panel"
                              bsStyle="default"
                              className="domain-form-no-field-panel"
                              onToggle={[Function]}
                            >
                              <div
                                className="domain-form-no-field-panel panel panel-default"
                              >
                                No fields created yet. Add some using the button below.
                              </div>
                            </Panel>
                          </Uncontrolled(Panel)>
                          <Row
                            bsClass="row"
                            className="domain-add-field-row"
                            componentClass="div"
                          >
                            <div
                              className="domain-add-field-row row"
                            >
                              <Col
                                bsClass="col"
                                componentClass="div"
                                xs={12}
                              >
                                <div
                                  className="col-xs-12"
                                >
                                  <AddEntityButton
                                    buttonClass="domain-form-add-btn"
                                    containerClass="form-group"
                                    entity="Field"
                                    helperTitle="More Info"
                                    onClick={[Function]}
                                  >
                                    <div
                                      className="form-group"
                                    >
                                      <div
                                        className="domain-form-add-btn"
                                      >
                                        <span
                                          className="container--action-button btn btn-default"
                                          onClick={[Function]}
                                        >
                                          <i
                                            className="fa fa-plus-circle container--addition-icon"
                                          />
                                           Add 
                                          Field
                                        </span>
                                      </div>
                                    </div>
                                  </AddEntityButton>
                                </div>
                              </Col>
                            </div>
                          </Row>
                        </div>
                      </div>
                    </Transition>
                  </Collapse>
                </PanelCollapse>
              </PanelBody>
            </div>
          </Panel>
        </Uncontrolled(Panel)>
      </DomainFormImpl>
    </LookupProvider>
  </DomainForm>
  <DomainForm
    appPropertiesOnly={true}
    controlledCollapse={true}
    domain={
      Immutable.Record {
        "name": "Run Fields",
        "container": undefined,
        "description": undefined,
        "domainURI": undefined,
        "domainId": null,
        "allowFileLinkProperties": true,
        "allowAttachmentProperties": true,
        "allowFlagProperties": true,
        "showDefaultValueSettings": false,
        "defaultDefaultValueType": undefined,
        "defaultValueOptions": Immutable.List [],
        "fields": Immutable.List [],
        "indices": Immutable.List [],
        "domainException": undefined,
        "mandatoryFieldNames": Immutable.List [],
        "reservedFieldNames": Immutable.List [],
        "newDesignFields": undefined,
        "instructions": undefined,
      }
    }
    domainIndex={1}
    helpTopic={null}
    initCollapsed={true}
    key="1"
    modelDomains={
      Immutable.List [
        Immutable.Record {
          "name": "Batch Fields",
          "container": undefined,
          "description": undefined,
          "domainURI": undefined,
          "domainId": null,
          "allowFileLinkProperties": true,
          "allowAttachmentProperties": true,
          "allowFlagProperties": true,
          "showDefaultValueSettings": false,
          "defaultDefaultValueType": undefined,
          "defaultValueOptions": Immutable.List [],
          "fields": Immutable.List [],
          "indices": Immutable.List [],
          "domainException": undefined,
          "mandatoryFieldNames": Immutable.List [],
          "reservedFieldNames": Immutable.List [],
          "newDesignFields": undefined,
          "instructions": undefined,
        },
        Immutable.Record {
          "name": "Run Fields",
          "container": undefined,
          "description": undefined,
          "domainURI": undefined,
          "domainId": null,
          "allowFileLinkProperties": true,
          "allowAttachmentProperties": true,
          "allowFlagProperties": true,
          "showDefaultValueSettings": false,
          "defaultDefaultValueType": undefined,
          "defaultValueOptions": Immutable.List [],
          "fields": Immutable.List [],
          "indices": Immutable.List [],
          "domainException": undefined,
          "mandatoryFieldNames": Immutable.List [],
          "reservedFieldNames": Immutable.List [],
          "newDesignFields": undefined,
          "instructions": undefined,
        },
        Immutable.Record {
          "name": "Data Fields",
          "container": undefined,
          "description": undefined,
          "domainURI": undefined,
          "domainId": null,
          "allowFileLinkProperties": true,
          "allowAttachmentProperties": true,
          "allowFlagProperties": true,
          "showDefaultValueSettings": false,
          "defaultDefaultValueType": undefined,
          "defaultValueOptions": Immutable.List [],
          "fields": Immutable.List [],
          "indices": Immutable.List [],
          "domainException": undefined,
          "mandatoryFieldNames": Immutable.List [],
          "reservedFieldNames": Immutable.List [],
          "newDesignFields": undefined,
          "instructions": undefined,
        },
      ]
    }
    onChange={[Function]}
    onToggle={[Function]}
    panelStatus="TODO"
    showFilePropertyType={true}
    showInferFromFile={false}
    validate={false}
  >
    <LookupProvider>
      <DomainFormImpl
        appPropertiesOnly={true}
        controlledCollapse={true}
        domain={
          Immutable.Record {
            "name": "Run Fields",
            "container": undefined,
            "description": undefined,
            "domainURI": undefined,
            "domainId": null,
            "allowFileLinkProperties": true,
            "allowAttachmentProperties": true,
            "allowFlagProperties": true,
            "showDefaultValueSettings": false,
            "defaultDefaultValueType": undefined,
            "defaultValueOptions": Immutable.List [],
            "fields": Immutable.List [],
            "indices": Immutable.List [],
            "domainException": undefined,
            "mandatoryFieldNames": Immutable.List [],
            "reservedFieldNames": Immutable.List [],
            "newDesignFields": undefined,
            "instructions": undefined,
          }
        }
        domainFormDisplayOptions={
          Object {
            "isDragDisabled": false,
            "phiLevelDisabled": false,
            "showAddFieldsButton": true,
            "showRequired": true,
            "showTextOptions": true,
            "showValidators": true,
          }
        }
        domainIndex={1}
        helpNoun="field designer"
        helpTopic={null}
        initCollapsed={true}
        isNew={false}
        modelDomains={
          Immutable.List [
            Immutable.Record {
              "name": "Batch Fields",
              "container": undefined,
              "description": undefined,
              "domainURI": undefined,
              "domainId": null,
              "allowFileLinkProperties": true,
              "allowAttachmentProperties": true,
              "allowFlagProperties": true,
              "showDefaultValueSettings": false,
              "defaultDefaultValueType": undefined,
              "defaultValueOptions": Immutable.List [],
              "fields": Immutable.List [],
              "indices": Immutable.List [],
              "domainException": undefined,
              "mandatoryFieldNames": Immutable.List [],
              "reservedFieldNames": Immutable.List [],
              "newDesignFields": undefined,
              "instructions": undefined,
            },
            Immutable.Record {
              "name": "Run Fields",
              "container": undefined,
              "description": undefined,
              "domainURI": undefined,
              "domainId": null,
              "allowFileLinkProperties": true,
              "allowAttachmentProperties": true,
              "allowFlagProperties": true,
              "showDefaultValueSettings": false,
              "defaultDefaultValueType": undefined,
              "defaultValueOptions": Immutable.List [],
              "fields": Immutable.List [],
              "indices": Immutable.List [],
              "domainException": undefined,
              "mandatoryFieldNames": Immutable.List [],
              "reservedFieldNames": Immutable.List [],
              "newDesignFields": undefined,
              "instructions": undefined,
            },
            Immutable.Record {
              "name": "Data Fields",
              "container": undefined,
              "description": undefined,
              "domainURI": undefined,
              "domainId": null,
              "allowFileLinkProperties": true,
              "allowAttachmentProperties": true,
              "allowFlagProperties": true,
              "showDefaultValueSettings": false,
              "defaultDefaultValueType": undefined,
              "defaultValueOptions": Immutable.List [],
              "fields": Immutable.List [],
              "indices": Immutable.List [],
              "domainException": undefined,
              "mandatoryFieldNames": Immutable.List [],
              "reservedFieldNames": Immutable.List [],
              "newDesignFields": undefined,
              "instructions": undefined,
            },
          ]
        }
        onChange={[Function]}
        onToggle={[Function]}
        panelStatus="TODO"
        showFilePropertyType={true}
        showHeader={true}
        showInferFromFile={false}
        successBsStyle="success"
        validate={false}
      >
        <Uncontrolled(Panel)
          className="domain-form-panel"
          expanded={false}
          onToggle={[Function]}
        >
          <Panel
            bsClass="panel"
            bsStyle="default"
            className="domain-form-panel"
            expanded={false}
            onToggle={[Function]}
          >
            <div
              className="domain-form-panel panel panel-default"
            >
              <CollapsiblePanelHeader
                collapsed={true}
                controlledCollapse={true}
                id="domainpropertiesrow-Run-Fields-hdr"
                isValid={true}
                panelStatus="TODO"
                title="Run Fields"
                togglePanel={[Function]}
              >
                <PanelHeading
                  bsClass="panel"
                  className="domain-panel-header domain-heading-collapsible domain-panel-header-collapsed"
                  componentClass="div"
                  id="domainpropertiesrow-Run-Fields-hdr"
                  onClick={[Function]}
                >
                  <div
                    className="domain-panel-header domain-heading-collapsible domain-panel-header-collapsed panel-heading"
                    id="domainpropertiesrow-Run-Fields-hdr"
                    onClick={[Function]}
                  >
                    <LabelHelpTip
                      body={[Function]}
                      customStyle={Object {}}
                      iconComponent={[Function]}
                      id="tooltip"
                      placement="top"
                      size="1x"
                      title="Run Fields"
                    >
                      <span
                        className="label-help-target"
                        onMouseOut={[Function]}
                        onMouseOver={[Function]}
                      >
                        <span
                          className="domain-panel-status-icon domain-panel-status-icon-blue"
                        >
                          <FontAwesomeIcon
                            border={false}
                            className=""
                            fixedWidth={false}
                            flip={null}
                            icon={
                              Object {
                                "icon": Array [
                                  512,
                                  512,
                                  Array [],
                                  "f06a",
                                  "M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zm-248 50c-25.405 0-46 20.595-46 46s20.595 46 46 46 46-20.595 46-46-20.595-46-46-46zm-43.673-165.346l7.418 136c.347 6.364 5.609 11.346 11.982 11.346h48.546c6.373 0 11.635-4.982 11.982-11.346l7.418-136c.375-6.874-5.098-12.654-11.982-12.654h-63.383c-6.884 0-12.356 5.78-11.981 12.654z",
                                ],
                                "iconName": "exclamation-circle",
                                "prefix": "fas",
                              }
                            }
                            inverse={false}
                            listItem={false}
                            mask={null}
                            pull={null}
                            pulse={false}
                            rotation={null}
                            size={null}
                            spin={false}
                            symbol={false}
                            title=""
                            transform={null}
                          >
                            <svg
                              aria-hidden="true"
                              className="svg-inline--fa fa-exclamation-circle fa-w-16 "
                              data-icon="exclamation-circle"
                              data-prefix="fas"
                              focusable="false"
                              role="img"
                              style={Object {}}
                              viewBox="0 0 512 512"
                              xmlns="http://www.w3.org/2000/svg"
                            >
                              <path
                                d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zm-248 50c-25.405 0-46 20.595-46 46s20.595 46 46 46 46-20.595 46-46-20.595-46-46-46zm-43.673-165.346l7.418 136c.347 6.364 5.609 11.346 11.982 11.346h48.546c6.373 0 11.635-4.982 11.982-11.346l7.418-136c.375-6.874-5.098-12.654-11.982-12.654h-63.383c-6.884 0-12.356 5.78-11.981 12.654z"
                                fill="currentColor"
                                style={Object {}}
                              />
                            </svg>
                          </FontAwesomeIcon>
                        </span>
                        <Overlay
                          animation={[Function]}
                          placement="top"
                          rootClose={false}
                          show={false}
                          target={
                            <span
                              class="label-help-target"
                            >
                              <span
                                class="domain-panel-status-icon domain-panel-status-icon-blue"
                              >
                                <svg
                                  aria-hidden="true"
                                  class="svg-inline--fa fa-exclamation-circle fa-w-16 "
                                  data-icon="exclamation-circle"
                                  data-prefix="fas"
                                  focusable="false"
                                  role="img"
                                  viewBox="0 0 512 512"
                                  xmlns="http://www.w3.org/2000/svg"
                                >
                                  <path
                                    d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zm-248 50c-25.405 0-46 20.595-46 46s20.595 46 46 46 46-20.595 46-46-20.595-46-46-46zm-43.673-165.346l7.418 136c.347 6.364 5.609 11.346 11.982 11.346h48.546c6.373 0 11.635-4.982 11.982-11.346l7.418-136c.375-6.874-5.098-12.654-11.982-12.654h-63.383c-6.884 0-12.356 5.78-11.981 12.654z"
                                    fill="currentColor"
                                  />
                                </svg>
                              </span>
                            </span>
                          }
                        >
                          <Overlay
                            placement="top"
                            rootClose={false}
                            show={false}
                            target={
                              <span
                                class="label-help-target"
                              >
                                <span
                                  class="domain-panel-status-icon domain-panel-status-icon-blue"
                                >
                                  <svg
                                    aria-hidden="true"
                                    class="svg-inline--fa fa-exclamation-circle fa-w-16 "
                                    data-icon="exclamation-circle"
                                    data-prefix="fas"
                                    focusable="false"
                                    role="img"
                                    viewBox="0 0 512 512"
                                    xmlns="http://www.w3.org/2000/svg"
                                  >
                                    <path
                                      d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zm-248 50c-25.405 0-46 20.595-46 46s20.595 46 46 46 46-20.595 46-46-20.595-46-46-46zm-43.673-165.346l7.418 136c.347 6.364 5.609 11.346 11.982 11.346h48.546c6.373 0 11.635-4.982 11.982-11.346l7.418-136c.375-6.874-5.098-12.654-11.982-12.654h-63.383c-6.884 0-12.356 5.78-11.981 12.654z"
                                      fill="currentColor"
                                    />
                                  </svg>
                                </span>
                              </span>
                            }
                            transition={[Function]}
                          />
                        </Overlay>
                      </span>
                    </LabelHelpTip>
                    <span
                      className="domain-panel-title"
                    >
                      Run Fields
                    </span>
                    <span
                      className="pull-right"
                    >
                      <FontAwesomeIcon
                        border={false}
                        className="domain-form-expand-btn"
                        fixedWidth={false}
                        flip={null}
                        icon={
                          Object {
                            "icon": Array [
                              448,
                              512,
                              Array [],
                              "f0fe",
                              "M400 32H48C21.5 32 0 53.5 0 80v352c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V80c0-26.5-21.5-48-48-48zm-32 252c0 6.6-5.4 12-12 12h-92v92c0 6.6-5.4 12-12 12h-56c-6.6 0-12-5.4-12-12v-92H92c-6.6 0-12-5.4-12-12v-56c0-6.6 5.4-12 12-12h92v-92c0-6.6 5.4-12 12-12h56c6.6 0 12 5.4 12 12v92h92c6.6 0 12 5.4 12 12v56z",
                            ],
                            "iconName": "plus-square",
                            "prefix": "fas",
                          }
                        }
                        inverse={false}
                        listItem={false}
                        mask={null}
                        pull={null}
                        pulse={false}
                        rotation={null}
                        size="lg"
                        spin={false}
                        symbol={false}
                        title=""
                        transform={null}
                      >
                        <svg
                          aria-hidden="true"
                          className="svg-inline--fa fa-plus-square fa-w-14 fa-lg domain-form-expand-btn"
                          data-icon="plus-square"
                          data-prefix="fas"
                          focusable="false"
                          role="img"
                          style={Object {}}
                          viewBox="0 0 448 512"
                          xmlns="http://www.w3.org/2000/svg"
                        >
                          <path
                            d="M400 32H48C21.5 32 0 53.5 0 80v352c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V80c0-26.5-21.5-48-48-48zm-32 252c0 6.6-5.4 12-12 12h-92v92c0 6.6-5.4 12-12 12h-56c-6.6 0-12-5.4-12-12v-92H92c-6.6 0-12-5.4-12-12v-56c0-6.6 5.4-12 12-12h92v-92c0-6.6 5.4-12 12-12h56c6.6 0 12 5.4 12 12v92h92c6.6 0 12 5.4 12 12v56z"
                            fill="currentColor"
                            style={Object {}}
                          />
                        </svg>
                      </FontAwesomeIcon>
                    </span>
                    <LabelHelpTip
                      body={[Function]}
                      customStyle={
                        Object {
                          "marginLeft": "5px",
                          "verticalAlign": "top",
                        }
                      }
                      id="tooltip"
                      placement="top"
                      size="1x"
                      title="Run Fields"
                    >
                      <span
                        className="label-help-target"
                        onMouseOut={[Function]}
                        onMouseOver={[Function]}
                      >
                        <FontAwesomeIcon
                          border={false}
                          className="label-help-icon"
                          fixedWidth={false}
                          flip={null}
                          icon={
                            Object {
                              "icon": Array [
                                512,
                                512,
                                Array [],
                                "f059",
                                "M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z",
                              ],
                              "iconName": "question-circle",
                              "prefix": "fas",
                            }
                          }
                          inverse={false}
                          listItem={false}
                          mask={null}
                          pull={null}
                          pulse={false}
                          rotation={null}
                          size="1x"
                          spin={false}
                          style={
                            Object {
                              "marginLeft": "5px",
                              "verticalAlign": "top",
                            }
                          }
                          symbol={false}
                          title=""
                          transform={null}
                        >
                          <svg
                            aria-hidden="true"
                            className="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                            data-icon="question-circle"
                            data-prefix="fas"
                            focusable="false"
                            role="img"
                            style={
                              Object {
                                "marginLeft": "5px",
                                "verticalAlign": "top",
                              }
                            }
                            viewBox="0 0 512 512"
                            xmlns="http://www.w3.org/2000/svg"
                          >
                            <path
                              d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                              fill="currentColor"
                              style={Object {}}
                            />
                          </svg>
                        </FontAwesomeIcon>
                        <Overlay
                          animation={[Function]}
                          placement="top"
                          rootClose={false}
                          show={false}
                          target={
                            <span
                              class="label-help-target"
                            >
                              <svg
                                aria-hidden="true"
                                class="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                                data-icon="question-circle"
                                data-prefix="fas"
                                focusable="false"
                                role="img"
                                style="vertical-align: top; margin-left: 5px;"
                                viewBox="0 0 512 512"
                                xmlns="http://www.w3.org/2000/svg"
                              >
                                <path
                                  d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                  fill="currentColor"
                                />
                              </svg>
                            </span>
                          }
                        >
                          <Overlay
                            placement="top"
                            rootClose={false}
                            show={false}
                            target={
                              <span
                                class="label-help-target"
                              >
                                <svg
                                  aria-hidden="true"
                                  class="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                                  data-icon="question-circle"
                                  data-prefix="fas"
                                  focusable="false"
                                  role="img"
                                  style="vertical-align: top; margin-left: 5px;"
                                  viewBox="0 0 512 512"
                                  xmlns="http://www.w3.org/2000/svg"
                                >
                                  <path
                                    d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                    fill="currentColor"
                                  />
                                </svg>
                              </span>
                            }
                            transition={[Function]}
                          />
                        </Overlay>
                      </span>
                    </LabelHelpTip>
                  </div>
                </PanelHeading>
              </CollapsiblePanelHeader>
              <PanelBody
                bsClass="panel"
                collapsible={true}
              >
                <PanelCollapse
                  bsClass="panel"
                >
                  <Collapse
                    appear={false}
                    dimension="height"
                    getDimensionValue={[Function]}
                    in={false}
                    mountOnEnter={false}
                    timeout={300}
                    unmountOnExit={false}
                  >
                    <Transition
                      appear={false}
                      aria-expanded={null}
                      enter={true}
                      exit={true}
                      in={false}
                      mountOnEnter={false}
                      onEnter={[Function]}
                      onEntered={[Function]}
                      onEntering={[Function]}
                      onExit={[Function]}
                      onExited={[Function]}
                      onExiting={[Function]}
                      timeout={300}
                      unmountOnExit={false}
                    >
                      <div
                        aria-expanded={null}
                        className="panel-collapse collapse"
                      >
                        <div
                          className="panel-body"
                        >
                          <Row
                            bsClass="row"
                            className=""
                            componentClass="div"
                          >
                            <div
                              className="row"
                            >
                              <Col
                                bsClass="col"
                                componentClass="div"
                                xs={12}
                              >
                                <div
                                  className="col-xs-12"
                                />
                              </Col>
                            </div>
                          </Row>
                          <Uncontrolled(Panel)
                            className="domain-form-no-field-panel"
                          >
                            <Panel
                              bsClass="panel"
                              bsStyle="default"
                              className="domain-form-no-field-panel"
                              onToggle={[Function]}
                            >
                              <div
                                className="domain-form-no-field-panel panel panel-default"
                              >
                                No fields created yet. Add some using the button below.
                              </div>
                            </Panel>
                          </Uncontrolled(Panel)>
                          <Row
                            bsClass="row"
                            className="domain-add-field-row"
                            componentClass="div"
                          >
                            <div
                              className="domain-add-field-row row"
                            >
                              <Col
                                bsClass="col"
                                componentClass="div"
                                xs={12}
                              >
                                <div
                                  className="col-xs-12"
                                >
                                  <AddEntityButton
                                    buttonClass="domain-form-add-btn"
                                    containerClass="form-group"
                                    entity="Field"
                                    helperTitle="More Info"
                                    onClick={[Function]}
                                  >
                                    <div
                                      className="form-group"
                                    >
                                      <div
                                        className="domain-form-add-btn"
                                      >
                                        <span
                                          className="container--action-button btn btn-default"
                                          onClick={[Function]}
                                        >
                                          <i
                                            className="fa fa-plus-circle container--addition-icon"
                                          />
                                           Add 
                                          Field
                                        </span>
                                      </div>
                                    </div>
                                  </AddEntityButton>
                                </div>
                              </Col>
                            </div>
                          </Row>
                        </div>
                      </div>
                    </Transition>
                  </Collapse>
                </PanelCollapse>
              </PanelBody>
            </div>
          </Panel>
        </Uncontrolled(Panel)>
      </DomainFormImpl>
    </LookupProvider>
  </DomainForm>
  <DomainForm
    appPropertiesOnly={true}
    controlledCollapse={true}
    domain={
      Immutable.Record {
        "name": "Data Fields",
        "container": undefined,
        "description": undefined,
        "domainURI": undefined,
        "domainId": null,
        "allowFileLinkProperties": true,
        "allowAttachmentProperties": true,
        "allowFlagProperties": true,
        "showDefaultValueSettings": false,
        "defaultDefaultValueType": undefined,
        "defaultValueOptions": Immutable.List [],
        "fields": Immutable.List [],
        "indices": Immutable.List [],
        "domainException": undefined,
        "mandatoryFieldNames": Immutable.List [],
        "reservedFieldNames": Immutable.List [],
        "newDesignFields": undefined,
        "instructions": undefined,
      }
    }
    domainIndex={2}
    helpTopic={null}
    initCollapsed={true}
    key="2"
    modelDomains={
      Immutable.List [
        Immutable.Record {
          "name": "Batch Fields",
          "container": undefined,
          "description": undefined,
          "domainURI": undefined,
          "domainId": null,
          "allowFileLinkProperties": true,
          "allowAttachmentProperties": true,
          "allowFlagProperties": true,
          "showDefaultValueSettings": false,
          "defaultDefaultValueType": undefined,
          "defaultValueOptions": Immutable.List [],
          "fields": Immutable.List [],
          "indices": Immutable.List [],
          "domainException": undefined,
          "mandatoryFieldNames": Immutable.List [],
          "reservedFieldNames": Immutable.List [],
          "newDesignFields": undefined,
          "instructions": undefined,
        },
        Immutable.Record {
          "name": "Run Fields",
          "container": undefined,
          "description": undefined,
          "domainURI": undefined,
          "domainId": null,
          "allowFileLinkProperties": true,
          "allowAttachmentProperties": true,
          "allowFlagProperties": true,
          "showDefaultValueSettings": false,
          "defaultDefaultValueType": undefined,
          "defaultValueOptions": Immutable.List [],
          "fields": Immutable.List [],
          "indices": Immutable.List [],
          "domainException": undefined,
          "mandatoryFieldNames": Immutable.List [],
          "reservedFieldNames": Immutable.List [],
          "newDesignFields": undefined,
          "instructions": undefined,
        },
        Immutable.Record {
          "name": "Data Fields",
          "container": undefined,
          "description": undefined,
          "domainURI": undefined,
          "domainId": null,
          "allowFileLinkProperties": true,
          "allowAttachmentProperties": true,
          "allowFlagProperties": true,
          "showDefaultValueSettings": false,
          "defaultDefaultValueType": undefined,
          "defaultValueOptions": Immutable.List [],
          "fields": Immutable.List [],
          "indices": Immutable.List [],
          "domainException": undefined,
          "mandatoryFieldNames": Immutable.List [],
          "reservedFieldNames": Immutable.List [],
          "newDesignFields": undefined,
          "instructions": undefined,
        },
      ]
    }
    onChange={[Function]}
    onToggle={[Function]}
    panelStatus="TODO"
    showFilePropertyType={false}
    showInferFromFile={true}
    validate={false}
  >
    <LookupProvider>
      <DomainFormImpl
        appPropertiesOnly={true}
        controlledCollapse={true}
        domain={
          Immutable.Record {
            "name": "Data Fields",
            "container": undefined,
            "description": undefined,
            "domainURI": undefined,
            "domainId": null,
            "allowFileLinkProperties": true,
            "allowAttachmentProperties": true,
            "allowFlagProperties": true,
            "showDefaultValueSettings": false,
            "defaultDefaultValueType": undefined,
            "defaultValueOptions": Immutable.List [],
            "fields": Immutable.List [],
            "indices": Immutable.List [],
            "domainException": undefined,
            "mandatoryFieldNames": Immutable.List [],
            "reservedFieldNames": Immutable.List [],
            "newDesignFields": undefined,
            "instructions": undefined,
          }
        }
        domainFormDisplayOptions={
          Object {
            "isDragDisabled": false,
            "phiLevelDisabled": false,
            "showAddFieldsButton": true,
            "showRequired": true,
            "showTextOptions": true,
            "showValidators": true,
          }
        }
        domainIndex={2}
        helpNoun="field designer"
        helpTopic={null}
        initCollapsed={true}
        isNew={false}
        modelDomains={
          Immutable.List [
            Immutable.Record {
              "name": "Batch Fields",
              "container": undefined,
              "description": undefined,
              "domainURI": undefined,
              "domainId": null,
              "allowFileLinkProperties": true,
              "allowAttachmentProperties": true,
              "allowFlagProperties": true,
              "showDefaultValueSettings": false,
              "defaultDefaultValueType": undefined,
              "defaultValueOptions": Immutable.List [],
              "fields": Immutable.List [],
              "indices": Immutable.List [],
              "domainException": undefined,
              "mandatoryFieldNames": Immutable.List [],
              "reservedFieldNames": Immutable.List [],
              "newDesignFields": undefined,
              "instructions": undefined,
            },
            Immutable.Record {
              "name": "Run Fields",
              "container": undefined,
              "description": undefined,
              "domainURI": undefined,
              "domainId": null,
              "allowFileLinkProperties": true,
              "allowAttachmentProperties": true,
              "allowFlagProperties": true,
              "showDefaultValueSettings": false,
              "defaultDefaultValueType": undefined,
              "defaultValueOptions": Immutable.List [],
              "fields": Immutable.List [],
              "indices": Immutable.List [],
              "domainException": undefined,
              "mandatoryFieldNames": Immutable.List [],
              "reservedFieldNames": Immutable.List [],
              "newDesignFields": undefined,
              "instructions": undefined,
            },
            Immutable.Record {
              "name": "Data Fields",
              "container": undefined,
              "description": undefined,
              "domainURI": undefined,
              "domainId": null,
              "allowFileLinkProperties": true,
              "allowAttachmentProperties": true,
              "allowFlagProperties": true,
              "showDefaultValueSettings": false,
              "defaultDefaultValueType": undefined,
              "defaultValueOptions": Immutable.List [],
              "fields": Immutable.List [],
              "indices": Immutable.List [],
              "domainException": undefined,
              "mandatoryFieldNames": Immutable.List [],
              "reservedFieldNames": Immutable.List [],
              "newDesignFields": undefined,
              "instructions": undefined,
            },
          ]
        }
        onChange={[Function]}
        onToggle={[Function]}
        panelStatus="TODO"
        showFilePropertyType={false}
        showHeader={true}
        showInferFromFile={true}
        successBsStyle="success"
        validate={false}
      >
        <Uncontrolled(Panel)
          className="domain-form-panel"
          expanded={false}
          onToggle={[Function]}
        >
          <Panel
            bsClass="panel"
            bsStyle="default"
            className="domain-form-panel"
            expanded={false}
            onToggle={[Function]}
          >
            <div
              className="domain-form-panel panel panel-default"
            >
              <CollapsiblePanelHeader
                collapsed={true}
                controlledCollapse={true}
                id="domainpropertiesrow-Data-Fields-hdr"
                isValid={true}
                panelStatus="TODO"
                title="Results Fields"
                togglePanel={[Function]}
              >
                <PanelHeading
                  bsClass="panel"
                  className="domain-panel-header domain-heading-collapsible domain-panel-header-collapsed"
                  componentClass="div"
                  id="domainpropertiesrow-Data-Fields-hdr"
                  onClick={[Function]}
                >
                  <div
                    className="domain-panel-header domain-heading-collapsible domain-panel-header-collapsed panel-heading"
                    id="domainpropertiesrow-Data-Fields-hdr"
                    onClick={[Function]}
                  >
                    <LabelHelpTip
                      body={[Function]}
                      customStyle={Object {}}
                      iconComponent={[Function]}
                      id="tooltip"
                      placement="top"
                      size="1x"
                      title="Results Fields"
                    >
                      <span
                        className="label-help-target"
                        onMouseOut={[Function]}
                        onMouseOver={[Function]}
                      >
                        <span
                          className="domain-panel-status-icon domain-panel-status-icon-blue"
                        >
                          <FontAwesomeIcon
                            border={false}
                            className=""
                            fixedWidth={false}
                            flip={null}
                            icon={
                              Object {
                                "icon": Array [
                                  512,
                                  512,
                                  Array [],
                                  "f06a",
                                  "M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zm-248 50c-25.405 0-46 20.595-46 46s20.595 46 46 46 46-20.595 46-46-20.595-46-46-46zm-43.673-165.346l7.418 136c.347 6.364 5.609 11.346 11.982 11.346h48.546c6.373 0 11.635-4.982 11.982-11.346l7.418-136c.375-6.874-5.098-12.654-11.982-12.654h-63.383c-6.884 0-12.356 5.78-11.981 12.654z",
                                ],
                                "iconName": "exclamation-circle",
                                "prefix": "fas",
                              }
                            }
                            inverse={false}
                            listItem={false}
                            mask={null}
                            pull={null}
                            pulse={false}
                            rotation={null}
                            size={null}
                            spin={false}
                            symbol={false}
                            title=""
                            transform={null}
                          >
                            <svg
                              aria-hidden="true"
                              className="svg-inline--fa fa-exclamation-circle fa-w-16 "
                              data-icon="exclamation-circle"
                              data-prefix="fas"
                              focusable="false"
                              role="img"
                              style={Object {}}
                              viewBox="0 0 512 512"
                              xmlns="http://www.w3.org/2000/svg"
                            >
                              <path
                                d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zm-248 50c-25.405 0-46 20.595-46 46s20.595 46 46 46 46-20.595 46-46-20.595-46-46-46zm-43.673-165.346l7.418 136c.347 6.364 5.609 11.346 11.982 11.346h48.546c6.373 0 11.635-4.982 11.982-11.346l7.418-136c.375-6.874-5.098-12.654-11.982-12.654h-63.383c-6.884 0-12.356 5.78-11.981 12.654z"
                                fill="currentColor"
                                style={Object {}}
                              />
                            </svg>
                          </FontAwesomeIcon>
                        </span>
                        <Overlay
                          animation={[Function]}
                          placement="top"
                          rootClose={false}
                          show={false}
                          target={
                            <span
                              class="label-help-target"
                            >
                              <span
                                class="domain-panel-status-icon domain-panel-status-icon-blue"
                              >
                                <svg
                                  aria-hidden="true"
                                  class="svg-inline--fa fa-exclamation-circle fa-w-16 "
                                  data-icon="exclamation-circle"
                                  data-prefix="fas"
                                  focusable="false"
                                  role="img"
                                  viewBox="0 0 512 512"
                                  xmlns="http://www.w3.org/2000/svg"
                                >
                                  <path
                                    d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zm-248 50c-25.405 0-46 20.595-46 46s20.595 46 46 46 46-20.595 46-46-20.595-46-46-46zm-43.673-165.346l7.418 136c.347 6.364 5.609 11.346 11.982 11.346h48.546c6.373 0 11.635-4.982 11.982-11.346l7.418-136c.375-6.874-5.098-12.654-11.982-12.654h-63.383c-6.884 0-12.356 5.78-11.981 12.654z"
                                    fill="currentColor"
                                  />
                                </svg>
                              </span>
                            </span>
                          }
                        >
                          <Overlay
                            placement="top"
                            rootClose={false}
                            show={false}
                            target={
                              <span
                                class="label-help-target"
                              >
                                <span
                                  class="domain-panel-status-icon domain-panel-status-icon-blue"
                                >
                                  <svg
                                    aria-hidden="true"
                                    class="svg-inline--fa fa-exclamation-circle fa-w-16 "
                                    data-icon="exclamation-circle"
                                    data-prefix="fas"
                                    focusable="false"
                                    role="img"
                                    viewBox="0 0 512 512"
                                    xmlns="http://www.w3.org/2000/svg"
                                  >
                                    <path
                                      d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zm-248 50c-25.405 0-46 20.595-46 46s20.595 46 46 46 46-20.595 46-46-20.595-46-46-46zm-43.673-165.346l7.418 136c.347 6.364 5.609 11.346 11.982 11.346h48.546c6.373 0 11.635-4.982 11.982-11.346l7.418-136c.375-6.874-5.098-12.654-11.982-12.654h-63.383c-6.884 0-12.356 5.78-11.981 12.654z"
                                      fill="currentColor"
                                    />
                                  </svg>
                                </span>
                              </span>
                            }
                            transition={[Function]}
                          />
                        </Overlay>
                      </span>
                    </LabelHelpTip>
                    <span
                      className="domain-panel-title"
                    >
                      Results Fields
                    </span>
                    <span
                      className="pull-right"
                    >
                      <FontAwesomeIcon
                        border={false}
                        className="domain-form-expand-btn"
                        fixedWidth={false}
                        flip={null}
                        icon={
                          Object {
                            "icon": Array [
                              448,
                              512,
                              Array [],
                              "f0fe",
                              "M400 32H48C21.5 32 0 53.5 0 80v352c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V80c0-26.5-21.5-48-48-48zm-32 252c0 6.6-5.4 12-12 12h-92v92c0 6.6-5.4 12-12 12h-56c-6.6 0-12-5.4-12-12v-92H92c-6.6 0-12-5.4-12-12v-56c0-6.6 5.4-12 12-12h92v-92c0-6.6 5.4-12 12-12h56c6.6 0 12 5.4 12 12v92h92c6.6 0 12 5.4 12 12v56z",
                            ],
                            "iconName": "plus-square",
                            "prefix": "fas",
                          }
                        }
                        inverse={false}
                        listItem={false}
                        mask={null}
                        pull={null}
                        pulse={false}
                        rotation={null}
                        size="lg"
                        spin={false}
                        symbol={false}
                        title=""
                        transform={null}
                      >
                        <svg
                          aria-hidden="true"
                          className="svg-inline--fa fa-plus-square fa-w-14 fa-lg domain-form-expand-btn"
                          data-icon="plus-square"
                          data-prefix="fas"
                          focusable="false"
                          role="img"
                          style={Object {}}
                          viewBox="0 0 448 512"
                          xmlns="http://www.w3.org/2000/svg"
                        >
                          <path
                            d="M400 32H48C21.5 32 0 53.5 0 80v352c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V80c0-26.5-21.5-48-48-48zm-32 252c0 6.6-5.4 12-12 12h-92v92c0 6.6-5.4 12-12 12h-56c-6.6 0-12-5.4-12-12v-92H92c-6.6 0-12-5.4-12-12v-56c0-6.6 5.4-12 12-12h92v-92c0-6.6 5.4-12 12-12h56c6.6 0 12 5.4 12 12v92h92c6.6 0 12 5.4 12 12v56z"
                            fill="currentColor"
                            style={Object {}}
                          />
                        </svg>
                      </FontAwesomeIcon>
                    </span>
                    <LabelHelpTip
                      body={[Function]}
                      customStyle={
                        Object {
                          "marginLeft": "5px",
                          "verticalAlign": "top",
                        }
                      }
                      id="tooltip"
                      placement="top"
                      size="1x"
                      title="Results Fields"
                    >
                      <span
                        className="label-help-target"
                        onMouseOut={[Function]}
                        onMouseOver={[Function]}
                      >
                        <FontAwesomeIcon
                          border={false}
                          className="label-help-icon"
                          fixedWidth={false}
                          flip={null}
                          icon={
                            Object {
                              "icon": Array [
                                512,
                                512,
                                Array [],
                                "f059",
                                "M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z",
                              ],
                              "iconName": "question-circle",
                              "prefix": "fas",
                            }
                          }
                          inverse={false}
                          listItem={false}
                          mask={null}
                          pull={null}
                          pulse={false}
                          rotation={null}
                          size="1x"
                          spin={false}
                          style={
                            Object {
                              "marginLeft": "5px",
                              "verticalAlign": "top",
                            }
                          }
                          symbol={false}
                          title=""
                          transform={null}
                        >
                          <svg
                            aria-hidden="true"
                            className="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                            data-icon="question-circle"
                            data-prefix="fas"
                            focusable="false"
                            role="img"
                            style={
                              Object {
                                "marginLeft": "5px",
                                "verticalAlign": "top",
                              }
                            }
                            viewBox="0 0 512 512"
                            xmlns="http://www.w3.org/2000/svg"
                          >
                            <path
                              d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                              fill="currentColor"
                              style={Object {}}
                            />
                          </svg>
                        </FontAwesomeIcon>
                        <Overlay
                          animation={[Function]}
                          placement="top"
                          rootClose={false}
                          show={false}
                          target={
                            <span
                              class="label-help-target"
                            >
                              <svg
                                aria-hidden="true"
                                class="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                                data-icon="question-circle"
                                data-prefix="fas"
                                focusable="false"
                                role="img"
                                style="vertical-align: top; margin-left: 5px;"
                                viewBox="0 0 512 512"
                                xmlns="http://www.w3.org/2000/svg"
                              >
                                <path
                                  d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                  fill="currentColor"
                                />
                              </svg>
                            </span>
                          }
                        >
                          <Overlay
                            placement="top"
                            rootClose={false}
                            show={false}
                            target={
                              <span
                                class="label-help-target"
                              >
                                <svg
                                  aria-hidden="true"
                                  class="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                                  data-icon="question-circle"
                                  data-prefix="fas"
                                  focusable="false"
                                  role="img"
                                  style="vertical-align: top; margin-left: 5px;"
                                  viewBox="0 0 512 512"
                                  xmlns="http://www.w3.org/2000/svg"
                                >
                                  <path
                                    d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                    fill="currentColor"
                                  />
                                </svg>
                              </span>
                            }
                            transition={[Function]}
                          />
                        </Overlay>
                      </span>
                    </LabelHelpTip>
                  </div>
                </PanelHeading>
              </CollapsiblePanelHeader>
              <PanelBody
                bsClass="panel"
                collapsible={true}
              >
                <PanelCollapse
                  bsClass="panel"
                >
                  <Collapse
                    appear={false}
                    dimension="height"
                    getDimensionValue={[Function]}
                    in={false}
                    mountOnEnter={false}
                    timeout={300}
                    unmountOnExit={false}
                  >
                    <Transition
                      appear={false}
                      aria-expanded={null}
                      enter={true}
                      exit={true}
                      in={false}
                      mountOnEnter={false}
                      onEnter={[Function]}
                      onEntered={[Function]}
                      onEntering={[Function]}
                      onExit={[Function]}
                      onExited={[Function]}
                      onExiting={[Function]}
                      timeout={300}
                      unmountOnExit={false}
                    >
                      <div
                        aria-expanded={null}
                        className="panel-collapse collapse"
                      >
                        <div
                          className="panel-body"
                        >
                          <Row
                            bsClass="row"
                            className=""
                            componentClass="div"
                          >
                            <div
                              className="row"
                            >
                              <Col
                                bsClass="col"
                                componentClass="div"
                                xs={12}
                              >
                                <div
                                  className="col-xs-12"
                                />
                              </Col>
                            </div>
                          </Row>
                          <FileAttachmentForm
                            acceptedFormats=".csv, .tsv, .txt, .xls, .xlsx"
                            allowDirectories={false}
                            allowMultiple={false}
                            cancelText="Cancel"
                            compact={false}
                            label="Infer fields from file"
                            labelLong="Select file or drag and drop here."
                            onFileRemoval={[Function]}
                            previewGridProps={
                              Object {
                                "onPreviewLoad": [Function],
                                "previewCount": 3,
                                "skipPreviewGrid": true,
                              }
                            }
                            showAcceptedFormats={true}
                            showButtons={false}
                            showLabel={true}
                            showProgressBar={false}
                            submitText="Upload"
                          >
                            <span
                              className="translator--toggle__wizard"
                            >
                              <FormSection
                                iconSpacer={false}
                                label="Infer fields from file"
                                showLabel={true}
                              >
                                <div
                                  className="row"
                                >
                                  <div
                                    className="col-sm-12"
                                  >
                                    <label
                                      className="control-label text-left"
                                    >
                                      <strong>
                                        Infer fields from file
                                      </strong>
                                    </label>
                                  </div>
                                </div>
                                <div
                                  className="row"
                                >
                                  <div
                                    className="col-sm-12"
                                  >
                                    <div
                                      className="wizard-row--container"
                                    >
                                      <FileAttachmentContainer
                                        acceptedFormats=".csv, .tsv, .txt, .xls, .xlsx"
                                        allowDirectories={false}
                                        allowMultiple={false}
                                        compact={false}
                                        handleChange={[Function]}
                                        handleRemoval={[Function]}
                                        labelLong="Select file or drag and drop here."
                                      >
                                        <div>
                                          <div
                                            className="file-upload--container block"
                                          >
                                            <label
                                              className="file-upload--label"
                                              htmlFor="fileUpload"
                                              onDragEnter={[Function]}
                                              onDragLeave={[Function]}
                                              onDragOver={[Function]}
                                              onDrop={[Function]}
                                            >
                                              <i
                                                aria-hidden="true"
                                                className="fa fa-cloud-upload fa-2x cloud-logo"
                                              />
                                              Select file or drag and drop here.
                                            </label>
                                            <input
                                              accept=".csv, .tsv, .txt, .xls, .xlsx"
                                              className="file-upload--input"
                                              id="fileUpload"
                                              multiple={false}
                                              name="fileUpload"
                                              onChange={[Function]}
                                              type="file"
                                            />
                                          </div>
                                        </div>
                                      </FileAttachmentContainer>
                                    </div>
                                  </div>
                                </div>
                              </FormSection>
                            </span>
                            <div
                              className="row"
                            >
                              <div
                                className="col-md-9"
                              >
                                <div
                                  className="file-form-formats"
                                >
                                  <strong>
                                    Supported formats include: 
                                  </strong>
                                  .csv, .tsv, .txt, .xls, .xlsx
                                </div>
                              </div>
                              <div
                                className="col-md-3"
                              >
                                <div
                                  className="pull-right"
                                />
                              </div>
                            </div>
                          </FileAttachmentForm>
                          <div
                            className="margin-top"
                          >
                            or 
                            <span
                              className="domain-form-add-link"
                              onClick={[Function]}
                            >
                              manually define fields
                            </span>
                          </div>
                        </div>
                      </div>
                    </Transition>
                  </Collapse>
                </PanelCollapse>
              </PanelBody>
            </div>
          </Panel>
        </Uncontrolled(Panel)>
      </DomainFormImpl>
    </LookupProvider>
  </DomainForm>
  <div
    className="domain-form-panel domain-designer-buttons"
  >
    <Button
      active={false}
      block={false}
      bsClass="btn"
      bsStyle="default"
      disabled={false}
      onClick={[Function]}
    >
      <button
        className="btn btn-default"
        disabled={false}
        onClick={[Function]}
        type="button"
      >
        Cancel
      </button>
    </Button>
    <Button
      active={false}
      block={false}
      bsClass="btn"
      bsStyle="success"
      className="pull-right"
      disabled={false}
      onClick={[Function]}
    >
      <button
        className="pull-right btn btn-success"
        disabled={false}
        onClick={[Function]}
        type="button"
      >
        Save
      </button>
    </Button>
  </div>
</AssayDesignerPanels>
`;

exports[`AssayDesignerPanels appPropertiesOnly with initModel 1`] = `
<AssayDesignerPanels
  appPropertiesOnly={true}
  initModel={
    Immutable.Record {
      "allowBackgroundUpload": true,
      "allowEditableResults": true,
      "allowQCStates": false,
      "allowSpacesInPath": false,
      "allowTransformationScript": false,
      "allowPlateMetadata": false,
      "autoCopyTargetContainer": undefined,
      "autoCopyTargetContainerId": undefined,
      "availableDetectionMethods": undefined,
      "availableMetadataInputFormats": undefined,
      "availablePlateTemplates": undefined,
      "backgroundUpload": true,
      "description": "My assay protocol for you all to use.",
      "domains": Immutable.List [
        Immutable.Record {
          "name": "Batch Fields",
          "container": undefined,
          "description": undefined,
          "domainURI": undefined,
          "domainId": null,
          "allowFileLinkProperties": true,
          "allowAttachmentProperties": true,
          "allowFlagProperties": true,
          "showDefaultValueSettings": false,
          "defaultDefaultValueType": undefined,
          "defaultValueOptions": Immutable.List [],
          "fields": Immutable.List [],
          "indices": Immutable.List [],
          "domainException": undefined,
          "mandatoryFieldNames": Immutable.List [],
          "reservedFieldNames": Immutable.List [],
          "newDesignFields": undefined,
          "instructions": undefined,
        },
        Immutable.Record {
          "name": "Sample Fields",
          "container": undefined,
          "description": undefined,
          "domainURI": undefined,
          "domainId": null,
          "allowFileLinkProperties": true,
          "allowAttachmentProperties": true,
          "allowFlagProperties": true,
          "showDefaultValueSettings": false,
          "defaultDefaultValueType": undefined,
          "defaultValueOptions": Immutable.List [],
          "fields": Immutable.List [
            Immutable.Record {
              "conceptURI": undefined,
              "conditionalFormats": Immutable.List [],
              "defaultScale": undefined,
              "defaultValueType": undefined,
              "defaultValue": undefined,
              "defaultDisplayValue": undefined,
              "description": undefined,
              "dimension": undefined,
              "excludeFromShifting": false,
              "format": undefined,
              "hidden": false,
              "importAliases": undefined,
              "label": undefined,
              "lookupContainer": undefined,
              "lookupQuery": undefined,
              "lookupSchema": undefined,
              "lookupValidator": undefined,
              "measure": undefined,
              "mvEnabled": false,
              "name": "field1",
              "PHI": undefined,
              "primaryKey": undefined,
              "propertyId": undefined,
              "propertyURI": undefined,
              "propertyValidators": Immutable.List [],
              "rangeValidators": Immutable.List [],
              "rangeURI": "xsd:string",
              "regexValidators": Immutable.List [],
              "recommendedVariable": false,
              "required": false,
              "scale": undefined,
              "URL": undefined,
              "shownInDetailsView": true,
              "shownInInsertView": true,
              "shownInUpdateView": true,
              "visible": true,
              "dataType": Immutable.Record {
                "conceptURI": undefined,
                "display": "Text",
                "name": "string",
                "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                "alternateRangeURI": "xsd:string",
                "shortDisplay": "String",
                "lookupSchema": undefined,
                "lookupQuery": undefined,
              },
              "lookupQueryValue": undefined,
              "lookupType": Immutable.Record {
                "conceptURI": undefined,
                "display": "Lookup",
                "name": "lookup",
                "rangeURI": "xsd:string",
                "alternateRangeURI": undefined,
                "shortDisplay": undefined,
                "lookupSchema": undefined,
                "lookupQuery": undefined,
              },
              "original": Object {
                "conceptURI": undefined,
                "dataType": Immutable.Record {
                  "conceptURI": undefined,
                  "display": "Text",
                  "name": "string",
                  "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                  "alternateRangeURI": "xsd:string",
                  "shortDisplay": "String",
                  "lookupSchema": undefined,
                  "lookupQuery": undefined,
                },
                "rangeURI": undefined,
              },
              "updatedField": false,
              "isPrimaryKey": false,
              "lockType": "NotLocked",
              "wrappedColumnName": undefined,
            },
            Immutable.Record {
              "conceptURI": undefined,
              "conditionalFormats": Immutable.List [],
              "defaultScale": undefined,
              "defaultValueType": undefined,
              "defaultValue": undefined,
              "defaultDisplayValue": undefined,
              "description": undefined,
              "dimension": undefined,
              "excludeFromShifting": false,
              "format": undefined,
              "hidden": false,
              "importAliases": undefined,
              "label": undefined,
              "lookupContainer": undefined,
              "lookupQuery": undefined,
              "lookupSchema": undefined,
              "lookupValidator": undefined,
              "measure": undefined,
              "mvEnabled": false,
              "name": "field2",
              "PHI": undefined,
              "primaryKey": undefined,
              "propertyId": undefined,
              "propertyURI": undefined,
              "propertyValidators": Immutable.List [],
              "rangeValidators": Immutable.List [],
              "rangeURI": "xsd:int",
              "regexValidators": Immutable.List [],
              "recommendedVariable": false,
              "required": false,
              "scale": undefined,
              "URL": undefined,
              "shownInDetailsView": true,
              "shownInInsertView": true,
              "shownInUpdateView": true,
              "visible": true,
              "dataType": Immutable.Record {
                "conceptURI": undefined,
                "display": "Integer",
                "name": "int",
                "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                "alternateRangeURI": "xsd:int",
                "shortDisplay": undefined,
                "lookupSchema": undefined,
                "lookupQuery": undefined,
              },
              "lookupQueryValue": undefined,
              "lookupType": Immutable.Record {
                "conceptURI": undefined,
                "display": "Lookup",
                "name": "lookup",
                "rangeURI": "xsd:int",
                "alternateRangeURI": undefined,
                "shortDisplay": undefined,
                "lookupSchema": undefined,
                "lookupQuery": undefined,
              },
              "original": Object {
                "conceptURI": undefined,
                "dataType": Immutable.Record {
                  "conceptURI": undefined,
                  "display": "Integer",
                  "name": "int",
                  "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                  "alternateRangeURI": "xsd:int",
                  "shortDisplay": undefined,
                  "lookupSchema": undefined,
                  "lookupQuery": undefined,
                },
                "rangeURI": undefined,
              },
              "updatedField": false,
              "isPrimaryKey": false,
              "lockType": "NotLocked",
              "wrappedColumnName": undefined,
            },
            Immutable.Record {
              "conceptURI": undefined,
              "conditionalFormats": Immutable.List [],
              "defaultScale": undefined,
              "defaultValueType": undefined,
              "defaultValue": undefined,
              "defaultDisplayValue": undefined,
              "description": undefined,
              "dimension": undefined,
              "excludeFromShifting": false,
              "format": undefined,
              "hidden": false,
              "importAliases": undefined,
              "label": undefined,
              "lookupContainer": undefined,
              "lookupQuery": undefined,
              "lookupSchema": undefined,
              "lookupValidator": undefined,
              "measure": undefined,
              "mvEnabled": false,
              "name": "field3",
              "PHI": undefined,
              "primaryKey": undefined,
              "propertyId": undefined,
              "propertyURI": undefined,
              "propertyValidators": Immutable.List [],
              "rangeValidators": Immutable.List [],
              "rangeURI": "xsd:dateTime",
              "regexValidators": Immutable.List [],
              "recommendedVariable": false,
              "required": false,
              "scale": undefined,
              "URL": undefined,
              "shownInDetailsView": true,
              "shownInInsertView": true,
              "shownInUpdateView": true,
              "visible": true,
              "dataType": Immutable.Record {
                "conceptURI": undefined,
                "display": "Date Time",
                "name": "dateTime",
                "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                "alternateRangeURI": "xsd:dateTime",
                "shortDisplay": undefined,
                "lookupSchema": undefined,
                "lookupQuery": undefined,
              },
              "lookupQueryValue": undefined,
              "lookupType": Immutable.Record {
                "conceptURI": undefined,
                "display": "Lookup",
                "name": "lookup",
                "rangeURI": "xsd:dateTime",
                "alternateRangeURI": undefined,
                "shortDisplay": undefined,
                "lookupSchema": undefined,
                "lookupQuery": undefined,
              },
              "original": Object {
                "conceptURI": undefined,
                "dataType": Immutable.Record {
                  "conceptURI": undefined,
                  "display": "Date Time",
                  "name": "dateTime",
                  "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                  "alternateRangeURI": "xsd:dateTime",
                  "shortDisplay": undefined,
                  "lookupSchema": undefined,
                  "lookupQuery": undefined,
                },
                "rangeURI": undefined,
              },
              "updatedField": false,
              "isPrimaryKey": false,
              "lockType": "NotLocked",
              "wrappedColumnName": undefined,
            },
          ],
          "indices": Immutable.List [],
          "domainException": undefined,
          "mandatoryFieldNames": Immutable.List [],
          "reservedFieldNames": Immutable.List [],
          "newDesignFields": undefined,
          "instructions": undefined,
        },
      ],
      "editableResults": true,
      "editableRuns": true,
      "exception": undefined,
      "metadataInputFormatHelp": undefined,
      "moduleTransformScripts": undefined,
      "name": "Test Assay Protocol",
      "plateMetadata": undefined,
      "protocolId": 1,
      "protocolParameters": undefined,
      "protocolTransformScripts": undefined,
      "providerName": undefined,
      "saveScriptFiles": false,
      "selectedDetectionMethod": undefined,
      "selectedMetadataInputFormat": undefined,
      "selectedPlateTemplate": undefined,
      "qcEnabled": undefined,
    }
  }
  onCancel={[Function]}
  onComplete={[Function]}
>
  <ComponentWithDomainPropertiesPanelCollapse
    appPropertiesOnly={true}
    controlledCollapse={true}
    initCollapsed={false}
    model={
      Immutable.Record {
        "allowBackgroundUpload": true,
        "allowEditableResults": true,
        "allowQCStates": false,
        "allowSpacesInPath": false,
        "allowTransformationScript": false,
        "allowPlateMetadata": false,
        "autoCopyTargetContainer": undefined,
        "autoCopyTargetContainerId": undefined,
        "availableDetectionMethods": undefined,
        "availableMetadataInputFormats": undefined,
        "availablePlateTemplates": undefined,
        "backgroundUpload": true,
        "description": "My assay protocol for you all to use.",
        "domains": Immutable.List [
          Immutable.Record {
            "name": "Batch Fields",
            "container": undefined,
            "description": undefined,
            "domainURI": undefined,
            "domainId": null,
            "allowFileLinkProperties": true,
            "allowAttachmentProperties": true,
            "allowFlagProperties": true,
            "showDefaultValueSettings": false,
            "defaultDefaultValueType": undefined,
            "defaultValueOptions": Immutable.List [],
            "fields": Immutable.List [],
            "indices": Immutable.List [],
            "domainException": undefined,
            "mandatoryFieldNames": Immutable.List [],
            "reservedFieldNames": Immutable.List [],
            "newDesignFields": undefined,
            "instructions": undefined,
          },
          Immutable.Record {
            "name": "Sample Fields",
            "container": undefined,
            "description": undefined,
            "domainURI": undefined,
            "domainId": null,
            "allowFileLinkProperties": true,
            "allowAttachmentProperties": true,
            "allowFlagProperties": true,
            "showDefaultValueSettings": false,
            "defaultDefaultValueType": undefined,
            "defaultValueOptions": Immutable.List [],
            "fields": Immutable.List [
              Immutable.Record {
                "conceptURI": undefined,
                "conditionalFormats": Immutable.List [],
                "defaultScale": undefined,
                "defaultValueType": undefined,
                "defaultValue": undefined,
                "defaultDisplayValue": undefined,
                "description": undefined,
                "dimension": undefined,
                "excludeFromShifting": false,
                "format": undefined,
                "hidden": false,
                "importAliases": undefined,
                "label": undefined,
                "lookupContainer": undefined,
                "lookupQuery": undefined,
                "lookupSchema": undefined,
                "lookupValidator": undefined,
                "measure": undefined,
                "mvEnabled": false,
                "name": "field1",
                "PHI": undefined,
                "primaryKey": undefined,
                "propertyId": undefined,
                "propertyURI": undefined,
                "propertyValidators": Immutable.List [],
                "rangeValidators": Immutable.List [],
                "rangeURI": "xsd:string",
                "regexValidators": Immutable.List [],
                "recommendedVariable": false,
                "required": false,
                "scale": undefined,
                "URL": undefined,
                "shownInDetailsView": true,
                "shownInInsertView": true,
                "shownInUpdateView": true,
                "visible": true,
                "dataType": Immutable.Record {
                  "conceptURI": undefined,
                  "display": "Text",
                  "name": "string",
                  "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                  "alternateRangeURI": "xsd:string",
                  "shortDisplay": "String",
                  "lookupSchema": undefined,
                  "lookupQuery": undefined,
                },
                "lookupQueryValue": undefined,
                "lookupType": Immutable.Record {
                  "conceptURI": undefined,
                  "display": "Lookup",
                  "name": "lookup",
                  "rangeURI": "xsd:string",
                  "alternateRangeURI": undefined,
                  "shortDisplay": undefined,
                  "lookupSchema": undefined,
                  "lookupQuery": undefined,
                },
                "original": Object {
                  "conceptURI": undefined,
                  "dataType": Immutable.Record {
                    "conceptURI": undefined,
                    "display": "Text",
                    "name": "string",
                    "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                    "alternateRangeURI": "xsd:string",
                    "shortDisplay": "String",
                    "lookupSchema": undefined,
                    "lookupQuery": undefined,
                  },
                  "rangeURI": undefined,
                },
                "updatedField": false,
                "isPrimaryKey": false,
                "lockType": "NotLocked",
                "wrappedColumnName": undefined,
              },
              Immutable.Record {
                "conceptURI": undefined,
                "conditionalFormats": Immutable.List [],
                "defaultScale": undefined,
                "defaultValueType": undefined,
                "defaultValue": undefined,
                "defaultDisplayValue": undefined,
                "description": undefined,
                "dimension": undefined,
                "excludeFromShifting": false,
                "format": undefined,
                "hidden": false,
                "importAliases": undefined,
                "label": undefined,
                "lookupContainer": undefined,
                "lookupQuery": undefined,
                "lookupSchema": undefined,
                "lookupValidator": undefined,
                "measure": undefined,
                "mvEnabled": false,
                "name": "field2",
                "PHI": undefined,
                "primaryKey": undefined,
                "propertyId": undefined,
                "propertyURI": undefined,
                "propertyValidators": Immutable.List [],
                "rangeValidators": Immutable.List [],
                "rangeURI": "xsd:int",
                "regexValidators": Immutable.List [],
                "recommendedVariable": false,
                "required": false,
                "scale": undefined,
                "URL": undefined,
                "shownInDetailsView": true,
                "shownInInsertView": true,
                "shownInUpdateView": true,
                "visible": true,
                "dataType": Immutable.Record {
                  "conceptURI": undefined,
                  "display": "Integer",
                  "name": "int",
                  "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                  "alternateRangeURI": "xsd:int",
                  "shortDisplay": undefined,
                  "lookupSchema": undefined,
                  "lookupQuery": undefined,
                },
                "lookupQueryValue": undefined,
                "lookupType": Immutable.Record {
                  "conceptURI": undefined,
                  "display": "Lookup",
                  "name": "lookup",
                  "rangeURI": "xsd:int",
                  "alternateRangeURI": undefined,
                  "shortDisplay": undefined,
                  "lookupSchema": undefined,
                  "lookupQuery": undefined,
                },
                "original": Object {
                  "conceptURI": undefined,
                  "dataType": Immutable.Record {
                    "conceptURI": undefined,
                    "display": "Integer",
                    "name": "int",
                    "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                    "alternateRangeURI": "xsd:int",
                    "shortDisplay": undefined,
                    "lookupSchema": undefined,
                    "lookupQuery": undefined,
                  },
                  "rangeURI": undefined,
                },
                "updatedField": false,
                "isPrimaryKey": false,
                "lockType": "NotLocked",
                "wrappedColumnName": undefined,
              },
              Immutable.Record {
                "conceptURI": undefined,
                "conditionalFormats": Immutable.List [],
                "defaultScale": undefined,
                "defaultValueType": undefined,
                "defaultValue": undefined,
                "defaultDisplayValue": undefined,
                "description": undefined,
                "dimension": undefined,
                "excludeFromShifting": false,
                "format": undefined,
                "hidden": false,
                "importAliases": undefined,
                "label": undefined,
                "lookupContainer": undefined,
                "lookupQuery": undefined,
                "lookupSchema": undefined,
                "lookupValidator": undefined,
                "measure": undefined,
                "mvEnabled": false,
                "name": "field3",
                "PHI": undefined,
                "primaryKey": undefined,
                "propertyId": undefined,
                "propertyURI": undefined,
                "propertyValidators": Immutable.List [],
                "rangeValidators": Immutable.List [],
                "rangeURI": "xsd:dateTime",
                "regexValidators": Immutable.List [],
                "recommendedVariable": false,
                "required": false,
                "scale": undefined,
                "URL": undefined,
                "shownInDetailsView": true,
                "shownInInsertView": true,
                "shownInUpdateView": true,
                "visible": true,
                "dataType": Immutable.Record {
                  "conceptURI": undefined,
                  "display": "Date Time",
                  "name": "dateTime",
                  "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                  "alternateRangeURI": "xsd:dateTime",
                  "shortDisplay": undefined,
                  "lookupSchema": undefined,
                  "lookupQuery": undefined,
                },
                "lookupQueryValue": undefined,
                "lookupType": Immutable.Record {
                  "conceptURI": undefined,
                  "display": "Lookup",
                  "name": "lookup",
                  "rangeURI": "xsd:dateTime",
                  "alternateRangeURI": undefined,
                  "shortDisplay": undefined,
                  "lookupSchema": undefined,
                  "lookupQuery": undefined,
                },
                "original": Object {
                  "conceptURI": undefined,
                  "dataType": Immutable.Record {
                    "conceptURI": undefined,
                    "display": "Date Time",
                    "name": "dateTime",
                    "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                    "alternateRangeURI": "xsd:dateTime",
                    "shortDisplay": undefined,
                    "lookupSchema": undefined,
                    "lookupQuery": undefined,
                  },
                  "rangeURI": undefined,
                },
                "updatedField": false,
                "isPrimaryKey": false,
                "lockType": "NotLocked",
                "wrappedColumnName": undefined,
              },
            ],
            "indices": Immutable.List [],
            "domainException": undefined,
            "mandatoryFieldNames": Immutable.List [],
            "reservedFieldNames": Immutable.List [],
            "newDesignFields": undefined,
            "instructions": undefined,
          },
        ],
        "editableResults": true,
        "editableRuns": true,
        "exception": undefined,
        "metadataInputFormatHelp": undefined,
        "moduleTransformScripts": undefined,
        "name": "Test Assay Protocol",
        "plateMetadata": undefined,
        "protocolId": 1,
        "protocolParameters": undefined,
        "protocolTransformScripts": undefined,
        "providerName": undefined,
        "saveScriptFiles": false,
        "selectedDetectionMethod": undefined,
        "selectedMetadataInputFormat": undefined,
        "selectedPlateTemplate": undefined,
        "qcEnabled": undefined,
      }
    }
    onChange={[Function]}
    onToggle={[Function]}
    panelStatus="COMPLETE"
    validate={false}
  >
    <AssayPropertiesPanelImpl
      appPropertiesOnly={true}
      asPanel={true}
      collapsed={false}
      controlledCollapse={true}
      helpTopic="defineAssaySchema"
      model={
        Immutable.Record {
          "allowBackgroundUpload": true,
          "allowEditableResults": true,
          "allowQCStates": false,
          "allowSpacesInPath": false,
          "allowTransformationScript": false,
          "allowPlateMetadata": false,
          "autoCopyTargetContainer": undefined,
          "autoCopyTargetContainerId": undefined,
          "availableDetectionMethods": undefined,
          "availableMetadataInputFormats": undefined,
          "availablePlateTemplates": undefined,
          "backgroundUpload": true,
          "description": "My assay protocol for you all to use.",
          "domains": Immutable.List [
            Immutable.Record {
              "name": "Batch Fields",
              "container": undefined,
              "description": undefined,
              "domainURI": undefined,
              "domainId": null,
              "allowFileLinkProperties": true,
              "allowAttachmentProperties": true,
              "allowFlagProperties": true,
              "showDefaultValueSettings": false,
              "defaultDefaultValueType": undefined,
              "defaultValueOptions": Immutable.List [],
              "fields": Immutable.List [],
              "indices": Immutable.List [],
              "domainException": undefined,
              "mandatoryFieldNames": Immutable.List [],
              "reservedFieldNames": Immutable.List [],
              "newDesignFields": undefined,
              "instructions": undefined,
            },
            Immutable.Record {
              "name": "Sample Fields",
              "container": undefined,
              "description": undefined,
              "domainURI": undefined,
              "domainId": null,
              "allowFileLinkProperties": true,
              "allowAttachmentProperties": true,
              "allowFlagProperties": true,
              "showDefaultValueSettings": false,
              "defaultDefaultValueType": undefined,
              "defaultValueOptions": Immutable.List [],
              "fields": Immutable.List [
                Immutable.Record {
                  "conceptURI": undefined,
                  "conditionalFormats": Immutable.List [],
                  "defaultScale": undefined,
                  "defaultValueType": undefined,
                  "defaultValue": undefined,
                  "defaultDisplayValue": undefined,
                  "description": undefined,
                  "dimension": undefined,
                  "excludeFromShifting": false,
                  "format": undefined,
                  "hidden": false,
                  "importAliases": undefined,
                  "label": undefined,
                  "lookupContainer": undefined,
                  "lookupQuery": undefined,
                  "lookupSchema": undefined,
                  "lookupValidator": undefined,
                  "measure": undefined,
                  "mvEnabled": false,
                  "name": "field1",
                  "PHI": undefined,
                  "primaryKey": undefined,
                  "propertyId": undefined,
                  "propertyURI": undefined,
                  "propertyValidators": Immutable.List [],
                  "rangeValidators": Immutable.List [],
                  "rangeURI": "xsd:string",
                  "regexValidators": Immutable.List [],
                  "recommendedVariable": false,
                  "required": false,
                  "scale": undefined,
                  "URL": undefined,
                  "shownInDetailsView": true,
                  "shownInInsertView": true,
                  "shownInUpdateView": true,
                  "visible": true,
                  "dataType": Immutable.Record {
                    "conceptURI": undefined,
                    "display": "Text",
                    "name": "string",
                    "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                    "alternateRangeURI": "xsd:string",
                    "shortDisplay": "String",
                    "lookupSchema": undefined,
                    "lookupQuery": undefined,
                  },
                  "lookupQueryValue": undefined,
                  "lookupType": Immutable.Record {
                    "conceptURI": undefined,
                    "display": "Lookup",
                    "name": "lookup",
                    "rangeURI": "xsd:string",
                    "alternateRangeURI": undefined,
                    "shortDisplay": undefined,
                    "lookupSchema": undefined,
                    "lookupQuery": undefined,
                  },
                  "original": Object {
                    "conceptURI": undefined,
                    "dataType": Immutable.Record {
                      "conceptURI": undefined,
                      "display": "Text",
                      "name": "string",
                      "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                      "alternateRangeURI": "xsd:string",
                      "shortDisplay": "String",
                      "lookupSchema": undefined,
                      "lookupQuery": undefined,
                    },
                    "rangeURI": undefined,
                  },
                  "updatedField": false,
                  "isPrimaryKey": false,
                  "lockType": "NotLocked",
                  "wrappedColumnName": undefined,
                },
                Immutable.Record {
                  "conceptURI": undefined,
                  "conditionalFormats": Immutable.List [],
                  "defaultScale": undefined,
                  "defaultValueType": undefined,
                  "defaultValue": undefined,
                  "defaultDisplayValue": undefined,
                  "description": undefined,
                  "dimension": undefined,
                  "excludeFromShifting": false,
                  "format": undefined,
                  "hidden": false,
                  "importAliases": undefined,
                  "label": undefined,
                  "lookupContainer": undefined,
                  "lookupQuery": undefined,
                  "lookupSchema": undefined,
                  "lookupValidator": undefined,
                  "measure": undefined,
                  "mvEnabled": false,
                  "name": "field2",
                  "PHI": undefined,
                  "primaryKey": undefined,
                  "propertyId": undefined,
                  "propertyURI": undefined,
                  "propertyValidators": Immutable.List [],
                  "rangeValidators": Immutable.List [],
                  "rangeURI": "xsd:int",
                  "regexValidators": Immutable.List [],
                  "recommendedVariable": false,
                  "required": false,
                  "scale": undefined,
                  "URL": undefined,
                  "shownInDetailsView": true,
                  "shownInInsertView": true,
                  "shownInUpdateView": true,
                  "visible": true,
                  "dataType": Immutable.Record {
                    "conceptURI": undefined,
                    "display": "Integer",
                    "name": "int",
                    "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                    "alternateRangeURI": "xsd:int",
                    "shortDisplay": undefined,
                    "lookupSchema": undefined,
                    "lookupQuery": undefined,
                  },
                  "lookupQueryValue": undefined,
                  "lookupType": Immutable.Record {
                    "conceptURI": undefined,
                    "display": "Lookup",
                    "name": "lookup",
                    "rangeURI": "xsd:int",
                    "alternateRangeURI": undefined,
                    "shortDisplay": undefined,
                    "lookupSchema": undefined,
                    "lookupQuery": undefined,
                  },
                  "original": Object {
                    "conceptURI": undefined,
                    "dataType": Immutable.Record {
                      "conceptURI": undefined,
                      "display": "Integer",
                      "name": "int",
                      "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                      "alternateRangeURI": "xsd:int",
                      "shortDisplay": undefined,
                      "lookupSchema": undefined,
                      "lookupQuery": undefined,
                    },
                    "rangeURI": undefined,
                  },
                  "updatedField": false,
                  "isPrimaryKey": false,
                  "lockType": "NotLocked",
                  "wrappedColumnName": undefined,
                },
                Immutable.Record {
                  "conceptURI": undefined,
                  "conditionalFormats": Immutable.List [],
                  "defaultScale": undefined,
                  "defaultValueType": undefined,
                  "defaultValue": undefined,
                  "defaultDisplayValue": undefined,
                  "description": undefined,
                  "dimension": undefined,
                  "excludeFromShifting": false,
                  "format": undefined,
                  "hidden": false,
                  "importAliases": undefined,
                  "label": undefined,
                  "lookupContainer": undefined,
                  "lookupQuery": undefined,
                  "lookupSchema": undefined,
                  "lookupValidator": undefined,
                  "measure": undefined,
                  "mvEnabled": false,
                  "name": "field3",
                  "PHI": undefined,
                  "primaryKey": undefined,
                  "propertyId": undefined,
                  "propertyURI": undefined,
                  "propertyValidators": Immutable.List [],
                  "rangeValidators": Immutable.List [],
                  "rangeURI": "xsd:dateTime",
                  "regexValidators": Immutable.List [],
                  "recommendedVariable": false,
                  "required": false,
                  "scale": undefined,
                  "URL": undefined,
                  "shownInDetailsView": true,
                  "shownInInsertView": true,
                  "shownInUpdateView": true,
                  "visible": true,
                  "dataType": Immutable.Record {
                    "conceptURI": undefined,
                    "display": "Date Time",
                    "name": "dateTime",
                    "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                    "alternateRangeURI": "xsd:dateTime",
                    "shortDisplay": undefined,
                    "lookupSchema": undefined,
                    "lookupQuery": undefined,
                  },
                  "lookupQueryValue": undefined,
                  "lookupType": Immutable.Record {
                    "conceptURI": undefined,
                    "display": "Lookup",
                    "name": "lookup",
                    "rangeURI": "xsd:dateTime",
                    "alternateRangeURI": undefined,
                    "shortDisplay": undefined,
                    "lookupSchema": undefined,
                    "lookupQuery": undefined,
                  },
                  "original": Object {
                    "conceptURI": undefined,
                    "dataType": Immutable.Record {
                      "conceptURI": undefined,
                      "display": "Date Time",
                      "name": "dateTime",
                      "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                      "alternateRangeURI": "xsd:dateTime",
                      "shortDisplay": undefined,
                      "lookupSchema": undefined,
                      "lookupQuery": undefined,
                    },
                    "rangeURI": undefined,
                  },
                  "updatedField": false,
                  "isPrimaryKey": false,
                  "lockType": "NotLocked",
                  "wrappedColumnName": undefined,
                },
              ],
              "indices": Immutable.List [],
              "domainException": undefined,
              "mandatoryFieldNames": Immutable.List [],
              "reservedFieldNames": Immutable.List [],
              "newDesignFields": undefined,
              "instructions": undefined,
            },
          ],
          "editableResults": true,
          "editableRuns": true,
          "exception": undefined,
          "metadataInputFormatHelp": undefined,
          "moduleTransformScripts": undefined,
          "name": "Test Assay Protocol",
          "plateMetadata": undefined,
          "protocolId": 1,
          "protocolParameters": undefined,
          "protocolTransformScripts": undefined,
          "providerName": undefined,
          "saveScriptFiles": false,
          "selectedDetectionMethod": undefined,
          "selectedMetadataInputFormat": undefined,
          "selectedPlateTemplate": undefined,
          "qcEnabled": undefined,
        }
      }
      onChange={[Function]}
      panelStatus="COMPLETE"
      togglePanel={[Function]}
      validate={false}
    >
      <Uncontrolled(Panel)
        className="domain-form-panel domain-panel-no-theme"
        expanded={true}
        onToggle={[Function]}
      >
        <Panel
          bsClass="panel"
          bsStyle="default"
          className="domain-form-panel domain-panel-no-theme"
          expanded={true}
          onToggle={[Function]}
        >
          <div
            className="domain-form-panel domain-panel-no-theme panel panel-default"
          >
            <CollapsiblePanelHeader
              collapsed={false}
              controlledCollapse={true}
              iconHelpMsg="Contains errors or is missing required values."
              id="assay-properties-hdr"
              isValid={true}
              panelStatus="COMPLETE"
              title="Assay Properties"
              titlePrefix="Test Assay Protocol"
              togglePanel={[Function]}
            >
              <PanelHeading
                bsClass="panel"
                className="domain-panel-header domain-heading-collapsible domain-panel-header-expanded domain-panel-header-no-theme"
                componentClass="div"
                id="assay-properties-hdr"
                onClick={[Function]}
              >
                <div
                  className="domain-panel-header domain-heading-collapsible domain-panel-header-expanded domain-panel-header-no-theme panel-heading"
                  id="assay-properties-hdr"
                  onClick={[Function]}
                >
                  <span
                    className="domain-panel-status-icon"
                  >
                    <FontAwesomeIcon
                      border={false}
                      className=""
                      fixedWidth={false}
                      flip={null}
                      icon={
                        Object {
                          "icon": Array [
                            512,
                            512,
                            Array [],
                            "f058",
                            "M504 256c0 136.967-111.033 248-248 248S8 392.967 8 256 119.033 8 256 8s248 111.033 248 248zM227.314 387.314l184-184c6.248-6.248 6.248-16.379 0-22.627l-22.627-22.627c-6.248-6.249-16.379-6.249-22.628 0L216 308.118l-70.059-70.059c-6.248-6.248-16.379-6.248-22.628 0l-22.627 22.627c-6.248 6.248-6.248 16.379 0 22.627l104 104c6.249 6.249 16.379 6.249 22.628.001z",
                          ],
                          "iconName": "check-circle",
                          "prefix": "fas",
                        }
                      }
                      inverse={false}
                      listItem={false}
                      mask={null}
                      pull={null}
                      pulse={false}
                      rotation={null}
                      size={null}
                      spin={false}
                      symbol={false}
                      title=""
                      transform={null}
                    >
                      <svg
                        aria-hidden="true"
                        className="svg-inline--fa fa-check-circle fa-w-16 "
                        data-icon="check-circle"
                        data-prefix="fas"
                        focusable="false"
                        role="img"
                        style={Object {}}
                        viewBox="0 0 512 512"
                        xmlns="http://www.w3.org/2000/svg"
                      >
                        <path
                          d="M504 256c0 136.967-111.033 248-248 248S8 392.967 8 256 119.033 8 256 8s248 111.033 248 248zM227.314 387.314l184-184c6.248-6.248 6.248-16.379 0-22.627l-22.627-22.627c-6.248-6.249-16.379-6.249-22.628 0L216 308.118l-70.059-70.059c-6.248-6.248-16.379-6.248-22.628 0l-22.627 22.627c-6.248 6.248-6.248 16.379 0 22.627l104 104c6.249 6.249 16.379 6.249 22.628.001z"
                          fill="currentColor"
                          style={Object {}}
                        />
                      </svg>
                    </FontAwesomeIcon>
                  </span>
                  <span
                    className="domain-panel-title"
                  >
                    Test Assay Protocol - Assay Properties
                  </span>
                  <span
                    className="pull-right"
                  >
                    <FontAwesomeIcon
                      border={false}
                      className="domain-form-collapse-btn"
                      fixedWidth={false}
                      flip={null}
                      icon={
                        Object {
                          "icon": Array [
                            448,
                            512,
                            Array [],
                            "f146",
                            "M400 32H48C21.5 32 0 53.5 0 80v352c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V80c0-26.5-21.5-48-48-48zM92 296c-6.6 0-12-5.4-12-12v-56c0-6.6 5.4-12 12-12h264c6.6 0 12 5.4 12 12v56c0 6.6-5.4 12-12 12H92z",
                          ],
                          "iconName": "minus-square",
                          "prefix": "fas",
                        }
                      }
                      inverse={false}
                      listItem={false}
                      mask={null}
                      pull={null}
                      pulse={false}
                      rotation={null}
                      size="lg"
                      spin={false}
                      symbol={false}
                      title=""
                      transform={null}
                    >
                      <svg
                        aria-hidden="true"
                        className="svg-inline--fa fa-minus-square fa-w-14 fa-lg domain-form-collapse-btn"
                        data-icon="minus-square"
                        data-prefix="fas"
                        focusable="false"
                        role="img"
                        style={Object {}}
                        viewBox="0 0 448 512"
                        xmlns="http://www.w3.org/2000/svg"
                      >
                        <path
                          d="M400 32H48C21.5 32 0 53.5 0 80v352c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V80c0-26.5-21.5-48-48-48zM92 296c-6.6 0-12-5.4-12-12v-56c0-6.6 5.4-12 12-12h264c6.6 0 12 5.4 12 12v56c0 6.6-5.4 12-12 12H92z"
                          fill="currentColor"
                          style={Object {}}
                        />
                      </svg>
                    </FontAwesomeIcon>
                  </span>
                </div>
              </PanelHeading>
            </CollapsiblePanelHeader>
            <PanelBody
              bsClass="panel"
              collapsible={true}
            >
              <PanelCollapse
                bsClass="panel"
              >
                <Collapse
                  appear={false}
                  dimension="height"
                  getDimensionValue={[Function]}
                  in={true}
                  mountOnEnter={false}
                  timeout={300}
                  unmountOnExit={false}
                >
                  <Transition
                    appear={false}
                    aria-expanded={null}
                    enter={true}
                    exit={true}
                    in={true}
                    mountOnEnter={false}
                    onEnter={[Function]}
                    onEntered={[Function]}
                    onEntering={[Function]}
                    onExit={[Function]}
                    onExited={[Function]}
                    onExiting={[Function]}
                    timeout={300}
                    unmountOnExit={false}
                  >
                    <div
                      aria-expanded={null}
                      className="panel-collapse collapse in"
                    >
                      <div
                        className="panel-body"
                      >
                        <HelpTopicURL
                          helpTopic="defineAssaySchema"
                          nounPlural="assays"
                        >
                          <Row
                            bsClass="row"
                            componentClass="div"
                          >
                            <div
                              className="row"
                            >
                              <Col
                                bsClass="col"
                                componentClass="div"
                                xs={12}
                              >
                                <div
                                  className="col-xs-12"
                                >
                                  <a
                                    className="domain-field-float-right"
                                    href="https://www.labkey.org/Documentation/wiki-page.view?name=defineAssaySchema"
                                    target="_blank"
                                  >
                                    Learn more about designing assays
                                  </a>
                                </div>
                              </Col>
                            </div>
                          </Row>
                        </HelpTopicURL>
                        <Form
                          bsClass="form"
                          componentClass="form"
                          horizontal={false}
                          inline={false}
                        >
                          <form
                            className=""
                          >
                            <Col
                              bsClass="col"
                              componentClass="div"
                              lg={12}
                              xs={12}
                            >
                              <div
                                className="col-lg-12 col-xs-12"
                              >
                                <div
                                  className="domain-field-padding-bottom"
                                >
                                  <SectionHeading
                                    helpTopic="defineAssaySchema"
                                    title="Basic Properties"
                                  >
                                    <Row
                                      bsClass="row"
                                      componentClass="div"
                                    >
                                      <div
                                        className="row"
                                      >
                                        <Col
                                          bsClass="col"
                                          componentClass="div"
                                          xs={9}
                                        >
                                          <div
                                            className="col-xs-9"
                                          >
                                            <div
                                              className="domain-field-section-heading"
                                            >
                                              Basic Properties
                                            </div>
                                          </div>
                                        </Col>
                                      </div>
                                    </Row>
                                  </SectionHeading>
                                  <NameInput
                                    appPropertiesOnly={true}
                                    model={
                                      Immutable.Record {
                                        "allowBackgroundUpload": true,
                                        "allowEditableResults": true,
                                        "allowQCStates": false,
                                        "allowSpacesInPath": false,
                                        "allowTransformationScript": false,
                                        "allowPlateMetadata": false,
                                        "autoCopyTargetContainer": undefined,
                                        "autoCopyTargetContainerId": undefined,
                                        "availableDetectionMethods": undefined,
                                        "availableMetadataInputFormats": undefined,
                                        "availablePlateTemplates": undefined,
                                        "backgroundUpload": true,
                                        "description": "My assay protocol for you all to use.",
                                        "domains": Immutable.List [
                                          Immutable.Record {
                                            "name": "Batch Fields",
                                            "container": undefined,
                                            "description": undefined,
                                            "domainURI": undefined,
                                            "domainId": null,
                                            "allowFileLinkProperties": true,
                                            "allowAttachmentProperties": true,
                                            "allowFlagProperties": true,
                                            "showDefaultValueSettings": false,
                                            "defaultDefaultValueType": undefined,
                                            "defaultValueOptions": Immutable.List [],
                                            "fields": Immutable.List [],
                                            "indices": Immutable.List [],
                                            "domainException": undefined,
                                            "mandatoryFieldNames": Immutable.List [],
                                            "reservedFieldNames": Immutable.List [],
                                            "newDesignFields": undefined,
                                            "instructions": undefined,
                                          },
                                          Immutable.Record {
                                            "name": "Sample Fields",
                                            "container": undefined,
                                            "description": undefined,
                                            "domainURI": undefined,
                                            "domainId": null,
                                            "allowFileLinkProperties": true,
                                            "allowAttachmentProperties": true,
                                            "allowFlagProperties": true,
                                            "showDefaultValueSettings": false,
                                            "defaultDefaultValueType": undefined,
                                            "defaultValueOptions": Immutable.List [],
                                            "fields": Immutable.List [
                                              Immutable.Record {
                                                "conceptURI": undefined,
                                                "conditionalFormats": Immutable.List [],
                                                "defaultScale": undefined,
                                                "defaultValueType": undefined,
                                                "defaultValue": undefined,
                                                "defaultDisplayValue": undefined,
                                                "description": undefined,
                                                "dimension": undefined,
                                                "excludeFromShifting": false,
                                                "format": undefined,
                                                "hidden": false,
                                                "importAliases": undefined,
                                                "label": undefined,
                                                "lookupContainer": undefined,
                                                "lookupQuery": undefined,
                                                "lookupSchema": undefined,
                                                "lookupValidator": undefined,
                                                "measure": undefined,
                                                "mvEnabled": false,
                                                "name": "field1",
                                                "PHI": undefined,
                                                "primaryKey": undefined,
                                                "propertyId": undefined,
                                                "propertyURI": undefined,
                                                "propertyValidators": Immutable.List [],
                                                "rangeValidators": Immutable.List [],
                                                "rangeURI": "xsd:string",
                                                "regexValidators": Immutable.List [],
                                                "recommendedVariable": false,
                                                "required": false,
                                                "scale": undefined,
                                                "URL": undefined,
                                                "shownInDetailsView": true,
                                                "shownInInsertView": true,
                                                "shownInUpdateView": true,
                                                "visible": true,
                                                "dataType": Immutable.Record {
                                                  "conceptURI": undefined,
                                                  "display": "Text",
                                                  "name": "string",
                                                  "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                  "alternateRangeURI": "xsd:string",
                                                  "shortDisplay": "String",
                                                  "lookupSchema": undefined,
                                                  "lookupQuery": undefined,
                                                },
                                                "lookupQueryValue": undefined,
                                                "lookupType": Immutable.Record {
                                                  "conceptURI": undefined,
                                                  "display": "Lookup",
                                                  "name": "lookup",
                                                  "rangeURI": "xsd:string",
                                                  "alternateRangeURI": undefined,
                                                  "shortDisplay": undefined,
                                                  "lookupSchema": undefined,
                                                  "lookupQuery": undefined,
                                                },
                                                "original": Object {
                                                  "conceptURI": undefined,
                                                  "dataType": Immutable.Record {
                                                    "conceptURI": undefined,
                                                    "display": "Text",
                                                    "name": "string",
                                                    "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                    "alternateRangeURI": "xsd:string",
                                                    "shortDisplay": "String",
                                                    "lookupSchema": undefined,
                                                    "lookupQuery": undefined,
                                                  },
                                                  "rangeURI": undefined,
                                                },
                                                "updatedField": false,
                                                "isPrimaryKey": false,
                                                "lockType": "NotLocked",
                                                "wrappedColumnName": undefined,
                                              },
                                              Immutable.Record {
                                                "conceptURI": undefined,
                                                "conditionalFormats": Immutable.List [],
                                                "defaultScale": undefined,
                                                "defaultValueType": undefined,
                                                "defaultValue": undefined,
                                                "defaultDisplayValue": undefined,
                                                "description": undefined,
                                                "dimension": undefined,
                                                "excludeFromShifting": false,
                                                "format": undefined,
                                                "hidden": false,
                                                "importAliases": undefined,
                                                "label": undefined,
                                                "lookupContainer": undefined,
                                                "lookupQuery": undefined,
                                                "lookupSchema": undefined,
                                                "lookupValidator": undefined,
                                                "measure": undefined,
                                                "mvEnabled": false,
                                                "name": "field2",
                                                "PHI": undefined,
                                                "primaryKey": undefined,
                                                "propertyId": undefined,
                                                "propertyURI": undefined,
                                                "propertyValidators": Immutable.List [],
                                                "rangeValidators": Immutable.List [],
                                                "rangeURI": "xsd:int",
                                                "regexValidators": Immutable.List [],
                                                "recommendedVariable": false,
                                                "required": false,
                                                "scale": undefined,
                                                "URL": undefined,
                                                "shownInDetailsView": true,
                                                "shownInInsertView": true,
                                                "shownInUpdateView": true,
                                                "visible": true,
                                                "dataType": Immutable.Record {
                                                  "conceptURI": undefined,
                                                  "display": "Integer",
                                                  "name": "int",
                                                  "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                                  "alternateRangeURI": "xsd:int",
                                                  "shortDisplay": undefined,
                                                  "lookupSchema": undefined,
                                                  "lookupQuery": undefined,
                                                },
                                                "lookupQueryValue": undefined,
                                                "lookupType": Immutable.Record {
                                                  "conceptURI": undefined,
                                                  "display": "Lookup",
                                                  "name": "lookup",
                                                  "rangeURI": "xsd:int",
                                                  "alternateRangeURI": undefined,
                                                  "shortDisplay": undefined,
                                                  "lookupSchema": undefined,
                                                  "lookupQuery": undefined,
                                                },
                                                "original": Object {
                                                  "conceptURI": undefined,
                                                  "dataType": Immutable.Record {
                                                    "conceptURI": undefined,
                                                    "display": "Integer",
                                                    "name": "int",
                                                    "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                                    "alternateRangeURI": "xsd:int",
                                                    "shortDisplay": undefined,
                                                    "lookupSchema": undefined,
                                                    "lookupQuery": undefined,
                                                  },
                                                  "rangeURI": undefined,
                                                },
                                                "updatedField": false,
                                                "isPrimaryKey": false,
                                                "lockType": "NotLocked",
                                                "wrappedColumnName": undefined,
                                              },
                                              Immutable.Record {
                                                "conceptURI": undefined,
                                                "conditionalFormats": Immutable.List [],
                                                "defaultScale": undefined,
                                                "defaultValueType": undefined,
                                                "defaultValue": undefined,
                                                "defaultDisplayValue": undefined,
                                                "description": undefined,
                                                "dimension": undefined,
                                                "excludeFromShifting": false,
                                                "format": undefined,
                                                "hidden": false,
                                                "importAliases": undefined,
                                                "label": undefined,
                                                "lookupContainer": undefined,
                                                "lookupQuery": undefined,
                                                "lookupSchema": undefined,
                                                "lookupValidator": undefined,
                                                "measure": undefined,
                                                "mvEnabled": false,
                                                "name": "field3",
                                                "PHI": undefined,
                                                "primaryKey": undefined,
                                                "propertyId": undefined,
                                                "propertyURI": undefined,
                                                "propertyValidators": Immutable.List [],
                                                "rangeValidators": Immutable.List [],
                                                "rangeURI": "xsd:dateTime",
                                                "regexValidators": Immutable.List [],
                                                "recommendedVariable": false,
                                                "required": false,
                                                "scale": undefined,
                                                "URL": undefined,
                                                "shownInDetailsView": true,
                                                "shownInInsertView": true,
                                                "shownInUpdateView": true,
                                                "visible": true,
                                                "dataType": Immutable.Record {
                                                  "conceptURI": undefined,
                                                  "display": "Date Time",
                                                  "name": "dateTime",
                                                  "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                                                  "alternateRangeURI": "xsd:dateTime",
                                                  "shortDisplay": undefined,
                                                  "lookupSchema": undefined,
                                                  "lookupQuery": undefined,
                                                },
                                                "lookupQueryValue": undefined,
                                                "lookupType": Immutable.Record {
                                                  "conceptURI": undefined,
                                                  "display": "Lookup",
                                                  "name": "lookup",
                                                  "rangeURI": "xsd:dateTime",
                                                  "alternateRangeURI": undefined,
                                                  "shortDisplay": undefined,
                                                  "lookupSchema": undefined,
                                                  "lookupQuery": undefined,
                                                },
                                                "original": Object {
                                                  "conceptURI": undefined,
                                                  "dataType": Immutable.Record {
                                                    "conceptURI": undefined,
                                                    "display": "Date Time",
                                                    "name": "dateTime",
                                                    "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                                                    "alternateRangeURI": "xsd:dateTime",
                                                    "shortDisplay": undefined,
                                                    "lookupSchema": undefined,
                                                    "lookupQuery": undefined,
                                                  },
                                                  "rangeURI": undefined,
                                                },
                                                "updatedField": false,
                                                "isPrimaryKey": false,
                                                "lockType": "NotLocked",
                                                "wrappedColumnName": undefined,
                                              },
                                            ],
                                            "indices": Immutable.List [],
                                            "domainException": undefined,
                                            "mandatoryFieldNames": Immutable.List [],
                                            "reservedFieldNames": Immutable.List [],
                                            "newDesignFields": undefined,
                                            "instructions": undefined,
                                          },
                                        ],
                                        "editableResults": true,
                                        "editableRuns": true,
                                        "exception": undefined,
                                        "metadataInputFormatHelp": undefined,
                                        "moduleTransformScripts": undefined,
                                        "name": "Test Assay Protocol",
                                        "plateMetadata": undefined,
                                        "protocolId": 1,
                                        "protocolParameters": undefined,
                                        "protocolTransformScripts": undefined,
                                        "providerName": undefined,
                                        "saveScriptFiles": false,
                                        "selectedDetectionMethod": undefined,
                                        "selectedMetadataInputFormat": undefined,
                                        "selectedPlateTemplate": undefined,
                                        "qcEnabled": undefined,
                                      }
                                    }
                                    onChange={[Function]}
                                  >
                                    <AssayPropertiesInput
                                      appPropertiesOnly={true}
                                      helpTipBody={[Function]}
                                      label="Name"
                                      required={true}
                                    >
                                      <Row
                                        bsClass="row"
                                        className="margin-top"
                                        componentClass="div"
                                      >
                                        <div
                                          className="margin-top row"
                                        >
                                          <Col
                                            bsClass="col"
                                            componentClass="div"
                                            lg={2}
                                            xs={3}
                                          >
                                            <div
                                              className="col-lg-2 col-xs-3"
                                            >
                                              <span
                                                className="domain-no-wrap"
                                              >
                                                Name
                                                 *
                                                <LabelHelpTip
                                                  body={[Function]}
                                                  customStyle={Object {}}
                                                  id="tooltip"
                                                  required={true}
                                                  size="1x"
                                                  title="Name"
                                                >
                                                  <span
                                                    className="label-help-target"
                                                    onMouseOut={[Function]}
                                                    onMouseOver={[Function]}
                                                  >
                                                    <FontAwesomeIcon
                                                      border={false}
                                                      className="label-help-icon"
                                                      fixedWidth={false}
                                                      flip={null}
                                                      icon={
                                                        Object {
                                                          "icon": Array [
                                                            512,
                                                            512,
                                                            Array [],
                                                            "f059",
                                                            "M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z",
                                                          ],
                                                          "iconName": "question-circle",
                                                          "prefix": "fas",
                                                        }
                                                      }
                                                      inverse={false}
                                                      listItem={false}
                                                      mask={null}
                                                      pull={null}
                                                      pulse={false}
                                                      rotation={null}
                                                      size="1x"
                                                      spin={false}
                                                      style={Object {}}
                                                      symbol={false}
                                                      title=""
                                                      transform={null}
                                                    >
                                                      <svg
                                                        aria-hidden="true"
                                                        className="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                                                        data-icon="question-circle"
                                                        data-prefix="fas"
                                                        focusable="false"
                                                        role="img"
                                                        style={Object {}}
                                                        viewBox="0 0 512 512"
                                                        xmlns="http://www.w3.org/2000/svg"
                                                      >
                                                        <path
                                                          d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                          fill="currentColor"
                                                          style={Object {}}
                                                        />
                                                      </svg>
                                                    </FontAwesomeIcon>
                                                    <Overlay
                                                      animation={[Function]}
                                                      placement="right"
                                                      rootClose={false}
                                                      show={false}
                                                      target={
                                                        <span
                                                          class="label-help-target"
                                                        >
                                                          <svg
                                                            aria-hidden="true"
                                                            class="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                                                            data-icon="question-circle"
                                                            data-prefix="fas"
                                                            focusable="false"
                                                            role="img"
                                                            viewBox="0 0 512 512"
                                                            xmlns="http://www.w3.org/2000/svg"
                                                          >
                                                            <path
                                                              d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                              fill="currentColor"
                                                            />
                                                          </svg>
                                                        </span>
                                                      }
                                                    >
                                                      <Overlay
                                                        placement="right"
                                                        rootClose={false}
                                                        show={false}
                                                        target={
                                                          <span
                                                            class="label-help-target"
                                                          >
                                                            <svg
                                                              aria-hidden="true"
                                                              class="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                                                              data-icon="question-circle"
                                                              data-prefix="fas"
                                                              focusable="false"
                                                              role="img"
                                                              viewBox="0 0 512 512"
                                                              xmlns="http://www.w3.org/2000/svg"
                                                            >
                                                              <path
                                                                d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                                fill="currentColor"
                                                              />
                                                            </svg>
                                                          </span>
                                                        }
                                                        transition={[Function]}
                                                      />
                                                    </Overlay>
                                                  </span>
                                                </LabelHelpTip>
                                              </span>
                                            </div>
                                          </Col>
                                          <Col
                                            bsClass="col"
                                            componentClass="div"
                                            lg={10}
                                            xs={9}
                                          >
                                            <div
                                              className="col-lg-10 col-xs-9"
                                            >
                                              <FormControl
                                                bsClass="form-control"
                                                componentClass="input"
                                                disabled={true}
                                                id="assay-design-name"
                                                onChange={[Function]}
                                                placeholder="Enter a name for this assay"
                                                type="text"
                                                value="Test Assay Protocol"
                                              >
                                                <input
                                                  className="form-control"
                                                  disabled={true}
                                                  id="assay-design-name"
                                                  onChange={[Function]}
                                                  placeholder="Enter a name for this assay"
                                                  type="text"
                                                  value="Test Assay Protocol"
                                                />
                                              </FormControl>
                                            </div>
                                          </Col>
                                        </div>
                                      </Row>
                                    </AssayPropertiesInput>
                                  </NameInput>
                                  <DescriptionInput
                                    appPropertiesOnly={true}
                                    model={
                                      Immutable.Record {
                                        "allowBackgroundUpload": true,
                                        "allowEditableResults": true,
                                        "allowQCStates": false,
                                        "allowSpacesInPath": false,
                                        "allowTransformationScript": false,
                                        "allowPlateMetadata": false,
                                        "autoCopyTargetContainer": undefined,
                                        "autoCopyTargetContainerId": undefined,
                                        "availableDetectionMethods": undefined,
                                        "availableMetadataInputFormats": undefined,
                                        "availablePlateTemplates": undefined,
                                        "backgroundUpload": true,
                                        "description": "My assay protocol for you all to use.",
                                        "domains": Immutable.List [
                                          Immutable.Record {
                                            "name": "Batch Fields",
                                            "container": undefined,
                                            "description": undefined,
                                            "domainURI": undefined,
                                            "domainId": null,
                                            "allowFileLinkProperties": true,
                                            "allowAttachmentProperties": true,
                                            "allowFlagProperties": true,
                                            "showDefaultValueSettings": false,
                                            "defaultDefaultValueType": undefined,
                                            "defaultValueOptions": Immutable.List [],
                                            "fields": Immutable.List [],
                                            "indices": Immutable.List [],
                                            "domainException": undefined,
                                            "mandatoryFieldNames": Immutable.List [],
                                            "reservedFieldNames": Immutable.List [],
                                            "newDesignFields": undefined,
                                            "instructions": undefined,
                                          },
                                          Immutable.Record {
                                            "name": "Sample Fields",
                                            "container": undefined,
                                            "description": undefined,
                                            "domainURI": undefined,
                                            "domainId": null,
                                            "allowFileLinkProperties": true,
                                            "allowAttachmentProperties": true,
                                            "allowFlagProperties": true,
                                            "showDefaultValueSettings": false,
                                            "defaultDefaultValueType": undefined,
                                            "defaultValueOptions": Immutable.List [],
                                            "fields": Immutable.List [
                                              Immutable.Record {
                                                "conceptURI": undefined,
                                                "conditionalFormats": Immutable.List [],
                                                "defaultScale": undefined,
                                                "defaultValueType": undefined,
                                                "defaultValue": undefined,
                                                "defaultDisplayValue": undefined,
                                                "description": undefined,
                                                "dimension": undefined,
                                                "excludeFromShifting": false,
                                                "format": undefined,
                                                "hidden": false,
                                                "importAliases": undefined,
                                                "label": undefined,
                                                "lookupContainer": undefined,
                                                "lookupQuery": undefined,
                                                "lookupSchema": undefined,
                                                "lookupValidator": undefined,
                                                "measure": undefined,
                                                "mvEnabled": false,
                                                "name": "field1",
                                                "PHI": undefined,
                                                "primaryKey": undefined,
                                                "propertyId": undefined,
                                                "propertyURI": undefined,
                                                "propertyValidators": Immutable.List [],
                                                "rangeValidators": Immutable.List [],
                                                "rangeURI": "xsd:string",
                                                "regexValidators": Immutable.List [],
                                                "recommendedVariable": false,
                                                "required": false,
                                                "scale": undefined,
                                                "URL": undefined,
                                                "shownInDetailsView": true,
                                                "shownInInsertView": true,
                                                "shownInUpdateView": true,
                                                "visible": true,
                                                "dataType": Immutable.Record {
                                                  "conceptURI": undefined,
                                                  "display": "Text",
                                                  "name": "string",
                                                  "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                  "alternateRangeURI": "xsd:string",
                                                  "shortDisplay": "String",
                                                  "lookupSchema": undefined,
                                                  "lookupQuery": undefined,
                                                },
                                                "lookupQueryValue": undefined,
                                                "lookupType": Immutable.Record {
                                                  "conceptURI": undefined,
                                                  "display": "Lookup",
                                                  "name": "lookup",
                                                  "rangeURI": "xsd:string",
                                                  "alternateRangeURI": undefined,
                                                  "shortDisplay": undefined,
                                                  "lookupSchema": undefined,
                                                  "lookupQuery": undefined,
                                                },
                                                "original": Object {
                                                  "conceptURI": undefined,
                                                  "dataType": Immutable.Record {
                                                    "conceptURI": undefined,
                                                    "display": "Text",
                                                    "name": "string",
                                                    "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                    "alternateRangeURI": "xsd:string",
                                                    "shortDisplay": "String",
                                                    "lookupSchema": undefined,
                                                    "lookupQuery": undefined,
                                                  },
                                                  "rangeURI": undefined,
                                                },
                                                "updatedField": false,
                                                "isPrimaryKey": false,
                                                "lockType": "NotLocked",
                                                "wrappedColumnName": undefined,
                                              },
                                              Immutable.Record {
                                                "conceptURI": undefined,
                                                "conditionalFormats": Immutable.List [],
                                                "defaultScale": undefined,
                                                "defaultValueType": undefined,
                                                "defaultValue": undefined,
                                                "defaultDisplayValue": undefined,
                                                "description": undefined,
                                                "dimension": undefined,
                                                "excludeFromShifting": false,
                                                "format": undefined,
                                                "hidden": false,
                                                "importAliases": undefined,
                                                "label": undefined,
                                                "lookupContainer": undefined,
                                                "lookupQuery": undefined,
                                                "lookupSchema": undefined,
                                                "lookupValidator": undefined,
                                                "measure": undefined,
                                                "mvEnabled": false,
                                                "name": "field2",
                                                "PHI": undefined,
                                                "primaryKey": undefined,
                                                "propertyId": undefined,
                                                "propertyURI": undefined,
                                                "propertyValidators": Immutable.List [],
                                                "rangeValidators": Immutable.List [],
                                                "rangeURI": "xsd:int",
                                                "regexValidators": Immutable.List [],
                                                "recommendedVariable": false,
                                                "required": false,
                                                "scale": undefined,
                                                "URL": undefined,
                                                "shownInDetailsView": true,
                                                "shownInInsertView": true,
                                                "shownInUpdateView": true,
                                                "visible": true,
                                                "dataType": Immutable.Record {
                                                  "conceptURI": undefined,
                                                  "display": "Integer",
                                                  "name": "int",
                                                  "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                                  "alternateRangeURI": "xsd:int",
                                                  "shortDisplay": undefined,
                                                  "lookupSchema": undefined,
                                                  "lookupQuery": undefined,
                                                },
                                                "lookupQueryValue": undefined,
                                                "lookupType": Immutable.Record {
                                                  "conceptURI": undefined,
                                                  "display": "Lookup",
                                                  "name": "lookup",
                                                  "rangeURI": "xsd:int",
                                                  "alternateRangeURI": undefined,
                                                  "shortDisplay": undefined,
                                                  "lookupSchema": undefined,
                                                  "lookupQuery": undefined,
                                                },
                                                "original": Object {
                                                  "conceptURI": undefined,
                                                  "dataType": Immutable.Record {
                                                    "conceptURI": undefined,
                                                    "display": "Integer",
                                                    "name": "int",
                                                    "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                                    "alternateRangeURI": "xsd:int",
                                                    "shortDisplay": undefined,
                                                    "lookupSchema": undefined,
                                                    "lookupQuery": undefined,
                                                  },
                                                  "rangeURI": undefined,
                                                },
                                                "updatedField": false,
                                                "isPrimaryKey": false,
                                                "lockType": "NotLocked",
                                                "wrappedColumnName": undefined,
                                              },
                                              Immutable.Record {
                                                "conceptURI": undefined,
                                                "conditionalFormats": Immutable.List [],
                                                "defaultScale": undefined,
                                                "defaultValueType": undefined,
                                                "defaultValue": undefined,
                                                "defaultDisplayValue": undefined,
                                                "description": undefined,
                                                "dimension": undefined,
                                                "excludeFromShifting": false,
                                                "format": undefined,
                                                "hidden": false,
                                                "importAliases": undefined,
                                                "label": undefined,
                                                "lookupContainer": undefined,
                                                "lookupQuery": undefined,
                                                "lookupSchema": undefined,
                                                "lookupValidator": undefined,
                                                "measure": undefined,
                                                "mvEnabled": false,
                                                "name": "field3",
                                                "PHI": undefined,
                                                "primaryKey": undefined,
                                                "propertyId": undefined,
                                                "propertyURI": undefined,
                                                "propertyValidators": Immutable.List [],
                                                "rangeValidators": Immutable.List [],
                                                "rangeURI": "xsd:dateTime",
                                                "regexValidators": Immutable.List [],
                                                "recommendedVariable": false,
                                                "required": false,
                                                "scale": undefined,
                                                "URL": undefined,
                                                "shownInDetailsView": true,
                                                "shownInInsertView": true,
                                                "shownInUpdateView": true,
                                                "visible": true,
                                                "dataType": Immutable.Record {
                                                  "conceptURI": undefined,
                                                  "display": "Date Time",
                                                  "name": "dateTime",
                                                  "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                                                  "alternateRangeURI": "xsd:dateTime",
                                                  "shortDisplay": undefined,
                                                  "lookupSchema": undefined,
                                                  "lookupQuery": undefined,
                                                },
                                                "lookupQueryValue": undefined,
                                                "lookupType": Immutable.Record {
                                                  "conceptURI": undefined,
                                                  "display": "Lookup",
                                                  "name": "lookup",
                                                  "rangeURI": "xsd:dateTime",
                                                  "alternateRangeURI": undefined,
                                                  "shortDisplay": undefined,
                                                  "lookupSchema": undefined,
                                                  "lookupQuery": undefined,
                                                },
                                                "original": Object {
                                                  "conceptURI": undefined,
                                                  "dataType": Immutable.Record {
                                                    "conceptURI": undefined,
                                                    "display": "Date Time",
                                                    "name": "dateTime",
                                                    "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                                                    "alternateRangeURI": "xsd:dateTime",
                                                    "shortDisplay": undefined,
                                                    "lookupSchema": undefined,
                                                    "lookupQuery": undefined,
                                                  },
                                                  "rangeURI": undefined,
                                                },
                                                "updatedField": false,
                                                "isPrimaryKey": false,
                                                "lockType": "NotLocked",
                                                "wrappedColumnName": undefined,
                                              },
                                            ],
                                            "indices": Immutable.List [],
                                            "domainException": undefined,
                                            "mandatoryFieldNames": Immutable.List [],
                                            "reservedFieldNames": Immutable.List [],
                                            "newDesignFields": undefined,
                                            "instructions": undefined,
                                          },
                                        ],
                                        "editableResults": true,
                                        "editableRuns": true,
                                        "exception": undefined,
                                        "metadataInputFormatHelp": undefined,
                                        "moduleTransformScripts": undefined,
                                        "name": "Test Assay Protocol",
                                        "plateMetadata": undefined,
                                        "protocolId": 1,
                                        "protocolParameters": undefined,
                                        "protocolTransformScripts": undefined,
                                        "providerName": undefined,
                                        "saveScriptFiles": false,
                                        "selectedDetectionMethod": undefined,
                                        "selectedMetadataInputFormat": undefined,
                                        "selectedPlateTemplate": undefined,
                                        "qcEnabled": undefined,
                                      }
                                    }
                                    onChange={[Function]}
                                  >
                                    <AssayPropertiesInput
                                      appPropertiesOnly={true}
                                      helpTipBody={[Function]}
                                      label="Description"
                                    >
                                      <Row
                                        bsClass="row"
                                        className="margin-top"
                                        componentClass="div"
                                      >
                                        <div
                                          className="margin-top row"
                                        >
                                          <Col
                                            bsClass="col"
                                            componentClass="div"
                                            lg={2}
                                            xs={3}
                                          >
                                            <div
                                              className="col-lg-2 col-xs-3"
                                            >
                                              <span
                                                className="domain-no-wrap"
                                              >
                                                Description
                                                <LabelHelpTip
                                                  body={[Function]}
                                                  customStyle={Object {}}
                                                  id="tooltip"
                                                  size="1x"
                                                  title="Description"
                                                >
                                                  <span
                                                    className="label-help-target"
                                                    onMouseOut={[Function]}
                                                    onMouseOver={[Function]}
                                                  >
                                                    <FontAwesomeIcon
                                                      border={false}
                                                      className="label-help-icon"
                                                      fixedWidth={false}
                                                      flip={null}
                                                      icon={
                                                        Object {
                                                          "icon": Array [
                                                            512,
                                                            512,
                                                            Array [],
                                                            "f059",
                                                            "M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z",
                                                          ],
                                                          "iconName": "question-circle",
                                                          "prefix": "fas",
                                                        }
                                                      }
                                                      inverse={false}
                                                      listItem={false}
                                                      mask={null}
                                                      pull={null}
                                                      pulse={false}
                                                      rotation={null}
                                                      size="1x"
                                                      spin={false}
                                                      style={Object {}}
                                                      symbol={false}
                                                      title=""
                                                      transform={null}
                                                    >
                                                      <svg
                                                        aria-hidden="true"
                                                        className="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                                                        data-icon="question-circle"
                                                        data-prefix="fas"
                                                        focusable="false"
                                                        role="img"
                                                        style={Object {}}
                                                        viewBox="0 0 512 512"
                                                        xmlns="http://www.w3.org/2000/svg"
                                                      >
                                                        <path
                                                          d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                          fill="currentColor"
                                                          style={Object {}}
                                                        />
                                                      </svg>
                                                    </FontAwesomeIcon>
                                                    <Overlay
                                                      animation={[Function]}
                                                      placement="right"
                                                      rootClose={false}
                                                      show={false}
                                                      target={
                                                        <span
                                                          class="label-help-target"
                                                        >
                                                          <svg
                                                            aria-hidden="true"
                                                            class="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                                                            data-icon="question-circle"
                                                            data-prefix="fas"
                                                            focusable="false"
                                                            role="img"
                                                            viewBox="0 0 512 512"
                                                            xmlns="http://www.w3.org/2000/svg"
                                                          >
                                                            <path
                                                              d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                              fill="currentColor"
                                                            />
                                                          </svg>
                                                        </span>
                                                      }
                                                    >
                                                      <Overlay
                                                        placement="right"
                                                        rootClose={false}
                                                        show={false}
                                                        target={
                                                          <span
                                                            class="label-help-target"
                                                          >
                                                            <svg
                                                              aria-hidden="true"
                                                              class="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                                                              data-icon="question-circle"
                                                              data-prefix="fas"
                                                              focusable="false"
                                                              role="img"
                                                              viewBox="0 0 512 512"
                                                              xmlns="http://www.w3.org/2000/svg"
                                                            >
                                                              <path
                                                                d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                                fill="currentColor"
                                                              />
                                                            </svg>
                                                          </span>
                                                        }
                                                        transition={[Function]}
                                                      />
                                                    </Overlay>
                                                  </span>
                                                </LabelHelpTip>
                                              </span>
                                            </div>
                                          </Col>
                                          <Col
                                            bsClass="col"
                                            componentClass="div"
                                            lg={10}
                                            xs={9}
                                          >
                                            <div
                                              className="col-lg-10 col-xs-9"
                                            >
                                              <textarea
                                                className="form-control textarea-noresize"
                                                id="assay-design-description"
                                                onChange={[Function]}
                                                value="My assay protocol for you all to use."
                                              />
                                            </div>
                                          </Col>
                                        </div>
                                      </Row>
                                    </AssayPropertiesInput>
                                  </DescriptionInput>
                                </div>
                                <div
                                  className="domain-field-padding-bottom"
                                >
                                  <SectionHeading
                                    title="Editing Settings"
                                  >
                                    <Row
                                      bsClass="row"
                                      componentClass="div"
                                    >
                                      <div
                                        className="row"
                                      >
                                        <Col
                                          bsClass="col"
                                          componentClass="div"
                                          xs={12}
                                        >
                                          <div
                                            className="col-xs-12"
                                          >
                                            <div
                                              className="domain-field-section-heading"
                                            >
                                              Editing Settings
                                            </div>
                                          </div>
                                        </Col>
                                      </div>
                                    </Row>
                                  </SectionHeading>
                                  <EditableRunsInput
                                    appPropertiesOnly={true}
                                    model={
                                      Immutable.Record {
                                        "allowBackgroundUpload": true,
                                        "allowEditableResults": true,
                                        "allowQCStates": false,
                                        "allowSpacesInPath": false,
                                        "allowTransformationScript": false,
                                        "allowPlateMetadata": false,
                                        "autoCopyTargetContainer": undefined,
                                        "autoCopyTargetContainerId": undefined,
                                        "availableDetectionMethods": undefined,
                                        "availableMetadataInputFormats": undefined,
                                        "availablePlateTemplates": undefined,
                                        "backgroundUpload": true,
                                        "description": "My assay protocol for you all to use.",
                                        "domains": Immutable.List [
                                          Immutable.Record {
                                            "name": "Batch Fields",
                                            "container": undefined,
                                            "description": undefined,
                                            "domainURI": undefined,
                                            "domainId": null,
                                            "allowFileLinkProperties": true,
                                            "allowAttachmentProperties": true,
                                            "allowFlagProperties": true,
                                            "showDefaultValueSettings": false,
                                            "defaultDefaultValueType": undefined,
                                            "defaultValueOptions": Immutable.List [],
                                            "fields": Immutable.List [],
                                            "indices": Immutable.List [],
                                            "domainException": undefined,
                                            "mandatoryFieldNames": Immutable.List [],
                                            "reservedFieldNames": Immutable.List [],
                                            "newDesignFields": undefined,
                                            "instructions": undefined,
                                          },
                                          Immutable.Record {
                                            "name": "Sample Fields",
                                            "container": undefined,
                                            "description": undefined,
                                            "domainURI": undefined,
                                            "domainId": null,
                                            "allowFileLinkProperties": true,
                                            "allowAttachmentProperties": true,
                                            "allowFlagProperties": true,
                                            "showDefaultValueSettings": false,
                                            "defaultDefaultValueType": undefined,
                                            "defaultValueOptions": Immutable.List [],
                                            "fields": Immutable.List [
                                              Immutable.Record {
                                                "conceptURI": undefined,
                                                "conditionalFormats": Immutable.List [],
                                                "defaultScale": undefined,
                                                "defaultValueType": undefined,
                                                "defaultValue": undefined,
                                                "defaultDisplayValue": undefined,
                                                "description": undefined,
                                                "dimension": undefined,
                                                "excludeFromShifting": false,
                                                "format": undefined,
                                                "hidden": false,
                                                "importAliases": undefined,
                                                "label": undefined,
                                                "lookupContainer": undefined,
                                                "lookupQuery": undefined,
                                                "lookupSchema": undefined,
                                                "lookupValidator": undefined,
                                                "measure": undefined,
                                                "mvEnabled": false,
                                                "name": "field1",
                                                "PHI": undefined,
                                                "primaryKey": undefined,
                                                "propertyId": undefined,
                                                "propertyURI": undefined,
                                                "propertyValidators": Immutable.List [],
                                                "rangeValidators": Immutable.List [],
                                                "rangeURI": "xsd:string",
                                                "regexValidators": Immutable.List [],
                                                "recommendedVariable": false,
                                                "required": false,
                                                "scale": undefined,
                                                "URL": undefined,
                                                "shownInDetailsView": true,
                                                "shownInInsertView": true,
                                                "shownInUpdateView": true,
                                                "visible": true,
                                                "dataType": Immutable.Record {
                                                  "conceptURI": undefined,
                                                  "display": "Text",
                                                  "name": "string",
                                                  "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                  "alternateRangeURI": "xsd:string",
                                                  "shortDisplay": "String",
                                                  "lookupSchema": undefined,
                                                  "lookupQuery": undefined,
                                                },
                                                "lookupQueryValue": undefined,
                                                "lookupType": Immutable.Record {
                                                  "conceptURI": undefined,
                                                  "display": "Lookup",
                                                  "name": "lookup",
                                                  "rangeURI": "xsd:string",
                                                  "alternateRangeURI": undefined,
                                                  "shortDisplay": undefined,
                                                  "lookupSchema": undefined,
                                                  "lookupQuery": undefined,
                                                },
                                                "original": Object {
                                                  "conceptURI": undefined,
                                                  "dataType": Immutable.Record {
                                                    "conceptURI": undefined,
                                                    "display": "Text",
                                                    "name": "string",
                                                    "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                    "alternateRangeURI": "xsd:string",
                                                    "shortDisplay": "String",
                                                    "lookupSchema": undefined,
                                                    "lookupQuery": undefined,
                                                  },
                                                  "rangeURI": undefined,
                                                },
                                                "updatedField": false,
                                                "isPrimaryKey": false,
                                                "lockType": "NotLocked",
                                                "wrappedColumnName": undefined,
                                              },
                                              Immutable.Record {
                                                "conceptURI": undefined,
                                                "conditionalFormats": Immutable.List [],
                                                "defaultScale": undefined,
                                                "defaultValueType": undefined,
                                                "defaultValue": undefined,
                                                "defaultDisplayValue": undefined,
                                                "description": undefined,
                                                "dimension": undefined,
                                                "excludeFromShifting": false,
                                                "format": undefined,
                                                "hidden": false,
                                                "importAliases": undefined,
                                                "label": undefined,
                                                "lookupContainer": undefined,
                                                "lookupQuery": undefined,
                                                "lookupSchema": undefined,
                                                "lookupValidator": undefined,
                                                "measure": undefined,
                                                "mvEnabled": false,
                                                "name": "field2",
                                                "PHI": undefined,
                                                "primaryKey": undefined,
                                                "propertyId": undefined,
                                                "propertyURI": undefined,
                                                "propertyValidators": Immutable.List [],
                                                "rangeValidators": Immutable.List [],
                                                "rangeURI": "xsd:int",
                                                "regexValidators": Immutable.List [],
                                                "recommendedVariable": false,
                                                "required": false,
                                                "scale": undefined,
                                                "URL": undefined,
                                                "shownInDetailsView": true,
                                                "shownInInsertView": true,
                                                "shownInUpdateView": true,
                                                "visible": true,
                                                "dataType": Immutable.Record {
                                                  "conceptURI": undefined,
                                                  "display": "Integer",
                                                  "name": "int",
                                                  "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                                  "alternateRangeURI": "xsd:int",
                                                  "shortDisplay": undefined,
                                                  "lookupSchema": undefined,
                                                  "lookupQuery": undefined,
                                                },
                                                "lookupQueryValue": undefined,
                                                "lookupType": Immutable.Record {
                                                  "conceptURI": undefined,
                                                  "display": "Lookup",
                                                  "name": "lookup",
                                                  "rangeURI": "xsd:int",
                                                  "alternateRangeURI": undefined,
                                                  "shortDisplay": undefined,
                                                  "lookupSchema": undefined,
                                                  "lookupQuery": undefined,
                                                },
                                                "original": Object {
                                                  "conceptURI": undefined,
                                                  "dataType": Immutable.Record {
                                                    "conceptURI": undefined,
                                                    "display": "Integer",
                                                    "name": "int",
                                                    "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                                    "alternateRangeURI": "xsd:int",
                                                    "shortDisplay": undefined,
                                                    "lookupSchema": undefined,
                                                    "lookupQuery": undefined,
                                                  },
                                                  "rangeURI": undefined,
                                                },
                                                "updatedField": false,
                                                "isPrimaryKey": false,
                                                "lockType": "NotLocked",
                                                "wrappedColumnName": undefined,
                                              },
                                              Immutable.Record {
                                                "conceptURI": undefined,
                                                "conditionalFormats": Immutable.List [],
                                                "defaultScale": undefined,
                                                "defaultValueType": undefined,
                                                "defaultValue": undefined,
                                                "defaultDisplayValue": undefined,
                                                "description": undefined,
                                                "dimension": undefined,
                                                "excludeFromShifting": false,
                                                "format": undefined,
                                                "hidden": false,
                                                "importAliases": undefined,
                                                "label": undefined,
                                                "lookupContainer": undefined,
                                                "lookupQuery": undefined,
                                                "lookupSchema": undefined,
                                                "lookupValidator": undefined,
                                                "measure": undefined,
                                                "mvEnabled": false,
                                                "name": "field3",
                                                "PHI": undefined,
                                                "primaryKey": undefined,
                                                "propertyId": undefined,
                                                "propertyURI": undefined,
                                                "propertyValidators": Immutable.List [],
                                                "rangeValidators": Immutable.List [],
                                                "rangeURI": "xsd:dateTime",
                                                "regexValidators": Immutable.List [],
                                                "recommendedVariable": false,
                                                "required": false,
                                                "scale": undefined,
                                                "URL": undefined,
                                                "shownInDetailsView": true,
                                                "shownInInsertView": true,
                                                "shownInUpdateView": true,
                                                "visible": true,
                                                "dataType": Immutable.Record {
                                                  "conceptURI": undefined,
                                                  "display": "Date Time",
                                                  "name": "dateTime",
                                                  "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                                                  "alternateRangeURI": "xsd:dateTime",
                                                  "shortDisplay": undefined,
                                                  "lookupSchema": undefined,
                                                  "lookupQuery": undefined,
                                                },
                                                "lookupQueryValue": undefined,
                                                "lookupType": Immutable.Record {
                                                  "conceptURI": undefined,
                                                  "display": "Lookup",
                                                  "name": "lookup",
                                                  "rangeURI": "xsd:dateTime",
                                                  "alternateRangeURI": undefined,
                                                  "shortDisplay": undefined,
                                                  "lookupSchema": undefined,
                                                  "lookupQuery": undefined,
                                                },
                                                "original": Object {
                                                  "conceptURI": undefined,
                                                  "dataType": Immutable.Record {
                                                    "conceptURI": undefined,
                                                    "display": "Date Time",
                                                    "name": "dateTime",
                                                    "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                                                    "alternateRangeURI": "xsd:dateTime",
                                                    "shortDisplay": undefined,
                                                    "lookupSchema": undefined,
                                                    "lookupQuery": undefined,
                                                  },
                                                  "rangeURI": undefined,
                                                },
                                                "updatedField": false,
                                                "isPrimaryKey": false,
                                                "lockType": "NotLocked",
                                                "wrappedColumnName": undefined,
                                              },
                                            ],
                                            "indices": Immutable.List [],
                                            "domainException": undefined,
                                            "mandatoryFieldNames": Immutable.List [],
                                            "reservedFieldNames": Immutable.List [],
                                            "newDesignFields": undefined,
                                            "instructions": undefined,
                                          },
                                        ],
                                        "editableResults": true,
                                        "editableRuns": true,
                                        "exception": undefined,
                                        "metadataInputFormatHelp": undefined,
                                        "moduleTransformScripts": undefined,
                                        "name": "Test Assay Protocol",
                                        "plateMetadata": undefined,
                                        "protocolId": 1,
                                        "protocolParameters": undefined,
                                        "protocolTransformScripts": undefined,
                                        "providerName": undefined,
                                        "saveScriptFiles": false,
                                        "selectedDetectionMethod": undefined,
                                        "selectedMetadataInputFormat": undefined,
                                        "selectedPlateTemplate": undefined,
                                        "qcEnabled": undefined,
                                      }
                                    }
                                    onChange={[Function]}
                                  >
                                    <AssayPropertiesInput
                                      appPropertiesOnly={true}
                                      helpTipBody={[Function]}
                                      label="Editable Runs"
                                    >
                                      <Row
                                        bsClass="row"
                                        className="margin-top"
                                        componentClass="div"
                                      >
                                        <div
                                          className="margin-top row"
                                        >
                                          <Col
                                            bsClass="col"
                                            componentClass="div"
                                            lg={2}
                                            xs={3}
                                          >
                                            <div
                                              className="col-lg-2 col-xs-3"
                                            >
                                              Editable 
                                              <span
                                                className="domain-no-wrap"
                                              >
                                                Runs
                                                <LabelHelpTip
                                                  body={[Function]}
                                                  customStyle={Object {}}
                                                  id="tooltip"
                                                  size="1x"
                                                  title="Editable Runs"
                                                >
                                                  <span
                                                    className="label-help-target"
                                                    onMouseOut={[Function]}
                                                    onMouseOver={[Function]}
                                                  >
                                                    <FontAwesomeIcon
                                                      border={false}
                                                      className="label-help-icon"
                                                      fixedWidth={false}
                                                      flip={null}
                                                      icon={
                                                        Object {
                                                          "icon": Array [
                                                            512,
                                                            512,
                                                            Array [],
                                                            "f059",
                                                            "M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z",
                                                          ],
                                                          "iconName": "question-circle",
                                                          "prefix": "fas",
                                                        }
                                                      }
                                                      inverse={false}
                                                      listItem={false}
                                                      mask={null}
                                                      pull={null}
                                                      pulse={false}
                                                      rotation={null}
                                                      size="1x"
                                                      spin={false}
                                                      style={Object {}}
                                                      symbol={false}
                                                      title=""
                                                      transform={null}
                                                    >
                                                      <svg
                                                        aria-hidden="true"
                                                        className="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                                                        data-icon="question-circle"
                                                        data-prefix="fas"
                                                        focusable="false"
                                                        role="img"
                                                        style={Object {}}
                                                        viewBox="0 0 512 512"
                                                        xmlns="http://www.w3.org/2000/svg"
                                                      >
                                                        <path
                                                          d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                          fill="currentColor"
                                                          style={Object {}}
                                                        />
                                                      </svg>
                                                    </FontAwesomeIcon>
                                                    <Overlay
                                                      animation={[Function]}
                                                      placement="right"
                                                      rootClose={false}
                                                      show={false}
                                                      target={
                                                        <span
                                                          class="label-help-target"
                                                        >
                                                          <svg
                                                            aria-hidden="true"
                                                            class="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                                                            data-icon="question-circle"
                                                            data-prefix="fas"
                                                            focusable="false"
                                                            role="img"
                                                            viewBox="0 0 512 512"
                                                            xmlns="http://www.w3.org/2000/svg"
                                                          >
                                                            <path
                                                              d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                              fill="currentColor"
                                                            />
                                                          </svg>
                                                        </span>
                                                      }
                                                    >
                                                      <Overlay
                                                        placement="right"
                                                        rootClose={false}
                                                        show={false}
                                                        target={
                                                          <span
                                                            class="label-help-target"
                                                          >
                                                            <svg
                                                              aria-hidden="true"
                                                              class="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                                                              data-icon="question-circle"
                                                              data-prefix="fas"
                                                              focusable="false"
                                                              role="img"
                                                              viewBox="0 0 512 512"
                                                              xmlns="http://www.w3.org/2000/svg"
                                                            >
                                                              <path
                                                                d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                                fill="currentColor"
                                                              />
                                                            </svg>
                                                          </span>
                                                        }
                                                        transition={[Function]}
                                                      />
                                                    </Overlay>
                                                  </span>
                                                </LabelHelpTip>
                                              </span>
                                            </div>
                                          </Col>
                                          <Col
                                            bsClass="col"
                                            componentClass="div"
                                            lg={10}
                                            xs={9}
                                          >
                                            <div
                                              className="col-lg-10 col-xs-9"
                                            >
                                              <input
                                                checked={true}
                                                id="assay-design-editableRuns"
                                                onChange={[Function]}
                                                type="checkbox"
                                              />
                                            </div>
                                          </Col>
                                        </div>
                                      </Row>
                                    </AssayPropertiesInput>
                                  </EditableRunsInput>
                                  <EditableResultsInput
                                    appPropertiesOnly={true}
                                    model={
                                      Immutable.Record {
                                        "allowBackgroundUpload": true,
                                        "allowEditableResults": true,
                                        "allowQCStates": false,
                                        "allowSpacesInPath": false,
                                        "allowTransformationScript": false,
                                        "allowPlateMetadata": false,
                                        "autoCopyTargetContainer": undefined,
                                        "autoCopyTargetContainerId": undefined,
                                        "availableDetectionMethods": undefined,
                                        "availableMetadataInputFormats": undefined,
                                        "availablePlateTemplates": undefined,
                                        "backgroundUpload": true,
                                        "description": "My assay protocol for you all to use.",
                                        "domains": Immutable.List [
                                          Immutable.Record {
                                            "name": "Batch Fields",
                                            "container": undefined,
                                            "description": undefined,
                                            "domainURI": undefined,
                                            "domainId": null,
                                            "allowFileLinkProperties": true,
                                            "allowAttachmentProperties": true,
                                            "allowFlagProperties": true,
                                            "showDefaultValueSettings": false,
                                            "defaultDefaultValueType": undefined,
                                            "defaultValueOptions": Immutable.List [],
                                            "fields": Immutable.List [],
                                            "indices": Immutable.List [],
                                            "domainException": undefined,
                                            "mandatoryFieldNames": Immutable.List [],
                                            "reservedFieldNames": Immutable.List [],
                                            "newDesignFields": undefined,
                                            "instructions": undefined,
                                          },
                                          Immutable.Record {
                                            "name": "Sample Fields",
                                            "container": undefined,
                                            "description": undefined,
                                            "domainURI": undefined,
                                            "domainId": null,
                                            "allowFileLinkProperties": true,
                                            "allowAttachmentProperties": true,
                                            "allowFlagProperties": true,
                                            "showDefaultValueSettings": false,
                                            "defaultDefaultValueType": undefined,
                                            "defaultValueOptions": Immutable.List [],
                                            "fields": Immutable.List [
                                              Immutable.Record {
                                                "conceptURI": undefined,
                                                "conditionalFormats": Immutable.List [],
                                                "defaultScale": undefined,
                                                "defaultValueType": undefined,
                                                "defaultValue": undefined,
                                                "defaultDisplayValue": undefined,
                                                "description": undefined,
                                                "dimension": undefined,
                                                "excludeFromShifting": false,
                                                "format": undefined,
                                                "hidden": false,
                                                "importAliases": undefined,
                                                "label": undefined,
                                                "lookupContainer": undefined,
                                                "lookupQuery": undefined,
                                                "lookupSchema": undefined,
                                                "lookupValidator": undefined,
                                                "measure": undefined,
                                                "mvEnabled": false,
                                                "name": "field1",
                                                "PHI": undefined,
                                                "primaryKey": undefined,
                                                "propertyId": undefined,
                                                "propertyURI": undefined,
                                                "propertyValidators": Immutable.List [],
                                                "rangeValidators": Immutable.List [],
                                                "rangeURI": "xsd:string",
                                                "regexValidators": Immutable.List [],
                                                "recommendedVariable": false,
                                                "required": false,
                                                "scale": undefined,
                                                "URL": undefined,
                                                "shownInDetailsView": true,
                                                "shownInInsertView": true,
                                                "shownInUpdateView": true,
                                                "visible": true,
                                                "dataType": Immutable.Record {
                                                  "conceptURI": undefined,
                                                  "display": "Text",
                                                  "name": "string",
                                                  "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                  "alternateRangeURI": "xsd:string",
                                                  "shortDisplay": "String",
                                                  "lookupSchema": undefined,
                                                  "lookupQuery": undefined,
                                                },
                                                "lookupQueryValue": undefined,
                                                "lookupType": Immutable.Record {
                                                  "conceptURI": undefined,
                                                  "display": "Lookup",
                                                  "name": "lookup",
                                                  "rangeURI": "xsd:string",
                                                  "alternateRangeURI": undefined,
                                                  "shortDisplay": undefined,
                                                  "lookupSchema": undefined,
                                                  "lookupQuery": undefined,
                                                },
                                                "original": Object {
                                                  "conceptURI": undefined,
                                                  "dataType": Immutable.Record {
                                                    "conceptURI": undefined,
                                                    "display": "Text",
                                                    "name": "string",
                                                    "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                    "alternateRangeURI": "xsd:string",
                                                    "shortDisplay": "String",
                                                    "lookupSchema": undefined,
                                                    "lookupQuery": undefined,
                                                  },
                                                  "rangeURI": undefined,
                                                },
                                                "updatedField": false,
                                                "isPrimaryKey": false,
                                                "lockType": "NotLocked",
                                                "wrappedColumnName": undefined,
                                              },
                                              Immutable.Record {
                                                "conceptURI": undefined,
                                                "conditionalFormats": Immutable.List [],
                                                "defaultScale": undefined,
                                                "defaultValueType": undefined,
                                                "defaultValue": undefined,
                                                "defaultDisplayValue": undefined,
                                                "description": undefined,
                                                "dimension": undefined,
                                                "excludeFromShifting": false,
                                                "format": undefined,
                                                "hidden": false,
                                                "importAliases": undefined,
                                                "label": undefined,
                                                "lookupContainer": undefined,
                                                "lookupQuery": undefined,
                                                "lookupSchema": undefined,
                                                "lookupValidator": undefined,
                                                "measure": undefined,
                                                "mvEnabled": false,
                                                "name": "field2",
                                                "PHI": undefined,
                                                "primaryKey": undefined,
                                                "propertyId": undefined,
                                                "propertyURI": undefined,
                                                "propertyValidators": Immutable.List [],
                                                "rangeValidators": Immutable.List [],
                                                "rangeURI": "xsd:int",
                                                "regexValidators": Immutable.List [],
                                                "recommendedVariable": false,
                                                "required": false,
                                                "scale": undefined,
                                                "URL": undefined,
                                                "shownInDetailsView": true,
                                                "shownInInsertView": true,
                                                "shownInUpdateView": true,
                                                "visible": true,
                                                "dataType": Immutable.Record {
                                                  "conceptURI": undefined,
                                                  "display": "Integer",
                                                  "name": "int",
                                                  "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                                  "alternateRangeURI": "xsd:int",
                                                  "shortDisplay": undefined,
                                                  "lookupSchema": undefined,
                                                  "lookupQuery": undefined,
                                                },
                                                "lookupQueryValue": undefined,
                                                "lookupType": Immutable.Record {
                                                  "conceptURI": undefined,
                                                  "display": "Lookup",
                                                  "name": "lookup",
                                                  "rangeURI": "xsd:int",
                                                  "alternateRangeURI": undefined,
                                                  "shortDisplay": undefined,
                                                  "lookupSchema": undefined,
                                                  "lookupQuery": undefined,
                                                },
                                                "original": Object {
                                                  "conceptURI": undefined,
                                                  "dataType": Immutable.Record {
                                                    "conceptURI": undefined,
                                                    "display": "Integer",
                                                    "name": "int",
                                                    "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                                    "alternateRangeURI": "xsd:int",
                                                    "shortDisplay": undefined,
                                                    "lookupSchema": undefined,
                                                    "lookupQuery": undefined,
                                                  },
                                                  "rangeURI": undefined,
                                                },
                                                "updatedField": false,
                                                "isPrimaryKey": false,
                                                "lockType": "NotLocked",
                                                "wrappedColumnName": undefined,
                                              },
                                              Immutable.Record {
                                                "conceptURI": undefined,
                                                "conditionalFormats": Immutable.List [],
                                                "defaultScale": undefined,
                                                "defaultValueType": undefined,
                                                "defaultValue": undefined,
                                                "defaultDisplayValue": undefined,
                                                "description": undefined,
                                                "dimension": undefined,
                                                "excludeFromShifting": false,
                                                "format": undefined,
                                                "hidden": false,
                                                "importAliases": undefined,
                                                "label": undefined,
                                                "lookupContainer": undefined,
                                                "lookupQuery": undefined,
                                                "lookupSchema": undefined,
                                                "lookupValidator": undefined,
                                                "measure": undefined,
                                                "mvEnabled": false,
                                                "name": "field3",
                                                "PHI": undefined,
                                                "primaryKey": undefined,
                                                "propertyId": undefined,
                                                "propertyURI": undefined,
                                                "propertyValidators": Immutable.List [],
                                                "rangeValidators": Immutable.List [],
                                                "rangeURI": "xsd:dateTime",
                                                "regexValidators": Immutable.List [],
                                                "recommendedVariable": false,
                                                "required": false,
                                                "scale": undefined,
                                                "URL": undefined,
                                                "shownInDetailsView": true,
                                                "shownInInsertView": true,
                                                "shownInUpdateView": true,
                                                "visible": true,
                                                "dataType": Immutable.Record {
                                                  "conceptURI": undefined,
                                                  "display": "Date Time",
                                                  "name": "dateTime",
                                                  "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                                                  "alternateRangeURI": "xsd:dateTime",
                                                  "shortDisplay": undefined,
                                                  "lookupSchema": undefined,
                                                  "lookupQuery": undefined,
                                                },
                                                "lookupQueryValue": undefined,
                                                "lookupType": Immutable.Record {
                                                  "conceptURI": undefined,
                                                  "display": "Lookup",
                                                  "name": "lookup",
                                                  "rangeURI": "xsd:dateTime",
                                                  "alternateRangeURI": undefined,
                                                  "shortDisplay": undefined,
                                                  "lookupSchema": undefined,
                                                  "lookupQuery": undefined,
                                                },
                                                "original": Object {
                                                  "conceptURI": undefined,
                                                  "dataType": Immutable.Record {
                                                    "conceptURI": undefined,
                                                    "display": "Date Time",
                                                    "name": "dateTime",
                                                    "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                                                    "alternateRangeURI": "xsd:dateTime",
                                                    "shortDisplay": undefined,
                                                    "lookupSchema": undefined,
                                                    "lookupQuery": undefined,
                                                  },
                                                  "rangeURI": undefined,
                                                },
                                                "updatedField": false,
                                                "isPrimaryKey": false,
                                                "lockType": "NotLocked",
                                                "wrappedColumnName": undefined,
                                              },
                                            ],
                                            "indices": Immutable.List [],
                                            "domainException": undefined,
                                            "mandatoryFieldNames": Immutable.List [],
                                            "reservedFieldNames": Immutable.List [],
                                            "newDesignFields": undefined,
                                            "instructions": undefined,
                                          },
                                        ],
                                        "editableResults": true,
                                        "editableRuns": true,
                                        "exception": undefined,
                                        "metadataInputFormatHelp": undefined,
                                        "moduleTransformScripts": undefined,
                                        "name": "Test Assay Protocol",
                                        "plateMetadata": undefined,
                                        "protocolId": 1,
                                        "protocolParameters": undefined,
                                        "protocolTransformScripts": undefined,
                                        "providerName": undefined,
                                        "saveScriptFiles": false,
                                        "selectedDetectionMethod": undefined,
                                        "selectedMetadataInputFormat": undefined,
                                        "selectedPlateTemplate": undefined,
                                        "qcEnabled": undefined,
                                      }
                                    }
                                    onChange={[Function]}
                                  >
                                    <AssayPropertiesInput
                                      appPropertiesOnly={true}
                                      helpTipBody={[Function]}
                                      label="Editable Results"
                                    >
                                      <Row
                                        bsClass="row"
                                        className="margin-top"
                                        componentClass="div"
                                      >
                                        <div
                                          className="margin-top row"
                                        >
                                          <Col
                                            bsClass="col"
                                            componentClass="div"
                                            lg={2}
                                            xs={3}
                                          >
                                            <div
                                              className="col-lg-2 col-xs-3"
                                            >
                                              Editable 
                                              <span
                                                className="domain-no-wrap"
                                              >
                                                Results
                                                <LabelHelpTip
                                                  body={[Function]}
                                                  customStyle={Object {}}
                                                  id="tooltip"
                                                  size="1x"
                                                  title="Editable Results"
                                                >
                                                  <span
                                                    className="label-help-target"
                                                    onMouseOut={[Function]}
                                                    onMouseOver={[Function]}
                                                  >
                                                    <FontAwesomeIcon
                                                      border={false}
                                                      className="label-help-icon"
                                                      fixedWidth={false}
                                                      flip={null}
                                                      icon={
                                                        Object {
                                                          "icon": Array [
                                                            512,
                                                            512,
                                                            Array [],
                                                            "f059",
                                                            "M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z",
                                                          ],
                                                          "iconName": "question-circle",
                                                          "prefix": "fas",
                                                        }
                                                      }
                                                      inverse={false}
                                                      listItem={false}
                                                      mask={null}
                                                      pull={null}
                                                      pulse={false}
                                                      rotation={null}
                                                      size="1x"
                                                      spin={false}
                                                      style={Object {}}
                                                      symbol={false}
                                                      title=""
                                                      transform={null}
                                                    >
                                                      <svg
                                                        aria-hidden="true"
                                                        className="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                                                        data-icon="question-circle"
                                                        data-prefix="fas"
                                                        focusable="false"
                                                        role="img"
                                                        style={Object {}}
                                                        viewBox="0 0 512 512"
                                                        xmlns="http://www.w3.org/2000/svg"
                                                      >
                                                        <path
                                                          d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                          fill="currentColor"
                                                          style={Object {}}
                                                        />
                                                      </svg>
                                                    </FontAwesomeIcon>
                                                    <Overlay
                                                      animation={[Function]}
                                                      placement="right"
                                                      rootClose={false}
                                                      show={false}
                                                      target={
                                                        <span
                                                          class="label-help-target"
                                                        >
                                                          <svg
                                                            aria-hidden="true"
                                                            class="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                                                            data-icon="question-circle"
                                                            data-prefix="fas"
                                                            focusable="false"
                                                            role="img"
                                                            viewBox="0 0 512 512"
                                                            xmlns="http://www.w3.org/2000/svg"
                                                          >
                                                            <path
                                                              d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                              fill="currentColor"
                                                            />
                                                          </svg>
                                                        </span>
                                                      }
                                                    >
                                                      <Overlay
                                                        placement="right"
                                                        rootClose={false}
                                                        show={false}
                                                        target={
                                                          <span
                                                            class="label-help-target"
                                                          >
                                                            <svg
                                                              aria-hidden="true"
                                                              class="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                                                              data-icon="question-circle"
                                                              data-prefix="fas"
                                                              focusable="false"
                                                              role="img"
                                                              viewBox="0 0 512 512"
                                                              xmlns="http://www.w3.org/2000/svg"
                                                            >
                                                              <path
                                                                d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                                fill="currentColor"
                                                              />
                                                            </svg>
                                                          </span>
                                                        }
                                                        transition={[Function]}
                                                      />
                                                    </Overlay>
                                                  </span>
                                                </LabelHelpTip>
                                              </span>
                                            </div>
                                          </Col>
                                          <Col
                                            bsClass="col"
                                            componentClass="div"
                                            lg={10}
                                            xs={9}
                                          >
                                            <div
                                              className="col-lg-10 col-xs-9"
                                            >
                                              <input
                                                checked={true}
                                                id="assay-design-editableResults"
                                                onChange={[Function]}
                                                type="checkbox"
                                              />
                                            </div>
                                          </Col>
                                        </div>
                                      </Row>
                                    </AssayPropertiesInput>
                                  </EditableResultsInput>
                                </div>
                              </div>
                            </Col>
                            <Col
                              bsClass="col"
                              componentClass="div"
                              lg={6}
                              xs={12}
                            >
                              <div
                                className="col-lg-6 col-xs-12"
                              />
                            </Col>
                          </form>
                        </Form>
                      </div>
                    </div>
                  </Transition>
                </Collapse>
              </PanelCollapse>
            </PanelBody>
          </div>
        </Panel>
      </Uncontrolled(Panel)>
    </AssayPropertiesPanelImpl>
  </ComponentWithDomainPropertiesPanelCollapse>
  <DomainForm
    appPropertiesOnly={true}
    controlledCollapse={true}
    domain={
      Immutable.Record {
        "name": "Batch Fields",
        "container": undefined,
        "description": undefined,
        "domainURI": undefined,
        "domainId": null,
        "allowFileLinkProperties": true,
        "allowAttachmentProperties": true,
        "allowFlagProperties": true,
        "showDefaultValueSettings": false,
        "defaultDefaultValueType": undefined,
        "defaultValueOptions": Immutable.List [],
        "fields": Immutable.List [],
        "indices": Immutable.List [],
        "domainException": undefined,
        "mandatoryFieldNames": Immutable.List [],
        "reservedFieldNames": Immutable.List [],
        "newDesignFields": undefined,
        "instructions": undefined,
      }
    }
    domainIndex={0}
    headerPrefix="Test Assay Protocol"
    helpTopic={null}
    initCollapsed={true}
    key="0"
    modelDomains={
      Immutable.List [
        Immutable.Record {
          "name": "Batch Fields",
          "container": undefined,
          "description": undefined,
          "domainURI": undefined,
          "domainId": null,
          "allowFileLinkProperties": true,
          "allowAttachmentProperties": true,
          "allowFlagProperties": true,
          "showDefaultValueSettings": false,
          "defaultDefaultValueType": undefined,
          "defaultValueOptions": Immutable.List [],
          "fields": Immutable.List [],
          "indices": Immutable.List [],
          "domainException": undefined,
          "mandatoryFieldNames": Immutable.List [],
          "reservedFieldNames": Immutable.List [],
          "newDesignFields": undefined,
          "instructions": undefined,
        },
        Immutable.Record {
          "name": "Sample Fields",
          "container": undefined,
          "description": undefined,
          "domainURI": undefined,
          "domainId": null,
          "allowFileLinkProperties": true,
          "allowAttachmentProperties": true,
          "allowFlagProperties": true,
          "showDefaultValueSettings": false,
          "defaultDefaultValueType": undefined,
          "defaultValueOptions": Immutable.List [],
          "fields": Immutable.List [
            Immutable.Record {
              "conceptURI": undefined,
              "conditionalFormats": Immutable.List [],
              "defaultScale": undefined,
              "defaultValueType": undefined,
              "defaultValue": undefined,
              "defaultDisplayValue": undefined,
              "description": undefined,
              "dimension": undefined,
              "excludeFromShifting": false,
              "format": undefined,
              "hidden": false,
              "importAliases": undefined,
              "label": undefined,
              "lookupContainer": undefined,
              "lookupQuery": undefined,
              "lookupSchema": undefined,
              "lookupValidator": undefined,
              "measure": undefined,
              "mvEnabled": false,
              "name": "field1",
              "PHI": undefined,
              "primaryKey": undefined,
              "propertyId": undefined,
              "propertyURI": undefined,
              "propertyValidators": Immutable.List [],
              "rangeValidators": Immutable.List [],
              "rangeURI": "xsd:string",
              "regexValidators": Immutable.List [],
              "recommendedVariable": false,
              "required": false,
              "scale": undefined,
              "URL": undefined,
              "shownInDetailsView": true,
              "shownInInsertView": true,
              "shownInUpdateView": true,
              "visible": true,
              "dataType": Immutable.Record {
                "conceptURI": undefined,
                "display": "Text",
                "name": "string",
                "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                "alternateRangeURI": "xsd:string",
                "shortDisplay": "String",
                "lookupSchema": undefined,
                "lookupQuery": undefined,
              },
              "lookupQueryValue": undefined,
              "lookupType": Immutable.Record {
                "conceptURI": undefined,
                "display": "Lookup",
                "name": "lookup",
                "rangeURI": "xsd:string",
                "alternateRangeURI": undefined,
                "shortDisplay": undefined,
                "lookupSchema": undefined,
                "lookupQuery": undefined,
              },
              "original": Object {
                "conceptURI": undefined,
                "dataType": Immutable.Record {
                  "conceptURI": undefined,
                  "display": "Text",
                  "name": "string",
                  "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                  "alternateRangeURI": "xsd:string",
                  "shortDisplay": "String",
                  "lookupSchema": undefined,
                  "lookupQuery": undefined,
                },
                "rangeURI": undefined,
              },
              "updatedField": false,
              "isPrimaryKey": false,
              "lockType": "NotLocked",
              "wrappedColumnName": undefined,
            },
            Immutable.Record {
              "conceptURI": undefined,
              "conditionalFormats": Immutable.List [],
              "defaultScale": undefined,
              "defaultValueType": undefined,
              "defaultValue": undefined,
              "defaultDisplayValue": undefined,
              "description": undefined,
              "dimension": undefined,
              "excludeFromShifting": false,
              "format": undefined,
              "hidden": false,
              "importAliases": undefined,
              "label": undefined,
              "lookupContainer": undefined,
              "lookupQuery": undefined,
              "lookupSchema": undefined,
              "lookupValidator": undefined,
              "measure": undefined,
              "mvEnabled": false,
              "name": "field2",
              "PHI": undefined,
              "primaryKey": undefined,
              "propertyId": undefined,
              "propertyURI": undefined,
              "propertyValidators": Immutable.List [],
              "rangeValidators": Immutable.List [],
              "rangeURI": "xsd:int",
              "regexValidators": Immutable.List [],
              "recommendedVariable": false,
              "required": false,
              "scale": undefined,
              "URL": undefined,
              "shownInDetailsView": true,
              "shownInInsertView": true,
              "shownInUpdateView": true,
              "visible": true,
              "dataType": Immutable.Record {
                "conceptURI": undefined,
                "display": "Integer",
                "name": "int",
                "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                "alternateRangeURI": "xsd:int",
                "shortDisplay": undefined,
                "lookupSchema": undefined,
                "lookupQuery": undefined,
              },
              "lookupQueryValue": undefined,
              "lookupType": Immutable.Record {
                "conceptURI": undefined,
                "display": "Lookup",
                "name": "lookup",
                "rangeURI": "xsd:int",
                "alternateRangeURI": undefined,
                "shortDisplay": undefined,
                "lookupSchema": undefined,
                "lookupQuery": undefined,
              },
              "original": Object {
                "conceptURI": undefined,
                "dataType": Immutable.Record {
                  "conceptURI": undefined,
                  "display": "Integer",
                  "name": "int",
                  "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                  "alternateRangeURI": "xsd:int",
                  "shortDisplay": undefined,
                  "lookupSchema": undefined,
                  "lookupQuery": undefined,
                },
                "rangeURI": undefined,
              },
              "updatedField": false,
              "isPrimaryKey": false,
              "lockType": "NotLocked",
              "wrappedColumnName": undefined,
            },
            Immutable.Record {
              "conceptURI": undefined,
              "conditionalFormats": Immutable.List [],
              "defaultScale": undefined,
              "defaultValueType": undefined,
              "defaultValue": undefined,
              "defaultDisplayValue": undefined,
              "description": undefined,
              "dimension": undefined,
              "excludeFromShifting": false,
              "format": undefined,
              "hidden": false,
              "importAliases": undefined,
              "label": undefined,
              "lookupContainer": undefined,
              "lookupQuery": undefined,
              "lookupSchema": undefined,
              "lookupValidator": undefined,
              "measure": undefined,
              "mvEnabled": false,
              "name": "field3",
              "PHI": undefined,
              "primaryKey": undefined,
              "propertyId": undefined,
              "propertyURI": undefined,
              "propertyValidators": Immutable.List [],
              "rangeValidators": Immutable.List [],
              "rangeURI": "xsd:dateTime",
              "regexValidators": Immutable.List [],
              "recommendedVariable": false,
              "required": false,
              "scale": undefined,
              "URL": undefined,
              "shownInDetailsView": true,
              "shownInInsertView": true,
              "shownInUpdateView": true,
              "visible": true,
              "dataType": Immutable.Record {
                "conceptURI": undefined,
                "display": "Date Time",
                "name": "dateTime",
                "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                "alternateRangeURI": "xsd:dateTime",
                "shortDisplay": undefined,
                "lookupSchema": undefined,
                "lookupQuery": undefined,
              },
              "lookupQueryValue": undefined,
              "lookupType": Immutable.Record {
                "conceptURI": undefined,
                "display": "Lookup",
                "name": "lookup",
                "rangeURI": "xsd:dateTime",
                "alternateRangeURI": undefined,
                "shortDisplay": undefined,
                "lookupSchema": undefined,
                "lookupQuery": undefined,
              },
              "original": Object {
                "conceptURI": undefined,
                "dataType": Immutable.Record {
                  "conceptURI": undefined,
                  "display": "Date Time",
                  "name": "dateTime",
                  "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                  "alternateRangeURI": "xsd:dateTime",
                  "shortDisplay": undefined,
                  "lookupSchema": undefined,
                  "lookupQuery": undefined,
                },
                "rangeURI": undefined,
              },
              "updatedField": false,
              "isPrimaryKey": false,
              "lockType": "NotLocked",
              "wrappedColumnName": undefined,
            },
          ],
          "indices": Immutable.List [],
          "domainException": undefined,
          "mandatoryFieldNames": Immutable.List [],
          "reservedFieldNames": Immutable.List [],
          "newDesignFields": undefined,
          "instructions": undefined,
        },
      ]
    }
    onChange={[Function]}
    onToggle={[Function]}
    panelStatus="COMPLETE"
    showFilePropertyType={true}
    showInferFromFile={false}
    validate={false}
  >
    <LookupProvider>
      <DomainFormImpl
        appPropertiesOnly={true}
        controlledCollapse={true}
        domain={
          Immutable.Record {
            "name": "Batch Fields",
            "container": undefined,
            "description": undefined,
            "domainURI": undefined,
            "domainId": null,
            "allowFileLinkProperties": true,
            "allowAttachmentProperties": true,
            "allowFlagProperties": true,
            "showDefaultValueSettings": false,
            "defaultDefaultValueType": undefined,
            "defaultValueOptions": Immutable.List [],
            "fields": Immutable.List [],
            "indices": Immutable.List [],
            "domainException": undefined,
            "mandatoryFieldNames": Immutable.List [],
            "reservedFieldNames": Immutable.List [],
            "newDesignFields": undefined,
            "instructions": undefined,
          }
        }
        domainFormDisplayOptions={
          Object {
            "isDragDisabled": false,
            "phiLevelDisabled": false,
            "showAddFieldsButton": true,
            "showRequired": true,
            "showTextOptions": true,
            "showValidators": true,
          }
        }
        domainIndex={0}
        headerPrefix="Test Assay Protocol"
        helpNoun="field designer"
        helpTopic={null}
        initCollapsed={true}
        isNew={false}
        modelDomains={
          Immutable.List [
            Immutable.Record {
              "name": "Batch Fields",
              "container": undefined,
              "description": undefined,
              "domainURI": undefined,
              "domainId": null,
              "allowFileLinkProperties": true,
              "allowAttachmentProperties": true,
              "allowFlagProperties": true,
              "showDefaultValueSettings": false,
              "defaultDefaultValueType": undefined,
              "defaultValueOptions": Immutable.List [],
              "fields": Immutable.List [],
              "indices": Immutable.List [],
              "domainException": undefined,
              "mandatoryFieldNames": Immutable.List [],
              "reservedFieldNames": Immutable.List [],
              "newDesignFields": undefined,
              "instructions": undefined,
            },
            Immutable.Record {
              "name": "Sample Fields",
              "container": undefined,
              "description": undefined,
              "domainURI": undefined,
              "domainId": null,
              "allowFileLinkProperties": true,
              "allowAttachmentProperties": true,
              "allowFlagProperties": true,
              "showDefaultValueSettings": false,
              "defaultDefaultValueType": undefined,
              "defaultValueOptions": Immutable.List [],
              "fields": Immutable.List [
                Immutable.Record {
                  "conceptURI": undefined,
                  "conditionalFormats": Immutable.List [],
                  "defaultScale": undefined,
                  "defaultValueType": undefined,
                  "defaultValue": undefined,
                  "defaultDisplayValue": undefined,
                  "description": undefined,
                  "dimension": undefined,
                  "excludeFromShifting": false,
                  "format": undefined,
                  "hidden": false,
                  "importAliases": undefined,
                  "label": undefined,
                  "lookupContainer": undefined,
                  "lookupQuery": undefined,
                  "lookupSchema": undefined,
                  "lookupValidator": undefined,
                  "measure": undefined,
                  "mvEnabled": false,
                  "name": "field1",
                  "PHI": undefined,
                  "primaryKey": undefined,
                  "propertyId": undefined,
                  "propertyURI": undefined,
                  "propertyValidators": Immutable.List [],
                  "rangeValidators": Immutable.List [],
                  "rangeURI": "xsd:string",
                  "regexValidators": Immutable.List [],
                  "recommendedVariable": false,
                  "required": false,
                  "scale": undefined,
                  "URL": undefined,
                  "shownInDetailsView": true,
                  "shownInInsertView": true,
                  "shownInUpdateView": true,
                  "visible": true,
                  "dataType": Immutable.Record {
                    "conceptURI": undefined,
                    "display": "Text",
                    "name": "string",
                    "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                    "alternateRangeURI": "xsd:string",
                    "shortDisplay": "String",
                    "lookupSchema": undefined,
                    "lookupQuery": undefined,
                  },
                  "lookupQueryValue": undefined,
                  "lookupType": Immutable.Record {
                    "conceptURI": undefined,
                    "display": "Lookup",
                    "name": "lookup",
                    "rangeURI": "xsd:string",
                    "alternateRangeURI": undefined,
                    "shortDisplay": undefined,
                    "lookupSchema": undefined,
                    "lookupQuery": undefined,
                  },
                  "original": Object {
                    "conceptURI": undefined,
                    "dataType": Immutable.Record {
                      "conceptURI": undefined,
                      "display": "Text",
                      "name": "string",
                      "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                      "alternateRangeURI": "xsd:string",
                      "shortDisplay": "String",
                      "lookupSchema": undefined,
                      "lookupQuery": undefined,
                    },
                    "rangeURI": undefined,
                  },
                  "updatedField": false,
                  "isPrimaryKey": false,
                  "lockType": "NotLocked",
                  "wrappedColumnName": undefined,
                },
                Immutable.Record {
                  "conceptURI": undefined,
                  "conditionalFormats": Immutable.List [],
                  "defaultScale": undefined,
                  "defaultValueType": undefined,
                  "defaultValue": undefined,
                  "defaultDisplayValue": undefined,
                  "description": undefined,
                  "dimension": undefined,
                  "excludeFromShifting": false,
                  "format": undefined,
                  "hidden": false,
                  "importAliases": undefined,
                  "label": undefined,
                  "lookupContainer": undefined,
                  "lookupQuery": undefined,
                  "lookupSchema": undefined,
                  "lookupValidator": undefined,
                  "measure": undefined,
                  "mvEnabled": false,
                  "name": "field2",
                  "PHI": undefined,
                  "primaryKey": undefined,
                  "propertyId": undefined,
                  "propertyURI": undefined,
                  "propertyValidators": Immutable.List [],
                  "rangeValidators": Immutable.List [],
                  "rangeURI": "xsd:int",
                  "regexValidators": Immutable.List [],
                  "recommendedVariable": false,
                  "required": false,
                  "scale": undefined,
                  "URL": undefined,
                  "shownInDetailsView": true,
                  "shownInInsertView": true,
                  "shownInUpdateView": true,
                  "visible": true,
                  "dataType": Immutable.Record {
                    "conceptURI": undefined,
                    "display": "Integer",
                    "name": "int",
                    "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                    "alternateRangeURI": "xsd:int",
                    "shortDisplay": undefined,
                    "lookupSchema": undefined,
                    "lookupQuery": undefined,
                  },
                  "lookupQueryValue": undefined,
                  "lookupType": Immutable.Record {
                    "conceptURI": undefined,
                    "display": "Lookup",
                    "name": "lookup",
                    "rangeURI": "xsd:int",
                    "alternateRangeURI": undefined,
                    "shortDisplay": undefined,
                    "lookupSchema": undefined,
                    "lookupQuery": undefined,
                  },
                  "original": Object {
                    "conceptURI": undefined,
                    "dataType": Immutable.Record {
                      "conceptURI": undefined,
                      "display": "Integer",
                      "name": "int",
                      "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                      "alternateRangeURI": "xsd:int",
                      "shortDisplay": undefined,
                      "lookupSchema": undefined,
                      "lookupQuery": undefined,
                    },
                    "rangeURI": undefined,
                  },
                  "updatedField": false,
                  "isPrimaryKey": false,
                  "lockType": "NotLocked",
                  "wrappedColumnName": undefined,
                },
                Immutable.Record {
                  "conceptURI": undefined,
                  "conditionalFormats": Immutable.List [],
                  "defaultScale": undefined,
                  "defaultValueType": undefined,
                  "defaultValue": undefined,
                  "defaultDisplayValue": undefined,
                  "description": undefined,
                  "dimension": undefined,
                  "excludeFromShifting": false,
                  "format": undefined,
                  "hidden": false,
                  "importAliases": undefined,
                  "label": undefined,
                  "lookupContainer": undefined,
                  "lookupQuery": undefined,
                  "lookupSchema": undefined,
                  "lookupValidator": undefined,
                  "measure": undefined,
                  "mvEnabled": false,
                  "name": "field3",
                  "PHI": undefined,
                  "primaryKey": undefined,
                  "propertyId": undefined,
                  "propertyURI": undefined,
                  "propertyValidators": Immutable.List [],
                  "rangeValidators": Immutable.List [],
                  "rangeURI": "xsd:dateTime",
                  "regexValidators": Immutable.List [],
                  "recommendedVariable": false,
                  "required": false,
                  "scale": undefined,
                  "URL": undefined,
                  "shownInDetailsView": true,
                  "shownInInsertView": true,
                  "shownInUpdateView": true,
                  "visible": true,
                  "dataType": Immutable.Record {
                    "conceptURI": undefined,
                    "display": "Date Time",
                    "name": "dateTime",
                    "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                    "alternateRangeURI": "xsd:dateTime",
                    "shortDisplay": undefined,
                    "lookupSchema": undefined,
                    "lookupQuery": undefined,
                  },
                  "lookupQueryValue": undefined,
                  "lookupType": Immutable.Record {
                    "conceptURI": undefined,
                    "display": "Lookup",
                    "name": "lookup",
                    "rangeURI": "xsd:dateTime",
                    "alternateRangeURI": undefined,
                    "shortDisplay": undefined,
                    "lookupSchema": undefined,
                    "lookupQuery": undefined,
                  },
                  "original": Object {
                    "conceptURI": undefined,
                    "dataType": Immutable.Record {
                      "conceptURI": undefined,
                      "display": "Date Time",
                      "name": "dateTime",
                      "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                      "alternateRangeURI": "xsd:dateTime",
                      "shortDisplay": undefined,
                      "lookupSchema": undefined,
                      "lookupQuery": undefined,
                    },
                    "rangeURI": undefined,
                  },
                  "updatedField": false,
                  "isPrimaryKey": false,
                  "lockType": "NotLocked",
                  "wrappedColumnName": undefined,
                },
              ],
              "indices": Immutable.List [],
              "domainException": undefined,
              "mandatoryFieldNames": Immutable.List [],
              "reservedFieldNames": Immutable.List [],
              "newDesignFields": undefined,
              "instructions": undefined,
            },
          ]
        }
        onChange={[Function]}
        onToggle={[Function]}
        panelStatus="COMPLETE"
        showFilePropertyType={true}
        showHeader={true}
        showInferFromFile={false}
        successBsStyle="success"
        validate={false}
      >
        <Uncontrolled(Panel)
          className="domain-form-panel"
          expanded={false}
          onToggle={[Function]}
        >
          <Panel
            bsClass="panel"
            bsStyle="default"
            className="domain-form-panel"
            expanded={false}
            onToggle={[Function]}
          >
            <div
              className="domain-form-panel panel panel-default"
            >
              <CollapsiblePanelHeader
                collapsed={true}
                controlledCollapse={true}
                id="domainpropertiesrow-Batch-Fields-hdr"
                isValid={true}
                panelStatus="COMPLETE"
                title="Batch Fields"
                togglePanel={[Function]}
              >
                <PanelHeading
                  bsClass="panel"
                  className="domain-panel-header domain-heading-collapsible domain-panel-header-collapsed"
                  componentClass="div"
                  id="domainpropertiesrow-Batch-Fields-hdr"
                  onClick={[Function]}
                >
                  <div
                    className="domain-panel-header domain-heading-collapsible domain-panel-header-collapsed panel-heading"
                    id="domainpropertiesrow-Batch-Fields-hdr"
                    onClick={[Function]}
                  >
                    <span
                      className="domain-panel-status-icon domain-panel-status-icon-green"
                    >
                      <FontAwesomeIcon
                        border={false}
                        className=""
                        fixedWidth={false}
                        flip={null}
                        icon={
                          Object {
                            "icon": Array [
                              512,
                              512,
                              Array [],
                              "f058",
                              "M504 256c0 136.967-111.033 248-248 248S8 392.967 8 256 119.033 8 256 8s248 111.033 248 248zM227.314 387.314l184-184c6.248-6.248 6.248-16.379 0-22.627l-22.627-22.627c-6.248-6.249-16.379-6.249-22.628 0L216 308.118l-70.059-70.059c-6.248-6.248-16.379-6.248-22.628 0l-22.627 22.627c-6.248 6.248-6.248 16.379 0 22.627l104 104c6.249 6.249 16.379 6.249 22.628.001z",
                            ],
                            "iconName": "check-circle",
                            "prefix": "fas",
                          }
                        }
                        inverse={false}
                        listItem={false}
                        mask={null}
                        pull={null}
                        pulse={false}
                        rotation={null}
                        size={null}
                        spin={false}
                        symbol={false}
                        title=""
                        transform={null}
                      >
                        <svg
                          aria-hidden="true"
                          className="svg-inline--fa fa-check-circle fa-w-16 "
                          data-icon="check-circle"
                          data-prefix="fas"
                          focusable="false"
                          role="img"
                          style={Object {}}
                          viewBox="0 0 512 512"
                          xmlns="http://www.w3.org/2000/svg"
                        >
                          <path
                            d="M504 256c0 136.967-111.033 248-248 248S8 392.967 8 256 119.033 8 256 8s248 111.033 248 248zM227.314 387.314l184-184c6.248-6.248 6.248-16.379 0-22.627l-22.627-22.627c-6.248-6.249-16.379-6.249-22.628 0L216 308.118l-70.059-70.059c-6.248-6.248-16.379-6.248-22.628 0l-22.627 22.627c-6.248 6.248-6.248 16.379 0 22.627l104 104c6.249 6.249 16.379 6.249 22.628.001z"
                            fill="currentColor"
                            style={Object {}}
                          />
                        </svg>
                      </FontAwesomeIcon>
                    </span>
                    <span
                      className="domain-panel-title"
                    >
                      Batch Fields
                    </span>
                    <span
                      className="pull-right"
                    >
                      <FontAwesomeIcon
                        border={false}
                        className="domain-form-expand-btn"
                        fixedWidth={false}
                        flip={null}
                        icon={
                          Object {
                            "icon": Array [
                              448,
                              512,
                              Array [],
                              "f0fe",
                              "M400 32H48C21.5 32 0 53.5 0 80v352c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V80c0-26.5-21.5-48-48-48zm-32 252c0 6.6-5.4 12-12 12h-92v92c0 6.6-5.4 12-12 12h-56c-6.6 0-12-5.4-12-12v-92H92c-6.6 0-12-5.4-12-12v-56c0-6.6 5.4-12 12-12h92v-92c0-6.6 5.4-12 12-12h56c6.6 0 12 5.4 12 12v92h92c6.6 0 12 5.4 12 12v56z",
                            ],
                            "iconName": "plus-square",
                            "prefix": "fas",
                          }
                        }
                        inverse={false}
                        listItem={false}
                        mask={null}
                        pull={null}
                        pulse={false}
                        rotation={null}
                        size="lg"
                        spin={false}
                        symbol={false}
                        title=""
                        transform={null}
                      >
                        <svg
                          aria-hidden="true"
                          className="svg-inline--fa fa-plus-square fa-w-14 fa-lg domain-form-expand-btn"
                          data-icon="plus-square"
                          data-prefix="fas"
                          focusable="false"
                          role="img"
                          style={Object {}}
                          viewBox="0 0 448 512"
                          xmlns="http://www.w3.org/2000/svg"
                        >
                          <path
                            d="M400 32H48C21.5 32 0 53.5 0 80v352c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V80c0-26.5-21.5-48-48-48zm-32 252c0 6.6-5.4 12-12 12h-92v92c0 6.6-5.4 12-12 12h-56c-6.6 0-12-5.4-12-12v-92H92c-6.6 0-12-5.4-12-12v-56c0-6.6 5.4-12 12-12h92v-92c0-6.6 5.4-12 12-12h56c6.6 0 12 5.4 12 12v92h92c6.6 0 12 5.4 12 12v56z"
                            fill="currentColor"
                            style={Object {}}
                          />
                        </svg>
                      </FontAwesomeIcon>
                    </span>
                    <LabelHelpTip
                      body={[Function]}
                      customStyle={
                        Object {
                          "marginLeft": "5px",
                          "verticalAlign": "top",
                        }
                      }
                      id="tooltip"
                      placement="top"
                      size="1x"
                      title="Batch Fields"
                    >
                      <span
                        className="label-help-target"
                        onMouseOut={[Function]}
                        onMouseOver={[Function]}
                      >
                        <FontAwesomeIcon
                          border={false}
                          className="label-help-icon"
                          fixedWidth={false}
                          flip={null}
                          icon={
                            Object {
                              "icon": Array [
                                512,
                                512,
                                Array [],
                                "f059",
                                "M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z",
                              ],
                              "iconName": "question-circle",
                              "prefix": "fas",
                            }
                          }
                          inverse={false}
                          listItem={false}
                          mask={null}
                          pull={null}
                          pulse={false}
                          rotation={null}
                          size="1x"
                          spin={false}
                          style={
                            Object {
                              "marginLeft": "5px",
                              "verticalAlign": "top",
                            }
                          }
                          symbol={false}
                          title=""
                          transform={null}
                        >
                          <svg
                            aria-hidden="true"
                            className="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                            data-icon="question-circle"
                            data-prefix="fas"
                            focusable="false"
                            role="img"
                            style={
                              Object {
                                "marginLeft": "5px",
                                "verticalAlign": "top",
                              }
                            }
                            viewBox="0 0 512 512"
                            xmlns="http://www.w3.org/2000/svg"
                          >
                            <path
                              d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                              fill="currentColor"
                              style={Object {}}
                            />
                          </svg>
                        </FontAwesomeIcon>
                        <Overlay
                          animation={[Function]}
                          placement="top"
                          rootClose={false}
                          show={false}
                          target={
                            <span
                              class="label-help-target"
                            >
                              <svg
                                aria-hidden="true"
                                class="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                                data-icon="question-circle"
                                data-prefix="fas"
                                focusable="false"
                                role="img"
                                style="vertical-align: top; margin-left: 5px;"
                                viewBox="0 0 512 512"
                                xmlns="http://www.w3.org/2000/svg"
                              >
                                <path
                                  d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                  fill="currentColor"
                                />
                              </svg>
                            </span>
                          }
                        >
                          <Overlay
                            placement="top"
                            rootClose={false}
                            show={false}
                            target={
                              <span
                                class="label-help-target"
                              >
                                <svg
                                  aria-hidden="true"
                                  class="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                                  data-icon="question-circle"
                                  data-prefix="fas"
                                  focusable="false"
                                  role="img"
                                  style="vertical-align: top; margin-left: 5px;"
                                  viewBox="0 0 512 512"
                                  xmlns="http://www.w3.org/2000/svg"
                                >
                                  <path
                                    d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                    fill="currentColor"
                                  />
                                </svg>
                              </span>
                            }
                            transition={[Function]}
                          />
                        </Overlay>
                      </span>
                    </LabelHelpTip>
                  </div>
                </PanelHeading>
              </CollapsiblePanelHeader>
              <PanelBody
                bsClass="panel"
                collapsible={true}
              >
                <PanelCollapse
                  bsClass="panel"
                >
                  <Collapse
                    appear={false}
                    dimension="height"
                    getDimensionValue={[Function]}
                    in={false}
                    mountOnEnter={false}
                    timeout={300}
                    unmountOnExit={false}
                  >
                    <Transition
                      appear={false}
                      aria-expanded={null}
                      enter={true}
                      exit={true}
                      in={false}
                      mountOnEnter={false}
                      onEnter={[Function]}
                      onEntered={[Function]}
                      onEntering={[Function]}
                      onExit={[Function]}
                      onExited={[Function]}
                      onExiting={[Function]}
                      timeout={300}
                      unmountOnExit={false}
                    >
                      <div
                        aria-expanded={null}
                        className="panel-collapse collapse"
                      >
                        <div
                          className="panel-body"
                        >
                          <Row
                            bsClass="row"
                            className=""
                            componentClass="div"
                          >
                            <div
                              className="row"
                            >
                              <Col
                                bsClass="col"
                                componentClass="div"
                                xs={12}
                              >
                                <div
                                  className="col-xs-12"
                                />
                              </Col>
                            </div>
                          </Row>
                          <Uncontrolled(Panel)
                            className="domain-form-no-field-panel"
                          >
                            <Panel
                              bsClass="panel"
                              bsStyle="default"
                              className="domain-form-no-field-panel"
                              onToggle={[Function]}
                            >
                              <div
                                className="domain-form-no-field-panel panel panel-default"
                              >
                                No fields created yet. Add some using the button below.
                              </div>
                            </Panel>
                          </Uncontrolled(Panel)>
                          <Row
                            bsClass="row"
                            className="domain-add-field-row"
                            componentClass="div"
                          >
                            <div
                              className="domain-add-field-row row"
                            >
                              <Col
                                bsClass="col"
                                componentClass="div"
                                xs={12}
                              >
                                <div
                                  className="col-xs-12"
                                >
                                  <AddEntityButton
                                    buttonClass="domain-form-add-btn"
                                    containerClass="form-group"
                                    entity="Field"
                                    helperTitle="More Info"
                                    onClick={[Function]}
                                  >
                                    <div
                                      className="form-group"
                                    >
                                      <div
                                        className="domain-form-add-btn"
                                      >
                                        <span
                                          className="container--action-button btn btn-default"
                                          onClick={[Function]}
                                        >
                                          <i
                                            className="fa fa-plus-circle container--addition-icon"
                                          />
                                           Add 
                                          Field
                                        </span>
                                      </div>
                                    </div>
                                  </AddEntityButton>
                                </div>
                              </Col>
                            </div>
                          </Row>
                        </div>
                      </div>
                    </Transition>
                  </Collapse>
                </PanelCollapse>
              </PanelBody>
            </div>
          </Panel>
        </Uncontrolled(Panel)>
      </DomainFormImpl>
    </LookupProvider>
  </DomainForm>
  <DomainForm
    appPropertiesOnly={true}
    controlledCollapse={true}
    domain={
      Immutable.Record {
        "name": "Sample Fields",
        "container": undefined,
        "description": undefined,
        "domainURI": undefined,
        "domainId": null,
        "allowFileLinkProperties": true,
        "allowAttachmentProperties": true,
        "allowFlagProperties": true,
        "showDefaultValueSettings": false,
        "defaultDefaultValueType": undefined,
        "defaultValueOptions": Immutable.List [],
        "fields": Immutable.List [
          Immutable.Record {
            "conceptURI": undefined,
            "conditionalFormats": Immutable.List [],
            "defaultScale": undefined,
            "defaultValueType": undefined,
            "defaultValue": undefined,
            "defaultDisplayValue": undefined,
            "description": undefined,
            "dimension": undefined,
            "excludeFromShifting": false,
            "format": undefined,
            "hidden": false,
            "importAliases": undefined,
            "label": undefined,
            "lookupContainer": undefined,
            "lookupQuery": undefined,
            "lookupSchema": undefined,
            "lookupValidator": undefined,
            "measure": undefined,
            "mvEnabled": false,
            "name": "field1",
            "PHI": undefined,
            "primaryKey": undefined,
            "propertyId": undefined,
            "propertyURI": undefined,
            "propertyValidators": Immutable.List [],
            "rangeValidators": Immutable.List [],
            "rangeURI": "xsd:string",
            "regexValidators": Immutable.List [],
            "recommendedVariable": false,
            "required": false,
            "scale": undefined,
            "URL": undefined,
            "shownInDetailsView": true,
            "shownInInsertView": true,
            "shownInUpdateView": true,
            "visible": true,
            "dataType": Immutable.Record {
              "conceptURI": undefined,
              "display": "Text",
              "name": "string",
              "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
              "alternateRangeURI": "xsd:string",
              "shortDisplay": "String",
              "lookupSchema": undefined,
              "lookupQuery": undefined,
            },
            "lookupQueryValue": undefined,
            "lookupType": Immutable.Record {
              "conceptURI": undefined,
              "display": "Lookup",
              "name": "lookup",
              "rangeURI": "xsd:string",
              "alternateRangeURI": undefined,
              "shortDisplay": undefined,
              "lookupSchema": undefined,
              "lookupQuery": undefined,
            },
            "original": Object {
              "conceptURI": undefined,
              "dataType": Immutable.Record {
                "conceptURI": undefined,
                "display": "Text",
                "name": "string",
                "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                "alternateRangeURI": "xsd:string",
                "shortDisplay": "String",
                "lookupSchema": undefined,
                "lookupQuery": undefined,
              },
              "rangeURI": undefined,
            },
            "updatedField": false,
            "isPrimaryKey": false,
            "lockType": "NotLocked",
            "wrappedColumnName": undefined,
          },
          Immutable.Record {
            "conceptURI": undefined,
            "conditionalFormats": Immutable.List [],
            "defaultScale": undefined,
            "defaultValueType": undefined,
            "defaultValue": undefined,
            "defaultDisplayValue": undefined,
            "description": undefined,
            "dimension": undefined,
            "excludeFromShifting": false,
            "format": undefined,
            "hidden": false,
            "importAliases": undefined,
            "label": undefined,
            "lookupContainer": undefined,
            "lookupQuery": undefined,
            "lookupSchema": undefined,
            "lookupValidator": undefined,
            "measure": undefined,
            "mvEnabled": false,
            "name": "field2",
            "PHI": undefined,
            "primaryKey": undefined,
            "propertyId": undefined,
            "propertyURI": undefined,
            "propertyValidators": Immutable.List [],
            "rangeValidators": Immutable.List [],
            "rangeURI": "xsd:int",
            "regexValidators": Immutable.List [],
            "recommendedVariable": false,
            "required": false,
            "scale": undefined,
            "URL": undefined,
            "shownInDetailsView": true,
            "shownInInsertView": true,
            "shownInUpdateView": true,
            "visible": true,
            "dataType": Immutable.Record {
              "conceptURI": undefined,
              "display": "Integer",
              "name": "int",
              "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
              "alternateRangeURI": "xsd:int",
              "shortDisplay": undefined,
              "lookupSchema": undefined,
              "lookupQuery": undefined,
            },
            "lookupQueryValue": undefined,
            "lookupType": Immutable.Record {
              "conceptURI": undefined,
              "display": "Lookup",
              "name": "lookup",
              "rangeURI": "xsd:int",
              "alternateRangeURI": undefined,
              "shortDisplay": undefined,
              "lookupSchema": undefined,
              "lookupQuery": undefined,
            },
            "original": Object {
              "conceptURI": undefined,
              "dataType": Immutable.Record {
                "conceptURI": undefined,
                "display": "Integer",
                "name": "int",
                "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                "alternateRangeURI": "xsd:int",
                "shortDisplay": undefined,
                "lookupSchema": undefined,
                "lookupQuery": undefined,
              },
              "rangeURI": undefined,
            },
            "updatedField": false,
            "isPrimaryKey": false,
            "lockType": "NotLocked",
            "wrappedColumnName": undefined,
          },
          Immutable.Record {
            "conceptURI": undefined,
            "conditionalFormats": Immutable.List [],
            "defaultScale": undefined,
            "defaultValueType": undefined,
            "defaultValue": undefined,
            "defaultDisplayValue": undefined,
            "description": undefined,
            "dimension": undefined,
            "excludeFromShifting": false,
            "format": undefined,
            "hidden": false,
            "importAliases": undefined,
            "label": undefined,
            "lookupContainer": undefined,
            "lookupQuery": undefined,
            "lookupSchema": undefined,
            "lookupValidator": undefined,
            "measure": undefined,
            "mvEnabled": false,
            "name": "field3",
            "PHI": undefined,
            "primaryKey": undefined,
            "propertyId": undefined,
            "propertyURI": undefined,
            "propertyValidators": Immutable.List [],
            "rangeValidators": Immutable.List [],
            "rangeURI": "xsd:dateTime",
            "regexValidators": Immutable.List [],
            "recommendedVariable": false,
            "required": false,
            "scale": undefined,
            "URL": undefined,
            "shownInDetailsView": true,
            "shownInInsertView": true,
            "shownInUpdateView": true,
            "visible": true,
            "dataType": Immutable.Record {
              "conceptURI": undefined,
              "display": "Date Time",
              "name": "dateTime",
              "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
              "alternateRangeURI": "xsd:dateTime",
              "shortDisplay": undefined,
              "lookupSchema": undefined,
              "lookupQuery": undefined,
            },
            "lookupQueryValue": undefined,
            "lookupType": Immutable.Record {
              "conceptURI": undefined,
              "display": "Lookup",
              "name": "lookup",
              "rangeURI": "xsd:dateTime",
              "alternateRangeURI": undefined,
              "shortDisplay": undefined,
              "lookupSchema": undefined,
              "lookupQuery": undefined,
            },
            "original": Object {
              "conceptURI": undefined,
              "dataType": Immutable.Record {
                "conceptURI": undefined,
                "display": "Date Time",
                "name": "dateTime",
                "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                "alternateRangeURI": "xsd:dateTime",
                "shortDisplay": undefined,
                "lookupSchema": undefined,
                "lookupQuery": undefined,
              },
              "rangeURI": undefined,
            },
            "updatedField": false,
            "isPrimaryKey": false,
            "lockType": "NotLocked",
            "wrappedColumnName": undefined,
          },
        ],
        "indices": Immutable.List [],
        "domainException": undefined,
        "mandatoryFieldNames": Immutable.List [],
        "reservedFieldNames": Immutable.List [],
        "newDesignFields": undefined,
        "instructions": undefined,
      }
    }
    domainIndex={1}
    headerPrefix="Test Assay Protocol"
    helpTopic={null}
    initCollapsed={true}
    key="1"
    modelDomains={
      Immutable.List [
        Immutable.Record {
          "name": "Batch Fields",
          "container": undefined,
          "description": undefined,
          "domainURI": undefined,
          "domainId": null,
          "allowFileLinkProperties": true,
          "allowAttachmentProperties": true,
          "allowFlagProperties": true,
          "showDefaultValueSettings": false,
          "defaultDefaultValueType": undefined,
          "defaultValueOptions": Immutable.List [],
          "fields": Immutable.List [],
          "indices": Immutable.List [],
          "domainException": undefined,
          "mandatoryFieldNames": Immutable.List [],
          "reservedFieldNames": Immutable.List [],
          "newDesignFields": undefined,
          "instructions": undefined,
        },
        Immutable.Record {
          "name": "Sample Fields",
          "container": undefined,
          "description": undefined,
          "domainURI": undefined,
          "domainId": null,
          "allowFileLinkProperties": true,
          "allowAttachmentProperties": true,
          "allowFlagProperties": true,
          "showDefaultValueSettings": false,
          "defaultDefaultValueType": undefined,
          "defaultValueOptions": Immutable.List [],
          "fields": Immutable.List [
            Immutable.Record {
              "conceptURI": undefined,
              "conditionalFormats": Immutable.List [],
              "defaultScale": undefined,
              "defaultValueType": undefined,
              "defaultValue": undefined,
              "defaultDisplayValue": undefined,
              "description": undefined,
              "dimension": undefined,
              "excludeFromShifting": false,
              "format": undefined,
              "hidden": false,
              "importAliases": undefined,
              "label": undefined,
              "lookupContainer": undefined,
              "lookupQuery": undefined,
              "lookupSchema": undefined,
              "lookupValidator": undefined,
              "measure": undefined,
              "mvEnabled": false,
              "name": "field1",
              "PHI": undefined,
              "primaryKey": undefined,
              "propertyId": undefined,
              "propertyURI": undefined,
              "propertyValidators": Immutable.List [],
              "rangeValidators": Immutable.List [],
              "rangeURI": "xsd:string",
              "regexValidators": Immutable.List [],
              "recommendedVariable": false,
              "required": false,
              "scale": undefined,
              "URL": undefined,
              "shownInDetailsView": true,
              "shownInInsertView": true,
              "shownInUpdateView": true,
              "visible": true,
              "dataType": Immutable.Record {
                "conceptURI": undefined,
                "display": "Text",
                "name": "string",
                "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                "alternateRangeURI": "xsd:string",
                "shortDisplay": "String",
                "lookupSchema": undefined,
                "lookupQuery": undefined,
              },
              "lookupQueryValue": undefined,
              "lookupType": Immutable.Record {
                "conceptURI": undefined,
                "display": "Lookup",
                "name": "lookup",
                "rangeURI": "xsd:string",
                "alternateRangeURI": undefined,
                "shortDisplay": undefined,
                "lookupSchema": undefined,
                "lookupQuery": undefined,
              },
              "original": Object {
                "conceptURI": undefined,
                "dataType": Immutable.Record {
                  "conceptURI": undefined,
                  "display": "Text",
                  "name": "string",
                  "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                  "alternateRangeURI": "xsd:string",
                  "shortDisplay": "String",
                  "lookupSchema": undefined,
                  "lookupQuery": undefined,
                },
                "rangeURI": undefined,
              },
              "updatedField": false,
              "isPrimaryKey": false,
              "lockType": "NotLocked",
              "wrappedColumnName": undefined,
            },
            Immutable.Record {
              "conceptURI": undefined,
              "conditionalFormats": Immutable.List [],
              "defaultScale": undefined,
              "defaultValueType": undefined,
              "defaultValue": undefined,
              "defaultDisplayValue": undefined,
              "description": undefined,
              "dimension": undefined,
              "excludeFromShifting": false,
              "format": undefined,
              "hidden": false,
              "importAliases": undefined,
              "label": undefined,
              "lookupContainer": undefined,
              "lookupQuery": undefined,
              "lookupSchema": undefined,
              "lookupValidator": undefined,
              "measure": undefined,
              "mvEnabled": false,
              "name": "field2",
              "PHI": undefined,
              "primaryKey": undefined,
              "propertyId": undefined,
              "propertyURI": undefined,
              "propertyValidators": Immutable.List [],
              "rangeValidators": Immutable.List [],
              "rangeURI": "xsd:int",
              "regexValidators": Immutable.List [],
              "recommendedVariable": false,
              "required": false,
              "scale": undefined,
              "URL": undefined,
              "shownInDetailsView": true,
              "shownInInsertView": true,
              "shownInUpdateView": true,
              "visible": true,
              "dataType": Immutable.Record {
                "conceptURI": undefined,
                "display": "Integer",
                "name": "int",
                "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                "alternateRangeURI": "xsd:int",
                "shortDisplay": undefined,
                "lookupSchema": undefined,
                "lookupQuery": undefined,
              },
              "lookupQueryValue": undefined,
              "lookupType": Immutable.Record {
                "conceptURI": undefined,
                "display": "Lookup",
                "name": "lookup",
                "rangeURI": "xsd:int",
                "alternateRangeURI": undefined,
                "shortDisplay": undefined,
                "lookupSchema": undefined,
                "lookupQuery": undefined,
              },
              "original": Object {
                "conceptURI": undefined,
                "dataType": Immutable.Record {
                  "conceptURI": undefined,
                  "display": "Integer",
                  "name": "int",
                  "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                  "alternateRangeURI": "xsd:int",
                  "shortDisplay": undefined,
                  "lookupSchema": undefined,
                  "lookupQuery": undefined,
                },
                "rangeURI": undefined,
              },
              "updatedField": false,
              "isPrimaryKey": false,
              "lockType": "NotLocked",
              "wrappedColumnName": undefined,
            },
            Immutable.Record {
              "conceptURI": undefined,
              "conditionalFormats": Immutable.List [],
              "defaultScale": undefined,
              "defaultValueType": undefined,
              "defaultValue": undefined,
              "defaultDisplayValue": undefined,
              "description": undefined,
              "dimension": undefined,
              "excludeFromShifting": false,
              "format": undefined,
              "hidden": false,
              "importAliases": undefined,
              "label": undefined,
              "lookupContainer": undefined,
              "lookupQuery": undefined,
              "lookupSchema": undefined,
              "lookupValidator": undefined,
              "measure": undefined,
              "mvEnabled": false,
              "name": "field3",
              "PHI": undefined,
              "primaryKey": undefined,
              "propertyId": undefined,
              "propertyURI": undefined,
              "propertyValidators": Immutable.List [],
              "rangeValidators": Immutable.List [],
              "rangeURI": "xsd:dateTime",
              "regexValidators": Immutable.List [],
              "recommendedVariable": false,
              "required": false,
              "scale": undefined,
              "URL": undefined,
              "shownInDetailsView": true,
              "shownInInsertView": true,
              "shownInUpdateView": true,
              "visible": true,
              "dataType": Immutable.Record {
                "conceptURI": undefined,
                "display": "Date Time",
                "name": "dateTime",
                "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                "alternateRangeURI": "xsd:dateTime",
                "shortDisplay": undefined,
                "lookupSchema": undefined,
                "lookupQuery": undefined,
              },
              "lookupQueryValue": undefined,
              "lookupType": Immutable.Record {
                "conceptURI": undefined,
                "display": "Lookup",
                "name": "lookup",
                "rangeURI": "xsd:dateTime",
                "alternateRangeURI": undefined,
                "shortDisplay": undefined,
                "lookupSchema": undefined,
                "lookupQuery": undefined,
              },
              "original": Object {
                "conceptURI": undefined,
                "dataType": Immutable.Record {
                  "conceptURI": undefined,
                  "display": "Date Time",
                  "name": "dateTime",
                  "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                  "alternateRangeURI": "xsd:dateTime",
                  "shortDisplay": undefined,
                  "lookupSchema": undefined,
                  "lookupQuery": undefined,
                },
                "rangeURI": undefined,
              },
              "updatedField": false,
              "isPrimaryKey": false,
              "lockType": "NotLocked",
              "wrappedColumnName": undefined,
            },
          ],
          "indices": Immutable.List [],
          "domainException": undefined,
          "mandatoryFieldNames": Immutable.List [],
          "reservedFieldNames": Immutable.List [],
          "newDesignFields": undefined,
          "instructions": undefined,
        },
      ]
    }
    onChange={[Function]}
    onToggle={[Function]}
    panelStatus="COMPLETE"
    showFilePropertyType={false}
    showInferFromFile={false}
    validate={false}
  >
    <LookupProvider>
      <DomainFormImpl
        appPropertiesOnly={true}
        controlledCollapse={true}
        domain={
          Immutable.Record {
            "name": "Sample Fields",
            "container": undefined,
            "description": undefined,
            "domainURI": undefined,
            "domainId": null,
            "allowFileLinkProperties": true,
            "allowAttachmentProperties": true,
            "allowFlagProperties": true,
            "showDefaultValueSettings": false,
            "defaultDefaultValueType": undefined,
            "defaultValueOptions": Immutable.List [],
            "fields": Immutable.List [
              Immutable.Record {
                "conceptURI": undefined,
                "conditionalFormats": Immutable.List [],
                "defaultScale": undefined,
                "defaultValueType": undefined,
                "defaultValue": undefined,
                "defaultDisplayValue": undefined,
                "description": undefined,
                "dimension": undefined,
                "excludeFromShifting": false,
                "format": undefined,
                "hidden": false,
                "importAliases": undefined,
                "label": undefined,
                "lookupContainer": undefined,
                "lookupQuery": undefined,
                "lookupSchema": undefined,
                "lookupValidator": undefined,
                "measure": undefined,
                "mvEnabled": false,
                "name": "field1",
                "PHI": undefined,
                "primaryKey": undefined,
                "propertyId": undefined,
                "propertyURI": undefined,
                "propertyValidators": Immutable.List [],
                "rangeValidators": Immutable.List [],
                "rangeURI": "xsd:string",
                "regexValidators": Immutable.List [],
                "recommendedVariable": false,
                "required": false,
                "scale": undefined,
                "URL": undefined,
                "shownInDetailsView": true,
                "shownInInsertView": true,
                "shownInUpdateView": true,
                "visible": true,
                "dataType": Immutable.Record {
                  "conceptURI": undefined,
                  "display": "Text",
                  "name": "string",
                  "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                  "alternateRangeURI": "xsd:string",
                  "shortDisplay": "String",
                  "lookupSchema": undefined,
                  "lookupQuery": undefined,
                },
                "lookupQueryValue": undefined,
                "lookupType": Immutable.Record {
                  "conceptURI": undefined,
                  "display": "Lookup",
                  "name": "lookup",
                  "rangeURI": "xsd:string",
                  "alternateRangeURI": undefined,
                  "shortDisplay": undefined,
                  "lookupSchema": undefined,
                  "lookupQuery": undefined,
                },
                "original": Object {
                  "conceptURI": undefined,
                  "dataType": Immutable.Record {
                    "conceptURI": undefined,
                    "display": "Text",
                    "name": "string",
                    "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                    "alternateRangeURI": "xsd:string",
                    "shortDisplay": "String",
                    "lookupSchema": undefined,
                    "lookupQuery": undefined,
                  },
                  "rangeURI": undefined,
                },
                "updatedField": false,
                "isPrimaryKey": false,
                "lockType": "NotLocked",
                "wrappedColumnName": undefined,
              },
              Immutable.Record {
                "conceptURI": undefined,
                "conditionalFormats": Immutable.List [],
                "defaultScale": undefined,
                "defaultValueType": undefined,
                "defaultValue": undefined,
                "defaultDisplayValue": undefined,
                "description": undefined,
                "dimension": undefined,
                "excludeFromShifting": false,
                "format": undefined,
                "hidden": false,
                "importAliases": undefined,
                "label": undefined,
                "lookupContainer": undefined,
                "lookupQuery": undefined,
                "lookupSchema": undefined,
                "lookupValidator": undefined,
                "measure": undefined,
                "mvEnabled": false,
                "name": "field2",
                "PHI": undefined,
                "primaryKey": undefined,
                "propertyId": undefined,
                "propertyURI": undefined,
                "propertyValidators": Immutable.List [],
                "rangeValidators": Immutable.List [],
                "rangeURI": "xsd:int",
                "regexValidators": Immutable.List [],
                "recommendedVariable": false,
                "required": false,
                "scale": undefined,
                "URL": undefined,
                "shownInDetailsView": true,
                "shownInInsertView": true,
                "shownInUpdateView": true,
                "visible": true,
                "dataType": Immutable.Record {
                  "conceptURI": undefined,
                  "display": "Integer",
                  "name": "int",
                  "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                  "alternateRangeURI": "xsd:int",
                  "shortDisplay": undefined,
                  "lookupSchema": undefined,
                  "lookupQuery": undefined,
                },
                "lookupQueryValue": undefined,
                "lookupType": Immutable.Record {
                  "conceptURI": undefined,
                  "display": "Lookup",
                  "name": "lookup",
                  "rangeURI": "xsd:int",
                  "alternateRangeURI": undefined,
                  "shortDisplay": undefined,
                  "lookupSchema": undefined,
                  "lookupQuery": undefined,
                },
                "original": Object {
                  "conceptURI": undefined,
                  "dataType": Immutable.Record {
                    "conceptURI": undefined,
                    "display": "Integer",
                    "name": "int",
                    "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                    "alternateRangeURI": "xsd:int",
                    "shortDisplay": undefined,
                    "lookupSchema": undefined,
                    "lookupQuery": undefined,
                  },
                  "rangeURI": undefined,
                },
                "updatedField": false,
                "isPrimaryKey": false,
                "lockType": "NotLocked",
                "wrappedColumnName": undefined,
              },
              Immutable.Record {
                "conceptURI": undefined,
                "conditionalFormats": Immutable.List [],
                "defaultScale": undefined,
                "defaultValueType": undefined,
                "defaultValue": undefined,
                "defaultDisplayValue": undefined,
                "description": undefined,
                "dimension": undefined,
                "excludeFromShifting": false,
                "format": undefined,
                "hidden": false,
                "importAliases": undefined,
                "label": undefined,
                "lookupContainer": undefined,
                "lookupQuery": undefined,
                "lookupSchema": undefined,
                "lookupValidator": undefined,
                "measure": undefined,
                "mvEnabled": false,
                "name": "field3",
                "PHI": undefined,
                "primaryKey": undefined,
                "propertyId": undefined,
                "propertyURI": undefined,
                "propertyValidators": Immutable.List [],
                "rangeValidators": Immutable.List [],
                "rangeURI": "xsd:dateTime",
                "regexValidators": Immutable.List [],
                "recommendedVariable": false,
                "required": false,
                "scale": undefined,
                "URL": undefined,
                "shownInDetailsView": true,
                "shownInInsertView": true,
                "shownInUpdateView": true,
                "visible": true,
                "dataType": Immutable.Record {
                  "conceptURI": undefined,
                  "display": "Date Time",
                  "name": "dateTime",
                  "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                  "alternateRangeURI": "xsd:dateTime",
                  "shortDisplay": undefined,
                  "lookupSchema": undefined,
                  "lookupQuery": undefined,
                },
                "lookupQueryValue": undefined,
                "lookupType": Immutable.Record {
                  "conceptURI": undefined,
                  "display": "Lookup",
                  "name": "lookup",
                  "rangeURI": "xsd:dateTime",
                  "alternateRangeURI": undefined,
                  "shortDisplay": undefined,
                  "lookupSchema": undefined,
                  "lookupQuery": undefined,
                },
                "original": Object {
                  "conceptURI": undefined,
                  "dataType": Immutable.Record {
                    "conceptURI": undefined,
                    "display": "Date Time",
                    "name": "dateTime",
                    "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                    "alternateRangeURI": "xsd:dateTime",
                    "shortDisplay": undefined,
                    "lookupSchema": undefined,
                    "lookupQuery": undefined,
                  },
                  "rangeURI": undefined,
                },
                "updatedField": false,
                "isPrimaryKey": false,
                "lockType": "NotLocked",
                "wrappedColumnName": undefined,
              },
            ],
            "indices": Immutable.List [],
            "domainException": undefined,
            "mandatoryFieldNames": Immutable.List [],
            "reservedFieldNames": Immutable.List [],
            "newDesignFields": undefined,
            "instructions": undefined,
          }
        }
        domainFormDisplayOptions={
          Object {
            "isDragDisabled": false,
            "phiLevelDisabled": false,
            "showAddFieldsButton": true,
            "showRequired": true,
            "showTextOptions": true,
            "showValidators": true,
          }
        }
        domainIndex={1}
        headerPrefix="Test Assay Protocol"
        helpNoun="field designer"
        helpTopic={null}
        initCollapsed={true}
        isNew={false}
        modelDomains={
          Immutable.List [
            Immutable.Record {
              "name": "Batch Fields",
              "container": undefined,
              "description": undefined,
              "domainURI": undefined,
              "domainId": null,
              "allowFileLinkProperties": true,
              "allowAttachmentProperties": true,
              "allowFlagProperties": true,
              "showDefaultValueSettings": false,
              "defaultDefaultValueType": undefined,
              "defaultValueOptions": Immutable.List [],
              "fields": Immutable.List [],
              "indices": Immutable.List [],
              "domainException": undefined,
              "mandatoryFieldNames": Immutable.List [],
              "reservedFieldNames": Immutable.List [],
              "newDesignFields": undefined,
              "instructions": undefined,
            },
            Immutable.Record {
              "name": "Sample Fields",
              "container": undefined,
              "description": undefined,
              "domainURI": undefined,
              "domainId": null,
              "allowFileLinkProperties": true,
              "allowAttachmentProperties": true,
              "allowFlagProperties": true,
              "showDefaultValueSettings": false,
              "defaultDefaultValueType": undefined,
              "defaultValueOptions": Immutable.List [],
              "fields": Immutable.List [
                Immutable.Record {
                  "conceptURI": undefined,
                  "conditionalFormats": Immutable.List [],
                  "defaultScale": undefined,
                  "defaultValueType": undefined,
                  "defaultValue": undefined,
                  "defaultDisplayValue": undefined,
                  "description": undefined,
                  "dimension": undefined,
                  "excludeFromShifting": false,
                  "format": undefined,
                  "hidden": false,
                  "importAliases": undefined,
                  "label": undefined,
                  "lookupContainer": undefined,
                  "lookupQuery": undefined,
                  "lookupSchema": undefined,
                  "lookupValidator": undefined,
                  "measure": undefined,
                  "mvEnabled": false,
                  "name": "field1",
                  "PHI": undefined,
                  "primaryKey": undefined,
                  "propertyId": undefined,
                  "propertyURI": undefined,
                  "propertyValidators": Immutable.List [],
                  "rangeValidators": Immutable.List [],
                  "rangeURI": "xsd:string",
                  "regexValidators": Immutable.List [],
                  "recommendedVariable": false,
                  "required": false,
                  "scale": undefined,
                  "URL": undefined,
                  "shownInDetailsView": true,
                  "shownInInsertView": true,
                  "shownInUpdateView": true,
                  "visible": true,
                  "dataType": Immutable.Record {
                    "conceptURI": undefined,
                    "display": "Text",
                    "name": "string",
                    "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                    "alternateRangeURI": "xsd:string",
                    "shortDisplay": "String",
                    "lookupSchema": undefined,
                    "lookupQuery": undefined,
                  },
                  "lookupQueryValue": undefined,
                  "lookupType": Immutable.Record {
                    "conceptURI": undefined,
                    "display": "Lookup",
                    "name": "lookup",
                    "rangeURI": "xsd:string",
                    "alternateRangeURI": undefined,
                    "shortDisplay": undefined,
                    "lookupSchema": undefined,
                    "lookupQuery": undefined,
                  },
                  "original": Object {
                    "conceptURI": undefined,
                    "dataType": Immutable.Record {
                      "conceptURI": undefined,
                      "display": "Text",
                      "name": "string",
                      "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                      "alternateRangeURI": "xsd:string",
                      "shortDisplay": "String",
                      "lookupSchema": undefined,
                      "lookupQuery": undefined,
                    },
                    "rangeURI": undefined,
                  },
                  "updatedField": false,
                  "isPrimaryKey": false,
                  "lockType": "NotLocked",
                  "wrappedColumnName": undefined,
                },
                Immutable.Record {
                  "conceptURI": undefined,
                  "conditionalFormats": Immutable.List [],
                  "defaultScale": undefined,
                  "defaultValueType": undefined,
                  "defaultValue": undefined,
                  "defaultDisplayValue": undefined,
                  "description": undefined,
                  "dimension": undefined,
                  "excludeFromShifting": false,
                  "format": undefined,
                  "hidden": false,
                  "importAliases": undefined,
                  "label": undefined,
                  "lookupContainer": undefined,
                  "lookupQuery": undefined,
                  "lookupSchema": undefined,
                  "lookupValidator": undefined,
                  "measure": undefined,
                  "mvEnabled": false,
                  "name": "field2",
                  "PHI": undefined,
                  "primaryKey": undefined,
                  "propertyId": undefined,
                  "propertyURI": undefined,
                  "propertyValidators": Immutable.List [],
                  "rangeValidators": Immutable.List [],
                  "rangeURI": "xsd:int",
                  "regexValidators": Immutable.List [],
                  "recommendedVariable": false,
                  "required": false,
                  "scale": undefined,
                  "URL": undefined,
                  "shownInDetailsView": true,
                  "shownInInsertView": true,
                  "shownInUpdateView": true,
                  "visible": true,
                  "dataType": Immutable.Record {
                    "conceptURI": undefined,
                    "display": "Integer",
                    "name": "int",
                    "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                    "alternateRangeURI": "xsd:int",
                    "shortDisplay": undefined,
                    "lookupSchema": undefined,
                    "lookupQuery": undefined,
                  },
                  "lookupQueryValue": undefined,
                  "lookupType": Immutable.Record {
                    "conceptURI": undefined,
                    "display": "Lookup",
                    "name": "lookup",
                    "rangeURI": "xsd:int",
                    "alternateRangeURI": undefined,
                    "shortDisplay": undefined,
                    "lookupSchema": undefined,
                    "lookupQuery": undefined,
                  },
                  "original": Object {
                    "conceptURI": undefined,
                    "dataType": Immutable.Record {
                      "conceptURI": undefined,
                      "display": "Integer",
                      "name": "int",
                      "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                      "alternateRangeURI": "xsd:int",
                      "shortDisplay": undefined,
                      "lookupSchema": undefined,
                      "lookupQuery": undefined,
                    },
                    "rangeURI": undefined,
                  },
                  "updatedField": false,
                  "isPrimaryKey": false,
                  "lockType": "NotLocked",
                  "wrappedColumnName": undefined,
                },
                Immutable.Record {
                  "conceptURI": undefined,
                  "conditionalFormats": Immutable.List [],
                  "defaultScale": undefined,
                  "defaultValueType": undefined,
                  "defaultValue": undefined,
                  "defaultDisplayValue": undefined,
                  "description": undefined,
                  "dimension": undefined,
                  "excludeFromShifting": false,
                  "format": undefined,
                  "hidden": false,
                  "importAliases": undefined,
                  "label": undefined,
                  "lookupContainer": undefined,
                  "lookupQuery": undefined,
                  "lookupSchema": undefined,
                  "lookupValidator": undefined,
                  "measure": undefined,
                  "mvEnabled": false,
                  "name": "field3",
                  "PHI": undefined,
                  "primaryKey": undefined,
                  "propertyId": undefined,
                  "propertyURI": undefined,
                  "propertyValidators": Immutable.List [],
                  "rangeValidators": Immutable.List [],
                  "rangeURI": "xsd:dateTime",
                  "regexValidators": Immutable.List [],
                  "recommendedVariable": false,
                  "required": false,
                  "scale": undefined,
                  "URL": undefined,
                  "shownInDetailsView": true,
                  "shownInInsertView": true,
                  "shownInUpdateView": true,
                  "visible": true,
                  "dataType": Immutable.Record {
                    "conceptURI": undefined,
                    "display": "Date Time",
                    "name": "dateTime",
                    "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                    "alternateRangeURI": "xsd:dateTime",
                    "shortDisplay": undefined,
                    "lookupSchema": undefined,
                    "lookupQuery": undefined,
                  },
                  "lookupQueryValue": undefined,
                  "lookupType": Immutable.Record {
                    "conceptURI": undefined,
                    "display": "Lookup",
                    "name": "lookup",
                    "rangeURI": "xsd:dateTime",
                    "alternateRangeURI": undefined,
                    "shortDisplay": undefined,
                    "lookupSchema": undefined,
                    "lookupQuery": undefined,
                  },
                  "original": Object {
                    "conceptURI": undefined,
                    "dataType": Immutable.Record {
                      "conceptURI": undefined,
                      "display": "Date Time",
                      "name": "dateTime",
                      "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                      "alternateRangeURI": "xsd:dateTime",
                      "shortDisplay": undefined,
                      "lookupSchema": undefined,
                      "lookupQuery": undefined,
                    },
                    "rangeURI": undefined,
                  },
                  "updatedField": false,
                  "isPrimaryKey": false,
                  "lockType": "NotLocked",
                  "wrappedColumnName": undefined,
                },
              ],
              "indices": Immutable.List [],
              "domainException": undefined,
              "mandatoryFieldNames": Immutable.List [],
              "reservedFieldNames": Immutable.List [],
              "newDesignFields": undefined,
              "instructions": undefined,
            },
          ]
        }
        onChange={[Function]}
        onToggle={[Function]}
        panelStatus="COMPLETE"
        showFilePropertyType={false}
        showHeader={true}
        showInferFromFile={false}
        successBsStyle="success"
        validate={false}
      >
        <Uncontrolled(Panel)
          className="domain-form-panel"
          expanded={false}
          onToggle={[Function]}
        >
          <Panel
            bsClass="panel"
            bsStyle="default"
            className="domain-form-panel"
            expanded={false}
            onToggle={[Function]}
          >
            <div
              className="domain-form-panel panel panel-default"
            >
              <CollapsiblePanelHeader
                collapsed={true}
                controlledCollapse={true}
                headerDetails="3 Fields Defined"
                id="domainpropertiesrow-Sample-Fields-hdr"
                isValid={true}
                panelStatus="COMPLETE"
                title="Sample Fields"
                togglePanel={[Function]}
              >
                <PanelHeading
                  bsClass="panel"
                  className="domain-panel-header domain-heading-collapsible domain-panel-header-collapsed"
                  componentClass="div"
                  id="domainpropertiesrow-Sample-Fields-hdr"
                  onClick={[Function]}
                >
                  <div
                    className="domain-panel-header domain-heading-collapsible domain-panel-header-collapsed panel-heading"
                    id="domainpropertiesrow-Sample-Fields-hdr"
                    onClick={[Function]}
                  >
                    <span
                      className="domain-panel-status-icon domain-panel-status-icon-green"
                    >
                      <FontAwesomeIcon
                        border={false}
                        className=""
                        fixedWidth={false}
                        flip={null}
                        icon={
                          Object {
                            "icon": Array [
                              512,
                              512,
                              Array [],
                              "f058",
                              "M504 256c0 136.967-111.033 248-248 248S8 392.967 8 256 119.033 8 256 8s248 111.033 248 248zM227.314 387.314l184-184c6.248-6.248 6.248-16.379 0-22.627l-22.627-22.627c-6.248-6.249-16.379-6.249-22.628 0L216 308.118l-70.059-70.059c-6.248-6.248-16.379-6.248-22.628 0l-22.627 22.627c-6.248 6.248-6.248 16.379 0 22.627l104 104c6.249 6.249 16.379 6.249 22.628.001z",
                            ],
                            "iconName": "check-circle",
                            "prefix": "fas",
                          }
                        }
                        inverse={false}
                        listItem={false}
                        mask={null}
                        pull={null}
                        pulse={false}
                        rotation={null}
                        size={null}
                        spin={false}
                        symbol={false}
                        title=""
                        transform={null}
                      >
                        <svg
                          aria-hidden="true"
                          className="svg-inline--fa fa-check-circle fa-w-16 "
                          data-icon="check-circle"
                          data-prefix="fas"
                          focusable="false"
                          role="img"
                          style={Object {}}
                          viewBox="0 0 512 512"
                          xmlns="http://www.w3.org/2000/svg"
                        >
                          <path
                            d="M504 256c0 136.967-111.033 248-248 248S8 392.967 8 256 119.033 8 256 8s248 111.033 248 248zM227.314 387.314l184-184c6.248-6.248 6.248-16.379 0-22.627l-22.627-22.627c-6.248-6.249-16.379-6.249-22.628 0L216 308.118l-70.059-70.059c-6.248-6.248-16.379-6.248-22.628 0l-22.627 22.627c-6.248 6.248-6.248 16.379 0 22.627l104 104c6.249 6.249 16.379 6.249 22.628.001z"
                            fill="currentColor"
                            style={Object {}}
                          />
                        </svg>
                      </FontAwesomeIcon>
                    </span>
                    <span
                      className="domain-panel-title"
                    >
                      Sample Fields
                    </span>
                    <span
                      className="pull-right"
                    >
                      <FontAwesomeIcon
                        border={false}
                        className="domain-form-expand-btn"
                        fixedWidth={false}
                        flip={null}
                        icon={
                          Object {
                            "icon": Array [
                              448,
                              512,
                              Array [],
                              "f0fe",
                              "M400 32H48C21.5 32 0 53.5 0 80v352c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V80c0-26.5-21.5-48-48-48zm-32 252c0 6.6-5.4 12-12 12h-92v92c0 6.6-5.4 12-12 12h-56c-6.6 0-12-5.4-12-12v-92H92c-6.6 0-12-5.4-12-12v-56c0-6.6 5.4-12 12-12h92v-92c0-6.6 5.4-12 12-12h56c6.6 0 12 5.4 12 12v92h92c6.6 0 12 5.4 12 12v56z",
                            ],
                            "iconName": "plus-square",
                            "prefix": "fas",
                          }
                        }
                        inverse={false}
                        listItem={false}
                        mask={null}
                        pull={null}
                        pulse={false}
                        rotation={null}
                        size="lg"
                        spin={false}
                        symbol={false}
                        title=""
                        transform={null}
                      >
                        <svg
                          aria-hidden="true"
                          className="svg-inline--fa fa-plus-square fa-w-14 fa-lg domain-form-expand-btn"
                          data-icon="plus-square"
                          data-prefix="fas"
                          focusable="false"
                          role="img"
                          style={Object {}}
                          viewBox="0 0 448 512"
                          xmlns="http://www.w3.org/2000/svg"
                        >
                          <path
                            d="M400 32H48C21.5 32 0 53.5 0 80v352c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V80c0-26.5-21.5-48-48-48zm-32 252c0 6.6-5.4 12-12 12h-92v92c0 6.6-5.4 12-12 12h-56c-6.6 0-12-5.4-12-12v-92H92c-6.6 0-12-5.4-12-12v-56c0-6.6 5.4-12 12-12h92v-92c0-6.6 5.4-12 12-12h56c6.6 0 12 5.4 12 12v92h92c6.6 0 12 5.4 12 12v56z"
                            fill="currentColor"
                            style={Object {}}
                          />
                        </svg>
                      </FontAwesomeIcon>
                    </span>
                    <LabelHelpTip
                      body={[Function]}
                      customStyle={
                        Object {
                          "marginLeft": "5px",
                          "verticalAlign": "top",
                        }
                      }
                      id="tooltip"
                      placement="top"
                      size="1x"
                      title="Sample Fields"
                    >
                      <span
                        className="label-help-target"
                        onMouseOut={[Function]}
                        onMouseOver={[Function]}
                      >
                        <FontAwesomeIcon
                          border={false}
                          className="label-help-icon"
                          fixedWidth={false}
                          flip={null}
                          icon={
                            Object {
                              "icon": Array [
                                512,
                                512,
                                Array [],
                                "f059",
                                "M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z",
                              ],
                              "iconName": "question-circle",
                              "prefix": "fas",
                            }
                          }
                          inverse={false}
                          listItem={false}
                          mask={null}
                          pull={null}
                          pulse={false}
                          rotation={null}
                          size="1x"
                          spin={false}
                          style={
                            Object {
                              "marginLeft": "5px",
                              "verticalAlign": "top",
                            }
                          }
                          symbol={false}
                          title=""
                          transform={null}
                        >
                          <svg
                            aria-hidden="true"
                            className="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                            data-icon="question-circle"
                            data-prefix="fas"
                            focusable="false"
                            role="img"
                            style={
                              Object {
                                "marginLeft": "5px",
                                "verticalAlign": "top",
                              }
                            }
                            viewBox="0 0 512 512"
                            xmlns="http://www.w3.org/2000/svg"
                          >
                            <path
                              d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                              fill="currentColor"
                              style={Object {}}
                            />
                          </svg>
                        </FontAwesomeIcon>
                        <Overlay
                          animation={[Function]}
                          placement="top"
                          rootClose={false}
                          show={false}
                          target={
                            <span
                              class="label-help-target"
                            >
                              <svg
                                aria-hidden="true"
                                class="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                                data-icon="question-circle"
                                data-prefix="fas"
                                focusable="false"
                                role="img"
                                style="vertical-align: top; margin-left: 5px;"
                                viewBox="0 0 512 512"
                                xmlns="http://www.w3.org/2000/svg"
                              >
                                <path
                                  d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                  fill="currentColor"
                                />
                              </svg>
                            </span>
                          }
                        >
                          <Overlay
                            placement="top"
                            rootClose={false}
                            show={false}
                            target={
                              <span
                                class="label-help-target"
                              >
                                <svg
                                  aria-hidden="true"
                                  class="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                                  data-icon="question-circle"
                                  data-prefix="fas"
                                  focusable="false"
                                  role="img"
                                  style="vertical-align: top; margin-left: 5px;"
                                  viewBox="0 0 512 512"
                                  xmlns="http://www.w3.org/2000/svg"
                                >
                                  <path
                                    d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                    fill="currentColor"
                                  />
                                </svg>
                              </span>
                            }
                            transition={[Function]}
                          />
                        </Overlay>
                      </span>
                    </LabelHelpTip>
                    <span
                      className="domain-panel-header-fields-defined"
                    >
                      3 Fields Defined
                    </span>
                  </div>
                </PanelHeading>
              </CollapsiblePanelHeader>
              <PanelBody
                bsClass="panel"
                collapsible={true}
              >
                <PanelCollapse
                  bsClass="panel"
                >
                  <Collapse
                    appear={false}
                    dimension="height"
                    getDimensionValue={[Function]}
                    in={false}
                    mountOnEnter={false}
                    timeout={300}
                    unmountOnExit={false}
                  >
                    <Transition
                      appear={false}
                      aria-expanded={null}
                      enter={true}
                      exit={true}
                      in={false}
                      mountOnEnter={false}
                      onEnter={[Function]}
                      onEntered={[Function]}
                      onEntering={[Function]}
                      onExit={[Function]}
                      onExited={[Function]}
                      onExiting={[Function]}
                      timeout={300}
                      unmountOnExit={false}
                    >
                      <div
                        aria-expanded={null}
                        className="panel-collapse collapse"
                      >
                        <div
                          className="panel-body"
                        >
                          <Row
                            bsClass="row"
                            className=""
                            componentClass="div"
                          >
                            <div
                              className="row"
                            >
                              <Col
                                bsClass="col"
                                componentClass="div"
                                xs={12}
                              >
                                <div
                                  className="col-xs-12"
                                />
                              </Col>
                            </div>
                          </Row>
                          <Row
                            bsClass="row"
                            componentClass="div"
                          >
                            <div
                              className="row"
                            >
                              <Col
                                bsClass="col"
                                componentClass="div"
                                xs={3}
                              >
                                <div
                                  className="col-xs-3"
                                >
                                  <FormControl
                                    bsClass="form-control"
                                    componentClass="input"
                                    id="domain-search-name-1"
                                    onChange={[Function]}
                                    placeholder="Search Fields"
                                    type="text"
                                  >
                                    <input
                                      className="form-control"
                                      id="domain-search-name-1"
                                      onChange={[Function]}
                                      placeholder="Search Fields"
                                      type="text"
                                    />
                                  </FormControl>
                                </div>
                              </Col>
                            </div>
                          </Row>
                          <DragDropContext
                            onBeforeDragStart={[Function]}
                            onDragEnd={[Function]}
                          >
                            <ErrorBoundary>
                              <App
                                onBeforeDragStart={[Function]}
                                onDragEnd={[Function]}
                                setOnError={[Function]}
                                uniqueId={2}
                              >
                                <Provider
                                  context={
                                    Object {
                                      "$$typeof": Symbol(react.context),
                                      "Consumer": Object {
                                        "$$typeof": Symbol(react.context),
                                        "_calculateChangedBits": null,
                                        "_context": [Circular],
                                      },
                                      "Provider": Object {
                                        "$$typeof": Symbol(react.provider),
                                        "_context": [Circular],
                                      },
                                      "_calculateChangedBits": null,
                                      "_currentRenderer": Object {},
                                      "_currentRenderer2": null,
                                      "_currentValue": null,
                                      "_currentValue2": null,
                                      "_threadCount": 0,
                                    }
                                  }
                                  store={
                                    Object {
                                      "dispatch": [Function],
                                      "getState": [Function],
                                      "replaceReducer": [Function],
                                      "subscribe": [Function],
                                      Symbol(observable): [Function],
                                    }
                                  }
                                >
                                  <Container>
                                    <div
                                      onScroll={[Function]}
                                      onTouchEnd={[Function]}
                                      onTouchMove={[Function]}
                                      onTouchStart={[Function]}
                                    >
                                      <Sticky
                                        bottomOffset={0}
                                        disableCompensation={false}
                                        disableHardwareAcceleration={false}
                                        relative={false}
                                        topOffset={0}
                                      >
                                        <div>
                                          <div />
                                          <div
                                            style={
                                              Object {
                                                "top": 0,
                                                "zIndex": 1000,
                                              }
                                            }
                                          >
                                            <div
                                              className="domain-floating-hdr"
                                            >
                                              <Row
                                                bsClass="row"
                                                className="domain-form-hdr-row"
                                                componentClass="div"
                                              >
                                                <div
                                                  className="domain-form-hdr-row row"
                                                >
                                                  <Col
                                                    bsClass="col"
                                                    componentClass="div"
                                                    xs={6}
                                                  >
                                                    <div
                                                      className="col-xs-6"
                                                    >
                                                      <Col
                                                        bsClass="col"
                                                        componentClass="div"
                                                        xs={6}
                                                      >
                                                        <div
                                                          className="col-xs-6"
                                                        >
                                                          <b>
                                                            Name
                                                          </b>
                                                        </div>
                                                      </Col>
                                                      <Col
                                                        bsClass="col"
                                                        componentClass="div"
                                                        xs={4}
                                                      >
                                                        <div
                                                          className="col-xs-4"
                                                        >
                                                          <b>
                                                            Data Type
                                                          </b>
                                                        </div>
                                                      </Col>
                                                      <Col
                                                        bsClass="col"
                                                        className="domain-form-hdr-center"
                                                        componentClass="div"
                                                        xs={2}
                                                      >
                                                        <div
                                                          className="domain-form-hdr-center col-xs-2"
                                                        >
                                                          <b>
                                                            Required
                                                          </b>
                                                        </div>
                                                      </Col>
                                                    </div>
                                                  </Col>
                                                  <Col
                                                    bsClass="col"
                                                    componentClass="div"
                                                    xs={6}
                                                  >
                                                    <div
                                                      className="col-xs-6"
                                                    >
                                                      <b>
                                                        Details
                                                      </b>
                                                    </div>
                                                  </Col>
                                                </div>
                                              </Row>
                                            </div>
                                          </div>
                                        </div>
                                      </Sticky>
                                      <ConnectFunction
                                        direction="vertical"
                                        droppableId="domain-form-droppable"
                                        ignoreContainerClipping={false}
                                        isCombineEnabled={false}
                                        isDropDisabled={false}
                                        type="DEFAULT"
                                      >
                                        <Droppable
                                          direction="vertical"
                                          droppableId="domain-form-droppable"
                                          ignoreContainerClipping={false}
                                          isCombineEnabled={false}
                                          isDropDisabled={false}
                                          placeholder={null}
                                          shouldAnimatePlaceholder={true}
                                          snapshot={
                                            Object {
                                              "draggingFromThisWith": null,
                                              "draggingOverWith": null,
                                              "isDraggingOver": false,
                                            }
                                          }
                                          type="DEFAULT"
                                          updateViewportMaxScroll={[Function]}
                                        >
                                          <div
                                            data-react-beautiful-dnd-droppable="2"
                                          >
                                            <Form
                                              bsClass="form"
                                              componentClass="form"
                                              horizontal={false}
                                              inline={false}
                                            >
                                              <form
                                                className=""
                                              >
                                                <DomainRow
                                                  appPropertiesOnly={true}
                                                  availableTypes={
                                                    Immutable.List [
                                                      Immutable.Record {
                                                        "conceptURI": undefined,
                                                        "display": "Text",
                                                        "name": "string",
                                                        "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                        "alternateRangeURI": "xsd:string",
                                                        "shortDisplay": "String",
                                                        "lookupSchema": undefined,
                                                        "lookupQuery": undefined,
                                                      },
                                                      Immutable.Record {
                                                        "conceptURI": undefined,
                                                        "display": "Multi-Line Text",
                                                        "name": "multiLine",
                                                        "rangeURI": "http://www.w3.org/2001/XMLSchema#multiLine",
                                                        "alternateRangeURI": undefined,
                                                        "shortDisplay": undefined,
                                                        "lookupSchema": undefined,
                                                        "lookupQuery": undefined,
                                                      },
                                                      Immutable.Record {
                                                        "conceptURI": undefined,
                                                        "display": "Boolean",
                                                        "name": "boolean",
                                                        "rangeURI": "http://www.w3.org/2001/XMLSchema#boolean",
                                                        "alternateRangeURI": "xsd:boolean",
                                                        "shortDisplay": undefined,
                                                        "lookupSchema": undefined,
                                                        "lookupQuery": undefined,
                                                      },
                                                      Immutable.Record {
                                                        "conceptURI": undefined,
                                                        "display": "Integer",
                                                        "name": "int",
                                                        "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                                        "alternateRangeURI": "xsd:int",
                                                        "shortDisplay": undefined,
                                                        "lookupSchema": undefined,
                                                        "lookupQuery": undefined,
                                                      },
                                                      Immutable.Record {
                                                        "conceptURI": undefined,
                                                        "display": "Decimal",
                                                        "name": "double",
                                                        "rangeURI": "http://www.w3.org/2001/XMLSchema#double",
                                                        "alternateRangeURI": "xsd:double",
                                                        "shortDisplay": undefined,
                                                        "lookupSchema": undefined,
                                                        "lookupQuery": undefined,
                                                      },
                                                      Immutable.Record {
                                                        "conceptURI": undefined,
                                                        "display": "Date Time",
                                                        "name": "dateTime",
                                                        "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                                                        "alternateRangeURI": "xsd:dateTime",
                                                        "shortDisplay": undefined,
                                                        "lookupSchema": undefined,
                                                        "lookupQuery": undefined,
                                                      },
                                                      Immutable.Record {
                                                        "conceptURI": "http://www.labkey.org/exp/xml#flag",
                                                        "display": "Flag",
                                                        "name": "flag",
                                                        "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                        "alternateRangeURI": undefined,
                                                        "shortDisplay": undefined,
                                                        "lookupSchema": undefined,
                                                        "lookupQuery": undefined,
                                                      },
                                                      Immutable.Record {
                                                        "conceptURI": undefined,
                                                        "display": "File",
                                                        "name": "fileLink",
                                                        "rangeURI": "http://cpas.fhcrc.org/exp/xml#fileLink",
                                                        "alternateRangeURI": undefined,
                                                        "shortDisplay": undefined,
                                                        "lookupSchema": undefined,
                                                        "lookupQuery": undefined,
                                                      },
                                                      Immutable.Record {
                                                        "conceptURI": undefined,
                                                        "display": "Attachment",
                                                        "name": "attachment",
                                                        "rangeURI": "http://www.labkey.org/exp/xml#attachment",
                                                        "alternateRangeURI": undefined,
                                                        "shortDisplay": undefined,
                                                        "lookupSchema": undefined,
                                                        "lookupQuery": undefined,
                                                      },
                                                      Immutable.Record {
                                                        "conceptURI": undefined,
                                                        "display": "User",
                                                        "name": "users",
                                                        "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                                        "alternateRangeURI": undefined,
                                                        "shortDisplay": undefined,
                                                        "lookupSchema": "core",
                                                        "lookupQuery": "users",
                                                      },
                                                      Immutable.Record {
                                                        "conceptURI": "http://cpas.labkey.com/Study#ParticipantId",
                                                        "display": "Subject/Participant",
                                                        "name": "ParticipantId",
                                                        "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                        "alternateRangeURI": undefined,
                                                        "shortDisplay": undefined,
                                                        "lookupSchema": undefined,
                                                        "lookupQuery": undefined,
                                                      },
                                                      Immutable.Record {
                                                        "conceptURI": undefined,
                                                        "display": "Lookup",
                                                        "name": "lookup",
                                                        "rangeURI": undefined,
                                                        "alternateRangeURI": undefined,
                                                        "shortDisplay": undefined,
                                                        "lookupSchema": undefined,
                                                        "lookupQuery": undefined,
                                                      },
                                                      Immutable.Record {
                                                        "conceptURI": "http://www.labkey.org/exp/xml#sample",
                                                        "display": "Sample",
                                                        "name": "sample",
                                                        "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                                        "alternateRangeURI": undefined,
                                                        "shortDisplay": undefined,
                                                        "lookupSchema": undefined,
                                                        "lookupQuery": undefined,
                                                      },
                                                    ]
                                                  }
                                                  defaultValueOptions={Immutable.List []}
                                                  domainFormDisplayOptions={
                                                    Object {
                                                      "isDragDisabled": false,
                                                      "phiLevelDisabled": false,
                                                      "showAddFieldsButton": true,
                                                      "showRequired": true,
                                                      "showTextOptions": true,
                                                      "showValidators": true,
                                                    }
                                                  }
                                                  domainId={null}
                                                  domainIndex={1}
                                                  dragging={false}
                                                  expandTransition={300}
                                                  expanded={false}
                                                  field={
                                                    Immutable.Record {
                                                      "conceptURI": undefined,
                                                      "conditionalFormats": Immutable.List [],
                                                      "defaultScale": undefined,
                                                      "defaultValueType": undefined,
                                                      "defaultValue": undefined,
                                                      "defaultDisplayValue": undefined,
                                                      "description": undefined,
                                                      "dimension": undefined,
                                                      "excludeFromShifting": false,
                                                      "format": undefined,
                                                      "hidden": false,
                                                      "importAliases": undefined,
                                                      "label": undefined,
                                                      "lookupContainer": undefined,
                                                      "lookupQuery": undefined,
                                                      "lookupSchema": undefined,
                                                      "lookupValidator": undefined,
                                                      "measure": undefined,
                                                      "mvEnabled": false,
                                                      "name": "field1",
                                                      "PHI": undefined,
                                                      "primaryKey": undefined,
                                                      "propertyId": undefined,
                                                      "propertyURI": undefined,
                                                      "propertyValidators": Immutable.List [],
                                                      "rangeValidators": Immutable.List [],
                                                      "rangeURI": "xsd:string",
                                                      "regexValidators": Immutable.List [],
                                                      "recommendedVariable": false,
                                                      "required": false,
                                                      "scale": undefined,
                                                      "URL": undefined,
                                                      "shownInDetailsView": true,
                                                      "shownInInsertView": true,
                                                      "shownInUpdateView": true,
                                                      "visible": true,
                                                      "dataType": Immutable.Record {
                                                        "conceptURI": undefined,
                                                        "display": "Text",
                                                        "name": "string",
                                                        "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                        "alternateRangeURI": "xsd:string",
                                                        "shortDisplay": "String",
                                                        "lookupSchema": undefined,
                                                        "lookupQuery": undefined,
                                                      },
                                                      "lookupQueryValue": undefined,
                                                      "lookupType": Immutable.Record {
                                                        "conceptURI": undefined,
                                                        "display": "Lookup",
                                                        "name": "lookup",
                                                        "rangeURI": "xsd:string",
                                                        "alternateRangeURI": undefined,
                                                        "shortDisplay": undefined,
                                                        "lookupSchema": undefined,
                                                        "lookupQuery": undefined,
                                                      },
                                                      "original": Object {
                                                        "conceptURI": undefined,
                                                        "dataType": Immutable.Record {
                                                          "conceptURI": undefined,
                                                          "display": "Text",
                                                          "name": "string",
                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                          "alternateRangeURI": "xsd:string",
                                                          "shortDisplay": "String",
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                        "rangeURI": undefined,
                                                      },
                                                      "updatedField": false,
                                                      "isPrimaryKey": false,
                                                      "lockType": "NotLocked",
                                                      "wrappedColumnName": undefined,
                                                    }
                                                  }
                                                  helpNoun="field designer"
                                                  index={0}
                                                  key="domain-row-key-0"
                                                  maxPhiLevel="NotPHI"
                                                  onChange={[Function]}
                                                  onDelete={[Function]}
                                                  onExpand={[Function]}
                                                  showDefaultValueSettings={false}
                                                  showFilePropertyType={false}
                                                  successBsStyle="success"
                                                >
                                                  <ConnectFunction
                                                    disableInteractiveElementBlocking={false}
                                                    draggableId="domainpropertiesrow-domaindrag-1-0"
                                                    index={0}
                                                    isDragDisabled={false}
                                                    shouldRespectForcePress={false}
                                                  >
                                                    <Draggable
                                                      disableInteractiveElementBlocking={false}
                                                      draggableId="domainpropertiesrow-domaindrag-1-0"
                                                      drop={[Function]}
                                                      dropAnimationFinished={[Function]}
                                                      index={0}
                                                      isDragDisabled={false}
                                                      lift={[Function]}
                                                      mapped={
                                                        Object {
                                                          "combineTargetFor": null,
                                                          "offset": Object {
                                                            "x": 0,
                                                            "y": 0,
                                                          },
                                                          "shouldAnimateDisplacement": true,
                                                          "snapshot": Object {
                                                            "combineTargetFor": null,
                                                            "combineWith": null,
                                                            "draggingOver": null,
                                                            "dropAnimation": null,
                                                            "isDragging": false,
                                                            "isDropAnimating": false,
                                                            "mode": null,
                                                          },
                                                          "type": "SECONDARY",
                                                        }
                                                      }
                                                      move={[Function]}
                                                      moveByWindowScroll={[Function]}
                                                      moveDown={[Function]}
                                                      moveLeft={[Function]}
                                                      moveRight={[Function]}
                                                      moveUp={[Function]}
                                                      shouldRespectForcePress={false}
                                                    >
                                                      <div
                                                        className="domain-field-row domain-row-border-default"
                                                        data-react-beautiful-dnd-draggable="2"
                                                        onTransitionEnd={null}
                                                        style={
                                                          Object {
                                                            "transform": null,
                                                            "transition": null,
                                                          }
                                                        }
                                                        tabIndex={0}
                                                      >
                                                        <Row
                                                          bsClass="row"
                                                          className="domain-row-container"
                                                          componentClass="div"
                                                          key="domainpropertiesrow-domainrow-1-0"
                                                        >
                                                          <div
                                                            className="domain-row-container row"
                                                          >
                                                            <AdvancedSettings
                                                              defaultValueOptions={Immutable.List []}
                                                              domainFormDisplayOptions={
                                                                Object {
                                                                  "isDragDisabled": false,
                                                                  "phiLevelDisabled": false,
                                                                  "showAddFieldsButton": true,
                                                                  "showRequired": true,
                                                                  "showTextOptions": true,
                                                                  "showValidators": true,
                                                                }
                                                              }
                                                              domainId={null}
                                                              domainIndex={1}
                                                              field={
                                                                Immutable.Record {
                                                                  "conceptURI": undefined,
                                                                  "conditionalFormats": Immutable.List [],
                                                                  "defaultScale": undefined,
                                                                  "defaultValueType": undefined,
                                                                  "defaultValue": undefined,
                                                                  "defaultDisplayValue": undefined,
                                                                  "description": undefined,
                                                                  "dimension": undefined,
                                                                  "excludeFromShifting": false,
                                                                  "format": undefined,
                                                                  "hidden": false,
                                                                  "importAliases": undefined,
                                                                  "label": undefined,
                                                                  "lookupContainer": undefined,
                                                                  "lookupQuery": undefined,
                                                                  "lookupSchema": undefined,
                                                                  "lookupValidator": undefined,
                                                                  "measure": undefined,
                                                                  "mvEnabled": false,
                                                                  "name": "field1",
                                                                  "PHI": undefined,
                                                                  "primaryKey": undefined,
                                                                  "propertyId": undefined,
                                                                  "propertyURI": undefined,
                                                                  "propertyValidators": Immutable.List [],
                                                                  "rangeValidators": Immutable.List [],
                                                                  "rangeURI": "xsd:string",
                                                                  "regexValidators": Immutable.List [],
                                                                  "recommendedVariable": false,
                                                                  "required": false,
                                                                  "scale": undefined,
                                                                  "URL": undefined,
                                                                  "shownInDetailsView": true,
                                                                  "shownInInsertView": true,
                                                                  "shownInUpdateView": true,
                                                                  "visible": true,
                                                                  "dataType": Immutable.Record {
                                                                    "conceptURI": undefined,
                                                                    "display": "Text",
                                                                    "name": "string",
                                                                    "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                                    "alternateRangeURI": "xsd:string",
                                                                    "shortDisplay": "String",
                                                                    "lookupSchema": undefined,
                                                                    "lookupQuery": undefined,
                                                                  },
                                                                  "lookupQueryValue": undefined,
                                                                  "lookupType": Immutable.Record {
                                                                    "conceptURI": undefined,
                                                                    "display": "Lookup",
                                                                    "name": "lookup",
                                                                    "rangeURI": "xsd:string",
                                                                    "alternateRangeURI": undefined,
                                                                    "shortDisplay": undefined,
                                                                    "lookupSchema": undefined,
                                                                    "lookupQuery": undefined,
                                                                  },
                                                                  "original": Object {
                                                                    "conceptURI": undefined,
                                                                    "dataType": Immutable.Record {
                                                                      "conceptURI": undefined,
                                                                      "display": "Text",
                                                                      "name": "string",
                                                                      "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                                      "alternateRangeURI": "xsd:string",
                                                                      "shortDisplay": "String",
                                                                      "lookupSchema": undefined,
                                                                      "lookupQuery": undefined,
                                                                    },
                                                                    "rangeURI": undefined,
                                                                  },
                                                                  "updatedField": false,
                                                                  "isPrimaryKey": false,
                                                                  "lockType": "NotLocked",
                                                                  "wrappedColumnName": undefined,
                                                                }
                                                              }
                                                              helpNoun="field designer"
                                                              index={0}
                                                              label="field1"
                                                              maxPhiLevel="NotPHI"
                                                              onApply={[Function]}
                                                              onHide={[Function]}
                                                              show={false}
                                                              showDefaultValueSettings={false}
                                                              successBsStyle="success"
                                                            >
                                                              <Modal
                                                                animation={true}
                                                                autoFocus={true}
                                                                backdrop={true}
                                                                bsClass="modal"
                                                                dialogComponentClass={[Function]}
                                                                enforceFocus={true}
                                                                keyboard={true}
                                                                manager={
                                                                  ModalManager {
                                                                    "add": [Function],
                                                                    "containers": Array [],
                                                                    "data": Array [],
                                                                    "handleContainerOverflow": true,
                                                                    "hideSiblingNodes": true,
                                                                    "isTopModal": [Function],
                                                                    "modals": Array [],
                                                                    "remove": [Function],
                                                                  }
                                                                }
                                                                onEnter={[Function]}
                                                                onHide={[Function]}
                                                                renderBackdrop={[Function]}
                                                                restoreFocus={true}
                                                                show={false}
                                                              >
                                                                <Modal
                                                                  autoFocus={true}
                                                                  backdrop={true}
                                                                  backdropClassName="modal-backdrop"
                                                                  backdropTransition={[Function]}
                                                                  containerClassName="modal-open"
                                                                  enforceFocus={true}
                                                                  keyboard={true}
                                                                  manager={
                                                                    ModalManager {
                                                                      "add": [Function],
                                                                      "containers": Array [],
                                                                      "data": Array [],
                                                                      "handleContainerOverflow": true,
                                                                      "hideSiblingNodes": true,
                                                                      "isTopModal": [Function],
                                                                      "modals": Array [],
                                                                      "remove": [Function],
                                                                    }
                                                                  }
                                                                  onEnter={[Function]}
                                                                  onEntering={[Function]}
                                                                  onExited={[Function]}
                                                                  onHide={[Function]}
                                                                  renderBackdrop={[Function]}
                                                                  restoreFocus={true}
                                                                  show={false}
                                                                  transition={[Function]}
                                                                />
                                                              </Modal>
                                                            </AdvancedSettings>
                                                            <div
                                                              aria-roledescription="Draggable item. Press space bar to lift"
                                                              className="domain-row-handle"
                                                              data-react-beautiful-dnd-drag-handle="2"
                                                              draggable={false}
                                                              onBlur={[Function]}
                                                              onDragStart={[Function]}
                                                              onFocus={[Function]}
                                                              onKeyDown={[Function]}
                                                              onMouseDown={[Function]}
                                                              onTouchStart={[Function]}
                                                              tabIndex={0}
                                                            >
                                                              <DragDropHandle>
                                                                <FontAwesomeIcon
                                                                  border={false}
                                                                  className=""
                                                                  fixedWidth={false}
                                                                  flip={null}
                                                                  icon={
                                                                    Object {
                                                                      "icon": Array [
                                                                        320,
                                                                        512,
                                                                        Array [],
                                                                        "f58e",
                                                                        "M96 32H32C14.33 32 0 46.33 0 64v64c0 17.67 14.33 32 32 32h64c17.67 0 32-14.33 32-32V64c0-17.67-14.33-32-32-32zm0 160H32c-17.67 0-32 14.33-32 32v64c0 17.67 14.33 32 32 32h64c17.67 0 32-14.33 32-32v-64c0-17.67-14.33-32-32-32zm0 160H32c-17.67 0-32 14.33-32 32v64c0 17.67 14.33 32 32 32h64c17.67 0 32-14.33 32-32v-64c0-17.67-14.33-32-32-32zM288 32h-64c-17.67 0-32 14.33-32 32v64c0 17.67 14.33 32 32 32h64c17.67 0 32-14.33 32-32V64c0-17.67-14.33-32-32-32zm0 160h-64c-17.67 0-32 14.33-32 32v64c0 17.67 14.33 32 32 32h64c17.67 0 32-14.33 32-32v-64c0-17.67-14.33-32-32-32zm0 160h-64c-17.67 0-32 14.33-32 32v64c0 17.67 14.33 32 32 32h64c17.67 0 32-14.33 32-32v-64c0-17.67-14.33-32-32-32z",
                                                                      ],
                                                                      "iconName": "grip-vertical",
                                                                      "prefix": "fas",
                                                                    }
                                                                  }
                                                                  inverse={false}
                                                                  listItem={false}
                                                                  mask={null}
                                                                  pull={null}
                                                                  pulse={false}
                                                                  rotation={null}
                                                                  size="lg"
                                                                  spin={false}
                                                                  symbol={false}
                                                                  title=""
                                                                  transform={null}
                                                                >
                                                                  <svg
                                                                    aria-hidden="true"
                                                                    className="svg-inline--fa fa-grip-vertical fa-w-10 fa-lg "
                                                                    data-icon="grip-vertical"
                                                                    data-prefix="fas"
                                                                    focusable="false"
                                                                    role="img"
                                                                    style={Object {}}
                                                                    viewBox="0 0 320 512"
                                                                    xmlns="http://www.w3.org/2000/svg"
                                                                  >
                                                                    <path
                                                                      d="M96 32H32C14.33 32 0 46.33 0 64v64c0 17.67 14.33 32 32 32h64c17.67 0 32-14.33 32-32V64c0-17.67-14.33-32-32-32zm0 160H32c-17.67 0-32 14.33-32 32v64c0 17.67 14.33 32 32 32h64c17.67 0 32-14.33 32-32v-64c0-17.67-14.33-32-32-32zm0 160H32c-17.67 0-32 14.33-32 32v64c0 17.67 14.33 32 32 32h64c17.67 0 32-14.33 32-32v-64c0-17.67-14.33-32-32-32zM288 32h-64c-17.67 0-32 14.33-32 32v64c0 17.67 14.33 32 32 32h64c17.67 0 32-14.33 32-32V64c0-17.67-14.33-32-32-32zm0 160h-64c-17.67 0-32 14.33-32 32v64c0 17.67 14.33 32 32 32h64c17.67 0 32-14.33 32-32v-64c0-17.67-14.33-32-32-32zm0 160h-64c-17.67 0-32 14.33-32 32v64c0 17.67 14.33 32 32 32h64c17.67 0 32-14.33 32-32v-64c0-17.67-14.33-32-32-32z"
                                                                      fill="currentColor"
                                                                      style={Object {}}
                                                                    />
                                                                  </svg>
                                                                </FontAwesomeIcon>
                                                              </DragDropHandle>
                                                            </div>
                                                            <div
                                                              className="domain-row-main"
                                                            >
                                                              <Col
                                                                bsClass="col"
                                                                className="domain-row-base-fields"
                                                                componentClass="div"
                                                                xs={6}
                                                              >
                                                                <div
                                                                  className="domain-row-base-fields col-xs-6"
                                                                >
                                                                  <div
                                                                    id="domainpropertiesrow-row-1-0"
                                                                  >
                                                                    <Col
                                                                      bsClass="col"
                                                                      componentClass="div"
                                                                      xs={6}
                                                                    >
                                                                      <div
                                                                        className="col-xs-6"
                                                                      >
                                                                        <FormControl
                                                                          bsClass="form-control"
                                                                          componentClass="input"
                                                                          disabled={false}
                                                                          id="domainpropertiesrow-name-1-0"
                                                                          name="domainpropertiesrow-name"
                                                                          onChange={[Function]}
                                                                          type="text"
                                                                          value="field1"
                                                                        >
                                                                          <input
                                                                            className="form-control"
                                                                            disabled={false}
                                                                            id="domainpropertiesrow-name-1-0"
                                                                            name="domainpropertiesrow-name"
                                                                            onChange={[Function]}
                                                                            type="text"
                                                                            value="field1"
                                                                          />
                                                                        </FormControl>
                                                                      </div>
                                                                    </Col>
                                                                    <Col
                                                                      bsClass="col"
                                                                      componentClass="div"
                                                                      xs={4}
                                                                    >
                                                                      <div
                                                                        className="col-xs-4"
                                                                      >
                                                                        <FormControl
                                                                          bsClass="form-control"
                                                                          componentClass="select"
                                                                          disabled={false}
                                                                          id="domainpropertiesrow-type-1-0"
                                                                          name="domainpropertiesrow-type"
                                                                          onChange={[Function]}
                                                                          value="string"
                                                                        >
                                                                          <select
                                                                            className="form-control"
                                                                            disabled={false}
                                                                            id="domainpropertiesrow-type-1-0"
                                                                            name="domainpropertiesrow-type"
                                                                            onChange={[Function]}
                                                                            value="string"
                                                                          >
                                                                            <option
                                                                              key="0"
                                                                              value="string"
                                                                            >
                                                                              Text
                                                                            </option>
                                                                            <option
                                                                              key="1"
                                                                              value="multiLine"
                                                                            >
                                                                              Multi-Line Text
                                                                            </option>
                                                                            <option
                                                                              key="2"
                                                                              value="boolean"
                                                                            >
                                                                              Boolean
                                                                            </option>
                                                                            <option
                                                                              key="3"
                                                                              value="int"
                                                                            >
                                                                              Integer
                                                                            </option>
                                                                            <option
                                                                              key="4"
                                                                              value="double"
                                                                            >
                                                                              Decimal
                                                                            </option>
                                                                            <option
                                                                              key="5"
                                                                              value="dateTime"
                                                                            >
                                                                              Date Time
                                                                            </option>
                                                                            <option
                                                                              key="6"
                                                                              value="users"
                                                                            >
                                                                              User
                                                                            </option>
                                                                            <option
                                                                              key="7"
                                                                              value="sample"
                                                                            >
                                                                              Sample
                                                                            </option>
                                                                          </select>
                                                                        </FormControl>
                                                                      </div>
                                                                    </Col>
                                                                    <Col
                                                                      bsClass="col"
                                                                      componentClass="div"
                                                                      xs={2}
                                                                    >
                                                                      <div
                                                                        className="col-xs-2"
                                                                      >
                                                                        <div
                                                                          className="domain-field-checkbox-container"
                                                                        >
                                                                          <Checkbox
                                                                            bsClass="checkbox"
                                                                            checked={false}
                                                                            className="domain-field-checkbox"
                                                                            disabled={false}
                                                                            id="domainpropertiesrow-required-1-0"
                                                                            inline={false}
                                                                            name="domainpropertiesrow-required"
                                                                            onChange={[Function]}
                                                                            title=""
                                                                          >
                                                                            <div
                                                                              className="domain-field-checkbox checkbox"
                                                                            >
                                                                              <label
                                                                                title=""
                                                                              >
                                                                                <input
                                                                                  checked={false}
                                                                                  disabled={false}
                                                                                  id="domainpropertiesrow-required-1-0"
                                                                                  name="domainpropertiesrow-required"
                                                                                  onChange={[Function]}
                                                                                  type="checkbox"
                                                                                />
                                                                              </label>
                                                                            </div>
                                                                          </Checkbox>
                                                                        </div>
                                                                      </div>
                                                                    </Col>
                                                                  </div>
                                                                </div>
                                                              </Col>
                                                              <Col
                                                                bsClass="col"
                                                                className="field-details-container"
                                                                componentClass="div"
                                                                xs={6}
                                                              >
                                                                <div
                                                                  className="field-details-container col-xs-6"
                                                                >
                                                                  <div
                                                                    className="domain-field-details"
                                                                    id="domainpropertiesrow-details-1-0"
                                                                  >
                                                                    New Field
                                                                  </div>
                                                                  <div
                                                                    className="domain-field-buttons"
                                                                  >
                                                                    <DeleteIcon
                                                                      iconCls="domain-field-delete-icon"
                                                                      id="domainpropertiesrow-delete-1-0"
                                                                      onDelete={[Function]}
                                                                      title="Remove field"
                                                                    >
                                                                      <span
                                                                        className="field-icon"
                                                                        id="domainpropertiesrow-delete-1-0"
                                                                        onClick={[Function]}
                                                                        title="Remove field"
                                                                      >
                                                                        <FontAwesomeIcon
                                                                          border={false}
                                                                          className="domain-field-delete-icon"
                                                                          fixedWidth={false}
                                                                          flip={null}
                                                                          icon={
                                                                            Object {
                                                                              "icon": Array [
                                                                                512,
                                                                                512,
                                                                                Array [],
                                                                                "f057",
                                                                                "M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8zm121.6 313.1c4.7 4.7 4.7 12.3 0 17L338 377.6c-4.7 4.7-12.3 4.7-17 0L256 312l-65.1 65.6c-4.7 4.7-12.3 4.7-17 0L134.4 338c-4.7-4.7-4.7-12.3 0-17l65.6-65-65.6-65.1c-4.7-4.7-4.7-12.3 0-17l39.6-39.6c4.7-4.7 12.3-4.7 17 0l65 65.7 65.1-65.6c4.7-4.7 12.3-4.7 17 0l39.6 39.6c4.7 4.7 4.7 12.3 0 17L312 256l65.6 65.1z",
                                                                              ],
                                                                              "iconName": "times-circle",
                                                                              "prefix": "fas",
                                                                            }
                                                                          }
                                                                          inverse={false}
                                                                          listItem={false}
                                                                          mask={null}
                                                                          pull={null}
                                                                          pulse={false}
                                                                          rotation={null}
                                                                          size={null}
                                                                          spin={false}
                                                                          symbol={false}
                                                                          title=""
                                                                          transform={null}
                                                                        >
                                                                          <svg
                                                                            aria-hidden="true"
                                                                            className="svg-inline--fa fa-times-circle fa-w-16 domain-field-delete-icon"
                                                                            data-icon="times-circle"
                                                                            data-prefix="fas"
                                                                            focusable="false"
                                                                            role="img"
                                                                            style={Object {}}
                                                                            viewBox="0 0 512 512"
                                                                            xmlns="http://www.w3.org/2000/svg"
                                                                          >
                                                                            <path
                                                                              d="M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8zm121.6 313.1c4.7 4.7 4.7 12.3 0 17L338 377.6c-4.7 4.7-12.3 4.7-17 0L256 312l-65.1 65.6c-4.7 4.7-12.3 4.7-17 0L134.4 338c-4.7-4.7-4.7-12.3 0-17l65.6-65-65.6-65.1c-4.7-4.7-4.7-12.3 0-17l39.6-39.6c4.7-4.7 12.3-4.7 17 0l65 65.7 65.1-65.6c4.7-4.7 12.3-4.7 17 0l39.6 39.6c4.7 4.7 4.7 12.3 0 17L312 256l65.6 65.1z"
                                                                              fill="currentColor"
                                                                              style={Object {}}
                                                                            />
                                                                          </svg>
                                                                        </FontAwesomeIcon>
                                                                      </span>
                                                                    </DeleteIcon>
                                                                    <FieldExpansionToggle
                                                                      cls="domain-field-expand-icon"
                                                                      collapsedTitle="Show additional field properties"
                                                                      expanded={false}
                                                                      expandedTitle="Hide additional field properties"
                                                                      id="domainpropertiesrow-expand-1-0"
                                                                      onClick={[Function]}
                                                                    >
                                                                      <div
                                                                        className="field-icon domain-field-expand-icon"
                                                                        id="domainpropertiesrow-expand-1-0"
                                                                        onClick={[Function]}
                                                                        title="Show additional field properties"
                                                                      >
                                                                        <FontAwesomeIcon
                                                                          border={false}
                                                                          className=""
                                                                          fixedWidth={false}
                                                                          flip={null}
                                                                          icon={
                                                                            Object {
                                                                              "icon": Array [
                                                                                448,
                                                                                512,
                                                                                Array [],
                                                                                "f0fe",
                                                                                "M400 32H48C21.5 32 0 53.5 0 80v352c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V80c0-26.5-21.5-48-48-48zm-32 252c0 6.6-5.4 12-12 12h-92v92c0 6.6-5.4 12-12 12h-56c-6.6 0-12-5.4-12-12v-92H92c-6.6 0-12-5.4-12-12v-56c0-6.6 5.4-12 12-12h92v-92c0-6.6 5.4-12 12-12h56c6.6 0 12 5.4 12 12v92h92c6.6 0 12 5.4 12 12v56z",
                                                                              ],
                                                                              "iconName": "plus-square",
                                                                              "prefix": "fas",
                                                                            }
                                                                          }
                                                                          inverse={false}
                                                                          listItem={false}
                                                                          mask={null}
                                                                          pull={null}
                                                                          pulse={false}
                                                                          rotation={null}
                                                                          size="lg"
                                                                          spin={false}
                                                                          symbol={false}
                                                                          title=""
                                                                          transform={null}
                                                                        >
                                                                          <svg
                                                                            aria-hidden="true"
                                                                            className="svg-inline--fa fa-plus-square fa-w-14 fa-lg "
                                                                            data-icon="plus-square"
                                                                            data-prefix="fas"
                                                                            focusable="false"
                                                                            role="img"
                                                                            style={Object {}}
                                                                            viewBox="0 0 448 512"
                                                                            xmlns="http://www.w3.org/2000/svg"
                                                                          >
                                                                            <path
                                                                              d="M400 32H48C21.5 32 0 53.5 0 80v352c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V80c0-26.5-21.5-48-48-48zm-32 252c0 6.6-5.4 12-12 12h-92v92c0 6.6-5.4 12-12 12h-56c-6.6 0-12-5.4-12-12v-92H92c-6.6 0-12-5.4-12-12v-56c0-6.6 5.4-12 12-12h92v-92c0-6.6 5.4-12 12-12h56c6.6 0 12 5.4 12 12v92h92c6.6 0 12 5.4 12 12v56z"
                                                                              fill="currentColor"
                                                                              style={Object {}}
                                                                            />
                                                                          </svg>
                                                                        </FontAwesomeIcon>
                                                                      </div>
                                                                    </FieldExpansionToggle>
                                                                  </div>
                                                                </div>
                                                              </Col>
                                                            </div>
                                                          </div>
                                                        </Row>
                                                        <Collapse
                                                          appear={false}
                                                          dimension="height"
                                                          getDimensionValue={[Function]}
                                                          in={false}
                                                          mountOnEnter={false}
                                                          onExited={[Function]}
                                                          onExiting={[Function]}
                                                          timeout={300}
                                                          unmountOnExit={false}
                                                        >
                                                          <Transition
                                                            appear={false}
                                                            aria-expanded={null}
                                                            enter={true}
                                                            exit={true}
                                                            in={false}
                                                            mountOnEnter={false}
                                                            onEnter={[Function]}
                                                            onEntered={[Function]}
                                                            onEntering={[Function]}
                                                            onExit={[Function]}
                                                            onExited={[Function]}
                                                            onExiting={[Function]}
                                                            timeout={300}
                                                            unmountOnExit={false}
                                                          >
                                                            <div
                                                              aria-expanded={null}
                                                              className="collapse"
                                                            >
                                                              <DomainRowExpandedOptions
                                                                appPropertiesOnly={true}
                                                                domainFormDisplayOptions={
                                                                  Object {
                                                                    "isDragDisabled": false,
                                                                    "phiLevelDisabled": false,
                                                                    "showAddFieldsButton": true,
                                                                    "showRequired": true,
                                                                    "showTextOptions": true,
                                                                    "showValidators": true,
                                                                  }
                                                                }
                                                                domainIndex={1}
                                                                field={
                                                                  Immutable.Record {
                                                                    "conceptURI": undefined,
                                                                    "conditionalFormats": Immutable.List [],
                                                                    "defaultScale": undefined,
                                                                    "defaultValueType": undefined,
                                                                    "defaultValue": undefined,
                                                                    "defaultDisplayValue": undefined,
                                                                    "description": undefined,
                                                                    "dimension": undefined,
                                                                    "excludeFromShifting": false,
                                                                    "format": undefined,
                                                                    "hidden": false,
                                                                    "importAliases": undefined,
                                                                    "label": undefined,
                                                                    "lookupContainer": undefined,
                                                                    "lookupQuery": undefined,
                                                                    "lookupSchema": undefined,
                                                                    "lookupValidator": undefined,
                                                                    "measure": undefined,
                                                                    "mvEnabled": false,
                                                                    "name": "field1",
                                                                    "PHI": undefined,
                                                                    "primaryKey": undefined,
                                                                    "propertyId": undefined,
                                                                    "propertyURI": undefined,
                                                                    "propertyValidators": Immutable.List [],
                                                                    "rangeValidators": Immutable.List [],
                                                                    "rangeURI": "xsd:string",
                                                                    "regexValidators": Immutable.List [],
                                                                    "recommendedVariable": false,
                                                                    "required": false,
                                                                    "scale": undefined,
                                                                    "URL": undefined,
                                                                    "shownInDetailsView": true,
                                                                    "shownInInsertView": true,
                                                                    "shownInUpdateView": true,
                                                                    "visible": true,
                                                                    "dataType": Immutable.Record {
                                                                      "conceptURI": undefined,
                                                                      "display": "Text",
                                                                      "name": "string",
                                                                      "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                                      "alternateRangeURI": "xsd:string",
                                                                      "shortDisplay": "String",
                                                                      "lookupSchema": undefined,
                                                                      "lookupQuery": undefined,
                                                                    },
                                                                    "lookupQueryValue": undefined,
                                                                    "lookupType": Immutable.Record {
                                                                      "conceptURI": undefined,
                                                                      "display": "Lookup",
                                                                      "name": "lookup",
                                                                      "rangeURI": "xsd:string",
                                                                      "alternateRangeURI": undefined,
                                                                      "shortDisplay": undefined,
                                                                      "lookupSchema": undefined,
                                                                      "lookupQuery": undefined,
                                                                    },
                                                                    "original": Object {
                                                                      "conceptURI": undefined,
                                                                      "dataType": Immutable.Record {
                                                                        "conceptURI": undefined,
                                                                        "display": "Text",
                                                                        "name": "string",
                                                                        "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                                        "alternateRangeURI": "xsd:string",
                                                                        "shortDisplay": "String",
                                                                        "lookupSchema": undefined,
                                                                        "lookupQuery": undefined,
                                                                      },
                                                                      "rangeURI": undefined,
                                                                    },
                                                                    "updatedField": false,
                                                                    "isPrimaryKey": false,
                                                                    "lockType": "NotLocked",
                                                                    "wrappedColumnName": undefined,
                                                                  }
                                                                }
                                                                index={0}
                                                                onChange={[Function]}
                                                                onMultiChange={[Function]}
                                                                showingModal={[Function]}
                                                                successBsStyle="success"
                                                              >
                                                                <div
                                                                  className="domain-row-container"
                                                                >
                                                                  <div
                                                                    className="domain-row-handle"
                                                                  />
                                                                  <div
                                                                    className="domain-row-container-expanded"
                                                                  >
                                                                    <Col
                                                                      bsClass="col"
                                                                      componentClass="div"
                                                                      xs={12}
                                                                    >
                                                                      <div
                                                                        className="col-xs-12"
                                                                      >
                                                                        <TextFieldOptions
                                                                          domainIndex={1}
                                                                          index={0}
                                                                          label="Text Options"
                                                                          lockType="NotLocked"
                                                                          onChange={[Function]}
                                                                        >
                                                                          <div>
                                                                            <Row
                                                                              bsClass="row"
                                                                              className="domain-row-expanded"
                                                                              componentClass="div"
                                                                            >
                                                                              <div
                                                                                className="domain-row-expanded row"
                                                                              >
                                                                                <Col
                                                                                  bsClass="col"
                                                                                  componentClass="div"
                                                                                  xs={12}
                                                                                >
                                                                                  <div
                                                                                    className="col-xs-12"
                                                                                  >
                                                                                    <div
                                                                                      className="domain-field-section-heading"
                                                                                    >
                                                                                      Text Options
                                                                                    </div>
                                                                                  </div>
                                                                                </Col>
                                                                              </div>
                                                                            </Row>
                                                                            <Row
                                                                              bsClass="row"
                                                                              className="domain-row-expanded "
                                                                              componentClass="div"
                                                                            >
                                                                              <div
                                                                                className="domain-row-expanded  row"
                                                                              >
                                                                                <Col
                                                                                  bsClass="col"
                                                                                  componentClass="div"
                                                                                  xs={12}
                                                                                >
                                                                                  <div
                                                                                    className="col-xs-12"
                                                                                  >
                                                                                    <div
                                                                                      className="domain-field-label"
                                                                                    >
                                                                                      Maximum Text Length
                                                                                      <LabelHelpTip
                                                                                        body={[Function]}
                                                                                        customStyle={Object {}}
                                                                                        id="tooltip"
                                                                                        size="1x"
                                                                                        title="Max Text Length"
                                                                                      >
                                                                                        <span
                                                                                          className="label-help-target"
                                                                                          onMouseOut={[Function]}
                                                                                          onMouseOver={[Function]}
                                                                                        >
                                                                                          <FontAwesomeIcon
                                                                                            border={false}
                                                                                            className="label-help-icon"
                                                                                            fixedWidth={false}
                                                                                            flip={null}
                                                                                            icon={
                                                                                              Object {
                                                                                                "icon": Array [
                                                                                                  512,
                                                                                                  512,
                                                                                                  Array [],
                                                                                                  "f059",
                                                                                                  "M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z",
                                                                                                ],
                                                                                                "iconName": "question-circle",
                                                                                                "prefix": "fas",
                                                                                              }
                                                                                            }
                                                                                            inverse={false}
                                                                                            listItem={false}
                                                                                            mask={null}
                                                                                            pull={null}
                                                                                            pulse={false}
                                                                                            rotation={null}
                                                                                            size="1x"
                                                                                            spin={false}
                                                                                            style={Object {}}
                                                                                            symbol={false}
                                                                                            title=""
                                                                                            transform={null}
                                                                                          >
                                                                                            <svg
                                                                                              aria-hidden="true"
                                                                                              className="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                                                                                              data-icon="question-circle"
                                                                                              data-prefix="fas"
                                                                                              focusable="false"
                                                                                              role="img"
                                                                                              style={Object {}}
                                                                                              viewBox="0 0 512 512"
                                                                                              xmlns="http://www.w3.org/2000/svg"
                                                                                            >
                                                                                              <path
                                                                                                d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                                                                fill="currentColor"
                                                                                                style={Object {}}
                                                                                              />
                                                                                            </svg>
                                                                                          </FontAwesomeIcon>
                                                                                          <Overlay
                                                                                            animation={[Function]}
                                                                                            placement="right"
                                                                                            rootClose={false}
                                                                                            show={false}
                                                                                            target={
                                                                                              <span
                                                                                                class="label-help-target"
                                                                                              >
                                                                                                <svg
                                                                                                  aria-hidden="true"
                                                                                                  class="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                                                                                                  data-icon="question-circle"
                                                                                                  data-prefix="fas"
                                                                                                  focusable="false"
                                                                                                  role="img"
                                                                                                  viewBox="0 0 512 512"
                                                                                                  xmlns="http://www.w3.org/2000/svg"
                                                                                                >
                                                                                                  <path
                                                                                                    d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                                                                    fill="currentColor"
                                                                                                  />
                                                                                                </svg>
                                                                                              </span>
                                                                                            }
                                                                                          >
                                                                                            <Overlay
                                                                                              placement="right"
                                                                                              rootClose={false}
                                                                                              show={false}
                                                                                              target={
                                                                                                <span
                                                                                                  class="label-help-target"
                                                                                                >
                                                                                                  <svg
                                                                                                    aria-hidden="true"
                                                                                                    class="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                                                                                                    data-icon="question-circle"
                                                                                                    data-prefix="fas"
                                                                                                    focusable="false"
                                                                                                    role="img"
                                                                                                    viewBox="0 0 512 512"
                                                                                                    xmlns="http://www.w3.org/2000/svg"
                                                                                                  >
                                                                                                    <path
                                                                                                      d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                                                                      fill="currentColor"
                                                                                                    />
                                                                                                  </svg>
                                                                                                </span>
                                                                                              }
                                                                                              transition={[Function]}
                                                                                            />
                                                                                          </Overlay>
                                                                                        </span>
                                                                                      </LabelHelpTip>
                                                                                    </div>
                                                                                  </div>
                                                                                </Col>
                                                                              </div>
                                                                            </Row>
                                                                            <Row
                                                                              bsClass="row"
                                                                              className="domain-row-expanded"
                                                                              componentClass="div"
                                                                            >
                                                                              <div
                                                                                className="domain-row-expanded row"
                                                                              >
                                                                                <Col
                                                                                  bsClass="col"
                                                                                  className="domain-text-options-col"
                                                                                  componentClass="div"
                                                                                  xs={12}
                                                                                >
                                                                                  <div
                                                                                    className="domain-text-options-col col-xs-12"
                                                                                  >
                                                                                    <FormControl
                                                                                      bsClass="form-control"
                                                                                      checked={true}
                                                                                      className="domain-text-options-radio1 domain-field-float-left"
                                                                                      componentClass="input"
                                                                                      disabled={false}
                                                                                      id="domainpropertiesrow-maxLength-1-0"
                                                                                      onChange={[Function]}
                                                                                      type="radio"
                                                                                      value="maxLength"
                                                                                    >
                                                                                      <input
                                                                                        checked={true}
                                                                                        className="domain-text-options-radio1 domain-field-float-left form-control"
                                                                                        disabled={false}
                                                                                        id="domainpropertiesrow-maxLength-1-0"
                                                                                        onChange={[Function]}
                                                                                        type="radio"
                                                                                        value="maxLength"
                                                                                      />
                                                                                    </FormControl>
                                                                                    <div
                                                                                      className=""
                                                                                    >
                                                                                      Unlimited
                                                                                    </div>
                                                                                  </div>
                                                                                </Col>
                                                                              </div>
                                                                            </Row>
                                                                            <Row
                                                                              bsClass="row"
                                                                              className="domain-row-expanded"
                                                                              componentClass="div"
                                                                            >
                                                                              <div
                                                                                className="domain-row-expanded row"
                                                                              >
                                                                                <Col
                                                                                  bsClass="col"
                                                                                  componentClass="div"
                                                                                  xs={12}
                                                                                >
                                                                                  <div
                                                                                    className="col-xs-12"
                                                                                  >
                                                                                    <FormControl
                                                                                      bsClass="form-control"
                                                                                      checked={false}
                                                                                      className="domain-text-options-radio2 domain-field-float-left"
                                                                                      componentClass="input"
                                                                                      id="domainpropertiesrow-customLength-1-0"
                                                                                      onChange={[Function]}
                                                                                      type="radio"
                                                                                      value="customLength"
                                                                                    >
                                                                                      <input
                                                                                        checked={false}
                                                                                        className="domain-text-options-radio2 domain-field-float-left form-control"
                                                                                        id="domainpropertiesrow-customLength-1-0"
                                                                                        onChange={[Function]}
                                                                                        type="radio"
                                                                                        value="customLength"
                                                                                      />
                                                                                    </FormControl>
                                                                                    <span
                                                                                      className="domain-text-options-length domain-field-float-left domain-text-label"
                                                                                    >
                                                                                      No longer than X characters
                                                                                    </span>
                                                                                    <FormControl
                                                                                      bsClass="form-control"
                                                                                      className="domain-text-length-field"
                                                                                      componentClass="input"
                                                                                      disabled={true}
                                                                                      id="domainpropertiesrow-scale-1-0"
                                                                                      name="domainpropertiesrow-scale"
                                                                                      onChange={[Function]}
                                                                                      type="number"
                                                                                      value={4000}
                                                                                    >
                                                                                      <input
                                                                                        className="domain-text-length-field form-control"
                                                                                        disabled={true}
                                                                                        id="domainpropertiesrow-scale-1-0"
                                                                                        name="domainpropertiesrow-scale"
                                                                                        onChange={[Function]}
                                                                                        type="number"
                                                                                        value={4000}
                                                                                      />
                                                                                    </FormControl>
                                                                                  </div>
                                                                                </Col>
                                                                              </div>
                                                                            </Row>
                                                                          </div>
                                                                        </TextFieldOptions>
                                                                      </div>
                                                                    </Col>
                                                                    <Col
                                                                      bsClass="col"
                                                                      componentClass="div"
                                                                      lg={10}
                                                                      xs={12}
                                                                    >
                                                                      <div
                                                                        className="col-lg-10 col-xs-12"
                                                                      >
                                                                        <NameAndLinkingOptions
                                                                          domainIndex={1}
                                                                          field={
                                                                            Immutable.Record {
                                                                              "conceptURI": undefined,
                                                                              "conditionalFormats": Immutable.List [],
                                                                              "defaultScale": undefined,
                                                                              "defaultValueType": undefined,
                                                                              "defaultValue": undefined,
                                                                              "defaultDisplayValue": undefined,
                                                                              "description": undefined,
                                                                              "dimension": undefined,
                                                                              "excludeFromShifting": false,
                                                                              "format": undefined,
                                                                              "hidden": false,
                                                                              "importAliases": undefined,
                                                                              "label": undefined,
                                                                              "lookupContainer": undefined,
                                                                              "lookupQuery": undefined,
                                                                              "lookupSchema": undefined,
                                                                              "lookupValidator": undefined,
                                                                              "measure": undefined,
                                                                              "mvEnabled": false,
                                                                              "name": "field1",
                                                                              "PHI": undefined,
                                                                              "primaryKey": undefined,
                                                                              "propertyId": undefined,
                                                                              "propertyURI": undefined,
                                                                              "propertyValidators": Immutable.List [],
                                                                              "rangeValidators": Immutable.List [],
                                                                              "rangeURI": "xsd:string",
                                                                              "regexValidators": Immutable.List [],
                                                                              "recommendedVariable": false,
                                                                              "required": false,
                                                                              "scale": undefined,
                                                                              "URL": undefined,
                                                                              "shownInDetailsView": true,
                                                                              "shownInInsertView": true,
                                                                              "shownInUpdateView": true,
                                                                              "visible": true,
                                                                              "dataType": Immutable.Record {
                                                                                "conceptURI": undefined,
                                                                                "display": "Text",
                                                                                "name": "string",
                                                                                "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                                                "alternateRangeURI": "xsd:string",
                                                                                "shortDisplay": "String",
                                                                                "lookupSchema": undefined,
                                                                                "lookupQuery": undefined,
                                                                              },
                                                                              "lookupQueryValue": undefined,
                                                                              "lookupType": Immutable.Record {
                                                                                "conceptURI": undefined,
                                                                                "display": "Lookup",
                                                                                "name": "lookup",
                                                                                "rangeURI": "xsd:string",
                                                                                "alternateRangeURI": undefined,
                                                                                "shortDisplay": undefined,
                                                                                "lookupSchema": undefined,
                                                                                "lookupQuery": undefined,
                                                                              },
                                                                              "original": Object {
                                                                                "conceptURI": undefined,
                                                                                "dataType": Immutable.Record {
                                                                                  "conceptURI": undefined,
                                                                                  "display": "Text",
                                                                                  "name": "string",
                                                                                  "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                                                  "alternateRangeURI": "xsd:string",
                                                                                  "shortDisplay": "String",
                                                                                  "lookupSchema": undefined,
                                                                                  "lookupQuery": undefined,
                                                                                },
                                                                                "rangeURI": undefined,
                                                                              },
                                                                              "updatedField": false,
                                                                              "isPrimaryKey": false,
                                                                              "lockType": "NotLocked",
                                                                              "wrappedColumnName": undefined,
                                                                            }
                                                                          }
                                                                          index={0}
                                                                          onChange={[Function]}
                                                                        >
                                                                          <div>
                                                                            <Row
                                                                              bsClass="row"
                                                                              className="domain-row-expanded"
                                                                              componentClass="div"
                                                                            >
                                                                              <div
                                                                                className="domain-row-expanded row"
                                                                              >
                                                                                <Col
                                                                                  bsClass="col"
                                                                                  componentClass="div"
                                                                                  xs={12}
                                                                                >
                                                                                  <div
                                                                                    className="col-xs-12"
                                                                                  >
                                                                                    <div
                                                                                      className="domain-field-section-heading domain-field-section-hdr"
                                                                                    >
                                                                                      Name and Linking Options
                                                                                    </div>
                                                                                  </div>
                                                                                </Col>
                                                                              </div>
                                                                            </Row>
                                                                            <Row
                                                                              bsClass="row"
                                                                              className="domain-row-expanded"
                                                                              componentClass="div"
                                                                            >
                                                                              <div
                                                                                className="domain-row-expanded row"
                                                                              >
                                                                                <div>
                                                                                  <Col
                                                                                    bsClass="col"
                                                                                    componentClass="div"
                                                                                    xs={5}
                                                                                  >
                                                                                    <div
                                                                                      className="col-xs-5"
                                                                                    >
                                                                                      <div
                                                                                        className="domain-field-label"
                                                                                      >
                                                                                        Description
                                                                                      </div>
                                                                                      <FormControl
                                                                                        bsClass="form-control"
                                                                                        className="form-control textarea-noresize"
                                                                                        componentClass="textarea"
                                                                                        disabled={false}
                                                                                        id="domainpropertiesrow-description-1-0"
                                                                                        name="domainpropertiesrow-description"
                                                                                        onChange={[Function]}
                                                                                        rows={4}
                                                                                        value=""
                                                                                      >
                                                                                        <textarea
                                                                                          className="form-control textarea-noresize form-control"
                                                                                          disabled={false}
                                                                                          id="domainpropertiesrow-description-1-0"
                                                                                          name="domainpropertiesrow-description"
                                                                                          onChange={[Function]}
                                                                                          rows={4}
                                                                                          value=""
                                                                                        />
                                                                                      </FormControl>
                                                                                    </div>
                                                                                  </Col>
                                                                                  <Col
                                                                                    bsClass="col"
                                                                                    componentClass="div"
                                                                                    xs={3}
                                                                                  >
                                                                                    <div
                                                                                      className="col-xs-3"
                                                                                    >
                                                                                      <div
                                                                                        className="domain-field-label"
                                                                                      >
                                                                                        Label
                                                                                      </div>
                                                                                      <FormControl
                                                                                        bsClass="form-control"
                                                                                        componentClass="input"
                                                                                        disabled={false}
                                                                                        id="domainpropertiesrow-label-1-0"
                                                                                        name="domainpropertiesrow-label"
                                                                                        onChange={[Function]}
                                                                                        type="text"
                                                                                        value=""
                                                                                      >
                                                                                        <input
                                                                                          className="form-control"
                                                                                          disabled={false}
                                                                                          id="domainpropertiesrow-label-1-0"
                                                                                          name="domainpropertiesrow-label"
                                                                                          onChange={[Function]}
                                                                                          type="text"
                                                                                          value=""
                                                                                        />
                                                                                      </FormControl>
                                                                                      <div
                                                                                        className="domain-field-label"
                                                                                      >
                                                                                        Import Aliases
                                                                                        <LabelHelpTip
                                                                                          body={[Function]}
                                                                                          customStyle={Object {}}
                                                                                          id="tooltip"
                                                                                          size="1x"
                                                                                          title="Import Aliases"
                                                                                        >
                                                                                          <span
                                                                                            className="label-help-target"
                                                                                            onMouseOut={[Function]}
                                                                                            onMouseOver={[Function]}
                                                                                          >
                                                                                            <FontAwesomeIcon
                                                                                              border={false}
                                                                                              className="label-help-icon"
                                                                                              fixedWidth={false}
                                                                                              flip={null}
                                                                                              icon={
                                                                                                Object {
                                                                                                  "icon": Array [
                                                                                                    512,
                                                                                                    512,
                                                                                                    Array [],
                                                                                                    "f059",
                                                                                                    "M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z",
                                                                                                  ],
                                                                                                  "iconName": "question-circle",
                                                                                                  "prefix": "fas",
                                                                                                }
                                                                                              }
                                                                                              inverse={false}
                                                                                              listItem={false}
                                                                                              mask={null}
                                                                                              pull={null}
                                                                                              pulse={false}
                                                                                              rotation={null}
                                                                                              size="1x"
                                                                                              spin={false}
                                                                                              style={Object {}}
                                                                                              symbol={false}
                                                                                              title=""
                                                                                              transform={null}
                                                                                            >
                                                                                              <svg
                                                                                                aria-hidden="true"
                                                                                                className="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                                                                                                data-icon="question-circle"
                                                                                                data-prefix="fas"
                                                                                                focusable="false"
                                                                                                role="img"
                                                                                                style={Object {}}
                                                                                                viewBox="0 0 512 512"
                                                                                                xmlns="http://www.w3.org/2000/svg"
                                                                                              >
                                                                                                <path
                                                                                                  d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                                                                  fill="currentColor"
                                                                                                  style={Object {}}
                                                                                                />
                                                                                              </svg>
                                                                                            </FontAwesomeIcon>
                                                                                            <Overlay
                                                                                              animation={[Function]}
                                                                                              placement="right"
                                                                                              rootClose={false}
                                                                                              show={false}
                                                                                              target={
                                                                                                <span
                                                                                                  class="label-help-target"
                                                                                                >
                                                                                                  <svg
                                                                                                    aria-hidden="true"
                                                                                                    class="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                                                                                                    data-icon="question-circle"
                                                                                                    data-prefix="fas"
                                                                                                    focusable="false"
                                                                                                    role="img"
                                                                                                    viewBox="0 0 512 512"
                                                                                                    xmlns="http://www.w3.org/2000/svg"
                                                                                                  >
                                                                                                    <path
                                                                                                      d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                                                                      fill="currentColor"
                                                                                                    />
                                                                                                  </svg>
                                                                                                </span>
                                                                                              }
                                                                                            >
                                                                                              <Overlay
                                                                                                placement="right"
                                                                                                rootClose={false}
                                                                                                show={false}
                                                                                                target={
                                                                                                  <span
                                                                                                    class="label-help-target"
                                                                                                  >
                                                                                                    <svg
                                                                                                      aria-hidden="true"
                                                                                                      class="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                                                                                                      data-icon="question-circle"
                                                                                                      data-prefix="fas"
                                                                                                      focusable="false"
                                                                                                      role="img"
                                                                                                      viewBox="0 0 512 512"
                                                                                                      xmlns="http://www.w3.org/2000/svg"
                                                                                                    >
                                                                                                      <path
                                                                                                        d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                                                                        fill="currentColor"
                                                                                                      />
                                                                                                    </svg>
                                                                                                  </span>
                                                                                                }
                                                                                                transition={[Function]}
                                                                                              />
                                                                                            </Overlay>
                                                                                          </span>
                                                                                        </LabelHelpTip>
                                                                                      </div>
                                                                                      <FormControl
                                                                                        bsClass="form-control"
                                                                                        componentClass="input"
                                                                                        disabled={false}
                                                                                        id="domainpropertiesrow-importAliases-1-0"
                                                                                        name="domainpropertiesrow-importAliases"
                                                                                        onChange={[Function]}
                                                                                        type="text"
                                                                                        value=""
                                                                                      >
                                                                                        <input
                                                                                          className="form-control"
                                                                                          disabled={false}
                                                                                          id="domainpropertiesrow-importAliases-1-0"
                                                                                          name="domainpropertiesrow-importAliases"
                                                                                          onChange={[Function]}
                                                                                          type="text"
                                                                                          value=""
                                                                                        />
                                                                                      </FormControl>
                                                                                    </div>
                                                                                  </Col>
                                                                                  <Col
                                                                                    bsClass="col"
                                                                                    componentClass="div"
                                                                                    xs={4}
                                                                                  >
                                                                                    <div
                                                                                      className="col-xs-4"
                                                                                    >
                                                                                      <div
                                                                                        className="domain-field-label"
                                                                                      >
                                                                                        URL
                                                                                        <LabelHelpTip
                                                                                          body={[Function]}
                                                                                          customStyle={Object {}}
                                                                                          id="tooltip"
                                                                                          size="1x"
                                                                                          title="URL"
                                                                                        >
                                                                                          <span
                                                                                            className="label-help-target"
                                                                                            onMouseOut={[Function]}
                                                                                            onMouseOver={[Function]}
                                                                                          >
                                                                                            <FontAwesomeIcon
                                                                                              border={false}
                                                                                              className="label-help-icon"
                                                                                              fixedWidth={false}
                                                                                              flip={null}
                                                                                              icon={
                                                                                                Object {
                                                                                                  "icon": Array [
                                                                                                    512,
                                                                                                    512,
                                                                                                    Array [],
                                                                                                    "f059",
                                                                                                    "M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z",
                                                                                                  ],
                                                                                                  "iconName": "question-circle",
                                                                                                  "prefix": "fas",
                                                                                                }
                                                                                              }
                                                                                              inverse={false}
                                                                                              listItem={false}
                                                                                              mask={null}
                                                                                              pull={null}
                                                                                              pulse={false}
                                                                                              rotation={null}
                                                                                              size="1x"
                                                                                              spin={false}
                                                                                              style={Object {}}
                                                                                              symbol={false}
                                                                                              title=""
                                                                                              transform={null}
                                                                                            >
                                                                                              <svg
                                                                                                aria-hidden="true"
                                                                                                className="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                                                                                                data-icon="question-circle"
                                                                                                data-prefix="fas"
                                                                                                focusable="false"
                                                                                                role="img"
                                                                                                style={Object {}}
                                                                                                viewBox="0 0 512 512"
                                                                                                xmlns="http://www.w3.org/2000/svg"
                                                                                              >
                                                                                                <path
                                                                                                  d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                                                                  fill="currentColor"
                                                                                                  style={Object {}}
                                                                                                />
                                                                                              </svg>
                                                                                            </FontAwesomeIcon>
                                                                                            <Overlay
                                                                                              animation={[Function]}
                                                                                              placement="right"
                                                                                              rootClose={false}
                                                                                              show={false}
                                                                                              target={
                                                                                                <span
                                                                                                  class="label-help-target"
                                                                                                >
                                                                                                  <svg
                                                                                                    aria-hidden="true"
                                                                                                    class="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                                                                                                    data-icon="question-circle"
                                                                                                    data-prefix="fas"
                                                                                                    focusable="false"
                                                                                                    role="img"
                                                                                                    viewBox="0 0 512 512"
                                                                                                    xmlns="http://www.w3.org/2000/svg"
                                                                                                  >
                                                                                                    <path
                                                                                                      d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                                                                      fill="currentColor"
                                                                                                    />
                                                                                                  </svg>
                                                                                                </span>
                                                                                              }
                                                                                            >
                                                                                              <Overlay
                                                                                                placement="right"
                                                                                                rootClose={false}
                                                                                                show={false}
                                                                                                target={
                                                                                                  <span
                                                                                                    class="label-help-target"
                                                                                                  >
                                                                                                    <svg
                                                                                                      aria-hidden="true"
                                                                                                      class="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                                                                                                      data-icon="question-circle"
                                                                                                      data-prefix="fas"
                                                                                                      focusable="false"
                                                                                                      role="img"
                                                                                                      viewBox="0 0 512 512"
                                                                                                      xmlns="http://www.w3.org/2000/svg"
                                                                                                    >
                                                                                                      <path
                                                                                                        d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                                                                        fill="currentColor"
                                                                                                      />
                                                                                                    </svg>
                                                                                                  </span>
                                                                                                }
                                                                                                transition={[Function]}
                                                                                              />
                                                                                            </Overlay>
                                                                                          </span>
                                                                                        </LabelHelpTip>
                                                                                      </div>
                                                                                      <FormControl
                                                                                        bsClass="form-control"
                                                                                        componentClass="input"
                                                                                        disabled={false}
                                                                                        id="domainpropertiesrow-URL-1-0"
                                                                                        name="domainpropertiesrow-URL"
                                                                                        onChange={[Function]}
                                                                                        type="text"
                                                                                        value=""
                                                                                      >
                                                                                        <input
                                                                                          className="form-control"
                                                                                          disabled={false}
                                                                                          id="domainpropertiesrow-URL-1-0"
                                                                                          name="domainpropertiesrow-URL"
                                                                                          onChange={[Function]}
                                                                                          type="text"
                                                                                          value=""
                                                                                        />
                                                                                      </FormControl>
                                                                                    </div>
                                                                                  </Col>
                                                                                </div>
                                                                              </div>
                                                                            </Row>
                                                                          </div>
                                                                        </NameAndLinkingOptions>
                                                                      </div>
                                                                    </Col>
                                                                    <Col
                                                                      bsClass="col"
                                                                      componentClass="div"
                                                                      xs={12}
                                                                    >
                                                                      <div
                                                                        className="col-xs-12"
                                                                      >
                                                                        <ConditionalFormattingAndValidation
                                                                          domainFormDisplayOptions={
                                                                            Object {
                                                                              "isDragDisabled": false,
                                                                              "phiLevelDisabled": false,
                                                                              "showAddFieldsButton": true,
                                                                              "showRequired": true,
                                                                              "showTextOptions": true,
                                                                              "showValidators": true,
                                                                            }
                                                                          }
                                                                          domainIndex={1}
                                                                          field={
                                                                            Immutable.Record {
                                                                              "conceptURI": undefined,
                                                                              "conditionalFormats": Immutable.List [],
                                                                              "defaultScale": undefined,
                                                                              "defaultValueType": undefined,
                                                                              "defaultValue": undefined,
                                                                              "defaultDisplayValue": undefined,
                                                                              "description": undefined,
                                                                              "dimension": undefined,
                                                                              "excludeFromShifting": false,
                                                                              "format": undefined,
                                                                              "hidden": false,
                                                                              "importAliases": undefined,
                                                                              "label": undefined,
                                                                              "lookupContainer": undefined,
                                                                              "lookupQuery": undefined,
                                                                              "lookupSchema": undefined,
                                                                              "lookupValidator": undefined,
                                                                              "measure": undefined,
                                                                              "mvEnabled": false,
                                                                              "name": "field1",
                                                                              "PHI": undefined,
                                                                              "primaryKey": undefined,
                                                                              "propertyId": undefined,
                                                                              "propertyURI": undefined,
                                                                              "propertyValidators": Immutable.List [],
                                                                              "rangeValidators": Immutable.List [],
                                                                              "rangeURI": "xsd:string",
                                                                              "regexValidators": Immutable.List [],
                                                                              "recommendedVariable": false,
                                                                              "required": false,
                                                                              "scale": undefined,
                                                                              "URL": undefined,
                                                                              "shownInDetailsView": true,
                                                                              "shownInInsertView": true,
                                                                              "shownInUpdateView": true,
                                                                              "visible": true,
                                                                              "dataType": Immutable.Record {
                                                                                "conceptURI": undefined,
                                                                                "display": "Text",
                                                                                "name": "string",
                                                                                "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                                                "alternateRangeURI": "xsd:string",
                                                                                "shortDisplay": "String",
                                                                                "lookupSchema": undefined,
                                                                                "lookupQuery": undefined,
                                                                              },
                                                                              "lookupQueryValue": undefined,
                                                                              "lookupType": Immutable.Record {
                                                                                "conceptURI": undefined,
                                                                                "display": "Lookup",
                                                                                "name": "lookup",
                                                                                "rangeURI": "xsd:string",
                                                                                "alternateRangeURI": undefined,
                                                                                "shortDisplay": undefined,
                                                                                "lookupSchema": undefined,
                                                                                "lookupQuery": undefined,
                                                                              },
                                                                              "original": Object {
                                                                                "conceptURI": undefined,
                                                                                "dataType": Immutable.Record {
                                                                                  "conceptURI": undefined,
                                                                                  "display": "Text",
                                                                                  "name": "string",
                                                                                  "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                                                  "alternateRangeURI": "xsd:string",
                                                                                  "shortDisplay": "String",
                                                                                  "lookupSchema": undefined,
                                                                                  "lookupQuery": undefined,
                                                                                },
                                                                                "rangeURI": undefined,
                                                                              },
                                                                              "updatedField": false,
                                                                              "isPrimaryKey": false,
                                                                              "lockType": "NotLocked",
                                                                              "wrappedColumnName": undefined,
                                                                            }
                                                                          }
                                                                          hideConditionalFormatting={true}
                                                                          index={0}
                                                                          onChange={[Function]}
                                                                          showingModal={[Function]}
                                                                          successBsStyle="success"
                                                                        >
                                                                          <div>
                                                                            <Row
                                                                              bsClass="row"
                                                                              className="domain-row-expanded"
                                                                              componentClass="div"
                                                                            >
                                                                              <div
                                                                                className="domain-row-expanded row"
                                                                              >
                                                                                <Col
                                                                                  bsClass="col"
                                                                                  componentClass="div"
                                                                                  xs={12}
                                                                                >
                                                                                  <div
                                                                                    className="col-xs-12"
                                                                                  >
                                                                                    <div
                                                                                      className="domain-field-section-heading domain-field-section-hdr"
                                                                                    >
                                                                                      Validation Options
                                                                                    </div>
                                                                                  </div>
                                                                                </Col>
                                                                              </div>
                                                                            </Row>
                                                                            <Row
                                                                              bsClass="row"
                                                                              className="domain-row-expanded"
                                                                              componentClass="div"
                                                                            >
                                                                              <div
                                                                                className="domain-row-expanded row"
                                                                              >
                                                                                <Col
                                                                                  bsClass="col"
                                                                                  componentClass="div"
                                                                                  xs={12}
                                                                                >
                                                                                  <div
                                                                                    className="col-xs-12"
                                                                                  >
                                                                                    <div
                                                                                      className="domain-validation-group"
                                                                                    >
                                                                                      <div
                                                                                        className="domain-field-label domain-no-wrap"
                                                                                      >
                                                                                        Create Regular Expression Validator
                                                                                        <LabelHelpTip
                                                                                          body={[Function]}
                                                                                          customStyle={Object {}}
                                                                                          id="tooltip"
                                                                                          size="1x"
                                                                                          title="Add Regex Validator"
                                                                                        >
                                                                                          <span
                                                                                            className="label-help-target"
                                                                                            onMouseOut={[Function]}
                                                                                            onMouseOver={[Function]}
                                                                                          >
                                                                                            <FontAwesomeIcon
                                                                                              border={false}
                                                                                              className="label-help-icon"
                                                                                              fixedWidth={false}
                                                                                              flip={null}
                                                                                              icon={
                                                                                                Object {
                                                                                                  "icon": Array [
                                                                                                    512,
                                                                                                    512,
                                                                                                    Array [],
                                                                                                    "f059",
                                                                                                    "M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z",
                                                                                                  ],
                                                                                                  "iconName": "question-circle",
                                                                                                  "prefix": "fas",
                                                                                                }
                                                                                              }
                                                                                              inverse={false}
                                                                                              listItem={false}
                                                                                              mask={null}
                                                                                              pull={null}
                                                                                              pulse={false}
                                                                                              rotation={null}
                                                                                              size="1x"
                                                                                              spin={false}
                                                                                              style={Object {}}
                                                                                              symbol={false}
                                                                                              title=""
                                                                                              transform={null}
                                                                                            >
                                                                                              <svg
                                                                                                aria-hidden="true"
                                                                                                className="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                                                                                                data-icon="question-circle"
                                                                                                data-prefix="fas"
                                                                                                focusable="false"
                                                                                                role="img"
                                                                                                style={Object {}}
                                                                                                viewBox="0 0 512 512"
                                                                                                xmlns="http://www.w3.org/2000/svg"
                                                                                              >
                                                                                                <path
                                                                                                  d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                                                                  fill="currentColor"
                                                                                                  style={Object {}}
                                                                                                />
                                                                                              </svg>
                                                                                            </FontAwesomeIcon>
                                                                                            <Overlay
                                                                                              animation={[Function]}
                                                                                              placement="right"
                                                                                              rootClose={false}
                                                                                              show={false}
                                                                                              target={
                                                                                                <span
                                                                                                  class="label-help-target"
                                                                                                >
                                                                                                  <svg
                                                                                                    aria-hidden="true"
                                                                                                    class="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                                                                                                    data-icon="question-circle"
                                                                                                    data-prefix="fas"
                                                                                                    focusable="false"
                                                                                                    role="img"
                                                                                                    viewBox="0 0 512 512"
                                                                                                    xmlns="http://www.w3.org/2000/svg"
                                                                                                  >
                                                                                                    <path
                                                                                                      d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                                                                      fill="currentColor"
                                                                                                    />
                                                                                                  </svg>
                                                                                                </span>
                                                                                              }
                                                                                            >
                                                                                              <Overlay
                                                                                                placement="right"
                                                                                                rootClose={false}
                                                                                                show={false}
                                                                                                target={
                                                                                                  <span
                                                                                                    class="label-help-target"
                                                                                                  >
                                                                                                    <svg
                                                                                                      aria-hidden="true"
                                                                                                      class="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                                                                                                      data-icon="question-circle"
                                                                                                      data-prefix="fas"
                                                                                                      focusable="false"
                                                                                                      role="img"
                                                                                                      viewBox="0 0 512 512"
                                                                                                      xmlns="http://www.w3.org/2000/svg"
                                                                                                    >
                                                                                                      <path
                                                                                                        d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                                                                        fill="currentColor"
                                                                                                      />
                                                                                                    </svg>
                                                                                                  </span>
                                                                                                }
                                                                                                transition={[Function]}
                                                                                              />
                                                                                            </Overlay>
                                                                                          </span>
                                                                                        </LabelHelpTip>
                                                                                      </div>
                                                                                      <div>
                                                                                        <Button
                                                                                          active={false}
                                                                                          block={false}
                                                                                          bsClass="btn"
                                                                                          bsStyle="default"
                                                                                          className="domain-validation-button"
                                                                                          disabled={false}
                                                                                          id="domainpropertiesrow-regexValidator-1-0"
                                                                                          name="domainpropertiesrow-regexValidator"
                                                                                          onClick={[Function]}
                                                                                        >
                                                                                          <button
                                                                                            className="domain-validation-button btn btn-default"
                                                                                            disabled={false}
                                                                                            id="domainpropertiesrow-regexValidator-1-0"
                                                                                            name="domainpropertiesrow-regexValidator"
                                                                                            onClick={[Function]}
                                                                                            type="button"
                                                                                          >
                                                                                            Add Regex
                                                                                          </button>
                                                                                        </Button>
                                                                                        <span
                                                                                          className="domain-text-label"
                                                                                        >
                                                                                          None Set
                                                                                        </span>
                                                                                      </div>
                                                                                    </div>
                                                                                  </div>
                                                                                </Col>
                                                                              </div>
                                                                            </Row>
                                                                          </div>
                                                                        </ConditionalFormattingAndValidation>
                                                                      </div>
                                                                    </Col>
                                                                  </div>
                                                                </div>
                                                              </DomainRowExpandedOptions>
                                                            </div>
                                                          </Transition>
                                                        </Collapse>
                                                      </div>
                                                    </Draggable>
                                                  </ConnectFunction>
                                                </DomainRow>
                                                <DomainRow
                                                  appPropertiesOnly={true}
                                                  availableTypes={
                                                    Immutable.List [
                                                      Immutable.Record {
                                                        "conceptURI": undefined,
                                                        "display": "Text",
                                                        "name": "string",
                                                        "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                        "alternateRangeURI": "xsd:string",
                                                        "shortDisplay": "String",
                                                        "lookupSchema": undefined,
                                                        "lookupQuery": undefined,
                                                      },
                                                      Immutable.Record {
                                                        "conceptURI": undefined,
                                                        "display": "Multi-Line Text",
                                                        "name": "multiLine",
                                                        "rangeURI": "http://www.w3.org/2001/XMLSchema#multiLine",
                                                        "alternateRangeURI": undefined,
                                                        "shortDisplay": undefined,
                                                        "lookupSchema": undefined,
                                                        "lookupQuery": undefined,
                                                      },
                                                      Immutable.Record {
                                                        "conceptURI": undefined,
                                                        "display": "Boolean",
                                                        "name": "boolean",
                                                        "rangeURI": "http://www.w3.org/2001/XMLSchema#boolean",
                                                        "alternateRangeURI": "xsd:boolean",
                                                        "shortDisplay": undefined,
                                                        "lookupSchema": undefined,
                                                        "lookupQuery": undefined,
                                                      },
                                                      Immutable.Record {
                                                        "conceptURI": undefined,
                                                        "display": "Integer",
                                                        "name": "int",
                                                        "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                                        "alternateRangeURI": "xsd:int",
                                                        "shortDisplay": undefined,
                                                        "lookupSchema": undefined,
                                                        "lookupQuery": undefined,
                                                      },
                                                      Immutable.Record {
                                                        "conceptURI": undefined,
                                                        "display": "Decimal",
                                                        "name": "double",
                                                        "rangeURI": "http://www.w3.org/2001/XMLSchema#double",
                                                        "alternateRangeURI": "xsd:double",
                                                        "shortDisplay": undefined,
                                                        "lookupSchema": undefined,
                                                        "lookupQuery": undefined,
                                                      },
                                                      Immutable.Record {
                                                        "conceptURI": undefined,
                                                        "display": "Date Time",
                                                        "name": "dateTime",
                                                        "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                                                        "alternateRangeURI": "xsd:dateTime",
                                                        "shortDisplay": undefined,
                                                        "lookupSchema": undefined,
                                                        "lookupQuery": undefined,
                                                      },
                                                      Immutable.Record {
                                                        "conceptURI": "http://www.labkey.org/exp/xml#flag",
                                                        "display": "Flag",
                                                        "name": "flag",
                                                        "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                        "alternateRangeURI": undefined,
                                                        "shortDisplay": undefined,
                                                        "lookupSchema": undefined,
                                                        "lookupQuery": undefined,
                                                      },
                                                      Immutable.Record {
                                                        "conceptURI": undefined,
                                                        "display": "File",
                                                        "name": "fileLink",
                                                        "rangeURI": "http://cpas.fhcrc.org/exp/xml#fileLink",
                                                        "alternateRangeURI": undefined,
                                                        "shortDisplay": undefined,
                                                        "lookupSchema": undefined,
                                                        "lookupQuery": undefined,
                                                      },
                                                      Immutable.Record {
                                                        "conceptURI": undefined,
                                                        "display": "Attachment",
                                                        "name": "attachment",
                                                        "rangeURI": "http://www.labkey.org/exp/xml#attachment",
                                                        "alternateRangeURI": undefined,
                                                        "shortDisplay": undefined,
                                                        "lookupSchema": undefined,
                                                        "lookupQuery": undefined,
                                                      },
                                                      Immutable.Record {
                                                        "conceptURI": undefined,
                                                        "display": "User",
                                                        "name": "users",
                                                        "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                                        "alternateRangeURI": undefined,
                                                        "shortDisplay": undefined,
                                                        "lookupSchema": "core",
                                                        "lookupQuery": "users",
                                                      },
                                                      Immutable.Record {
                                                        "conceptURI": "http://cpas.labkey.com/Study#ParticipantId",
                                                        "display": "Subject/Participant",
                                                        "name": "ParticipantId",
                                                        "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                        "alternateRangeURI": undefined,
                                                        "shortDisplay": undefined,
                                                        "lookupSchema": undefined,
                                                        "lookupQuery": undefined,
                                                      },
                                                      Immutable.Record {
                                                        "conceptURI": undefined,
                                                        "display": "Lookup",
                                                        "name": "lookup",
                                                        "rangeURI": undefined,
                                                        "alternateRangeURI": undefined,
                                                        "shortDisplay": undefined,
                                                        "lookupSchema": undefined,
                                                        "lookupQuery": undefined,
                                                      },
                                                      Immutable.Record {
                                                        "conceptURI": "http://www.labkey.org/exp/xml#sample",
                                                        "display": "Sample",
                                                        "name": "sample",
                                                        "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                                        "alternateRangeURI": undefined,
                                                        "shortDisplay": undefined,
                                                        "lookupSchema": undefined,
                                                        "lookupQuery": undefined,
                                                      },
                                                    ]
                                                  }
                                                  defaultValueOptions={Immutable.List []}
                                                  domainFormDisplayOptions={
                                                    Object {
                                                      "isDragDisabled": false,
                                                      "phiLevelDisabled": false,
                                                      "showAddFieldsButton": true,
                                                      "showRequired": true,
                                                      "showTextOptions": true,
                                                      "showValidators": true,
                                                    }
                                                  }
                                                  domainId={null}
                                                  domainIndex={1}
                                                  dragging={false}
                                                  expandTransition={300}
                                                  expanded={false}
                                                  field={
                                                    Immutable.Record {
                                                      "conceptURI": undefined,
                                                      "conditionalFormats": Immutable.List [],
                                                      "defaultScale": undefined,
                                                      "defaultValueType": undefined,
                                                      "defaultValue": undefined,
                                                      "defaultDisplayValue": undefined,
                                                      "description": undefined,
                                                      "dimension": undefined,
                                                      "excludeFromShifting": false,
                                                      "format": undefined,
                                                      "hidden": false,
                                                      "importAliases": undefined,
                                                      "label": undefined,
                                                      "lookupContainer": undefined,
                                                      "lookupQuery": undefined,
                                                      "lookupSchema": undefined,
                                                      "lookupValidator": undefined,
                                                      "measure": undefined,
                                                      "mvEnabled": false,
                                                      "name": "field2",
                                                      "PHI": undefined,
                                                      "primaryKey": undefined,
                                                      "propertyId": undefined,
                                                      "propertyURI": undefined,
                                                      "propertyValidators": Immutable.List [],
                                                      "rangeValidators": Immutable.List [],
                                                      "rangeURI": "xsd:int",
                                                      "regexValidators": Immutable.List [],
                                                      "recommendedVariable": false,
                                                      "required": false,
                                                      "scale": undefined,
                                                      "URL": undefined,
                                                      "shownInDetailsView": true,
                                                      "shownInInsertView": true,
                                                      "shownInUpdateView": true,
                                                      "visible": true,
                                                      "dataType": Immutable.Record {
                                                        "conceptURI": undefined,
                                                        "display": "Integer",
                                                        "name": "int",
                                                        "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                                        "alternateRangeURI": "xsd:int",
                                                        "shortDisplay": undefined,
                                                        "lookupSchema": undefined,
                                                        "lookupQuery": undefined,
                                                      },
                                                      "lookupQueryValue": undefined,
                                                      "lookupType": Immutable.Record {
                                                        "conceptURI": undefined,
                                                        "display": "Lookup",
                                                        "name": "lookup",
                                                        "rangeURI": "xsd:int",
                                                        "alternateRangeURI": undefined,
                                                        "shortDisplay": undefined,
                                                        "lookupSchema": undefined,
                                                        "lookupQuery": undefined,
                                                      },
                                                      "original": Object {
                                                        "conceptURI": undefined,
                                                        "dataType": Immutable.Record {
                                                          "conceptURI": undefined,
                                                          "display": "Integer",
                                                          "name": "int",
                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                                          "alternateRangeURI": "xsd:int",
                                                          "shortDisplay": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                        "rangeURI": undefined,
                                                      },
                                                      "updatedField": false,
                                                      "isPrimaryKey": false,
                                                      "lockType": "NotLocked",
                                                      "wrappedColumnName": undefined,
                                                    }
                                                  }
                                                  helpNoun="field designer"
                                                  index={1}
                                                  key="domain-row-key-1"
                                                  maxPhiLevel="NotPHI"
                                                  onChange={[Function]}
                                                  onDelete={[Function]}
                                                  onExpand={[Function]}
                                                  showDefaultValueSettings={false}
                                                  showFilePropertyType={false}
                                                  successBsStyle="success"
                                                >
                                                  <ConnectFunction
                                                    disableInteractiveElementBlocking={false}
                                                    draggableId="domainpropertiesrow-domaindrag-1-1"
                                                    index={1}
                                                    isDragDisabled={false}
                                                    shouldRespectForcePress={false}
                                                  >
                                                    <Draggable
                                                      disableInteractiveElementBlocking={false}
                                                      draggableId="domainpropertiesrow-domaindrag-1-1"
                                                      drop={[Function]}
                                                      dropAnimationFinished={[Function]}
                                                      index={1}
                                                      isDragDisabled={false}
                                                      lift={[Function]}
                                                      mapped={
                                                        Object {
                                                          "combineTargetFor": null,
                                                          "offset": Object {
                                                            "x": 0,
                                                            "y": 0,
                                                          },
                                                          "shouldAnimateDisplacement": true,
                                                          "snapshot": Object {
                                                            "combineTargetFor": null,
                                                            "combineWith": null,
                                                            "draggingOver": null,
                                                            "dropAnimation": null,
                                                            "isDragging": false,
                                                            "isDropAnimating": false,
                                                            "mode": null,
                                                          },
                                                          "type": "SECONDARY",
                                                        }
                                                      }
                                                      move={[Function]}
                                                      moveByWindowScroll={[Function]}
                                                      moveDown={[Function]}
                                                      moveLeft={[Function]}
                                                      moveRight={[Function]}
                                                      moveUp={[Function]}
                                                      shouldRespectForcePress={false}
                                                    >
                                                      <div
                                                        className="domain-field-row domain-row-border-default"
                                                        data-react-beautiful-dnd-draggable="2"
                                                        onTransitionEnd={null}
                                                        style={
                                                          Object {
                                                            "transform": null,
                                                            "transition": null,
                                                          }
                                                        }
                                                        tabIndex={1}
                                                      >
                                                        <Row
                                                          bsClass="row"
                                                          className="domain-row-container"
                                                          componentClass="div"
                                                          key="domainpropertiesrow-domainrow-1-1"
                                                        >
                                                          <div
                                                            className="domain-row-container row"
                                                          >
                                                            <AdvancedSettings
                                                              defaultValueOptions={Immutable.List []}
                                                              domainFormDisplayOptions={
                                                                Object {
                                                                  "isDragDisabled": false,
                                                                  "phiLevelDisabled": false,
                                                                  "showAddFieldsButton": true,
                                                                  "showRequired": true,
                                                                  "showTextOptions": true,
                                                                  "showValidators": true,
                                                                }
                                                              }
                                                              domainId={null}
                                                              domainIndex={1}
                                                              field={
                                                                Immutable.Record {
                                                                  "conceptURI": undefined,
                                                                  "conditionalFormats": Immutable.List [],
                                                                  "defaultScale": undefined,
                                                                  "defaultValueType": undefined,
                                                                  "defaultValue": undefined,
                                                                  "defaultDisplayValue": undefined,
                                                                  "description": undefined,
                                                                  "dimension": undefined,
                                                                  "excludeFromShifting": false,
                                                                  "format": undefined,
                                                                  "hidden": false,
                                                                  "importAliases": undefined,
                                                                  "label": undefined,
                                                                  "lookupContainer": undefined,
                                                                  "lookupQuery": undefined,
                                                                  "lookupSchema": undefined,
                                                                  "lookupValidator": undefined,
                                                                  "measure": undefined,
                                                                  "mvEnabled": false,
                                                                  "name": "field2",
                                                                  "PHI": undefined,
                                                                  "primaryKey": undefined,
                                                                  "propertyId": undefined,
                                                                  "propertyURI": undefined,
                                                                  "propertyValidators": Immutable.List [],
                                                                  "rangeValidators": Immutable.List [],
                                                                  "rangeURI": "xsd:int",
                                                                  "regexValidators": Immutable.List [],
                                                                  "recommendedVariable": false,
                                                                  "required": false,
                                                                  "scale": undefined,
                                                                  "URL": undefined,
                                                                  "shownInDetailsView": true,
                                                                  "shownInInsertView": true,
                                                                  "shownInUpdateView": true,
                                                                  "visible": true,
                                                                  "dataType": Immutable.Record {
                                                                    "conceptURI": undefined,
                                                                    "display": "Integer",
                                                                    "name": "int",
                                                                    "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                                                    "alternateRangeURI": "xsd:int",
                                                                    "shortDisplay": undefined,
                                                                    "lookupSchema": undefined,
                                                                    "lookupQuery": undefined,
                                                                  },
                                                                  "lookupQueryValue": undefined,
                                                                  "lookupType": Immutable.Record {
                                                                    "conceptURI": undefined,
                                                                    "display": "Lookup",
                                                                    "name": "lookup",
                                                                    "rangeURI": "xsd:int",
                                                                    "alternateRangeURI": undefined,
                                                                    "shortDisplay": undefined,
                                                                    "lookupSchema": undefined,
                                                                    "lookupQuery": undefined,
                                                                  },
                                                                  "original": Object {
                                                                    "conceptURI": undefined,
                                                                    "dataType": Immutable.Record {
                                                                      "conceptURI": undefined,
                                                                      "display": "Integer",
                                                                      "name": "int",
                                                                      "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                                                      "alternateRangeURI": "xsd:int",
                                                                      "shortDisplay": undefined,
                                                                      "lookupSchema": undefined,
                                                                      "lookupQuery": undefined,
                                                                    },
                                                                    "rangeURI": undefined,
                                                                  },
                                                                  "updatedField": false,
                                                                  "isPrimaryKey": false,
                                                                  "lockType": "NotLocked",
                                                                  "wrappedColumnName": undefined,
                                                                }
                                                              }
                                                              helpNoun="field designer"
                                                              index={1}
                                                              label="field2"
                                                              maxPhiLevel="NotPHI"
                                                              onApply={[Function]}
                                                              onHide={[Function]}
                                                              show={false}
                                                              showDefaultValueSettings={false}
                                                              successBsStyle="success"
                                                            >
                                                              <Modal
                                                                animation={true}
                                                                autoFocus={true}
                                                                backdrop={true}
                                                                bsClass="modal"
                                                                dialogComponentClass={[Function]}
                                                                enforceFocus={true}
                                                                keyboard={true}
                                                                manager={
                                                                  ModalManager {
                                                                    "add": [Function],
                                                                    "containers": Array [],
                                                                    "data": Array [],
                                                                    "handleContainerOverflow": true,
                                                                    "hideSiblingNodes": true,
                                                                    "isTopModal": [Function],
                                                                    "modals": Array [],
                                                                    "remove": [Function],
                                                                  }
                                                                }
                                                                onEnter={[Function]}
                                                                onHide={[Function]}
                                                                renderBackdrop={[Function]}
                                                                restoreFocus={true}
                                                                show={false}
                                                              >
                                                                <Modal
                                                                  autoFocus={true}
                                                                  backdrop={true}
                                                                  backdropClassName="modal-backdrop"
                                                                  backdropTransition={[Function]}
                                                                  containerClassName="modal-open"
                                                                  enforceFocus={true}
                                                                  keyboard={true}
                                                                  manager={
                                                                    ModalManager {
                                                                      "add": [Function],
                                                                      "containers": Array [],
                                                                      "data": Array [],
                                                                      "handleContainerOverflow": true,
                                                                      "hideSiblingNodes": true,
                                                                      "isTopModal": [Function],
                                                                      "modals": Array [],
                                                                      "remove": [Function],
                                                                    }
                                                                  }
                                                                  onEnter={[Function]}
                                                                  onEntering={[Function]}
                                                                  onExited={[Function]}
                                                                  onHide={[Function]}
                                                                  renderBackdrop={[Function]}
                                                                  restoreFocus={true}
                                                                  show={false}
                                                                  transition={[Function]}
                                                                />
                                                              </Modal>
                                                            </AdvancedSettings>
                                                            <div
                                                              aria-roledescription="Draggable item. Press space bar to lift"
                                                              className="domain-row-handle"
                                                              data-react-beautiful-dnd-drag-handle="2"
                                                              draggable={false}
                                                              onBlur={[Function]}
                                                              onDragStart={[Function]}
                                                              onFocus={[Function]}
                                                              onKeyDown={[Function]}
                                                              onMouseDown={[Function]}
                                                              onTouchStart={[Function]}
                                                              tabIndex={0}
                                                            >
                                                              <DragDropHandle>
                                                                <FontAwesomeIcon
                                                                  border={false}
                                                                  className=""
                                                                  fixedWidth={false}
                                                                  flip={null}
                                                                  icon={
                                                                    Object {
                                                                      "icon": Array [
                                                                        320,
                                                                        512,
                                                                        Array [],
                                                                        "f58e",
                                                                        "M96 32H32C14.33 32 0 46.33 0 64v64c0 17.67 14.33 32 32 32h64c17.67 0 32-14.33 32-32V64c0-17.67-14.33-32-32-32zm0 160H32c-17.67 0-32 14.33-32 32v64c0 17.67 14.33 32 32 32h64c17.67 0 32-14.33 32-32v-64c0-17.67-14.33-32-32-32zm0 160H32c-17.67 0-32 14.33-32 32v64c0 17.67 14.33 32 32 32h64c17.67 0 32-14.33 32-32v-64c0-17.67-14.33-32-32-32zM288 32h-64c-17.67 0-32 14.33-32 32v64c0 17.67 14.33 32 32 32h64c17.67 0 32-14.33 32-32V64c0-17.67-14.33-32-32-32zm0 160h-64c-17.67 0-32 14.33-32 32v64c0 17.67 14.33 32 32 32h64c17.67 0 32-14.33 32-32v-64c0-17.67-14.33-32-32-32zm0 160h-64c-17.67 0-32 14.33-32 32v64c0 17.67 14.33 32 32 32h64c17.67 0 32-14.33 32-32v-64c0-17.67-14.33-32-32-32z",
                                                                      ],
                                                                      "iconName": "grip-vertical",
                                                                      "prefix": "fas",
                                                                    }
                                                                  }
                                                                  inverse={false}
                                                                  listItem={false}
                                                                  mask={null}
                                                                  pull={null}
                                                                  pulse={false}
                                                                  rotation={null}
                                                                  size="lg"
                                                                  spin={false}
                                                                  symbol={false}
                                                                  title=""
                                                                  transform={null}
                                                                >
                                                                  <svg
                                                                    aria-hidden="true"
                                                                    className="svg-inline--fa fa-grip-vertical fa-w-10 fa-lg "
                                                                    data-icon="grip-vertical"
                                                                    data-prefix="fas"
                                                                    focusable="false"
                                                                    role="img"
                                                                    style={Object {}}
                                                                    viewBox="0 0 320 512"
                                                                    xmlns="http://www.w3.org/2000/svg"
                                                                  >
                                                                    <path
                                                                      d="M96 32H32C14.33 32 0 46.33 0 64v64c0 17.67 14.33 32 32 32h64c17.67 0 32-14.33 32-32V64c0-17.67-14.33-32-32-32zm0 160H32c-17.67 0-32 14.33-32 32v64c0 17.67 14.33 32 32 32h64c17.67 0 32-14.33 32-32v-64c0-17.67-14.33-32-32-32zm0 160H32c-17.67 0-32 14.33-32 32v64c0 17.67 14.33 32 32 32h64c17.67 0 32-14.33 32-32v-64c0-17.67-14.33-32-32-32zM288 32h-64c-17.67 0-32 14.33-32 32v64c0 17.67 14.33 32 32 32h64c17.67 0 32-14.33 32-32V64c0-17.67-14.33-32-32-32zm0 160h-64c-17.67 0-32 14.33-32 32v64c0 17.67 14.33 32 32 32h64c17.67 0 32-14.33 32-32v-64c0-17.67-14.33-32-32-32zm0 160h-64c-17.67 0-32 14.33-32 32v64c0 17.67 14.33 32 32 32h64c17.67 0 32-14.33 32-32v-64c0-17.67-14.33-32-32-32z"
                                                                      fill="currentColor"
                                                                      style={Object {}}
                                                                    />
                                                                  </svg>
                                                                </FontAwesomeIcon>
                                                              </DragDropHandle>
                                                            </div>
                                                            <div
                                                              className="domain-row-main"
                                                            >
                                                              <Col
                                                                bsClass="col"
                                                                className="domain-row-base-fields"
                                                                componentClass="div"
                                                                xs={6}
                                                              >
                                                                <div
                                                                  className="domain-row-base-fields col-xs-6"
                                                                >
                                                                  <div
                                                                    id="domainpropertiesrow-row-1-1"
                                                                  >
                                                                    <Col
                                                                      bsClass="col"
                                                                      componentClass="div"
                                                                      xs={6}
                                                                    >
                                                                      <div
                                                                        className="col-xs-6"
                                                                      >
                                                                        <FormControl
                                                                          bsClass="form-control"
                                                                          componentClass="input"
                                                                          disabled={false}
                                                                          id="domainpropertiesrow-name-1-1"
                                                                          name="domainpropertiesrow-name"
                                                                          onChange={[Function]}
                                                                          type="text"
                                                                          value="field2"
                                                                        >
                                                                          <input
                                                                            className="form-control"
                                                                            disabled={false}
                                                                            id="domainpropertiesrow-name-1-1"
                                                                            name="domainpropertiesrow-name"
                                                                            onChange={[Function]}
                                                                            type="text"
                                                                            value="field2"
                                                                          />
                                                                        </FormControl>
                                                                      </div>
                                                                    </Col>
                                                                    <Col
                                                                      bsClass="col"
                                                                      componentClass="div"
                                                                      xs={4}
                                                                    >
                                                                      <div
                                                                        className="col-xs-4"
                                                                      >
                                                                        <FormControl
                                                                          bsClass="form-control"
                                                                          componentClass="select"
                                                                          disabled={false}
                                                                          id="domainpropertiesrow-type-1-1"
                                                                          name="domainpropertiesrow-type"
                                                                          onChange={[Function]}
                                                                          value="int"
                                                                        >
                                                                          <select
                                                                            className="form-control"
                                                                            disabled={false}
                                                                            id="domainpropertiesrow-type-1-1"
                                                                            name="domainpropertiesrow-type"
                                                                            onChange={[Function]}
                                                                            value="int"
                                                                          >
                                                                            <option
                                                                              key="0"
                                                                              value="string"
                                                                            >
                                                                              Text
                                                                            </option>
                                                                            <option
                                                                              key="1"
                                                                              value="multiLine"
                                                                            >
                                                                              Multi-Line Text
                                                                            </option>
                                                                            <option
                                                                              key="2"
                                                                              value="boolean"
                                                                            >
                                                                              Boolean
                                                                            </option>
                                                                            <option
                                                                              key="3"
                                                                              value="int"
                                                                            >
                                                                              Integer
                                                                            </option>
                                                                            <option
                                                                              key="4"
                                                                              value="double"
                                                                            >
                                                                              Decimal
                                                                            </option>
                                                                            <option
                                                                              key="5"
                                                                              value="dateTime"
                                                                            >
                                                                              Date Time
                                                                            </option>
                                                                            <option
                                                                              key="6"
                                                                              value="users"
                                                                            >
                                                                              User
                                                                            </option>
                                                                            <option
                                                                              key="7"
                                                                              value="sample"
                                                                            >
                                                                              Sample
                                                                            </option>
                                                                          </select>
                                                                        </FormControl>
                                                                      </div>
                                                                    </Col>
                                                                    <Col
                                                                      bsClass="col"
                                                                      componentClass="div"
                                                                      xs={2}
                                                                    >
                                                                      <div
                                                                        className="col-xs-2"
                                                                      >
                                                                        <div
                                                                          className="domain-field-checkbox-container"
                                                                        >
                                                                          <Checkbox
                                                                            bsClass="checkbox"
                                                                            checked={false}
                                                                            className="domain-field-checkbox"
                                                                            disabled={false}
                                                                            id="domainpropertiesrow-required-1-1"
                                                                            inline={false}
                                                                            name="domainpropertiesrow-required"
                                                                            onChange={[Function]}
                                                                            title=""
                                                                          >
                                                                            <div
                                                                              className="domain-field-checkbox checkbox"
                                                                            >
                                                                              <label
                                                                                title=""
                                                                              >
                                                                                <input
                                                                                  checked={false}
                                                                                  disabled={false}
                                                                                  id="domainpropertiesrow-required-1-1"
                                                                                  name="domainpropertiesrow-required"
                                                                                  onChange={[Function]}
                                                                                  type="checkbox"
                                                                                />
                                                                              </label>
                                                                            </div>
                                                                          </Checkbox>
                                                                        </div>
                                                                      </div>
                                                                    </Col>
                                                                  </div>
                                                                </div>
                                                              </Col>
                                                              <Col
                                                                bsClass="col"
                                                                className="field-details-container"
                                                                componentClass="div"
                                                                xs={6}
                                                              >
                                                                <div
                                                                  className="field-details-container col-xs-6"
                                                                >
                                                                  <div
                                                                    className="domain-field-details"
                                                                    id="domainpropertiesrow-details-1-1"
                                                                  >
                                                                    New Field
                                                                  </div>
                                                                  <div
                                                                    className="domain-field-buttons"
                                                                  >
                                                                    <DeleteIcon
                                                                      iconCls="domain-field-delete-icon"
                                                                      id="domainpropertiesrow-delete-1-1"
                                                                      onDelete={[Function]}
                                                                      title="Remove field"
                                                                    >
                                                                      <span
                                                                        className="field-icon"
                                                                        id="domainpropertiesrow-delete-1-1"
                                                                        onClick={[Function]}
                                                                        title="Remove field"
                                                                      >
                                                                        <FontAwesomeIcon
                                                                          border={false}
                                                                          className="domain-field-delete-icon"
                                                                          fixedWidth={false}
                                                                          flip={null}
                                                                          icon={
                                                                            Object {
                                                                              "icon": Array [
                                                                                512,
                                                                                512,
                                                                                Array [],
                                                                                "f057",
                                                                                "M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8zm121.6 313.1c4.7 4.7 4.7 12.3 0 17L338 377.6c-4.7 4.7-12.3 4.7-17 0L256 312l-65.1 65.6c-4.7 4.7-12.3 4.7-17 0L134.4 338c-4.7-4.7-4.7-12.3 0-17l65.6-65-65.6-65.1c-4.7-4.7-4.7-12.3 0-17l39.6-39.6c4.7-4.7 12.3-4.7 17 0l65 65.7 65.1-65.6c4.7-4.7 12.3-4.7 17 0l39.6 39.6c4.7 4.7 4.7 12.3 0 17L312 256l65.6 65.1z",
                                                                              ],
                                                                              "iconName": "times-circle",
                                                                              "prefix": "fas",
                                                                            }
                                                                          }
                                                                          inverse={false}
                                                                          listItem={false}
                                                                          mask={null}
                                                                          pull={null}
                                                                          pulse={false}
                                                                          rotation={null}
                                                                          size={null}
                                                                          spin={false}
                                                                          symbol={false}
                                                                          title=""
                                                                          transform={null}
                                                                        >
                                                                          <svg
                                                                            aria-hidden="true"
                                                                            className="svg-inline--fa fa-times-circle fa-w-16 domain-field-delete-icon"
                                                                            data-icon="times-circle"
                                                                            data-prefix="fas"
                                                                            focusable="false"
                                                                            role="img"
                                                                            style={Object {}}
                                                                            viewBox="0 0 512 512"
                                                                            xmlns="http://www.w3.org/2000/svg"
                                                                          >
                                                                            <path
                                                                              d="M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8zm121.6 313.1c4.7 4.7 4.7 12.3 0 17L338 377.6c-4.7 4.7-12.3 4.7-17 0L256 312l-65.1 65.6c-4.7 4.7-12.3 4.7-17 0L134.4 338c-4.7-4.7-4.7-12.3 0-17l65.6-65-65.6-65.1c-4.7-4.7-4.7-12.3 0-17l39.6-39.6c4.7-4.7 12.3-4.7 17 0l65 65.7 65.1-65.6c4.7-4.7 12.3-4.7 17 0l39.6 39.6c4.7 4.7 4.7 12.3 0 17L312 256l65.6 65.1z"
                                                                              fill="currentColor"
                                                                              style={Object {}}
                                                                            />
                                                                          </svg>
                                                                        </FontAwesomeIcon>
                                                                      </span>
                                                                    </DeleteIcon>
                                                                    <FieldExpansionToggle
                                                                      cls="domain-field-expand-icon"
                                                                      collapsedTitle="Show additional field properties"
                                                                      expanded={false}
                                                                      expandedTitle="Hide additional field properties"
                                                                      id="domainpropertiesrow-expand-1-1"
                                                                      onClick={[Function]}
                                                                    >
                                                                      <div
                                                                        className="field-icon domain-field-expand-icon"
                                                                        id="domainpropertiesrow-expand-1-1"
                                                                        onClick={[Function]}
                                                                        title="Show additional field properties"
                                                                      >
                                                                        <FontAwesomeIcon
                                                                          border={false}
                                                                          className=""
                                                                          fixedWidth={false}
                                                                          flip={null}
                                                                          icon={
                                                                            Object {
                                                                              "icon": Array [
                                                                                448,
                                                                                512,
                                                                                Array [],
                                                                                "f0fe",
                                                                                "M400 32H48C21.5 32 0 53.5 0 80v352c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V80c0-26.5-21.5-48-48-48zm-32 252c0 6.6-5.4 12-12 12h-92v92c0 6.6-5.4 12-12 12h-56c-6.6 0-12-5.4-12-12v-92H92c-6.6 0-12-5.4-12-12v-56c0-6.6 5.4-12 12-12h92v-92c0-6.6 5.4-12 12-12h56c6.6 0 12 5.4 12 12v92h92c6.6 0 12 5.4 12 12v56z",
                                                                              ],
                                                                              "iconName": "plus-square",
                                                                              "prefix": "fas",
                                                                            }
                                                                          }
                                                                          inverse={false}
                                                                          listItem={false}
                                                                          mask={null}
                                                                          pull={null}
                                                                          pulse={false}
                                                                          rotation={null}
                                                                          size="lg"
                                                                          spin={false}
                                                                          symbol={false}
                                                                          title=""
                                                                          transform={null}
                                                                        >
                                                                          <svg
                                                                            aria-hidden="true"
                                                                            className="svg-inline--fa fa-plus-square fa-w-14 fa-lg "
                                                                            data-icon="plus-square"
                                                                            data-prefix="fas"
                                                                            focusable="false"
                                                                            role="img"
                                                                            style={Object {}}
                                                                            viewBox="0 0 448 512"
                                                                            xmlns="http://www.w3.org/2000/svg"
                                                                          >
                                                                            <path
                                                                              d="M400 32H48C21.5 32 0 53.5 0 80v352c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V80c0-26.5-21.5-48-48-48zm-32 252c0 6.6-5.4 12-12 12h-92v92c0 6.6-5.4 12-12 12h-56c-6.6 0-12-5.4-12-12v-92H92c-6.6 0-12-5.4-12-12v-56c0-6.6 5.4-12 12-12h92v-92c0-6.6 5.4-12 12-12h56c6.6 0 12 5.4 12 12v92h92c6.6 0 12 5.4 12 12v56z"
                                                                              fill="currentColor"
                                                                              style={Object {}}
                                                                            />
                                                                          </svg>
                                                                        </FontAwesomeIcon>
                                                                      </div>
                                                                    </FieldExpansionToggle>
                                                                  </div>
                                                                </div>
                                                              </Col>
                                                            </div>
                                                          </div>
                                                        </Row>
                                                        <Collapse
                                                          appear={false}
                                                          dimension="height"
                                                          getDimensionValue={[Function]}
                                                          in={false}
                                                          mountOnEnter={false}
                                                          onExited={[Function]}
                                                          onExiting={[Function]}
                                                          timeout={300}
                                                          unmountOnExit={false}
                                                        >
                                                          <Transition
                                                            appear={false}
                                                            aria-expanded={null}
                                                            enter={true}
                                                            exit={true}
                                                            in={false}
                                                            mountOnEnter={false}
                                                            onEnter={[Function]}
                                                            onEntered={[Function]}
                                                            onEntering={[Function]}
                                                            onExit={[Function]}
                                                            onExited={[Function]}
                                                            onExiting={[Function]}
                                                            timeout={300}
                                                            unmountOnExit={false}
                                                          >
                                                            <div
                                                              aria-expanded={null}
                                                              className="collapse"
                                                            >
                                                              <DomainRowExpandedOptions
                                                                appPropertiesOnly={true}
                                                                domainFormDisplayOptions={
                                                                  Object {
                                                                    "isDragDisabled": false,
                                                                    "phiLevelDisabled": false,
                                                                    "showAddFieldsButton": true,
                                                                    "showRequired": true,
                                                                    "showTextOptions": true,
                                                                    "showValidators": true,
                                                                  }
                                                                }
                                                                domainIndex={1}
                                                                field={
                                                                  Immutable.Record {
                                                                    "conceptURI": undefined,
                                                                    "conditionalFormats": Immutable.List [],
                                                                    "defaultScale": undefined,
                                                                    "defaultValueType": undefined,
                                                                    "defaultValue": undefined,
                                                                    "defaultDisplayValue": undefined,
                                                                    "description": undefined,
                                                                    "dimension": undefined,
                                                                    "excludeFromShifting": false,
                                                                    "format": undefined,
                                                                    "hidden": false,
                                                                    "importAliases": undefined,
                                                                    "label": undefined,
                                                                    "lookupContainer": undefined,
                                                                    "lookupQuery": undefined,
                                                                    "lookupSchema": undefined,
                                                                    "lookupValidator": undefined,
                                                                    "measure": undefined,
                                                                    "mvEnabled": false,
                                                                    "name": "field2",
                                                                    "PHI": undefined,
                                                                    "primaryKey": undefined,
                                                                    "propertyId": undefined,
                                                                    "propertyURI": undefined,
                                                                    "propertyValidators": Immutable.List [],
                                                                    "rangeValidators": Immutable.List [],
                                                                    "rangeURI": "xsd:int",
                                                                    "regexValidators": Immutable.List [],
                                                                    "recommendedVariable": false,
                                                                    "required": false,
                                                                    "scale": undefined,
                                                                    "URL": undefined,
                                                                    "shownInDetailsView": true,
                                                                    "shownInInsertView": true,
                                                                    "shownInUpdateView": true,
                                                                    "visible": true,
                                                                    "dataType": Immutable.Record {
                                                                      "conceptURI": undefined,
                                                                      "display": "Integer",
                                                                      "name": "int",
                                                                      "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                                                      "alternateRangeURI": "xsd:int",
                                                                      "shortDisplay": undefined,
                                                                      "lookupSchema": undefined,
                                                                      "lookupQuery": undefined,
                                                                    },
                                                                    "lookupQueryValue": undefined,
                                                                    "lookupType": Immutable.Record {
                                                                      "conceptURI": undefined,
                                                                      "display": "Lookup",
                                                                      "name": "lookup",
                                                                      "rangeURI": "xsd:int",
                                                                      "alternateRangeURI": undefined,
                                                                      "shortDisplay": undefined,
                                                                      "lookupSchema": undefined,
                                                                      "lookupQuery": undefined,
                                                                    },
                                                                    "original": Object {
                                                                      "conceptURI": undefined,
                                                                      "dataType": Immutable.Record {
                                                                        "conceptURI": undefined,
                                                                        "display": "Integer",
                                                                        "name": "int",
                                                                        "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                                                        "alternateRangeURI": "xsd:int",
                                                                        "shortDisplay": undefined,
                                                                        "lookupSchema": undefined,
                                                                        "lookupQuery": undefined,
                                                                      },
                                                                      "rangeURI": undefined,
                                                                    },
                                                                    "updatedField": false,
                                                                    "isPrimaryKey": false,
                                                                    "lockType": "NotLocked",
                                                                    "wrappedColumnName": undefined,
                                                                  }
                                                                }
                                                                index={1}
                                                                onChange={[Function]}
                                                                onMultiChange={[Function]}
                                                                showingModal={[Function]}
                                                                successBsStyle="success"
                                                              >
                                                                <div
                                                                  className="domain-row-container"
                                                                >
                                                                  <div
                                                                    className="domain-row-handle"
                                                                  />
                                                                  <div
                                                                    className="domain-row-container-expanded"
                                                                  >
                                                                    <Col
                                                                      bsClass="col"
                                                                      componentClass="div"
                                                                      xs={12}
                                                                    >
                                                                      <div
                                                                        className="col-xs-12"
                                                                      >
                                                                        <NumericFieldOptions
                                                                          domainIndex={1}
                                                                          index={1}
                                                                          label="Integer Options"
                                                                          lockType="NotLocked"
                                                                          onChange={[Function]}
                                                                        >
                                                                          <div>
                                                                            <Row
                                                                              bsClass="row"
                                                                              className="domain-row-expanded"
                                                                              componentClass="div"
                                                                            >
                                                                              <div
                                                                                className="domain-row-expanded row"
                                                                              >
                                                                                <Col
                                                                                  bsClass="col"
                                                                                  componentClass="div"
                                                                                  xs={12}
                                                                                >
                                                                                  <div
                                                                                    className="col-xs-12"
                                                                                  >
                                                                                    <div
                                                                                      className="domain-field-section-heading"
                                                                                    >
                                                                                      Integer Options
                                                                                    </div>
                                                                                  </div>
                                                                                </Col>
                                                                              </div>
                                                                            </Row>
                                                                            <Row
                                                                              bsClass="row"
                                                                              className="domain-row-expanded"
                                                                              componentClass="div"
                                                                            >
                                                                              <div
                                                                                className="domain-row-expanded row"
                                                                              >
                                                                                <Col
                                                                                  bsClass="col"
                                                                                  componentClass="div"
                                                                                  xs={3}
                                                                                >
                                                                                  <div
                                                                                    className="col-xs-3"
                                                                                  >
                                                                                    <div
                                                                                      className="domain-field-label"
                                                                                    >
                                                                                      Format for Numbers
                                                                                      <LabelHelpTip
                                                                                        body={[Function]}
                                                                                        customStyle={Object {}}
                                                                                        id="tooltip"
                                                                                        size="1x"
                                                                                        title="Format Strings"
                                                                                      >
                                                                                        <span
                                                                                          className="label-help-target"
                                                                                          onMouseOut={[Function]}
                                                                                          onMouseOver={[Function]}
                                                                                        >
                                                                                          <FontAwesomeIcon
                                                                                            border={false}
                                                                                            className="label-help-icon"
                                                                                            fixedWidth={false}
                                                                                            flip={null}
                                                                                            icon={
                                                                                              Object {
                                                                                                "icon": Array [
                                                                                                  512,
                                                                                                  512,
                                                                                                  Array [],
                                                                                                  "f059",
                                                                                                  "M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z",
                                                                                                ],
                                                                                                "iconName": "question-circle",
                                                                                                "prefix": "fas",
                                                                                              }
                                                                                            }
                                                                                            inverse={false}
                                                                                            listItem={false}
                                                                                            mask={null}
                                                                                            pull={null}
                                                                                            pulse={false}
                                                                                            rotation={null}
                                                                                            size="1x"
                                                                                            spin={false}
                                                                                            style={Object {}}
                                                                                            symbol={false}
                                                                                            title=""
                                                                                            transform={null}
                                                                                          >
                                                                                            <svg
                                                                                              aria-hidden="true"
                                                                                              className="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                                                                                              data-icon="question-circle"
                                                                                              data-prefix="fas"
                                                                                              focusable="false"
                                                                                              role="img"
                                                                                              style={Object {}}
                                                                                              viewBox="0 0 512 512"
                                                                                              xmlns="http://www.w3.org/2000/svg"
                                                                                            >
                                                                                              <path
                                                                                                d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                                                                fill="currentColor"
                                                                                                style={Object {}}
                                                                                              />
                                                                                            </svg>
                                                                                          </FontAwesomeIcon>
                                                                                          <Overlay
                                                                                            animation={[Function]}
                                                                                            placement="right"
                                                                                            rootClose={false}
                                                                                            show={false}
                                                                                            target={
                                                                                              <span
                                                                                                class="label-help-target"
                                                                                              >
                                                                                                <svg
                                                                                                  aria-hidden="true"
                                                                                                  class="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                                                                                                  data-icon="question-circle"
                                                                                                  data-prefix="fas"
                                                                                                  focusable="false"
                                                                                                  role="img"
                                                                                                  viewBox="0 0 512 512"
                                                                                                  xmlns="http://www.w3.org/2000/svg"
                                                                                                >
                                                                                                  <path
                                                                                                    d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                                                                    fill="currentColor"
                                                                                                  />
                                                                                                </svg>
                                                                                              </span>
                                                                                            }
                                                                                          >
                                                                                            <Overlay
                                                                                              placement="right"
                                                                                              rootClose={false}
                                                                                              show={false}
                                                                                              target={
                                                                                                <span
                                                                                                  class="label-help-target"
                                                                                                >
                                                                                                  <svg
                                                                                                    aria-hidden="true"
                                                                                                    class="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                                                                                                    data-icon="question-circle"
                                                                                                    data-prefix="fas"
                                                                                                    focusable="false"
                                                                                                    role="img"
                                                                                                    viewBox="0 0 512 512"
                                                                                                    xmlns="http://www.w3.org/2000/svg"
                                                                                                  >
                                                                                                    <path
                                                                                                      d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                                                                      fill="currentColor"
                                                                                                    />
                                                                                                  </svg>
                                                                                                </span>
                                                                                              }
                                                                                              transition={[Function]}
                                                                                            />
                                                                                          </Overlay>
                                                                                        </span>
                                                                                      </LabelHelpTip>
                                                                                    </div>
                                                                                  </div>
                                                                                </Col>
                                                                                <Col
                                                                                  bsClass="col"
                                                                                  componentClass="div"
                                                                                  xs={2}
                                                                                >
                                                                                  <div
                                                                                    className="col-xs-2"
                                                                                  >
                                                                                    <div
                                                                                      className="domain-field-label"
                                                                                    >
                                                                                      Default Scale Type
                                                                                    </div>
                                                                                  </div>
                                                                                </Col>
                                                                              </div>
                                                                            </Row>
                                                                            <Row
                                                                              bsClass="row"
                                                                              className="domain-row-expanded"
                                                                              componentClass="div"
                                                                            >
                                                                              <div
                                                                                className="domain-row-expanded row"
                                                                              >
                                                                                <Col
                                                                                  bsClass="col"
                                                                                  componentClass="div"
                                                                                  xs={3}
                                                                                >
                                                                                  <div
                                                                                    className="col-xs-3"
                                                                                  >
                                                                                    <FormControl
                                                                                      bsClass="form-control"
                                                                                      componentClass="input"
                                                                                      disabled={false}
                                                                                      id="domainpropertiesrow-format-1-1"
                                                                                      name="domainpropertiesrow-format"
                                                                                      onChange={[Function]}
                                                                                      type="text"
                                                                                      value=""
                                                                                    >
                                                                                      <input
                                                                                        className="form-control"
                                                                                        disabled={false}
                                                                                        id="domainpropertiesrow-format-1-1"
                                                                                        name="domainpropertiesrow-format"
                                                                                        onChange={[Function]}
                                                                                        type="text"
                                                                                        value=""
                                                                                      />
                                                                                    </FormControl>
                                                                                  </div>
                                                                                </Col>
                                                                                <Col
                                                                                  bsClass="col"
                                                                                  componentClass="div"
                                                                                  xs={2}
                                                                                >
                                                                                  <div
                                                                                    className="col-xs-2"
                                                                                  >
                                                                                    <FormControl
                                                                                      bsClass="form-control"
                                                                                      componentClass="select"
                                                                                      disabled={false}
                                                                                      id="domainpropertiesrow-defaultScale-1-1"
                                                                                      name="domainpropertiesrow-defaultScale"
                                                                                      onChange={[Function]}
                                                                                    >
                                                                                      <select
                                                                                        className="form-control"
                                                                                        disabled={false}
                                                                                        id="domainpropertiesrow-defaultScale-1-1"
                                                                                        name="domainpropertiesrow-defaultScale"
                                                                                        onChange={[Function]}
                                                                                      >
                                                                                        <option
                                                                                          key="domainpropertiesrow-defaultScaleoption-LINEAR-1-1"
                                                                                          value="LINEAR"
                                                                                        >
                                                                                          Linear
                                                                                        </option>
                                                                                        <option
                                                                                          key="domainpropertiesrow-defaultScaleoption-LOG-1-1"
                                                                                          value="LOG"
                                                                                        >
                                                                                          Log
                                                                                        </option>
                                                                                      </select>
                                                                                    </FormControl>
                                                                                  </div>
                                                                                </Col>
                                                                              </div>
                                                                            </Row>
                                                                          </div>
                                                                        </NumericFieldOptions>
                                                                      </div>
                                                                    </Col>
                                                                    <Col
                                                                      bsClass="col"
                                                                      componentClass="div"
                                                                      lg={10}
                                                                      xs={12}
                                                                    >
                                                                      <div
                                                                        className="col-lg-10 col-xs-12"
                                                                      >
                                                                        <NameAndLinkingOptions
                                                                          domainIndex={1}
                                                                          field={
                                                                            Immutable.Record {
                                                                              "conceptURI": undefined,
                                                                              "conditionalFormats": Immutable.List [],
                                                                              "defaultScale": undefined,
                                                                              "defaultValueType": undefined,
                                                                              "defaultValue": undefined,
                                                                              "defaultDisplayValue": undefined,
                                                                              "description": undefined,
                                                                              "dimension": undefined,
                                                                              "excludeFromShifting": false,
                                                                              "format": undefined,
                                                                              "hidden": false,
                                                                              "importAliases": undefined,
                                                                              "label": undefined,
                                                                              "lookupContainer": undefined,
                                                                              "lookupQuery": undefined,
                                                                              "lookupSchema": undefined,
                                                                              "lookupValidator": undefined,
                                                                              "measure": undefined,
                                                                              "mvEnabled": false,
                                                                              "name": "field2",
                                                                              "PHI": undefined,
                                                                              "primaryKey": undefined,
                                                                              "propertyId": undefined,
                                                                              "propertyURI": undefined,
                                                                              "propertyValidators": Immutable.List [],
                                                                              "rangeValidators": Immutable.List [],
                                                                              "rangeURI": "xsd:int",
                                                                              "regexValidators": Immutable.List [],
                                                                              "recommendedVariable": false,
                                                                              "required": false,
                                                                              "scale": undefined,
                                                                              "URL": undefined,
                                                                              "shownInDetailsView": true,
                                                                              "shownInInsertView": true,
                                                                              "shownInUpdateView": true,
                                                                              "visible": true,
                                                                              "dataType": Immutable.Record {
                                                                                "conceptURI": undefined,
                                                                                "display": "Integer",
                                                                                "name": "int",
                                                                                "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                                                                "alternateRangeURI": "xsd:int",
                                                                                "shortDisplay": undefined,
                                                                                "lookupSchema": undefined,
                                                                                "lookupQuery": undefined,
                                                                              },
                                                                              "lookupQueryValue": undefined,
                                                                              "lookupType": Immutable.Record {
                                                                                "conceptURI": undefined,
                                                                                "display": "Lookup",
                                                                                "name": "lookup",
                                                                                "rangeURI": "xsd:int",
                                                                                "alternateRangeURI": undefined,
                                                                                "shortDisplay": undefined,
                                                                                "lookupSchema": undefined,
                                                                                "lookupQuery": undefined,
                                                                              },
                                                                              "original": Object {
                                                                                "conceptURI": undefined,
                                                                                "dataType": Immutable.Record {
                                                                                  "conceptURI": undefined,
                                                                                  "display": "Integer",
                                                                                  "name": "int",
                                                                                  "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                                                                  "alternateRangeURI": "xsd:int",
                                                                                  "shortDisplay": undefined,
                                                                                  "lookupSchema": undefined,
                                                                                  "lookupQuery": undefined,
                                                                                },
                                                                                "rangeURI": undefined,
                                                                              },
                                                                              "updatedField": false,
                                                                              "isPrimaryKey": false,
                                                                              "lockType": "NotLocked",
                                                                              "wrappedColumnName": undefined,
                                                                            }
                                                                          }
                                                                          index={1}
                                                                          onChange={[Function]}
                                                                        >
                                                                          <div>
                                                                            <Row
                                                                              bsClass="row"
                                                                              className="domain-row-expanded"
                                                                              componentClass="div"
                                                                            >
                                                                              <div
                                                                                className="domain-row-expanded row"
                                                                              >
                                                                                <Col
                                                                                  bsClass="col"
                                                                                  componentClass="div"
                                                                                  xs={12}
                                                                                >
                                                                                  <div
                                                                                    className="col-xs-12"
                                                                                  >
                                                                                    <div
                                                                                      className="domain-field-section-heading domain-field-section-hdr"
                                                                                    >
                                                                                      Name and Linking Options
                                                                                    </div>
                                                                                  </div>
                                                                                </Col>
                                                                              </div>
                                                                            </Row>
                                                                            <Row
                                                                              bsClass="row"
                                                                              className="domain-row-expanded"
                                                                              componentClass="div"
                                                                            >
                                                                              <div
                                                                                className="domain-row-expanded row"
                                                                              >
                                                                                <div>
                                                                                  <Col
                                                                                    bsClass="col"
                                                                                    componentClass="div"
                                                                                    xs={5}
                                                                                  >
                                                                                    <div
                                                                                      className="col-xs-5"
                                                                                    >
                                                                                      <div
                                                                                        className="domain-field-label"
                                                                                      >
                                                                                        Description
                                                                                      </div>
                                                                                      <FormControl
                                                                                        bsClass="form-control"
                                                                                        className="form-control textarea-noresize"
                                                                                        componentClass="textarea"
                                                                                        disabled={false}
                                                                                        id="domainpropertiesrow-description-1-1"
                                                                                        name="domainpropertiesrow-description"
                                                                                        onChange={[Function]}
                                                                                        rows={4}
                                                                                        value=""
                                                                                      >
                                                                                        <textarea
                                                                                          className="form-control textarea-noresize form-control"
                                                                                          disabled={false}
                                                                                          id="domainpropertiesrow-description-1-1"
                                                                                          name="domainpropertiesrow-description"
                                                                                          onChange={[Function]}
                                                                                          rows={4}
                                                                                          value=""
                                                                                        />
                                                                                      </FormControl>
                                                                                    </div>
                                                                                  </Col>
                                                                                  <Col
                                                                                    bsClass="col"
                                                                                    componentClass="div"
                                                                                    xs={3}
                                                                                  >
                                                                                    <div
                                                                                      className="col-xs-3"
                                                                                    >
                                                                                      <div
                                                                                        className="domain-field-label"
                                                                                      >
                                                                                        Label
                                                                                      </div>
                                                                                      <FormControl
                                                                                        bsClass="form-control"
                                                                                        componentClass="input"
                                                                                        disabled={false}
                                                                                        id="domainpropertiesrow-label-1-1"
                                                                                        name="domainpropertiesrow-label"
                                                                                        onChange={[Function]}
                                                                                        type="text"
                                                                                        value=""
                                                                                      >
                                                                                        <input
                                                                                          className="form-control"
                                                                                          disabled={false}
                                                                                          id="domainpropertiesrow-label-1-1"
                                                                                          name="domainpropertiesrow-label"
                                                                                          onChange={[Function]}
                                                                                          type="text"
                                                                                          value=""
                                                                                        />
                                                                                      </FormControl>
                                                                                      <div
                                                                                        className="domain-field-label"
                                                                                      >
                                                                                        Import Aliases
                                                                                        <LabelHelpTip
                                                                                          body={[Function]}
                                                                                          customStyle={Object {}}
                                                                                          id="tooltip"
                                                                                          size="1x"
                                                                                          title="Import Aliases"
                                                                                        >
                                                                                          <span
                                                                                            className="label-help-target"
                                                                                            onMouseOut={[Function]}
                                                                                            onMouseOver={[Function]}
                                                                                          >
                                                                                            <FontAwesomeIcon
                                                                                              border={false}
                                                                                              className="label-help-icon"
                                                                                              fixedWidth={false}
                                                                                              flip={null}
                                                                                              icon={
                                                                                                Object {
                                                                                                  "icon": Array [
                                                                                                    512,
                                                                                                    512,
                                                                                                    Array [],
                                                                                                    "f059",
                                                                                                    "M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z",
                                                                                                  ],
                                                                                                  "iconName": "question-circle",
                                                                                                  "prefix": "fas",
                                                                                                }
                                                                                              }
                                                                                              inverse={false}
                                                                                              listItem={false}
                                                                                              mask={null}
                                                                                              pull={null}
                                                                                              pulse={false}
                                                                                              rotation={null}
                                                                                              size="1x"
                                                                                              spin={false}
                                                                                              style={Object {}}
                                                                                              symbol={false}
                                                                                              title=""
                                                                                              transform={null}
                                                                                            >
                                                                                              <svg
                                                                                                aria-hidden="true"
                                                                                                className="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                                                                                                data-icon="question-circle"
                                                                                                data-prefix="fas"
                                                                                                focusable="false"
                                                                                                role="img"
                                                                                                style={Object {}}
                                                                                                viewBox="0 0 512 512"
                                                                                                xmlns="http://www.w3.org/2000/svg"
                                                                                              >
                                                                                                <path
                                                                                                  d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                                                                  fill="currentColor"
                                                                                                  style={Object {}}
                                                                                                />
                                                                                              </svg>
                                                                                            </FontAwesomeIcon>
                                                                                            <Overlay
                                                                                              animation={[Function]}
                                                                                              placement="right"
                                                                                              rootClose={false}
                                                                                              show={false}
                                                                                              target={
                                                                                                <span
                                                                                                  class="label-help-target"
                                                                                                >
                                                                                                  <svg
                                                                                                    aria-hidden="true"
                                                                                                    class="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                                                                                                    data-icon="question-circle"
                                                                                                    data-prefix="fas"
                                                                                                    focusable="false"
                                                                                                    role="img"
                                                                                                    viewBox="0 0 512 512"
                                                                                                    xmlns="http://www.w3.org/2000/svg"
                                                                                                  >
                                                                                                    <path
                                                                                                      d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                                                                      fill="currentColor"
                                                                                                    />
                                                                                                  </svg>
                                                                                                </span>
                                                                                              }
                                                                                            >
                                                                                              <Overlay
                                                                                                placement="right"
                                                                                                rootClose={false}
                                                                                                show={false}
                                                                                                target={
                                                                                                  <span
                                                                                                    class="label-help-target"
                                                                                                  >
                                                                                                    <svg
                                                                                                      aria-hidden="true"
                                                                                                      class="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                                                                                                      data-icon="question-circle"
                                                                                                      data-prefix="fas"
                                                                                                      focusable="false"
                                                                                                      role="img"
                                                                                                      viewBox="0 0 512 512"
                                                                                                      xmlns="http://www.w3.org/2000/svg"
                                                                                                    >
                                                                                                      <path
                                                                                                        d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                                                                        fill="currentColor"
                                                                                                      />
                                                                                                    </svg>
                                                                                                  </span>
                                                                                                }
                                                                                                transition={[Function]}
                                                                                              />
                                                                                            </Overlay>
                                                                                          </span>
                                                                                        </LabelHelpTip>
                                                                                      </div>
                                                                                      <FormControl
                                                                                        bsClass="form-control"
                                                                                        componentClass="input"
                                                                                        disabled={false}
                                                                                        id="domainpropertiesrow-importAliases-1-1"
                                                                                        name="domainpropertiesrow-importAliases"
                                                                                        onChange={[Function]}
                                                                                        type="text"
                                                                                        value=""
                                                                                      >
                                                                                        <input
                                                                                          className="form-control"
                                                                                          disabled={false}
                                                                                          id="domainpropertiesrow-importAliases-1-1"
                                                                                          name="domainpropertiesrow-importAliases"
                                                                                          onChange={[Function]}
                                                                                          type="text"
                                                                                          value=""
                                                                                        />
                                                                                      </FormControl>
                                                                                    </div>
                                                                                  </Col>
                                                                                  <Col
                                                                                    bsClass="col"
                                                                                    componentClass="div"
                                                                                    xs={4}
                                                                                  >
                                                                                    <div
                                                                                      className="col-xs-4"
                                                                                    >
                                                                                      <div
                                                                                        className="domain-field-label"
                                                                                      >
                                                                                        URL
                                                                                        <LabelHelpTip
                                                                                          body={[Function]}
                                                                                          customStyle={Object {}}
                                                                                          id="tooltip"
                                                                                          size="1x"
                                                                                          title="URL"
                                                                                        >
                                                                                          <span
                                                                                            className="label-help-target"
                                                                                            onMouseOut={[Function]}
                                                                                            onMouseOver={[Function]}
                                                                                          >
                                                                                            <FontAwesomeIcon
                                                                                              border={false}
                                                                                              className="label-help-icon"
                                                                                              fixedWidth={false}
                                                                                              flip={null}
                                                                                              icon={
                                                                                                Object {
                                                                                                  "icon": Array [
                                                                                                    512,
                                                                                                    512,
                                                                                                    Array [],
                                                                                                    "f059",
                                                                                                    "M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z",
                                                                                                  ],
                                                                                                  "iconName": "question-circle",
                                                                                                  "prefix": "fas",
                                                                                                }
                                                                                              }
                                                                                              inverse={false}
                                                                                              listItem={false}
                                                                                              mask={null}
                                                                                              pull={null}
                                                                                              pulse={false}
                                                                                              rotation={null}
                                                                                              size="1x"
                                                                                              spin={false}
                                                                                              style={Object {}}
                                                                                              symbol={false}
                                                                                              title=""
                                                                                              transform={null}
                                                                                            >
                                                                                              <svg
                                                                                                aria-hidden="true"
                                                                                                className="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                                                                                                data-icon="question-circle"
                                                                                                data-prefix="fas"
                                                                                                focusable="false"
                                                                                                role="img"
                                                                                                style={Object {}}
                                                                                                viewBox="0 0 512 512"
                                                                                                xmlns="http://www.w3.org/2000/svg"
                                                                                              >
                                                                                                <path
                                                                                                  d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                                                                  fill="currentColor"
                                                                                                  style={Object {}}
                                                                                                />
                                                                                              </svg>
                                                                                            </FontAwesomeIcon>
                                                                                            <Overlay
                                                                                              animation={[Function]}
                                                                                              placement="right"
                                                                                              rootClose={false}
                                                                                              show={false}
                                                                                              target={
                                                                                                <span
                                                                                                  class="label-help-target"
                                                                                                >
                                                                                                  <svg
                                                                                                    aria-hidden="true"
                                                                                                    class="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                                                                                                    data-icon="question-circle"
                                                                                                    data-prefix="fas"
                                                                                                    focusable="false"
                                                                                                    role="img"
                                                                                                    viewBox="0 0 512 512"
                                                                                                    xmlns="http://www.w3.org/2000/svg"
                                                                                                  >
                                                                                                    <path
                                                                                                      d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                                                                      fill="currentColor"
                                                                                                    />
                                                                                                  </svg>
                                                                                                </span>
                                                                                              }
                                                                                            >
                                                                                              <Overlay
                                                                                                placement="right"
                                                                                                rootClose={false}
                                                                                                show={false}
                                                                                                target={
                                                                                                  <span
                                                                                                    class="label-help-target"
                                                                                                  >
                                                                                                    <svg
                                                                                                      aria-hidden="true"
                                                                                                      class="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                                                                                                      data-icon="question-circle"
                                                                                                      data-prefix="fas"
                                                                                                      focusable="false"
                                                                                                      role="img"
                                                                                                      viewBox="0 0 512 512"
                                                                                                      xmlns="http://www.w3.org/2000/svg"
                                                                                                    >
                                                                                                      <path
                                                                                                        d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                                                                        fill="currentColor"
                                                                                                      />
                                                                                                    </svg>
                                                                                                  </span>
                                                                                                }
                                                                                                transition={[Function]}
                                                                                              />
                                                                                            </Overlay>
                                                                                          </span>
                                                                                        </LabelHelpTip>
                                                                                      </div>
                                                                                      <FormControl
                                                                                        bsClass="form-control"
                                                                                        componentClass="input"
                                                                                        disabled={false}
                                                                                        id="domainpropertiesrow-URL-1-1"
                                                                                        name="domainpropertiesrow-URL"
                                                                                        onChange={[Function]}
                                                                                        type="text"
                                                                                        value=""
                                                                                      >
                                                                                        <input
                                                                                          className="form-control"
                                                                                          disabled={false}
                                                                                          id="domainpropertiesrow-URL-1-1"
                                                                                          name="domainpropertiesrow-URL"
                                                                                          onChange={[Function]}
                                                                                          type="text"
                                                                                          value=""
                                                                                        />
                                                                                      </FormControl>
                                                                                    </div>
                                                                                  </Col>
                                                                                </div>
                                                                              </div>
                                                                            </Row>
                                                                          </div>
                                                                        </NameAndLinkingOptions>
                                                                      </div>
                                                                    </Col>
                                                                    <Col
                                                                      bsClass="col"
                                                                      componentClass="div"
                                                                      xs={12}
                                                                    >
                                                                      <div
                                                                        className="col-xs-12"
                                                                      >
                                                                        <ConditionalFormattingAndValidation
                                                                          domainFormDisplayOptions={
                                                                            Object {
                                                                              "isDragDisabled": false,
                                                                              "phiLevelDisabled": false,
                                                                              "showAddFieldsButton": true,
                                                                              "showRequired": true,
                                                                              "showTextOptions": true,
                                                                              "showValidators": true,
                                                                            }
                                                                          }
                                                                          domainIndex={1}
                                                                          field={
                                                                            Immutable.Record {
                                                                              "conceptURI": undefined,
                                                                              "conditionalFormats": Immutable.List [],
                                                                              "defaultScale": undefined,
                                                                              "defaultValueType": undefined,
                                                                              "defaultValue": undefined,
                                                                              "defaultDisplayValue": undefined,
                                                                              "description": undefined,
                                                                              "dimension": undefined,
                                                                              "excludeFromShifting": false,
                                                                              "format": undefined,
                                                                              "hidden": false,
                                                                              "importAliases": undefined,
                                                                              "label": undefined,
                                                                              "lookupContainer": undefined,
                                                                              "lookupQuery": undefined,
                                                                              "lookupSchema": undefined,
                                                                              "lookupValidator": undefined,
                                                                              "measure": undefined,
                                                                              "mvEnabled": false,
                                                                              "name": "field2",
                                                                              "PHI": undefined,
                                                                              "primaryKey": undefined,
                                                                              "propertyId": undefined,
                                                                              "propertyURI": undefined,
                                                                              "propertyValidators": Immutable.List [],
                                                                              "rangeValidators": Immutable.List [],
                                                                              "rangeURI": "xsd:int",
                                                                              "regexValidators": Immutable.List [],
                                                                              "recommendedVariable": false,
                                                                              "required": false,
                                                                              "scale": undefined,
                                                                              "URL": undefined,
                                                                              "shownInDetailsView": true,
                                                                              "shownInInsertView": true,
                                                                              "shownInUpdateView": true,
                                                                              "visible": true,
                                                                              "dataType": Immutable.Record {
                                                                                "conceptURI": undefined,
                                                                                "display": "Integer",
                                                                                "name": "int",
                                                                                "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                                                                "alternateRangeURI": "xsd:int",
                                                                                "shortDisplay": undefined,
                                                                                "lookupSchema": undefined,
                                                                                "lookupQuery": undefined,
                                                                              },
                                                                              "lookupQueryValue": undefined,
                                                                              "lookupType": Immutable.Record {
                                                                                "conceptURI": undefined,
                                                                                "display": "Lookup",
                                                                                "name": "lookup",
                                                                                "rangeURI": "xsd:int",
                                                                                "alternateRangeURI": undefined,
                                                                                "shortDisplay": undefined,
                                                                                "lookupSchema": undefined,
                                                                                "lookupQuery": undefined,
                                                                              },
                                                                              "original": Object {
                                                                                "conceptURI": undefined,
                                                                                "dataType": Immutable.Record {
                                                                                  "conceptURI": undefined,
                                                                                  "display": "Integer",
                                                                                  "name": "int",
                                                                                  "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                                                                  "alternateRangeURI": "xsd:int",
                                                                                  "shortDisplay": undefined,
                                                                                  "lookupSchema": undefined,
                                                                                  "lookupQuery": undefined,
                                                                                },
                                                                                "rangeURI": undefined,
                                                                              },
                                                                              "updatedField": false,
                                                                              "isPrimaryKey": false,
                                                                              "lockType": "NotLocked",
                                                                              "wrappedColumnName": undefined,
                                                                            }
                                                                          }
                                                                          hideConditionalFormatting={true}
                                                                          index={1}
                                                                          onChange={[Function]}
                                                                          showingModal={[Function]}
                                                                          successBsStyle="success"
                                                                        >
                                                                          <div>
                                                                            <Row
                                                                              bsClass="row"
                                                                              className="domain-row-expanded"
                                                                              componentClass="div"
                                                                            >
                                                                              <div
                                                                                className="domain-row-expanded row"
                                                                              >
                                                                                <Col
                                                                                  bsClass="col"
                                                                                  componentClass="div"
                                                                                  xs={12}
                                                                                >
                                                                                  <div
                                                                                    className="col-xs-12"
                                                                                  >
                                                                                    <div
                                                                                      className="domain-field-section-heading domain-field-section-hdr"
                                                                                    >
                                                                                      Validation Options
                                                                                    </div>
                                                                                  </div>
                                                                                </Col>
                                                                              </div>
                                                                            </Row>
                                                                            <Row
                                                                              bsClass="row"
                                                                              className="domain-row-expanded"
                                                                              componentClass="div"
                                                                            >
                                                                              <div
                                                                                className="domain-row-expanded row"
                                                                              >
                                                                                <Col
                                                                                  bsClass="col"
                                                                                  componentClass="div"
                                                                                  xs={12}
                                                                                >
                                                                                  <div
                                                                                    className="col-xs-12"
                                                                                  >
                                                                                    <div
                                                                                      className=""
                                                                                    >
                                                                                      <div
                                                                                        className="domain-field-label domain-no-wrap"
                                                                                      >
                                                                                        Create Range Validator
                                                                                        <LabelHelpTip
                                                                                          body={[Function]}
                                                                                          customStyle={Object {}}
                                                                                          id="tooltip"
                                                                                          size="1x"
                                                                                          title="Add Range Validator"
                                                                                        >
                                                                                          <span
                                                                                            className="label-help-target"
                                                                                            onMouseOut={[Function]}
                                                                                            onMouseOver={[Function]}
                                                                                          >
                                                                                            <FontAwesomeIcon
                                                                                              border={false}
                                                                                              className="label-help-icon"
                                                                                              fixedWidth={false}
                                                                                              flip={null}
                                                                                              icon={
                                                                                                Object {
                                                                                                  "icon": Array [
                                                                                                    512,
                                                                                                    512,
                                                                                                    Array [],
                                                                                                    "f059",
                                                                                                    "M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z",
                                                                                                  ],
                                                                                                  "iconName": "question-circle",
                                                                                                  "prefix": "fas",
                                                                                                }
                                                                                              }
                                                                                              inverse={false}
                                                                                              listItem={false}
                                                                                              mask={null}
                                                                                              pull={null}
                                                                                              pulse={false}
                                                                                              rotation={null}
                                                                                              size="1x"
                                                                                              spin={false}
                                                                                              style={Object {}}
                                                                                              symbol={false}
                                                                                              title=""
                                                                                              transform={null}
                                                                                            >
                                                                                              <svg
                                                                                                aria-hidden="true"
                                                                                                className="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                                                                                                data-icon="question-circle"
                                                                                                data-prefix="fas"
                                                                                                focusable="false"
                                                                                                role="img"
                                                                                                style={Object {}}
                                                                                                viewBox="0 0 512 512"
                                                                                                xmlns="http://www.w3.org/2000/svg"
                                                                                              >
                                                                                                <path
                                                                                                  d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                                                                  fill="currentColor"
                                                                                                  style={Object {}}
                                                                                                />
                                                                                              </svg>
                                                                                            </FontAwesomeIcon>
                                                                                            <Overlay
                                                                                              animation={[Function]}
                                                                                              placement="right"
                                                                                              rootClose={false}
                                                                                              show={false}
                                                                                              target={
                                                                                                <span
                                                                                                  class="label-help-target"
                                                                                                >
                                                                                                  <svg
                                                                                                    aria-hidden="true"
                                                                                                    class="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                                                                                                    data-icon="question-circle"
                                                                                                    data-prefix="fas"
                                                                                                    focusable="false"
                                                                                                    role="img"
                                                                                                    viewBox="0 0 512 512"
                                                                                                    xmlns="http://www.w3.org/2000/svg"
                                                                                                  >
                                                                                                    <path
                                                                                                      d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                                                                      fill="currentColor"
                                                                                                    />
                                                                                                  </svg>
                                                                                                </span>
                                                                                              }
                                                                                            >
                                                                                              <Overlay
                                                                                                placement="right"
                                                                                                rootClose={false}
                                                                                                show={false}
                                                                                                target={
                                                                                                  <span
                                                                                                    class="label-help-target"
                                                                                                  >
                                                                                                    <svg
                                                                                                      aria-hidden="true"
                                                                                                      class="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                                                                                                      data-icon="question-circle"
                                                                                                      data-prefix="fas"
                                                                                                      focusable="false"
                                                                                                      role="img"
                                                                                                      viewBox="0 0 512 512"
                                                                                                      xmlns="http://www.w3.org/2000/svg"
                                                                                                    >
                                                                                                      <path
                                                                                                        d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                                                                        fill="currentColor"
                                                                                                      />
                                                                                                    </svg>
                                                                                                  </span>
                                                                                                }
                                                                                                transition={[Function]}
                                                                                              />
                                                                                            </Overlay>
                                                                                          </span>
                                                                                        </LabelHelpTip>
                                                                                      </div>
                                                                                      <div>
                                                                                        <Button
                                                                                          active={false}
                                                                                          block={false}
                                                                                          bsClass="btn"
                                                                                          bsStyle="default"
                                                                                          className="domain-validation-button"
                                                                                          disabled={false}
                                                                                          id="domainpropertiesrow-rangeValidator-1-1"
                                                                                          name="domainpropertiesrow-rangeValidator"
                                                                                          onClick={[Function]}
                                                                                        >
                                                                                          <button
                                                                                            className="domain-validation-button btn btn-default"
                                                                                            disabled={false}
                                                                                            id="domainpropertiesrow-rangeValidator-1-1"
                                                                                            name="domainpropertiesrow-rangeValidator"
                                                                                            onClick={[Function]}
                                                                                            type="button"
                                                                                          >
                                                                                            Add Range
                                                                                          </button>
                                                                                        </Button>
                                                                                        <span
                                                                                          className="domain-text-label"
                                                                                        >
                                                                                          None Set
                                                                                        </span>
                                                                                      </div>
                                                                                    </div>
                                                                                  </div>
                                                                                </Col>
                                                                              </div>
                                                                            </Row>
                                                                          </div>
                                                                        </ConditionalFormattingAndValidation>
                                                                      </div>
                                                                    </Col>
                                                                  </div>
                                                                </div>
                                                              </DomainRowExpandedOptions>
                                                            </div>
                                                          </Transition>
                                                        </Collapse>
                                                      </div>
                                                    </Draggable>
                                                  </ConnectFunction>
                                                </DomainRow>
                                                <DomainRow
                                                  appPropertiesOnly={true}
                                                  availableTypes={
                                                    Immutable.List [
                                                      Immutable.Record {
                                                        "conceptURI": undefined,
                                                        "display": "Text",
                                                        "name": "string",
                                                        "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                        "alternateRangeURI": "xsd:string",
                                                        "shortDisplay": "String",
                                                        "lookupSchema": undefined,
                                                        "lookupQuery": undefined,
                                                      },
                                                      Immutable.Record {
                                                        "conceptURI": undefined,
                                                        "display": "Multi-Line Text",
                                                        "name": "multiLine",
                                                        "rangeURI": "http://www.w3.org/2001/XMLSchema#multiLine",
                                                        "alternateRangeURI": undefined,
                                                        "shortDisplay": undefined,
                                                        "lookupSchema": undefined,
                                                        "lookupQuery": undefined,
                                                      },
                                                      Immutable.Record {
                                                        "conceptURI": undefined,
                                                        "display": "Boolean",
                                                        "name": "boolean",
                                                        "rangeURI": "http://www.w3.org/2001/XMLSchema#boolean",
                                                        "alternateRangeURI": "xsd:boolean",
                                                        "shortDisplay": undefined,
                                                        "lookupSchema": undefined,
                                                        "lookupQuery": undefined,
                                                      },
                                                      Immutable.Record {
                                                        "conceptURI": undefined,
                                                        "display": "Integer",
                                                        "name": "int",
                                                        "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                                        "alternateRangeURI": "xsd:int",
                                                        "shortDisplay": undefined,
                                                        "lookupSchema": undefined,
                                                        "lookupQuery": undefined,
                                                      },
                                                      Immutable.Record {
                                                        "conceptURI": undefined,
                                                        "display": "Decimal",
                                                        "name": "double",
                                                        "rangeURI": "http://www.w3.org/2001/XMLSchema#double",
                                                        "alternateRangeURI": "xsd:double",
                                                        "shortDisplay": undefined,
                                                        "lookupSchema": undefined,
                                                        "lookupQuery": undefined,
                                                      },
                                                      Immutable.Record {
                                                        "conceptURI": undefined,
                                                        "display": "Date Time",
                                                        "name": "dateTime",
                                                        "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                                                        "alternateRangeURI": "xsd:dateTime",
                                                        "shortDisplay": undefined,
                                                        "lookupSchema": undefined,
                                                        "lookupQuery": undefined,
                                                      },
                                                      Immutable.Record {
                                                        "conceptURI": "http://www.labkey.org/exp/xml#flag",
                                                        "display": "Flag",
                                                        "name": "flag",
                                                        "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                        "alternateRangeURI": undefined,
                                                        "shortDisplay": undefined,
                                                        "lookupSchema": undefined,
                                                        "lookupQuery": undefined,
                                                      },
                                                      Immutable.Record {
                                                        "conceptURI": undefined,
                                                        "display": "File",
                                                        "name": "fileLink",
                                                        "rangeURI": "http://cpas.fhcrc.org/exp/xml#fileLink",
                                                        "alternateRangeURI": undefined,
                                                        "shortDisplay": undefined,
                                                        "lookupSchema": undefined,
                                                        "lookupQuery": undefined,
                                                      },
                                                      Immutable.Record {
                                                        "conceptURI": undefined,
                                                        "display": "Attachment",
                                                        "name": "attachment",
                                                        "rangeURI": "http://www.labkey.org/exp/xml#attachment",
                                                        "alternateRangeURI": undefined,
                                                        "shortDisplay": undefined,
                                                        "lookupSchema": undefined,
                                                        "lookupQuery": undefined,
                                                      },
                                                      Immutable.Record {
                                                        "conceptURI": undefined,
                                                        "display": "User",
                                                        "name": "users",
                                                        "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                                        "alternateRangeURI": undefined,
                                                        "shortDisplay": undefined,
                                                        "lookupSchema": "core",
                                                        "lookupQuery": "users",
                                                      },
                                                      Immutable.Record {
                                                        "conceptURI": "http://cpas.labkey.com/Study#ParticipantId",
                                                        "display": "Subject/Participant",
                                                        "name": "ParticipantId",
                                                        "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                        "alternateRangeURI": undefined,
                                                        "shortDisplay": undefined,
                                                        "lookupSchema": undefined,
                                                        "lookupQuery": undefined,
                                                      },
                                                      Immutable.Record {
                                                        "conceptURI": undefined,
                                                        "display": "Lookup",
                                                        "name": "lookup",
                                                        "rangeURI": undefined,
                                                        "alternateRangeURI": undefined,
                                                        "shortDisplay": undefined,
                                                        "lookupSchema": undefined,
                                                        "lookupQuery": undefined,
                                                      },
                                                      Immutable.Record {
                                                        "conceptURI": "http://www.labkey.org/exp/xml#sample",
                                                        "display": "Sample",
                                                        "name": "sample",
                                                        "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                                        "alternateRangeURI": undefined,
                                                        "shortDisplay": undefined,
                                                        "lookupSchema": undefined,
                                                        "lookupQuery": undefined,
                                                      },
                                                    ]
                                                  }
                                                  defaultValueOptions={Immutable.List []}
                                                  domainFormDisplayOptions={
                                                    Object {
                                                      "isDragDisabled": false,
                                                      "phiLevelDisabled": false,
                                                      "showAddFieldsButton": true,
                                                      "showRequired": true,
                                                      "showTextOptions": true,
                                                      "showValidators": true,
                                                    }
                                                  }
                                                  domainId={null}
                                                  domainIndex={1}
                                                  dragging={false}
                                                  expandTransition={300}
                                                  expanded={false}
                                                  field={
                                                    Immutable.Record {
                                                      "conceptURI": undefined,
                                                      "conditionalFormats": Immutable.List [],
                                                      "defaultScale": undefined,
                                                      "defaultValueType": undefined,
                                                      "defaultValue": undefined,
                                                      "defaultDisplayValue": undefined,
                                                      "description": undefined,
                                                      "dimension": undefined,
                                                      "excludeFromShifting": false,
                                                      "format": undefined,
                                                      "hidden": false,
                                                      "importAliases": undefined,
                                                      "label": undefined,
                                                      "lookupContainer": undefined,
                                                      "lookupQuery": undefined,
                                                      "lookupSchema": undefined,
                                                      "lookupValidator": undefined,
                                                      "measure": undefined,
                                                      "mvEnabled": false,
                                                      "name": "field3",
                                                      "PHI": undefined,
                                                      "primaryKey": undefined,
                                                      "propertyId": undefined,
                                                      "propertyURI": undefined,
                                                      "propertyValidators": Immutable.List [],
                                                      "rangeValidators": Immutable.List [],
                                                      "rangeURI": "xsd:dateTime",
                                                      "regexValidators": Immutable.List [],
                                                      "recommendedVariable": false,
                                                      "required": false,
                                                      "scale": undefined,
                                                      "URL": undefined,
                                                      "shownInDetailsView": true,
                                                      "shownInInsertView": true,
                                                      "shownInUpdateView": true,
                                                      "visible": true,
                                                      "dataType": Immutable.Record {
                                                        "conceptURI": undefined,
                                                        "display": "Date Time",
                                                        "name": "dateTime",
                                                        "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                                                        "alternateRangeURI": "xsd:dateTime",
                                                        "shortDisplay": undefined,
                                                        "lookupSchema": undefined,
                                                        "lookupQuery": undefined,
                                                      },
                                                      "lookupQueryValue": undefined,
                                                      "lookupType": Immutable.Record {
                                                        "conceptURI": undefined,
                                                        "display": "Lookup",
                                                        "name": "lookup",
                                                        "rangeURI": "xsd:dateTime",
                                                        "alternateRangeURI": undefined,
                                                        "shortDisplay": undefined,
                                                        "lookupSchema": undefined,
                                                        "lookupQuery": undefined,
                                                      },
                                                      "original": Object {
                                                        "conceptURI": undefined,
                                                        "dataType": Immutable.Record {
                                                          "conceptURI": undefined,
                                                          "display": "Date Time",
                                                          "name": "dateTime",
                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                                                          "alternateRangeURI": "xsd:dateTime",
                                                          "shortDisplay": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                        "rangeURI": undefined,
                                                      },
                                                      "updatedField": false,
                                                      "isPrimaryKey": false,
                                                      "lockType": "NotLocked",
                                                      "wrappedColumnName": undefined,
                                                    }
                                                  }
                                                  helpNoun="field designer"
                                                  index={2}
                                                  key="domain-row-key-2"
                                                  maxPhiLevel="NotPHI"
                                                  onChange={[Function]}
                                                  onDelete={[Function]}
                                                  onExpand={[Function]}
                                                  showDefaultValueSettings={false}
                                                  showFilePropertyType={false}
                                                  successBsStyle="success"
                                                >
                                                  <ConnectFunction
                                                    disableInteractiveElementBlocking={false}
                                                    draggableId="domainpropertiesrow-domaindrag-1-2"
                                                    index={2}
                                                    isDragDisabled={false}
                                                    shouldRespectForcePress={false}
                                                  >
                                                    <Draggable
                                                      disableInteractiveElementBlocking={false}
                                                      draggableId="domainpropertiesrow-domaindrag-1-2"
                                                      drop={[Function]}
                                                      dropAnimationFinished={[Function]}
                                                      index={2}
                                                      isDragDisabled={false}
                                                      lift={[Function]}
                                                      mapped={
                                                        Object {
                                                          "combineTargetFor": null,
                                                          "offset": Object {
                                                            "x": 0,
                                                            "y": 0,
                                                          },
                                                          "shouldAnimateDisplacement": true,
                                                          "snapshot": Object {
                                                            "combineTargetFor": null,
                                                            "combineWith": null,
                                                            "draggingOver": null,
                                                            "dropAnimation": null,
                                                            "isDragging": false,
                                                            "isDropAnimating": false,
                                                            "mode": null,
                                                          },
                                                          "type": "SECONDARY",
                                                        }
                                                      }
                                                      move={[Function]}
                                                      moveByWindowScroll={[Function]}
                                                      moveDown={[Function]}
                                                      moveLeft={[Function]}
                                                      moveRight={[Function]}
                                                      moveUp={[Function]}
                                                      shouldRespectForcePress={false}
                                                    >
                                                      <div
                                                        className="domain-field-row domain-row-border-default"
                                                        data-react-beautiful-dnd-draggable="2"
                                                        onTransitionEnd={null}
                                                        style={
                                                          Object {
                                                            "transform": null,
                                                            "transition": null,
                                                          }
                                                        }
                                                        tabIndex={2}
                                                      >
                                                        <Row
                                                          bsClass="row"
                                                          className="domain-row-container"
                                                          componentClass="div"
                                                          key="domainpropertiesrow-domainrow-1-2"
                                                        >
                                                          <div
                                                            className="domain-row-container row"
                                                          >
                                                            <AdvancedSettings
                                                              defaultValueOptions={Immutable.List []}
                                                              domainFormDisplayOptions={
                                                                Object {
                                                                  "isDragDisabled": false,
                                                                  "phiLevelDisabled": false,
                                                                  "showAddFieldsButton": true,
                                                                  "showRequired": true,
                                                                  "showTextOptions": true,
                                                                  "showValidators": true,
                                                                }
                                                              }
                                                              domainId={null}
                                                              domainIndex={1}
                                                              field={
                                                                Immutable.Record {
                                                                  "conceptURI": undefined,
                                                                  "conditionalFormats": Immutable.List [],
                                                                  "defaultScale": undefined,
                                                                  "defaultValueType": undefined,
                                                                  "defaultValue": undefined,
                                                                  "defaultDisplayValue": undefined,
                                                                  "description": undefined,
                                                                  "dimension": undefined,
                                                                  "excludeFromShifting": false,
                                                                  "format": undefined,
                                                                  "hidden": false,
                                                                  "importAliases": undefined,
                                                                  "label": undefined,
                                                                  "lookupContainer": undefined,
                                                                  "lookupQuery": undefined,
                                                                  "lookupSchema": undefined,
                                                                  "lookupValidator": undefined,
                                                                  "measure": undefined,
                                                                  "mvEnabled": false,
                                                                  "name": "field3",
                                                                  "PHI": undefined,
                                                                  "primaryKey": undefined,
                                                                  "propertyId": undefined,
                                                                  "propertyURI": undefined,
                                                                  "propertyValidators": Immutable.List [],
                                                                  "rangeValidators": Immutable.List [],
                                                                  "rangeURI": "xsd:dateTime",
                                                                  "regexValidators": Immutable.List [],
                                                                  "recommendedVariable": false,
                                                                  "required": false,
                                                                  "scale": undefined,
                                                                  "URL": undefined,
                                                                  "shownInDetailsView": true,
                                                                  "shownInInsertView": true,
                                                                  "shownInUpdateView": true,
                                                                  "visible": true,
                                                                  "dataType": Immutable.Record {
                                                                    "conceptURI": undefined,
                                                                    "display": "Date Time",
                                                                    "name": "dateTime",
                                                                    "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                                                                    "alternateRangeURI": "xsd:dateTime",
                                                                    "shortDisplay": undefined,
                                                                    "lookupSchema": undefined,
                                                                    "lookupQuery": undefined,
                                                                  },
                                                                  "lookupQueryValue": undefined,
                                                                  "lookupType": Immutable.Record {
                                                                    "conceptURI": undefined,
                                                                    "display": "Lookup",
                                                                    "name": "lookup",
                                                                    "rangeURI": "xsd:dateTime",
                                                                    "alternateRangeURI": undefined,
                                                                    "shortDisplay": undefined,
                                                                    "lookupSchema": undefined,
                                                                    "lookupQuery": undefined,
                                                                  },
                                                                  "original": Object {
                                                                    "conceptURI": undefined,
                                                                    "dataType": Immutable.Record {
                                                                      "conceptURI": undefined,
                                                                      "display": "Date Time",
                                                                      "name": "dateTime",
                                                                      "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                                                                      "alternateRangeURI": "xsd:dateTime",
                                                                      "shortDisplay": undefined,
                                                                      "lookupSchema": undefined,
                                                                      "lookupQuery": undefined,
                                                                    },
                                                                    "rangeURI": undefined,
                                                                  },
                                                                  "updatedField": false,
                                                                  "isPrimaryKey": false,
                                                                  "lockType": "NotLocked",
                                                                  "wrappedColumnName": undefined,
                                                                }
                                                              }
                                                              helpNoun="field designer"
                                                              index={2}
                                                              label="field3"
                                                              maxPhiLevel="NotPHI"
                                                              onApply={[Function]}
                                                              onHide={[Function]}
                                                              show={false}
                                                              showDefaultValueSettings={false}
                                                              successBsStyle="success"
                                                            >
                                                              <Modal
                                                                animation={true}
                                                                autoFocus={true}
                                                                backdrop={true}
                                                                bsClass="modal"
                                                                dialogComponentClass={[Function]}
                                                                enforceFocus={true}
                                                                keyboard={true}
                                                                manager={
                                                                  ModalManager {
                                                                    "add": [Function],
                                                                    "containers": Array [],
                                                                    "data": Array [],
                                                                    "handleContainerOverflow": true,
                                                                    "hideSiblingNodes": true,
                                                                    "isTopModal": [Function],
                                                                    "modals": Array [],
                                                                    "remove": [Function],
                                                                  }
                                                                }
                                                                onEnter={[Function]}
                                                                onHide={[Function]}
                                                                renderBackdrop={[Function]}
                                                                restoreFocus={true}
                                                                show={false}
                                                              >
                                                                <Modal
                                                                  autoFocus={true}
                                                                  backdrop={true}
                                                                  backdropClassName="modal-backdrop"
                                                                  backdropTransition={[Function]}
                                                                  containerClassName="modal-open"
                                                                  enforceFocus={true}
                                                                  keyboard={true}
                                                                  manager={
                                                                    ModalManager {
                                                                      "add": [Function],
                                                                      "containers": Array [],
                                                                      "data": Array [],
                                                                      "handleContainerOverflow": true,
                                                                      "hideSiblingNodes": true,
                                                                      "isTopModal": [Function],
                                                                      "modals": Array [],
                                                                      "remove": [Function],
                                                                    }
                                                                  }
                                                                  onEnter={[Function]}
                                                                  onEntering={[Function]}
                                                                  onExited={[Function]}
                                                                  onHide={[Function]}
                                                                  renderBackdrop={[Function]}
                                                                  restoreFocus={true}
                                                                  show={false}
                                                                  transition={[Function]}
                                                                />
                                                              </Modal>
                                                            </AdvancedSettings>
                                                            <div
                                                              aria-roledescription="Draggable item. Press space bar to lift"
                                                              className="domain-row-handle"
                                                              data-react-beautiful-dnd-drag-handle="2"
                                                              draggable={false}
                                                              onBlur={[Function]}
                                                              onDragStart={[Function]}
                                                              onFocus={[Function]}
                                                              onKeyDown={[Function]}
                                                              onMouseDown={[Function]}
                                                              onTouchStart={[Function]}
                                                              tabIndex={0}
                                                            >
                                                              <DragDropHandle>
                                                                <FontAwesomeIcon
                                                                  border={false}
                                                                  className=""
                                                                  fixedWidth={false}
                                                                  flip={null}
                                                                  icon={
                                                                    Object {
                                                                      "icon": Array [
                                                                        320,
                                                                        512,
                                                                        Array [],
                                                                        "f58e",
                                                                        "M96 32H32C14.33 32 0 46.33 0 64v64c0 17.67 14.33 32 32 32h64c17.67 0 32-14.33 32-32V64c0-17.67-14.33-32-32-32zm0 160H32c-17.67 0-32 14.33-32 32v64c0 17.67 14.33 32 32 32h64c17.67 0 32-14.33 32-32v-64c0-17.67-14.33-32-32-32zm0 160H32c-17.67 0-32 14.33-32 32v64c0 17.67 14.33 32 32 32h64c17.67 0 32-14.33 32-32v-64c0-17.67-14.33-32-32-32zM288 32h-64c-17.67 0-32 14.33-32 32v64c0 17.67 14.33 32 32 32h64c17.67 0 32-14.33 32-32V64c0-17.67-14.33-32-32-32zm0 160h-64c-17.67 0-32 14.33-32 32v64c0 17.67 14.33 32 32 32h64c17.67 0 32-14.33 32-32v-64c0-17.67-14.33-32-32-32zm0 160h-64c-17.67 0-32 14.33-32 32v64c0 17.67 14.33 32 32 32h64c17.67 0 32-14.33 32-32v-64c0-17.67-14.33-32-32-32z",
                                                                      ],
                                                                      "iconName": "grip-vertical",
                                                                      "prefix": "fas",
                                                                    }
                                                                  }
                                                                  inverse={false}
                                                                  listItem={false}
                                                                  mask={null}
                                                                  pull={null}
                                                                  pulse={false}
                                                                  rotation={null}
                                                                  size="lg"
                                                                  spin={false}
                                                                  symbol={false}
                                                                  title=""
                                                                  transform={null}
                                                                >
                                                                  <svg
                                                                    aria-hidden="true"
                                                                    className="svg-inline--fa fa-grip-vertical fa-w-10 fa-lg "
                                                                    data-icon="grip-vertical"
                                                                    data-prefix="fas"
                                                                    focusable="false"
                                                                    role="img"
                                                                    style={Object {}}
                                                                    viewBox="0 0 320 512"
                                                                    xmlns="http://www.w3.org/2000/svg"
                                                                  >
                                                                    <path
                                                                      d="M96 32H32C14.33 32 0 46.33 0 64v64c0 17.67 14.33 32 32 32h64c17.67 0 32-14.33 32-32V64c0-17.67-14.33-32-32-32zm0 160H32c-17.67 0-32 14.33-32 32v64c0 17.67 14.33 32 32 32h64c17.67 0 32-14.33 32-32v-64c0-17.67-14.33-32-32-32zm0 160H32c-17.67 0-32 14.33-32 32v64c0 17.67 14.33 32 32 32h64c17.67 0 32-14.33 32-32v-64c0-17.67-14.33-32-32-32zM288 32h-64c-17.67 0-32 14.33-32 32v64c0 17.67 14.33 32 32 32h64c17.67 0 32-14.33 32-32V64c0-17.67-14.33-32-32-32zm0 160h-64c-17.67 0-32 14.33-32 32v64c0 17.67 14.33 32 32 32h64c17.67 0 32-14.33 32-32v-64c0-17.67-14.33-32-32-32zm0 160h-64c-17.67 0-32 14.33-32 32v64c0 17.67 14.33 32 32 32h64c17.67 0 32-14.33 32-32v-64c0-17.67-14.33-32-32-32z"
                                                                      fill="currentColor"
                                                                      style={Object {}}
                                                                    />
                                                                  </svg>
                                                                </FontAwesomeIcon>
                                                              </DragDropHandle>
                                                            </div>
                                                            <div
                                                              className="domain-row-main"
                                                            >
                                                              <Col
                                                                bsClass="col"
                                                                className="domain-row-base-fields"
                                                                componentClass="div"
                                                                xs={6}
                                                              >
                                                                <div
                                                                  className="domain-row-base-fields col-xs-6"
                                                                >
                                                                  <div
                                                                    id="domainpropertiesrow-row-1-2"
                                                                  >
                                                                    <Col
                                                                      bsClass="col"
                                                                      componentClass="div"
                                                                      xs={6}
                                                                    >
                                                                      <div
                                                                        className="col-xs-6"
                                                                      >
                                                                        <FormControl
                                                                          bsClass="form-control"
                                                                          componentClass="input"
                                                                          disabled={false}
                                                                          id="domainpropertiesrow-name-1-2"
                                                                          name="domainpropertiesrow-name"
                                                                          onChange={[Function]}
                                                                          type="text"
                                                                          value="field3"
                                                                        >
                                                                          <input
                                                                            className="form-control"
                                                                            disabled={false}
                                                                            id="domainpropertiesrow-name-1-2"
                                                                            name="domainpropertiesrow-name"
                                                                            onChange={[Function]}
                                                                            type="text"
                                                                            value="field3"
                                                                          />
                                                                        </FormControl>
                                                                      </div>
                                                                    </Col>
                                                                    <Col
                                                                      bsClass="col"
                                                                      componentClass="div"
                                                                      xs={4}
                                                                    >
                                                                      <div
                                                                        className="col-xs-4"
                                                                      >
                                                                        <FormControl
                                                                          bsClass="form-control"
                                                                          componentClass="select"
                                                                          disabled={false}
                                                                          id="domainpropertiesrow-type-1-2"
                                                                          name="domainpropertiesrow-type"
                                                                          onChange={[Function]}
                                                                          value="dateTime"
                                                                        >
                                                                          <select
                                                                            className="form-control"
                                                                            disabled={false}
                                                                            id="domainpropertiesrow-type-1-2"
                                                                            name="domainpropertiesrow-type"
                                                                            onChange={[Function]}
                                                                            value="dateTime"
                                                                          >
                                                                            <option
                                                                              key="0"
                                                                              value="string"
                                                                            >
                                                                              Text
                                                                            </option>
                                                                            <option
                                                                              key="1"
                                                                              value="multiLine"
                                                                            >
                                                                              Multi-Line Text
                                                                            </option>
                                                                            <option
                                                                              key="2"
                                                                              value="boolean"
                                                                            >
                                                                              Boolean
                                                                            </option>
                                                                            <option
                                                                              key="3"
                                                                              value="int"
                                                                            >
                                                                              Integer
                                                                            </option>
                                                                            <option
                                                                              key="4"
                                                                              value="double"
                                                                            >
                                                                              Decimal
                                                                            </option>
                                                                            <option
                                                                              key="5"
                                                                              value="dateTime"
                                                                            >
                                                                              Date Time
                                                                            </option>
                                                                            <option
                                                                              key="6"
                                                                              value="users"
                                                                            >
                                                                              User
                                                                            </option>
                                                                            <option
                                                                              key="7"
                                                                              value="sample"
                                                                            >
                                                                              Sample
                                                                            </option>
                                                                          </select>
                                                                        </FormControl>
                                                                      </div>
                                                                    </Col>
                                                                    <Col
                                                                      bsClass="col"
                                                                      componentClass="div"
                                                                      xs={2}
                                                                    >
                                                                      <div
                                                                        className="col-xs-2"
                                                                      >
                                                                        <div
                                                                          className="domain-field-checkbox-container"
                                                                        >
                                                                          <Checkbox
                                                                            bsClass="checkbox"
                                                                            checked={false}
                                                                            className="domain-field-checkbox"
                                                                            disabled={false}
                                                                            id="domainpropertiesrow-required-1-2"
                                                                            inline={false}
                                                                            name="domainpropertiesrow-required"
                                                                            onChange={[Function]}
                                                                            title=""
                                                                          >
                                                                            <div
                                                                              className="domain-field-checkbox checkbox"
                                                                            >
                                                                              <label
                                                                                title=""
                                                                              >
                                                                                <input
                                                                                  checked={false}
                                                                                  disabled={false}
                                                                                  id="domainpropertiesrow-required-1-2"
                                                                                  name="domainpropertiesrow-required"
                                                                                  onChange={[Function]}
                                                                                  type="checkbox"
                                                                                />
                                                                              </label>
                                                                            </div>
                                                                          </Checkbox>
                                                                        </div>
                                                                      </div>
                                                                    </Col>
                                                                  </div>
                                                                </div>
                                                              </Col>
                                                              <Col
                                                                bsClass="col"
                                                                className="field-details-container"
                                                                componentClass="div"
                                                                xs={6}
                                                              >
                                                                <div
                                                                  className="field-details-container col-xs-6"
                                                                >
                                                                  <div
                                                                    className="domain-field-details"
                                                                    id="domainpropertiesrow-details-1-2"
                                                                  >
                                                                    New Field
                                                                  </div>
                                                                  <div
                                                                    className="domain-field-buttons"
                                                                  >
                                                                    <DeleteIcon
                                                                      iconCls="domain-field-delete-icon"
                                                                      id="domainpropertiesrow-delete-1-2"
                                                                      onDelete={[Function]}
                                                                      title="Remove field"
                                                                    >
                                                                      <span
                                                                        className="field-icon"
                                                                        id="domainpropertiesrow-delete-1-2"
                                                                        onClick={[Function]}
                                                                        title="Remove field"
                                                                      >
                                                                        <FontAwesomeIcon
                                                                          border={false}
                                                                          className="domain-field-delete-icon"
                                                                          fixedWidth={false}
                                                                          flip={null}
                                                                          icon={
                                                                            Object {
                                                                              "icon": Array [
                                                                                512,
                                                                                512,
                                                                                Array [],
                                                                                "f057",
                                                                                "M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8zm121.6 313.1c4.7 4.7 4.7 12.3 0 17L338 377.6c-4.7 4.7-12.3 4.7-17 0L256 312l-65.1 65.6c-4.7 4.7-12.3 4.7-17 0L134.4 338c-4.7-4.7-4.7-12.3 0-17l65.6-65-65.6-65.1c-4.7-4.7-4.7-12.3 0-17l39.6-39.6c4.7-4.7 12.3-4.7 17 0l65 65.7 65.1-65.6c4.7-4.7 12.3-4.7 17 0l39.6 39.6c4.7 4.7 4.7 12.3 0 17L312 256l65.6 65.1z",
                                                                              ],
                                                                              "iconName": "times-circle",
                                                                              "prefix": "fas",
                                                                            }
                                                                          }
                                                                          inverse={false}
                                                                          listItem={false}
                                                                          mask={null}
                                                                          pull={null}
                                                                          pulse={false}
                                                                          rotation={null}
                                                                          size={null}
                                                                          spin={false}
                                                                          symbol={false}
                                                                          title=""
                                                                          transform={null}
                                                                        >
                                                                          <svg
                                                                            aria-hidden="true"
                                                                            className="svg-inline--fa fa-times-circle fa-w-16 domain-field-delete-icon"
                                                                            data-icon="times-circle"
                                                                            data-prefix="fas"
                                                                            focusable="false"
                                                                            role="img"
                                                                            style={Object {}}
                                                                            viewBox="0 0 512 512"
                                                                            xmlns="http://www.w3.org/2000/svg"
                                                                          >
                                                                            <path
                                                                              d="M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8zm121.6 313.1c4.7 4.7 4.7 12.3 0 17L338 377.6c-4.7 4.7-12.3 4.7-17 0L256 312l-65.1 65.6c-4.7 4.7-12.3 4.7-17 0L134.4 338c-4.7-4.7-4.7-12.3 0-17l65.6-65-65.6-65.1c-4.7-4.7-4.7-12.3 0-17l39.6-39.6c4.7-4.7 12.3-4.7 17 0l65 65.7 65.1-65.6c4.7-4.7 12.3-4.7 17 0l39.6 39.6c4.7 4.7 4.7 12.3 0 17L312 256l65.6 65.1z"
                                                                              fill="currentColor"
                                                                              style={Object {}}
                                                                            />
                                                                          </svg>
                                                                        </FontAwesomeIcon>
                                                                      </span>
                                                                    </DeleteIcon>
                                                                    <FieldExpansionToggle
                                                                      cls="domain-field-expand-icon"
                                                                      collapsedTitle="Show additional field properties"
                                                                      expanded={false}
                                                                      expandedTitle="Hide additional field properties"
                                                                      id="domainpropertiesrow-expand-1-2"
                                                                      onClick={[Function]}
                                                                    >
                                                                      <div
                                                                        className="field-icon domain-field-expand-icon"
                                                                        id="domainpropertiesrow-expand-1-2"
                                                                        onClick={[Function]}
                                                                        title="Show additional field properties"
                                                                      >
                                                                        <FontAwesomeIcon
                                                                          border={false}
                                                                          className=""
                                                                          fixedWidth={false}
                                                                          flip={null}
                                                                          icon={
                                                                            Object {
                                                                              "icon": Array [
                                                                                448,
                                                                                512,
                                                                                Array [],
                                                                                "f0fe",
                                                                                "M400 32H48C21.5 32 0 53.5 0 80v352c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V80c0-26.5-21.5-48-48-48zm-32 252c0 6.6-5.4 12-12 12h-92v92c0 6.6-5.4 12-12 12h-56c-6.6 0-12-5.4-12-12v-92H92c-6.6 0-12-5.4-12-12v-56c0-6.6 5.4-12 12-12h92v-92c0-6.6 5.4-12 12-12h56c6.6 0 12 5.4 12 12v92h92c6.6 0 12 5.4 12 12v56z",
                                                                              ],
                                                                              "iconName": "plus-square",
                                                                              "prefix": "fas",
                                                                            }
                                                                          }
                                                                          inverse={false}
                                                                          listItem={false}
                                                                          mask={null}
                                                                          pull={null}
                                                                          pulse={false}
                                                                          rotation={null}
                                                                          size="lg"
                                                                          spin={false}
                                                                          symbol={false}
                                                                          title=""
                                                                          transform={null}
                                                                        >
                                                                          <svg
                                                                            aria-hidden="true"
                                                                            className="svg-inline--fa fa-plus-square fa-w-14 fa-lg "
                                                                            data-icon="plus-square"
                                                                            data-prefix="fas"
                                                                            focusable="false"
                                                                            role="img"
                                                                            style={Object {}}
                                                                            viewBox="0 0 448 512"
                                                                            xmlns="http://www.w3.org/2000/svg"
                                                                          >
                                                                            <path
                                                                              d="M400 32H48C21.5 32 0 53.5 0 80v352c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V80c0-26.5-21.5-48-48-48zm-32 252c0 6.6-5.4 12-12 12h-92v92c0 6.6-5.4 12-12 12h-56c-6.6 0-12-5.4-12-12v-92H92c-6.6 0-12-5.4-12-12v-56c0-6.6 5.4-12 12-12h92v-92c0-6.6 5.4-12 12-12h56c6.6 0 12 5.4 12 12v92h92c6.6 0 12 5.4 12 12v56z"
                                                                              fill="currentColor"
                                                                              style={Object {}}
                                                                            />
                                                                          </svg>
                                                                        </FontAwesomeIcon>
                                                                      </div>
                                                                    </FieldExpansionToggle>
                                                                  </div>
                                                                </div>
                                                              </Col>
                                                            </div>
                                                          </div>
                                                        </Row>
                                                        <Collapse
                                                          appear={false}
                                                          dimension="height"
                                                          getDimensionValue={[Function]}
                                                          in={false}
                                                          mountOnEnter={false}
                                                          onExited={[Function]}
                                                          onExiting={[Function]}
                                                          timeout={300}
                                                          unmountOnExit={false}
                                                        >
                                                          <Transition
                                                            appear={false}
                                                            aria-expanded={null}
                                                            enter={true}
                                                            exit={true}
                                                            in={false}
                                                            mountOnEnter={false}
                                                            onEnter={[Function]}
                                                            onEntered={[Function]}
                                                            onEntering={[Function]}
                                                            onExit={[Function]}
                                                            onExited={[Function]}
                                                            onExiting={[Function]}
                                                            timeout={300}
                                                            unmountOnExit={false}
                                                          >
                                                            <div
                                                              aria-expanded={null}
                                                              className="collapse"
                                                            >
                                                              <DomainRowExpandedOptions
                                                                appPropertiesOnly={true}
                                                                domainFormDisplayOptions={
                                                                  Object {
                                                                    "isDragDisabled": false,
                                                                    "phiLevelDisabled": false,
                                                                    "showAddFieldsButton": true,
                                                                    "showRequired": true,
                                                                    "showTextOptions": true,
                                                                    "showValidators": true,
                                                                  }
                                                                }
                                                                domainIndex={1}
                                                                field={
                                                                  Immutable.Record {
                                                                    "conceptURI": undefined,
                                                                    "conditionalFormats": Immutable.List [],
                                                                    "defaultScale": undefined,
                                                                    "defaultValueType": undefined,
                                                                    "defaultValue": undefined,
                                                                    "defaultDisplayValue": undefined,
                                                                    "description": undefined,
                                                                    "dimension": undefined,
                                                                    "excludeFromShifting": false,
                                                                    "format": undefined,
                                                                    "hidden": false,
                                                                    "importAliases": undefined,
                                                                    "label": undefined,
                                                                    "lookupContainer": undefined,
                                                                    "lookupQuery": undefined,
                                                                    "lookupSchema": undefined,
                                                                    "lookupValidator": undefined,
                                                                    "measure": undefined,
                                                                    "mvEnabled": false,
                                                                    "name": "field3",
                                                                    "PHI": undefined,
                                                                    "primaryKey": undefined,
                                                                    "propertyId": undefined,
                                                                    "propertyURI": undefined,
                                                                    "propertyValidators": Immutable.List [],
                                                                    "rangeValidators": Immutable.List [],
                                                                    "rangeURI": "xsd:dateTime",
                                                                    "regexValidators": Immutable.List [],
                                                                    "recommendedVariable": false,
                                                                    "required": false,
                                                                    "scale": undefined,
                                                                    "URL": undefined,
                                                                    "shownInDetailsView": true,
                                                                    "shownInInsertView": true,
                                                                    "shownInUpdateView": true,
                                                                    "visible": true,
                                                                    "dataType": Immutable.Record {
                                                                      "conceptURI": undefined,
                                                                      "display": "Date Time",
                                                                      "name": "dateTime",
                                                                      "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                                                                      "alternateRangeURI": "xsd:dateTime",
                                                                      "shortDisplay": undefined,
                                                                      "lookupSchema": undefined,
                                                                      "lookupQuery": undefined,
                                                                    },
                                                                    "lookupQueryValue": undefined,
                                                                    "lookupType": Immutable.Record {
                                                                      "conceptURI": undefined,
                                                                      "display": "Lookup",
                                                                      "name": "lookup",
                                                                      "rangeURI": "xsd:dateTime",
                                                                      "alternateRangeURI": undefined,
                                                                      "shortDisplay": undefined,
                                                                      "lookupSchema": undefined,
                                                                      "lookupQuery": undefined,
                                                                    },
                                                                    "original": Object {
                                                                      "conceptURI": undefined,
                                                                      "dataType": Immutable.Record {
                                                                        "conceptURI": undefined,
                                                                        "display": "Date Time",
                                                                        "name": "dateTime",
                                                                        "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                                                                        "alternateRangeURI": "xsd:dateTime",
                                                                        "shortDisplay": undefined,
                                                                        "lookupSchema": undefined,
                                                                        "lookupQuery": undefined,
                                                                      },
                                                                      "rangeURI": undefined,
                                                                    },
                                                                    "updatedField": false,
                                                                    "isPrimaryKey": false,
                                                                    "lockType": "NotLocked",
                                                                    "wrappedColumnName": undefined,
                                                                  }
                                                                }
                                                                index={2}
                                                                onChange={[Function]}
                                                                onMultiChange={[Function]}
                                                                showingModal={[Function]}
                                                                successBsStyle="success"
                                                              >
                                                                <div
                                                                  className="domain-row-container"
                                                                >
                                                                  <div
                                                                    className="domain-row-handle"
                                                                  />
                                                                  <div
                                                                    className="domain-row-container-expanded"
                                                                  >
                                                                    <Col
                                                                      bsClass="col"
                                                                      componentClass="div"
                                                                      xs={12}
                                                                    >
                                                                      <div
                                                                        className="col-xs-12"
                                                                      >
                                                                        <DateTimeFieldOptions
                                                                          domainIndex={1}
                                                                          excludeFromShifting={false}
                                                                          index={2}
                                                                          label="Date and Time Options"
                                                                          lockType="NotLocked"
                                                                          onChange={[Function]}
                                                                        >
                                                                          <div>
                                                                            <Row
                                                                              bsClass="row"
                                                                              className="domain-row-expanded"
                                                                              componentClass="div"
                                                                            >
                                                                              <div
                                                                                className="domain-row-expanded row"
                                                                              >
                                                                                <Col
                                                                                  bsClass="col"
                                                                                  componentClass="div"
                                                                                  xs={12}
                                                                                >
                                                                                  <div
                                                                                    className="col-xs-12"
                                                                                  >
                                                                                    <div
                                                                                      className="domain-field-section-heading"
                                                                                    >
                                                                                      Date and Time Options
                                                                                    </div>
                                                                                  </div>
                                                                                </Col>
                                                                              </div>
                                                                            </Row>
                                                                            <Row
                                                                              bsClass="row"
                                                                              className="domain-row-expanded"
                                                                              componentClass="div"
                                                                            >
                                                                              <div
                                                                                className="domain-row-expanded row"
                                                                              >
                                                                                <Col
                                                                                  bsClass="col"
                                                                                  componentClass="div"
                                                                                  xs={3}
                                                                                >
                                                                                  <div
                                                                                    className="col-xs-3"
                                                                                  >
                                                                                    <div
                                                                                      className="domain-field-label"
                                                                                    >
                                                                                      Format for Dates
                                                                                      <LabelHelpTip
                                                                                        body={[Function]}
                                                                                        customStyle={Object {}}
                                                                                        id="tooltip"
                                                                                        size="1x"
                                                                                        title="Format String"
                                                                                      >
                                                                                        <span
                                                                                          className="label-help-target"
                                                                                          onMouseOut={[Function]}
                                                                                          onMouseOver={[Function]}
                                                                                        >
                                                                                          <FontAwesomeIcon
                                                                                            border={false}
                                                                                            className="label-help-icon"
                                                                                            fixedWidth={false}
                                                                                            flip={null}
                                                                                            icon={
                                                                                              Object {
                                                                                                "icon": Array [
                                                                                                  512,
                                                                                                  512,
                                                                                                  Array [],
                                                                                                  "f059",
                                                                                                  "M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z",
                                                                                                ],
                                                                                                "iconName": "question-circle",
                                                                                                "prefix": "fas",
                                                                                              }
                                                                                            }
                                                                                            inverse={false}
                                                                                            listItem={false}
                                                                                            mask={null}
                                                                                            pull={null}
                                                                                            pulse={false}
                                                                                            rotation={null}
                                                                                            size="1x"
                                                                                            spin={false}
                                                                                            style={Object {}}
                                                                                            symbol={false}
                                                                                            title=""
                                                                                            transform={null}
                                                                                          >
                                                                                            <svg
                                                                                              aria-hidden="true"
                                                                                              className="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                                                                                              data-icon="question-circle"
                                                                                              data-prefix="fas"
                                                                                              focusable="false"
                                                                                              role="img"
                                                                                              style={Object {}}
                                                                                              viewBox="0 0 512 512"
                                                                                              xmlns="http://www.w3.org/2000/svg"
                                                                                            >
                                                                                              <path
                                                                                                d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                                                                fill="currentColor"
                                                                                                style={Object {}}
                                                                                              />
                                                                                            </svg>
                                                                                          </FontAwesomeIcon>
                                                                                          <Overlay
                                                                                            animation={[Function]}
                                                                                            placement="right"
                                                                                            rootClose={false}
                                                                                            show={false}
                                                                                            target={
                                                                                              <span
                                                                                                class="label-help-target"
                                                                                              >
                                                                                                <svg
                                                                                                  aria-hidden="true"
                                                                                                  class="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                                                                                                  data-icon="question-circle"
                                                                                                  data-prefix="fas"
                                                                                                  focusable="false"
                                                                                                  role="img"
                                                                                                  viewBox="0 0 512 512"
                                                                                                  xmlns="http://www.w3.org/2000/svg"
                                                                                                >
                                                                                                  <path
                                                                                                    d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                                                                    fill="currentColor"
                                                                                                  />
                                                                                                </svg>
                                                                                              </span>
                                                                                            }
                                                                                          >
                                                                                            <Overlay
                                                                                              placement="right"
                                                                                              rootClose={false}
                                                                                              show={false}
                                                                                              target={
                                                                                                <span
                                                                                                  class="label-help-target"
                                                                                                >
                                                                                                  <svg
                                                                                                    aria-hidden="true"
                                                                                                    class="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                                                                                                    data-icon="question-circle"
                                                                                                    data-prefix="fas"
                                                                                                    focusable="false"
                                                                                                    role="img"
                                                                                                    viewBox="0 0 512 512"
                                                                                                    xmlns="http://www.w3.org/2000/svg"
                                                                                                  >
                                                                                                    <path
                                                                                                      d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                                                                      fill="currentColor"
                                                                                                    />
                                                                                                  </svg>
                                                                                                </span>
                                                                                              }
                                                                                              transition={[Function]}
                                                                                            />
                                                                                          </Overlay>
                                                                                        </span>
                                                                                      </LabelHelpTip>
                                                                                    </div>
                                                                                  </div>
                                                                                </Col>
                                                                                <Col
                                                                                  bsClass="col"
                                                                                  componentClass="div"
                                                                                  xs={9}
                                                                                >
                                                                                  <div
                                                                                    className="col-xs-9"
                                                                                  />
                                                                                </Col>
                                                                              </div>
                                                                            </Row>
                                                                            <Row
                                                                              bsClass="row"
                                                                              className="domain-row-expanded"
                                                                              componentClass="div"
                                                                            >
                                                                              <div
                                                                                className="domain-row-expanded row"
                                                                              >
                                                                                <Col
                                                                                  bsClass="col"
                                                                                  componentClass="div"
                                                                                  xs={3}
                                                                                >
                                                                                  <div
                                                                                    className="col-xs-3"
                                                                                  >
                                                                                    <FormControl
                                                                                      bsClass="form-control"
                                                                                      componentClass="input"
                                                                                      disabled={false}
                                                                                      id="domainpropertiesrow-format-1-2"
                                                                                      name="domainpropertiesrow-format"
                                                                                      onChange={[Function]}
                                                                                      type="text"
                                                                                      value=""
                                                                                    >
                                                                                      <input
                                                                                        className="form-control"
                                                                                        disabled={false}
                                                                                        id="domainpropertiesrow-format-1-2"
                                                                                        name="domainpropertiesrow-format"
                                                                                        onChange={[Function]}
                                                                                        type="text"
                                                                                        value=""
                                                                                      />
                                                                                    </FormControl>
                                                                                  </div>
                                                                                </Col>
                                                                                <Col
                                                                                  bsClass="col"
                                                                                  componentClass="div"
                                                                                  xs={9}
                                                                                >
                                                                                  <div
                                                                                    className="col-xs-9"
                                                                                  />
                                                                                </Col>
                                                                              </div>
                                                                            </Row>
                                                                          </div>
                                                                        </DateTimeFieldOptions>
                                                                      </div>
                                                                    </Col>
                                                                    <Col
                                                                      bsClass="col"
                                                                      componentClass="div"
                                                                      lg={10}
                                                                      xs={12}
                                                                    >
                                                                      <div
                                                                        className="col-lg-10 col-xs-12"
                                                                      >
                                                                        <NameAndLinkingOptions
                                                                          domainIndex={1}
                                                                          field={
                                                                            Immutable.Record {
                                                                              "conceptURI": undefined,
                                                                              "conditionalFormats": Immutable.List [],
                                                                              "defaultScale": undefined,
                                                                              "defaultValueType": undefined,
                                                                              "defaultValue": undefined,
                                                                              "defaultDisplayValue": undefined,
                                                                              "description": undefined,
                                                                              "dimension": undefined,
                                                                              "excludeFromShifting": false,
                                                                              "format": undefined,
                                                                              "hidden": false,
                                                                              "importAliases": undefined,
                                                                              "label": undefined,
                                                                              "lookupContainer": undefined,
                                                                              "lookupQuery": undefined,
                                                                              "lookupSchema": undefined,
                                                                              "lookupValidator": undefined,
                                                                              "measure": undefined,
                                                                              "mvEnabled": false,
                                                                              "name": "field3",
                                                                              "PHI": undefined,
                                                                              "primaryKey": undefined,
                                                                              "propertyId": undefined,
                                                                              "propertyURI": undefined,
                                                                              "propertyValidators": Immutable.List [],
                                                                              "rangeValidators": Immutable.List [],
                                                                              "rangeURI": "xsd:dateTime",
                                                                              "regexValidators": Immutable.List [],
                                                                              "recommendedVariable": false,
                                                                              "required": false,
                                                                              "scale": undefined,
                                                                              "URL": undefined,
                                                                              "shownInDetailsView": true,
                                                                              "shownInInsertView": true,
                                                                              "shownInUpdateView": true,
                                                                              "visible": true,
                                                                              "dataType": Immutable.Record {
                                                                                "conceptURI": undefined,
                                                                                "display": "Date Time",
                                                                                "name": "dateTime",
                                                                                "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                                                                                "alternateRangeURI": "xsd:dateTime",
                                                                                "shortDisplay": undefined,
                                                                                "lookupSchema": undefined,
                                                                                "lookupQuery": undefined,
                                                                              },
                                                                              "lookupQueryValue": undefined,
                                                                              "lookupType": Immutable.Record {
                                                                                "conceptURI": undefined,
                                                                                "display": "Lookup",
                                                                                "name": "lookup",
                                                                                "rangeURI": "xsd:dateTime",
                                                                                "alternateRangeURI": undefined,
                                                                                "shortDisplay": undefined,
                                                                                "lookupSchema": undefined,
                                                                                "lookupQuery": undefined,
                                                                              },
                                                                              "original": Object {
                                                                                "conceptURI": undefined,
                                                                                "dataType": Immutable.Record {
                                                                                  "conceptURI": undefined,
                                                                                  "display": "Date Time",
                                                                                  "name": "dateTime",
                                                                                  "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                                                                                  "alternateRangeURI": "xsd:dateTime",
                                                                                  "shortDisplay": undefined,
                                                                                  "lookupSchema": undefined,
                                                                                  "lookupQuery": undefined,
                                                                                },
                                                                                "rangeURI": undefined,
                                                                              },
                                                                              "updatedField": false,
                                                                              "isPrimaryKey": false,
                                                                              "lockType": "NotLocked",
                                                                              "wrappedColumnName": undefined,
                                                                            }
                                                                          }
                                                                          index={2}
                                                                          onChange={[Function]}
                                                                        >
                                                                          <div>
                                                                            <Row
                                                                              bsClass="row"
                                                                              className="domain-row-expanded"
                                                                              componentClass="div"
                                                                            >
                                                                              <div
                                                                                className="domain-row-expanded row"
                                                                              >
                                                                                <Col
                                                                                  bsClass="col"
                                                                                  componentClass="div"
                                                                                  xs={12}
                                                                                >
                                                                                  <div
                                                                                    className="col-xs-12"
                                                                                  >
                                                                                    <div
                                                                                      className="domain-field-section-heading domain-field-section-hdr"
                                                                                    >
                                                                                      Name and Linking Options
                                                                                    </div>
                                                                                  </div>
                                                                                </Col>
                                                                              </div>
                                                                            </Row>
                                                                            <Row
                                                                              bsClass="row"
                                                                              className="domain-row-expanded"
                                                                              componentClass="div"
                                                                            >
                                                                              <div
                                                                                className="domain-row-expanded row"
                                                                              >
                                                                                <div>
                                                                                  <Col
                                                                                    bsClass="col"
                                                                                    componentClass="div"
                                                                                    xs={5}
                                                                                  >
                                                                                    <div
                                                                                      className="col-xs-5"
                                                                                    >
                                                                                      <div
                                                                                        className="domain-field-label"
                                                                                      >
                                                                                        Description
                                                                                      </div>
                                                                                      <FormControl
                                                                                        bsClass="form-control"
                                                                                        className="form-control textarea-noresize"
                                                                                        componentClass="textarea"
                                                                                        disabled={false}
                                                                                        id="domainpropertiesrow-description-1-2"
                                                                                        name="domainpropertiesrow-description"
                                                                                        onChange={[Function]}
                                                                                        rows={4}
                                                                                        value=""
                                                                                      >
                                                                                        <textarea
                                                                                          className="form-control textarea-noresize form-control"
                                                                                          disabled={false}
                                                                                          id="domainpropertiesrow-description-1-2"
                                                                                          name="domainpropertiesrow-description"
                                                                                          onChange={[Function]}
                                                                                          rows={4}
                                                                                          value=""
                                                                                        />
                                                                                      </FormControl>
                                                                                    </div>
                                                                                  </Col>
                                                                                  <Col
                                                                                    bsClass="col"
                                                                                    componentClass="div"
                                                                                    xs={3}
                                                                                  >
                                                                                    <div
                                                                                      className="col-xs-3"
                                                                                    >
                                                                                      <div
                                                                                        className="domain-field-label"
                                                                                      >
                                                                                        Label
                                                                                      </div>
                                                                                      <FormControl
                                                                                        bsClass="form-control"
                                                                                        componentClass="input"
                                                                                        disabled={false}
                                                                                        id="domainpropertiesrow-label-1-2"
                                                                                        name="domainpropertiesrow-label"
                                                                                        onChange={[Function]}
                                                                                        type="text"
                                                                                        value=""
                                                                                      >
                                                                                        <input
                                                                                          className="form-control"
                                                                                          disabled={false}
                                                                                          id="domainpropertiesrow-label-1-2"
                                                                                          name="domainpropertiesrow-label"
                                                                                          onChange={[Function]}
                                                                                          type="text"
                                                                                          value=""
                                                                                        />
                                                                                      </FormControl>
                                                                                      <div
                                                                                        className="domain-field-label"
                                                                                      >
                                                                                        Import Aliases
                                                                                        <LabelHelpTip
                                                                                          body={[Function]}
                                                                                          customStyle={Object {}}
                                                                                          id="tooltip"
                                                                                          size="1x"
                                                                                          title="Import Aliases"
                                                                                        >
                                                                                          <span
                                                                                            className="label-help-target"
                                                                                            onMouseOut={[Function]}
                                                                                            onMouseOver={[Function]}
                                                                                          >
                                                                                            <FontAwesomeIcon
                                                                                              border={false}
                                                                                              className="label-help-icon"
                                                                                              fixedWidth={false}
                                                                                              flip={null}
                                                                                              icon={
                                                                                                Object {
                                                                                                  "icon": Array [
                                                                                                    512,
                                                                                                    512,
                                                                                                    Array [],
                                                                                                    "f059",
                                                                                                    "M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z",
                                                                                                  ],
                                                                                                  "iconName": "question-circle",
                                                                                                  "prefix": "fas",
                                                                                                }
                                                                                              }
                                                                                              inverse={false}
                                                                                              listItem={false}
                                                                                              mask={null}
                                                                                              pull={null}
                                                                                              pulse={false}
                                                                                              rotation={null}
                                                                                              size="1x"
                                                                                              spin={false}
                                                                                              style={Object {}}
                                                                                              symbol={false}
                                                                                              title=""
                                                                                              transform={null}
                                                                                            >
                                                                                              <svg
                                                                                                aria-hidden="true"
                                                                                                className="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                                                                                                data-icon="question-circle"
                                                                                                data-prefix="fas"
                                                                                                focusable="false"
                                                                                                role="img"
                                                                                                style={Object {}}
                                                                                                viewBox="0 0 512 512"
                                                                                                xmlns="http://www.w3.org/2000/svg"
                                                                                              >
                                                                                                <path
                                                                                                  d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                                                                  fill="currentColor"
                                                                                                  style={Object {}}
                                                                                                />
                                                                                              </svg>
                                                                                            </FontAwesomeIcon>
                                                                                            <Overlay
                                                                                              animation={[Function]}
                                                                                              placement="right"
                                                                                              rootClose={false}
                                                                                              show={false}
                                                                                              target={
                                                                                                <span
                                                                                                  class="label-help-target"
                                                                                                >
                                                                                                  <svg
                                                                                                    aria-hidden="true"
                                                                                                    class="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                                                                                                    data-icon="question-circle"
                                                                                                    data-prefix="fas"
                                                                                                    focusable="false"
                                                                                                    role="img"
                                                                                                    viewBox="0 0 512 512"
                                                                                                    xmlns="http://www.w3.org/2000/svg"
                                                                                                  >
                                                                                                    <path
                                                                                                      d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                                                                      fill="currentColor"
                                                                                                    />
                                                                                                  </svg>
                                                                                                </span>
                                                                                              }
                                                                                            >
                                                                                              <Overlay
                                                                                                placement="right"
                                                                                                rootClose={false}
                                                                                                show={false}
                                                                                                target={
                                                                                                  <span
                                                                                                    class="label-help-target"
                                                                                                  >
                                                                                                    <svg
                                                                                                      aria-hidden="true"
                                                                                                      class="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                                                                                                      data-icon="question-circle"
                                                                                                      data-prefix="fas"
                                                                                                      focusable="false"
                                                                                                      role="img"
                                                                                                      viewBox="0 0 512 512"
                                                                                                      xmlns="http://www.w3.org/2000/svg"
                                                                                                    >
                                                                                                      <path
                                                                                                        d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                                                                        fill="currentColor"
                                                                                                      />
                                                                                                    </svg>
                                                                                                  </span>
                                                                                                }
                                                                                                transition={[Function]}
                                                                                              />
                                                                                            </Overlay>
                                                                                          </span>
                                                                                        </LabelHelpTip>
                                                                                      </div>
                                                                                      <FormControl
                                                                                        bsClass="form-control"
                                                                                        componentClass="input"
                                                                                        disabled={false}
                                                                                        id="domainpropertiesrow-importAliases-1-2"
                                                                                        name="domainpropertiesrow-importAliases"
                                                                                        onChange={[Function]}
                                                                                        type="text"
                                                                                        value=""
                                                                                      >
                                                                                        <input
                                                                                          className="form-control"
                                                                                          disabled={false}
                                                                                          id="domainpropertiesrow-importAliases-1-2"
                                                                                          name="domainpropertiesrow-importAliases"
                                                                                          onChange={[Function]}
                                                                                          type="text"
                                                                                          value=""
                                                                                        />
                                                                                      </FormControl>
                                                                                    </div>
                                                                                  </Col>
                                                                                  <Col
                                                                                    bsClass="col"
                                                                                    componentClass="div"
                                                                                    xs={4}
                                                                                  >
                                                                                    <div
                                                                                      className="col-xs-4"
                                                                                    >
                                                                                      <div
                                                                                        className="domain-field-label"
                                                                                      >
                                                                                        URL
                                                                                        <LabelHelpTip
                                                                                          body={[Function]}
                                                                                          customStyle={Object {}}
                                                                                          id="tooltip"
                                                                                          size="1x"
                                                                                          title="URL"
                                                                                        >
                                                                                          <span
                                                                                            className="label-help-target"
                                                                                            onMouseOut={[Function]}
                                                                                            onMouseOver={[Function]}
                                                                                          >
                                                                                            <FontAwesomeIcon
                                                                                              border={false}
                                                                                              className="label-help-icon"
                                                                                              fixedWidth={false}
                                                                                              flip={null}
                                                                                              icon={
                                                                                                Object {
                                                                                                  "icon": Array [
                                                                                                    512,
                                                                                                    512,
                                                                                                    Array [],
                                                                                                    "f059",
                                                                                                    "M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z",
                                                                                                  ],
                                                                                                  "iconName": "question-circle",
                                                                                                  "prefix": "fas",
                                                                                                }
                                                                                              }
                                                                                              inverse={false}
                                                                                              listItem={false}
                                                                                              mask={null}
                                                                                              pull={null}
                                                                                              pulse={false}
                                                                                              rotation={null}
                                                                                              size="1x"
                                                                                              spin={false}
                                                                                              style={Object {}}
                                                                                              symbol={false}
                                                                                              title=""
                                                                                              transform={null}
                                                                                            >
                                                                                              <svg
                                                                                                aria-hidden="true"
                                                                                                className="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                                                                                                data-icon="question-circle"
                                                                                                data-prefix="fas"
                                                                                                focusable="false"
                                                                                                role="img"
                                                                                                style={Object {}}
                                                                                                viewBox="0 0 512 512"
                                                                                                xmlns="http://www.w3.org/2000/svg"
                                                                                              >
                                                                                                <path
                                                                                                  d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                                                                  fill="currentColor"
                                                                                                  style={Object {}}
                                                                                                />
                                                                                              </svg>
                                                                                            </FontAwesomeIcon>
                                                                                            <Overlay
                                                                                              animation={[Function]}
                                                                                              placement="right"
                                                                                              rootClose={false}
                                                                                              show={false}
                                                                                              target={
                                                                                                <span
                                                                                                  class="label-help-target"
                                                                                                >
                                                                                                  <svg
                                                                                                    aria-hidden="true"
                                                                                                    class="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                                                                                                    data-icon="question-circle"
                                                                                                    data-prefix="fas"
                                                                                                    focusable="false"
                                                                                                    role="img"
                                                                                                    viewBox="0 0 512 512"
                                                                                                    xmlns="http://www.w3.org/2000/svg"
                                                                                                  >
                                                                                                    <path
                                                                                                      d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                                                                      fill="currentColor"
                                                                                                    />
                                                                                                  </svg>
                                                                                                </span>
                                                                                              }
                                                                                            >
                                                                                              <Overlay
                                                                                                placement="right"
                                                                                                rootClose={false}
                                                                                                show={false}
                                                                                                target={
                                                                                                  <span
                                                                                                    class="label-help-target"
                                                                                                  >
                                                                                                    <svg
                                                                                                      aria-hidden="true"
                                                                                                      class="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                                                                                                      data-icon="question-circle"
                                                                                                      data-prefix="fas"
                                                                                                      focusable="false"
                                                                                                      role="img"
                                                                                                      viewBox="0 0 512 512"
                                                                                                      xmlns="http://www.w3.org/2000/svg"
                                                                                                    >
                                                                                                      <path
                                                                                                        d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                                                                        fill="currentColor"
                                                                                                      />
                                                                                                    </svg>
                                                                                                  </span>
                                                                                                }
                                                                                                transition={[Function]}
                                                                                              />
                                                                                            </Overlay>
                                                                                          </span>
                                                                                        </LabelHelpTip>
                                                                                      </div>
                                                                                      <FormControl
                                                                                        bsClass="form-control"
                                                                                        componentClass="input"
                                                                                        disabled={false}
                                                                                        id="domainpropertiesrow-URL-1-2"
                                                                                        name="domainpropertiesrow-URL"
                                                                                        onChange={[Function]}
                                                                                        type="text"
                                                                                        value=""
                                                                                      >
                                                                                        <input
                                                                                          className="form-control"
                                                                                          disabled={false}
                                                                                          id="domainpropertiesrow-URL-1-2"
                                                                                          name="domainpropertiesrow-URL"
                                                                                          onChange={[Function]}
                                                                                          type="text"
                                                                                          value=""
                                                                                        />
                                                                                      </FormControl>
                                                                                    </div>
                                                                                  </Col>
                                                                                </div>
                                                                              </div>
                                                                            </Row>
                                                                          </div>
                                                                        </NameAndLinkingOptions>
                                                                      </div>
                                                                    </Col>
                                                                    <Col
                                                                      bsClass="col"
                                                                      componentClass="div"
                                                                      xs={12}
                                                                    >
                                                                      <div
                                                                        className="col-xs-12"
                                                                      >
                                                                        <ConditionalFormattingAndValidation
                                                                          domainFormDisplayOptions={
                                                                            Object {
                                                                              "isDragDisabled": false,
                                                                              "phiLevelDisabled": false,
                                                                              "showAddFieldsButton": true,
                                                                              "showRequired": true,
                                                                              "showTextOptions": true,
                                                                              "showValidators": true,
                                                                            }
                                                                          }
                                                                          domainIndex={1}
                                                                          field={
                                                                            Immutable.Record {
                                                                              "conceptURI": undefined,
                                                                              "conditionalFormats": Immutable.List [],
                                                                              "defaultScale": undefined,
                                                                              "defaultValueType": undefined,
                                                                              "defaultValue": undefined,
                                                                              "defaultDisplayValue": undefined,
                                                                              "description": undefined,
                                                                              "dimension": undefined,
                                                                              "excludeFromShifting": false,
                                                                              "format": undefined,
                                                                              "hidden": false,
                                                                              "importAliases": undefined,
                                                                              "label": undefined,
                                                                              "lookupContainer": undefined,
                                                                              "lookupQuery": undefined,
                                                                              "lookupSchema": undefined,
                                                                              "lookupValidator": undefined,
                                                                              "measure": undefined,
                                                                              "mvEnabled": false,
                                                                              "name": "field3",
                                                                              "PHI": undefined,
                                                                              "primaryKey": undefined,
                                                                              "propertyId": undefined,
                                                                              "propertyURI": undefined,
                                                                              "propertyValidators": Immutable.List [],
                                                                              "rangeValidators": Immutable.List [],
                                                                              "rangeURI": "xsd:dateTime",
                                                                              "regexValidators": Immutable.List [],
                                                                              "recommendedVariable": false,
                                                                              "required": false,
                                                                              "scale": undefined,
                                                                              "URL": undefined,
                                                                              "shownInDetailsView": true,
                                                                              "shownInInsertView": true,
                                                                              "shownInUpdateView": true,
                                                                              "visible": true,
                                                                              "dataType": Immutable.Record {
                                                                                "conceptURI": undefined,
                                                                                "display": "Date Time",
                                                                                "name": "dateTime",
                                                                                "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                                                                                "alternateRangeURI": "xsd:dateTime",
                                                                                "shortDisplay": undefined,
                                                                                "lookupSchema": undefined,
                                                                                "lookupQuery": undefined,
                                                                              },
                                                                              "lookupQueryValue": undefined,
                                                                              "lookupType": Immutable.Record {
                                                                                "conceptURI": undefined,
                                                                                "display": "Lookup",
                                                                                "name": "lookup",
                                                                                "rangeURI": "xsd:dateTime",
                                                                                "alternateRangeURI": undefined,
                                                                                "shortDisplay": undefined,
                                                                                "lookupSchema": undefined,
                                                                                "lookupQuery": undefined,
                                                                              },
                                                                              "original": Object {
                                                                                "conceptURI": undefined,
                                                                                "dataType": Immutable.Record {
                                                                                  "conceptURI": undefined,
                                                                                  "display": "Date Time",
                                                                                  "name": "dateTime",
                                                                                  "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                                                                                  "alternateRangeURI": "xsd:dateTime",
                                                                                  "shortDisplay": undefined,
                                                                                  "lookupSchema": undefined,
                                                                                  "lookupQuery": undefined,
                                                                                },
                                                                                "rangeURI": undefined,
                                                                              },
                                                                              "updatedField": false,
                                                                              "isPrimaryKey": false,
                                                                              "lockType": "NotLocked",
                                                                              "wrappedColumnName": undefined,
                                                                            }
                                                                          }
                                                                          hideConditionalFormatting={true}
                                                                          index={2}
                                                                          onChange={[Function]}
                                                                          showingModal={[Function]}
                                                                          successBsStyle="success"
                                                                        >
                                                                          <div>
                                                                            <Row
                                                                              bsClass="row"
                                                                              className="domain-row-expanded"
                                                                              componentClass="div"
                                                                            >
                                                                              <div
                                                                                className="domain-row-expanded row"
                                                                              >
                                                                                <Col
                                                                                  bsClass="col"
                                                                                  componentClass="div"
                                                                                  xs={12}
                                                                                >
                                                                                  <div
                                                                                    className="col-xs-12"
                                                                                  >
                                                                                    <div
                                                                                      className="domain-field-section-heading domain-field-section-hdr"
                                                                                    >
                                                                                      Validation Options
                                                                                    </div>
                                                                                  </div>
                                                                                </Col>
                                                                              </div>
                                                                            </Row>
                                                                            <Row
                                                                              bsClass="row"
                                                                              className="domain-row-expanded"
                                                                              componentClass="div"
                                                                            >
                                                                              <div
                                                                                className="domain-row-expanded row"
                                                                              >
                                                                                <Col
                                                                                  bsClass="col"
                                                                                  componentClass="div"
                                                                                  xs={12}
                                                                                >
                                                                                  <div
                                                                                    className="col-xs-12"
                                                                                  >
                                                                                    <div
                                                                                      className=""
                                                                                    >
                                                                                      <div
                                                                                        className="domain-field-label domain-no-wrap"
                                                                                      >
                                                                                        Create Range Validator
                                                                                        <LabelHelpTip
                                                                                          body={[Function]}
                                                                                          customStyle={Object {}}
                                                                                          id="tooltip"
                                                                                          size="1x"
                                                                                          title="Add Range Validator"
                                                                                        >
                                                                                          <span
                                                                                            className="label-help-target"
                                                                                            onMouseOut={[Function]}
                                                                                            onMouseOver={[Function]}
                                                                                          >
                                                                                            <FontAwesomeIcon
                                                                                              border={false}
                                                                                              className="label-help-icon"
                                                                                              fixedWidth={false}
                                                                                              flip={null}
                                                                                              icon={
                                                                                                Object {
                                                                                                  "icon": Array [
                                                                                                    512,
                                                                                                    512,
                                                                                                    Array [],
                                                                                                    "f059",
                                                                                                    "M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z",
                                                                                                  ],
                                                                                                  "iconName": "question-circle",
                                                                                                  "prefix": "fas",
                                                                                                }
                                                                                              }
                                                                                              inverse={false}
                                                                                              listItem={false}
                                                                                              mask={null}
                                                                                              pull={null}
                                                                                              pulse={false}
                                                                                              rotation={null}
                                                                                              size="1x"
                                                                                              spin={false}
                                                                                              style={Object {}}
                                                                                              symbol={false}
                                                                                              title=""
                                                                                              transform={null}
                                                                                            >
                                                                                              <svg
                                                                                                aria-hidden="true"
                                                                                                className="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                                                                                                data-icon="question-circle"
                                                                                                data-prefix="fas"
                                                                                                focusable="false"
                                                                                                role="img"
                                                                                                style={Object {}}
                                                                                                viewBox="0 0 512 512"
                                                                                                xmlns="http://www.w3.org/2000/svg"
                                                                                              >
                                                                                                <path
                                                                                                  d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                                                                  fill="currentColor"
                                                                                                  style={Object {}}
                                                                                                />
                                                                                              </svg>
                                                                                            </FontAwesomeIcon>
                                                                                            <Overlay
                                                                                              animation={[Function]}
                                                                                              placement="right"
                                                                                              rootClose={false}
                                                                                              show={false}
                                                                                              target={
                                                                                                <span
                                                                                                  class="label-help-target"
                                                                                                >
                                                                                                  <svg
                                                                                                    aria-hidden="true"
                                                                                                    class="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                                                                                                    data-icon="question-circle"
                                                                                                    data-prefix="fas"
                                                                                                    focusable="false"
                                                                                                    role="img"
                                                                                                    viewBox="0 0 512 512"
                                                                                                    xmlns="http://www.w3.org/2000/svg"
                                                                                                  >
                                                                                                    <path
                                                                                                      d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                                                                      fill="currentColor"
                                                                                                    />
                                                                                                  </svg>
                                                                                                </span>
                                                                                              }
                                                                                            >
                                                                                              <Overlay
                                                                                                placement="right"
                                                                                                rootClose={false}
                                                                                                show={false}
                                                                                                target={
                                                                                                  <span
                                                                                                    class="label-help-target"
                                                                                                  >
                                                                                                    <svg
                                                                                                      aria-hidden="true"
                                                                                                      class="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                                                                                                      data-icon="question-circle"
                                                                                                      data-prefix="fas"
                                                                                                      focusable="false"
                                                                                                      role="img"
                                                                                                      viewBox="0 0 512 512"
                                                                                                      xmlns="http://www.w3.org/2000/svg"
                                                                                                    >
                                                                                                      <path
                                                                                                        d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                                                                        fill="currentColor"
                                                                                                      />
                                                                                                    </svg>
                                                                                                  </span>
                                                                                                }
                                                                                                transition={[Function]}
                                                                                              />
                                                                                            </Overlay>
                                                                                          </span>
                                                                                        </LabelHelpTip>
                                                                                      </div>
                                                                                      <div>
                                                                                        <Button
                                                                                          active={false}
                                                                                          block={false}
                                                                                          bsClass="btn"
                                                                                          bsStyle="default"
                                                                                          className="domain-validation-button"
                                                                                          disabled={false}
                                                                                          id="domainpropertiesrow-rangeValidator-1-2"
                                                                                          name="domainpropertiesrow-rangeValidator"
                                                                                          onClick={[Function]}
                                                                                        >
                                                                                          <button
                                                                                            className="domain-validation-button btn btn-default"
                                                                                            disabled={false}
                                                                                            id="domainpropertiesrow-rangeValidator-1-2"
                                                                                            name="domainpropertiesrow-rangeValidator"
                                                                                            onClick={[Function]}
                                                                                            type="button"
                                                                                          >
                                                                                            Add Range
                                                                                          </button>
                                                                                        </Button>
                                                                                        <span
                                                                                          className="domain-text-label"
                                                                                        >
                                                                                          None Set
                                                                                        </span>
                                                                                      </div>
                                                                                    </div>
                                                                                  </div>
                                                                                </Col>
                                                                              </div>
                                                                            </Row>
                                                                          </div>
                                                                        </ConditionalFormattingAndValidation>
                                                                      </div>
                                                                    </Col>
                                                                  </div>
                                                                </div>
                                                              </DomainRowExpandedOptions>
                                                            </div>
                                                          </Transition>
                                                        </Collapse>
                                                      </div>
                                                    </Draggable>
                                                  </ConnectFunction>
                                                </DomainRow>
                                                <AnimateInOut
                                                  on={null}
                                                  shouldAnimate={true}
                                                />
                                              </form>
                                            </Form>
                                          </div>
                                        </Droppable>
                                      </ConnectFunction>
                                    </div>
                                  </Container>
                                </Provider>
                              </App>
                            </ErrorBoundary>
                          </DragDropContext>
                          <Row
                            bsClass="row"
                            className="domain-add-field-row"
                            componentClass="div"
                          >
                            <div
                              className="domain-add-field-row row"
                            >
                              <Col
                                bsClass="col"
                                componentClass="div"
                                xs={12}
                              >
                                <div
                                  className="col-xs-12"
                                >
                                  <AddEntityButton
                                    buttonClass="domain-form-add-btn"
                                    containerClass="form-group"
                                    entity="Field"
                                    helperTitle="More Info"
                                    onClick={[Function]}
                                  >
                                    <div
                                      className="form-group"
                                    >
                                      <div
                                        className="domain-form-add-btn"
                                      >
                                        <span
                                          className="container--action-button btn btn-default"
                                          onClick={[Function]}
                                        >
                                          <i
                                            className="fa fa-plus-circle container--addition-icon"
                                          />
                                           Add 
                                          Field
                                        </span>
                                      </div>
                                    </div>
                                  </AddEntityButton>
                                </div>
                              </Col>
                            </div>
                          </Row>
                        </div>
                      </div>
                    </Transition>
                  </Collapse>
                </PanelCollapse>
              </PanelBody>
            </div>
          </Panel>
        </Uncontrolled(Panel)>
      </DomainFormImpl>
    </LookupProvider>
  </DomainForm>
  <div
    className="domain-form-panel domain-designer-buttons"
  >
    <Button
      active={false}
      block={false}
      bsClass="btn"
      bsStyle="default"
      disabled={false}
      onClick={[Function]}
    >
      <button
        className="btn btn-default"
        disabled={false}
        onClick={[Function]}
        type="button"
      >
        Cancel
      </button>
    </Button>
    <Button
      active={false}
      block={false}
      bsClass="btn"
      bsStyle="success"
      className="pull-right"
      disabled={false}
      onClick={[Function]}
    >
      <button
        className="pull-right btn btn-success"
        disabled={false}
        onClick={[Function]}
        type="button"
      >
        Save
      </button>
    </Button>
  </div>
</AssayDesignerPanels>
`;

exports[`AssayDesignerPanels default properties 1`] = `
<AssayDesignerPanels
  initModel={
    Immutable.Record {
      "allowBackgroundUpload": false,
      "allowEditableResults": false,
      "allowQCStates": false,
      "allowSpacesInPath": false,
      "allowTransformationScript": false,
      "allowPlateMetadata": false,
      "autoCopyTargetContainer": undefined,
      "autoCopyTargetContainerId": undefined,
      "availableDetectionMethods": undefined,
      "availableMetadataInputFormats": undefined,
      "availablePlateTemplates": undefined,
      "backgroundUpload": false,
      "description": undefined,
      "domains": Immutable.List [
        Immutable.Record {
          "name": "Batch Fields",
          "container": undefined,
          "description": undefined,
          "domainURI": undefined,
          "domainId": null,
          "allowFileLinkProperties": true,
          "allowAttachmentProperties": true,
          "allowFlagProperties": true,
          "showDefaultValueSettings": false,
          "defaultDefaultValueType": undefined,
          "defaultValueOptions": Immutable.List [],
          "fields": Immutable.List [],
          "indices": Immutable.List [],
          "domainException": undefined,
          "mandatoryFieldNames": Immutable.List [],
          "reservedFieldNames": Immutable.List [],
          "newDesignFields": undefined,
          "instructions": undefined,
        },
        Immutable.Record {
          "name": "Run Fields",
          "container": undefined,
          "description": undefined,
          "domainURI": undefined,
          "domainId": null,
          "allowFileLinkProperties": true,
          "allowAttachmentProperties": true,
          "allowFlagProperties": true,
          "showDefaultValueSettings": false,
          "defaultDefaultValueType": undefined,
          "defaultValueOptions": Immutable.List [],
          "fields": Immutable.List [],
          "indices": Immutable.List [],
          "domainException": undefined,
          "mandatoryFieldNames": Immutable.List [],
          "reservedFieldNames": Immutable.List [],
          "newDesignFields": undefined,
          "instructions": undefined,
        },
        Immutable.Record {
          "name": "Data Fields",
          "container": undefined,
          "description": undefined,
          "domainURI": undefined,
          "domainId": null,
          "allowFileLinkProperties": true,
          "allowAttachmentProperties": true,
          "allowFlagProperties": true,
          "showDefaultValueSettings": false,
          "defaultDefaultValueType": undefined,
          "defaultValueOptions": Immutable.List [],
          "fields": Immutable.List [],
          "indices": Immutable.List [],
          "domainException": undefined,
          "mandatoryFieldNames": Immutable.List [],
          "reservedFieldNames": Immutable.List [],
          "newDesignFields": undefined,
          "instructions": undefined,
        },
      ],
      "editableResults": false,
      "editableRuns": false,
      "exception": undefined,
      "metadataInputFormatHelp": undefined,
      "moduleTransformScripts": undefined,
      "name": undefined,
      "plateMetadata": undefined,
      "protocolId": undefined,
      "protocolParameters": undefined,
      "protocolTransformScripts": undefined,
      "providerName": "General",
      "saveScriptFiles": false,
      "selectedDetectionMethod": undefined,
      "selectedMetadataInputFormat": undefined,
      "selectedPlateTemplate": undefined,
      "qcEnabled": undefined,
    }
  }
  onCancel={[Function]}
  onComplete={[Function]}
>
  <ComponentWithDomainPropertiesPanelCollapse
    controlledCollapse={true}
    initCollapsed={false}
    model={
      Immutable.Record {
        "allowBackgroundUpload": false,
        "allowEditableResults": false,
        "allowQCStates": false,
        "allowSpacesInPath": false,
        "allowTransformationScript": false,
        "allowPlateMetadata": false,
        "autoCopyTargetContainer": undefined,
        "autoCopyTargetContainerId": undefined,
        "availableDetectionMethods": undefined,
        "availableMetadataInputFormats": undefined,
        "availablePlateTemplates": undefined,
        "backgroundUpload": false,
        "description": undefined,
        "domains": Immutable.List [
          Immutable.Record {
            "name": "Batch Fields",
            "container": undefined,
            "description": undefined,
            "domainURI": undefined,
            "domainId": null,
            "allowFileLinkProperties": true,
            "allowAttachmentProperties": true,
            "allowFlagProperties": true,
            "showDefaultValueSettings": false,
            "defaultDefaultValueType": undefined,
            "defaultValueOptions": Immutable.List [],
            "fields": Immutable.List [],
            "indices": Immutable.List [],
            "domainException": undefined,
            "mandatoryFieldNames": Immutable.List [],
            "reservedFieldNames": Immutable.List [],
            "newDesignFields": undefined,
            "instructions": undefined,
          },
          Immutable.Record {
            "name": "Run Fields",
            "container": undefined,
            "description": undefined,
            "domainURI": undefined,
            "domainId": null,
            "allowFileLinkProperties": true,
            "allowAttachmentProperties": true,
            "allowFlagProperties": true,
            "showDefaultValueSettings": false,
            "defaultDefaultValueType": undefined,
            "defaultValueOptions": Immutable.List [],
            "fields": Immutable.List [],
            "indices": Immutable.List [],
            "domainException": undefined,
            "mandatoryFieldNames": Immutable.List [],
            "reservedFieldNames": Immutable.List [],
            "newDesignFields": undefined,
            "instructions": undefined,
          },
          Immutable.Record {
            "name": "Data Fields",
            "container": undefined,
            "description": undefined,
            "domainURI": undefined,
            "domainId": null,
            "allowFileLinkProperties": true,
            "allowAttachmentProperties": true,
            "allowFlagProperties": true,
            "showDefaultValueSettings": false,
            "defaultDefaultValueType": undefined,
            "defaultValueOptions": Immutable.List [],
            "fields": Immutable.List [],
            "indices": Immutable.List [],
            "domainException": undefined,
            "mandatoryFieldNames": Immutable.List [],
            "reservedFieldNames": Immutable.List [],
            "newDesignFields": undefined,
            "instructions": undefined,
          },
        ],
        "editableResults": false,
        "editableRuns": false,
        "exception": undefined,
        "metadataInputFormatHelp": undefined,
        "moduleTransformScripts": undefined,
        "name": undefined,
        "plateMetadata": undefined,
        "protocolId": undefined,
        "protocolParameters": undefined,
        "protocolTransformScripts": undefined,
        "providerName": "General",
        "saveScriptFiles": false,
        "selectedDetectionMethod": undefined,
        "selectedMetadataInputFormat": undefined,
        "selectedPlateTemplate": undefined,
        "qcEnabled": undefined,
      }
    }
    onChange={[Function]}
    onToggle={[Function]}
    panelStatus="NONE"
    validate={false}
  >
    <AssayPropertiesPanelImpl
      appPropertiesOnly={false}
      asPanel={true}
      collapsed={false}
      controlledCollapse={true}
      helpTopic="defineAssaySchema"
      model={
        Immutable.Record {
          "allowBackgroundUpload": false,
          "allowEditableResults": false,
          "allowQCStates": false,
          "allowSpacesInPath": false,
          "allowTransformationScript": false,
          "allowPlateMetadata": false,
          "autoCopyTargetContainer": undefined,
          "autoCopyTargetContainerId": undefined,
          "availableDetectionMethods": undefined,
          "availableMetadataInputFormats": undefined,
          "availablePlateTemplates": undefined,
          "backgroundUpload": false,
          "description": undefined,
          "domains": Immutable.List [
            Immutable.Record {
              "name": "Batch Fields",
              "container": undefined,
              "description": undefined,
              "domainURI": undefined,
              "domainId": null,
              "allowFileLinkProperties": true,
              "allowAttachmentProperties": true,
              "allowFlagProperties": true,
              "showDefaultValueSettings": false,
              "defaultDefaultValueType": undefined,
              "defaultValueOptions": Immutable.List [],
              "fields": Immutable.List [],
              "indices": Immutable.List [],
              "domainException": undefined,
              "mandatoryFieldNames": Immutable.List [],
              "reservedFieldNames": Immutable.List [],
              "newDesignFields": undefined,
              "instructions": undefined,
            },
            Immutable.Record {
              "name": "Run Fields",
              "container": undefined,
              "description": undefined,
              "domainURI": undefined,
              "domainId": null,
              "allowFileLinkProperties": true,
              "allowAttachmentProperties": true,
              "allowFlagProperties": true,
              "showDefaultValueSettings": false,
              "defaultDefaultValueType": undefined,
              "defaultValueOptions": Immutable.List [],
              "fields": Immutable.List [],
              "indices": Immutable.List [],
              "domainException": undefined,
              "mandatoryFieldNames": Immutable.List [],
              "reservedFieldNames": Immutable.List [],
              "newDesignFields": undefined,
              "instructions": undefined,
            },
            Immutable.Record {
              "name": "Data Fields",
              "container": undefined,
              "description": undefined,
              "domainURI": undefined,
              "domainId": null,
              "allowFileLinkProperties": true,
              "allowAttachmentProperties": true,
              "allowFlagProperties": true,
              "showDefaultValueSettings": false,
              "defaultDefaultValueType": undefined,
              "defaultValueOptions": Immutable.List [],
              "fields": Immutable.List [],
              "indices": Immutable.List [],
              "domainException": undefined,
              "mandatoryFieldNames": Immutable.List [],
              "reservedFieldNames": Immutable.List [],
              "newDesignFields": undefined,
              "instructions": undefined,
            },
          ],
          "editableResults": false,
          "editableRuns": false,
          "exception": undefined,
          "metadataInputFormatHelp": undefined,
          "moduleTransformScripts": undefined,
          "name": undefined,
          "plateMetadata": undefined,
          "protocolId": undefined,
          "protocolParameters": undefined,
          "protocolTransformScripts": undefined,
          "providerName": "General",
          "saveScriptFiles": false,
          "selectedDetectionMethod": undefined,
          "selectedMetadataInputFormat": undefined,
          "selectedPlateTemplate": undefined,
          "qcEnabled": undefined,
        }
      }
      onChange={[Function]}
      panelStatus="NONE"
      togglePanel={[Function]}
      validate={false}
    >
      <Uncontrolled(Panel)
        className="domain-form-panel domain-panel-no-theme"
        expanded={true}
        onToggle={[Function]}
      >
        <Panel
          bsClass="panel"
          bsStyle="default"
          className="domain-form-panel domain-panel-no-theme"
          expanded={true}
          onToggle={[Function]}
        >
          <div
            className="domain-form-panel domain-panel-no-theme panel panel-default"
          >
            <CollapsiblePanelHeader
              collapsed={false}
              controlledCollapse={true}
              iconHelpMsg="Contains errors or is missing required values."
              id="assay-properties-hdr"
              isValid={true}
              panelStatus="NONE"
              title="Assay Properties"
              togglePanel={[Function]}
            >
              <PanelHeading
                bsClass="panel"
                className="domain-panel-header domain-heading-collapsible domain-panel-header-expanded domain-panel-header-no-theme"
                componentClass="div"
                id="assay-properties-hdr"
                onClick={[Function]}
              >
                <div
                  className="domain-panel-header domain-heading-collapsible domain-panel-header-expanded domain-panel-header-no-theme panel-heading"
                  id="assay-properties-hdr"
                  onClick={[Function]}
                >
                  <span
                    className="domain-panel-title"
                  >
                    Assay Properties
                  </span>
                  <span
                    className="pull-right"
                  >
                    <FontAwesomeIcon
                      border={false}
                      className="domain-form-collapse-btn"
                      fixedWidth={false}
                      flip={null}
                      icon={
                        Object {
                          "icon": Array [
                            448,
                            512,
                            Array [],
                            "f146",
                            "M400 32H48C21.5 32 0 53.5 0 80v352c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V80c0-26.5-21.5-48-48-48zM92 296c-6.6 0-12-5.4-12-12v-56c0-6.6 5.4-12 12-12h264c6.6 0 12 5.4 12 12v56c0 6.6-5.4 12-12 12H92z",
                          ],
                          "iconName": "minus-square",
                          "prefix": "fas",
                        }
                      }
                      inverse={false}
                      listItem={false}
                      mask={null}
                      pull={null}
                      pulse={false}
                      rotation={null}
                      size="lg"
                      spin={false}
                      symbol={false}
                      title=""
                      transform={null}
                    >
                      <svg
                        aria-hidden="true"
                        className="svg-inline--fa fa-minus-square fa-w-14 fa-lg domain-form-collapse-btn"
                        data-icon="minus-square"
                        data-prefix="fas"
                        focusable="false"
                        role="img"
                        style={Object {}}
                        viewBox="0 0 448 512"
                        xmlns="http://www.w3.org/2000/svg"
                      >
                        <path
                          d="M400 32H48C21.5 32 0 53.5 0 80v352c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V80c0-26.5-21.5-48-48-48zM92 296c-6.6 0-12-5.4-12-12v-56c0-6.6 5.4-12 12-12h264c6.6 0 12 5.4 12 12v56c0 6.6-5.4 12-12 12H92z"
                          fill="currentColor"
                          style={Object {}}
                        />
                      </svg>
                    </FontAwesomeIcon>
                  </span>
                </div>
              </PanelHeading>
            </CollapsiblePanelHeader>
            <PanelBody
              bsClass="panel"
              collapsible={true}
            >
              <PanelCollapse
                bsClass="panel"
              >
                <Collapse
                  appear={false}
                  dimension="height"
                  getDimensionValue={[Function]}
                  in={true}
                  mountOnEnter={false}
                  timeout={300}
                  unmountOnExit={false}
                >
                  <Transition
                    appear={false}
                    aria-expanded={null}
                    enter={true}
                    exit={true}
                    in={true}
                    mountOnEnter={false}
                    onEnter={[Function]}
                    onEntered={[Function]}
                    onEntering={[Function]}
                    onExit={[Function]}
                    onExited={[Function]}
                    onExiting={[Function]}
                    timeout={300}
                    unmountOnExit={false}
                  >
                    <div
                      aria-expanded={null}
                      className="panel-collapse collapse in"
                    >
                      <div
                        className="panel-body"
                      >
                        <HelpTopicURL
                          helpTopic="defineAssaySchema"
                          nounPlural="assays"
                        >
                          <Row
                            bsClass="row"
                            componentClass="div"
                          >
                            <div
                              className="row"
                            >
                              <Col
                                bsClass="col"
                                componentClass="div"
                                xs={12}
                              >
                                <div
                                  className="col-xs-12"
                                >
                                  <a
                                    className="domain-field-float-right"
                                    href="https://www.labkey.org/Documentation/wiki-page.view?name=defineAssaySchema"
                                    target="_blank"
                                  >
                                    Learn more about designing assays
                                  </a>
                                </div>
                              </Col>
                            </div>
                          </Row>
                        </HelpTopicURL>
                        <Form
                          bsClass="form"
                          componentClass="form"
                          horizontal={false}
                          inline={false}
                        >
                          <form
                            className=""
                          >
                            <Col
                              bsClass="col"
                              componentClass="div"
                              lg={6}
                              xs={12}
                            >
                              <div
                                className="col-lg-6 col-xs-12"
                              >
                                <div
                                  className="domain-field-padding-bottom"
                                >
                                  <SectionHeading
                                    helpTopic="defineAssaySchema"
                                    title="Basic Properties"
                                  >
                                    <Row
                                      bsClass="row"
                                      componentClass="div"
                                    >
                                      <div
                                        className="row"
                                      >
                                        <Col
                                          bsClass="col"
                                          componentClass="div"
                                          xs={9}
                                        >
                                          <div
                                            className="col-xs-9"
                                          >
                                            <div
                                              className="domain-field-section-heading"
                                            >
                                              Basic Properties
                                            </div>
                                          </div>
                                        </Col>
                                      </div>
                                    </Row>
                                  </SectionHeading>
                                  <NameInput
                                    appPropertiesOnly={false}
                                    model={
                                      Immutable.Record {
                                        "allowBackgroundUpload": false,
                                        "allowEditableResults": false,
                                        "allowQCStates": false,
                                        "allowSpacesInPath": false,
                                        "allowTransformationScript": false,
                                        "allowPlateMetadata": false,
                                        "autoCopyTargetContainer": undefined,
                                        "autoCopyTargetContainerId": undefined,
                                        "availableDetectionMethods": undefined,
                                        "availableMetadataInputFormats": undefined,
                                        "availablePlateTemplates": undefined,
                                        "backgroundUpload": false,
                                        "description": undefined,
                                        "domains": Immutable.List [
                                          Immutable.Record {
                                            "name": "Batch Fields",
                                            "container": undefined,
                                            "description": undefined,
                                            "domainURI": undefined,
                                            "domainId": null,
                                            "allowFileLinkProperties": true,
                                            "allowAttachmentProperties": true,
                                            "allowFlagProperties": true,
                                            "showDefaultValueSettings": false,
                                            "defaultDefaultValueType": undefined,
                                            "defaultValueOptions": Immutable.List [],
                                            "fields": Immutable.List [],
                                            "indices": Immutable.List [],
                                            "domainException": undefined,
                                            "mandatoryFieldNames": Immutable.List [],
                                            "reservedFieldNames": Immutable.List [],
                                            "newDesignFields": undefined,
                                            "instructions": undefined,
                                          },
                                          Immutable.Record {
                                            "name": "Run Fields",
                                            "container": undefined,
                                            "description": undefined,
                                            "domainURI": undefined,
                                            "domainId": null,
                                            "allowFileLinkProperties": true,
                                            "allowAttachmentProperties": true,
                                            "allowFlagProperties": true,
                                            "showDefaultValueSettings": false,
                                            "defaultDefaultValueType": undefined,
                                            "defaultValueOptions": Immutable.List [],
                                            "fields": Immutable.List [],
                                            "indices": Immutable.List [],
                                            "domainException": undefined,
                                            "mandatoryFieldNames": Immutable.List [],
                                            "reservedFieldNames": Immutable.List [],
                                            "newDesignFields": undefined,
                                            "instructions": undefined,
                                          },
                                          Immutable.Record {
                                            "name": "Data Fields",
                                            "container": undefined,
                                            "description": undefined,
                                            "domainURI": undefined,
                                            "domainId": null,
                                            "allowFileLinkProperties": true,
                                            "allowAttachmentProperties": true,
                                            "allowFlagProperties": true,
                                            "showDefaultValueSettings": false,
                                            "defaultDefaultValueType": undefined,
                                            "defaultValueOptions": Immutable.List [],
                                            "fields": Immutable.List [],
                                            "indices": Immutable.List [],
                                            "domainException": undefined,
                                            "mandatoryFieldNames": Immutable.List [],
                                            "reservedFieldNames": Immutable.List [],
                                            "newDesignFields": undefined,
                                            "instructions": undefined,
                                          },
                                        ],
                                        "editableResults": false,
                                        "editableRuns": false,
                                        "exception": undefined,
                                        "metadataInputFormatHelp": undefined,
                                        "moduleTransformScripts": undefined,
                                        "name": undefined,
                                        "plateMetadata": undefined,
                                        "protocolId": undefined,
                                        "protocolParameters": undefined,
                                        "protocolTransformScripts": undefined,
                                        "providerName": "General",
                                        "saveScriptFiles": false,
                                        "selectedDetectionMethod": undefined,
                                        "selectedMetadataInputFormat": undefined,
                                        "selectedPlateTemplate": undefined,
                                        "qcEnabled": undefined,
                                      }
                                    }
                                    onChange={[Function]}
                                  >
                                    <AssayPropertiesInput
                                      appPropertiesOnly={false}
                                      helpTipBody={[Function]}
                                      label="Name"
                                      required={true}
                                    >
                                      <Row
                                        bsClass="row"
                                        className="margin-top"
                                        componentClass="div"
                                      >
                                        <div
                                          className="margin-top row"
                                        >
                                          <Col
                                            bsClass="col"
                                            componentClass="div"
                                            lg={4}
                                            xs={3}
                                          >
                                            <div
                                              className="col-lg-4 col-xs-3"
                                            >
                                              <span
                                                className="domain-no-wrap"
                                              >
                                                Name
                                                 *
                                                <LabelHelpTip
                                                  body={[Function]}
                                                  customStyle={Object {}}
                                                  id="tooltip"
                                                  required={true}
                                                  size="1x"
                                                  title="Name"
                                                >
                                                  <span
                                                    className="label-help-target"
                                                    onMouseOut={[Function]}
                                                    onMouseOver={[Function]}
                                                  >
                                                    <FontAwesomeIcon
                                                      border={false}
                                                      className="label-help-icon"
                                                      fixedWidth={false}
                                                      flip={null}
                                                      icon={
                                                        Object {
                                                          "icon": Array [
                                                            512,
                                                            512,
                                                            Array [],
                                                            "f059",
                                                            "M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z",
                                                          ],
                                                          "iconName": "question-circle",
                                                          "prefix": "fas",
                                                        }
                                                      }
                                                      inverse={false}
                                                      listItem={false}
                                                      mask={null}
                                                      pull={null}
                                                      pulse={false}
                                                      rotation={null}
                                                      size="1x"
                                                      spin={false}
                                                      style={Object {}}
                                                      symbol={false}
                                                      title=""
                                                      transform={null}
                                                    >
                                                      <svg
                                                        aria-hidden="true"
                                                        className="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                                                        data-icon="question-circle"
                                                        data-prefix="fas"
                                                        focusable="false"
                                                        role="img"
                                                        style={Object {}}
                                                        viewBox="0 0 512 512"
                                                        xmlns="http://www.w3.org/2000/svg"
                                                      >
                                                        <path
                                                          d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                          fill="currentColor"
                                                          style={Object {}}
                                                        />
                                                      </svg>
                                                    </FontAwesomeIcon>
                                                    <Overlay
                                                      animation={[Function]}
                                                      placement="right"
                                                      rootClose={false}
                                                      show={false}
                                                      target={
                                                        <span
                                                          class="label-help-target"
                                                        >
                                                          <svg
                                                            aria-hidden="true"
                                                            class="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                                                            data-icon="question-circle"
                                                            data-prefix="fas"
                                                            focusable="false"
                                                            role="img"
                                                            viewBox="0 0 512 512"
                                                            xmlns="http://www.w3.org/2000/svg"
                                                          >
                                                            <path
                                                              d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                              fill="currentColor"
                                                            />
                                                          </svg>
                                                        </span>
                                                      }
                                                    >
                                                      <Overlay
                                                        placement="right"
                                                        rootClose={false}
                                                        show={false}
                                                        target={
                                                          <span
                                                            class="label-help-target"
                                                          >
                                                            <svg
                                                              aria-hidden="true"
                                                              class="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                                                              data-icon="question-circle"
                                                              data-prefix="fas"
                                                              focusable="false"
                                                              role="img"
                                                              viewBox="0 0 512 512"
                                                              xmlns="http://www.w3.org/2000/svg"
                                                            >
                                                              <path
                                                                d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                                fill="currentColor"
                                                              />
                                                            </svg>
                                                          </span>
                                                        }
                                                        transition={[Function]}
                                                      />
                                                    </Overlay>
                                                  </span>
                                                </LabelHelpTip>
                                              </span>
                                            </div>
                                          </Col>
                                          <Col
                                            bsClass="col"
                                            componentClass="div"
                                            lg={8}
                                            xs={9}
                                          >
                                            <div
                                              className="col-lg-8 col-xs-9"
                                            >
                                              <FormControl
                                                bsClass="form-control"
                                                componentClass="input"
                                                disabled={false}
                                                id="assay-design-name"
                                                onChange={[Function]}
                                                placeholder="Enter a name for this assay"
                                                type="text"
                                                value=""
                                              >
                                                <input
                                                  className="form-control"
                                                  disabled={false}
                                                  id="assay-design-name"
                                                  onChange={[Function]}
                                                  placeholder="Enter a name for this assay"
                                                  type="text"
                                                  value=""
                                                />
                                              </FormControl>
                                            </div>
                                          </Col>
                                        </div>
                                      </Row>
                                    </AssayPropertiesInput>
                                  </NameInput>
                                  <DescriptionInput
                                    appPropertiesOnly={false}
                                    model={
                                      Immutable.Record {
                                        "allowBackgroundUpload": false,
                                        "allowEditableResults": false,
                                        "allowQCStates": false,
                                        "allowSpacesInPath": false,
                                        "allowTransformationScript": false,
                                        "allowPlateMetadata": false,
                                        "autoCopyTargetContainer": undefined,
                                        "autoCopyTargetContainerId": undefined,
                                        "availableDetectionMethods": undefined,
                                        "availableMetadataInputFormats": undefined,
                                        "availablePlateTemplates": undefined,
                                        "backgroundUpload": false,
                                        "description": undefined,
                                        "domains": Immutable.List [
                                          Immutable.Record {
                                            "name": "Batch Fields",
                                            "container": undefined,
                                            "description": undefined,
                                            "domainURI": undefined,
                                            "domainId": null,
                                            "allowFileLinkProperties": true,
                                            "allowAttachmentProperties": true,
                                            "allowFlagProperties": true,
                                            "showDefaultValueSettings": false,
                                            "defaultDefaultValueType": undefined,
                                            "defaultValueOptions": Immutable.List [],
                                            "fields": Immutable.List [],
                                            "indices": Immutable.List [],
                                            "domainException": undefined,
                                            "mandatoryFieldNames": Immutable.List [],
                                            "reservedFieldNames": Immutable.List [],
                                            "newDesignFields": undefined,
                                            "instructions": undefined,
                                          },
                                          Immutable.Record {
                                            "name": "Run Fields",
                                            "container": undefined,
                                            "description": undefined,
                                            "domainURI": undefined,
                                            "domainId": null,
                                            "allowFileLinkProperties": true,
                                            "allowAttachmentProperties": true,
                                            "allowFlagProperties": true,
                                            "showDefaultValueSettings": false,
                                            "defaultDefaultValueType": undefined,
                                            "defaultValueOptions": Immutable.List [],
                                            "fields": Immutable.List [],
                                            "indices": Immutable.List [],
                                            "domainException": undefined,
                                            "mandatoryFieldNames": Immutable.List [],
                                            "reservedFieldNames": Immutable.List [],
                                            "newDesignFields": undefined,
                                            "instructions": undefined,
                                          },
                                          Immutable.Record {
                                            "name": "Data Fields",
                                            "container": undefined,
                                            "description": undefined,
                                            "domainURI": undefined,
                                            "domainId": null,
                                            "allowFileLinkProperties": true,
                                            "allowAttachmentProperties": true,
                                            "allowFlagProperties": true,
                                            "showDefaultValueSettings": false,
                                            "defaultDefaultValueType": undefined,
                                            "defaultValueOptions": Immutable.List [],
                                            "fields": Immutable.List [],
                                            "indices": Immutable.List [],
                                            "domainException": undefined,
                                            "mandatoryFieldNames": Immutable.List [],
                                            "reservedFieldNames": Immutable.List [],
                                            "newDesignFields": undefined,
                                            "instructions": undefined,
                                          },
                                        ],
                                        "editableResults": false,
                                        "editableRuns": false,
                                        "exception": undefined,
                                        "metadataInputFormatHelp": undefined,
                                        "moduleTransformScripts": undefined,
                                        "name": undefined,
                                        "plateMetadata": undefined,
                                        "protocolId": undefined,
                                        "protocolParameters": undefined,
                                        "protocolTransformScripts": undefined,
                                        "providerName": "General",
                                        "saveScriptFiles": false,
                                        "selectedDetectionMethod": undefined,
                                        "selectedMetadataInputFormat": undefined,
                                        "selectedPlateTemplate": undefined,
                                        "qcEnabled": undefined,
                                      }
                                    }
                                    onChange={[Function]}
                                  >
                                    <AssayPropertiesInput
                                      appPropertiesOnly={false}
                                      helpTipBody={[Function]}
                                      label="Description"
                                    >
                                      <Row
                                        bsClass="row"
                                        className="margin-top"
                                        componentClass="div"
                                      >
                                        <div
                                          className="margin-top row"
                                        >
                                          <Col
                                            bsClass="col"
                                            componentClass="div"
                                            lg={4}
                                            xs={3}
                                          >
                                            <div
                                              className="col-lg-4 col-xs-3"
                                            >
                                              <span
                                                className="domain-no-wrap"
                                              >
                                                Description
                                                <LabelHelpTip
                                                  body={[Function]}
                                                  customStyle={Object {}}
                                                  id="tooltip"
                                                  size="1x"
                                                  title="Description"
                                                >
                                                  <span
                                                    className="label-help-target"
                                                    onMouseOut={[Function]}
                                                    onMouseOver={[Function]}
                                                  >
                                                    <FontAwesomeIcon
                                                      border={false}
                                                      className="label-help-icon"
                                                      fixedWidth={false}
                                                      flip={null}
                                                      icon={
                                                        Object {
                                                          "icon": Array [
                                                            512,
                                                            512,
                                                            Array [],
                                                            "f059",
                                                            "M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z",
                                                          ],
                                                          "iconName": "question-circle",
                                                          "prefix": "fas",
                                                        }
                                                      }
                                                      inverse={false}
                                                      listItem={false}
                                                      mask={null}
                                                      pull={null}
                                                      pulse={false}
                                                      rotation={null}
                                                      size="1x"
                                                      spin={false}
                                                      style={Object {}}
                                                      symbol={false}
                                                      title=""
                                                      transform={null}
                                                    >
                                                      <svg
                                                        aria-hidden="true"
                                                        className="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                                                        data-icon="question-circle"
                                                        data-prefix="fas"
                                                        focusable="false"
                                                        role="img"
                                                        style={Object {}}
                                                        viewBox="0 0 512 512"
                                                        xmlns="http://www.w3.org/2000/svg"
                                                      >
                                                        <path
                                                          d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                          fill="currentColor"
                                                          style={Object {}}
                                                        />
                                                      </svg>
                                                    </FontAwesomeIcon>
                                                    <Overlay
                                                      animation={[Function]}
                                                      placement="right"
                                                      rootClose={false}
                                                      show={false}
                                                      target={
                                                        <span
                                                          class="label-help-target"
                                                        >
                                                          <svg
                                                            aria-hidden="true"
                                                            class="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                                                            data-icon="question-circle"
                                                            data-prefix="fas"
                                                            focusable="false"
                                                            role="img"
                                                            viewBox="0 0 512 512"
                                                            xmlns="http://www.w3.org/2000/svg"
                                                          >
                                                            <path
                                                              d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                              fill="currentColor"
                                                            />
                                                          </svg>
                                                        </span>
                                                      }
                                                    >
                                                      <Overlay
                                                        placement="right"
                                                        rootClose={false}
                                                        show={false}
                                                        target={
                                                          <span
                                                            class="label-help-target"
                                                          >
                                                            <svg
                                                              aria-hidden="true"
                                                              class="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                                                              data-icon="question-circle"
                                                              data-prefix="fas"
                                                              focusable="false"
                                                              role="img"
                                                              viewBox="0 0 512 512"
                                                              xmlns="http://www.w3.org/2000/svg"
                                                            >
                                                              <path
                                                                d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                                fill="currentColor"
                                                              />
                                                            </svg>
                                                          </span>
                                                        }
                                                        transition={[Function]}
                                                      />
                                                    </Overlay>
                                                  </span>
                                                </LabelHelpTip>
                                              </span>
                                            </div>
                                          </Col>
                                          <Col
                                            bsClass="col"
                                            componentClass="div"
                                            lg={8}
                                            xs={9}
                                          >
                                            <div
                                              className="col-lg-8 col-xs-9"
                                            >
                                              <textarea
                                                className="form-control textarea-noresize"
                                                id="assay-design-description"
                                                onChange={[Function]}
                                                value=""
                                              />
                                            </div>
                                          </Col>
                                        </div>
                                      </Row>
                                    </AssayPropertiesInput>
                                  </DescriptionInput>
                                </div>
                                <div
                                  className="domain-field-padding-bottom"
                                >
                                  <SectionHeading
                                    title="Editing Settings"
                                  >
                                    <Row
                                      bsClass="row"
                                      componentClass="div"
                                    >
                                      <div
                                        className="row"
                                      >
                                        <Col
                                          bsClass="col"
                                          componentClass="div"
                                          xs={12}
                                        >
                                          <div
                                            className="col-xs-12"
                                          >
                                            <div
                                              className="domain-field-section-heading"
                                            >
                                              Editing Settings
                                            </div>
                                          </div>
                                        </Col>
                                      </div>
                                    </Row>
                                  </SectionHeading>
                                  <EditableRunsInput
                                    appPropertiesOnly={false}
                                    model={
                                      Immutable.Record {
                                        "allowBackgroundUpload": false,
                                        "allowEditableResults": false,
                                        "allowQCStates": false,
                                        "allowSpacesInPath": false,
                                        "allowTransformationScript": false,
                                        "allowPlateMetadata": false,
                                        "autoCopyTargetContainer": undefined,
                                        "autoCopyTargetContainerId": undefined,
                                        "availableDetectionMethods": undefined,
                                        "availableMetadataInputFormats": undefined,
                                        "availablePlateTemplates": undefined,
                                        "backgroundUpload": false,
                                        "description": undefined,
                                        "domains": Immutable.List [
                                          Immutable.Record {
                                            "name": "Batch Fields",
                                            "container": undefined,
                                            "description": undefined,
                                            "domainURI": undefined,
                                            "domainId": null,
                                            "allowFileLinkProperties": true,
                                            "allowAttachmentProperties": true,
                                            "allowFlagProperties": true,
                                            "showDefaultValueSettings": false,
                                            "defaultDefaultValueType": undefined,
                                            "defaultValueOptions": Immutable.List [],
                                            "fields": Immutable.List [],
                                            "indices": Immutable.List [],
                                            "domainException": undefined,
                                            "mandatoryFieldNames": Immutable.List [],
                                            "reservedFieldNames": Immutable.List [],
                                            "newDesignFields": undefined,
                                            "instructions": undefined,
                                          },
                                          Immutable.Record {
                                            "name": "Run Fields",
                                            "container": undefined,
                                            "description": undefined,
                                            "domainURI": undefined,
                                            "domainId": null,
                                            "allowFileLinkProperties": true,
                                            "allowAttachmentProperties": true,
                                            "allowFlagProperties": true,
                                            "showDefaultValueSettings": false,
                                            "defaultDefaultValueType": undefined,
                                            "defaultValueOptions": Immutable.List [],
                                            "fields": Immutable.List [],
                                            "indices": Immutable.List [],
                                            "domainException": undefined,
                                            "mandatoryFieldNames": Immutable.List [],
                                            "reservedFieldNames": Immutable.List [],
                                            "newDesignFields": undefined,
                                            "instructions": undefined,
                                          },
                                          Immutable.Record {
                                            "name": "Data Fields",
                                            "container": undefined,
                                            "description": undefined,
                                            "domainURI": undefined,
                                            "domainId": null,
                                            "allowFileLinkProperties": true,
                                            "allowAttachmentProperties": true,
                                            "allowFlagProperties": true,
                                            "showDefaultValueSettings": false,
                                            "defaultDefaultValueType": undefined,
                                            "defaultValueOptions": Immutable.List [],
                                            "fields": Immutable.List [],
                                            "indices": Immutable.List [],
                                            "domainException": undefined,
                                            "mandatoryFieldNames": Immutable.List [],
                                            "reservedFieldNames": Immutable.List [],
                                            "newDesignFields": undefined,
                                            "instructions": undefined,
                                          },
                                        ],
                                        "editableResults": false,
                                        "editableRuns": false,
                                        "exception": undefined,
                                        "metadataInputFormatHelp": undefined,
                                        "moduleTransformScripts": undefined,
                                        "name": undefined,
                                        "plateMetadata": undefined,
                                        "protocolId": undefined,
                                        "protocolParameters": undefined,
                                        "protocolTransformScripts": undefined,
                                        "providerName": "General",
                                        "saveScriptFiles": false,
                                        "selectedDetectionMethod": undefined,
                                        "selectedMetadataInputFormat": undefined,
                                        "selectedPlateTemplate": undefined,
                                        "qcEnabled": undefined,
                                      }
                                    }
                                    onChange={[Function]}
                                  >
                                    <AssayPropertiesInput
                                      appPropertiesOnly={false}
                                      helpTipBody={[Function]}
                                      label="Editable Runs"
                                    >
                                      <Row
                                        bsClass="row"
                                        className="margin-top"
                                        componentClass="div"
                                      >
                                        <div
                                          className="margin-top row"
                                        >
                                          <Col
                                            bsClass="col"
                                            componentClass="div"
                                            lg={4}
                                            xs={3}
                                          >
                                            <div
                                              className="col-lg-4 col-xs-3"
                                            >
                                              Editable 
                                              <span
                                                className="domain-no-wrap"
                                              >
                                                Runs
                                                <LabelHelpTip
                                                  body={[Function]}
                                                  customStyle={Object {}}
                                                  id="tooltip"
                                                  size="1x"
                                                  title="Editable Runs"
                                                >
                                                  <span
                                                    className="label-help-target"
                                                    onMouseOut={[Function]}
                                                    onMouseOver={[Function]}
                                                  >
                                                    <FontAwesomeIcon
                                                      border={false}
                                                      className="label-help-icon"
                                                      fixedWidth={false}
                                                      flip={null}
                                                      icon={
                                                        Object {
                                                          "icon": Array [
                                                            512,
                                                            512,
                                                            Array [],
                                                            "f059",
                                                            "M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z",
                                                          ],
                                                          "iconName": "question-circle",
                                                          "prefix": "fas",
                                                        }
                                                      }
                                                      inverse={false}
                                                      listItem={false}
                                                      mask={null}
                                                      pull={null}
                                                      pulse={false}
                                                      rotation={null}
                                                      size="1x"
                                                      spin={false}
                                                      style={Object {}}
                                                      symbol={false}
                                                      title=""
                                                      transform={null}
                                                    >
                                                      <svg
                                                        aria-hidden="true"
                                                        className="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                                                        data-icon="question-circle"
                                                        data-prefix="fas"
                                                        focusable="false"
                                                        role="img"
                                                        style={Object {}}
                                                        viewBox="0 0 512 512"
                                                        xmlns="http://www.w3.org/2000/svg"
                                                      >
                                                        <path
                                                          d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                          fill="currentColor"
                                                          style={Object {}}
                                                        />
                                                      </svg>
                                                    </FontAwesomeIcon>
                                                    <Overlay
                                                      animation={[Function]}
                                                      placement="right"
                                                      rootClose={false}
                                                      show={false}
                                                      target={
                                                        <span
                                                          class="label-help-target"
                                                        >
                                                          <svg
                                                            aria-hidden="true"
                                                            class="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                                                            data-icon="question-circle"
                                                            data-prefix="fas"
                                                            focusable="false"
                                                            role="img"
                                                            viewBox="0 0 512 512"
                                                            xmlns="http://www.w3.org/2000/svg"
                                                          >
                                                            <path
                                                              d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                              fill="currentColor"
                                                            />
                                                          </svg>
                                                        </span>
                                                      }
                                                    >
                                                      <Overlay
                                                        placement="right"
                                                        rootClose={false}
                                                        show={false}
                                                        target={
                                                          <span
                                                            class="label-help-target"
                                                          >
                                                            <svg
                                                              aria-hidden="true"
                                                              class="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                                                              data-icon="question-circle"
                                                              data-prefix="fas"
                                                              focusable="false"
                                                              role="img"
                                                              viewBox="0 0 512 512"
                                                              xmlns="http://www.w3.org/2000/svg"
                                                            >
                                                              <path
                                                                d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                                fill="currentColor"
                                                              />
                                                            </svg>
                                                          </span>
                                                        }
                                                        transition={[Function]}
                                                      />
                                                    </Overlay>
                                                  </span>
                                                </LabelHelpTip>
                                              </span>
                                            </div>
                                          </Col>
                                          <Col
                                            bsClass="col"
                                            componentClass="div"
                                            lg={8}
                                            xs={9}
                                          >
                                            <div
                                              className="col-lg-8 col-xs-9"
                                            >
                                              <input
                                                checked={false}
                                                id="assay-design-editableRuns"
                                                onChange={[Function]}
                                                type="checkbox"
                                              />
                                            </div>
                                          </Col>
                                        </div>
                                      </Row>
                                    </AssayPropertiesInput>
                                  </EditableRunsInput>
                                </div>
                              </div>
                            </Col>
                            <Col
                              bsClass="col"
                              componentClass="div"
                              lg={6}
                              xs={12}
                            >
                              <div
                                className="col-lg-6 col-xs-12"
                              >
                                <div
                                  className="domain-field-padding-bottom"
                                >
                                  <SectionHeading
                                    title="Import Settings"
                                  >
                                    <Row
                                      bsClass="row"
                                      componentClass="div"
                                    >
                                      <div
                                        className="row"
                                      >
                                        <Col
                                          bsClass="col"
                                          componentClass="div"
                                          xs={12}
                                        >
                                          <div
                                            className="col-xs-12"
                                          >
                                            <div
                                              className="domain-field-section-heading"
                                            >
                                              Import Settings
                                            </div>
                                          </div>
                                        </Col>
                                      </div>
                                    </Row>
                                  </SectionHeading>
                                  <AutoCopyDataInput
                                    model={
                                      Immutable.Record {
                                        "allowBackgroundUpload": false,
                                        "allowEditableResults": false,
                                        "allowQCStates": false,
                                        "allowSpacesInPath": false,
                                        "allowTransformationScript": false,
                                        "allowPlateMetadata": false,
                                        "autoCopyTargetContainer": undefined,
                                        "autoCopyTargetContainerId": undefined,
                                        "availableDetectionMethods": undefined,
                                        "availableMetadataInputFormats": undefined,
                                        "availablePlateTemplates": undefined,
                                        "backgroundUpload": false,
                                        "description": undefined,
                                        "domains": Immutable.List [
                                          Immutable.Record {
                                            "name": "Batch Fields",
                                            "container": undefined,
                                            "description": undefined,
                                            "domainURI": undefined,
                                            "domainId": null,
                                            "allowFileLinkProperties": true,
                                            "allowAttachmentProperties": true,
                                            "allowFlagProperties": true,
                                            "showDefaultValueSettings": false,
                                            "defaultDefaultValueType": undefined,
                                            "defaultValueOptions": Immutable.List [],
                                            "fields": Immutable.List [],
                                            "indices": Immutable.List [],
                                            "domainException": undefined,
                                            "mandatoryFieldNames": Immutable.List [],
                                            "reservedFieldNames": Immutable.List [],
                                            "newDesignFields": undefined,
                                            "instructions": undefined,
                                          },
                                          Immutable.Record {
                                            "name": "Run Fields",
                                            "container": undefined,
                                            "description": undefined,
                                            "domainURI": undefined,
                                            "domainId": null,
                                            "allowFileLinkProperties": true,
                                            "allowAttachmentProperties": true,
                                            "allowFlagProperties": true,
                                            "showDefaultValueSettings": false,
                                            "defaultDefaultValueType": undefined,
                                            "defaultValueOptions": Immutable.List [],
                                            "fields": Immutable.List [],
                                            "indices": Immutable.List [],
                                            "domainException": undefined,
                                            "mandatoryFieldNames": Immutable.List [],
                                            "reservedFieldNames": Immutable.List [],
                                            "newDesignFields": undefined,
                                            "instructions": undefined,
                                          },
                                          Immutable.Record {
                                            "name": "Data Fields",
                                            "container": undefined,
                                            "description": undefined,
                                            "domainURI": undefined,
                                            "domainId": null,
                                            "allowFileLinkProperties": true,
                                            "allowAttachmentProperties": true,
                                            "allowFlagProperties": true,
                                            "showDefaultValueSettings": false,
                                            "defaultDefaultValueType": undefined,
                                            "defaultValueOptions": Immutable.List [],
                                            "fields": Immutable.List [],
                                            "indices": Immutable.List [],
                                            "domainException": undefined,
                                            "mandatoryFieldNames": Immutable.List [],
                                            "reservedFieldNames": Immutable.List [],
                                            "newDesignFields": undefined,
                                            "instructions": undefined,
                                          },
                                        ],
                                        "editableResults": false,
                                        "editableRuns": false,
                                        "exception": undefined,
                                        "metadataInputFormatHelp": undefined,
                                        "moduleTransformScripts": undefined,
                                        "name": undefined,
                                        "plateMetadata": undefined,
                                        "protocolId": undefined,
                                        "protocolParameters": undefined,
                                        "protocolTransformScripts": undefined,
                                        "providerName": "General",
                                        "saveScriptFiles": false,
                                        "selectedDetectionMethod": undefined,
                                        "selectedMetadataInputFormat": undefined,
                                        "selectedPlateTemplate": undefined,
                                        "qcEnabled": undefined,
                                      }
                                    }
                                    onChange={[Function]}
                                  >
                                    <AssayPropertiesInput
                                      helpTipBody={[Function]}
                                      label="Auto-Copy Data to Study"
                                    >
                                      <Row
                                        bsClass="row"
                                        className="margin-top"
                                        componentClass="div"
                                      >
                                        <div
                                          className="margin-top row"
                                        >
                                          <Col
                                            bsClass="col"
                                            componentClass="div"
                                            lg={4}
                                            xs={3}
                                          >
                                            <div
                                              className="col-lg-4 col-xs-3"
                                            >
                                              Auto-Copy Data to 
                                              <span
                                                className="domain-no-wrap"
                                              >
                                                Study
                                                <LabelHelpTip
                                                  body={[Function]}
                                                  customStyle={Object {}}
                                                  id="tooltip"
                                                  size="1x"
                                                  title="Auto-Copy Data to Study"
                                                >
                                                  <span
                                                    className="label-help-target"
                                                    onMouseOut={[Function]}
                                                    onMouseOver={[Function]}
                                                  >
                                                    <FontAwesomeIcon
                                                      border={false}
                                                      className="label-help-icon"
                                                      fixedWidth={false}
                                                      flip={null}
                                                      icon={
                                                        Object {
                                                          "icon": Array [
                                                            512,
                                                            512,
                                                            Array [],
                                                            "f059",
                                                            "M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z",
                                                          ],
                                                          "iconName": "question-circle",
                                                          "prefix": "fas",
                                                        }
                                                      }
                                                      inverse={false}
                                                      listItem={false}
                                                      mask={null}
                                                      pull={null}
                                                      pulse={false}
                                                      rotation={null}
                                                      size="1x"
                                                      spin={false}
                                                      style={Object {}}
                                                      symbol={false}
                                                      title=""
                                                      transform={null}
                                                    >
                                                      <svg
                                                        aria-hidden="true"
                                                        className="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                                                        data-icon="question-circle"
                                                        data-prefix="fas"
                                                        focusable="false"
                                                        role="img"
                                                        style={Object {}}
                                                        viewBox="0 0 512 512"
                                                        xmlns="http://www.w3.org/2000/svg"
                                                      >
                                                        <path
                                                          d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                          fill="currentColor"
                                                          style={Object {}}
                                                        />
                                                      </svg>
                                                    </FontAwesomeIcon>
                                                    <Overlay
                                                      animation={[Function]}
                                                      placement="right"
                                                      rootClose={false}
                                                      show={false}
                                                      target={
                                                        <span
                                                          class="label-help-target"
                                                        >
                                                          <svg
                                                            aria-hidden="true"
                                                            class="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                                                            data-icon="question-circle"
                                                            data-prefix="fas"
                                                            focusable="false"
                                                            role="img"
                                                            viewBox="0 0 512 512"
                                                            xmlns="http://www.w3.org/2000/svg"
                                                          >
                                                            <path
                                                              d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                              fill="currentColor"
                                                            />
                                                          </svg>
                                                        </span>
                                                      }
                                                    >
                                                      <Overlay
                                                        placement="right"
                                                        rootClose={false}
                                                        show={false}
                                                        target={
                                                          <span
                                                            class="label-help-target"
                                                          >
                                                            <svg
                                                              aria-hidden="true"
                                                              class="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                                                              data-icon="question-circle"
                                                              data-prefix="fas"
                                                              focusable="false"
                                                              role="img"
                                                              viewBox="0 0 512 512"
                                                              xmlns="http://www.w3.org/2000/svg"
                                                            >
                                                              <path
                                                                d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                                fill="currentColor"
                                                              />
                                                            </svg>
                                                          </span>
                                                        }
                                                        transition={[Function]}
                                                      />
                                                    </Overlay>
                                                  </span>
                                                </LabelHelpTip>
                                              </span>
                                            </div>
                                          </Col>
                                          <Col
                                            bsClass="col"
                                            componentClass="div"
                                            lg={8}
                                            xs={9}
                                          >
                                            <div
                                              className="col-lg-8 col-xs-9"
                                            >
                                              <LoadingSpinner
                                                msg="Loading..."
                                                wrapperClassName=""
                                              >
                                                <span
                                                  className=""
                                                >
                                                  <i
                                                    aria-hidden="true"
                                                    className="fa fa-spinner fa-pulse"
                                                  />
                                                   
                                                  Loading...
                                                </span>
                                              </LoadingSpinner>
                                            </div>
                                          </Col>
                                        </div>
                                      </Row>
                                    </AssayPropertiesInput>
                                  </AutoCopyDataInput>
                                </div>
                              </div>
                            </Col>
                          </form>
                        </Form>
                      </div>
                    </div>
                  </Transition>
                </Collapse>
              </PanelCollapse>
            </PanelBody>
          </div>
        </Panel>
      </Uncontrolled(Panel)>
    </AssayPropertiesPanelImpl>
  </ComponentWithDomainPropertiesPanelCollapse>
  <DomainForm
    controlledCollapse={true}
    domain={
      Immutable.Record {
        "name": "Batch Fields",
        "container": undefined,
        "description": undefined,
        "domainURI": undefined,
        "domainId": null,
        "allowFileLinkProperties": true,
        "allowAttachmentProperties": true,
        "allowFlagProperties": true,
        "showDefaultValueSettings": false,
        "defaultDefaultValueType": undefined,
        "defaultValueOptions": Immutable.List [],
        "fields": Immutable.List [],
        "indices": Immutable.List [],
        "domainException": undefined,
        "mandatoryFieldNames": Immutable.List [],
        "reservedFieldNames": Immutable.List [],
        "newDesignFields": undefined,
        "instructions": undefined,
      }
    }
    domainIndex={0}
    helpTopic={null}
    initCollapsed={true}
    key="0"
    modelDomains={
      Immutable.List [
        Immutable.Record {
          "name": "Batch Fields",
          "container": undefined,
          "description": undefined,
          "domainURI": undefined,
          "domainId": null,
          "allowFileLinkProperties": true,
          "allowAttachmentProperties": true,
          "allowFlagProperties": true,
          "showDefaultValueSettings": false,
          "defaultDefaultValueType": undefined,
          "defaultValueOptions": Immutable.List [],
          "fields": Immutable.List [],
          "indices": Immutable.List [],
          "domainException": undefined,
          "mandatoryFieldNames": Immutable.List [],
          "reservedFieldNames": Immutable.List [],
          "newDesignFields": undefined,
          "instructions": undefined,
        },
        Immutable.Record {
          "name": "Run Fields",
          "container": undefined,
          "description": undefined,
          "domainURI": undefined,
          "domainId": null,
          "allowFileLinkProperties": true,
          "allowAttachmentProperties": true,
          "allowFlagProperties": true,
          "showDefaultValueSettings": false,
          "defaultDefaultValueType": undefined,
          "defaultValueOptions": Immutable.List [],
          "fields": Immutable.List [],
          "indices": Immutable.List [],
          "domainException": undefined,
          "mandatoryFieldNames": Immutable.List [],
          "reservedFieldNames": Immutable.List [],
          "newDesignFields": undefined,
          "instructions": undefined,
        },
        Immutable.Record {
          "name": "Data Fields",
          "container": undefined,
          "description": undefined,
          "domainURI": undefined,
          "domainId": null,
          "allowFileLinkProperties": true,
          "allowAttachmentProperties": true,
          "allowFlagProperties": true,
          "showDefaultValueSettings": false,
          "defaultDefaultValueType": undefined,
          "defaultValueOptions": Immutable.List [],
          "fields": Immutable.List [],
          "indices": Immutable.List [],
          "domainException": undefined,
          "mandatoryFieldNames": Immutable.List [],
          "reservedFieldNames": Immutable.List [],
          "newDesignFields": undefined,
          "instructions": undefined,
        },
      ]
    }
    onChange={[Function]}
    onToggle={[Function]}
    panelStatus="TODO"
    showFilePropertyType={true}
    showInferFromFile={false}
    validate={false}
  >
    <LookupProvider>
      <DomainFormImpl
        appPropertiesOnly={false}
        controlledCollapse={true}
        domain={
          Immutable.Record {
            "name": "Batch Fields",
            "container": undefined,
            "description": undefined,
            "domainURI": undefined,
            "domainId": null,
            "allowFileLinkProperties": true,
            "allowAttachmentProperties": true,
            "allowFlagProperties": true,
            "showDefaultValueSettings": false,
            "defaultDefaultValueType": undefined,
            "defaultValueOptions": Immutable.List [],
            "fields": Immutable.List [],
            "indices": Immutable.List [],
            "domainException": undefined,
            "mandatoryFieldNames": Immutable.List [],
            "reservedFieldNames": Immutable.List [],
            "newDesignFields": undefined,
            "instructions": undefined,
          }
        }
        domainFormDisplayOptions={
          Object {
            "isDragDisabled": false,
            "phiLevelDisabled": false,
            "showAddFieldsButton": true,
            "showRequired": true,
            "showTextOptions": true,
            "showValidators": true,
          }
        }
        domainIndex={0}
        helpNoun="field designer"
        helpTopic={null}
        initCollapsed={true}
        isNew={false}
        modelDomains={
          Immutable.List [
            Immutable.Record {
              "name": "Batch Fields",
              "container": undefined,
              "description": undefined,
              "domainURI": undefined,
              "domainId": null,
              "allowFileLinkProperties": true,
              "allowAttachmentProperties": true,
              "allowFlagProperties": true,
              "showDefaultValueSettings": false,
              "defaultDefaultValueType": undefined,
              "defaultValueOptions": Immutable.List [],
              "fields": Immutable.List [],
              "indices": Immutable.List [],
              "domainException": undefined,
              "mandatoryFieldNames": Immutable.List [],
              "reservedFieldNames": Immutable.List [],
              "newDesignFields": undefined,
              "instructions": undefined,
            },
            Immutable.Record {
              "name": "Run Fields",
              "container": undefined,
              "description": undefined,
              "domainURI": undefined,
              "domainId": null,
              "allowFileLinkProperties": true,
              "allowAttachmentProperties": true,
              "allowFlagProperties": true,
              "showDefaultValueSettings": false,
              "defaultDefaultValueType": undefined,
              "defaultValueOptions": Immutable.List [],
              "fields": Immutable.List [],
              "indices": Immutable.List [],
              "domainException": undefined,
              "mandatoryFieldNames": Immutable.List [],
              "reservedFieldNames": Immutable.List [],
              "newDesignFields": undefined,
              "instructions": undefined,
            },
            Immutable.Record {
              "name": "Data Fields",
              "container": undefined,
              "description": undefined,
              "domainURI": undefined,
              "domainId": null,
              "allowFileLinkProperties": true,
              "allowAttachmentProperties": true,
              "allowFlagProperties": true,
              "showDefaultValueSettings": false,
              "defaultDefaultValueType": undefined,
              "defaultValueOptions": Immutable.List [],
              "fields": Immutable.List [],
              "indices": Immutable.List [],
              "domainException": undefined,
              "mandatoryFieldNames": Immutable.List [],
              "reservedFieldNames": Immutable.List [],
              "newDesignFields": undefined,
              "instructions": undefined,
            },
          ]
        }
        onChange={[Function]}
        onToggle={[Function]}
        panelStatus="TODO"
        showFilePropertyType={true}
        showHeader={true}
        showInferFromFile={false}
        successBsStyle="success"
        validate={false}
      >
        <Uncontrolled(Panel)
          className="domain-form-panel"
          expanded={false}
          onToggle={[Function]}
        >
          <Panel
            bsClass="panel"
            bsStyle="default"
            className="domain-form-panel"
            expanded={false}
            onToggle={[Function]}
          >
            <div
              className="domain-form-panel panel panel-default"
            >
              <CollapsiblePanelHeader
                collapsed={true}
                controlledCollapse={true}
                id="domainpropertiesrow-Batch-Fields-hdr"
                isValid={true}
                panelStatus="TODO"
                title="Batch Fields"
                togglePanel={[Function]}
              >
                <PanelHeading
                  bsClass="panel"
                  className="domain-panel-header domain-heading-collapsible domain-panel-header-collapsed"
                  componentClass="div"
                  id="domainpropertiesrow-Batch-Fields-hdr"
                  onClick={[Function]}
                >
                  <div
                    className="domain-panel-header domain-heading-collapsible domain-panel-header-collapsed panel-heading"
                    id="domainpropertiesrow-Batch-Fields-hdr"
                    onClick={[Function]}
                  >
                    <LabelHelpTip
                      body={[Function]}
                      customStyle={Object {}}
                      iconComponent={[Function]}
                      id="tooltip"
                      placement="top"
                      size="1x"
                      title="Batch Fields"
                    >
                      <span
                        className="label-help-target"
                        onMouseOut={[Function]}
                        onMouseOver={[Function]}
                      >
                        <span
                          className="domain-panel-status-icon domain-panel-status-icon-blue"
                        >
                          <FontAwesomeIcon
                            border={false}
                            className=""
                            fixedWidth={false}
                            flip={null}
                            icon={
                              Object {
                                "icon": Array [
                                  512,
                                  512,
                                  Array [],
                                  "f06a",
                                  "M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zm-248 50c-25.405 0-46 20.595-46 46s20.595 46 46 46 46-20.595 46-46-20.595-46-46-46zm-43.673-165.346l7.418 136c.347 6.364 5.609 11.346 11.982 11.346h48.546c6.373 0 11.635-4.982 11.982-11.346l7.418-136c.375-6.874-5.098-12.654-11.982-12.654h-63.383c-6.884 0-12.356 5.78-11.981 12.654z",
                                ],
                                "iconName": "exclamation-circle",
                                "prefix": "fas",
                              }
                            }
                            inverse={false}
                            listItem={false}
                            mask={null}
                            pull={null}
                            pulse={false}
                            rotation={null}
                            size={null}
                            spin={false}
                            symbol={false}
                            title=""
                            transform={null}
                          >
                            <svg
                              aria-hidden="true"
                              className="svg-inline--fa fa-exclamation-circle fa-w-16 "
                              data-icon="exclamation-circle"
                              data-prefix="fas"
                              focusable="false"
                              role="img"
                              style={Object {}}
                              viewBox="0 0 512 512"
                              xmlns="http://www.w3.org/2000/svg"
                            >
                              <path
                                d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zm-248 50c-25.405 0-46 20.595-46 46s20.595 46 46 46 46-20.595 46-46-20.595-46-46-46zm-43.673-165.346l7.418 136c.347 6.364 5.609 11.346 11.982 11.346h48.546c6.373 0 11.635-4.982 11.982-11.346l7.418-136c.375-6.874-5.098-12.654-11.982-12.654h-63.383c-6.884 0-12.356 5.78-11.981 12.654z"
                                fill="currentColor"
                                style={Object {}}
                              />
                            </svg>
                          </FontAwesomeIcon>
                        </span>
                        <Overlay
                          animation={[Function]}
                          placement="top"
                          rootClose={false}
                          show={false}
                          target={
                            <span
                              class="label-help-target"
                            >
                              <span
                                class="domain-panel-status-icon domain-panel-status-icon-blue"
                              >
                                <svg
                                  aria-hidden="true"
                                  class="svg-inline--fa fa-exclamation-circle fa-w-16 "
                                  data-icon="exclamation-circle"
                                  data-prefix="fas"
                                  focusable="false"
                                  role="img"
                                  viewBox="0 0 512 512"
                                  xmlns="http://www.w3.org/2000/svg"
                                >
                                  <path
                                    d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zm-248 50c-25.405 0-46 20.595-46 46s20.595 46 46 46 46-20.595 46-46-20.595-46-46-46zm-43.673-165.346l7.418 136c.347 6.364 5.609 11.346 11.982 11.346h48.546c6.373 0 11.635-4.982 11.982-11.346l7.418-136c.375-6.874-5.098-12.654-11.982-12.654h-63.383c-6.884 0-12.356 5.78-11.981 12.654z"
                                    fill="currentColor"
                                  />
                                </svg>
                              </span>
                            </span>
                          }
                        >
                          <Overlay
                            placement="top"
                            rootClose={false}
                            show={false}
                            target={
                              <span
                                class="label-help-target"
                              >
                                <span
                                  class="domain-panel-status-icon domain-panel-status-icon-blue"
                                >
                                  <svg
                                    aria-hidden="true"
                                    class="svg-inline--fa fa-exclamation-circle fa-w-16 "
                                    data-icon="exclamation-circle"
                                    data-prefix="fas"
                                    focusable="false"
                                    role="img"
                                    viewBox="0 0 512 512"
                                    xmlns="http://www.w3.org/2000/svg"
                                  >
                                    <path
                                      d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zm-248 50c-25.405 0-46 20.595-46 46s20.595 46 46 46 46-20.595 46-46-20.595-46-46-46zm-43.673-165.346l7.418 136c.347 6.364 5.609 11.346 11.982 11.346h48.546c6.373 0 11.635-4.982 11.982-11.346l7.418-136c.375-6.874-5.098-12.654-11.982-12.654h-63.383c-6.884 0-12.356 5.78-11.981 12.654z"
                                      fill="currentColor"
                                    />
                                  </svg>
                                </span>
                              </span>
                            }
                            transition={[Function]}
                          />
                        </Overlay>
                      </span>
                    </LabelHelpTip>
                    <span
                      className="domain-panel-title"
                    >
                      Batch Fields
                    </span>
                    <span
                      className="pull-right"
                    >
                      <FontAwesomeIcon
                        border={false}
                        className="domain-form-expand-btn"
                        fixedWidth={false}
                        flip={null}
                        icon={
                          Object {
                            "icon": Array [
                              448,
                              512,
                              Array [],
                              "f0fe",
                              "M400 32H48C21.5 32 0 53.5 0 80v352c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V80c0-26.5-21.5-48-48-48zm-32 252c0 6.6-5.4 12-12 12h-92v92c0 6.6-5.4 12-12 12h-56c-6.6 0-12-5.4-12-12v-92H92c-6.6 0-12-5.4-12-12v-56c0-6.6 5.4-12 12-12h92v-92c0-6.6 5.4-12 12-12h56c6.6 0 12 5.4 12 12v92h92c6.6 0 12 5.4 12 12v56z",
                            ],
                            "iconName": "plus-square",
                            "prefix": "fas",
                          }
                        }
                        inverse={false}
                        listItem={false}
                        mask={null}
                        pull={null}
                        pulse={false}
                        rotation={null}
                        size="lg"
                        spin={false}
                        symbol={false}
                        title=""
                        transform={null}
                      >
                        <svg
                          aria-hidden="true"
                          className="svg-inline--fa fa-plus-square fa-w-14 fa-lg domain-form-expand-btn"
                          data-icon="plus-square"
                          data-prefix="fas"
                          focusable="false"
                          role="img"
                          style={Object {}}
                          viewBox="0 0 448 512"
                          xmlns="http://www.w3.org/2000/svg"
                        >
                          <path
                            d="M400 32H48C21.5 32 0 53.5 0 80v352c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V80c0-26.5-21.5-48-48-48zm-32 252c0 6.6-5.4 12-12 12h-92v92c0 6.6-5.4 12-12 12h-56c-6.6 0-12-5.4-12-12v-92H92c-6.6 0-12-5.4-12-12v-56c0-6.6 5.4-12 12-12h92v-92c0-6.6 5.4-12 12-12h56c6.6 0 12 5.4 12 12v92h92c6.6 0 12 5.4 12 12v56z"
                            fill="currentColor"
                            style={Object {}}
                          />
                        </svg>
                      </FontAwesomeIcon>
                    </span>
                    <LabelHelpTip
                      body={[Function]}
                      customStyle={
                        Object {
                          "marginLeft": "5px",
                          "verticalAlign": "top",
                        }
                      }
                      id="tooltip"
                      placement="top"
                      size="1x"
                      title="Batch Fields"
                    >
                      <span
                        className="label-help-target"
                        onMouseOut={[Function]}
                        onMouseOver={[Function]}
                      >
                        <FontAwesomeIcon
                          border={false}
                          className="label-help-icon"
                          fixedWidth={false}
                          flip={null}
                          icon={
                            Object {
                              "icon": Array [
                                512,
                                512,
                                Array [],
                                "f059",
                                "M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z",
                              ],
                              "iconName": "question-circle",
                              "prefix": "fas",
                            }
                          }
                          inverse={false}
                          listItem={false}
                          mask={null}
                          pull={null}
                          pulse={false}
                          rotation={null}
                          size="1x"
                          spin={false}
                          style={
                            Object {
                              "marginLeft": "5px",
                              "verticalAlign": "top",
                            }
                          }
                          symbol={false}
                          title=""
                          transform={null}
                        >
                          <svg
                            aria-hidden="true"
                            className="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                            data-icon="question-circle"
                            data-prefix="fas"
                            focusable="false"
                            role="img"
                            style={
                              Object {
                                "marginLeft": "5px",
                                "verticalAlign": "top",
                              }
                            }
                            viewBox="0 0 512 512"
                            xmlns="http://www.w3.org/2000/svg"
                          >
                            <path
                              d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                              fill="currentColor"
                              style={Object {}}
                            />
                          </svg>
                        </FontAwesomeIcon>
                        <Overlay
                          animation={[Function]}
                          placement="top"
                          rootClose={false}
                          show={false}
                          target={
                            <span
                              class="label-help-target"
                            >
                              <svg
                                aria-hidden="true"
                                class="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                                data-icon="question-circle"
                                data-prefix="fas"
                                focusable="false"
                                role="img"
                                style="vertical-align: top; margin-left: 5px;"
                                viewBox="0 0 512 512"
                                xmlns="http://www.w3.org/2000/svg"
                              >
                                <path
                                  d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                  fill="currentColor"
                                />
                              </svg>
                            </span>
                          }
                        >
                          <Overlay
                            placement="top"
                            rootClose={false}
                            show={false}
                            target={
                              <span
                                class="label-help-target"
                              >
                                <svg
                                  aria-hidden="true"
                                  class="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                                  data-icon="question-circle"
                                  data-prefix="fas"
                                  focusable="false"
                                  role="img"
                                  style="vertical-align: top; margin-left: 5px;"
                                  viewBox="0 0 512 512"
                                  xmlns="http://www.w3.org/2000/svg"
                                >
                                  <path
                                    d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                    fill="currentColor"
                                  />
                                </svg>
                              </span>
                            }
                            transition={[Function]}
                          />
                        </Overlay>
                      </span>
                    </LabelHelpTip>
                  </div>
                </PanelHeading>
              </CollapsiblePanelHeader>
              <PanelBody
                bsClass="panel"
                collapsible={true}
              >
                <PanelCollapse
                  bsClass="panel"
                >
                  <Collapse
                    appear={false}
                    dimension="height"
                    getDimensionValue={[Function]}
                    in={false}
                    mountOnEnter={false}
                    timeout={300}
                    unmountOnExit={false}
                  >
                    <Transition
                      appear={false}
                      aria-expanded={null}
                      enter={true}
                      exit={true}
                      in={false}
                      mountOnEnter={false}
                      onEnter={[Function]}
                      onEntered={[Function]}
                      onEntering={[Function]}
                      onExit={[Function]}
                      onExited={[Function]}
                      onExiting={[Function]}
                      timeout={300}
                      unmountOnExit={false}
                    >
                      <div
                        aria-expanded={null}
                        className="panel-collapse collapse"
                      >
                        <div
                          className="panel-body"
                        >
                          <Row
                            bsClass="row"
                            className=""
                            componentClass="div"
                          >
                            <div
                              className="row"
                            >
                              <Col
                                bsClass="col"
                                componentClass="div"
                                xs={12}
                              >
                                <div
                                  className="col-xs-12"
                                />
                              </Col>
                            </div>
                          </Row>
                          <Uncontrolled(Panel)
                            className="domain-form-no-field-panel"
                          >
                            <Panel
                              bsClass="panel"
                              bsStyle="default"
                              className="domain-form-no-field-panel"
                              onToggle={[Function]}
                            >
                              <div
                                className="domain-form-no-field-panel panel panel-default"
                              >
                                No fields created yet. Add some using the button below.
                              </div>
                            </Panel>
                          </Uncontrolled(Panel)>
                          <Row
                            bsClass="row"
                            className="domain-add-field-row"
                            componentClass="div"
                          >
                            <div
                              className="domain-add-field-row row"
                            >
                              <Col
                                bsClass="col"
                                componentClass="div"
                                xs={12}
                              >
                                <div
                                  className="col-xs-12"
                                >
                                  <AddEntityButton
                                    buttonClass="domain-form-add-btn"
                                    containerClass="form-group"
                                    entity="Field"
                                    helperTitle="More Info"
                                    onClick={[Function]}
                                  >
                                    <div
                                      className="form-group"
                                    >
                                      <div
                                        className="domain-form-add-btn"
                                      >
                                        <span
                                          className="container--action-button btn btn-default"
                                          onClick={[Function]}
                                        >
                                          <i
                                            className="fa fa-plus-circle container--addition-icon"
                                          />
                                           Add 
                                          Field
                                        </span>
                                      </div>
                                    </div>
                                  </AddEntityButton>
                                </div>
                              </Col>
                            </div>
                          </Row>
                        </div>
                      </div>
                    </Transition>
                  </Collapse>
                </PanelCollapse>
              </PanelBody>
            </div>
          </Panel>
        </Uncontrolled(Panel)>
      </DomainFormImpl>
    </LookupProvider>
  </DomainForm>
  <DomainForm
    controlledCollapse={true}
    domain={
      Immutable.Record {
        "name": "Run Fields",
        "container": undefined,
        "description": undefined,
        "domainURI": undefined,
        "domainId": null,
        "allowFileLinkProperties": true,
        "allowAttachmentProperties": true,
        "allowFlagProperties": true,
        "showDefaultValueSettings": false,
        "defaultDefaultValueType": undefined,
        "defaultValueOptions": Immutable.List [],
        "fields": Immutable.List [],
        "indices": Immutable.List [],
        "domainException": undefined,
        "mandatoryFieldNames": Immutable.List [],
        "reservedFieldNames": Immutable.List [],
        "newDesignFields": undefined,
        "instructions": undefined,
      }
    }
    domainIndex={1}
    helpTopic={null}
    initCollapsed={true}
    key="1"
    modelDomains={
      Immutable.List [
        Immutable.Record {
          "name": "Batch Fields",
          "container": undefined,
          "description": undefined,
          "domainURI": undefined,
          "domainId": null,
          "allowFileLinkProperties": true,
          "allowAttachmentProperties": true,
          "allowFlagProperties": true,
          "showDefaultValueSettings": false,
          "defaultDefaultValueType": undefined,
          "defaultValueOptions": Immutable.List [],
          "fields": Immutable.List [],
          "indices": Immutable.List [],
          "domainException": undefined,
          "mandatoryFieldNames": Immutable.List [],
          "reservedFieldNames": Immutable.List [],
          "newDesignFields": undefined,
          "instructions": undefined,
        },
        Immutable.Record {
          "name": "Run Fields",
          "container": undefined,
          "description": undefined,
          "domainURI": undefined,
          "domainId": null,
          "allowFileLinkProperties": true,
          "allowAttachmentProperties": true,
          "allowFlagProperties": true,
          "showDefaultValueSettings": false,
          "defaultDefaultValueType": undefined,
          "defaultValueOptions": Immutable.List [],
          "fields": Immutable.List [],
          "indices": Immutable.List [],
          "domainException": undefined,
          "mandatoryFieldNames": Immutable.List [],
          "reservedFieldNames": Immutable.List [],
          "newDesignFields": undefined,
          "instructions": undefined,
        },
        Immutable.Record {
          "name": "Data Fields",
          "container": undefined,
          "description": undefined,
          "domainURI": undefined,
          "domainId": null,
          "allowFileLinkProperties": true,
          "allowAttachmentProperties": true,
          "allowFlagProperties": true,
          "showDefaultValueSettings": false,
          "defaultDefaultValueType": undefined,
          "defaultValueOptions": Immutable.List [],
          "fields": Immutable.List [],
          "indices": Immutable.List [],
          "domainException": undefined,
          "mandatoryFieldNames": Immutable.List [],
          "reservedFieldNames": Immutable.List [],
          "newDesignFields": undefined,
          "instructions": undefined,
        },
      ]
    }
    onChange={[Function]}
    onToggle={[Function]}
    panelStatus="TODO"
    showFilePropertyType={true}
    showInferFromFile={false}
    validate={false}
  >
    <LookupProvider>
      <DomainFormImpl
        appPropertiesOnly={false}
        controlledCollapse={true}
        domain={
          Immutable.Record {
            "name": "Run Fields",
            "container": undefined,
            "description": undefined,
            "domainURI": undefined,
            "domainId": null,
            "allowFileLinkProperties": true,
            "allowAttachmentProperties": true,
            "allowFlagProperties": true,
            "showDefaultValueSettings": false,
            "defaultDefaultValueType": undefined,
            "defaultValueOptions": Immutable.List [],
            "fields": Immutable.List [],
            "indices": Immutable.List [],
            "domainException": undefined,
            "mandatoryFieldNames": Immutable.List [],
            "reservedFieldNames": Immutable.List [],
            "newDesignFields": undefined,
            "instructions": undefined,
          }
        }
        domainFormDisplayOptions={
          Object {
            "isDragDisabled": false,
            "phiLevelDisabled": false,
            "showAddFieldsButton": true,
            "showRequired": true,
            "showTextOptions": true,
            "showValidators": true,
          }
        }
        domainIndex={1}
        helpNoun="field designer"
        helpTopic={null}
        initCollapsed={true}
        isNew={false}
        modelDomains={
          Immutable.List [
            Immutable.Record {
              "name": "Batch Fields",
              "container": undefined,
              "description": undefined,
              "domainURI": undefined,
              "domainId": null,
              "allowFileLinkProperties": true,
              "allowAttachmentProperties": true,
              "allowFlagProperties": true,
              "showDefaultValueSettings": false,
              "defaultDefaultValueType": undefined,
              "defaultValueOptions": Immutable.List [],
              "fields": Immutable.List [],
              "indices": Immutable.List [],
              "domainException": undefined,
              "mandatoryFieldNames": Immutable.List [],
              "reservedFieldNames": Immutable.List [],
              "newDesignFields": undefined,
              "instructions": undefined,
            },
            Immutable.Record {
              "name": "Run Fields",
              "container": undefined,
              "description": undefined,
              "domainURI": undefined,
              "domainId": null,
              "allowFileLinkProperties": true,
              "allowAttachmentProperties": true,
              "allowFlagProperties": true,
              "showDefaultValueSettings": false,
              "defaultDefaultValueType": undefined,
              "defaultValueOptions": Immutable.List [],
              "fields": Immutable.List [],
              "indices": Immutable.List [],
              "domainException": undefined,
              "mandatoryFieldNames": Immutable.List [],
              "reservedFieldNames": Immutable.List [],
              "newDesignFields": undefined,
              "instructions": undefined,
            },
            Immutable.Record {
              "name": "Data Fields",
              "container": undefined,
              "description": undefined,
              "domainURI": undefined,
              "domainId": null,
              "allowFileLinkProperties": true,
              "allowAttachmentProperties": true,
              "allowFlagProperties": true,
              "showDefaultValueSettings": false,
              "defaultDefaultValueType": undefined,
              "defaultValueOptions": Immutable.List [],
              "fields": Immutable.List [],
              "indices": Immutable.List [],
              "domainException": undefined,
              "mandatoryFieldNames": Immutable.List [],
              "reservedFieldNames": Immutable.List [],
              "newDesignFields": undefined,
              "instructions": undefined,
            },
          ]
        }
        onChange={[Function]}
        onToggle={[Function]}
        panelStatus="TODO"
        showFilePropertyType={true}
        showHeader={true}
        showInferFromFile={false}
        successBsStyle="success"
        validate={false}
      >
        <Uncontrolled(Panel)
          className="domain-form-panel"
          expanded={false}
          onToggle={[Function]}
        >
          <Panel
            bsClass="panel"
            bsStyle="default"
            className="domain-form-panel"
            expanded={false}
            onToggle={[Function]}
          >
            <div
              className="domain-form-panel panel panel-default"
            >
              <CollapsiblePanelHeader
                collapsed={true}
                controlledCollapse={true}
                id="domainpropertiesrow-Run-Fields-hdr"
                isValid={true}
                panelStatus="TODO"
                title="Run Fields"
                togglePanel={[Function]}
              >
                <PanelHeading
                  bsClass="panel"
                  className="domain-panel-header domain-heading-collapsible domain-panel-header-collapsed"
                  componentClass="div"
                  id="domainpropertiesrow-Run-Fields-hdr"
                  onClick={[Function]}
                >
                  <div
                    className="domain-panel-header domain-heading-collapsible domain-panel-header-collapsed panel-heading"
                    id="domainpropertiesrow-Run-Fields-hdr"
                    onClick={[Function]}
                  >
                    <LabelHelpTip
                      body={[Function]}
                      customStyle={Object {}}
                      iconComponent={[Function]}
                      id="tooltip"
                      placement="top"
                      size="1x"
                      title="Run Fields"
                    >
                      <span
                        className="label-help-target"
                        onMouseOut={[Function]}
                        onMouseOver={[Function]}
                      >
                        <span
                          className="domain-panel-status-icon domain-panel-status-icon-blue"
                        >
                          <FontAwesomeIcon
                            border={false}
                            className=""
                            fixedWidth={false}
                            flip={null}
                            icon={
                              Object {
                                "icon": Array [
                                  512,
                                  512,
                                  Array [],
                                  "f06a",
                                  "M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zm-248 50c-25.405 0-46 20.595-46 46s20.595 46 46 46 46-20.595 46-46-20.595-46-46-46zm-43.673-165.346l7.418 136c.347 6.364 5.609 11.346 11.982 11.346h48.546c6.373 0 11.635-4.982 11.982-11.346l7.418-136c.375-6.874-5.098-12.654-11.982-12.654h-63.383c-6.884 0-12.356 5.78-11.981 12.654z",
                                ],
                                "iconName": "exclamation-circle",
                                "prefix": "fas",
                              }
                            }
                            inverse={false}
                            listItem={false}
                            mask={null}
                            pull={null}
                            pulse={false}
                            rotation={null}
                            size={null}
                            spin={false}
                            symbol={false}
                            title=""
                            transform={null}
                          >
                            <svg
                              aria-hidden="true"
                              className="svg-inline--fa fa-exclamation-circle fa-w-16 "
                              data-icon="exclamation-circle"
                              data-prefix="fas"
                              focusable="false"
                              role="img"
                              style={Object {}}
                              viewBox="0 0 512 512"
                              xmlns="http://www.w3.org/2000/svg"
                            >
                              <path
                                d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zm-248 50c-25.405 0-46 20.595-46 46s20.595 46 46 46 46-20.595 46-46-20.595-46-46-46zm-43.673-165.346l7.418 136c.347 6.364 5.609 11.346 11.982 11.346h48.546c6.373 0 11.635-4.982 11.982-11.346l7.418-136c.375-6.874-5.098-12.654-11.982-12.654h-63.383c-6.884 0-12.356 5.78-11.981 12.654z"
                                fill="currentColor"
                                style={Object {}}
                              />
                            </svg>
                          </FontAwesomeIcon>
                        </span>
                        <Overlay
                          animation={[Function]}
                          placement="top"
                          rootClose={false}
                          show={false}
                          target={
                            <span
                              class="label-help-target"
                            >
                              <span
                                class="domain-panel-status-icon domain-panel-status-icon-blue"
                              >
                                <svg
                                  aria-hidden="true"
                                  class="svg-inline--fa fa-exclamation-circle fa-w-16 "
                                  data-icon="exclamation-circle"
                                  data-prefix="fas"
                                  focusable="false"
                                  role="img"
                                  viewBox="0 0 512 512"
                                  xmlns="http://www.w3.org/2000/svg"
                                >
                                  <path
                                    d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zm-248 50c-25.405 0-46 20.595-46 46s20.595 46 46 46 46-20.595 46-46-20.595-46-46-46zm-43.673-165.346l7.418 136c.347 6.364 5.609 11.346 11.982 11.346h48.546c6.373 0 11.635-4.982 11.982-11.346l7.418-136c.375-6.874-5.098-12.654-11.982-12.654h-63.383c-6.884 0-12.356 5.78-11.981 12.654z"
                                    fill="currentColor"
                                  />
                                </svg>
                              </span>
                            </span>
                          }
                        >
                          <Overlay
                            placement="top"
                            rootClose={false}
                            show={false}
                            target={
                              <span
                                class="label-help-target"
                              >
                                <span
                                  class="domain-panel-status-icon domain-panel-status-icon-blue"
                                >
                                  <svg
                                    aria-hidden="true"
                                    class="svg-inline--fa fa-exclamation-circle fa-w-16 "
                                    data-icon="exclamation-circle"
                                    data-prefix="fas"
                                    focusable="false"
                                    role="img"
                                    viewBox="0 0 512 512"
                                    xmlns="http://www.w3.org/2000/svg"
                                  >
                                    <path
                                      d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zm-248 50c-25.405 0-46 20.595-46 46s20.595 46 46 46 46-20.595 46-46-20.595-46-46-46zm-43.673-165.346l7.418 136c.347 6.364 5.609 11.346 11.982 11.346h48.546c6.373 0 11.635-4.982 11.982-11.346l7.418-136c.375-6.874-5.098-12.654-11.982-12.654h-63.383c-6.884 0-12.356 5.78-11.981 12.654z"
                                      fill="currentColor"
                                    />
                                  </svg>
                                </span>
                              </span>
                            }
                            transition={[Function]}
                          />
                        </Overlay>
                      </span>
                    </LabelHelpTip>
                    <span
                      className="domain-panel-title"
                    >
                      Run Fields
                    </span>
                    <span
                      className="pull-right"
                    >
                      <FontAwesomeIcon
                        border={false}
                        className="domain-form-expand-btn"
                        fixedWidth={false}
                        flip={null}
                        icon={
                          Object {
                            "icon": Array [
                              448,
                              512,
                              Array [],
                              "f0fe",
                              "M400 32H48C21.5 32 0 53.5 0 80v352c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V80c0-26.5-21.5-48-48-48zm-32 252c0 6.6-5.4 12-12 12h-92v92c0 6.6-5.4 12-12 12h-56c-6.6 0-12-5.4-12-12v-92H92c-6.6 0-12-5.4-12-12v-56c0-6.6 5.4-12 12-12h92v-92c0-6.6 5.4-12 12-12h56c6.6 0 12 5.4 12 12v92h92c6.6 0 12 5.4 12 12v56z",
                            ],
                            "iconName": "plus-square",
                            "prefix": "fas",
                          }
                        }
                        inverse={false}
                        listItem={false}
                        mask={null}
                        pull={null}
                        pulse={false}
                        rotation={null}
                        size="lg"
                        spin={false}
                        symbol={false}
                        title=""
                        transform={null}
                      >
                        <svg
                          aria-hidden="true"
                          className="svg-inline--fa fa-plus-square fa-w-14 fa-lg domain-form-expand-btn"
                          data-icon="plus-square"
                          data-prefix="fas"
                          focusable="false"
                          role="img"
                          style={Object {}}
                          viewBox="0 0 448 512"
                          xmlns="http://www.w3.org/2000/svg"
                        >
                          <path
                            d="M400 32H48C21.5 32 0 53.5 0 80v352c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V80c0-26.5-21.5-48-48-48zm-32 252c0 6.6-5.4 12-12 12h-92v92c0 6.6-5.4 12-12 12h-56c-6.6 0-12-5.4-12-12v-92H92c-6.6 0-12-5.4-12-12v-56c0-6.6 5.4-12 12-12h92v-92c0-6.6 5.4-12 12-12h56c6.6 0 12 5.4 12 12v92h92c6.6 0 12 5.4 12 12v56z"
                            fill="currentColor"
                            style={Object {}}
                          />
                        </svg>
                      </FontAwesomeIcon>
                    </span>
                    <LabelHelpTip
                      body={[Function]}
                      customStyle={
                        Object {
                          "marginLeft": "5px",
                          "verticalAlign": "top",
                        }
                      }
                      id="tooltip"
                      placement="top"
                      size="1x"
                      title="Run Fields"
                    >
                      <span
                        className="label-help-target"
                        onMouseOut={[Function]}
                        onMouseOver={[Function]}
                      >
                        <FontAwesomeIcon
                          border={false}
                          className="label-help-icon"
                          fixedWidth={false}
                          flip={null}
                          icon={
                            Object {
                              "icon": Array [
                                512,
                                512,
                                Array [],
                                "f059",
                                "M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z",
                              ],
                              "iconName": "question-circle",
                              "prefix": "fas",
                            }
                          }
                          inverse={false}
                          listItem={false}
                          mask={null}
                          pull={null}
                          pulse={false}
                          rotation={null}
                          size="1x"
                          spin={false}
                          style={
                            Object {
                              "marginLeft": "5px",
                              "verticalAlign": "top",
                            }
                          }
                          symbol={false}
                          title=""
                          transform={null}
                        >
                          <svg
                            aria-hidden="true"
                            className="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                            data-icon="question-circle"
                            data-prefix="fas"
                            focusable="false"
                            role="img"
                            style={
                              Object {
                                "marginLeft": "5px",
                                "verticalAlign": "top",
                              }
                            }
                            viewBox="0 0 512 512"
                            xmlns="http://www.w3.org/2000/svg"
                          >
                            <path
                              d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                              fill="currentColor"
                              style={Object {}}
                            />
                          </svg>
                        </FontAwesomeIcon>
                        <Overlay
                          animation={[Function]}
                          placement="top"
                          rootClose={false}
                          show={false}
                          target={
                            <span
                              class="label-help-target"
                            >
                              <svg
                                aria-hidden="true"
                                class="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                                data-icon="question-circle"
                                data-prefix="fas"
                                focusable="false"
                                role="img"
                                style="vertical-align: top; margin-left: 5px;"
                                viewBox="0 0 512 512"
                                xmlns="http://www.w3.org/2000/svg"
                              >
                                <path
                                  d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                  fill="currentColor"
                                />
                              </svg>
                            </span>
                          }
                        >
                          <Overlay
                            placement="top"
                            rootClose={false}
                            show={false}
                            target={
                              <span
                                class="label-help-target"
                              >
                                <svg
                                  aria-hidden="true"
                                  class="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                                  data-icon="question-circle"
                                  data-prefix="fas"
                                  focusable="false"
                                  role="img"
                                  style="vertical-align: top; margin-left: 5px;"
                                  viewBox="0 0 512 512"
                                  xmlns="http://www.w3.org/2000/svg"
                                >
                                  <path
                                    d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                    fill="currentColor"
                                  />
                                </svg>
                              </span>
                            }
                            transition={[Function]}
                          />
                        </Overlay>
                      </span>
                    </LabelHelpTip>
                  </div>
                </PanelHeading>
              </CollapsiblePanelHeader>
              <PanelBody
                bsClass="panel"
                collapsible={true}
              >
                <PanelCollapse
                  bsClass="panel"
                >
                  <Collapse
                    appear={false}
                    dimension="height"
                    getDimensionValue={[Function]}
                    in={false}
                    mountOnEnter={false}
                    timeout={300}
                    unmountOnExit={false}
                  >
                    <Transition
                      appear={false}
                      aria-expanded={null}
                      enter={true}
                      exit={true}
                      in={false}
                      mountOnEnter={false}
                      onEnter={[Function]}
                      onEntered={[Function]}
                      onEntering={[Function]}
                      onExit={[Function]}
                      onExited={[Function]}
                      onExiting={[Function]}
                      timeout={300}
                      unmountOnExit={false}
                    >
                      <div
                        aria-expanded={null}
                        className="panel-collapse collapse"
                      >
                        <div
                          className="panel-body"
                        >
                          <Row
                            bsClass="row"
                            className=""
                            componentClass="div"
                          >
                            <div
                              className="row"
                            >
                              <Col
                                bsClass="col"
                                componentClass="div"
                                xs={12}
                              >
                                <div
                                  className="col-xs-12"
                                />
                              </Col>
                            </div>
                          </Row>
                          <Uncontrolled(Panel)
                            className="domain-form-no-field-panel"
                          >
                            <Panel
                              bsClass="panel"
                              bsStyle="default"
                              className="domain-form-no-field-panel"
                              onToggle={[Function]}
                            >
                              <div
                                className="domain-form-no-field-panel panel panel-default"
                              >
                                No fields created yet. Add some using the button below.
                              </div>
                            </Panel>
                          </Uncontrolled(Panel)>
                          <Row
                            bsClass="row"
                            className="domain-add-field-row"
                            componentClass="div"
                          >
                            <div
                              className="domain-add-field-row row"
                            >
                              <Col
                                bsClass="col"
                                componentClass="div"
                                xs={12}
                              >
                                <div
                                  className="col-xs-12"
                                >
                                  <AddEntityButton
                                    buttonClass="domain-form-add-btn"
                                    containerClass="form-group"
                                    entity="Field"
                                    helperTitle="More Info"
                                    onClick={[Function]}
                                  >
                                    <div
                                      className="form-group"
                                    >
                                      <div
                                        className="domain-form-add-btn"
                                      >
                                        <span
                                          className="container--action-button btn btn-default"
                                          onClick={[Function]}
                                        >
                                          <i
                                            className="fa fa-plus-circle container--addition-icon"
                                          />
                                           Add 
                                          Field
                                        </span>
                                      </div>
                                    </div>
                                  </AddEntityButton>
                                </div>
                              </Col>
                            </div>
                          </Row>
                        </div>
                      </div>
                    </Transition>
                  </Collapse>
                </PanelCollapse>
              </PanelBody>
            </div>
          </Panel>
        </Uncontrolled(Panel)>
      </DomainFormImpl>
    </LookupProvider>
  </DomainForm>
  <DomainForm
    controlledCollapse={true}
    domain={
      Immutable.Record {
        "name": "Data Fields",
        "container": undefined,
        "description": undefined,
        "domainURI": undefined,
        "domainId": null,
        "allowFileLinkProperties": true,
        "allowAttachmentProperties": true,
        "allowFlagProperties": true,
        "showDefaultValueSettings": false,
        "defaultDefaultValueType": undefined,
        "defaultValueOptions": Immutable.List [],
        "fields": Immutable.List [],
        "indices": Immutable.List [],
        "domainException": undefined,
        "mandatoryFieldNames": Immutable.List [],
        "reservedFieldNames": Immutable.List [],
        "newDesignFields": undefined,
        "instructions": undefined,
      }
    }
    domainIndex={2}
    helpTopic={null}
    initCollapsed={true}
    key="2"
    modelDomains={
      Immutable.List [
        Immutable.Record {
          "name": "Batch Fields",
          "container": undefined,
          "description": undefined,
          "domainURI": undefined,
          "domainId": null,
          "allowFileLinkProperties": true,
          "allowAttachmentProperties": true,
          "allowFlagProperties": true,
          "showDefaultValueSettings": false,
          "defaultDefaultValueType": undefined,
          "defaultValueOptions": Immutable.List [],
          "fields": Immutable.List [],
          "indices": Immutable.List [],
          "domainException": undefined,
          "mandatoryFieldNames": Immutable.List [],
          "reservedFieldNames": Immutable.List [],
          "newDesignFields": undefined,
          "instructions": undefined,
        },
        Immutable.Record {
          "name": "Run Fields",
          "container": undefined,
          "description": undefined,
          "domainURI": undefined,
          "domainId": null,
          "allowFileLinkProperties": true,
          "allowAttachmentProperties": true,
          "allowFlagProperties": true,
          "showDefaultValueSettings": false,
          "defaultDefaultValueType": undefined,
          "defaultValueOptions": Immutable.List [],
          "fields": Immutable.List [],
          "indices": Immutable.List [],
          "domainException": undefined,
          "mandatoryFieldNames": Immutable.List [],
          "reservedFieldNames": Immutable.List [],
          "newDesignFields": undefined,
          "instructions": undefined,
        },
        Immutable.Record {
          "name": "Data Fields",
          "container": undefined,
          "description": undefined,
          "domainURI": undefined,
          "domainId": null,
          "allowFileLinkProperties": true,
          "allowAttachmentProperties": true,
          "allowFlagProperties": true,
          "showDefaultValueSettings": false,
          "defaultDefaultValueType": undefined,
          "defaultValueOptions": Immutable.List [],
          "fields": Immutable.List [],
          "indices": Immutable.List [],
          "domainException": undefined,
          "mandatoryFieldNames": Immutable.List [],
          "reservedFieldNames": Immutable.List [],
          "newDesignFields": undefined,
          "instructions": undefined,
        },
      ]
    }
    onChange={[Function]}
    onToggle={[Function]}
    panelStatus="TODO"
    showFilePropertyType={false}
    showInferFromFile={true}
    validate={false}
  >
    <LookupProvider>
      <DomainFormImpl
        appPropertiesOnly={false}
        controlledCollapse={true}
        domain={
          Immutable.Record {
            "name": "Data Fields",
            "container": undefined,
            "description": undefined,
            "domainURI": undefined,
            "domainId": null,
            "allowFileLinkProperties": true,
            "allowAttachmentProperties": true,
            "allowFlagProperties": true,
            "showDefaultValueSettings": false,
            "defaultDefaultValueType": undefined,
            "defaultValueOptions": Immutable.List [],
            "fields": Immutable.List [],
            "indices": Immutable.List [],
            "domainException": undefined,
            "mandatoryFieldNames": Immutable.List [],
            "reservedFieldNames": Immutable.List [],
            "newDesignFields": undefined,
            "instructions": undefined,
          }
        }
        domainFormDisplayOptions={
          Object {
            "isDragDisabled": false,
            "phiLevelDisabled": false,
            "showAddFieldsButton": true,
            "showRequired": true,
            "showTextOptions": true,
            "showValidators": true,
          }
        }
        domainIndex={2}
        helpNoun="field designer"
        helpTopic={null}
        initCollapsed={true}
        isNew={false}
        modelDomains={
          Immutable.List [
            Immutable.Record {
              "name": "Batch Fields",
              "container": undefined,
              "description": undefined,
              "domainURI": undefined,
              "domainId": null,
              "allowFileLinkProperties": true,
              "allowAttachmentProperties": true,
              "allowFlagProperties": true,
              "showDefaultValueSettings": false,
              "defaultDefaultValueType": undefined,
              "defaultValueOptions": Immutable.List [],
              "fields": Immutable.List [],
              "indices": Immutable.List [],
              "domainException": undefined,
              "mandatoryFieldNames": Immutable.List [],
              "reservedFieldNames": Immutable.List [],
              "newDesignFields": undefined,
              "instructions": undefined,
            },
            Immutable.Record {
              "name": "Run Fields",
              "container": undefined,
              "description": undefined,
              "domainURI": undefined,
              "domainId": null,
              "allowFileLinkProperties": true,
              "allowAttachmentProperties": true,
              "allowFlagProperties": true,
              "showDefaultValueSettings": false,
              "defaultDefaultValueType": undefined,
              "defaultValueOptions": Immutable.List [],
              "fields": Immutable.List [],
              "indices": Immutable.List [],
              "domainException": undefined,
              "mandatoryFieldNames": Immutable.List [],
              "reservedFieldNames": Immutable.List [],
              "newDesignFields": undefined,
              "instructions": undefined,
            },
            Immutable.Record {
              "name": "Data Fields",
              "container": undefined,
              "description": undefined,
              "domainURI": undefined,
              "domainId": null,
              "allowFileLinkProperties": true,
              "allowAttachmentProperties": true,
              "allowFlagProperties": true,
              "showDefaultValueSettings": false,
              "defaultDefaultValueType": undefined,
              "defaultValueOptions": Immutable.List [],
              "fields": Immutable.List [],
              "indices": Immutable.List [],
              "domainException": undefined,
              "mandatoryFieldNames": Immutable.List [],
              "reservedFieldNames": Immutable.List [],
              "newDesignFields": undefined,
              "instructions": undefined,
            },
          ]
        }
        onChange={[Function]}
        onToggle={[Function]}
        panelStatus="TODO"
        showFilePropertyType={false}
        showHeader={true}
        showInferFromFile={true}
        successBsStyle="success"
        validate={false}
      >
        <Uncontrolled(Panel)
          className="domain-form-panel"
          expanded={false}
          onToggle={[Function]}
        >
          <Panel
            bsClass="panel"
            bsStyle="default"
            className="domain-form-panel"
            expanded={false}
            onToggle={[Function]}
          >
            <div
              className="domain-form-panel panel panel-default"
            >
              <CollapsiblePanelHeader
                collapsed={true}
                controlledCollapse={true}
                id="domainpropertiesrow-Data-Fields-hdr"
                isValid={true}
                panelStatus="TODO"
                title="Results Fields"
                togglePanel={[Function]}
              >
                <PanelHeading
                  bsClass="panel"
                  className="domain-panel-header domain-heading-collapsible domain-panel-header-collapsed"
                  componentClass="div"
                  id="domainpropertiesrow-Data-Fields-hdr"
                  onClick={[Function]}
                >
                  <div
                    className="domain-panel-header domain-heading-collapsible domain-panel-header-collapsed panel-heading"
                    id="domainpropertiesrow-Data-Fields-hdr"
                    onClick={[Function]}
                  >
                    <LabelHelpTip
                      body={[Function]}
                      customStyle={Object {}}
                      iconComponent={[Function]}
                      id="tooltip"
                      placement="top"
                      size="1x"
                      title="Results Fields"
                    >
                      <span
                        className="label-help-target"
                        onMouseOut={[Function]}
                        onMouseOver={[Function]}
                      >
                        <span
                          className="domain-panel-status-icon domain-panel-status-icon-blue"
                        >
                          <FontAwesomeIcon
                            border={false}
                            className=""
                            fixedWidth={false}
                            flip={null}
                            icon={
                              Object {
                                "icon": Array [
                                  512,
                                  512,
                                  Array [],
                                  "f06a",
                                  "M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zm-248 50c-25.405 0-46 20.595-46 46s20.595 46 46 46 46-20.595 46-46-20.595-46-46-46zm-43.673-165.346l7.418 136c.347 6.364 5.609 11.346 11.982 11.346h48.546c6.373 0 11.635-4.982 11.982-11.346l7.418-136c.375-6.874-5.098-12.654-11.982-12.654h-63.383c-6.884 0-12.356 5.78-11.981 12.654z",
                                ],
                                "iconName": "exclamation-circle",
                                "prefix": "fas",
                              }
                            }
                            inverse={false}
                            listItem={false}
                            mask={null}
                            pull={null}
                            pulse={false}
                            rotation={null}
                            size={null}
                            spin={false}
                            symbol={false}
                            title=""
                            transform={null}
                          >
                            <svg
                              aria-hidden="true"
                              className="svg-inline--fa fa-exclamation-circle fa-w-16 "
                              data-icon="exclamation-circle"
                              data-prefix="fas"
                              focusable="false"
                              role="img"
                              style={Object {}}
                              viewBox="0 0 512 512"
                              xmlns="http://www.w3.org/2000/svg"
                            >
                              <path
                                d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zm-248 50c-25.405 0-46 20.595-46 46s20.595 46 46 46 46-20.595 46-46-20.595-46-46-46zm-43.673-165.346l7.418 136c.347 6.364 5.609 11.346 11.982 11.346h48.546c6.373 0 11.635-4.982 11.982-11.346l7.418-136c.375-6.874-5.098-12.654-11.982-12.654h-63.383c-6.884 0-12.356 5.78-11.981 12.654z"
                                fill="currentColor"
                                style={Object {}}
                              />
                            </svg>
                          </FontAwesomeIcon>
                        </span>
                        <Overlay
                          animation={[Function]}
                          placement="top"
                          rootClose={false}
                          show={false}
                          target={
                            <span
                              class="label-help-target"
                            >
                              <span
                                class="domain-panel-status-icon domain-panel-status-icon-blue"
                              >
                                <svg
                                  aria-hidden="true"
                                  class="svg-inline--fa fa-exclamation-circle fa-w-16 "
                                  data-icon="exclamation-circle"
                                  data-prefix="fas"
                                  focusable="false"
                                  role="img"
                                  viewBox="0 0 512 512"
                                  xmlns="http://www.w3.org/2000/svg"
                                >
                                  <path
                                    d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zm-248 50c-25.405 0-46 20.595-46 46s20.595 46 46 46 46-20.595 46-46-20.595-46-46-46zm-43.673-165.346l7.418 136c.347 6.364 5.609 11.346 11.982 11.346h48.546c6.373 0 11.635-4.982 11.982-11.346l7.418-136c.375-6.874-5.098-12.654-11.982-12.654h-63.383c-6.884 0-12.356 5.78-11.981 12.654z"
                                    fill="currentColor"
                                  />
                                </svg>
                              </span>
                            </span>
                          }
                        >
                          <Overlay
                            placement="top"
                            rootClose={false}
                            show={false}
                            target={
                              <span
                                class="label-help-target"
                              >
                                <span
                                  class="domain-panel-status-icon domain-panel-status-icon-blue"
                                >
                                  <svg
                                    aria-hidden="true"
                                    class="svg-inline--fa fa-exclamation-circle fa-w-16 "
                                    data-icon="exclamation-circle"
                                    data-prefix="fas"
                                    focusable="false"
                                    role="img"
                                    viewBox="0 0 512 512"
                                    xmlns="http://www.w3.org/2000/svg"
                                  >
                                    <path
                                      d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zm-248 50c-25.405 0-46 20.595-46 46s20.595 46 46 46 46-20.595 46-46-20.595-46-46-46zm-43.673-165.346l7.418 136c.347 6.364 5.609 11.346 11.982 11.346h48.546c6.373 0 11.635-4.982 11.982-11.346l7.418-136c.375-6.874-5.098-12.654-11.982-12.654h-63.383c-6.884 0-12.356 5.78-11.981 12.654z"
                                      fill="currentColor"
                                    />
                                  </svg>
                                </span>
                              </span>
                            }
                            transition={[Function]}
                          />
                        </Overlay>
                      </span>
                    </LabelHelpTip>
                    <span
                      className="domain-panel-title"
                    >
                      Results Fields
                    </span>
                    <span
                      className="pull-right"
                    >
                      <FontAwesomeIcon
                        border={false}
                        className="domain-form-expand-btn"
                        fixedWidth={false}
                        flip={null}
                        icon={
                          Object {
                            "icon": Array [
                              448,
                              512,
                              Array [],
                              "f0fe",
                              "M400 32H48C21.5 32 0 53.5 0 80v352c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V80c0-26.5-21.5-48-48-48zm-32 252c0 6.6-5.4 12-12 12h-92v92c0 6.6-5.4 12-12 12h-56c-6.6 0-12-5.4-12-12v-92H92c-6.6 0-12-5.4-12-12v-56c0-6.6 5.4-12 12-12h92v-92c0-6.6 5.4-12 12-12h56c6.6 0 12 5.4 12 12v92h92c6.6 0 12 5.4 12 12v56z",
                            ],
                            "iconName": "plus-square",
                            "prefix": "fas",
                          }
                        }
                        inverse={false}
                        listItem={false}
                        mask={null}
                        pull={null}
                        pulse={false}
                        rotation={null}
                        size="lg"
                        spin={false}
                        symbol={false}
                        title=""
                        transform={null}
                      >
                        <svg
                          aria-hidden="true"
                          className="svg-inline--fa fa-plus-square fa-w-14 fa-lg domain-form-expand-btn"
                          data-icon="plus-square"
                          data-prefix="fas"
                          focusable="false"
                          role="img"
                          style={Object {}}
                          viewBox="0 0 448 512"
                          xmlns="http://www.w3.org/2000/svg"
                        >
                          <path
                            d="M400 32H48C21.5 32 0 53.5 0 80v352c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V80c0-26.5-21.5-48-48-48zm-32 252c0 6.6-5.4 12-12 12h-92v92c0 6.6-5.4 12-12 12h-56c-6.6 0-12-5.4-12-12v-92H92c-6.6 0-12-5.4-12-12v-56c0-6.6 5.4-12 12-12h92v-92c0-6.6 5.4-12 12-12h56c6.6 0 12 5.4 12 12v92h92c6.6 0 12 5.4 12 12v56z"
                            fill="currentColor"
                            style={Object {}}
                          />
                        </svg>
                      </FontAwesomeIcon>
                    </span>
                    <LabelHelpTip
                      body={[Function]}
                      customStyle={
                        Object {
                          "marginLeft": "5px",
                          "verticalAlign": "top",
                        }
                      }
                      id="tooltip"
                      placement="top"
                      size="1x"
                      title="Results Fields"
                    >
                      <span
                        className="label-help-target"
                        onMouseOut={[Function]}
                        onMouseOver={[Function]}
                      >
                        <FontAwesomeIcon
                          border={false}
                          className="label-help-icon"
                          fixedWidth={false}
                          flip={null}
                          icon={
                            Object {
                              "icon": Array [
                                512,
                                512,
                                Array [],
                                "f059",
                                "M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z",
                              ],
                              "iconName": "question-circle",
                              "prefix": "fas",
                            }
                          }
                          inverse={false}
                          listItem={false}
                          mask={null}
                          pull={null}
                          pulse={false}
                          rotation={null}
                          size="1x"
                          spin={false}
                          style={
                            Object {
                              "marginLeft": "5px",
                              "verticalAlign": "top",
                            }
                          }
                          symbol={false}
                          title=""
                          transform={null}
                        >
                          <svg
                            aria-hidden="true"
                            className="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                            data-icon="question-circle"
                            data-prefix="fas"
                            focusable="false"
                            role="img"
                            style={
                              Object {
                                "marginLeft": "5px",
                                "verticalAlign": "top",
                              }
                            }
                            viewBox="0 0 512 512"
                            xmlns="http://www.w3.org/2000/svg"
                          >
                            <path
                              d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                              fill="currentColor"
                              style={Object {}}
                            />
                          </svg>
                        </FontAwesomeIcon>
                        <Overlay
                          animation={[Function]}
                          placement="top"
                          rootClose={false}
                          show={false}
                          target={
                            <span
                              class="label-help-target"
                            >
                              <svg
                                aria-hidden="true"
                                class="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                                data-icon="question-circle"
                                data-prefix="fas"
                                focusable="false"
                                role="img"
                                style="vertical-align: top; margin-left: 5px;"
                                viewBox="0 0 512 512"
                                xmlns="http://www.w3.org/2000/svg"
                              >
                                <path
                                  d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                  fill="currentColor"
                                />
                              </svg>
                            </span>
                          }
                        >
                          <Overlay
                            placement="top"
                            rootClose={false}
                            show={false}
                            target={
                              <span
                                class="label-help-target"
                              >
                                <svg
                                  aria-hidden="true"
                                  class="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                                  data-icon="question-circle"
                                  data-prefix="fas"
                                  focusable="false"
                                  role="img"
                                  style="vertical-align: top; margin-left: 5px;"
                                  viewBox="0 0 512 512"
                                  xmlns="http://www.w3.org/2000/svg"
                                >
                                  <path
                                    d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                    fill="currentColor"
                                  />
                                </svg>
                              </span>
                            }
                            transition={[Function]}
                          />
                        </Overlay>
                      </span>
                    </LabelHelpTip>
                  </div>
                </PanelHeading>
              </CollapsiblePanelHeader>
              <PanelBody
                bsClass="panel"
                collapsible={true}
              >
                <PanelCollapse
                  bsClass="panel"
                >
                  <Collapse
                    appear={false}
                    dimension="height"
                    getDimensionValue={[Function]}
                    in={false}
                    mountOnEnter={false}
                    timeout={300}
                    unmountOnExit={false}
                  >
                    <Transition
                      appear={false}
                      aria-expanded={null}
                      enter={true}
                      exit={true}
                      in={false}
                      mountOnEnter={false}
                      onEnter={[Function]}
                      onEntered={[Function]}
                      onEntering={[Function]}
                      onExit={[Function]}
                      onExited={[Function]}
                      onExiting={[Function]}
                      timeout={300}
                      unmountOnExit={false}
                    >
                      <div
                        aria-expanded={null}
                        className="panel-collapse collapse"
                      >
                        <div
                          className="panel-body"
                        >
                          <Row
                            bsClass="row"
                            className=""
                            componentClass="div"
                          >
                            <div
                              className="row"
                            >
                              <Col
                                bsClass="col"
                                componentClass="div"
                                xs={12}
                              >
                                <div
                                  className="col-xs-12"
                                />
                              </Col>
                            </div>
                          </Row>
                          <FileAttachmentForm
                            acceptedFormats=".csv, .tsv, .txt, .xls, .xlsx"
                            allowDirectories={false}
                            allowMultiple={false}
                            cancelText="Cancel"
                            compact={false}
                            label="Infer fields from file"
                            labelLong="Select file or drag and drop here."
                            onFileRemoval={[Function]}
                            previewGridProps={
                              Object {
                                "onPreviewLoad": [Function],
                                "previewCount": 3,
                                "skipPreviewGrid": true,
                              }
                            }
                            showAcceptedFormats={true}
                            showButtons={false}
                            showLabel={true}
                            showProgressBar={false}
                            submitText="Upload"
                          >
                            <span
                              className="translator--toggle__wizard"
                            >
                              <FormSection
                                iconSpacer={false}
                                label="Infer fields from file"
                                showLabel={true}
                              >
                                <div
                                  className="row"
                                >
                                  <div
                                    className="col-sm-12"
                                  >
                                    <label
                                      className="control-label text-left"
                                    >
                                      <strong>
                                        Infer fields from file
                                      </strong>
                                    </label>
                                  </div>
                                </div>
                                <div
                                  className="row"
                                >
                                  <div
                                    className="col-sm-12"
                                  >
                                    <div
                                      className="wizard-row--container"
                                    >
                                      <FileAttachmentContainer
                                        acceptedFormats=".csv, .tsv, .txt, .xls, .xlsx"
                                        allowDirectories={false}
                                        allowMultiple={false}
                                        compact={false}
                                        handleChange={[Function]}
                                        handleRemoval={[Function]}
                                        labelLong="Select file or drag and drop here."
                                      >
                                        <div>
                                          <div
                                            className="file-upload--container block"
                                          >
                                            <label
                                              className="file-upload--label"
                                              htmlFor="fileUpload"
                                              onDragEnter={[Function]}
                                              onDragLeave={[Function]}
                                              onDragOver={[Function]}
                                              onDrop={[Function]}
                                            >
                                              <i
                                                aria-hidden="true"
                                                className="fa fa-cloud-upload fa-2x cloud-logo"
                                              />
                                              Select file or drag and drop here.
                                            </label>
                                            <input
                                              accept=".csv, .tsv, .txt, .xls, .xlsx"
                                              className="file-upload--input"
                                              id="fileUpload"
                                              multiple={false}
                                              name="fileUpload"
                                              onChange={[Function]}
                                              type="file"
                                            />
                                          </div>
                                        </div>
                                      </FileAttachmentContainer>
                                    </div>
                                  </div>
                                </div>
                              </FormSection>
                            </span>
                            <div
                              className="row"
                            >
                              <div
                                className="col-md-9"
                              >
                                <div
                                  className="file-form-formats"
                                >
                                  <strong>
                                    Supported formats include: 
                                  </strong>
                                  .csv, .tsv, .txt, .xls, .xlsx
                                </div>
                              </div>
                              <div
                                className="col-md-3"
                              >
                                <div
                                  className="pull-right"
                                />
                              </div>
                            </div>
                          </FileAttachmentForm>
                          <div
                            className="margin-top"
                          >
                            or 
                            <span
                              className="domain-form-add-link"
                              onClick={[Function]}
                            >
                              manually define fields
                            </span>
                          </div>
                        </div>
                      </div>
                    </Transition>
                  </Collapse>
                </PanelCollapse>
              </PanelBody>
            </div>
          </Panel>
        </Uncontrolled(Panel)>
      </DomainFormImpl>
    </LookupProvider>
  </DomainForm>
  <div
    className="domain-form-panel domain-designer-buttons"
  >
    <Button
      active={false}
      block={false}
      bsClass="btn"
      bsStyle="default"
      disabled={false}
      onClick={[Function]}
    >
      <button
        className="btn btn-default"
        disabled={false}
        onClick={[Function]}
        type="button"
      >
        Cancel
      </button>
    </Button>
    <Button
      active={false}
      block={false}
      bsClass="btn"
      bsStyle="success"
      className="pull-right"
      disabled={false}
      onClick={[Function]}
    >
      <button
        className="pull-right btn btn-success"
        disabled={false}
        onClick={[Function]}
        type="button"
      >
        Save
      </button>
    </Button>
  </div>
</AssayDesignerPanels>
`;

exports[`AssayDesignerPanels hideEmptyBatchDomain for new assay 1`] = `
<AssayDesignerPanels
  hideEmptyBatchDomain={true}
  initModel={
    Immutable.Record {
      "allowBackgroundUpload": false,
      "allowEditableResults": false,
      "allowQCStates": false,
      "allowSpacesInPath": false,
      "allowTransformationScript": false,
      "allowPlateMetadata": false,
      "autoCopyTargetContainer": undefined,
      "autoCopyTargetContainerId": undefined,
      "availableDetectionMethods": undefined,
      "availableMetadataInputFormats": undefined,
      "availablePlateTemplates": undefined,
      "backgroundUpload": false,
      "description": undefined,
      "domains": Immutable.List [
        Immutable.Record {
          "name": "Batch Fields",
          "container": undefined,
          "description": undefined,
          "domainURI": undefined,
          "domainId": null,
          "allowFileLinkProperties": true,
          "allowAttachmentProperties": true,
          "allowFlagProperties": true,
          "showDefaultValueSettings": false,
          "defaultDefaultValueType": undefined,
          "defaultValueOptions": Immutable.List [],
          "fields": Immutable.List [],
          "indices": Immutable.List [],
          "domainException": undefined,
          "mandatoryFieldNames": Immutable.List [],
          "reservedFieldNames": Immutable.List [],
          "newDesignFields": undefined,
          "instructions": undefined,
        },
        Immutable.Record {
          "name": "Run Fields",
          "container": undefined,
          "description": undefined,
          "domainURI": undefined,
          "domainId": null,
          "allowFileLinkProperties": true,
          "allowAttachmentProperties": true,
          "allowFlagProperties": true,
          "showDefaultValueSettings": false,
          "defaultDefaultValueType": undefined,
          "defaultValueOptions": Immutable.List [],
          "fields": Immutable.List [],
          "indices": Immutable.List [],
          "domainException": undefined,
          "mandatoryFieldNames": Immutable.List [],
          "reservedFieldNames": Immutable.List [],
          "newDesignFields": undefined,
          "instructions": undefined,
        },
        Immutable.Record {
          "name": "Data Fields",
          "container": undefined,
          "description": undefined,
          "domainURI": undefined,
          "domainId": null,
          "allowFileLinkProperties": true,
          "allowAttachmentProperties": true,
          "allowFlagProperties": true,
          "showDefaultValueSettings": false,
          "defaultDefaultValueType": undefined,
          "defaultValueOptions": Immutable.List [],
          "fields": Immutable.List [],
          "indices": Immutable.List [],
          "domainException": undefined,
          "mandatoryFieldNames": Immutable.List [],
          "reservedFieldNames": Immutable.List [],
          "newDesignFields": undefined,
          "instructions": undefined,
        },
      ],
      "editableResults": false,
      "editableRuns": false,
      "exception": undefined,
      "metadataInputFormatHelp": undefined,
      "moduleTransformScripts": undefined,
      "name": undefined,
      "plateMetadata": undefined,
      "protocolId": undefined,
      "protocolParameters": undefined,
      "protocolTransformScripts": undefined,
      "providerName": "General",
      "saveScriptFiles": false,
      "selectedDetectionMethod": undefined,
      "selectedMetadataInputFormat": undefined,
      "selectedPlateTemplate": undefined,
      "qcEnabled": undefined,
    }
  }
  onCancel={[Function]}
  onComplete={[Function]}
>
  <ComponentWithDomainPropertiesPanelCollapse
    controlledCollapse={true}
    initCollapsed={false}
    model={
      Immutable.Record {
        "allowBackgroundUpload": false,
        "allowEditableResults": false,
        "allowQCStates": false,
        "allowSpacesInPath": false,
        "allowTransformationScript": false,
        "allowPlateMetadata": false,
        "autoCopyTargetContainer": undefined,
        "autoCopyTargetContainerId": undefined,
        "availableDetectionMethods": undefined,
        "availableMetadataInputFormats": undefined,
        "availablePlateTemplates": undefined,
        "backgroundUpload": false,
        "description": undefined,
        "domains": Immutable.List [
          Immutable.Record {
            "name": "Batch Fields",
            "container": undefined,
            "description": undefined,
            "domainURI": undefined,
            "domainId": null,
            "allowFileLinkProperties": true,
            "allowAttachmentProperties": true,
            "allowFlagProperties": true,
            "showDefaultValueSettings": false,
            "defaultDefaultValueType": undefined,
            "defaultValueOptions": Immutable.List [],
            "fields": Immutable.List [],
            "indices": Immutable.List [],
            "domainException": undefined,
            "mandatoryFieldNames": Immutable.List [],
            "reservedFieldNames": Immutable.List [],
            "newDesignFields": undefined,
            "instructions": undefined,
          },
          Immutable.Record {
            "name": "Run Fields",
            "container": undefined,
            "description": undefined,
            "domainURI": undefined,
            "domainId": null,
            "allowFileLinkProperties": true,
            "allowAttachmentProperties": true,
            "allowFlagProperties": true,
            "showDefaultValueSettings": false,
            "defaultDefaultValueType": undefined,
            "defaultValueOptions": Immutable.List [],
            "fields": Immutable.List [],
            "indices": Immutable.List [],
            "domainException": undefined,
            "mandatoryFieldNames": Immutable.List [],
            "reservedFieldNames": Immutable.List [],
            "newDesignFields": undefined,
            "instructions": undefined,
          },
          Immutable.Record {
            "name": "Data Fields",
            "container": undefined,
            "description": undefined,
            "domainURI": undefined,
            "domainId": null,
            "allowFileLinkProperties": true,
            "allowAttachmentProperties": true,
            "allowFlagProperties": true,
            "showDefaultValueSettings": false,
            "defaultDefaultValueType": undefined,
            "defaultValueOptions": Immutable.List [],
            "fields": Immutable.List [],
            "indices": Immutable.List [],
            "domainException": undefined,
            "mandatoryFieldNames": Immutable.List [],
            "reservedFieldNames": Immutable.List [],
            "newDesignFields": undefined,
            "instructions": undefined,
          },
        ],
        "editableResults": false,
        "editableRuns": false,
        "exception": undefined,
        "metadataInputFormatHelp": undefined,
        "moduleTransformScripts": undefined,
        "name": undefined,
        "plateMetadata": undefined,
        "protocolId": undefined,
        "protocolParameters": undefined,
        "protocolTransformScripts": undefined,
        "providerName": "General",
        "saveScriptFiles": false,
        "selectedDetectionMethod": undefined,
        "selectedMetadataInputFormat": undefined,
        "selectedPlateTemplate": undefined,
        "qcEnabled": undefined,
      }
    }
    onChange={[Function]}
    onToggle={[Function]}
    panelStatus="NONE"
    validate={false}
  >
    <AssayPropertiesPanelImpl
      appPropertiesOnly={false}
      asPanel={true}
      collapsed={false}
      controlledCollapse={true}
      helpTopic="defineAssaySchema"
      model={
        Immutable.Record {
          "allowBackgroundUpload": false,
          "allowEditableResults": false,
          "allowQCStates": false,
          "allowSpacesInPath": false,
          "allowTransformationScript": false,
          "allowPlateMetadata": false,
          "autoCopyTargetContainer": undefined,
          "autoCopyTargetContainerId": undefined,
          "availableDetectionMethods": undefined,
          "availableMetadataInputFormats": undefined,
          "availablePlateTemplates": undefined,
          "backgroundUpload": false,
          "description": undefined,
          "domains": Immutable.List [
            Immutable.Record {
              "name": "Batch Fields",
              "container": undefined,
              "description": undefined,
              "domainURI": undefined,
              "domainId": null,
              "allowFileLinkProperties": true,
              "allowAttachmentProperties": true,
              "allowFlagProperties": true,
              "showDefaultValueSettings": false,
              "defaultDefaultValueType": undefined,
              "defaultValueOptions": Immutable.List [],
              "fields": Immutable.List [],
              "indices": Immutable.List [],
              "domainException": undefined,
              "mandatoryFieldNames": Immutable.List [],
              "reservedFieldNames": Immutable.List [],
              "newDesignFields": undefined,
              "instructions": undefined,
            },
            Immutable.Record {
              "name": "Run Fields",
              "container": undefined,
              "description": undefined,
              "domainURI": undefined,
              "domainId": null,
              "allowFileLinkProperties": true,
              "allowAttachmentProperties": true,
              "allowFlagProperties": true,
              "showDefaultValueSettings": false,
              "defaultDefaultValueType": undefined,
              "defaultValueOptions": Immutable.List [],
              "fields": Immutable.List [],
              "indices": Immutable.List [],
              "domainException": undefined,
              "mandatoryFieldNames": Immutable.List [],
              "reservedFieldNames": Immutable.List [],
              "newDesignFields": undefined,
              "instructions": undefined,
            },
            Immutable.Record {
              "name": "Data Fields",
              "container": undefined,
              "description": undefined,
              "domainURI": undefined,
              "domainId": null,
              "allowFileLinkProperties": true,
              "allowAttachmentProperties": true,
              "allowFlagProperties": true,
              "showDefaultValueSettings": false,
              "defaultDefaultValueType": undefined,
              "defaultValueOptions": Immutable.List [],
              "fields": Immutable.List [],
              "indices": Immutable.List [],
              "domainException": undefined,
              "mandatoryFieldNames": Immutable.List [],
              "reservedFieldNames": Immutable.List [],
              "newDesignFields": undefined,
              "instructions": undefined,
            },
          ],
          "editableResults": false,
          "editableRuns": false,
          "exception": undefined,
          "metadataInputFormatHelp": undefined,
          "moduleTransformScripts": undefined,
          "name": undefined,
          "plateMetadata": undefined,
          "protocolId": undefined,
          "protocolParameters": undefined,
          "protocolTransformScripts": undefined,
          "providerName": "General",
          "saveScriptFiles": false,
          "selectedDetectionMethod": undefined,
          "selectedMetadataInputFormat": undefined,
          "selectedPlateTemplate": undefined,
          "qcEnabled": undefined,
        }
      }
      onChange={[Function]}
      panelStatus="NONE"
      togglePanel={[Function]}
      validate={false}
    >
      <Uncontrolled(Panel)
        className="domain-form-panel domain-panel-no-theme"
        expanded={true}
        onToggle={[Function]}
      >
        <Panel
          bsClass="panel"
          bsStyle="default"
          className="domain-form-panel domain-panel-no-theme"
          expanded={true}
          onToggle={[Function]}
        >
          <div
            className="domain-form-panel domain-panel-no-theme panel panel-default"
          >
            <CollapsiblePanelHeader
              collapsed={false}
              controlledCollapse={true}
              iconHelpMsg="Contains errors or is missing required values."
              id="assay-properties-hdr"
              isValid={true}
              panelStatus="NONE"
              title="Assay Properties"
              togglePanel={[Function]}
            >
              <PanelHeading
                bsClass="panel"
                className="domain-panel-header domain-heading-collapsible domain-panel-header-expanded domain-panel-header-no-theme"
                componentClass="div"
                id="assay-properties-hdr"
                onClick={[Function]}
              >
                <div
                  className="domain-panel-header domain-heading-collapsible domain-panel-header-expanded domain-panel-header-no-theme panel-heading"
                  id="assay-properties-hdr"
                  onClick={[Function]}
                >
                  <span
                    className="domain-panel-title"
                  >
                    Assay Properties
                  </span>
                  <span
                    className="pull-right"
                  >
                    <FontAwesomeIcon
                      border={false}
                      className="domain-form-collapse-btn"
                      fixedWidth={false}
                      flip={null}
                      icon={
                        Object {
                          "icon": Array [
                            448,
                            512,
                            Array [],
                            "f146",
                            "M400 32H48C21.5 32 0 53.5 0 80v352c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V80c0-26.5-21.5-48-48-48zM92 296c-6.6 0-12-5.4-12-12v-56c0-6.6 5.4-12 12-12h264c6.6 0 12 5.4 12 12v56c0 6.6-5.4 12-12 12H92z",
                          ],
                          "iconName": "minus-square",
                          "prefix": "fas",
                        }
                      }
                      inverse={false}
                      listItem={false}
                      mask={null}
                      pull={null}
                      pulse={false}
                      rotation={null}
                      size="lg"
                      spin={false}
                      symbol={false}
                      title=""
                      transform={null}
                    >
                      <svg
                        aria-hidden="true"
                        className="svg-inline--fa fa-minus-square fa-w-14 fa-lg domain-form-collapse-btn"
                        data-icon="minus-square"
                        data-prefix="fas"
                        focusable="false"
                        role="img"
                        style={Object {}}
                        viewBox="0 0 448 512"
                        xmlns="http://www.w3.org/2000/svg"
                      >
                        <path
                          d="M400 32H48C21.5 32 0 53.5 0 80v352c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V80c0-26.5-21.5-48-48-48zM92 296c-6.6 0-12-5.4-12-12v-56c0-6.6 5.4-12 12-12h264c6.6 0 12 5.4 12 12v56c0 6.6-5.4 12-12 12H92z"
                          fill="currentColor"
                          style={Object {}}
                        />
                      </svg>
                    </FontAwesomeIcon>
                  </span>
                </div>
              </PanelHeading>
            </CollapsiblePanelHeader>
            <PanelBody
              bsClass="panel"
              collapsible={true}
            >
              <PanelCollapse
                bsClass="panel"
              >
                <Collapse
                  appear={false}
                  dimension="height"
                  getDimensionValue={[Function]}
                  in={true}
                  mountOnEnter={false}
                  timeout={300}
                  unmountOnExit={false}
                >
                  <Transition
                    appear={false}
                    aria-expanded={null}
                    enter={true}
                    exit={true}
                    in={true}
                    mountOnEnter={false}
                    onEnter={[Function]}
                    onEntered={[Function]}
                    onEntering={[Function]}
                    onExit={[Function]}
                    onExited={[Function]}
                    onExiting={[Function]}
                    timeout={300}
                    unmountOnExit={false}
                  >
                    <div
                      aria-expanded={null}
                      className="panel-collapse collapse in"
                    >
                      <div
                        className="panel-body"
                      >
                        <HelpTopicURL
                          helpTopic="defineAssaySchema"
                          nounPlural="assays"
                        >
                          <Row
                            bsClass="row"
                            componentClass="div"
                          >
                            <div
                              className="row"
                            >
                              <Col
                                bsClass="col"
                                componentClass="div"
                                xs={12}
                              >
                                <div
                                  className="col-xs-12"
                                >
                                  <a
                                    className="domain-field-float-right"
                                    href="https://www.labkey.org/Documentation/wiki-page.view?name=defineAssaySchema"
                                    target="_blank"
                                  >
                                    Learn more about designing assays
                                  </a>
                                </div>
                              </Col>
                            </div>
                          </Row>
                        </HelpTopicURL>
                        <Form
                          bsClass="form"
                          componentClass="form"
                          horizontal={false}
                          inline={false}
                        >
                          <form
                            className=""
                          >
                            <Col
                              bsClass="col"
                              componentClass="div"
                              lg={6}
                              xs={12}
                            >
                              <div
                                className="col-lg-6 col-xs-12"
                              >
                                <div
                                  className="domain-field-padding-bottom"
                                >
                                  <SectionHeading
                                    helpTopic="defineAssaySchema"
                                    title="Basic Properties"
                                  >
                                    <Row
                                      bsClass="row"
                                      componentClass="div"
                                    >
                                      <div
                                        className="row"
                                      >
                                        <Col
                                          bsClass="col"
                                          componentClass="div"
                                          xs={9}
                                        >
                                          <div
                                            className="col-xs-9"
                                          >
                                            <div
                                              className="domain-field-section-heading"
                                            >
                                              Basic Properties
                                            </div>
                                          </div>
                                        </Col>
                                      </div>
                                    </Row>
                                  </SectionHeading>
                                  <NameInput
                                    appPropertiesOnly={false}
                                    model={
                                      Immutable.Record {
                                        "allowBackgroundUpload": false,
                                        "allowEditableResults": false,
                                        "allowQCStates": false,
                                        "allowSpacesInPath": false,
                                        "allowTransformationScript": false,
                                        "allowPlateMetadata": false,
                                        "autoCopyTargetContainer": undefined,
                                        "autoCopyTargetContainerId": undefined,
                                        "availableDetectionMethods": undefined,
                                        "availableMetadataInputFormats": undefined,
                                        "availablePlateTemplates": undefined,
                                        "backgroundUpload": false,
                                        "description": undefined,
                                        "domains": Immutable.List [
                                          Immutable.Record {
                                            "name": "Batch Fields",
                                            "container": undefined,
                                            "description": undefined,
                                            "domainURI": undefined,
                                            "domainId": null,
                                            "allowFileLinkProperties": true,
                                            "allowAttachmentProperties": true,
                                            "allowFlagProperties": true,
                                            "showDefaultValueSettings": false,
                                            "defaultDefaultValueType": undefined,
                                            "defaultValueOptions": Immutable.List [],
                                            "fields": Immutable.List [],
                                            "indices": Immutable.List [],
                                            "domainException": undefined,
                                            "mandatoryFieldNames": Immutable.List [],
                                            "reservedFieldNames": Immutable.List [],
                                            "newDesignFields": undefined,
                                            "instructions": undefined,
                                          },
                                          Immutable.Record {
                                            "name": "Run Fields",
                                            "container": undefined,
                                            "description": undefined,
                                            "domainURI": undefined,
                                            "domainId": null,
                                            "allowFileLinkProperties": true,
                                            "allowAttachmentProperties": true,
                                            "allowFlagProperties": true,
                                            "showDefaultValueSettings": false,
                                            "defaultDefaultValueType": undefined,
                                            "defaultValueOptions": Immutable.List [],
                                            "fields": Immutable.List [],
                                            "indices": Immutable.List [],
                                            "domainException": undefined,
                                            "mandatoryFieldNames": Immutable.List [],
                                            "reservedFieldNames": Immutable.List [],
                                            "newDesignFields": undefined,
                                            "instructions": undefined,
                                          },
                                          Immutable.Record {
                                            "name": "Data Fields",
                                            "container": undefined,
                                            "description": undefined,
                                            "domainURI": undefined,
                                            "domainId": null,
                                            "allowFileLinkProperties": true,
                                            "allowAttachmentProperties": true,
                                            "allowFlagProperties": true,
                                            "showDefaultValueSettings": false,
                                            "defaultDefaultValueType": undefined,
                                            "defaultValueOptions": Immutable.List [],
                                            "fields": Immutable.List [],
                                            "indices": Immutable.List [],
                                            "domainException": undefined,
                                            "mandatoryFieldNames": Immutable.List [],
                                            "reservedFieldNames": Immutable.List [],
                                            "newDesignFields": undefined,
                                            "instructions": undefined,
                                          },
                                        ],
                                        "editableResults": false,
                                        "editableRuns": false,
                                        "exception": undefined,
                                        "metadataInputFormatHelp": undefined,
                                        "moduleTransformScripts": undefined,
                                        "name": undefined,
                                        "plateMetadata": undefined,
                                        "protocolId": undefined,
                                        "protocolParameters": undefined,
                                        "protocolTransformScripts": undefined,
                                        "providerName": "General",
                                        "saveScriptFiles": false,
                                        "selectedDetectionMethod": undefined,
                                        "selectedMetadataInputFormat": undefined,
                                        "selectedPlateTemplate": undefined,
                                        "qcEnabled": undefined,
                                      }
                                    }
                                    onChange={[Function]}
                                  >
                                    <AssayPropertiesInput
                                      appPropertiesOnly={false}
                                      helpTipBody={[Function]}
                                      label="Name"
                                      required={true}
                                    >
                                      <Row
                                        bsClass="row"
                                        className="margin-top"
                                        componentClass="div"
                                      >
                                        <div
                                          className="margin-top row"
                                        >
                                          <Col
                                            bsClass="col"
                                            componentClass="div"
                                            lg={4}
                                            xs={3}
                                          >
                                            <div
                                              className="col-lg-4 col-xs-3"
                                            >
                                              <span
                                                className="domain-no-wrap"
                                              >
                                                Name
                                                 *
                                                <LabelHelpTip
                                                  body={[Function]}
                                                  customStyle={Object {}}
                                                  id="tooltip"
                                                  required={true}
                                                  size="1x"
                                                  title="Name"
                                                >
                                                  <span
                                                    className="label-help-target"
                                                    onMouseOut={[Function]}
                                                    onMouseOver={[Function]}
                                                  >
                                                    <FontAwesomeIcon
                                                      border={false}
                                                      className="label-help-icon"
                                                      fixedWidth={false}
                                                      flip={null}
                                                      icon={
                                                        Object {
                                                          "icon": Array [
                                                            512,
                                                            512,
                                                            Array [],
                                                            "f059",
                                                            "M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z",
                                                          ],
                                                          "iconName": "question-circle",
                                                          "prefix": "fas",
                                                        }
                                                      }
                                                      inverse={false}
                                                      listItem={false}
                                                      mask={null}
                                                      pull={null}
                                                      pulse={false}
                                                      rotation={null}
                                                      size="1x"
                                                      spin={false}
                                                      style={Object {}}
                                                      symbol={false}
                                                      title=""
                                                      transform={null}
                                                    >
                                                      <svg
                                                        aria-hidden="true"
                                                        className="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                                                        data-icon="question-circle"
                                                        data-prefix="fas"
                                                        focusable="false"
                                                        role="img"
                                                        style={Object {}}
                                                        viewBox="0 0 512 512"
                                                        xmlns="http://www.w3.org/2000/svg"
                                                      >
                                                        <path
                                                          d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                          fill="currentColor"
                                                          style={Object {}}
                                                        />
                                                      </svg>
                                                    </FontAwesomeIcon>
                                                    <Overlay
                                                      animation={[Function]}
                                                      placement="right"
                                                      rootClose={false}
                                                      show={false}
                                                      target={
                                                        <span
                                                          class="label-help-target"
                                                        >
                                                          <svg
                                                            aria-hidden="true"
                                                            class="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                                                            data-icon="question-circle"
                                                            data-prefix="fas"
                                                            focusable="false"
                                                            role="img"
                                                            viewBox="0 0 512 512"
                                                            xmlns="http://www.w3.org/2000/svg"
                                                          >
                                                            <path
                                                              d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                              fill="currentColor"
                                                            />
                                                          </svg>
                                                        </span>
                                                      }
                                                    >
                                                      <Overlay
                                                        placement="right"
                                                        rootClose={false}
                                                        show={false}
                                                        target={
                                                          <span
                                                            class="label-help-target"
                                                          >
                                                            <svg
                                                              aria-hidden="true"
                                                              class="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                                                              data-icon="question-circle"
                                                              data-prefix="fas"
                                                              focusable="false"
                                                              role="img"
                                                              viewBox="0 0 512 512"
                                                              xmlns="http://www.w3.org/2000/svg"
                                                            >
                                                              <path
                                                                d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                                fill="currentColor"
                                                              />
                                                            </svg>
                                                          </span>
                                                        }
                                                        transition={[Function]}
                                                      />
                                                    </Overlay>
                                                  </span>
                                                </LabelHelpTip>
                                              </span>
                                            </div>
                                          </Col>
                                          <Col
                                            bsClass="col"
                                            componentClass="div"
                                            lg={8}
                                            xs={9}
                                          >
                                            <div
                                              className="col-lg-8 col-xs-9"
                                            >
                                              <FormControl
                                                bsClass="form-control"
                                                componentClass="input"
                                                disabled={false}
                                                id="assay-design-name"
                                                onChange={[Function]}
                                                placeholder="Enter a name for this assay"
                                                type="text"
                                                value=""
                                              >
                                                <input
                                                  className="form-control"
                                                  disabled={false}
                                                  id="assay-design-name"
                                                  onChange={[Function]}
                                                  placeholder="Enter a name for this assay"
                                                  type="text"
                                                  value=""
                                                />
                                              </FormControl>
                                            </div>
                                          </Col>
                                        </div>
                                      </Row>
                                    </AssayPropertiesInput>
                                  </NameInput>
                                  <DescriptionInput
                                    appPropertiesOnly={false}
                                    model={
                                      Immutable.Record {
                                        "allowBackgroundUpload": false,
                                        "allowEditableResults": false,
                                        "allowQCStates": false,
                                        "allowSpacesInPath": false,
                                        "allowTransformationScript": false,
                                        "allowPlateMetadata": false,
                                        "autoCopyTargetContainer": undefined,
                                        "autoCopyTargetContainerId": undefined,
                                        "availableDetectionMethods": undefined,
                                        "availableMetadataInputFormats": undefined,
                                        "availablePlateTemplates": undefined,
                                        "backgroundUpload": false,
                                        "description": undefined,
                                        "domains": Immutable.List [
                                          Immutable.Record {
                                            "name": "Batch Fields",
                                            "container": undefined,
                                            "description": undefined,
                                            "domainURI": undefined,
                                            "domainId": null,
                                            "allowFileLinkProperties": true,
                                            "allowAttachmentProperties": true,
                                            "allowFlagProperties": true,
                                            "showDefaultValueSettings": false,
                                            "defaultDefaultValueType": undefined,
                                            "defaultValueOptions": Immutable.List [],
                                            "fields": Immutable.List [],
                                            "indices": Immutable.List [],
                                            "domainException": undefined,
                                            "mandatoryFieldNames": Immutable.List [],
                                            "reservedFieldNames": Immutable.List [],
                                            "newDesignFields": undefined,
                                            "instructions": undefined,
                                          },
                                          Immutable.Record {
                                            "name": "Run Fields",
                                            "container": undefined,
                                            "description": undefined,
                                            "domainURI": undefined,
                                            "domainId": null,
                                            "allowFileLinkProperties": true,
                                            "allowAttachmentProperties": true,
                                            "allowFlagProperties": true,
                                            "showDefaultValueSettings": false,
                                            "defaultDefaultValueType": undefined,
                                            "defaultValueOptions": Immutable.List [],
                                            "fields": Immutable.List [],
                                            "indices": Immutable.List [],
                                            "domainException": undefined,
                                            "mandatoryFieldNames": Immutable.List [],
                                            "reservedFieldNames": Immutable.List [],
                                            "newDesignFields": undefined,
                                            "instructions": undefined,
                                          },
                                          Immutable.Record {
                                            "name": "Data Fields",
                                            "container": undefined,
                                            "description": undefined,
                                            "domainURI": undefined,
                                            "domainId": null,
                                            "allowFileLinkProperties": true,
                                            "allowAttachmentProperties": true,
                                            "allowFlagProperties": true,
                                            "showDefaultValueSettings": false,
                                            "defaultDefaultValueType": undefined,
                                            "defaultValueOptions": Immutable.List [],
                                            "fields": Immutable.List [],
                                            "indices": Immutable.List [],
                                            "domainException": undefined,
                                            "mandatoryFieldNames": Immutable.List [],
                                            "reservedFieldNames": Immutable.List [],
                                            "newDesignFields": undefined,
                                            "instructions": undefined,
                                          },
                                        ],
                                        "editableResults": false,
                                        "editableRuns": false,
                                        "exception": undefined,
                                        "metadataInputFormatHelp": undefined,
                                        "moduleTransformScripts": undefined,
                                        "name": undefined,
                                        "plateMetadata": undefined,
                                        "protocolId": undefined,
                                        "protocolParameters": undefined,
                                        "protocolTransformScripts": undefined,
                                        "providerName": "General",
                                        "saveScriptFiles": false,
                                        "selectedDetectionMethod": undefined,
                                        "selectedMetadataInputFormat": undefined,
                                        "selectedPlateTemplate": undefined,
                                        "qcEnabled": undefined,
                                      }
                                    }
                                    onChange={[Function]}
                                  >
                                    <AssayPropertiesInput
                                      appPropertiesOnly={false}
                                      helpTipBody={[Function]}
                                      label="Description"
                                    >
                                      <Row
                                        bsClass="row"
                                        className="margin-top"
                                        componentClass="div"
                                      >
                                        <div
                                          className="margin-top row"
                                        >
                                          <Col
                                            bsClass="col"
                                            componentClass="div"
                                            lg={4}
                                            xs={3}
                                          >
                                            <div
                                              className="col-lg-4 col-xs-3"
                                            >
                                              <span
                                                className="domain-no-wrap"
                                              >
                                                Description
                                                <LabelHelpTip
                                                  body={[Function]}
                                                  customStyle={Object {}}
                                                  id="tooltip"
                                                  size="1x"
                                                  title="Description"
                                                >
                                                  <span
                                                    className="label-help-target"
                                                    onMouseOut={[Function]}
                                                    onMouseOver={[Function]}
                                                  >
                                                    <FontAwesomeIcon
                                                      border={false}
                                                      className="label-help-icon"
                                                      fixedWidth={false}
                                                      flip={null}
                                                      icon={
                                                        Object {
                                                          "icon": Array [
                                                            512,
                                                            512,
                                                            Array [],
                                                            "f059",
                                                            "M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z",
                                                          ],
                                                          "iconName": "question-circle",
                                                          "prefix": "fas",
                                                        }
                                                      }
                                                      inverse={false}
                                                      listItem={false}
                                                      mask={null}
                                                      pull={null}
                                                      pulse={false}
                                                      rotation={null}
                                                      size="1x"
                                                      spin={false}
                                                      style={Object {}}
                                                      symbol={false}
                                                      title=""
                                                      transform={null}
                                                    >
                                                      <svg
                                                        aria-hidden="true"
                                                        className="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                                                        data-icon="question-circle"
                                                        data-prefix="fas"
                                                        focusable="false"
                                                        role="img"
                                                        style={Object {}}
                                                        viewBox="0 0 512 512"
                                                        xmlns="http://www.w3.org/2000/svg"
                                                      >
                                                        <path
                                                          d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                          fill="currentColor"
                                                          style={Object {}}
                                                        />
                                                      </svg>
                                                    </FontAwesomeIcon>
                                                    <Overlay
                                                      animation={[Function]}
                                                      placement="right"
                                                      rootClose={false}
                                                      show={false}
                                                      target={
                                                        <span
                                                          class="label-help-target"
                                                        >
                                                          <svg
                                                            aria-hidden="true"
                                                            class="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                                                            data-icon="question-circle"
                                                            data-prefix="fas"
                                                            focusable="false"
                                                            role="img"
                                                            viewBox="0 0 512 512"
                                                            xmlns="http://www.w3.org/2000/svg"
                                                          >
                                                            <path
                                                              d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                              fill="currentColor"
                                                            />
                                                          </svg>
                                                        </span>
                                                      }
                                                    >
                                                      <Overlay
                                                        placement="right"
                                                        rootClose={false}
                                                        show={false}
                                                        target={
                                                          <span
                                                            class="label-help-target"
                                                          >
                                                            <svg
                                                              aria-hidden="true"
                                                              class="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                                                              data-icon="question-circle"
                                                              data-prefix="fas"
                                                              focusable="false"
                                                              role="img"
                                                              viewBox="0 0 512 512"
                                                              xmlns="http://www.w3.org/2000/svg"
                                                            >
                                                              <path
                                                                d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                                fill="currentColor"
                                                              />
                                                            </svg>
                                                          </span>
                                                        }
                                                        transition={[Function]}
                                                      />
                                                    </Overlay>
                                                  </span>
                                                </LabelHelpTip>
                                              </span>
                                            </div>
                                          </Col>
                                          <Col
                                            bsClass="col"
                                            componentClass="div"
                                            lg={8}
                                            xs={9}
                                          >
                                            <div
                                              className="col-lg-8 col-xs-9"
                                            >
                                              <textarea
                                                className="form-control textarea-noresize"
                                                id="assay-design-description"
                                                onChange={[Function]}
                                                value=""
                                              />
                                            </div>
                                          </Col>
                                        </div>
                                      </Row>
                                    </AssayPropertiesInput>
                                  </DescriptionInput>
                                </div>
                                <div
                                  className="domain-field-padding-bottom"
                                >
                                  <SectionHeading
                                    title="Editing Settings"
                                  >
                                    <Row
                                      bsClass="row"
                                      componentClass="div"
                                    >
                                      <div
                                        className="row"
                                      >
                                        <Col
                                          bsClass="col"
                                          componentClass="div"
                                          xs={12}
                                        >
                                          <div
                                            className="col-xs-12"
                                          >
                                            <div
                                              className="domain-field-section-heading"
                                            >
                                              Editing Settings
                                            </div>
                                          </div>
                                        </Col>
                                      </div>
                                    </Row>
                                  </SectionHeading>
                                  <EditableRunsInput
                                    appPropertiesOnly={false}
                                    model={
                                      Immutable.Record {
                                        "allowBackgroundUpload": false,
                                        "allowEditableResults": false,
                                        "allowQCStates": false,
                                        "allowSpacesInPath": false,
                                        "allowTransformationScript": false,
                                        "allowPlateMetadata": false,
                                        "autoCopyTargetContainer": undefined,
                                        "autoCopyTargetContainerId": undefined,
                                        "availableDetectionMethods": undefined,
                                        "availableMetadataInputFormats": undefined,
                                        "availablePlateTemplates": undefined,
                                        "backgroundUpload": false,
                                        "description": undefined,
                                        "domains": Immutable.List [
                                          Immutable.Record {
                                            "name": "Batch Fields",
                                            "container": undefined,
                                            "description": undefined,
                                            "domainURI": undefined,
                                            "domainId": null,
                                            "allowFileLinkProperties": true,
                                            "allowAttachmentProperties": true,
                                            "allowFlagProperties": true,
                                            "showDefaultValueSettings": false,
                                            "defaultDefaultValueType": undefined,
                                            "defaultValueOptions": Immutable.List [],
                                            "fields": Immutable.List [],
                                            "indices": Immutable.List [],
                                            "domainException": undefined,
                                            "mandatoryFieldNames": Immutable.List [],
                                            "reservedFieldNames": Immutable.List [],
                                            "newDesignFields": undefined,
                                            "instructions": undefined,
                                          },
                                          Immutable.Record {
                                            "name": "Run Fields",
                                            "container": undefined,
                                            "description": undefined,
                                            "domainURI": undefined,
                                            "domainId": null,
                                            "allowFileLinkProperties": true,
                                            "allowAttachmentProperties": true,
                                            "allowFlagProperties": true,
                                            "showDefaultValueSettings": false,
                                            "defaultDefaultValueType": undefined,
                                            "defaultValueOptions": Immutable.List [],
                                            "fields": Immutable.List [],
                                            "indices": Immutable.List [],
                                            "domainException": undefined,
                                            "mandatoryFieldNames": Immutable.List [],
                                            "reservedFieldNames": Immutable.List [],
                                            "newDesignFields": undefined,
                                            "instructions": undefined,
                                          },
                                          Immutable.Record {
                                            "name": "Data Fields",
                                            "container": undefined,
                                            "description": undefined,
                                            "domainURI": undefined,
                                            "domainId": null,
                                            "allowFileLinkProperties": true,
                                            "allowAttachmentProperties": true,
                                            "allowFlagProperties": true,
                                            "showDefaultValueSettings": false,
                                            "defaultDefaultValueType": undefined,
                                            "defaultValueOptions": Immutable.List [],
                                            "fields": Immutable.List [],
                                            "indices": Immutable.List [],
                                            "domainException": undefined,
                                            "mandatoryFieldNames": Immutable.List [],
                                            "reservedFieldNames": Immutable.List [],
                                            "newDesignFields": undefined,
                                            "instructions": undefined,
                                          },
                                        ],
                                        "editableResults": false,
                                        "editableRuns": false,
                                        "exception": undefined,
                                        "metadataInputFormatHelp": undefined,
                                        "moduleTransformScripts": undefined,
                                        "name": undefined,
                                        "plateMetadata": undefined,
                                        "protocolId": undefined,
                                        "protocolParameters": undefined,
                                        "protocolTransformScripts": undefined,
                                        "providerName": "General",
                                        "saveScriptFiles": false,
                                        "selectedDetectionMethod": undefined,
                                        "selectedMetadataInputFormat": undefined,
                                        "selectedPlateTemplate": undefined,
                                        "qcEnabled": undefined,
                                      }
                                    }
                                    onChange={[Function]}
                                  >
                                    <AssayPropertiesInput
                                      appPropertiesOnly={false}
                                      helpTipBody={[Function]}
                                      label="Editable Runs"
                                    >
                                      <Row
                                        bsClass="row"
                                        className="margin-top"
                                        componentClass="div"
                                      >
                                        <div
                                          className="margin-top row"
                                        >
                                          <Col
                                            bsClass="col"
                                            componentClass="div"
                                            lg={4}
                                            xs={3}
                                          >
                                            <div
                                              className="col-lg-4 col-xs-3"
                                            >
                                              Editable 
                                              <span
                                                className="domain-no-wrap"
                                              >
                                                Runs
                                                <LabelHelpTip
                                                  body={[Function]}
                                                  customStyle={Object {}}
                                                  id="tooltip"
                                                  size="1x"
                                                  title="Editable Runs"
                                                >
                                                  <span
                                                    className="label-help-target"
                                                    onMouseOut={[Function]}
                                                    onMouseOver={[Function]}
                                                  >
                                                    <FontAwesomeIcon
                                                      border={false}
                                                      className="label-help-icon"
                                                      fixedWidth={false}
                                                      flip={null}
                                                      icon={
                                                        Object {
                                                          "icon": Array [
                                                            512,
                                                            512,
                                                            Array [],
                                                            "f059",
                                                            "M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z",
                                                          ],
                                                          "iconName": "question-circle",
                                                          "prefix": "fas",
                                                        }
                                                      }
                                                      inverse={false}
                                                      listItem={false}
                                                      mask={null}
                                                      pull={null}
                                                      pulse={false}
                                                      rotation={null}
                                                      size="1x"
                                                      spin={false}
                                                      style={Object {}}
                                                      symbol={false}
                                                      title=""
                                                      transform={null}
                                                    >
                                                      <svg
                                                        aria-hidden="true"
                                                        className="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                                                        data-icon="question-circle"
                                                        data-prefix="fas"
                                                        focusable="false"
                                                        role="img"
                                                        style={Object {}}
                                                        viewBox="0 0 512 512"
                                                        xmlns="http://www.w3.org/2000/svg"
                                                      >
                                                        <path
                                                          d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                          fill="currentColor"
                                                          style={Object {}}
                                                        />
                                                      </svg>
                                                    </FontAwesomeIcon>
                                                    <Overlay
                                                      animation={[Function]}
                                                      placement="right"
                                                      rootClose={false}
                                                      show={false}
                                                      target={
                                                        <span
                                                          class="label-help-target"
                                                        >
                                                          <svg
                                                            aria-hidden="true"
                                                            class="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                                                            data-icon="question-circle"
                                                            data-prefix="fas"
                                                            focusable="false"
                                                            role="img"
                                                            viewBox="0 0 512 512"
                                                            xmlns="http://www.w3.org/2000/svg"
                                                          >
                                                            <path
                                                              d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                              fill="currentColor"
                                                            />
                                                          </svg>
                                                        </span>
                                                      }
                                                    >
                                                      <Overlay
                                                        placement="right"
                                                        rootClose={false}
                                                        show={false}
                                                        target={
                                                          <span
                                                            class="label-help-target"
                                                          >
                                                            <svg
                                                              aria-hidden="true"
                                                              class="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                                                              data-icon="question-circle"
                                                              data-prefix="fas"
                                                              focusable="false"
                                                              role="img"
                                                              viewBox="0 0 512 512"
                                                              xmlns="http://www.w3.org/2000/svg"
                                                            >
                                                              <path
                                                                d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                                fill="currentColor"
                                                              />
                                                            </svg>
                                                          </span>
                                                        }
                                                        transition={[Function]}
                                                      />
                                                    </Overlay>
                                                  </span>
                                                </LabelHelpTip>
                                              </span>
                                            </div>
                                          </Col>
                                          <Col
                                            bsClass="col"
                                            componentClass="div"
                                            lg={8}
                                            xs={9}
                                          >
                                            <div
                                              className="col-lg-8 col-xs-9"
                                            >
                                              <input
                                                checked={false}
                                                id="assay-design-editableRuns"
                                                onChange={[Function]}
                                                type="checkbox"
                                              />
                                            </div>
                                          </Col>
                                        </div>
                                      </Row>
                                    </AssayPropertiesInput>
                                  </EditableRunsInput>
                                </div>
                              </div>
                            </Col>
                            <Col
                              bsClass="col"
                              componentClass="div"
                              lg={6}
                              xs={12}
                            >
                              <div
                                className="col-lg-6 col-xs-12"
                              >
                                <div
                                  className="domain-field-padding-bottom"
                                >
                                  <SectionHeading
                                    title="Import Settings"
                                  >
                                    <Row
                                      bsClass="row"
                                      componentClass="div"
                                    >
                                      <div
                                        className="row"
                                      >
                                        <Col
                                          bsClass="col"
                                          componentClass="div"
                                          xs={12}
                                        >
                                          <div
                                            className="col-xs-12"
                                          >
                                            <div
                                              className="domain-field-section-heading"
                                            >
                                              Import Settings
                                            </div>
                                          </div>
                                        </Col>
                                      </div>
                                    </Row>
                                  </SectionHeading>
                                  <AutoCopyDataInput
                                    model={
                                      Immutable.Record {
                                        "allowBackgroundUpload": false,
                                        "allowEditableResults": false,
                                        "allowQCStates": false,
                                        "allowSpacesInPath": false,
                                        "allowTransformationScript": false,
                                        "allowPlateMetadata": false,
                                        "autoCopyTargetContainer": undefined,
                                        "autoCopyTargetContainerId": undefined,
                                        "availableDetectionMethods": undefined,
                                        "availableMetadataInputFormats": undefined,
                                        "availablePlateTemplates": undefined,
                                        "backgroundUpload": false,
                                        "description": undefined,
                                        "domains": Immutable.List [
                                          Immutable.Record {
                                            "name": "Batch Fields",
                                            "container": undefined,
                                            "description": undefined,
                                            "domainURI": undefined,
                                            "domainId": null,
                                            "allowFileLinkProperties": true,
                                            "allowAttachmentProperties": true,
                                            "allowFlagProperties": true,
                                            "showDefaultValueSettings": false,
                                            "defaultDefaultValueType": undefined,
                                            "defaultValueOptions": Immutable.List [],
                                            "fields": Immutable.List [],
                                            "indices": Immutable.List [],
                                            "domainException": undefined,
                                            "mandatoryFieldNames": Immutable.List [],
                                            "reservedFieldNames": Immutable.List [],
                                            "newDesignFields": undefined,
                                            "instructions": undefined,
                                          },
                                          Immutable.Record {
                                            "name": "Run Fields",
                                            "container": undefined,
                                            "description": undefined,
                                            "domainURI": undefined,
                                            "domainId": null,
                                            "allowFileLinkProperties": true,
                                            "allowAttachmentProperties": true,
                                            "allowFlagProperties": true,
                                            "showDefaultValueSettings": false,
                                            "defaultDefaultValueType": undefined,
                                            "defaultValueOptions": Immutable.List [],
                                            "fields": Immutable.List [],
                                            "indices": Immutable.List [],
                                            "domainException": undefined,
                                            "mandatoryFieldNames": Immutable.List [],
                                            "reservedFieldNames": Immutable.List [],
                                            "newDesignFields": undefined,
                                            "instructions": undefined,
                                          },
                                          Immutable.Record {
                                            "name": "Data Fields",
                                            "container": undefined,
                                            "description": undefined,
                                            "domainURI": undefined,
                                            "domainId": null,
                                            "allowFileLinkProperties": true,
                                            "allowAttachmentProperties": true,
                                            "allowFlagProperties": true,
                                            "showDefaultValueSettings": false,
                                            "defaultDefaultValueType": undefined,
                                            "defaultValueOptions": Immutable.List [],
                                            "fields": Immutable.List [],
                                            "indices": Immutable.List [],
                                            "domainException": undefined,
                                            "mandatoryFieldNames": Immutable.List [],
                                            "reservedFieldNames": Immutable.List [],
                                            "newDesignFields": undefined,
                                            "instructions": undefined,
                                          },
                                        ],
                                        "editableResults": false,
                                        "editableRuns": false,
                                        "exception": undefined,
                                        "metadataInputFormatHelp": undefined,
                                        "moduleTransformScripts": undefined,
                                        "name": undefined,
                                        "plateMetadata": undefined,
                                        "protocolId": undefined,
                                        "protocolParameters": undefined,
                                        "protocolTransformScripts": undefined,
                                        "providerName": "General",
                                        "saveScriptFiles": false,
                                        "selectedDetectionMethod": undefined,
                                        "selectedMetadataInputFormat": undefined,
                                        "selectedPlateTemplate": undefined,
                                        "qcEnabled": undefined,
                                      }
                                    }
                                    onChange={[Function]}
                                  >
                                    <AssayPropertiesInput
                                      helpTipBody={[Function]}
                                      label="Auto-Copy Data to Study"
                                    >
                                      <Row
                                        bsClass="row"
                                        className="margin-top"
                                        componentClass="div"
                                      >
                                        <div
                                          className="margin-top row"
                                        >
                                          <Col
                                            bsClass="col"
                                            componentClass="div"
                                            lg={4}
                                            xs={3}
                                          >
                                            <div
                                              className="col-lg-4 col-xs-3"
                                            >
                                              Auto-Copy Data to 
                                              <span
                                                className="domain-no-wrap"
                                              >
                                                Study
                                                <LabelHelpTip
                                                  body={[Function]}
                                                  customStyle={Object {}}
                                                  id="tooltip"
                                                  size="1x"
                                                  title="Auto-Copy Data to Study"
                                                >
                                                  <span
                                                    className="label-help-target"
                                                    onMouseOut={[Function]}
                                                    onMouseOver={[Function]}
                                                  >
                                                    <FontAwesomeIcon
                                                      border={false}
                                                      className="label-help-icon"
                                                      fixedWidth={false}
                                                      flip={null}
                                                      icon={
                                                        Object {
                                                          "icon": Array [
                                                            512,
                                                            512,
                                                            Array [],
                                                            "f059",
                                                            "M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z",
                                                          ],
                                                          "iconName": "question-circle",
                                                          "prefix": "fas",
                                                        }
                                                      }
                                                      inverse={false}
                                                      listItem={false}
                                                      mask={null}
                                                      pull={null}
                                                      pulse={false}
                                                      rotation={null}
                                                      size="1x"
                                                      spin={false}
                                                      style={Object {}}
                                                      symbol={false}
                                                      title=""
                                                      transform={null}
                                                    >
                                                      <svg
                                                        aria-hidden="true"
                                                        className="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                                                        data-icon="question-circle"
                                                        data-prefix="fas"
                                                        focusable="false"
                                                        role="img"
                                                        style={Object {}}
                                                        viewBox="0 0 512 512"
                                                        xmlns="http://www.w3.org/2000/svg"
                                                      >
                                                        <path
                                                          d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                          fill="currentColor"
                                                          style={Object {}}
                                                        />
                                                      </svg>
                                                    </FontAwesomeIcon>
                                                    <Overlay
                                                      animation={[Function]}
                                                      placement="right"
                                                      rootClose={false}
                                                      show={false}
                                                      target={
                                                        <span
                                                          class="label-help-target"
                                                        >
                                                          <svg
                                                            aria-hidden="true"
                                                            class="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                                                            data-icon="question-circle"
                                                            data-prefix="fas"
                                                            focusable="false"
                                                            role="img"
                                                            viewBox="0 0 512 512"
                                                            xmlns="http://www.w3.org/2000/svg"
                                                          >
                                                            <path
                                                              d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                              fill="currentColor"
                                                            />
                                                          </svg>
                                                        </span>
                                                      }
                                                    >
                                                      <Overlay
                                                        placement="right"
                                                        rootClose={false}
                                                        show={false}
                                                        target={
                                                          <span
                                                            class="label-help-target"
                                                          >
                                                            <svg
                                                              aria-hidden="true"
                                                              class="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                                                              data-icon="question-circle"
                                                              data-prefix="fas"
                                                              focusable="false"
                                                              role="img"
                                                              viewBox="0 0 512 512"
                                                              xmlns="http://www.w3.org/2000/svg"
                                                            >
                                                              <path
                                                                d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                                fill="currentColor"
                                                              />
                                                            </svg>
                                                          </span>
                                                        }
                                                        transition={[Function]}
                                                      />
                                                    </Overlay>
                                                  </span>
                                                </LabelHelpTip>
                                              </span>
                                            </div>
                                          </Col>
                                          <Col
                                            bsClass="col"
                                            componentClass="div"
                                            lg={8}
                                            xs={9}
                                          >
                                            <div
                                              className="col-lg-8 col-xs-9"
                                            >
                                              <LoadingSpinner
                                                msg="Loading..."
                                                wrapperClassName=""
                                              >
                                                <span
                                                  className=""
                                                >
                                                  <i
                                                    aria-hidden="true"
                                                    className="fa fa-spinner fa-pulse"
                                                  />
                                                   
                                                  Loading...
                                                </span>
                                              </LoadingSpinner>
                                            </div>
                                          </Col>
                                        </div>
                                      </Row>
                                    </AssayPropertiesInput>
                                  </AutoCopyDataInput>
                                </div>
                              </div>
                            </Col>
                          </form>
                        </Form>
                      </div>
                    </div>
                  </Transition>
                </Collapse>
              </PanelCollapse>
            </PanelBody>
          </div>
        </Panel>
      </Uncontrolled(Panel)>
    </AssayPropertiesPanelImpl>
  </ComponentWithDomainPropertiesPanelCollapse>
  <DomainForm
    controlledCollapse={true}
    domain={
      Immutable.Record {
        "name": "Run Fields",
        "container": undefined,
        "description": undefined,
        "domainURI": undefined,
        "domainId": null,
        "allowFileLinkProperties": true,
        "allowAttachmentProperties": true,
        "allowFlagProperties": true,
        "showDefaultValueSettings": false,
        "defaultDefaultValueType": undefined,
        "defaultValueOptions": Immutable.List [],
        "fields": Immutable.List [],
        "indices": Immutable.List [],
        "domainException": undefined,
        "mandatoryFieldNames": Immutable.List [],
        "reservedFieldNames": Immutable.List [],
        "newDesignFields": undefined,
        "instructions": undefined,
      }
    }
    domainIndex={1}
    helpTopic={null}
    initCollapsed={true}
    key="1"
    modelDomains={
      Immutable.List [
        Immutable.Record {
          "name": "Batch Fields",
          "container": undefined,
          "description": undefined,
          "domainURI": undefined,
          "domainId": null,
          "allowFileLinkProperties": true,
          "allowAttachmentProperties": true,
          "allowFlagProperties": true,
          "showDefaultValueSettings": false,
          "defaultDefaultValueType": undefined,
          "defaultValueOptions": Immutable.List [],
          "fields": Immutable.List [],
          "indices": Immutable.List [],
          "domainException": undefined,
          "mandatoryFieldNames": Immutable.List [],
          "reservedFieldNames": Immutable.List [],
          "newDesignFields": undefined,
          "instructions": undefined,
        },
        Immutable.Record {
          "name": "Run Fields",
          "container": undefined,
          "description": undefined,
          "domainURI": undefined,
          "domainId": null,
          "allowFileLinkProperties": true,
          "allowAttachmentProperties": true,
          "allowFlagProperties": true,
          "showDefaultValueSettings": false,
          "defaultDefaultValueType": undefined,
          "defaultValueOptions": Immutable.List [],
          "fields": Immutable.List [],
          "indices": Immutable.List [],
          "domainException": undefined,
          "mandatoryFieldNames": Immutable.List [],
          "reservedFieldNames": Immutable.List [],
          "newDesignFields": undefined,
          "instructions": undefined,
        },
        Immutable.Record {
          "name": "Data Fields",
          "container": undefined,
          "description": undefined,
          "domainURI": undefined,
          "domainId": null,
          "allowFileLinkProperties": true,
          "allowAttachmentProperties": true,
          "allowFlagProperties": true,
          "showDefaultValueSettings": false,
          "defaultDefaultValueType": undefined,
          "defaultValueOptions": Immutable.List [],
          "fields": Immutable.List [],
          "indices": Immutable.List [],
          "domainException": undefined,
          "mandatoryFieldNames": Immutable.List [],
          "reservedFieldNames": Immutable.List [],
          "newDesignFields": undefined,
          "instructions": undefined,
        },
      ]
    }
    onChange={[Function]}
    onToggle={[Function]}
    panelStatus="TODO"
    showFilePropertyType={true}
    showInferFromFile={false}
    validate={false}
  >
    <LookupProvider>
      <DomainFormImpl
        appPropertiesOnly={false}
        controlledCollapse={true}
        domain={
          Immutable.Record {
            "name": "Run Fields",
            "container": undefined,
            "description": undefined,
            "domainURI": undefined,
            "domainId": null,
            "allowFileLinkProperties": true,
            "allowAttachmentProperties": true,
            "allowFlagProperties": true,
            "showDefaultValueSettings": false,
            "defaultDefaultValueType": undefined,
            "defaultValueOptions": Immutable.List [],
            "fields": Immutable.List [],
            "indices": Immutable.List [],
            "domainException": undefined,
            "mandatoryFieldNames": Immutable.List [],
            "reservedFieldNames": Immutable.List [],
            "newDesignFields": undefined,
            "instructions": undefined,
          }
        }
        domainFormDisplayOptions={
          Object {
            "isDragDisabled": false,
            "phiLevelDisabled": false,
            "showAddFieldsButton": true,
            "showRequired": true,
            "showTextOptions": true,
            "showValidators": true,
          }
        }
        domainIndex={1}
        helpNoun="field designer"
        helpTopic={null}
        initCollapsed={true}
        isNew={false}
        modelDomains={
          Immutable.List [
            Immutable.Record {
              "name": "Batch Fields",
              "container": undefined,
              "description": undefined,
              "domainURI": undefined,
              "domainId": null,
              "allowFileLinkProperties": true,
              "allowAttachmentProperties": true,
              "allowFlagProperties": true,
              "showDefaultValueSettings": false,
              "defaultDefaultValueType": undefined,
              "defaultValueOptions": Immutable.List [],
              "fields": Immutable.List [],
              "indices": Immutable.List [],
              "domainException": undefined,
              "mandatoryFieldNames": Immutable.List [],
              "reservedFieldNames": Immutable.List [],
              "newDesignFields": undefined,
              "instructions": undefined,
            },
            Immutable.Record {
              "name": "Run Fields",
              "container": undefined,
              "description": undefined,
              "domainURI": undefined,
              "domainId": null,
              "allowFileLinkProperties": true,
              "allowAttachmentProperties": true,
              "allowFlagProperties": true,
              "showDefaultValueSettings": false,
              "defaultDefaultValueType": undefined,
              "defaultValueOptions": Immutable.List [],
              "fields": Immutable.List [],
              "indices": Immutable.List [],
              "domainException": undefined,
              "mandatoryFieldNames": Immutable.List [],
              "reservedFieldNames": Immutable.List [],
              "newDesignFields": undefined,
              "instructions": undefined,
            },
            Immutable.Record {
              "name": "Data Fields",
              "container": undefined,
              "description": undefined,
              "domainURI": undefined,
              "domainId": null,
              "allowFileLinkProperties": true,
              "allowAttachmentProperties": true,
              "allowFlagProperties": true,
              "showDefaultValueSettings": false,
              "defaultDefaultValueType": undefined,
              "defaultValueOptions": Immutable.List [],
              "fields": Immutable.List [],
              "indices": Immutable.List [],
              "domainException": undefined,
              "mandatoryFieldNames": Immutable.List [],
              "reservedFieldNames": Immutable.List [],
              "newDesignFields": undefined,
              "instructions": undefined,
            },
          ]
        }
        onChange={[Function]}
        onToggle={[Function]}
        panelStatus="TODO"
        showFilePropertyType={true}
        showHeader={true}
        showInferFromFile={false}
        successBsStyle="success"
        validate={false}
      >
        <Uncontrolled(Panel)
          className="domain-form-panel"
          expanded={false}
          onToggle={[Function]}
        >
          <Panel
            bsClass="panel"
            bsStyle="default"
            className="domain-form-panel"
            expanded={false}
            onToggle={[Function]}
          >
            <div
              className="domain-form-panel panel panel-default"
            >
              <CollapsiblePanelHeader
                collapsed={true}
                controlledCollapse={true}
                id="domainpropertiesrow-Run-Fields-hdr"
                isValid={true}
                panelStatus="TODO"
                title="Run Fields"
                togglePanel={[Function]}
              >
                <PanelHeading
                  bsClass="panel"
                  className="domain-panel-header domain-heading-collapsible domain-panel-header-collapsed"
                  componentClass="div"
                  id="domainpropertiesrow-Run-Fields-hdr"
                  onClick={[Function]}
                >
                  <div
                    className="domain-panel-header domain-heading-collapsible domain-panel-header-collapsed panel-heading"
                    id="domainpropertiesrow-Run-Fields-hdr"
                    onClick={[Function]}
                  >
                    <LabelHelpTip
                      body={[Function]}
                      customStyle={Object {}}
                      iconComponent={[Function]}
                      id="tooltip"
                      placement="top"
                      size="1x"
                      title="Run Fields"
                    >
                      <span
                        className="label-help-target"
                        onMouseOut={[Function]}
                        onMouseOver={[Function]}
                      >
                        <span
                          className="domain-panel-status-icon domain-panel-status-icon-blue"
                        >
                          <FontAwesomeIcon
                            border={false}
                            className=""
                            fixedWidth={false}
                            flip={null}
                            icon={
                              Object {
                                "icon": Array [
                                  512,
                                  512,
                                  Array [],
                                  "f06a",
                                  "M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zm-248 50c-25.405 0-46 20.595-46 46s20.595 46 46 46 46-20.595 46-46-20.595-46-46-46zm-43.673-165.346l7.418 136c.347 6.364 5.609 11.346 11.982 11.346h48.546c6.373 0 11.635-4.982 11.982-11.346l7.418-136c.375-6.874-5.098-12.654-11.982-12.654h-63.383c-6.884 0-12.356 5.78-11.981 12.654z",
                                ],
                                "iconName": "exclamation-circle",
                                "prefix": "fas",
                              }
                            }
                            inverse={false}
                            listItem={false}
                            mask={null}
                            pull={null}
                            pulse={false}
                            rotation={null}
                            size={null}
                            spin={false}
                            symbol={false}
                            title=""
                            transform={null}
                          >
                            <svg
                              aria-hidden="true"
                              className="svg-inline--fa fa-exclamation-circle fa-w-16 "
                              data-icon="exclamation-circle"
                              data-prefix="fas"
                              focusable="false"
                              role="img"
                              style={Object {}}
                              viewBox="0 0 512 512"
                              xmlns="http://www.w3.org/2000/svg"
                            >
                              <path
                                d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zm-248 50c-25.405 0-46 20.595-46 46s20.595 46 46 46 46-20.595 46-46-20.595-46-46-46zm-43.673-165.346l7.418 136c.347 6.364 5.609 11.346 11.982 11.346h48.546c6.373 0 11.635-4.982 11.982-11.346l7.418-136c.375-6.874-5.098-12.654-11.982-12.654h-63.383c-6.884 0-12.356 5.78-11.981 12.654z"
                                fill="currentColor"
                                style={Object {}}
                              />
                            </svg>
                          </FontAwesomeIcon>
                        </span>
                        <Overlay
                          animation={[Function]}
                          placement="top"
                          rootClose={false}
                          show={false}
                          target={
                            <span
                              class="label-help-target"
                            >
                              <span
                                class="domain-panel-status-icon domain-panel-status-icon-blue"
                              >
                                <svg
                                  aria-hidden="true"
                                  class="svg-inline--fa fa-exclamation-circle fa-w-16 "
                                  data-icon="exclamation-circle"
                                  data-prefix="fas"
                                  focusable="false"
                                  role="img"
                                  viewBox="0 0 512 512"
                                  xmlns="http://www.w3.org/2000/svg"
                                >
                                  <path
                                    d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zm-248 50c-25.405 0-46 20.595-46 46s20.595 46 46 46 46-20.595 46-46-20.595-46-46-46zm-43.673-165.346l7.418 136c.347 6.364 5.609 11.346 11.982 11.346h48.546c6.373 0 11.635-4.982 11.982-11.346l7.418-136c.375-6.874-5.098-12.654-11.982-12.654h-63.383c-6.884 0-12.356 5.78-11.981 12.654z"
                                    fill="currentColor"
                                  />
                                </svg>
                              </span>
                            </span>
                          }
                        >
                          <Overlay
                            placement="top"
                            rootClose={false}
                            show={false}
                            target={
                              <span
                                class="label-help-target"
                              >
                                <span
                                  class="domain-panel-status-icon domain-panel-status-icon-blue"
                                >
                                  <svg
                                    aria-hidden="true"
                                    class="svg-inline--fa fa-exclamation-circle fa-w-16 "
                                    data-icon="exclamation-circle"
                                    data-prefix="fas"
                                    focusable="false"
                                    role="img"
                                    viewBox="0 0 512 512"
                                    xmlns="http://www.w3.org/2000/svg"
                                  >
                                    <path
                                      d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zm-248 50c-25.405 0-46 20.595-46 46s20.595 46 46 46 46-20.595 46-46-20.595-46-46-46zm-43.673-165.346l7.418 136c.347 6.364 5.609 11.346 11.982 11.346h48.546c6.373 0 11.635-4.982 11.982-11.346l7.418-136c.375-6.874-5.098-12.654-11.982-12.654h-63.383c-6.884 0-12.356 5.78-11.981 12.654z"
                                      fill="currentColor"
                                    />
                                  </svg>
                                </span>
                              </span>
                            }
                            transition={[Function]}
                          />
                        </Overlay>
                      </span>
                    </LabelHelpTip>
                    <span
                      className="domain-panel-title"
                    >
                      Run Fields
                    </span>
                    <span
                      className="pull-right"
                    >
                      <FontAwesomeIcon
                        border={false}
                        className="domain-form-expand-btn"
                        fixedWidth={false}
                        flip={null}
                        icon={
                          Object {
                            "icon": Array [
                              448,
                              512,
                              Array [],
                              "f0fe",
                              "M400 32H48C21.5 32 0 53.5 0 80v352c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V80c0-26.5-21.5-48-48-48zm-32 252c0 6.6-5.4 12-12 12h-92v92c0 6.6-5.4 12-12 12h-56c-6.6 0-12-5.4-12-12v-92H92c-6.6 0-12-5.4-12-12v-56c0-6.6 5.4-12 12-12h92v-92c0-6.6 5.4-12 12-12h56c6.6 0 12 5.4 12 12v92h92c6.6 0 12 5.4 12 12v56z",
                            ],
                            "iconName": "plus-square",
                            "prefix": "fas",
                          }
                        }
                        inverse={false}
                        listItem={false}
                        mask={null}
                        pull={null}
                        pulse={false}
                        rotation={null}
                        size="lg"
                        spin={false}
                        symbol={false}
                        title=""
                        transform={null}
                      >
                        <svg
                          aria-hidden="true"
                          className="svg-inline--fa fa-plus-square fa-w-14 fa-lg domain-form-expand-btn"
                          data-icon="plus-square"
                          data-prefix="fas"
                          focusable="false"
                          role="img"
                          style={Object {}}
                          viewBox="0 0 448 512"
                          xmlns="http://www.w3.org/2000/svg"
                        >
                          <path
                            d="M400 32H48C21.5 32 0 53.5 0 80v352c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V80c0-26.5-21.5-48-48-48zm-32 252c0 6.6-5.4 12-12 12h-92v92c0 6.6-5.4 12-12 12h-56c-6.6 0-12-5.4-12-12v-92H92c-6.6 0-12-5.4-12-12v-56c0-6.6 5.4-12 12-12h92v-92c0-6.6 5.4-12 12-12h56c6.6 0 12 5.4 12 12v92h92c6.6 0 12 5.4 12 12v56z"
                            fill="currentColor"
                            style={Object {}}
                          />
                        </svg>
                      </FontAwesomeIcon>
                    </span>
                    <LabelHelpTip
                      body={[Function]}
                      customStyle={
                        Object {
                          "marginLeft": "5px",
                          "verticalAlign": "top",
                        }
                      }
                      id="tooltip"
                      placement="top"
                      size="1x"
                      title="Run Fields"
                    >
                      <span
                        className="label-help-target"
                        onMouseOut={[Function]}
                        onMouseOver={[Function]}
                      >
                        <FontAwesomeIcon
                          border={false}
                          className="label-help-icon"
                          fixedWidth={false}
                          flip={null}
                          icon={
                            Object {
                              "icon": Array [
                                512,
                                512,
                                Array [],
                                "f059",
                                "M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z",
                              ],
                              "iconName": "question-circle",
                              "prefix": "fas",
                            }
                          }
                          inverse={false}
                          listItem={false}
                          mask={null}
                          pull={null}
                          pulse={false}
                          rotation={null}
                          size="1x"
                          spin={false}
                          style={
                            Object {
                              "marginLeft": "5px",
                              "verticalAlign": "top",
                            }
                          }
                          symbol={false}
                          title=""
                          transform={null}
                        >
                          <svg
                            aria-hidden="true"
                            className="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                            data-icon="question-circle"
                            data-prefix="fas"
                            focusable="false"
                            role="img"
                            style={
                              Object {
                                "marginLeft": "5px",
                                "verticalAlign": "top",
                              }
                            }
                            viewBox="0 0 512 512"
                            xmlns="http://www.w3.org/2000/svg"
                          >
                            <path
                              d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                              fill="currentColor"
                              style={Object {}}
                            />
                          </svg>
                        </FontAwesomeIcon>
                        <Overlay
                          animation={[Function]}
                          placement="top"
                          rootClose={false}
                          show={false}
                          target={
                            <span
                              class="label-help-target"
                            >
                              <svg
                                aria-hidden="true"
                                class="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                                data-icon="question-circle"
                                data-prefix="fas"
                                focusable="false"
                                role="img"
                                style="vertical-align: top; margin-left: 5px;"
                                viewBox="0 0 512 512"
                                xmlns="http://www.w3.org/2000/svg"
                              >
                                <path
                                  d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                  fill="currentColor"
                                />
                              </svg>
                            </span>
                          }
                        >
                          <Overlay
                            placement="top"
                            rootClose={false}
                            show={false}
                            target={
                              <span
                                class="label-help-target"
                              >
                                <svg
                                  aria-hidden="true"
                                  class="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                                  data-icon="question-circle"
                                  data-prefix="fas"
                                  focusable="false"
                                  role="img"
                                  style="vertical-align: top; margin-left: 5px;"
                                  viewBox="0 0 512 512"
                                  xmlns="http://www.w3.org/2000/svg"
                                >
                                  <path
                                    d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                    fill="currentColor"
                                  />
                                </svg>
                              </span>
                            }
                            transition={[Function]}
                          />
                        </Overlay>
                      </span>
                    </LabelHelpTip>
                  </div>
                </PanelHeading>
              </CollapsiblePanelHeader>
              <PanelBody
                bsClass="panel"
                collapsible={true}
              >
                <PanelCollapse
                  bsClass="panel"
                >
                  <Collapse
                    appear={false}
                    dimension="height"
                    getDimensionValue={[Function]}
                    in={false}
                    mountOnEnter={false}
                    timeout={300}
                    unmountOnExit={false}
                  >
                    <Transition
                      appear={false}
                      aria-expanded={null}
                      enter={true}
                      exit={true}
                      in={false}
                      mountOnEnter={false}
                      onEnter={[Function]}
                      onEntered={[Function]}
                      onEntering={[Function]}
                      onExit={[Function]}
                      onExited={[Function]}
                      onExiting={[Function]}
                      timeout={300}
                      unmountOnExit={false}
                    >
                      <div
                        aria-expanded={null}
                        className="panel-collapse collapse"
                      >
                        <div
                          className="panel-body"
                        >
                          <Row
                            bsClass="row"
                            className=""
                            componentClass="div"
                          >
                            <div
                              className="row"
                            >
                              <Col
                                bsClass="col"
                                componentClass="div"
                                xs={12}
                              >
                                <div
                                  className="col-xs-12"
                                />
                              </Col>
                            </div>
                          </Row>
                          <Uncontrolled(Panel)
                            className="domain-form-no-field-panel"
                          >
                            <Panel
                              bsClass="panel"
                              bsStyle="default"
                              className="domain-form-no-field-panel"
                              onToggle={[Function]}
                            >
                              <div
                                className="domain-form-no-field-panel panel panel-default"
                              >
                                No fields created yet. Add some using the button below.
                              </div>
                            </Panel>
                          </Uncontrolled(Panel)>
                          <Row
                            bsClass="row"
                            className="domain-add-field-row"
                            componentClass="div"
                          >
                            <div
                              className="domain-add-field-row row"
                            >
                              <Col
                                bsClass="col"
                                componentClass="div"
                                xs={12}
                              >
                                <div
                                  className="col-xs-12"
                                >
                                  <AddEntityButton
                                    buttonClass="domain-form-add-btn"
                                    containerClass="form-group"
                                    entity="Field"
                                    helperTitle="More Info"
                                    onClick={[Function]}
                                  >
                                    <div
                                      className="form-group"
                                    >
                                      <div
                                        className="domain-form-add-btn"
                                      >
                                        <span
                                          className="container--action-button btn btn-default"
                                          onClick={[Function]}
                                        >
                                          <i
                                            className="fa fa-plus-circle container--addition-icon"
                                          />
                                           Add 
                                          Field
                                        </span>
                                      </div>
                                    </div>
                                  </AddEntityButton>
                                </div>
                              </Col>
                            </div>
                          </Row>
                        </div>
                      </div>
                    </Transition>
                  </Collapse>
                </PanelCollapse>
              </PanelBody>
            </div>
          </Panel>
        </Uncontrolled(Panel)>
      </DomainFormImpl>
    </LookupProvider>
  </DomainForm>
  <DomainForm
    controlledCollapse={true}
    domain={
      Immutable.Record {
        "name": "Data Fields",
        "container": undefined,
        "description": undefined,
        "domainURI": undefined,
        "domainId": null,
        "allowFileLinkProperties": true,
        "allowAttachmentProperties": true,
        "allowFlagProperties": true,
        "showDefaultValueSettings": false,
        "defaultDefaultValueType": undefined,
        "defaultValueOptions": Immutable.List [],
        "fields": Immutable.List [],
        "indices": Immutable.List [],
        "domainException": undefined,
        "mandatoryFieldNames": Immutable.List [],
        "reservedFieldNames": Immutable.List [],
        "newDesignFields": undefined,
        "instructions": undefined,
      }
    }
    domainIndex={2}
    helpTopic={null}
    initCollapsed={true}
    key="2"
    modelDomains={
      Immutable.List [
        Immutable.Record {
          "name": "Batch Fields",
          "container": undefined,
          "description": undefined,
          "domainURI": undefined,
          "domainId": null,
          "allowFileLinkProperties": true,
          "allowAttachmentProperties": true,
          "allowFlagProperties": true,
          "showDefaultValueSettings": false,
          "defaultDefaultValueType": undefined,
          "defaultValueOptions": Immutable.List [],
          "fields": Immutable.List [],
          "indices": Immutable.List [],
          "domainException": undefined,
          "mandatoryFieldNames": Immutable.List [],
          "reservedFieldNames": Immutable.List [],
          "newDesignFields": undefined,
          "instructions": undefined,
        },
        Immutable.Record {
          "name": "Run Fields",
          "container": undefined,
          "description": undefined,
          "domainURI": undefined,
          "domainId": null,
          "allowFileLinkProperties": true,
          "allowAttachmentProperties": true,
          "allowFlagProperties": true,
          "showDefaultValueSettings": false,
          "defaultDefaultValueType": undefined,
          "defaultValueOptions": Immutable.List [],
          "fields": Immutable.List [],
          "indices": Immutable.List [],
          "domainException": undefined,
          "mandatoryFieldNames": Immutable.List [],
          "reservedFieldNames": Immutable.List [],
          "newDesignFields": undefined,
          "instructions": undefined,
        },
        Immutable.Record {
          "name": "Data Fields",
          "container": undefined,
          "description": undefined,
          "domainURI": undefined,
          "domainId": null,
          "allowFileLinkProperties": true,
          "allowAttachmentProperties": true,
          "allowFlagProperties": true,
          "showDefaultValueSettings": false,
          "defaultDefaultValueType": undefined,
          "defaultValueOptions": Immutable.List [],
          "fields": Immutable.List [],
          "indices": Immutable.List [],
          "domainException": undefined,
          "mandatoryFieldNames": Immutable.List [],
          "reservedFieldNames": Immutable.List [],
          "newDesignFields": undefined,
          "instructions": undefined,
        },
      ]
    }
    onChange={[Function]}
    onToggle={[Function]}
    panelStatus="TODO"
    showFilePropertyType={false}
    showInferFromFile={true}
    validate={false}
  >
    <LookupProvider>
      <DomainFormImpl
        appPropertiesOnly={false}
        controlledCollapse={true}
        domain={
          Immutable.Record {
            "name": "Data Fields",
            "container": undefined,
            "description": undefined,
            "domainURI": undefined,
            "domainId": null,
            "allowFileLinkProperties": true,
            "allowAttachmentProperties": true,
            "allowFlagProperties": true,
            "showDefaultValueSettings": false,
            "defaultDefaultValueType": undefined,
            "defaultValueOptions": Immutable.List [],
            "fields": Immutable.List [],
            "indices": Immutable.List [],
            "domainException": undefined,
            "mandatoryFieldNames": Immutable.List [],
            "reservedFieldNames": Immutable.List [],
            "newDesignFields": undefined,
            "instructions": undefined,
          }
        }
        domainFormDisplayOptions={
          Object {
            "isDragDisabled": false,
            "phiLevelDisabled": false,
            "showAddFieldsButton": true,
            "showRequired": true,
            "showTextOptions": true,
            "showValidators": true,
          }
        }
        domainIndex={2}
        helpNoun="field designer"
        helpTopic={null}
        initCollapsed={true}
        isNew={false}
        modelDomains={
          Immutable.List [
            Immutable.Record {
              "name": "Batch Fields",
              "container": undefined,
              "description": undefined,
              "domainURI": undefined,
              "domainId": null,
              "allowFileLinkProperties": true,
              "allowAttachmentProperties": true,
              "allowFlagProperties": true,
              "showDefaultValueSettings": false,
              "defaultDefaultValueType": undefined,
              "defaultValueOptions": Immutable.List [],
              "fields": Immutable.List [],
              "indices": Immutable.List [],
              "domainException": undefined,
              "mandatoryFieldNames": Immutable.List [],
              "reservedFieldNames": Immutable.List [],
              "newDesignFields": undefined,
              "instructions": undefined,
            },
            Immutable.Record {
              "name": "Run Fields",
              "container": undefined,
              "description": undefined,
              "domainURI": undefined,
              "domainId": null,
              "allowFileLinkProperties": true,
              "allowAttachmentProperties": true,
              "allowFlagProperties": true,
              "showDefaultValueSettings": false,
              "defaultDefaultValueType": undefined,
              "defaultValueOptions": Immutable.List [],
              "fields": Immutable.List [],
              "indices": Immutable.List [],
              "domainException": undefined,
              "mandatoryFieldNames": Immutable.List [],
              "reservedFieldNames": Immutable.List [],
              "newDesignFields": undefined,
              "instructions": undefined,
            },
            Immutable.Record {
              "name": "Data Fields",
              "container": undefined,
              "description": undefined,
              "domainURI": undefined,
              "domainId": null,
              "allowFileLinkProperties": true,
              "allowAttachmentProperties": true,
              "allowFlagProperties": true,
              "showDefaultValueSettings": false,
              "defaultDefaultValueType": undefined,
              "defaultValueOptions": Immutable.List [],
              "fields": Immutable.List [],
              "indices": Immutable.List [],
              "domainException": undefined,
              "mandatoryFieldNames": Immutable.List [],
              "reservedFieldNames": Immutable.List [],
              "newDesignFields": undefined,
              "instructions": undefined,
            },
          ]
        }
        onChange={[Function]}
        onToggle={[Function]}
        panelStatus="TODO"
        showFilePropertyType={false}
        showHeader={true}
        showInferFromFile={true}
        successBsStyle="success"
        validate={false}
      >
        <Uncontrolled(Panel)
          className="domain-form-panel"
          expanded={false}
          onToggle={[Function]}
        >
          <Panel
            bsClass="panel"
            bsStyle="default"
            className="domain-form-panel"
            expanded={false}
            onToggle={[Function]}
          >
            <div
              className="domain-form-panel panel panel-default"
            >
              <CollapsiblePanelHeader
                collapsed={true}
                controlledCollapse={true}
                id="domainpropertiesrow-Data-Fields-hdr"
                isValid={true}
                panelStatus="TODO"
                title="Results Fields"
                togglePanel={[Function]}
              >
                <PanelHeading
                  bsClass="panel"
                  className="domain-panel-header domain-heading-collapsible domain-panel-header-collapsed"
                  componentClass="div"
                  id="domainpropertiesrow-Data-Fields-hdr"
                  onClick={[Function]}
                >
                  <div
                    className="domain-panel-header domain-heading-collapsible domain-panel-header-collapsed panel-heading"
                    id="domainpropertiesrow-Data-Fields-hdr"
                    onClick={[Function]}
                  >
                    <LabelHelpTip
                      body={[Function]}
                      customStyle={Object {}}
                      iconComponent={[Function]}
                      id="tooltip"
                      placement="top"
                      size="1x"
                      title="Results Fields"
                    >
                      <span
                        className="label-help-target"
                        onMouseOut={[Function]}
                        onMouseOver={[Function]}
                      >
                        <span
                          className="domain-panel-status-icon domain-panel-status-icon-blue"
                        >
                          <FontAwesomeIcon
                            border={false}
                            className=""
                            fixedWidth={false}
                            flip={null}
                            icon={
                              Object {
                                "icon": Array [
                                  512,
                                  512,
                                  Array [],
                                  "f06a",
                                  "M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zm-248 50c-25.405 0-46 20.595-46 46s20.595 46 46 46 46-20.595 46-46-20.595-46-46-46zm-43.673-165.346l7.418 136c.347 6.364 5.609 11.346 11.982 11.346h48.546c6.373 0 11.635-4.982 11.982-11.346l7.418-136c.375-6.874-5.098-12.654-11.982-12.654h-63.383c-6.884 0-12.356 5.78-11.981 12.654z",
                                ],
                                "iconName": "exclamation-circle",
                                "prefix": "fas",
                              }
                            }
                            inverse={false}
                            listItem={false}
                            mask={null}
                            pull={null}
                            pulse={false}
                            rotation={null}
                            size={null}
                            spin={false}
                            symbol={false}
                            title=""
                            transform={null}
                          >
                            <svg
                              aria-hidden="true"
                              className="svg-inline--fa fa-exclamation-circle fa-w-16 "
                              data-icon="exclamation-circle"
                              data-prefix="fas"
                              focusable="false"
                              role="img"
                              style={Object {}}
                              viewBox="0 0 512 512"
                              xmlns="http://www.w3.org/2000/svg"
                            >
                              <path
                                d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zm-248 50c-25.405 0-46 20.595-46 46s20.595 46 46 46 46-20.595 46-46-20.595-46-46-46zm-43.673-165.346l7.418 136c.347 6.364 5.609 11.346 11.982 11.346h48.546c6.373 0 11.635-4.982 11.982-11.346l7.418-136c.375-6.874-5.098-12.654-11.982-12.654h-63.383c-6.884 0-12.356 5.78-11.981 12.654z"
                                fill="currentColor"
                                style={Object {}}
                              />
                            </svg>
                          </FontAwesomeIcon>
                        </span>
                        <Overlay
                          animation={[Function]}
                          placement="top"
                          rootClose={false}
                          show={false}
                          target={
                            <span
                              class="label-help-target"
                            >
                              <span
                                class="domain-panel-status-icon domain-panel-status-icon-blue"
                              >
                                <svg
                                  aria-hidden="true"
                                  class="svg-inline--fa fa-exclamation-circle fa-w-16 "
                                  data-icon="exclamation-circle"
                                  data-prefix="fas"
                                  focusable="false"
                                  role="img"
                                  viewBox="0 0 512 512"
                                  xmlns="http://www.w3.org/2000/svg"
                                >
                                  <path
                                    d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zm-248 50c-25.405 0-46 20.595-46 46s20.595 46 46 46 46-20.595 46-46-20.595-46-46-46zm-43.673-165.346l7.418 136c.347 6.364 5.609 11.346 11.982 11.346h48.546c6.373 0 11.635-4.982 11.982-11.346l7.418-136c.375-6.874-5.098-12.654-11.982-12.654h-63.383c-6.884 0-12.356 5.78-11.981 12.654z"
                                    fill="currentColor"
                                  />
                                </svg>
                              </span>
                            </span>
                          }
                        >
                          <Overlay
                            placement="top"
                            rootClose={false}
                            show={false}
                            target={
                              <span
                                class="label-help-target"
                              >
                                <span
                                  class="domain-panel-status-icon domain-panel-status-icon-blue"
                                >
                                  <svg
                                    aria-hidden="true"
                                    class="svg-inline--fa fa-exclamation-circle fa-w-16 "
                                    data-icon="exclamation-circle"
                                    data-prefix="fas"
                                    focusable="false"
                                    role="img"
                                    viewBox="0 0 512 512"
                                    xmlns="http://www.w3.org/2000/svg"
                                  >
                                    <path
                                      d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zm-248 50c-25.405 0-46 20.595-46 46s20.595 46 46 46 46-20.595 46-46-20.595-46-46-46zm-43.673-165.346l7.418 136c.347 6.364 5.609 11.346 11.982 11.346h48.546c6.373 0 11.635-4.982 11.982-11.346l7.418-136c.375-6.874-5.098-12.654-11.982-12.654h-63.383c-6.884 0-12.356 5.78-11.981 12.654z"
                                      fill="currentColor"
                                    />
                                  </svg>
                                </span>
                              </span>
                            }
                            transition={[Function]}
                          />
                        </Overlay>
                      </span>
                    </LabelHelpTip>
                    <span
                      className="domain-panel-title"
                    >
                      Results Fields
                    </span>
                    <span
                      className="pull-right"
                    >
                      <FontAwesomeIcon
                        border={false}
                        className="domain-form-expand-btn"
                        fixedWidth={false}
                        flip={null}
                        icon={
                          Object {
                            "icon": Array [
                              448,
                              512,
                              Array [],
                              "f0fe",
                              "M400 32H48C21.5 32 0 53.5 0 80v352c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V80c0-26.5-21.5-48-48-48zm-32 252c0 6.6-5.4 12-12 12h-92v92c0 6.6-5.4 12-12 12h-56c-6.6 0-12-5.4-12-12v-92H92c-6.6 0-12-5.4-12-12v-56c0-6.6 5.4-12 12-12h92v-92c0-6.6 5.4-12 12-12h56c6.6 0 12 5.4 12 12v92h92c6.6 0 12 5.4 12 12v56z",
                            ],
                            "iconName": "plus-square",
                            "prefix": "fas",
                          }
                        }
                        inverse={false}
                        listItem={false}
                        mask={null}
                        pull={null}
                        pulse={false}
                        rotation={null}
                        size="lg"
                        spin={false}
                        symbol={false}
                        title=""
                        transform={null}
                      >
                        <svg
                          aria-hidden="true"
                          className="svg-inline--fa fa-plus-square fa-w-14 fa-lg domain-form-expand-btn"
                          data-icon="plus-square"
                          data-prefix="fas"
                          focusable="false"
                          role="img"
                          style={Object {}}
                          viewBox="0 0 448 512"
                          xmlns="http://www.w3.org/2000/svg"
                        >
                          <path
                            d="M400 32H48C21.5 32 0 53.5 0 80v352c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V80c0-26.5-21.5-48-48-48zm-32 252c0 6.6-5.4 12-12 12h-92v92c0 6.6-5.4 12-12 12h-56c-6.6 0-12-5.4-12-12v-92H92c-6.6 0-12-5.4-12-12v-56c0-6.6 5.4-12 12-12h92v-92c0-6.6 5.4-12 12-12h56c6.6 0 12 5.4 12 12v92h92c6.6 0 12 5.4 12 12v56z"
                            fill="currentColor"
                            style={Object {}}
                          />
                        </svg>
                      </FontAwesomeIcon>
                    </span>
                    <LabelHelpTip
                      body={[Function]}
                      customStyle={
                        Object {
                          "marginLeft": "5px",
                          "verticalAlign": "top",
                        }
                      }
                      id="tooltip"
                      placement="top"
                      size="1x"
                      title="Results Fields"
                    >
                      <span
                        className="label-help-target"
                        onMouseOut={[Function]}
                        onMouseOver={[Function]}
                      >
                        <FontAwesomeIcon
                          border={false}
                          className="label-help-icon"
                          fixedWidth={false}
                          flip={null}
                          icon={
                            Object {
                              "icon": Array [
                                512,
                                512,
                                Array [],
                                "f059",
                                "M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z",
                              ],
                              "iconName": "question-circle",
                              "prefix": "fas",
                            }
                          }
                          inverse={false}
                          listItem={false}
                          mask={null}
                          pull={null}
                          pulse={false}
                          rotation={null}
                          size="1x"
                          spin={false}
                          style={
                            Object {
                              "marginLeft": "5px",
                              "verticalAlign": "top",
                            }
                          }
                          symbol={false}
                          title=""
                          transform={null}
                        >
                          <svg
                            aria-hidden="true"
                            className="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                            data-icon="question-circle"
                            data-prefix="fas"
                            focusable="false"
                            role="img"
                            style={
                              Object {
                                "marginLeft": "5px",
                                "verticalAlign": "top",
                              }
                            }
                            viewBox="0 0 512 512"
                            xmlns="http://www.w3.org/2000/svg"
                          >
                            <path
                              d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                              fill="currentColor"
                              style={Object {}}
                            />
                          </svg>
                        </FontAwesomeIcon>
                        <Overlay
                          animation={[Function]}
                          placement="top"
                          rootClose={false}
                          show={false}
                          target={
                            <span
                              class="label-help-target"
                            >
                              <svg
                                aria-hidden="true"
                                class="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                                data-icon="question-circle"
                                data-prefix="fas"
                                focusable="false"
                                role="img"
                                style="vertical-align: top; margin-left: 5px;"
                                viewBox="0 0 512 512"
                                xmlns="http://www.w3.org/2000/svg"
                              >
                                <path
                                  d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                  fill="currentColor"
                                />
                              </svg>
                            </span>
                          }
                        >
                          <Overlay
                            placement="top"
                            rootClose={false}
                            show={false}
                            target={
                              <span
                                class="label-help-target"
                              >
                                <svg
                                  aria-hidden="true"
                                  class="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                                  data-icon="question-circle"
                                  data-prefix="fas"
                                  focusable="false"
                                  role="img"
                                  style="vertical-align: top; margin-left: 5px;"
                                  viewBox="0 0 512 512"
                                  xmlns="http://www.w3.org/2000/svg"
                                >
                                  <path
                                    d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                    fill="currentColor"
                                  />
                                </svg>
                              </span>
                            }
                            transition={[Function]}
                          />
                        </Overlay>
                      </span>
                    </LabelHelpTip>
                  </div>
                </PanelHeading>
              </CollapsiblePanelHeader>
              <PanelBody
                bsClass="panel"
                collapsible={true}
              >
                <PanelCollapse
                  bsClass="panel"
                >
                  <Collapse
                    appear={false}
                    dimension="height"
                    getDimensionValue={[Function]}
                    in={false}
                    mountOnEnter={false}
                    timeout={300}
                    unmountOnExit={false}
                  >
                    <Transition
                      appear={false}
                      aria-expanded={null}
                      enter={true}
                      exit={true}
                      in={false}
                      mountOnEnter={false}
                      onEnter={[Function]}
                      onEntered={[Function]}
                      onEntering={[Function]}
                      onExit={[Function]}
                      onExited={[Function]}
                      onExiting={[Function]}
                      timeout={300}
                      unmountOnExit={false}
                    >
                      <div
                        aria-expanded={null}
                        className="panel-collapse collapse"
                      >
                        <div
                          className="panel-body"
                        >
                          <Row
                            bsClass="row"
                            className=""
                            componentClass="div"
                          >
                            <div
                              className="row"
                            >
                              <Col
                                bsClass="col"
                                componentClass="div"
                                xs={12}
                              >
                                <div
                                  className="col-xs-12"
                                />
                              </Col>
                            </div>
                          </Row>
                          <FileAttachmentForm
                            acceptedFormats=".csv, .tsv, .txt, .xls, .xlsx"
                            allowDirectories={false}
                            allowMultiple={false}
                            cancelText="Cancel"
                            compact={false}
                            label="Infer fields from file"
                            labelLong="Select file or drag and drop here."
                            onFileRemoval={[Function]}
                            previewGridProps={
                              Object {
                                "onPreviewLoad": [Function],
                                "previewCount": 3,
                                "skipPreviewGrid": true,
                              }
                            }
                            showAcceptedFormats={true}
                            showButtons={false}
                            showLabel={true}
                            showProgressBar={false}
                            submitText="Upload"
                          >
                            <span
                              className="translator--toggle__wizard"
                            >
                              <FormSection
                                iconSpacer={false}
                                label="Infer fields from file"
                                showLabel={true}
                              >
                                <div
                                  className="row"
                                >
                                  <div
                                    className="col-sm-12"
                                  >
                                    <label
                                      className="control-label text-left"
                                    >
                                      <strong>
                                        Infer fields from file
                                      </strong>
                                    </label>
                                  </div>
                                </div>
                                <div
                                  className="row"
                                >
                                  <div
                                    className="col-sm-12"
                                  >
                                    <div
                                      className="wizard-row--container"
                                    >
                                      <FileAttachmentContainer
                                        acceptedFormats=".csv, .tsv, .txt, .xls, .xlsx"
                                        allowDirectories={false}
                                        allowMultiple={false}
                                        compact={false}
                                        handleChange={[Function]}
                                        handleRemoval={[Function]}
                                        labelLong="Select file or drag and drop here."
                                      >
                                        <div>
                                          <div
                                            className="file-upload--container block"
                                          >
                                            <label
                                              className="file-upload--label"
                                              htmlFor="fileUpload"
                                              onDragEnter={[Function]}
                                              onDragLeave={[Function]}
                                              onDragOver={[Function]}
                                              onDrop={[Function]}
                                            >
                                              <i
                                                aria-hidden="true"
                                                className="fa fa-cloud-upload fa-2x cloud-logo"
                                              />
                                              Select file or drag and drop here.
                                            </label>
                                            <input
                                              accept=".csv, .tsv, .txt, .xls, .xlsx"
                                              className="file-upload--input"
                                              id="fileUpload"
                                              multiple={false}
                                              name="fileUpload"
                                              onChange={[Function]}
                                              type="file"
                                            />
                                          </div>
                                        </div>
                                      </FileAttachmentContainer>
                                    </div>
                                  </div>
                                </div>
                              </FormSection>
                            </span>
                            <div
                              className="row"
                            >
                              <div
                                className="col-md-9"
                              >
                                <div
                                  className="file-form-formats"
                                >
                                  <strong>
                                    Supported formats include: 
                                  </strong>
                                  .csv, .tsv, .txt, .xls, .xlsx
                                </div>
                              </div>
                              <div
                                className="col-md-3"
                              >
                                <div
                                  className="pull-right"
                                />
                              </div>
                            </div>
                          </FileAttachmentForm>
                          <div
                            className="margin-top"
                          >
                            or 
                            <span
                              className="domain-form-add-link"
                              onClick={[Function]}
                            >
                              manually define fields
                            </span>
                          </div>
                        </div>
                      </div>
                    </Transition>
                  </Collapse>
                </PanelCollapse>
              </PanelBody>
            </div>
          </Panel>
        </Uncontrolled(Panel)>
      </DomainFormImpl>
    </LookupProvider>
  </DomainForm>
  <div
    className="domain-form-panel domain-designer-buttons"
  >
    <Button
      active={false}
      block={false}
      bsClass="btn"
      bsStyle="default"
      disabled={false}
      onClick={[Function]}
    >
      <button
        className="btn btn-default"
        disabled={false}
        onClick={[Function]}
        type="button"
      >
        Cancel
      </button>
    </Button>
    <Button
      active={false}
      block={false}
      bsClass="btn"
      bsStyle="success"
      className="pull-right"
      disabled={false}
      onClick={[Function]}
    >
      <button
        className="pull-right btn btn-success"
        disabled={false}
        onClick={[Function]}
        type="button"
      >
        Save
      </button>
    </Button>
  </div>
</AssayDesignerPanels>
`;

exports[`AssayDesignerPanels hideEmptyBatchDomain with initModel 1`] = `
<AssayDesignerPanels
  hideEmptyBatchDomain={true}
  initModel={
    Immutable.Record {
      "allowBackgroundUpload": true,
      "allowEditableResults": true,
      "allowQCStates": false,
      "allowSpacesInPath": false,
      "allowTransformationScript": false,
      "allowPlateMetadata": false,
      "autoCopyTargetContainer": undefined,
      "autoCopyTargetContainerId": undefined,
      "availableDetectionMethods": undefined,
      "availableMetadataInputFormats": undefined,
      "availablePlateTemplates": undefined,
      "backgroundUpload": true,
      "description": "My assay protocol for you all to use.",
      "domains": Immutable.List [
        Immutable.Record {
          "name": "Batch Fields",
          "container": undefined,
          "description": undefined,
          "domainURI": undefined,
          "domainId": null,
          "allowFileLinkProperties": true,
          "allowAttachmentProperties": true,
          "allowFlagProperties": true,
          "showDefaultValueSettings": false,
          "defaultDefaultValueType": undefined,
          "defaultValueOptions": Immutable.List [],
          "fields": Immutable.List [],
          "indices": Immutable.List [],
          "domainException": undefined,
          "mandatoryFieldNames": Immutable.List [],
          "reservedFieldNames": Immutable.List [],
          "newDesignFields": undefined,
          "instructions": undefined,
        },
        Immutable.Record {
          "name": "Sample Fields",
          "container": undefined,
          "description": undefined,
          "domainURI": undefined,
          "domainId": null,
          "allowFileLinkProperties": true,
          "allowAttachmentProperties": true,
          "allowFlagProperties": true,
          "showDefaultValueSettings": false,
          "defaultDefaultValueType": undefined,
          "defaultValueOptions": Immutable.List [],
          "fields": Immutable.List [
            Immutable.Record {
              "conceptURI": undefined,
              "conditionalFormats": Immutable.List [],
              "defaultScale": undefined,
              "defaultValueType": undefined,
              "defaultValue": undefined,
              "defaultDisplayValue": undefined,
              "description": undefined,
              "dimension": undefined,
              "excludeFromShifting": false,
              "format": undefined,
              "hidden": false,
              "importAliases": undefined,
              "label": undefined,
              "lookupContainer": undefined,
              "lookupQuery": undefined,
              "lookupSchema": undefined,
              "lookupValidator": undefined,
              "measure": undefined,
              "mvEnabled": false,
              "name": "field1",
              "PHI": undefined,
              "primaryKey": undefined,
              "propertyId": undefined,
              "propertyURI": undefined,
              "propertyValidators": Immutable.List [],
              "rangeValidators": Immutable.List [],
              "rangeURI": "xsd:string",
              "regexValidators": Immutable.List [],
              "recommendedVariable": false,
              "required": false,
              "scale": undefined,
              "URL": undefined,
              "shownInDetailsView": true,
              "shownInInsertView": true,
              "shownInUpdateView": true,
              "visible": true,
              "dataType": Immutable.Record {
                "conceptURI": undefined,
                "display": "Text",
                "name": "string",
                "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                "alternateRangeURI": "xsd:string",
                "shortDisplay": "String",
                "lookupSchema": undefined,
                "lookupQuery": undefined,
              },
              "lookupQueryValue": undefined,
              "lookupType": Immutable.Record {
                "conceptURI": undefined,
                "display": "Lookup",
                "name": "lookup",
                "rangeURI": "xsd:string",
                "alternateRangeURI": undefined,
                "shortDisplay": undefined,
                "lookupSchema": undefined,
                "lookupQuery": undefined,
              },
              "original": Object {
                "conceptURI": undefined,
                "dataType": Immutable.Record {
                  "conceptURI": undefined,
                  "display": "Text",
                  "name": "string",
                  "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                  "alternateRangeURI": "xsd:string",
                  "shortDisplay": "String",
                  "lookupSchema": undefined,
                  "lookupQuery": undefined,
                },
                "rangeURI": undefined,
              },
              "updatedField": false,
              "isPrimaryKey": false,
              "lockType": "NotLocked",
              "wrappedColumnName": undefined,
            },
            Immutable.Record {
              "conceptURI": undefined,
              "conditionalFormats": Immutable.List [],
              "defaultScale": undefined,
              "defaultValueType": undefined,
              "defaultValue": undefined,
              "defaultDisplayValue": undefined,
              "description": undefined,
              "dimension": undefined,
              "excludeFromShifting": false,
              "format": undefined,
              "hidden": false,
              "importAliases": undefined,
              "label": undefined,
              "lookupContainer": undefined,
              "lookupQuery": undefined,
              "lookupSchema": undefined,
              "lookupValidator": undefined,
              "measure": undefined,
              "mvEnabled": false,
              "name": "field2",
              "PHI": undefined,
              "primaryKey": undefined,
              "propertyId": undefined,
              "propertyURI": undefined,
              "propertyValidators": Immutable.List [],
              "rangeValidators": Immutable.List [],
              "rangeURI": "xsd:int",
              "regexValidators": Immutable.List [],
              "recommendedVariable": false,
              "required": false,
              "scale": undefined,
              "URL": undefined,
              "shownInDetailsView": true,
              "shownInInsertView": true,
              "shownInUpdateView": true,
              "visible": true,
              "dataType": Immutable.Record {
                "conceptURI": undefined,
                "display": "Integer",
                "name": "int",
                "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                "alternateRangeURI": "xsd:int",
                "shortDisplay": undefined,
                "lookupSchema": undefined,
                "lookupQuery": undefined,
              },
              "lookupQueryValue": undefined,
              "lookupType": Immutable.Record {
                "conceptURI": undefined,
                "display": "Lookup",
                "name": "lookup",
                "rangeURI": "xsd:int",
                "alternateRangeURI": undefined,
                "shortDisplay": undefined,
                "lookupSchema": undefined,
                "lookupQuery": undefined,
              },
              "original": Object {
                "conceptURI": undefined,
                "dataType": Immutable.Record {
                  "conceptURI": undefined,
                  "display": "Integer",
                  "name": "int",
                  "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                  "alternateRangeURI": "xsd:int",
                  "shortDisplay": undefined,
                  "lookupSchema": undefined,
                  "lookupQuery": undefined,
                },
                "rangeURI": undefined,
              },
              "updatedField": false,
              "isPrimaryKey": false,
              "lockType": "NotLocked",
              "wrappedColumnName": undefined,
            },
            Immutable.Record {
              "conceptURI": undefined,
              "conditionalFormats": Immutable.List [],
              "defaultScale": undefined,
              "defaultValueType": undefined,
              "defaultValue": undefined,
              "defaultDisplayValue": undefined,
              "description": undefined,
              "dimension": undefined,
              "excludeFromShifting": false,
              "format": undefined,
              "hidden": false,
              "importAliases": undefined,
              "label": undefined,
              "lookupContainer": undefined,
              "lookupQuery": undefined,
              "lookupSchema": undefined,
              "lookupValidator": undefined,
              "measure": undefined,
              "mvEnabled": false,
              "name": "field3",
              "PHI": undefined,
              "primaryKey": undefined,
              "propertyId": undefined,
              "propertyURI": undefined,
              "propertyValidators": Immutable.List [],
              "rangeValidators": Immutable.List [],
              "rangeURI": "xsd:dateTime",
              "regexValidators": Immutable.List [],
              "recommendedVariable": false,
              "required": false,
              "scale": undefined,
              "URL": undefined,
              "shownInDetailsView": true,
              "shownInInsertView": true,
              "shownInUpdateView": true,
              "visible": true,
              "dataType": Immutable.Record {
                "conceptURI": undefined,
                "display": "Date Time",
                "name": "dateTime",
                "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                "alternateRangeURI": "xsd:dateTime",
                "shortDisplay": undefined,
                "lookupSchema": undefined,
                "lookupQuery": undefined,
              },
              "lookupQueryValue": undefined,
              "lookupType": Immutable.Record {
                "conceptURI": undefined,
                "display": "Lookup",
                "name": "lookup",
                "rangeURI": "xsd:dateTime",
                "alternateRangeURI": undefined,
                "shortDisplay": undefined,
                "lookupSchema": undefined,
                "lookupQuery": undefined,
              },
              "original": Object {
                "conceptURI": undefined,
                "dataType": Immutable.Record {
                  "conceptURI": undefined,
                  "display": "Date Time",
                  "name": "dateTime",
                  "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                  "alternateRangeURI": "xsd:dateTime",
                  "shortDisplay": undefined,
                  "lookupSchema": undefined,
                  "lookupQuery": undefined,
                },
                "rangeURI": undefined,
              },
              "updatedField": false,
              "isPrimaryKey": false,
              "lockType": "NotLocked",
              "wrappedColumnName": undefined,
            },
          ],
          "indices": Immutable.List [],
          "domainException": undefined,
          "mandatoryFieldNames": Immutable.List [],
          "reservedFieldNames": Immutable.List [],
          "newDesignFields": undefined,
          "instructions": undefined,
        },
      ],
      "editableResults": true,
      "editableRuns": true,
      "exception": undefined,
      "metadataInputFormatHelp": undefined,
      "moduleTransformScripts": undefined,
      "name": "Test Assay Protocol",
      "plateMetadata": undefined,
      "protocolId": 1,
      "protocolParameters": undefined,
      "protocolTransformScripts": undefined,
      "providerName": undefined,
      "saveScriptFiles": false,
      "selectedDetectionMethod": undefined,
      "selectedMetadataInputFormat": undefined,
      "selectedPlateTemplate": undefined,
      "qcEnabled": undefined,
    }
  }
  onCancel={[Function]}
  onComplete={[Function]}
>
  <ComponentWithDomainPropertiesPanelCollapse
    controlledCollapse={true}
    initCollapsed={false}
    model={
      Immutable.Record {
        "allowBackgroundUpload": true,
        "allowEditableResults": true,
        "allowQCStates": false,
        "allowSpacesInPath": false,
        "allowTransformationScript": false,
        "allowPlateMetadata": false,
        "autoCopyTargetContainer": undefined,
        "autoCopyTargetContainerId": undefined,
        "availableDetectionMethods": undefined,
        "availableMetadataInputFormats": undefined,
        "availablePlateTemplates": undefined,
        "backgroundUpload": true,
        "description": "My assay protocol for you all to use.",
        "domains": Immutable.List [
          Immutable.Record {
            "name": "Batch Fields",
            "container": undefined,
            "description": undefined,
            "domainURI": undefined,
            "domainId": null,
            "allowFileLinkProperties": true,
            "allowAttachmentProperties": true,
            "allowFlagProperties": true,
            "showDefaultValueSettings": false,
            "defaultDefaultValueType": undefined,
            "defaultValueOptions": Immutable.List [],
            "fields": Immutable.List [],
            "indices": Immutable.List [],
            "domainException": undefined,
            "mandatoryFieldNames": Immutable.List [],
            "reservedFieldNames": Immutable.List [],
            "newDesignFields": undefined,
            "instructions": undefined,
          },
          Immutable.Record {
            "name": "Sample Fields",
            "container": undefined,
            "description": undefined,
            "domainURI": undefined,
            "domainId": null,
            "allowFileLinkProperties": true,
            "allowAttachmentProperties": true,
            "allowFlagProperties": true,
            "showDefaultValueSettings": false,
            "defaultDefaultValueType": undefined,
            "defaultValueOptions": Immutable.List [],
            "fields": Immutable.List [
              Immutable.Record {
                "conceptURI": undefined,
                "conditionalFormats": Immutable.List [],
                "defaultScale": undefined,
                "defaultValueType": undefined,
                "defaultValue": undefined,
                "defaultDisplayValue": undefined,
                "description": undefined,
                "dimension": undefined,
                "excludeFromShifting": false,
                "format": undefined,
                "hidden": false,
                "importAliases": undefined,
                "label": undefined,
                "lookupContainer": undefined,
                "lookupQuery": undefined,
                "lookupSchema": undefined,
                "lookupValidator": undefined,
                "measure": undefined,
                "mvEnabled": false,
                "name": "field1",
                "PHI": undefined,
                "primaryKey": undefined,
                "propertyId": undefined,
                "propertyURI": undefined,
                "propertyValidators": Immutable.List [],
                "rangeValidators": Immutable.List [],
                "rangeURI": "xsd:string",
                "regexValidators": Immutable.List [],
                "recommendedVariable": false,
                "required": false,
                "scale": undefined,
                "URL": undefined,
                "shownInDetailsView": true,
                "shownInInsertView": true,
                "shownInUpdateView": true,
                "visible": true,
                "dataType": Immutable.Record {
                  "conceptURI": undefined,
                  "display": "Text",
                  "name": "string",
                  "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                  "alternateRangeURI": "xsd:string",
                  "shortDisplay": "String",
                  "lookupSchema": undefined,
                  "lookupQuery": undefined,
                },
                "lookupQueryValue": undefined,
                "lookupType": Immutable.Record {
                  "conceptURI": undefined,
                  "display": "Lookup",
                  "name": "lookup",
                  "rangeURI": "xsd:string",
                  "alternateRangeURI": undefined,
                  "shortDisplay": undefined,
                  "lookupSchema": undefined,
                  "lookupQuery": undefined,
                },
                "original": Object {
                  "conceptURI": undefined,
                  "dataType": Immutable.Record {
                    "conceptURI": undefined,
                    "display": "Text",
                    "name": "string",
                    "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                    "alternateRangeURI": "xsd:string",
                    "shortDisplay": "String",
                    "lookupSchema": undefined,
                    "lookupQuery": undefined,
                  },
                  "rangeURI": undefined,
                },
                "updatedField": false,
                "isPrimaryKey": false,
                "lockType": "NotLocked",
                "wrappedColumnName": undefined,
              },
              Immutable.Record {
                "conceptURI": undefined,
                "conditionalFormats": Immutable.List [],
                "defaultScale": undefined,
                "defaultValueType": undefined,
                "defaultValue": undefined,
                "defaultDisplayValue": undefined,
                "description": undefined,
                "dimension": undefined,
                "excludeFromShifting": false,
                "format": undefined,
                "hidden": false,
                "importAliases": undefined,
                "label": undefined,
                "lookupContainer": undefined,
                "lookupQuery": undefined,
                "lookupSchema": undefined,
                "lookupValidator": undefined,
                "measure": undefined,
                "mvEnabled": false,
                "name": "field2",
                "PHI": undefined,
                "primaryKey": undefined,
                "propertyId": undefined,
                "propertyURI": undefined,
                "propertyValidators": Immutable.List [],
                "rangeValidators": Immutable.List [],
                "rangeURI": "xsd:int",
                "regexValidators": Immutable.List [],
                "recommendedVariable": false,
                "required": false,
                "scale": undefined,
                "URL": undefined,
                "shownInDetailsView": true,
                "shownInInsertView": true,
                "shownInUpdateView": true,
                "visible": true,
                "dataType": Immutable.Record {
                  "conceptURI": undefined,
                  "display": "Integer",
                  "name": "int",
                  "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                  "alternateRangeURI": "xsd:int",
                  "shortDisplay": undefined,
                  "lookupSchema": undefined,
                  "lookupQuery": undefined,
                },
                "lookupQueryValue": undefined,
                "lookupType": Immutable.Record {
                  "conceptURI": undefined,
                  "display": "Lookup",
                  "name": "lookup",
                  "rangeURI": "xsd:int",
                  "alternateRangeURI": undefined,
                  "shortDisplay": undefined,
                  "lookupSchema": undefined,
                  "lookupQuery": undefined,
                },
                "original": Object {
                  "conceptURI": undefined,
                  "dataType": Immutable.Record {
                    "conceptURI": undefined,
                    "display": "Integer",
                    "name": "int",
                    "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                    "alternateRangeURI": "xsd:int",
                    "shortDisplay": undefined,
                    "lookupSchema": undefined,
                    "lookupQuery": undefined,
                  },
                  "rangeURI": undefined,
                },
                "updatedField": false,
                "isPrimaryKey": false,
                "lockType": "NotLocked",
                "wrappedColumnName": undefined,
              },
              Immutable.Record {
                "conceptURI": undefined,
                "conditionalFormats": Immutable.List [],
                "defaultScale": undefined,
                "defaultValueType": undefined,
                "defaultValue": undefined,
                "defaultDisplayValue": undefined,
                "description": undefined,
                "dimension": undefined,
                "excludeFromShifting": false,
                "format": undefined,
                "hidden": false,
                "importAliases": undefined,
                "label": undefined,
                "lookupContainer": undefined,
                "lookupQuery": undefined,
                "lookupSchema": undefined,
                "lookupValidator": undefined,
                "measure": undefined,
                "mvEnabled": false,
                "name": "field3",
                "PHI": undefined,
                "primaryKey": undefined,
                "propertyId": undefined,
                "propertyURI": undefined,
                "propertyValidators": Immutable.List [],
                "rangeValidators": Immutable.List [],
                "rangeURI": "xsd:dateTime",
                "regexValidators": Immutable.List [],
                "recommendedVariable": false,
                "required": false,
                "scale": undefined,
                "URL": undefined,
                "shownInDetailsView": true,
                "shownInInsertView": true,
                "shownInUpdateView": true,
                "visible": true,
                "dataType": Immutable.Record {
                  "conceptURI": undefined,
                  "display": "Date Time",
                  "name": "dateTime",
                  "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                  "alternateRangeURI": "xsd:dateTime",
                  "shortDisplay": undefined,
                  "lookupSchema": undefined,
                  "lookupQuery": undefined,
                },
                "lookupQueryValue": undefined,
                "lookupType": Immutable.Record {
                  "conceptURI": undefined,
                  "display": "Lookup",
                  "name": "lookup",
                  "rangeURI": "xsd:dateTime",
                  "alternateRangeURI": undefined,
                  "shortDisplay": undefined,
                  "lookupSchema": undefined,
                  "lookupQuery": undefined,
                },
                "original": Object {
                  "conceptURI": undefined,
                  "dataType": Immutable.Record {
                    "conceptURI": undefined,
                    "display": "Date Time",
                    "name": "dateTime",
                    "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                    "alternateRangeURI": "xsd:dateTime",
                    "shortDisplay": undefined,
                    "lookupSchema": undefined,
                    "lookupQuery": undefined,
                  },
                  "rangeURI": undefined,
                },
                "updatedField": false,
                "isPrimaryKey": false,
                "lockType": "NotLocked",
                "wrappedColumnName": undefined,
              },
            ],
            "indices": Immutable.List [],
            "domainException": undefined,
            "mandatoryFieldNames": Immutable.List [],
            "reservedFieldNames": Immutable.List [],
            "newDesignFields": undefined,
            "instructions": undefined,
          },
        ],
        "editableResults": true,
        "editableRuns": true,
        "exception": undefined,
        "metadataInputFormatHelp": undefined,
        "moduleTransformScripts": undefined,
        "name": "Test Assay Protocol",
        "plateMetadata": undefined,
        "protocolId": 1,
        "protocolParameters": undefined,
        "protocolTransformScripts": undefined,
        "providerName": undefined,
        "saveScriptFiles": false,
        "selectedDetectionMethod": undefined,
        "selectedMetadataInputFormat": undefined,
        "selectedPlateTemplate": undefined,
        "qcEnabled": undefined,
      }
    }
    onChange={[Function]}
    onToggle={[Function]}
    panelStatus="COMPLETE"
    validate={false}
  >
    <AssayPropertiesPanelImpl
      appPropertiesOnly={false}
      asPanel={true}
      collapsed={false}
      controlledCollapse={true}
      helpTopic="defineAssaySchema"
      model={
        Immutable.Record {
          "allowBackgroundUpload": true,
          "allowEditableResults": true,
          "allowQCStates": false,
          "allowSpacesInPath": false,
          "allowTransformationScript": false,
          "allowPlateMetadata": false,
          "autoCopyTargetContainer": undefined,
          "autoCopyTargetContainerId": undefined,
          "availableDetectionMethods": undefined,
          "availableMetadataInputFormats": undefined,
          "availablePlateTemplates": undefined,
          "backgroundUpload": true,
          "description": "My assay protocol for you all to use.",
          "domains": Immutable.List [
            Immutable.Record {
              "name": "Batch Fields",
              "container": undefined,
              "description": undefined,
              "domainURI": undefined,
              "domainId": null,
              "allowFileLinkProperties": true,
              "allowAttachmentProperties": true,
              "allowFlagProperties": true,
              "showDefaultValueSettings": false,
              "defaultDefaultValueType": undefined,
              "defaultValueOptions": Immutable.List [],
              "fields": Immutable.List [],
              "indices": Immutable.List [],
              "domainException": undefined,
              "mandatoryFieldNames": Immutable.List [],
              "reservedFieldNames": Immutable.List [],
              "newDesignFields": undefined,
              "instructions": undefined,
            },
            Immutable.Record {
              "name": "Sample Fields",
              "container": undefined,
              "description": undefined,
              "domainURI": undefined,
              "domainId": null,
              "allowFileLinkProperties": true,
              "allowAttachmentProperties": true,
              "allowFlagProperties": true,
              "showDefaultValueSettings": false,
              "defaultDefaultValueType": undefined,
              "defaultValueOptions": Immutable.List [],
              "fields": Immutable.List [
                Immutable.Record {
                  "conceptURI": undefined,
                  "conditionalFormats": Immutable.List [],
                  "defaultScale": undefined,
                  "defaultValueType": undefined,
                  "defaultValue": undefined,
                  "defaultDisplayValue": undefined,
                  "description": undefined,
                  "dimension": undefined,
                  "excludeFromShifting": false,
                  "format": undefined,
                  "hidden": false,
                  "importAliases": undefined,
                  "label": undefined,
                  "lookupContainer": undefined,
                  "lookupQuery": undefined,
                  "lookupSchema": undefined,
                  "lookupValidator": undefined,
                  "measure": undefined,
                  "mvEnabled": false,
                  "name": "field1",
                  "PHI": undefined,
                  "primaryKey": undefined,
                  "propertyId": undefined,
                  "propertyURI": undefined,
                  "propertyValidators": Immutable.List [],
                  "rangeValidators": Immutable.List [],
                  "rangeURI": "xsd:string",
                  "regexValidators": Immutable.List [],
                  "recommendedVariable": false,
                  "required": false,
                  "scale": undefined,
                  "URL": undefined,
                  "shownInDetailsView": true,
                  "shownInInsertView": true,
                  "shownInUpdateView": true,
                  "visible": true,
                  "dataType": Immutable.Record {
                    "conceptURI": undefined,
                    "display": "Text",
                    "name": "string",
                    "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                    "alternateRangeURI": "xsd:string",
                    "shortDisplay": "String",
                    "lookupSchema": undefined,
                    "lookupQuery": undefined,
                  },
                  "lookupQueryValue": undefined,
                  "lookupType": Immutable.Record {
                    "conceptURI": undefined,
                    "display": "Lookup",
                    "name": "lookup",
                    "rangeURI": "xsd:string",
                    "alternateRangeURI": undefined,
                    "shortDisplay": undefined,
                    "lookupSchema": undefined,
                    "lookupQuery": undefined,
                  },
                  "original": Object {
                    "conceptURI": undefined,
                    "dataType": Immutable.Record {
                      "conceptURI": undefined,
                      "display": "Text",
                      "name": "string",
                      "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                      "alternateRangeURI": "xsd:string",
                      "shortDisplay": "String",
                      "lookupSchema": undefined,
                      "lookupQuery": undefined,
                    },
                    "rangeURI": undefined,
                  },
                  "updatedField": false,
                  "isPrimaryKey": false,
                  "lockType": "NotLocked",
                  "wrappedColumnName": undefined,
                },
                Immutable.Record {
                  "conceptURI": undefined,
                  "conditionalFormats": Immutable.List [],
                  "defaultScale": undefined,
                  "defaultValueType": undefined,
                  "defaultValue": undefined,
                  "defaultDisplayValue": undefined,
                  "description": undefined,
                  "dimension": undefined,
                  "excludeFromShifting": false,
                  "format": undefined,
                  "hidden": false,
                  "importAliases": undefined,
                  "label": undefined,
                  "lookupContainer": undefined,
                  "lookupQuery": undefined,
                  "lookupSchema": undefined,
                  "lookupValidator": undefined,
                  "measure": undefined,
                  "mvEnabled": false,
                  "name": "field2",
                  "PHI": undefined,
                  "primaryKey": undefined,
                  "propertyId": undefined,
                  "propertyURI": undefined,
                  "propertyValidators": Immutable.List [],
                  "rangeValidators": Immutable.List [],
                  "rangeURI": "xsd:int",
                  "regexValidators": Immutable.List [],
                  "recommendedVariable": false,
                  "required": false,
                  "scale": undefined,
                  "URL": undefined,
                  "shownInDetailsView": true,
                  "shownInInsertView": true,
                  "shownInUpdateView": true,
                  "visible": true,
                  "dataType": Immutable.Record {
                    "conceptURI": undefined,
                    "display": "Integer",
                    "name": "int",
                    "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                    "alternateRangeURI": "xsd:int",
                    "shortDisplay": undefined,
                    "lookupSchema": undefined,
                    "lookupQuery": undefined,
                  },
                  "lookupQueryValue": undefined,
                  "lookupType": Immutable.Record {
                    "conceptURI": undefined,
                    "display": "Lookup",
                    "name": "lookup",
                    "rangeURI": "xsd:int",
                    "alternateRangeURI": undefined,
                    "shortDisplay": undefined,
                    "lookupSchema": undefined,
                    "lookupQuery": undefined,
                  },
                  "original": Object {
                    "conceptURI": undefined,
                    "dataType": Immutable.Record {
                      "conceptURI": undefined,
                      "display": "Integer",
                      "name": "int",
                      "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                      "alternateRangeURI": "xsd:int",
                      "shortDisplay": undefined,
                      "lookupSchema": undefined,
                      "lookupQuery": undefined,
                    },
                    "rangeURI": undefined,
                  },
                  "updatedField": false,
                  "isPrimaryKey": false,
                  "lockType": "NotLocked",
                  "wrappedColumnName": undefined,
                },
                Immutable.Record {
                  "conceptURI": undefined,
                  "conditionalFormats": Immutable.List [],
                  "defaultScale": undefined,
                  "defaultValueType": undefined,
                  "defaultValue": undefined,
                  "defaultDisplayValue": undefined,
                  "description": undefined,
                  "dimension": undefined,
                  "excludeFromShifting": false,
                  "format": undefined,
                  "hidden": false,
                  "importAliases": undefined,
                  "label": undefined,
                  "lookupContainer": undefined,
                  "lookupQuery": undefined,
                  "lookupSchema": undefined,
                  "lookupValidator": undefined,
                  "measure": undefined,
                  "mvEnabled": false,
                  "name": "field3",
                  "PHI": undefined,
                  "primaryKey": undefined,
                  "propertyId": undefined,
                  "propertyURI": undefined,
                  "propertyValidators": Immutable.List [],
                  "rangeValidators": Immutable.List [],
                  "rangeURI": "xsd:dateTime",
                  "regexValidators": Immutable.List [],
                  "recommendedVariable": false,
                  "required": false,
                  "scale": undefined,
                  "URL": undefined,
                  "shownInDetailsView": true,
                  "shownInInsertView": true,
                  "shownInUpdateView": true,
                  "visible": true,
                  "dataType": Immutable.Record {
                    "conceptURI": undefined,
                    "display": "Date Time",
                    "name": "dateTime",
                    "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                    "alternateRangeURI": "xsd:dateTime",
                    "shortDisplay": undefined,
                    "lookupSchema": undefined,
                    "lookupQuery": undefined,
                  },
                  "lookupQueryValue": undefined,
                  "lookupType": Immutable.Record {
                    "conceptURI": undefined,
                    "display": "Lookup",
                    "name": "lookup",
                    "rangeURI": "xsd:dateTime",
                    "alternateRangeURI": undefined,
                    "shortDisplay": undefined,
                    "lookupSchema": undefined,
                    "lookupQuery": undefined,
                  },
                  "original": Object {
                    "conceptURI": undefined,
                    "dataType": Immutable.Record {
                      "conceptURI": undefined,
                      "display": "Date Time",
                      "name": "dateTime",
                      "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                      "alternateRangeURI": "xsd:dateTime",
                      "shortDisplay": undefined,
                      "lookupSchema": undefined,
                      "lookupQuery": undefined,
                    },
                    "rangeURI": undefined,
                  },
                  "updatedField": false,
                  "isPrimaryKey": false,
                  "lockType": "NotLocked",
                  "wrappedColumnName": undefined,
                },
              ],
              "indices": Immutable.List [],
              "domainException": undefined,
              "mandatoryFieldNames": Immutable.List [],
              "reservedFieldNames": Immutable.List [],
              "newDesignFields": undefined,
              "instructions": undefined,
            },
          ],
          "editableResults": true,
          "editableRuns": true,
          "exception": undefined,
          "metadataInputFormatHelp": undefined,
          "moduleTransformScripts": undefined,
          "name": "Test Assay Protocol",
          "plateMetadata": undefined,
          "protocolId": 1,
          "protocolParameters": undefined,
          "protocolTransformScripts": undefined,
          "providerName": undefined,
          "saveScriptFiles": false,
          "selectedDetectionMethod": undefined,
          "selectedMetadataInputFormat": undefined,
          "selectedPlateTemplate": undefined,
          "qcEnabled": undefined,
        }
      }
      onChange={[Function]}
      panelStatus="COMPLETE"
      togglePanel={[Function]}
      validate={false}
    >
      <Uncontrolled(Panel)
        className="domain-form-panel domain-panel-no-theme"
        expanded={true}
        onToggle={[Function]}
      >
        <Panel
          bsClass="panel"
          bsStyle="default"
          className="domain-form-panel domain-panel-no-theme"
          expanded={true}
          onToggle={[Function]}
        >
          <div
            className="domain-form-panel domain-panel-no-theme panel panel-default"
          >
            <CollapsiblePanelHeader
              collapsed={false}
              controlledCollapse={true}
              iconHelpMsg="Contains errors or is missing required values."
              id="assay-properties-hdr"
              isValid={true}
              panelStatus="COMPLETE"
              title="Assay Properties"
              titlePrefix="Test Assay Protocol"
              togglePanel={[Function]}
            >
              <PanelHeading
                bsClass="panel"
                className="domain-panel-header domain-heading-collapsible domain-panel-header-expanded domain-panel-header-no-theme"
                componentClass="div"
                id="assay-properties-hdr"
                onClick={[Function]}
              >
                <div
                  className="domain-panel-header domain-heading-collapsible domain-panel-header-expanded domain-panel-header-no-theme panel-heading"
                  id="assay-properties-hdr"
                  onClick={[Function]}
                >
                  <span
                    className="domain-panel-status-icon"
                  >
                    <FontAwesomeIcon
                      border={false}
                      className=""
                      fixedWidth={false}
                      flip={null}
                      icon={
                        Object {
                          "icon": Array [
                            512,
                            512,
                            Array [],
                            "f058",
                            "M504 256c0 136.967-111.033 248-248 248S8 392.967 8 256 119.033 8 256 8s248 111.033 248 248zM227.314 387.314l184-184c6.248-6.248 6.248-16.379 0-22.627l-22.627-22.627c-6.248-6.249-16.379-6.249-22.628 0L216 308.118l-70.059-70.059c-6.248-6.248-16.379-6.248-22.628 0l-22.627 22.627c-6.248 6.248-6.248 16.379 0 22.627l104 104c6.249 6.249 16.379 6.249 22.628.001z",
                          ],
                          "iconName": "check-circle",
                          "prefix": "fas",
                        }
                      }
                      inverse={false}
                      listItem={false}
                      mask={null}
                      pull={null}
                      pulse={false}
                      rotation={null}
                      size={null}
                      spin={false}
                      symbol={false}
                      title=""
                      transform={null}
                    >
                      <svg
                        aria-hidden="true"
                        className="svg-inline--fa fa-check-circle fa-w-16 "
                        data-icon="check-circle"
                        data-prefix="fas"
                        focusable="false"
                        role="img"
                        style={Object {}}
                        viewBox="0 0 512 512"
                        xmlns="http://www.w3.org/2000/svg"
                      >
                        <path
                          d="M504 256c0 136.967-111.033 248-248 248S8 392.967 8 256 119.033 8 256 8s248 111.033 248 248zM227.314 387.314l184-184c6.248-6.248 6.248-16.379 0-22.627l-22.627-22.627c-6.248-6.249-16.379-6.249-22.628 0L216 308.118l-70.059-70.059c-6.248-6.248-16.379-6.248-22.628 0l-22.627 22.627c-6.248 6.248-6.248 16.379 0 22.627l104 104c6.249 6.249 16.379 6.249 22.628.001z"
                          fill="currentColor"
                          style={Object {}}
                        />
                      </svg>
                    </FontAwesomeIcon>
                  </span>
                  <span
                    className="domain-panel-title"
                  >
                    Test Assay Protocol - Assay Properties
                  </span>
                  <span
                    className="pull-right"
                  >
                    <FontAwesomeIcon
                      border={false}
                      className="domain-form-collapse-btn"
                      fixedWidth={false}
                      flip={null}
                      icon={
                        Object {
                          "icon": Array [
                            448,
                            512,
                            Array [],
                            "f146",
                            "M400 32H48C21.5 32 0 53.5 0 80v352c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V80c0-26.5-21.5-48-48-48zM92 296c-6.6 0-12-5.4-12-12v-56c0-6.6 5.4-12 12-12h264c6.6 0 12 5.4 12 12v56c0 6.6-5.4 12-12 12H92z",
                          ],
                          "iconName": "minus-square",
                          "prefix": "fas",
                        }
                      }
                      inverse={false}
                      listItem={false}
                      mask={null}
                      pull={null}
                      pulse={false}
                      rotation={null}
                      size="lg"
                      spin={false}
                      symbol={false}
                      title=""
                      transform={null}
                    >
                      <svg
                        aria-hidden="true"
                        className="svg-inline--fa fa-minus-square fa-w-14 fa-lg domain-form-collapse-btn"
                        data-icon="minus-square"
                        data-prefix="fas"
                        focusable="false"
                        role="img"
                        style={Object {}}
                        viewBox="0 0 448 512"
                        xmlns="http://www.w3.org/2000/svg"
                      >
                        <path
                          d="M400 32H48C21.5 32 0 53.5 0 80v352c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V80c0-26.5-21.5-48-48-48zM92 296c-6.6 0-12-5.4-12-12v-56c0-6.6 5.4-12 12-12h264c6.6 0 12 5.4 12 12v56c0 6.6-5.4 12-12 12H92z"
                          fill="currentColor"
                          style={Object {}}
                        />
                      </svg>
                    </FontAwesomeIcon>
                  </span>
                </div>
              </PanelHeading>
            </CollapsiblePanelHeader>
            <PanelBody
              bsClass="panel"
              collapsible={true}
            >
              <PanelCollapse
                bsClass="panel"
              >
                <Collapse
                  appear={false}
                  dimension="height"
                  getDimensionValue={[Function]}
                  in={true}
                  mountOnEnter={false}
                  timeout={300}
                  unmountOnExit={false}
                >
                  <Transition
                    appear={false}
                    aria-expanded={null}
                    enter={true}
                    exit={true}
                    in={true}
                    mountOnEnter={false}
                    onEnter={[Function]}
                    onEntered={[Function]}
                    onEntering={[Function]}
                    onExit={[Function]}
                    onExited={[Function]}
                    onExiting={[Function]}
                    timeout={300}
                    unmountOnExit={false}
                  >
                    <div
                      aria-expanded={null}
                      className="panel-collapse collapse in"
                    >
                      <div
                        className="panel-body"
                      >
                        <HelpTopicURL
                          helpTopic="defineAssaySchema"
                          nounPlural="assays"
                        >
                          <Row
                            bsClass="row"
                            componentClass="div"
                          >
                            <div
                              className="row"
                            >
                              <Col
                                bsClass="col"
                                componentClass="div"
                                xs={12}
                              >
                                <div
                                  className="col-xs-12"
                                >
                                  <a
                                    className="domain-field-float-right"
                                    href="https://www.labkey.org/Documentation/wiki-page.view?name=defineAssaySchema"
                                    target="_blank"
                                  >
                                    Learn more about designing assays
                                  </a>
                                </div>
                              </Col>
                            </div>
                          </Row>
                        </HelpTopicURL>
                        <Form
                          bsClass="form"
                          componentClass="form"
                          horizontal={false}
                          inline={false}
                        >
                          <form
                            className=""
                          >
                            <Col
                              bsClass="col"
                              componentClass="div"
                              lg={6}
                              xs={12}
                            >
                              <div
                                className="col-lg-6 col-xs-12"
                              >
                                <div
                                  className="domain-field-padding-bottom"
                                >
                                  <SectionHeading
                                    helpTopic="defineAssaySchema"
                                    title="Basic Properties"
                                  >
                                    <Row
                                      bsClass="row"
                                      componentClass="div"
                                    >
                                      <div
                                        className="row"
                                      >
                                        <Col
                                          bsClass="col"
                                          componentClass="div"
                                          xs={9}
                                        >
                                          <div
                                            className="col-xs-9"
                                          >
                                            <div
                                              className="domain-field-section-heading"
                                            >
                                              Basic Properties
                                            </div>
                                          </div>
                                        </Col>
                                      </div>
                                    </Row>
                                  </SectionHeading>
                                  <NameInput
                                    appPropertiesOnly={false}
                                    model={
                                      Immutable.Record {
                                        "allowBackgroundUpload": true,
                                        "allowEditableResults": true,
                                        "allowQCStates": false,
                                        "allowSpacesInPath": false,
                                        "allowTransformationScript": false,
                                        "allowPlateMetadata": false,
                                        "autoCopyTargetContainer": undefined,
                                        "autoCopyTargetContainerId": undefined,
                                        "availableDetectionMethods": undefined,
                                        "availableMetadataInputFormats": undefined,
                                        "availablePlateTemplates": undefined,
                                        "backgroundUpload": true,
                                        "description": "My assay protocol for you all to use.",
                                        "domains": Immutable.List [
                                          Immutable.Record {
                                            "name": "Batch Fields",
                                            "container": undefined,
                                            "description": undefined,
                                            "domainURI": undefined,
                                            "domainId": null,
                                            "allowFileLinkProperties": true,
                                            "allowAttachmentProperties": true,
                                            "allowFlagProperties": true,
                                            "showDefaultValueSettings": false,
                                            "defaultDefaultValueType": undefined,
                                            "defaultValueOptions": Immutable.List [],
                                            "fields": Immutable.List [],
                                            "indices": Immutable.List [],
                                            "domainException": undefined,
                                            "mandatoryFieldNames": Immutable.List [],
                                            "reservedFieldNames": Immutable.List [],
                                            "newDesignFields": undefined,
                                            "instructions": undefined,
                                          },
                                          Immutable.Record {
                                            "name": "Sample Fields",
                                            "container": undefined,
                                            "description": undefined,
                                            "domainURI": undefined,
                                            "domainId": null,
                                            "allowFileLinkProperties": true,
                                            "allowAttachmentProperties": true,
                                            "allowFlagProperties": true,
                                            "showDefaultValueSettings": false,
                                            "defaultDefaultValueType": undefined,
                                            "defaultValueOptions": Immutable.List [],
                                            "fields": Immutable.List [
                                              Immutable.Record {
                                                "conceptURI": undefined,
                                                "conditionalFormats": Immutable.List [],
                                                "defaultScale": undefined,
                                                "defaultValueType": undefined,
                                                "defaultValue": undefined,
                                                "defaultDisplayValue": undefined,
                                                "description": undefined,
                                                "dimension": undefined,
                                                "excludeFromShifting": false,
                                                "format": undefined,
                                                "hidden": false,
                                                "importAliases": undefined,
                                                "label": undefined,
                                                "lookupContainer": undefined,
                                                "lookupQuery": undefined,
                                                "lookupSchema": undefined,
                                                "lookupValidator": undefined,
                                                "measure": undefined,
                                                "mvEnabled": false,
                                                "name": "field1",
                                                "PHI": undefined,
                                                "primaryKey": undefined,
                                                "propertyId": undefined,
                                                "propertyURI": undefined,
                                                "propertyValidators": Immutable.List [],
                                                "rangeValidators": Immutable.List [],
                                                "rangeURI": "xsd:string",
                                                "regexValidators": Immutable.List [],
                                                "recommendedVariable": false,
                                                "required": false,
                                                "scale": undefined,
                                                "URL": undefined,
                                                "shownInDetailsView": true,
                                                "shownInInsertView": true,
                                                "shownInUpdateView": true,
                                                "visible": true,
                                                "dataType": Immutable.Record {
                                                  "conceptURI": undefined,
                                                  "display": "Text",
                                                  "name": "string",
                                                  "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                  "alternateRangeURI": "xsd:string",
                                                  "shortDisplay": "String",
                                                  "lookupSchema": undefined,
                                                  "lookupQuery": undefined,
                                                },
                                                "lookupQueryValue": undefined,
                                                "lookupType": Immutable.Record {
                                                  "conceptURI": undefined,
                                                  "display": "Lookup",
                                                  "name": "lookup",
                                                  "rangeURI": "xsd:string",
                                                  "alternateRangeURI": undefined,
                                                  "shortDisplay": undefined,
                                                  "lookupSchema": undefined,
                                                  "lookupQuery": undefined,
                                                },
                                                "original": Object {
                                                  "conceptURI": undefined,
                                                  "dataType": Immutable.Record {
                                                    "conceptURI": undefined,
                                                    "display": "Text",
                                                    "name": "string",
                                                    "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                    "alternateRangeURI": "xsd:string",
                                                    "shortDisplay": "String",
                                                    "lookupSchema": undefined,
                                                    "lookupQuery": undefined,
                                                  },
                                                  "rangeURI": undefined,
                                                },
                                                "updatedField": false,
                                                "isPrimaryKey": false,
                                                "lockType": "NotLocked",
                                                "wrappedColumnName": undefined,
                                              },
                                              Immutable.Record {
                                                "conceptURI": undefined,
                                                "conditionalFormats": Immutable.List [],
                                                "defaultScale": undefined,
                                                "defaultValueType": undefined,
                                                "defaultValue": undefined,
                                                "defaultDisplayValue": undefined,
                                                "description": undefined,
                                                "dimension": undefined,
                                                "excludeFromShifting": false,
                                                "format": undefined,
                                                "hidden": false,
                                                "importAliases": undefined,
                                                "label": undefined,
                                                "lookupContainer": undefined,
                                                "lookupQuery": undefined,
                                                "lookupSchema": undefined,
                                                "lookupValidator": undefined,
                                                "measure": undefined,
                                                "mvEnabled": false,
                                                "name": "field2",
                                                "PHI": undefined,
                                                "primaryKey": undefined,
                                                "propertyId": undefined,
                                                "propertyURI": undefined,
                                                "propertyValidators": Immutable.List [],
                                                "rangeValidators": Immutable.List [],
                                                "rangeURI": "xsd:int",
                                                "regexValidators": Immutable.List [],
                                                "recommendedVariable": false,
                                                "required": false,
                                                "scale": undefined,
                                                "URL": undefined,
                                                "shownInDetailsView": true,
                                                "shownInInsertView": true,
                                                "shownInUpdateView": true,
                                                "visible": true,
                                                "dataType": Immutable.Record {
                                                  "conceptURI": undefined,
                                                  "display": "Integer",
                                                  "name": "int",
                                                  "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                                  "alternateRangeURI": "xsd:int",
                                                  "shortDisplay": undefined,
                                                  "lookupSchema": undefined,
                                                  "lookupQuery": undefined,
                                                },
                                                "lookupQueryValue": undefined,
                                                "lookupType": Immutable.Record {
                                                  "conceptURI": undefined,
                                                  "display": "Lookup",
                                                  "name": "lookup",
                                                  "rangeURI": "xsd:int",
                                                  "alternateRangeURI": undefined,
                                                  "shortDisplay": undefined,
                                                  "lookupSchema": undefined,
                                                  "lookupQuery": undefined,
                                                },
                                                "original": Object {
                                                  "conceptURI": undefined,
                                                  "dataType": Immutable.Record {
                                                    "conceptURI": undefined,
                                                    "display": "Integer",
                                                    "name": "int",
                                                    "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                                    "alternateRangeURI": "xsd:int",
                                                    "shortDisplay": undefined,
                                                    "lookupSchema": undefined,
                                                    "lookupQuery": undefined,
                                                  },
                                                  "rangeURI": undefined,
                                                },
                                                "updatedField": false,
                                                "isPrimaryKey": false,
                                                "lockType": "NotLocked",
                                                "wrappedColumnName": undefined,
                                              },
                                              Immutable.Record {
                                                "conceptURI": undefined,
                                                "conditionalFormats": Immutable.List [],
                                                "defaultScale": undefined,
                                                "defaultValueType": undefined,
                                                "defaultValue": undefined,
                                                "defaultDisplayValue": undefined,
                                                "description": undefined,
                                                "dimension": undefined,
                                                "excludeFromShifting": false,
                                                "format": undefined,
                                                "hidden": false,
                                                "importAliases": undefined,
                                                "label": undefined,
                                                "lookupContainer": undefined,
                                                "lookupQuery": undefined,
                                                "lookupSchema": undefined,
                                                "lookupValidator": undefined,
                                                "measure": undefined,
                                                "mvEnabled": false,
                                                "name": "field3",
                                                "PHI": undefined,
                                                "primaryKey": undefined,
                                                "propertyId": undefined,
                                                "propertyURI": undefined,
                                                "propertyValidators": Immutable.List [],
                                                "rangeValidators": Immutable.List [],
                                                "rangeURI": "xsd:dateTime",
                                                "regexValidators": Immutable.List [],
                                                "recommendedVariable": false,
                                                "required": false,
                                                "scale": undefined,
                                                "URL": undefined,
                                                "shownInDetailsView": true,
                                                "shownInInsertView": true,
                                                "shownInUpdateView": true,
                                                "visible": true,
                                                "dataType": Immutable.Record {
                                                  "conceptURI": undefined,
                                                  "display": "Date Time",
                                                  "name": "dateTime",
                                                  "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                                                  "alternateRangeURI": "xsd:dateTime",
                                                  "shortDisplay": undefined,
                                                  "lookupSchema": undefined,
                                                  "lookupQuery": undefined,
                                                },
                                                "lookupQueryValue": undefined,
                                                "lookupType": Immutable.Record {
                                                  "conceptURI": undefined,
                                                  "display": "Lookup",
                                                  "name": "lookup",
                                                  "rangeURI": "xsd:dateTime",
                                                  "alternateRangeURI": undefined,
                                                  "shortDisplay": undefined,
                                                  "lookupSchema": undefined,
                                                  "lookupQuery": undefined,
                                                },
                                                "original": Object {
                                                  "conceptURI": undefined,
                                                  "dataType": Immutable.Record {
                                                    "conceptURI": undefined,
                                                    "display": "Date Time",
                                                    "name": "dateTime",
                                                    "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                                                    "alternateRangeURI": "xsd:dateTime",
                                                    "shortDisplay": undefined,
                                                    "lookupSchema": undefined,
                                                    "lookupQuery": undefined,
                                                  },
                                                  "rangeURI": undefined,
                                                },
                                                "updatedField": false,
                                                "isPrimaryKey": false,
                                                "lockType": "NotLocked",
                                                "wrappedColumnName": undefined,
                                              },
                                            ],
                                            "indices": Immutable.List [],
                                            "domainException": undefined,
                                            "mandatoryFieldNames": Immutable.List [],
                                            "reservedFieldNames": Immutable.List [],
                                            "newDesignFields": undefined,
                                            "instructions": undefined,
                                          },
                                        ],
                                        "editableResults": true,
                                        "editableRuns": true,
                                        "exception": undefined,
                                        "metadataInputFormatHelp": undefined,
                                        "moduleTransformScripts": undefined,
                                        "name": "Test Assay Protocol",
                                        "plateMetadata": undefined,
                                        "protocolId": 1,
                                        "protocolParameters": undefined,
                                        "protocolTransformScripts": undefined,
                                        "providerName": undefined,
                                        "saveScriptFiles": false,
                                        "selectedDetectionMethod": undefined,
                                        "selectedMetadataInputFormat": undefined,
                                        "selectedPlateTemplate": undefined,
                                        "qcEnabled": undefined,
                                      }
                                    }
                                    onChange={[Function]}
                                  >
                                    <AssayPropertiesInput
                                      appPropertiesOnly={false}
                                      helpTipBody={[Function]}
                                      label="Name"
                                      required={true}
                                    >
                                      <Row
                                        bsClass="row"
                                        className="margin-top"
                                        componentClass="div"
                                      >
                                        <div
                                          className="margin-top row"
                                        >
                                          <Col
                                            bsClass="col"
                                            componentClass="div"
                                            lg={4}
                                            xs={3}
                                          >
                                            <div
                                              className="col-lg-4 col-xs-3"
                                            >
                                              <span
                                                className="domain-no-wrap"
                                              >
                                                Name
                                                 *
                                                <LabelHelpTip
                                                  body={[Function]}
                                                  customStyle={Object {}}
                                                  id="tooltip"
                                                  required={true}
                                                  size="1x"
                                                  title="Name"
                                                >
                                                  <span
                                                    className="label-help-target"
                                                    onMouseOut={[Function]}
                                                    onMouseOver={[Function]}
                                                  >
                                                    <FontAwesomeIcon
                                                      border={false}
                                                      className="label-help-icon"
                                                      fixedWidth={false}
                                                      flip={null}
                                                      icon={
                                                        Object {
                                                          "icon": Array [
                                                            512,
                                                            512,
                                                            Array [],
                                                            "f059",
                                                            "M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z",
                                                          ],
                                                          "iconName": "question-circle",
                                                          "prefix": "fas",
                                                        }
                                                      }
                                                      inverse={false}
                                                      listItem={false}
                                                      mask={null}
                                                      pull={null}
                                                      pulse={false}
                                                      rotation={null}
                                                      size="1x"
                                                      spin={false}
                                                      style={Object {}}
                                                      symbol={false}
                                                      title=""
                                                      transform={null}
                                                    >
                                                      <svg
                                                        aria-hidden="true"
                                                        className="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                                                        data-icon="question-circle"
                                                        data-prefix="fas"
                                                        focusable="false"
                                                        role="img"
                                                        style={Object {}}
                                                        viewBox="0 0 512 512"
                                                        xmlns="http://www.w3.org/2000/svg"
                                                      >
                                                        <path
                                                          d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                          fill="currentColor"
                                                          style={Object {}}
                                                        />
                                                      </svg>
                                                    </FontAwesomeIcon>
                                                    <Overlay
                                                      animation={[Function]}
                                                      placement="right"
                                                      rootClose={false}
                                                      show={false}
                                                      target={
                                                        <span
                                                          class="label-help-target"
                                                        >
                                                          <svg
                                                            aria-hidden="true"
                                                            class="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                                                            data-icon="question-circle"
                                                            data-prefix="fas"
                                                            focusable="false"
                                                            role="img"
                                                            viewBox="0 0 512 512"
                                                            xmlns="http://www.w3.org/2000/svg"
                                                          >
                                                            <path
                                                              d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                              fill="currentColor"
                                                            />
                                                          </svg>
                                                        </span>
                                                      }
                                                    >
                                                      <Overlay
                                                        placement="right"
                                                        rootClose={false}
                                                        show={false}
                                                        target={
                                                          <span
                                                            class="label-help-target"
                                                          >
                                                            <svg
                                                              aria-hidden="true"
                                                              class="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                                                              data-icon="question-circle"
                                                              data-prefix="fas"
                                                              focusable="false"
                                                              role="img"
                                                              viewBox="0 0 512 512"
                                                              xmlns="http://www.w3.org/2000/svg"
                                                            >
                                                              <path
                                                                d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                                fill="currentColor"
                                                              />
                                                            </svg>
                                                          </span>
                                                        }
                                                        transition={[Function]}
                                                      />
                                                    </Overlay>
                                                  </span>
                                                </LabelHelpTip>
                                              </span>
                                            </div>
                                          </Col>
                                          <Col
                                            bsClass="col"
                                            componentClass="div"
                                            lg={8}
                                            xs={9}
                                          >
                                            <div
                                              className="col-lg-8 col-xs-9"
                                            >
                                              <FormControl
                                                bsClass="form-control"
                                                componentClass="input"
                                                disabled={true}
                                                id="assay-design-name"
                                                onChange={[Function]}
                                                placeholder="Enter a name for this assay"
                                                type="text"
                                                value="Test Assay Protocol"
                                              >
                                                <input
                                                  className="form-control"
                                                  disabled={true}
                                                  id="assay-design-name"
                                                  onChange={[Function]}
                                                  placeholder="Enter a name for this assay"
                                                  type="text"
                                                  value="Test Assay Protocol"
                                                />
                                              </FormControl>
                                            </div>
                                          </Col>
                                        </div>
                                      </Row>
                                    </AssayPropertiesInput>
                                  </NameInput>
                                  <DescriptionInput
                                    appPropertiesOnly={false}
                                    model={
                                      Immutable.Record {
                                        "allowBackgroundUpload": true,
                                        "allowEditableResults": true,
                                        "allowQCStates": false,
                                        "allowSpacesInPath": false,
                                        "allowTransformationScript": false,
                                        "allowPlateMetadata": false,
                                        "autoCopyTargetContainer": undefined,
                                        "autoCopyTargetContainerId": undefined,
                                        "availableDetectionMethods": undefined,
                                        "availableMetadataInputFormats": undefined,
                                        "availablePlateTemplates": undefined,
                                        "backgroundUpload": true,
                                        "description": "My assay protocol for you all to use.",
                                        "domains": Immutable.List [
                                          Immutable.Record {
                                            "name": "Batch Fields",
                                            "container": undefined,
                                            "description": undefined,
                                            "domainURI": undefined,
                                            "domainId": null,
                                            "allowFileLinkProperties": true,
                                            "allowAttachmentProperties": true,
                                            "allowFlagProperties": true,
                                            "showDefaultValueSettings": false,
                                            "defaultDefaultValueType": undefined,
                                            "defaultValueOptions": Immutable.List [],
                                            "fields": Immutable.List [],
                                            "indices": Immutable.List [],
                                            "domainException": undefined,
                                            "mandatoryFieldNames": Immutable.List [],
                                            "reservedFieldNames": Immutable.List [],
                                            "newDesignFields": undefined,
                                            "instructions": undefined,
                                          },
                                          Immutable.Record {
                                            "name": "Sample Fields",
                                            "container": undefined,
                                            "description": undefined,
                                            "domainURI": undefined,
                                            "domainId": null,
                                            "allowFileLinkProperties": true,
                                            "allowAttachmentProperties": true,
                                            "allowFlagProperties": true,
                                            "showDefaultValueSettings": false,
                                            "defaultDefaultValueType": undefined,
                                            "defaultValueOptions": Immutable.List [],
                                            "fields": Immutable.List [
                                              Immutable.Record {
                                                "conceptURI": undefined,
                                                "conditionalFormats": Immutable.List [],
                                                "defaultScale": undefined,
                                                "defaultValueType": undefined,
                                                "defaultValue": undefined,
                                                "defaultDisplayValue": undefined,
                                                "description": undefined,
                                                "dimension": undefined,
                                                "excludeFromShifting": false,
                                                "format": undefined,
                                                "hidden": false,
                                                "importAliases": undefined,
                                                "label": undefined,
                                                "lookupContainer": undefined,
                                                "lookupQuery": undefined,
                                                "lookupSchema": undefined,
                                                "lookupValidator": undefined,
                                                "measure": undefined,
                                                "mvEnabled": false,
                                                "name": "field1",
                                                "PHI": undefined,
                                                "primaryKey": undefined,
                                                "propertyId": undefined,
                                                "propertyURI": undefined,
                                                "propertyValidators": Immutable.List [],
                                                "rangeValidators": Immutable.List [],
                                                "rangeURI": "xsd:string",
                                                "regexValidators": Immutable.List [],
                                                "recommendedVariable": false,
                                                "required": false,
                                                "scale": undefined,
                                                "URL": undefined,
                                                "shownInDetailsView": true,
                                                "shownInInsertView": true,
                                                "shownInUpdateView": true,
                                                "visible": true,
                                                "dataType": Immutable.Record {
                                                  "conceptURI": undefined,
                                                  "display": "Text",
                                                  "name": "string",
                                                  "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                  "alternateRangeURI": "xsd:string",
                                                  "shortDisplay": "String",
                                                  "lookupSchema": undefined,
                                                  "lookupQuery": undefined,
                                                },
                                                "lookupQueryValue": undefined,
                                                "lookupType": Immutable.Record {
                                                  "conceptURI": undefined,
                                                  "display": "Lookup",
                                                  "name": "lookup",
                                                  "rangeURI": "xsd:string",
                                                  "alternateRangeURI": undefined,
                                                  "shortDisplay": undefined,
                                                  "lookupSchema": undefined,
                                                  "lookupQuery": undefined,
                                                },
                                                "original": Object {
                                                  "conceptURI": undefined,
                                                  "dataType": Immutable.Record {
                                                    "conceptURI": undefined,
                                                    "display": "Text",
                                                    "name": "string",
                                                    "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                    "alternateRangeURI": "xsd:string",
                                                    "shortDisplay": "String",
                                                    "lookupSchema": undefined,
                                                    "lookupQuery": undefined,
                                                  },
                                                  "rangeURI": undefined,
                                                },
                                                "updatedField": false,
                                                "isPrimaryKey": false,
                                                "lockType": "NotLocked",
                                                "wrappedColumnName": undefined,
                                              },
                                              Immutable.Record {
                                                "conceptURI": undefined,
                                                "conditionalFormats": Immutable.List [],
                                                "defaultScale": undefined,
                                                "defaultValueType": undefined,
                                                "defaultValue": undefined,
                                                "defaultDisplayValue": undefined,
                                                "description": undefined,
                                                "dimension": undefined,
                                                "excludeFromShifting": false,
                                                "format": undefined,
                                                "hidden": false,
                                                "importAliases": undefined,
                                                "label": undefined,
                                                "lookupContainer": undefined,
                                                "lookupQuery": undefined,
                                                "lookupSchema": undefined,
                                                "lookupValidator": undefined,
                                                "measure": undefined,
                                                "mvEnabled": false,
                                                "name": "field2",
                                                "PHI": undefined,
                                                "primaryKey": undefined,
                                                "propertyId": undefined,
                                                "propertyURI": undefined,
                                                "propertyValidators": Immutable.List [],
                                                "rangeValidators": Immutable.List [],
                                                "rangeURI": "xsd:int",
                                                "regexValidators": Immutable.List [],
                                                "recommendedVariable": false,
                                                "required": false,
                                                "scale": undefined,
                                                "URL": undefined,
                                                "shownInDetailsView": true,
                                                "shownInInsertView": true,
                                                "shownInUpdateView": true,
                                                "visible": true,
                                                "dataType": Immutable.Record {
                                                  "conceptURI": undefined,
                                                  "display": "Integer",
                                                  "name": "int",
                                                  "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                                  "alternateRangeURI": "xsd:int",
                                                  "shortDisplay": undefined,
                                                  "lookupSchema": undefined,
                                                  "lookupQuery": undefined,
                                                },
                                                "lookupQueryValue": undefined,
                                                "lookupType": Immutable.Record {
                                                  "conceptURI": undefined,
                                                  "display": "Lookup",
                                                  "name": "lookup",
                                                  "rangeURI": "xsd:int",
                                                  "alternateRangeURI": undefined,
                                                  "shortDisplay": undefined,
                                                  "lookupSchema": undefined,
                                                  "lookupQuery": undefined,
                                                },
                                                "original": Object {
                                                  "conceptURI": undefined,
                                                  "dataType": Immutable.Record {
                                                    "conceptURI": undefined,
                                                    "display": "Integer",
                                                    "name": "int",
                                                    "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                                    "alternateRangeURI": "xsd:int",
                                                    "shortDisplay": undefined,
                                                    "lookupSchema": undefined,
                                                    "lookupQuery": undefined,
                                                  },
                                                  "rangeURI": undefined,
                                                },
                                                "updatedField": false,
                                                "isPrimaryKey": false,
                                                "lockType": "NotLocked",
                                                "wrappedColumnName": undefined,
                                              },
                                              Immutable.Record {
                                                "conceptURI": undefined,
                                                "conditionalFormats": Immutable.List [],
                                                "defaultScale": undefined,
                                                "defaultValueType": undefined,
                                                "defaultValue": undefined,
                                                "defaultDisplayValue": undefined,
                                                "description": undefined,
                                                "dimension": undefined,
                                                "excludeFromShifting": false,
                                                "format": undefined,
                                                "hidden": false,
                                                "importAliases": undefined,
                                                "label": undefined,
                                                "lookupContainer": undefined,
                                                "lookupQuery": undefined,
                                                "lookupSchema": undefined,
                                                "lookupValidator": undefined,
                                                "measure": undefined,
                                                "mvEnabled": false,
                                                "name": "field3",
                                                "PHI": undefined,
                                                "primaryKey": undefined,
                                                "propertyId": undefined,
                                                "propertyURI": undefined,
                                                "propertyValidators": Immutable.List [],
                                                "rangeValidators": Immutable.List [],
                                                "rangeURI": "xsd:dateTime",
                                                "regexValidators": Immutable.List [],
                                                "recommendedVariable": false,
                                                "required": false,
                                                "scale": undefined,
                                                "URL": undefined,
                                                "shownInDetailsView": true,
                                                "shownInInsertView": true,
                                                "shownInUpdateView": true,
                                                "visible": true,
                                                "dataType": Immutable.Record {
                                                  "conceptURI": undefined,
                                                  "display": "Date Time",
                                                  "name": "dateTime",
                                                  "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                                                  "alternateRangeURI": "xsd:dateTime",
                                                  "shortDisplay": undefined,
                                                  "lookupSchema": undefined,
                                                  "lookupQuery": undefined,
                                                },
                                                "lookupQueryValue": undefined,
                                                "lookupType": Immutable.Record {
                                                  "conceptURI": undefined,
                                                  "display": "Lookup",
                                                  "name": "lookup",
                                                  "rangeURI": "xsd:dateTime",
                                                  "alternateRangeURI": undefined,
                                                  "shortDisplay": undefined,
                                                  "lookupSchema": undefined,
                                                  "lookupQuery": undefined,
                                                },
                                                "original": Object {
                                                  "conceptURI": undefined,
                                                  "dataType": Immutable.Record {
                                                    "conceptURI": undefined,
                                                    "display": "Date Time",
                                                    "name": "dateTime",
                                                    "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                                                    "alternateRangeURI": "xsd:dateTime",
                                                    "shortDisplay": undefined,
                                                    "lookupSchema": undefined,
                                                    "lookupQuery": undefined,
                                                  },
                                                  "rangeURI": undefined,
                                                },
                                                "updatedField": false,
                                                "isPrimaryKey": false,
                                                "lockType": "NotLocked",
                                                "wrappedColumnName": undefined,
                                              },
                                            ],
                                            "indices": Immutable.List [],
                                            "domainException": undefined,
                                            "mandatoryFieldNames": Immutable.List [],
                                            "reservedFieldNames": Immutable.List [],
                                            "newDesignFields": undefined,
                                            "instructions": undefined,
                                          },
                                        ],
                                        "editableResults": true,
                                        "editableRuns": true,
                                        "exception": undefined,
                                        "metadataInputFormatHelp": undefined,
                                        "moduleTransformScripts": undefined,
                                        "name": "Test Assay Protocol",
                                        "plateMetadata": undefined,
                                        "protocolId": 1,
                                        "protocolParameters": undefined,
                                        "protocolTransformScripts": undefined,
                                        "providerName": undefined,
                                        "saveScriptFiles": false,
                                        "selectedDetectionMethod": undefined,
                                        "selectedMetadataInputFormat": undefined,
                                        "selectedPlateTemplate": undefined,
                                        "qcEnabled": undefined,
                                      }
                                    }
                                    onChange={[Function]}
                                  >
                                    <AssayPropertiesInput
                                      appPropertiesOnly={false}
                                      helpTipBody={[Function]}
                                      label="Description"
                                    >
                                      <Row
                                        bsClass="row"
                                        className="margin-top"
                                        componentClass="div"
                                      >
                                        <div
                                          className="margin-top row"
                                        >
                                          <Col
                                            bsClass="col"
                                            componentClass="div"
                                            lg={4}
                                            xs={3}
                                          >
                                            <div
                                              className="col-lg-4 col-xs-3"
                                            >
                                              <span
                                                className="domain-no-wrap"
                                              >
                                                Description
                                                <LabelHelpTip
                                                  body={[Function]}
                                                  customStyle={Object {}}
                                                  id="tooltip"
                                                  size="1x"
                                                  title="Description"
                                                >
                                                  <span
                                                    className="label-help-target"
                                                    onMouseOut={[Function]}
                                                    onMouseOver={[Function]}
                                                  >
                                                    <FontAwesomeIcon
                                                      border={false}
                                                      className="label-help-icon"
                                                      fixedWidth={false}
                                                      flip={null}
                                                      icon={
                                                        Object {
                                                          "icon": Array [
                                                            512,
                                                            512,
                                                            Array [],
                                                            "f059",
                                                            "M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z",
                                                          ],
                                                          "iconName": "question-circle",
                                                          "prefix": "fas",
                                                        }
                                                      }
                                                      inverse={false}
                                                      listItem={false}
                                                      mask={null}
                                                      pull={null}
                                                      pulse={false}
                                                      rotation={null}
                                                      size="1x"
                                                      spin={false}
                                                      style={Object {}}
                                                      symbol={false}
                                                      title=""
                                                      transform={null}
                                                    >
                                                      <svg
                                                        aria-hidden="true"
                                                        className="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                                                        data-icon="question-circle"
                                                        data-prefix="fas"
                                                        focusable="false"
                                                        role="img"
                                                        style={Object {}}
                                                        viewBox="0 0 512 512"
                                                        xmlns="http://www.w3.org/2000/svg"
                                                      >
                                                        <path
                                                          d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                          fill="currentColor"
                                                          style={Object {}}
                                                        />
                                                      </svg>
                                                    </FontAwesomeIcon>
                                                    <Overlay
                                                      animation={[Function]}
                                                      placement="right"
                                                      rootClose={false}
                                                      show={false}
                                                      target={
                                                        <span
                                                          class="label-help-target"
                                                        >
                                                          <svg
                                                            aria-hidden="true"
                                                            class="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                                                            data-icon="question-circle"
                                                            data-prefix="fas"
                                                            focusable="false"
                                                            role="img"
                                                            viewBox="0 0 512 512"
                                                            xmlns="http://www.w3.org/2000/svg"
                                                          >
                                                            <path
                                                              d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                              fill="currentColor"
                                                            />
                                                          </svg>
                                                        </span>
                                                      }
                                                    >
                                                      <Overlay
                                                        placement="right"
                                                        rootClose={false}
                                                        show={false}
                                                        target={
                                                          <span
                                                            class="label-help-target"
                                                          >
                                                            <svg
                                                              aria-hidden="true"
                                                              class="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                                                              data-icon="question-circle"
                                                              data-prefix="fas"
                                                              focusable="false"
                                                              role="img"
                                                              viewBox="0 0 512 512"
                                                              xmlns="http://www.w3.org/2000/svg"
                                                            >
                                                              <path
                                                                d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                                fill="currentColor"
                                                              />
                                                            </svg>
                                                          </span>
                                                        }
                                                        transition={[Function]}
                                                      />
                                                    </Overlay>
                                                  </span>
                                                </LabelHelpTip>
                                              </span>
                                            </div>
                                          </Col>
                                          <Col
                                            bsClass="col"
                                            componentClass="div"
                                            lg={8}
                                            xs={9}
                                          >
                                            <div
                                              className="col-lg-8 col-xs-9"
                                            >
                                              <textarea
                                                className="form-control textarea-noresize"
                                                id="assay-design-description"
                                                onChange={[Function]}
                                                value="My assay protocol for you all to use."
                                              />
                                            </div>
                                          </Col>
                                        </div>
                                      </Row>
                                    </AssayPropertiesInput>
                                  </DescriptionInput>
                                </div>
                                <div
                                  className="domain-field-padding-bottom"
                                >
                                  <SectionHeading
                                    title="Editing Settings"
                                  >
                                    <Row
                                      bsClass="row"
                                      componentClass="div"
                                    >
                                      <div
                                        className="row"
                                      >
                                        <Col
                                          bsClass="col"
                                          componentClass="div"
                                          xs={12}
                                        >
                                          <div
                                            className="col-xs-12"
                                          >
                                            <div
                                              className="domain-field-section-heading"
                                            >
                                              Editing Settings
                                            </div>
                                          </div>
                                        </Col>
                                      </div>
                                    </Row>
                                  </SectionHeading>
                                  <EditableRunsInput
                                    appPropertiesOnly={false}
                                    model={
                                      Immutable.Record {
                                        "allowBackgroundUpload": true,
                                        "allowEditableResults": true,
                                        "allowQCStates": false,
                                        "allowSpacesInPath": false,
                                        "allowTransformationScript": false,
                                        "allowPlateMetadata": false,
                                        "autoCopyTargetContainer": undefined,
                                        "autoCopyTargetContainerId": undefined,
                                        "availableDetectionMethods": undefined,
                                        "availableMetadataInputFormats": undefined,
                                        "availablePlateTemplates": undefined,
                                        "backgroundUpload": true,
                                        "description": "My assay protocol for you all to use.",
                                        "domains": Immutable.List [
                                          Immutable.Record {
                                            "name": "Batch Fields",
                                            "container": undefined,
                                            "description": undefined,
                                            "domainURI": undefined,
                                            "domainId": null,
                                            "allowFileLinkProperties": true,
                                            "allowAttachmentProperties": true,
                                            "allowFlagProperties": true,
                                            "showDefaultValueSettings": false,
                                            "defaultDefaultValueType": undefined,
                                            "defaultValueOptions": Immutable.List [],
                                            "fields": Immutable.List [],
                                            "indices": Immutable.List [],
                                            "domainException": undefined,
                                            "mandatoryFieldNames": Immutable.List [],
                                            "reservedFieldNames": Immutable.List [],
                                            "newDesignFields": undefined,
                                            "instructions": undefined,
                                          },
                                          Immutable.Record {
                                            "name": "Sample Fields",
                                            "container": undefined,
                                            "description": undefined,
                                            "domainURI": undefined,
                                            "domainId": null,
                                            "allowFileLinkProperties": true,
                                            "allowAttachmentProperties": true,
                                            "allowFlagProperties": true,
                                            "showDefaultValueSettings": false,
                                            "defaultDefaultValueType": undefined,
                                            "defaultValueOptions": Immutable.List [],
                                            "fields": Immutable.List [
                                              Immutable.Record {
                                                "conceptURI": undefined,
                                                "conditionalFormats": Immutable.List [],
                                                "defaultScale": undefined,
                                                "defaultValueType": undefined,
                                                "defaultValue": undefined,
                                                "defaultDisplayValue": undefined,
                                                "description": undefined,
                                                "dimension": undefined,
                                                "excludeFromShifting": false,
                                                "format": undefined,
                                                "hidden": false,
                                                "importAliases": undefined,
                                                "label": undefined,
                                                "lookupContainer": undefined,
                                                "lookupQuery": undefined,
                                                "lookupSchema": undefined,
                                                "lookupValidator": undefined,
                                                "measure": undefined,
                                                "mvEnabled": false,
                                                "name": "field1",
                                                "PHI": undefined,
                                                "primaryKey": undefined,
                                                "propertyId": undefined,
                                                "propertyURI": undefined,
                                                "propertyValidators": Immutable.List [],
                                                "rangeValidators": Immutable.List [],
                                                "rangeURI": "xsd:string",
                                                "regexValidators": Immutable.List [],
                                                "recommendedVariable": false,
                                                "required": false,
                                                "scale": undefined,
                                                "URL": undefined,
                                                "shownInDetailsView": true,
                                                "shownInInsertView": true,
                                                "shownInUpdateView": true,
                                                "visible": true,
                                                "dataType": Immutable.Record {
                                                  "conceptURI": undefined,
                                                  "display": "Text",
                                                  "name": "string",
                                                  "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                  "alternateRangeURI": "xsd:string",
                                                  "shortDisplay": "String",
                                                  "lookupSchema": undefined,
                                                  "lookupQuery": undefined,
                                                },
                                                "lookupQueryValue": undefined,
                                                "lookupType": Immutable.Record {
                                                  "conceptURI": undefined,
                                                  "display": "Lookup",
                                                  "name": "lookup",
                                                  "rangeURI": "xsd:string",
                                                  "alternateRangeURI": undefined,
                                                  "shortDisplay": undefined,
                                                  "lookupSchema": undefined,
                                                  "lookupQuery": undefined,
                                                },
                                                "original": Object {
                                                  "conceptURI": undefined,
                                                  "dataType": Immutable.Record {
                                                    "conceptURI": undefined,
                                                    "display": "Text",
                                                    "name": "string",
                                                    "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                    "alternateRangeURI": "xsd:string",
                                                    "shortDisplay": "String",
                                                    "lookupSchema": undefined,
                                                    "lookupQuery": undefined,
                                                  },
                                                  "rangeURI": undefined,
                                                },
                                                "updatedField": false,
                                                "isPrimaryKey": false,
                                                "lockType": "NotLocked",
                                                "wrappedColumnName": undefined,
                                              },
                                              Immutable.Record {
                                                "conceptURI": undefined,
                                                "conditionalFormats": Immutable.List [],
                                                "defaultScale": undefined,
                                                "defaultValueType": undefined,
                                                "defaultValue": undefined,
                                                "defaultDisplayValue": undefined,
                                                "description": undefined,
                                                "dimension": undefined,
                                                "excludeFromShifting": false,
                                                "format": undefined,
                                                "hidden": false,
                                                "importAliases": undefined,
                                                "label": undefined,
                                                "lookupContainer": undefined,
                                                "lookupQuery": undefined,
                                                "lookupSchema": undefined,
                                                "lookupValidator": undefined,
                                                "measure": undefined,
                                                "mvEnabled": false,
                                                "name": "field2",
                                                "PHI": undefined,
                                                "primaryKey": undefined,
                                                "propertyId": undefined,
                                                "propertyURI": undefined,
                                                "propertyValidators": Immutable.List [],
                                                "rangeValidators": Immutable.List [],
                                                "rangeURI": "xsd:int",
                                                "regexValidators": Immutable.List [],
                                                "recommendedVariable": false,
                                                "required": false,
                                                "scale": undefined,
                                                "URL": undefined,
                                                "shownInDetailsView": true,
                                                "shownInInsertView": true,
                                                "shownInUpdateView": true,
                                                "visible": true,
                                                "dataType": Immutable.Record {
                                                  "conceptURI": undefined,
                                                  "display": "Integer",
                                                  "name": "int",
                                                  "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                                  "alternateRangeURI": "xsd:int",
                                                  "shortDisplay": undefined,
                                                  "lookupSchema": undefined,
                                                  "lookupQuery": undefined,
                                                },
                                                "lookupQueryValue": undefined,
                                                "lookupType": Immutable.Record {
                                                  "conceptURI": undefined,
                                                  "display": "Lookup",
                                                  "name": "lookup",
                                                  "rangeURI": "xsd:int",
                                                  "alternateRangeURI": undefined,
                                                  "shortDisplay": undefined,
                                                  "lookupSchema": undefined,
                                                  "lookupQuery": undefined,
                                                },
                                                "original": Object {
                                                  "conceptURI": undefined,
                                                  "dataType": Immutable.Record {
                                                    "conceptURI": undefined,
                                                    "display": "Integer",
                                                    "name": "int",
                                                    "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                                    "alternateRangeURI": "xsd:int",
                                                    "shortDisplay": undefined,
                                                    "lookupSchema": undefined,
                                                    "lookupQuery": undefined,
                                                  },
                                                  "rangeURI": undefined,
                                                },
                                                "updatedField": false,
                                                "isPrimaryKey": false,
                                                "lockType": "NotLocked",
                                                "wrappedColumnName": undefined,
                                              },
                                              Immutable.Record {
                                                "conceptURI": undefined,
                                                "conditionalFormats": Immutable.List [],
                                                "defaultScale": undefined,
                                                "defaultValueType": undefined,
                                                "defaultValue": undefined,
                                                "defaultDisplayValue": undefined,
                                                "description": undefined,
                                                "dimension": undefined,
                                                "excludeFromShifting": false,
                                                "format": undefined,
                                                "hidden": false,
                                                "importAliases": undefined,
                                                "label": undefined,
                                                "lookupContainer": undefined,
                                                "lookupQuery": undefined,
                                                "lookupSchema": undefined,
                                                "lookupValidator": undefined,
                                                "measure": undefined,
                                                "mvEnabled": false,
                                                "name": "field3",
                                                "PHI": undefined,
                                                "primaryKey": undefined,
                                                "propertyId": undefined,
                                                "propertyURI": undefined,
                                                "propertyValidators": Immutable.List [],
                                                "rangeValidators": Immutable.List [],
                                                "rangeURI": "xsd:dateTime",
                                                "regexValidators": Immutable.List [],
                                                "recommendedVariable": false,
                                                "required": false,
                                                "scale": undefined,
                                                "URL": undefined,
                                                "shownInDetailsView": true,
                                                "shownInInsertView": true,
                                                "shownInUpdateView": true,
                                                "visible": true,
                                                "dataType": Immutable.Record {
                                                  "conceptURI": undefined,
                                                  "display": "Date Time",
                                                  "name": "dateTime",
                                                  "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                                                  "alternateRangeURI": "xsd:dateTime",
                                                  "shortDisplay": undefined,
                                                  "lookupSchema": undefined,
                                                  "lookupQuery": undefined,
                                                },
                                                "lookupQueryValue": undefined,
                                                "lookupType": Immutable.Record {
                                                  "conceptURI": undefined,
                                                  "display": "Lookup",
                                                  "name": "lookup",
                                                  "rangeURI": "xsd:dateTime",
                                                  "alternateRangeURI": undefined,
                                                  "shortDisplay": undefined,
                                                  "lookupSchema": undefined,
                                                  "lookupQuery": undefined,
                                                },
                                                "original": Object {
                                                  "conceptURI": undefined,
                                                  "dataType": Immutable.Record {
                                                    "conceptURI": undefined,
                                                    "display": "Date Time",
                                                    "name": "dateTime",
                                                    "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                                                    "alternateRangeURI": "xsd:dateTime",
                                                    "shortDisplay": undefined,
                                                    "lookupSchema": undefined,
                                                    "lookupQuery": undefined,
                                                  },
                                                  "rangeURI": undefined,
                                                },
                                                "updatedField": false,
                                                "isPrimaryKey": false,
                                                "lockType": "NotLocked",
                                                "wrappedColumnName": undefined,
                                              },
                                            ],
                                            "indices": Immutable.List [],
                                            "domainException": undefined,
                                            "mandatoryFieldNames": Immutable.List [],
                                            "reservedFieldNames": Immutable.List [],
                                            "newDesignFields": undefined,
                                            "instructions": undefined,
                                          },
                                        ],
                                        "editableResults": true,
                                        "editableRuns": true,
                                        "exception": undefined,
                                        "metadataInputFormatHelp": undefined,
                                        "moduleTransformScripts": undefined,
                                        "name": "Test Assay Protocol",
                                        "plateMetadata": undefined,
                                        "protocolId": 1,
                                        "protocolParameters": undefined,
                                        "protocolTransformScripts": undefined,
                                        "providerName": undefined,
                                        "saveScriptFiles": false,
                                        "selectedDetectionMethod": undefined,
                                        "selectedMetadataInputFormat": undefined,
                                        "selectedPlateTemplate": undefined,
                                        "qcEnabled": undefined,
                                      }
                                    }
                                    onChange={[Function]}
                                  >
                                    <AssayPropertiesInput
                                      appPropertiesOnly={false}
                                      helpTipBody={[Function]}
                                      label="Editable Runs"
                                    >
                                      <Row
                                        bsClass="row"
                                        className="margin-top"
                                        componentClass="div"
                                      >
                                        <div
                                          className="margin-top row"
                                        >
                                          <Col
                                            bsClass="col"
                                            componentClass="div"
                                            lg={4}
                                            xs={3}
                                          >
                                            <div
                                              className="col-lg-4 col-xs-3"
                                            >
                                              Editable 
                                              <span
                                                className="domain-no-wrap"
                                              >
                                                Runs
                                                <LabelHelpTip
                                                  body={[Function]}
                                                  customStyle={Object {}}
                                                  id="tooltip"
                                                  size="1x"
                                                  title="Editable Runs"
                                                >
                                                  <span
                                                    className="label-help-target"
                                                    onMouseOut={[Function]}
                                                    onMouseOver={[Function]}
                                                  >
                                                    <FontAwesomeIcon
                                                      border={false}
                                                      className="label-help-icon"
                                                      fixedWidth={false}
                                                      flip={null}
                                                      icon={
                                                        Object {
                                                          "icon": Array [
                                                            512,
                                                            512,
                                                            Array [],
                                                            "f059",
                                                            "M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z",
                                                          ],
                                                          "iconName": "question-circle",
                                                          "prefix": "fas",
                                                        }
                                                      }
                                                      inverse={false}
                                                      listItem={false}
                                                      mask={null}
                                                      pull={null}
                                                      pulse={false}
                                                      rotation={null}
                                                      size="1x"
                                                      spin={false}
                                                      style={Object {}}
                                                      symbol={false}
                                                      title=""
                                                      transform={null}
                                                    >
                                                      <svg
                                                        aria-hidden="true"
                                                        className="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                                                        data-icon="question-circle"
                                                        data-prefix="fas"
                                                        focusable="false"
                                                        role="img"
                                                        style={Object {}}
                                                        viewBox="0 0 512 512"
                                                        xmlns="http://www.w3.org/2000/svg"
                                                      >
                                                        <path
                                                          d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                          fill="currentColor"
                                                          style={Object {}}
                                                        />
                                                      </svg>
                                                    </FontAwesomeIcon>
                                                    <Overlay
                                                      animation={[Function]}
                                                      placement="right"
                                                      rootClose={false}
                                                      show={false}
                                                      target={
                                                        <span
                                                          class="label-help-target"
                                                        >
                                                          <svg
                                                            aria-hidden="true"
                                                            class="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                                                            data-icon="question-circle"
                                                            data-prefix="fas"
                                                            focusable="false"
                                                            role="img"
                                                            viewBox="0 0 512 512"
                                                            xmlns="http://www.w3.org/2000/svg"
                                                          >
                                                            <path
                                                              d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                              fill="currentColor"
                                                            />
                                                          </svg>
                                                        </span>
                                                      }
                                                    >
                                                      <Overlay
                                                        placement="right"
                                                        rootClose={false}
                                                        show={false}
                                                        target={
                                                          <span
                                                            class="label-help-target"
                                                          >
                                                            <svg
                                                              aria-hidden="true"
                                                              class="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                                                              data-icon="question-circle"
                                                              data-prefix="fas"
                                                              focusable="false"
                                                              role="img"
                                                              viewBox="0 0 512 512"
                                                              xmlns="http://www.w3.org/2000/svg"
                                                            >
                                                              <path
                                                                d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                                fill="currentColor"
                                                              />
                                                            </svg>
                                                          </span>
                                                        }
                                                        transition={[Function]}
                                                      />
                                                    </Overlay>
                                                  </span>
                                                </LabelHelpTip>
                                              </span>
                                            </div>
                                          </Col>
                                          <Col
                                            bsClass="col"
                                            componentClass="div"
                                            lg={8}
                                            xs={9}
                                          >
                                            <div
                                              className="col-lg-8 col-xs-9"
                                            >
                                              <input
                                                checked={true}
                                                id="assay-design-editableRuns"
                                                onChange={[Function]}
                                                type="checkbox"
                                              />
                                            </div>
                                          </Col>
                                        </div>
                                      </Row>
                                    </AssayPropertiesInput>
                                  </EditableRunsInput>
                                  <EditableResultsInput
                                    appPropertiesOnly={false}
                                    model={
                                      Immutable.Record {
                                        "allowBackgroundUpload": true,
                                        "allowEditableResults": true,
                                        "allowQCStates": false,
                                        "allowSpacesInPath": false,
                                        "allowTransformationScript": false,
                                        "allowPlateMetadata": false,
                                        "autoCopyTargetContainer": undefined,
                                        "autoCopyTargetContainerId": undefined,
                                        "availableDetectionMethods": undefined,
                                        "availableMetadataInputFormats": undefined,
                                        "availablePlateTemplates": undefined,
                                        "backgroundUpload": true,
                                        "description": "My assay protocol for you all to use.",
                                        "domains": Immutable.List [
                                          Immutable.Record {
                                            "name": "Batch Fields",
                                            "container": undefined,
                                            "description": undefined,
                                            "domainURI": undefined,
                                            "domainId": null,
                                            "allowFileLinkProperties": true,
                                            "allowAttachmentProperties": true,
                                            "allowFlagProperties": true,
                                            "showDefaultValueSettings": false,
                                            "defaultDefaultValueType": undefined,
                                            "defaultValueOptions": Immutable.List [],
                                            "fields": Immutable.List [],
                                            "indices": Immutable.List [],
                                            "domainException": undefined,
                                            "mandatoryFieldNames": Immutable.List [],
                                            "reservedFieldNames": Immutable.List [],
                                            "newDesignFields": undefined,
                                            "instructions": undefined,
                                          },
                                          Immutable.Record {
                                            "name": "Sample Fields",
                                            "container": undefined,
                                            "description": undefined,
                                            "domainURI": undefined,
                                            "domainId": null,
                                            "allowFileLinkProperties": true,
                                            "allowAttachmentProperties": true,
                                            "allowFlagProperties": true,
                                            "showDefaultValueSettings": false,
                                            "defaultDefaultValueType": undefined,
                                            "defaultValueOptions": Immutable.List [],
                                            "fields": Immutable.List [
                                              Immutable.Record {
                                                "conceptURI": undefined,
                                                "conditionalFormats": Immutable.List [],
                                                "defaultScale": undefined,
                                                "defaultValueType": undefined,
                                                "defaultValue": undefined,
                                                "defaultDisplayValue": undefined,
                                                "description": undefined,
                                                "dimension": undefined,
                                                "excludeFromShifting": false,
                                                "format": undefined,
                                                "hidden": false,
                                                "importAliases": undefined,
                                                "label": undefined,
                                                "lookupContainer": undefined,
                                                "lookupQuery": undefined,
                                                "lookupSchema": undefined,
                                                "lookupValidator": undefined,
                                                "measure": undefined,
                                                "mvEnabled": false,
                                                "name": "field1",
                                                "PHI": undefined,
                                                "primaryKey": undefined,
                                                "propertyId": undefined,
                                                "propertyURI": undefined,
                                                "propertyValidators": Immutable.List [],
                                                "rangeValidators": Immutable.List [],
                                                "rangeURI": "xsd:string",
                                                "regexValidators": Immutable.List [],
                                                "recommendedVariable": false,
                                                "required": false,
                                                "scale": undefined,
                                                "URL": undefined,
                                                "shownInDetailsView": true,
                                                "shownInInsertView": true,
                                                "shownInUpdateView": true,
                                                "visible": true,
                                                "dataType": Immutable.Record {
                                                  "conceptURI": undefined,
                                                  "display": "Text",
                                                  "name": "string",
                                                  "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                  "alternateRangeURI": "xsd:string",
                                                  "shortDisplay": "String",
                                                  "lookupSchema": undefined,
                                                  "lookupQuery": undefined,
                                                },
                                                "lookupQueryValue": undefined,
                                                "lookupType": Immutable.Record {
                                                  "conceptURI": undefined,
                                                  "display": "Lookup",
                                                  "name": "lookup",
                                                  "rangeURI": "xsd:string",
                                                  "alternateRangeURI": undefined,
                                                  "shortDisplay": undefined,
                                                  "lookupSchema": undefined,
                                                  "lookupQuery": undefined,
                                                },
                                                "original": Object {
                                                  "conceptURI": undefined,
                                                  "dataType": Immutable.Record {
                                                    "conceptURI": undefined,
                                                    "display": "Text",
                                                    "name": "string",
                                                    "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                    "alternateRangeURI": "xsd:string",
                                                    "shortDisplay": "String",
                                                    "lookupSchema": undefined,
                                                    "lookupQuery": undefined,
                                                  },
                                                  "rangeURI": undefined,
                                                },
                                                "updatedField": false,
                                                "isPrimaryKey": false,
                                                "lockType": "NotLocked",
                                                "wrappedColumnName": undefined,
                                              },
                                              Immutable.Record {
                                                "conceptURI": undefined,
                                                "conditionalFormats": Immutable.List [],
                                                "defaultScale": undefined,
                                                "defaultValueType": undefined,
                                                "defaultValue": undefined,
                                                "defaultDisplayValue": undefined,
                                                "description": undefined,
                                                "dimension": undefined,
                                                "excludeFromShifting": false,
                                                "format": undefined,
                                                "hidden": false,
                                                "importAliases": undefined,
                                                "label": undefined,
                                                "lookupContainer": undefined,
                                                "lookupQuery": undefined,
                                                "lookupSchema": undefined,
                                                "lookupValidator": undefined,
                                                "measure": undefined,
                                                "mvEnabled": false,
                                                "name": "field2",
                                                "PHI": undefined,
                                                "primaryKey": undefined,
                                                "propertyId": undefined,
                                                "propertyURI": undefined,
                                                "propertyValidators": Immutable.List [],
                                                "rangeValidators": Immutable.List [],
                                                "rangeURI": "xsd:int",
                                                "regexValidators": Immutable.List [],
                                                "recommendedVariable": false,
                                                "required": false,
                                                "scale": undefined,
                                                "URL": undefined,
                                                "shownInDetailsView": true,
                                                "shownInInsertView": true,
                                                "shownInUpdateView": true,
                                                "visible": true,
                                                "dataType": Immutable.Record {
                                                  "conceptURI": undefined,
                                                  "display": "Integer",
                                                  "name": "int",
                                                  "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                                  "alternateRangeURI": "xsd:int",
                                                  "shortDisplay": undefined,
                                                  "lookupSchema": undefined,
                                                  "lookupQuery": undefined,
                                                },
                                                "lookupQueryValue": undefined,
                                                "lookupType": Immutable.Record {
                                                  "conceptURI": undefined,
                                                  "display": "Lookup",
                                                  "name": "lookup",
                                                  "rangeURI": "xsd:int",
                                                  "alternateRangeURI": undefined,
                                                  "shortDisplay": undefined,
                                                  "lookupSchema": undefined,
                                                  "lookupQuery": undefined,
                                                },
                                                "original": Object {
                                                  "conceptURI": undefined,
                                                  "dataType": Immutable.Record {
                                                    "conceptURI": undefined,
                                                    "display": "Integer",
                                                    "name": "int",
                                                    "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                                    "alternateRangeURI": "xsd:int",
                                                    "shortDisplay": undefined,
                                                    "lookupSchema": undefined,
                                                    "lookupQuery": undefined,
                                                  },
                                                  "rangeURI": undefined,
                                                },
                                                "updatedField": false,
                                                "isPrimaryKey": false,
                                                "lockType": "NotLocked",
                                                "wrappedColumnName": undefined,
                                              },
                                              Immutable.Record {
                                                "conceptURI": undefined,
                                                "conditionalFormats": Immutable.List [],
                                                "defaultScale": undefined,
                                                "defaultValueType": undefined,
                                                "defaultValue": undefined,
                                                "defaultDisplayValue": undefined,
                                                "description": undefined,
                                                "dimension": undefined,
                                                "excludeFromShifting": false,
                                                "format": undefined,
                                                "hidden": false,
                                                "importAliases": undefined,
                                                "label": undefined,
                                                "lookupContainer": undefined,
                                                "lookupQuery": undefined,
                                                "lookupSchema": undefined,
                                                "lookupValidator": undefined,
                                                "measure": undefined,
                                                "mvEnabled": false,
                                                "name": "field3",
                                                "PHI": undefined,
                                                "primaryKey": undefined,
                                                "propertyId": undefined,
                                                "propertyURI": undefined,
                                                "propertyValidators": Immutable.List [],
                                                "rangeValidators": Immutable.List [],
                                                "rangeURI": "xsd:dateTime",
                                                "regexValidators": Immutable.List [],
                                                "recommendedVariable": false,
                                                "required": false,
                                                "scale": undefined,
                                                "URL": undefined,
                                                "shownInDetailsView": true,
                                                "shownInInsertView": true,
                                                "shownInUpdateView": true,
                                                "visible": true,
                                                "dataType": Immutable.Record {
                                                  "conceptURI": undefined,
                                                  "display": "Date Time",
                                                  "name": "dateTime",
                                                  "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                                                  "alternateRangeURI": "xsd:dateTime",
                                                  "shortDisplay": undefined,
                                                  "lookupSchema": undefined,
                                                  "lookupQuery": undefined,
                                                },
                                                "lookupQueryValue": undefined,
                                                "lookupType": Immutable.Record {
                                                  "conceptURI": undefined,
                                                  "display": "Lookup",
                                                  "name": "lookup",
                                                  "rangeURI": "xsd:dateTime",
                                                  "alternateRangeURI": undefined,
                                                  "shortDisplay": undefined,
                                                  "lookupSchema": undefined,
                                                  "lookupQuery": undefined,
                                                },
                                                "original": Object {
                                                  "conceptURI": undefined,
                                                  "dataType": Immutable.Record {
                                                    "conceptURI": undefined,
                                                    "display": "Date Time",
                                                    "name": "dateTime",
                                                    "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                                                    "alternateRangeURI": "xsd:dateTime",
                                                    "shortDisplay": undefined,
                                                    "lookupSchema": undefined,
                                                    "lookupQuery": undefined,
                                                  },
                                                  "rangeURI": undefined,
                                                },
                                                "updatedField": false,
                                                "isPrimaryKey": false,
                                                "lockType": "NotLocked",
                                                "wrappedColumnName": undefined,
                                              },
                                            ],
                                            "indices": Immutable.List [],
                                            "domainException": undefined,
                                            "mandatoryFieldNames": Immutable.List [],
                                            "reservedFieldNames": Immutable.List [],
                                            "newDesignFields": undefined,
                                            "instructions": undefined,
                                          },
                                        ],
                                        "editableResults": true,
                                        "editableRuns": true,
                                        "exception": undefined,
                                        "metadataInputFormatHelp": undefined,
                                        "moduleTransformScripts": undefined,
                                        "name": "Test Assay Protocol",
                                        "plateMetadata": undefined,
                                        "protocolId": 1,
                                        "protocolParameters": undefined,
                                        "protocolTransformScripts": undefined,
                                        "providerName": undefined,
                                        "saveScriptFiles": false,
                                        "selectedDetectionMethod": undefined,
                                        "selectedMetadataInputFormat": undefined,
                                        "selectedPlateTemplate": undefined,
                                        "qcEnabled": undefined,
                                      }
                                    }
                                    onChange={[Function]}
                                  >
                                    <AssayPropertiesInput
                                      appPropertiesOnly={false}
                                      helpTipBody={[Function]}
                                      label="Editable Results"
                                    >
                                      <Row
                                        bsClass="row"
                                        className="margin-top"
                                        componentClass="div"
                                      >
                                        <div
                                          className="margin-top row"
                                        >
                                          <Col
                                            bsClass="col"
                                            componentClass="div"
                                            lg={4}
                                            xs={3}
                                          >
                                            <div
                                              className="col-lg-4 col-xs-3"
                                            >
                                              Editable 
                                              <span
                                                className="domain-no-wrap"
                                              >
                                                Results
                                                <LabelHelpTip
                                                  body={[Function]}
                                                  customStyle={Object {}}
                                                  id="tooltip"
                                                  size="1x"
                                                  title="Editable Results"
                                                >
                                                  <span
                                                    className="label-help-target"
                                                    onMouseOut={[Function]}
                                                    onMouseOver={[Function]}
                                                  >
                                                    <FontAwesomeIcon
                                                      border={false}
                                                      className="label-help-icon"
                                                      fixedWidth={false}
                                                      flip={null}
                                                      icon={
                                                        Object {
                                                          "icon": Array [
                                                            512,
                                                            512,
                                                            Array [],
                                                            "f059",
                                                            "M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z",
                                                          ],
                                                          "iconName": "question-circle",
                                                          "prefix": "fas",
                                                        }
                                                      }
                                                      inverse={false}
                                                      listItem={false}
                                                      mask={null}
                                                      pull={null}
                                                      pulse={false}
                                                      rotation={null}
                                                      size="1x"
                                                      spin={false}
                                                      style={Object {}}
                                                      symbol={false}
                                                      title=""
                                                      transform={null}
                                                    >
                                                      <svg
                                                        aria-hidden="true"
                                                        className="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                                                        data-icon="question-circle"
                                                        data-prefix="fas"
                                                        focusable="false"
                                                        role="img"
                                                        style={Object {}}
                                                        viewBox="0 0 512 512"
                                                        xmlns="http://www.w3.org/2000/svg"
                                                      >
                                                        <path
                                                          d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                          fill="currentColor"
                                                          style={Object {}}
                                                        />
                                                      </svg>
                                                    </FontAwesomeIcon>
                                                    <Overlay
                                                      animation={[Function]}
                                                      placement="right"
                                                      rootClose={false}
                                                      show={false}
                                                      target={
                                                        <span
                                                          class="label-help-target"
                                                        >
                                                          <svg
                                                            aria-hidden="true"
                                                            class="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                                                            data-icon="question-circle"
                                                            data-prefix="fas"
                                                            focusable="false"
                                                            role="img"
                                                            viewBox="0 0 512 512"
                                                            xmlns="http://www.w3.org/2000/svg"
                                                          >
                                                            <path
                                                              d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                              fill="currentColor"
                                                            />
                                                          </svg>
                                                        </span>
                                                      }
                                                    >
                                                      <Overlay
                                                        placement="right"
                                                        rootClose={false}
                                                        show={false}
                                                        target={
                                                          <span
                                                            class="label-help-target"
                                                          >
                                                            <svg
                                                              aria-hidden="true"
                                                              class="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                                                              data-icon="question-circle"
                                                              data-prefix="fas"
                                                              focusable="false"
                                                              role="img"
                                                              viewBox="0 0 512 512"
                                                              xmlns="http://www.w3.org/2000/svg"
                                                            >
                                                              <path
                                                                d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                                fill="currentColor"
                                                              />
                                                            </svg>
                                                          </span>
                                                        }
                                                        transition={[Function]}
                                                      />
                                                    </Overlay>
                                                  </span>
                                                </LabelHelpTip>
                                              </span>
                                            </div>
                                          </Col>
                                          <Col
                                            bsClass="col"
                                            componentClass="div"
                                            lg={8}
                                            xs={9}
                                          >
                                            <div
                                              className="col-lg-8 col-xs-9"
                                            >
                                              <input
                                                checked={true}
                                                id="assay-design-editableResults"
                                                onChange={[Function]}
                                                type="checkbox"
                                              />
                                            </div>
                                          </Col>
                                        </div>
                                      </Row>
                                    </AssayPropertiesInput>
                                  </EditableResultsInput>
                                </div>
                              </div>
                            </Col>
                            <Col
                              bsClass="col"
                              componentClass="div"
                              lg={6}
                              xs={12}
                            >
                              <div
                                className="col-lg-6 col-xs-12"
                              >
                                <div
                                  className="domain-field-padding-bottom"
                                >
                                  <SectionHeading
                                    title="Import Settings"
                                  >
                                    <Row
                                      bsClass="row"
                                      componentClass="div"
                                    >
                                      <div
                                        className="row"
                                      >
                                        <Col
                                          bsClass="col"
                                          componentClass="div"
                                          xs={12}
                                        >
                                          <div
                                            className="col-xs-12"
                                          >
                                            <div
                                              className="domain-field-section-heading"
                                            >
                                              Import Settings
                                            </div>
                                          </div>
                                        </Col>
                                      </div>
                                    </Row>
                                  </SectionHeading>
                                  <AutoCopyDataInput
                                    model={
                                      Immutable.Record {
                                        "allowBackgroundUpload": true,
                                        "allowEditableResults": true,
                                        "allowQCStates": false,
                                        "allowSpacesInPath": false,
                                        "allowTransformationScript": false,
                                        "allowPlateMetadata": false,
                                        "autoCopyTargetContainer": undefined,
                                        "autoCopyTargetContainerId": undefined,
                                        "availableDetectionMethods": undefined,
                                        "availableMetadataInputFormats": undefined,
                                        "availablePlateTemplates": undefined,
                                        "backgroundUpload": true,
                                        "description": "My assay protocol for you all to use.",
                                        "domains": Immutable.List [
                                          Immutable.Record {
                                            "name": "Batch Fields",
                                            "container": undefined,
                                            "description": undefined,
                                            "domainURI": undefined,
                                            "domainId": null,
                                            "allowFileLinkProperties": true,
                                            "allowAttachmentProperties": true,
                                            "allowFlagProperties": true,
                                            "showDefaultValueSettings": false,
                                            "defaultDefaultValueType": undefined,
                                            "defaultValueOptions": Immutable.List [],
                                            "fields": Immutable.List [],
                                            "indices": Immutable.List [],
                                            "domainException": undefined,
                                            "mandatoryFieldNames": Immutable.List [],
                                            "reservedFieldNames": Immutable.List [],
                                            "newDesignFields": undefined,
                                            "instructions": undefined,
                                          },
                                          Immutable.Record {
                                            "name": "Sample Fields",
                                            "container": undefined,
                                            "description": undefined,
                                            "domainURI": undefined,
                                            "domainId": null,
                                            "allowFileLinkProperties": true,
                                            "allowAttachmentProperties": true,
                                            "allowFlagProperties": true,
                                            "showDefaultValueSettings": false,
                                            "defaultDefaultValueType": undefined,
                                            "defaultValueOptions": Immutable.List [],
                                            "fields": Immutable.List [
                                              Immutable.Record {
                                                "conceptURI": undefined,
                                                "conditionalFormats": Immutable.List [],
                                                "defaultScale": undefined,
                                                "defaultValueType": undefined,
                                                "defaultValue": undefined,
                                                "defaultDisplayValue": undefined,
                                                "description": undefined,
                                                "dimension": undefined,
                                                "excludeFromShifting": false,
                                                "format": undefined,
                                                "hidden": false,
                                                "importAliases": undefined,
                                                "label": undefined,
                                                "lookupContainer": undefined,
                                                "lookupQuery": undefined,
                                                "lookupSchema": undefined,
                                                "lookupValidator": undefined,
                                                "measure": undefined,
                                                "mvEnabled": false,
                                                "name": "field1",
                                                "PHI": undefined,
                                                "primaryKey": undefined,
                                                "propertyId": undefined,
                                                "propertyURI": undefined,
                                                "propertyValidators": Immutable.List [],
                                                "rangeValidators": Immutable.List [],
                                                "rangeURI": "xsd:string",
                                                "regexValidators": Immutable.List [],
                                                "recommendedVariable": false,
                                                "required": false,
                                                "scale": undefined,
                                                "URL": undefined,
                                                "shownInDetailsView": true,
                                                "shownInInsertView": true,
                                                "shownInUpdateView": true,
                                                "visible": true,
                                                "dataType": Immutable.Record {
                                                  "conceptURI": undefined,
                                                  "display": "Text",
                                                  "name": "string",
                                                  "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                  "alternateRangeURI": "xsd:string",
                                                  "shortDisplay": "String",
                                                  "lookupSchema": undefined,
                                                  "lookupQuery": undefined,
                                                },
                                                "lookupQueryValue": undefined,
                                                "lookupType": Immutable.Record {
                                                  "conceptURI": undefined,
                                                  "display": "Lookup",
                                                  "name": "lookup",
                                                  "rangeURI": "xsd:string",
                                                  "alternateRangeURI": undefined,
                                                  "shortDisplay": undefined,
                                                  "lookupSchema": undefined,
                                                  "lookupQuery": undefined,
                                                },
                                                "original": Object {
                                                  "conceptURI": undefined,
                                                  "dataType": Immutable.Record {
                                                    "conceptURI": undefined,
                                                    "display": "Text",
                                                    "name": "string",
                                                    "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                    "alternateRangeURI": "xsd:string",
                                                    "shortDisplay": "String",
                                                    "lookupSchema": undefined,
                                                    "lookupQuery": undefined,
                                                  },
                                                  "rangeURI": undefined,
                                                },
                                                "updatedField": false,
                                                "isPrimaryKey": false,
                                                "lockType": "NotLocked",
                                                "wrappedColumnName": undefined,
                                              },
                                              Immutable.Record {
                                                "conceptURI": undefined,
                                                "conditionalFormats": Immutable.List [],
                                                "defaultScale": undefined,
                                                "defaultValueType": undefined,
                                                "defaultValue": undefined,
                                                "defaultDisplayValue": undefined,
                                                "description": undefined,
                                                "dimension": undefined,
                                                "excludeFromShifting": false,
                                                "format": undefined,
                                                "hidden": false,
                                                "importAliases": undefined,
                                                "label": undefined,
                                                "lookupContainer": undefined,
                                                "lookupQuery": undefined,
                                                "lookupSchema": undefined,
                                                "lookupValidator": undefined,
                                                "measure": undefined,
                                                "mvEnabled": false,
                                                "name": "field2",
                                                "PHI": undefined,
                                                "primaryKey": undefined,
                                                "propertyId": undefined,
                                                "propertyURI": undefined,
                                                "propertyValidators": Immutable.List [],
                                                "rangeValidators": Immutable.List [],
                                                "rangeURI": "xsd:int",
                                                "regexValidators": Immutable.List [],
                                                "recommendedVariable": false,
                                                "required": false,
                                                "scale": undefined,
                                                "URL": undefined,
                                                "shownInDetailsView": true,
                                                "shownInInsertView": true,
                                                "shownInUpdateView": true,
                                                "visible": true,
                                                "dataType": Immutable.Record {
                                                  "conceptURI": undefined,
                                                  "display": "Integer",
                                                  "name": "int",
                                                  "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                                  "alternateRangeURI": "xsd:int",
                                                  "shortDisplay": undefined,
                                                  "lookupSchema": undefined,
                                                  "lookupQuery": undefined,
                                                },
                                                "lookupQueryValue": undefined,
                                                "lookupType": Immutable.Record {
                                                  "conceptURI": undefined,
                                                  "display": "Lookup",
                                                  "name": "lookup",
                                                  "rangeURI": "xsd:int",
                                                  "alternateRangeURI": undefined,
                                                  "shortDisplay": undefined,
                                                  "lookupSchema": undefined,
                                                  "lookupQuery": undefined,
                                                },
                                                "original": Object {
                                                  "conceptURI": undefined,
                                                  "dataType": Immutable.Record {
                                                    "conceptURI": undefined,
                                                    "display": "Integer",
                                                    "name": "int",
                                                    "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                                    "alternateRangeURI": "xsd:int",
                                                    "shortDisplay": undefined,
                                                    "lookupSchema": undefined,
                                                    "lookupQuery": undefined,
                                                  },
                                                  "rangeURI": undefined,
                                                },
                                                "updatedField": false,
                                                "isPrimaryKey": false,
                                                "lockType": "NotLocked",
                                                "wrappedColumnName": undefined,
                                              },
                                              Immutable.Record {
                                                "conceptURI": undefined,
                                                "conditionalFormats": Immutable.List [],
                                                "defaultScale": undefined,
                                                "defaultValueType": undefined,
                                                "defaultValue": undefined,
                                                "defaultDisplayValue": undefined,
                                                "description": undefined,
                                                "dimension": undefined,
                                                "excludeFromShifting": false,
                                                "format": undefined,
                                                "hidden": false,
                                                "importAliases": undefined,
                                                "label": undefined,
                                                "lookupContainer": undefined,
                                                "lookupQuery": undefined,
                                                "lookupSchema": undefined,
                                                "lookupValidator": undefined,
                                                "measure": undefined,
                                                "mvEnabled": false,
                                                "name": "field3",
                                                "PHI": undefined,
                                                "primaryKey": undefined,
                                                "propertyId": undefined,
                                                "propertyURI": undefined,
                                                "propertyValidators": Immutable.List [],
                                                "rangeValidators": Immutable.List [],
                                                "rangeURI": "xsd:dateTime",
                                                "regexValidators": Immutable.List [],
                                                "recommendedVariable": false,
                                                "required": false,
                                                "scale": undefined,
                                                "URL": undefined,
                                                "shownInDetailsView": true,
                                                "shownInInsertView": true,
                                                "shownInUpdateView": true,
                                                "visible": true,
                                                "dataType": Immutable.Record {
                                                  "conceptURI": undefined,
                                                  "display": "Date Time",
                                                  "name": "dateTime",
                                                  "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                                                  "alternateRangeURI": "xsd:dateTime",
                                                  "shortDisplay": undefined,
                                                  "lookupSchema": undefined,
                                                  "lookupQuery": undefined,
                                                },
                                                "lookupQueryValue": undefined,
                                                "lookupType": Immutable.Record {
                                                  "conceptURI": undefined,
                                                  "display": "Lookup",
                                                  "name": "lookup",
                                                  "rangeURI": "xsd:dateTime",
                                                  "alternateRangeURI": undefined,
                                                  "shortDisplay": undefined,
                                                  "lookupSchema": undefined,
                                                  "lookupQuery": undefined,
                                                },
                                                "original": Object {
                                                  "conceptURI": undefined,
                                                  "dataType": Immutable.Record {
                                                    "conceptURI": undefined,
                                                    "display": "Date Time",
                                                    "name": "dateTime",
                                                    "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                                                    "alternateRangeURI": "xsd:dateTime",
                                                    "shortDisplay": undefined,
                                                    "lookupSchema": undefined,
                                                    "lookupQuery": undefined,
                                                  },
                                                  "rangeURI": undefined,
                                                },
                                                "updatedField": false,
                                                "isPrimaryKey": false,
                                                "lockType": "NotLocked",
                                                "wrappedColumnName": undefined,
                                              },
                                            ],
                                            "indices": Immutable.List [],
                                            "domainException": undefined,
                                            "mandatoryFieldNames": Immutable.List [],
                                            "reservedFieldNames": Immutable.List [],
                                            "newDesignFields": undefined,
                                            "instructions": undefined,
                                          },
                                        ],
                                        "editableResults": true,
                                        "editableRuns": true,
                                        "exception": undefined,
                                        "metadataInputFormatHelp": undefined,
                                        "moduleTransformScripts": undefined,
                                        "name": "Test Assay Protocol",
                                        "plateMetadata": undefined,
                                        "protocolId": 1,
                                        "protocolParameters": undefined,
                                        "protocolTransformScripts": undefined,
                                        "providerName": undefined,
                                        "saveScriptFiles": false,
                                        "selectedDetectionMethod": undefined,
                                        "selectedMetadataInputFormat": undefined,
                                        "selectedPlateTemplate": undefined,
                                        "qcEnabled": undefined,
                                      }
                                    }
                                    onChange={[Function]}
                                  >
                                    <AssayPropertiesInput
                                      helpTipBody={[Function]}
                                      label="Auto-Copy Data to Study"
                                    >
                                      <Row
                                        bsClass="row"
                                        className="margin-top"
                                        componentClass="div"
                                      >
                                        <div
                                          className="margin-top row"
                                        >
                                          <Col
                                            bsClass="col"
                                            componentClass="div"
                                            lg={4}
                                            xs={3}
                                          >
                                            <div
                                              className="col-lg-4 col-xs-3"
                                            >
                                              Auto-Copy Data to 
                                              <span
                                                className="domain-no-wrap"
                                              >
                                                Study
                                                <LabelHelpTip
                                                  body={[Function]}
                                                  customStyle={Object {}}
                                                  id="tooltip"
                                                  size="1x"
                                                  title="Auto-Copy Data to Study"
                                                >
                                                  <span
                                                    className="label-help-target"
                                                    onMouseOut={[Function]}
                                                    onMouseOver={[Function]}
                                                  >
                                                    <FontAwesomeIcon
                                                      border={false}
                                                      className="label-help-icon"
                                                      fixedWidth={false}
                                                      flip={null}
                                                      icon={
                                                        Object {
                                                          "icon": Array [
                                                            512,
                                                            512,
                                                            Array [],
                                                            "f059",
                                                            "M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z",
                                                          ],
                                                          "iconName": "question-circle",
                                                          "prefix": "fas",
                                                        }
                                                      }
                                                      inverse={false}
                                                      listItem={false}
                                                      mask={null}
                                                      pull={null}
                                                      pulse={false}
                                                      rotation={null}
                                                      size="1x"
                                                      spin={false}
                                                      style={Object {}}
                                                      symbol={false}
                                                      title=""
                                                      transform={null}
                                                    >
                                                      <svg
                                                        aria-hidden="true"
                                                        className="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                                                        data-icon="question-circle"
                                                        data-prefix="fas"
                                                        focusable="false"
                                                        role="img"
                                                        style={Object {}}
                                                        viewBox="0 0 512 512"
                                                        xmlns="http://www.w3.org/2000/svg"
                                                      >
                                                        <path
                                                          d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                          fill="currentColor"
                                                          style={Object {}}
                                                        />
                                                      </svg>
                                                    </FontAwesomeIcon>
                                                    <Overlay
                                                      animation={[Function]}
                                                      placement="right"
                                                      rootClose={false}
                                                      show={false}
                                                      target={
                                                        <span
                                                          class="label-help-target"
                                                        >
                                                          <svg
                                                            aria-hidden="true"
                                                            class="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                                                            data-icon="question-circle"
                                                            data-prefix="fas"
                                                            focusable="false"
                                                            role="img"
                                                            viewBox="0 0 512 512"
                                                            xmlns="http://www.w3.org/2000/svg"
                                                          >
                                                            <path
                                                              d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                              fill="currentColor"
                                                            />
                                                          </svg>
                                                        </span>
                                                      }
                                                    >
                                                      <Overlay
                                                        placement="right"
                                                        rootClose={false}
                                                        show={false}
                                                        target={
                                                          <span
                                                            class="label-help-target"
                                                          >
                                                            <svg
                                                              aria-hidden="true"
                                                              class="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                                                              data-icon="question-circle"
                                                              data-prefix="fas"
                                                              focusable="false"
                                                              role="img"
                                                              viewBox="0 0 512 512"
                                                              xmlns="http://www.w3.org/2000/svg"
                                                            >
                                                              <path
                                                                d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                                fill="currentColor"
                                                              />
                                                            </svg>
                                                          </span>
                                                        }
                                                        transition={[Function]}
                                                      />
                                                    </Overlay>
                                                  </span>
                                                </LabelHelpTip>
                                              </span>
                                            </div>
                                          </Col>
                                          <Col
                                            bsClass="col"
                                            componentClass="div"
                                            lg={8}
                                            xs={9}
                                          >
                                            <div
                                              className="col-lg-8 col-xs-9"
                                            >
                                              <LoadingSpinner
                                                msg="Loading..."
                                                wrapperClassName=""
                                              >
                                                <span
                                                  className=""
                                                >
                                                  <i
                                                    aria-hidden="true"
                                                    className="fa fa-spinner fa-pulse"
                                                  />
                                                   
                                                  Loading...
                                                </span>
                                              </LoadingSpinner>
                                            </div>
                                          </Col>
                                        </div>
                                      </Row>
                                    </AssayPropertiesInput>
                                  </AutoCopyDataInput>
                                  <BackgroundUploadInput
                                    model={
                                      Immutable.Record {
                                        "allowBackgroundUpload": true,
                                        "allowEditableResults": true,
                                        "allowQCStates": false,
                                        "allowSpacesInPath": false,
                                        "allowTransformationScript": false,
                                        "allowPlateMetadata": false,
                                        "autoCopyTargetContainer": undefined,
                                        "autoCopyTargetContainerId": undefined,
                                        "availableDetectionMethods": undefined,
                                        "availableMetadataInputFormats": undefined,
                                        "availablePlateTemplates": undefined,
                                        "backgroundUpload": true,
                                        "description": "My assay protocol for you all to use.",
                                        "domains": Immutable.List [
                                          Immutable.Record {
                                            "name": "Batch Fields",
                                            "container": undefined,
                                            "description": undefined,
                                            "domainURI": undefined,
                                            "domainId": null,
                                            "allowFileLinkProperties": true,
                                            "allowAttachmentProperties": true,
                                            "allowFlagProperties": true,
                                            "showDefaultValueSettings": false,
                                            "defaultDefaultValueType": undefined,
                                            "defaultValueOptions": Immutable.List [],
                                            "fields": Immutable.List [],
                                            "indices": Immutable.List [],
                                            "domainException": undefined,
                                            "mandatoryFieldNames": Immutable.List [],
                                            "reservedFieldNames": Immutable.List [],
                                            "newDesignFields": undefined,
                                            "instructions": undefined,
                                          },
                                          Immutable.Record {
                                            "name": "Sample Fields",
                                            "container": undefined,
                                            "description": undefined,
                                            "domainURI": undefined,
                                            "domainId": null,
                                            "allowFileLinkProperties": true,
                                            "allowAttachmentProperties": true,
                                            "allowFlagProperties": true,
                                            "showDefaultValueSettings": false,
                                            "defaultDefaultValueType": undefined,
                                            "defaultValueOptions": Immutable.List [],
                                            "fields": Immutable.List [
                                              Immutable.Record {
                                                "conceptURI": undefined,
                                                "conditionalFormats": Immutable.List [],
                                                "defaultScale": undefined,
                                                "defaultValueType": undefined,
                                                "defaultValue": undefined,
                                                "defaultDisplayValue": undefined,
                                                "description": undefined,
                                                "dimension": undefined,
                                                "excludeFromShifting": false,
                                                "format": undefined,
                                                "hidden": false,
                                                "importAliases": undefined,
                                                "label": undefined,
                                                "lookupContainer": undefined,
                                                "lookupQuery": undefined,
                                                "lookupSchema": undefined,
                                                "lookupValidator": undefined,
                                                "measure": undefined,
                                                "mvEnabled": false,
                                                "name": "field1",
                                                "PHI": undefined,
                                                "primaryKey": undefined,
                                                "propertyId": undefined,
                                                "propertyURI": undefined,
                                                "propertyValidators": Immutable.List [],
                                                "rangeValidators": Immutable.List [],
                                                "rangeURI": "xsd:string",
                                                "regexValidators": Immutable.List [],
                                                "recommendedVariable": false,
                                                "required": false,
                                                "scale": undefined,
                                                "URL": undefined,
                                                "shownInDetailsView": true,
                                                "shownInInsertView": true,
                                                "shownInUpdateView": true,
                                                "visible": true,
                                                "dataType": Immutable.Record {
                                                  "conceptURI": undefined,
                                                  "display": "Text",
                                                  "name": "string",
                                                  "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                  "alternateRangeURI": "xsd:string",
                                                  "shortDisplay": "String",
                                                  "lookupSchema": undefined,
                                                  "lookupQuery": undefined,
                                                },
                                                "lookupQueryValue": undefined,
                                                "lookupType": Immutable.Record {
                                                  "conceptURI": undefined,
                                                  "display": "Lookup",
                                                  "name": "lookup",
                                                  "rangeURI": "xsd:string",
                                                  "alternateRangeURI": undefined,
                                                  "shortDisplay": undefined,
                                                  "lookupSchema": undefined,
                                                  "lookupQuery": undefined,
                                                },
                                                "original": Object {
                                                  "conceptURI": undefined,
                                                  "dataType": Immutable.Record {
                                                    "conceptURI": undefined,
                                                    "display": "Text",
                                                    "name": "string",
                                                    "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                    "alternateRangeURI": "xsd:string",
                                                    "shortDisplay": "String",
                                                    "lookupSchema": undefined,
                                                    "lookupQuery": undefined,
                                                  },
                                                  "rangeURI": undefined,
                                                },
                                                "updatedField": false,
                                                "isPrimaryKey": false,
                                                "lockType": "NotLocked",
                                                "wrappedColumnName": undefined,
                                              },
                                              Immutable.Record {
                                                "conceptURI": undefined,
                                                "conditionalFormats": Immutable.List [],
                                                "defaultScale": undefined,
                                                "defaultValueType": undefined,
                                                "defaultValue": undefined,
                                                "defaultDisplayValue": undefined,
                                                "description": undefined,
                                                "dimension": undefined,
                                                "excludeFromShifting": false,
                                                "format": undefined,
                                                "hidden": false,
                                                "importAliases": undefined,
                                                "label": undefined,
                                                "lookupContainer": undefined,
                                                "lookupQuery": undefined,
                                                "lookupSchema": undefined,
                                                "lookupValidator": undefined,
                                                "measure": undefined,
                                                "mvEnabled": false,
                                                "name": "field2",
                                                "PHI": undefined,
                                                "primaryKey": undefined,
                                                "propertyId": undefined,
                                                "propertyURI": undefined,
                                                "propertyValidators": Immutable.List [],
                                                "rangeValidators": Immutable.List [],
                                                "rangeURI": "xsd:int",
                                                "regexValidators": Immutable.List [],
                                                "recommendedVariable": false,
                                                "required": false,
                                                "scale": undefined,
                                                "URL": undefined,
                                                "shownInDetailsView": true,
                                                "shownInInsertView": true,
                                                "shownInUpdateView": true,
                                                "visible": true,
                                                "dataType": Immutable.Record {
                                                  "conceptURI": undefined,
                                                  "display": "Integer",
                                                  "name": "int",
                                                  "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                                  "alternateRangeURI": "xsd:int",
                                                  "shortDisplay": undefined,
                                                  "lookupSchema": undefined,
                                                  "lookupQuery": undefined,
                                                },
                                                "lookupQueryValue": undefined,
                                                "lookupType": Immutable.Record {
                                                  "conceptURI": undefined,
                                                  "display": "Lookup",
                                                  "name": "lookup",
                                                  "rangeURI": "xsd:int",
                                                  "alternateRangeURI": undefined,
                                                  "shortDisplay": undefined,
                                                  "lookupSchema": undefined,
                                                  "lookupQuery": undefined,
                                                },
                                                "original": Object {
                                                  "conceptURI": undefined,
                                                  "dataType": Immutable.Record {
                                                    "conceptURI": undefined,
                                                    "display": "Integer",
                                                    "name": "int",
                                                    "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                                    "alternateRangeURI": "xsd:int",
                                                    "shortDisplay": undefined,
                                                    "lookupSchema": undefined,
                                                    "lookupQuery": undefined,
                                                  },
                                                  "rangeURI": undefined,
                                                },
                                                "updatedField": false,
                                                "isPrimaryKey": false,
                                                "lockType": "NotLocked",
                                                "wrappedColumnName": undefined,
                                              },
                                              Immutable.Record {
                                                "conceptURI": undefined,
                                                "conditionalFormats": Immutable.List [],
                                                "defaultScale": undefined,
                                                "defaultValueType": undefined,
                                                "defaultValue": undefined,
                                                "defaultDisplayValue": undefined,
                                                "description": undefined,
                                                "dimension": undefined,
                                                "excludeFromShifting": false,
                                                "format": undefined,
                                                "hidden": false,
                                                "importAliases": undefined,
                                                "label": undefined,
                                                "lookupContainer": undefined,
                                                "lookupQuery": undefined,
                                                "lookupSchema": undefined,
                                                "lookupValidator": undefined,
                                                "measure": undefined,
                                                "mvEnabled": false,
                                                "name": "field3",
                                                "PHI": undefined,
                                                "primaryKey": undefined,
                                                "propertyId": undefined,
                                                "propertyURI": undefined,
                                                "propertyValidators": Immutable.List [],
                                                "rangeValidators": Immutable.List [],
                                                "rangeURI": "xsd:dateTime",
                                                "regexValidators": Immutable.List [],
                                                "recommendedVariable": false,
                                                "required": false,
                                                "scale": undefined,
                                                "URL": undefined,
                                                "shownInDetailsView": true,
                                                "shownInInsertView": true,
                                                "shownInUpdateView": true,
                                                "visible": true,
                                                "dataType": Immutable.Record {
                                                  "conceptURI": undefined,
                                                  "display": "Date Time",
                                                  "name": "dateTime",
                                                  "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                                                  "alternateRangeURI": "xsd:dateTime",
                                                  "shortDisplay": undefined,
                                                  "lookupSchema": undefined,
                                                  "lookupQuery": undefined,
                                                },
                                                "lookupQueryValue": undefined,
                                                "lookupType": Immutable.Record {
                                                  "conceptURI": undefined,
                                                  "display": "Lookup",
                                                  "name": "lookup",
                                                  "rangeURI": "xsd:dateTime",
                                                  "alternateRangeURI": undefined,
                                                  "shortDisplay": undefined,
                                                  "lookupSchema": undefined,
                                                  "lookupQuery": undefined,
                                                },
                                                "original": Object {
                                                  "conceptURI": undefined,
                                                  "dataType": Immutable.Record {
                                                    "conceptURI": undefined,
                                                    "display": "Date Time",
                                                    "name": "dateTime",
                                                    "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                                                    "alternateRangeURI": "xsd:dateTime",
                                                    "shortDisplay": undefined,
                                                    "lookupSchema": undefined,
                                                    "lookupQuery": undefined,
                                                  },
                                                  "rangeURI": undefined,
                                                },
                                                "updatedField": false,
                                                "isPrimaryKey": false,
                                                "lockType": "NotLocked",
                                                "wrappedColumnName": undefined,
                                              },
                                            ],
                                            "indices": Immutable.List [],
                                            "domainException": undefined,
                                            "mandatoryFieldNames": Immutable.List [],
                                            "reservedFieldNames": Immutable.List [],
                                            "newDesignFields": undefined,
                                            "instructions": undefined,
                                          },
                                        ],
                                        "editableResults": true,
                                        "editableRuns": true,
                                        "exception": undefined,
                                        "metadataInputFormatHelp": undefined,
                                        "moduleTransformScripts": undefined,
                                        "name": "Test Assay Protocol",
                                        "plateMetadata": undefined,
                                        "protocolId": 1,
                                        "protocolParameters": undefined,
                                        "protocolTransformScripts": undefined,
                                        "providerName": undefined,
                                        "saveScriptFiles": false,
                                        "selectedDetectionMethod": undefined,
                                        "selectedMetadataInputFormat": undefined,
                                        "selectedPlateTemplate": undefined,
                                        "qcEnabled": undefined,
                                      }
                                    }
                                    onChange={[Function]}
                                  >
                                    <AssayPropertiesInput
                                      helpTipBody={[Function]}
                                      label="Import in Background"
                                    >
                                      <Row
                                        bsClass="row"
                                        className="margin-top"
                                        componentClass="div"
                                      >
                                        <div
                                          className="margin-top row"
                                        >
                                          <Col
                                            bsClass="col"
                                            componentClass="div"
                                            lg={4}
                                            xs={3}
                                          >
                                            <div
                                              className="col-lg-4 col-xs-3"
                                            >
                                              Import in 
                                              <span
                                                className="domain-no-wrap"
                                              >
                                                Background
                                                <LabelHelpTip
                                                  body={[Function]}
                                                  customStyle={Object {}}
                                                  id="tooltip"
                                                  size="1x"
                                                  title="Import in Background"
                                                >
                                                  <span
                                                    className="label-help-target"
                                                    onMouseOut={[Function]}
                                                    onMouseOver={[Function]}
                                                  >
                                                    <FontAwesomeIcon
                                                      border={false}
                                                      className="label-help-icon"
                                                      fixedWidth={false}
                                                      flip={null}
                                                      icon={
                                                        Object {
                                                          "icon": Array [
                                                            512,
                                                            512,
                                                            Array [],
                                                            "f059",
                                                            "M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z",
                                                          ],
                                                          "iconName": "question-circle",
                                                          "prefix": "fas",
                                                        }
                                                      }
                                                      inverse={false}
                                                      listItem={false}
                                                      mask={null}
                                                      pull={null}
                                                      pulse={false}
                                                      rotation={null}
                                                      size="1x"
                                                      spin={false}
                                                      style={Object {}}
                                                      symbol={false}
                                                      title=""
                                                      transform={null}
                                                    >
                                                      <svg
                                                        aria-hidden="true"
                                                        className="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                                                        data-icon="question-circle"
                                                        data-prefix="fas"
                                                        focusable="false"
                                                        role="img"
                                                        style={Object {}}
                                                        viewBox="0 0 512 512"
                                                        xmlns="http://www.w3.org/2000/svg"
                                                      >
                                                        <path
                                                          d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                          fill="currentColor"
                                                          style={Object {}}
                                                        />
                                                      </svg>
                                                    </FontAwesomeIcon>
                                                    <Overlay
                                                      animation={[Function]}
                                                      placement="right"
                                                      rootClose={false}
                                                      show={false}
                                                      target={
                                                        <span
                                                          class="label-help-target"
                                                        >
                                                          <svg
                                                            aria-hidden="true"
                                                            class="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                                                            data-icon="question-circle"
                                                            data-prefix="fas"
                                                            focusable="false"
                                                            role="img"
                                                            viewBox="0 0 512 512"
                                                            xmlns="http://www.w3.org/2000/svg"
                                                          >
                                                            <path
                                                              d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                              fill="currentColor"
                                                            />
                                                          </svg>
                                                        </span>
                                                      }
                                                    >
                                                      <Overlay
                                                        placement="right"
                                                        rootClose={false}
                                                        show={false}
                                                        target={
                                                          <span
                                                            class="label-help-target"
                                                          >
                                                            <svg
                                                              aria-hidden="true"
                                                              class="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                                                              data-icon="question-circle"
                                                              data-prefix="fas"
                                                              focusable="false"
                                                              role="img"
                                                              viewBox="0 0 512 512"
                                                              xmlns="http://www.w3.org/2000/svg"
                                                            >
                                                              <path
                                                                d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                                fill="currentColor"
                                                              />
                                                            </svg>
                                                          </span>
                                                        }
                                                        transition={[Function]}
                                                      />
                                                    </Overlay>
                                                  </span>
                                                </LabelHelpTip>
                                              </span>
                                            </div>
                                          </Col>
                                          <Col
                                            bsClass="col"
                                            componentClass="div"
                                            lg={8}
                                            xs={9}
                                          >
                                            <div
                                              className="col-lg-8 col-xs-9"
                                            >
                                              <input
                                                checked={true}
                                                id="assay-design-backgroundUpload"
                                                onChange={[Function]}
                                                type="checkbox"
                                              />
                                            </div>
                                          </Col>
                                        </div>
                                      </Row>
                                    </AssayPropertiesInput>
                                  </BackgroundUploadInput>
                                </div>
                              </div>
                            </Col>
                          </form>
                        </Form>
                      </div>
                    </div>
                  </Transition>
                </Collapse>
              </PanelCollapse>
            </PanelBody>
          </div>
        </Panel>
      </Uncontrolled(Panel)>
    </AssayPropertiesPanelImpl>
  </ComponentWithDomainPropertiesPanelCollapse>
  <DomainForm
    controlledCollapse={true}
    domain={
      Immutable.Record {
        "name": "Sample Fields",
        "container": undefined,
        "description": undefined,
        "domainURI": undefined,
        "domainId": null,
        "allowFileLinkProperties": true,
        "allowAttachmentProperties": true,
        "allowFlagProperties": true,
        "showDefaultValueSettings": false,
        "defaultDefaultValueType": undefined,
        "defaultValueOptions": Immutable.List [],
        "fields": Immutable.List [
          Immutable.Record {
            "conceptURI": undefined,
            "conditionalFormats": Immutable.List [],
            "defaultScale": undefined,
            "defaultValueType": undefined,
            "defaultValue": undefined,
            "defaultDisplayValue": undefined,
            "description": undefined,
            "dimension": undefined,
            "excludeFromShifting": false,
            "format": undefined,
            "hidden": false,
            "importAliases": undefined,
            "label": undefined,
            "lookupContainer": undefined,
            "lookupQuery": undefined,
            "lookupSchema": undefined,
            "lookupValidator": undefined,
            "measure": undefined,
            "mvEnabled": false,
            "name": "field1",
            "PHI": undefined,
            "primaryKey": undefined,
            "propertyId": undefined,
            "propertyURI": undefined,
            "propertyValidators": Immutable.List [],
            "rangeValidators": Immutable.List [],
            "rangeURI": "xsd:string",
            "regexValidators": Immutable.List [],
            "recommendedVariable": false,
            "required": false,
            "scale": undefined,
            "URL": undefined,
            "shownInDetailsView": true,
            "shownInInsertView": true,
            "shownInUpdateView": true,
            "visible": true,
            "dataType": Immutable.Record {
              "conceptURI": undefined,
              "display": "Text",
              "name": "string",
              "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
              "alternateRangeURI": "xsd:string",
              "shortDisplay": "String",
              "lookupSchema": undefined,
              "lookupQuery": undefined,
            },
            "lookupQueryValue": undefined,
            "lookupType": Immutable.Record {
              "conceptURI": undefined,
              "display": "Lookup",
              "name": "lookup",
              "rangeURI": "xsd:string",
              "alternateRangeURI": undefined,
              "shortDisplay": undefined,
              "lookupSchema": undefined,
              "lookupQuery": undefined,
            },
            "original": Object {
              "conceptURI": undefined,
              "dataType": Immutable.Record {
                "conceptURI": undefined,
                "display": "Text",
                "name": "string",
                "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                "alternateRangeURI": "xsd:string",
                "shortDisplay": "String",
                "lookupSchema": undefined,
                "lookupQuery": undefined,
              },
              "rangeURI": undefined,
            },
            "updatedField": false,
            "isPrimaryKey": false,
            "lockType": "NotLocked",
            "wrappedColumnName": undefined,
          },
          Immutable.Record {
            "conceptURI": undefined,
            "conditionalFormats": Immutable.List [],
            "defaultScale": undefined,
            "defaultValueType": undefined,
            "defaultValue": undefined,
            "defaultDisplayValue": undefined,
            "description": undefined,
            "dimension": undefined,
            "excludeFromShifting": false,
            "format": undefined,
            "hidden": false,
            "importAliases": undefined,
            "label": undefined,
            "lookupContainer": undefined,
            "lookupQuery": undefined,
            "lookupSchema": undefined,
            "lookupValidator": undefined,
            "measure": undefined,
            "mvEnabled": false,
            "name": "field2",
            "PHI": undefined,
            "primaryKey": undefined,
            "propertyId": undefined,
            "propertyURI": undefined,
            "propertyValidators": Immutable.List [],
            "rangeValidators": Immutable.List [],
            "rangeURI": "xsd:int",
            "regexValidators": Immutable.List [],
            "recommendedVariable": false,
            "required": false,
            "scale": undefined,
            "URL": undefined,
            "shownInDetailsView": true,
            "shownInInsertView": true,
            "shownInUpdateView": true,
            "visible": true,
            "dataType": Immutable.Record {
              "conceptURI": undefined,
              "display": "Integer",
              "name": "int",
              "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
              "alternateRangeURI": "xsd:int",
              "shortDisplay": undefined,
              "lookupSchema": undefined,
              "lookupQuery": undefined,
            },
            "lookupQueryValue": undefined,
            "lookupType": Immutable.Record {
              "conceptURI": undefined,
              "display": "Lookup",
              "name": "lookup",
              "rangeURI": "xsd:int",
              "alternateRangeURI": undefined,
              "shortDisplay": undefined,
              "lookupSchema": undefined,
              "lookupQuery": undefined,
            },
            "original": Object {
              "conceptURI": undefined,
              "dataType": Immutable.Record {
                "conceptURI": undefined,
                "display": "Integer",
                "name": "int",
                "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                "alternateRangeURI": "xsd:int",
                "shortDisplay": undefined,
                "lookupSchema": undefined,
                "lookupQuery": undefined,
              },
              "rangeURI": undefined,
            },
            "updatedField": false,
            "isPrimaryKey": false,
            "lockType": "NotLocked",
            "wrappedColumnName": undefined,
          },
          Immutable.Record {
            "conceptURI": undefined,
            "conditionalFormats": Immutable.List [],
            "defaultScale": undefined,
            "defaultValueType": undefined,
            "defaultValue": undefined,
            "defaultDisplayValue": undefined,
            "description": undefined,
            "dimension": undefined,
            "excludeFromShifting": false,
            "format": undefined,
            "hidden": false,
            "importAliases": undefined,
            "label": undefined,
            "lookupContainer": undefined,
            "lookupQuery": undefined,
            "lookupSchema": undefined,
            "lookupValidator": undefined,
            "measure": undefined,
            "mvEnabled": false,
            "name": "field3",
            "PHI": undefined,
            "primaryKey": undefined,
            "propertyId": undefined,
            "propertyURI": undefined,
            "propertyValidators": Immutable.List [],
            "rangeValidators": Immutable.List [],
            "rangeURI": "xsd:dateTime",
            "regexValidators": Immutable.List [],
            "recommendedVariable": false,
            "required": false,
            "scale": undefined,
            "URL": undefined,
            "shownInDetailsView": true,
            "shownInInsertView": true,
            "shownInUpdateView": true,
            "visible": true,
            "dataType": Immutable.Record {
              "conceptURI": undefined,
              "display": "Date Time",
              "name": "dateTime",
              "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
              "alternateRangeURI": "xsd:dateTime",
              "shortDisplay": undefined,
              "lookupSchema": undefined,
              "lookupQuery": undefined,
            },
            "lookupQueryValue": undefined,
            "lookupType": Immutable.Record {
              "conceptURI": undefined,
              "display": "Lookup",
              "name": "lookup",
              "rangeURI": "xsd:dateTime",
              "alternateRangeURI": undefined,
              "shortDisplay": undefined,
              "lookupSchema": undefined,
              "lookupQuery": undefined,
            },
            "original": Object {
              "conceptURI": undefined,
              "dataType": Immutable.Record {
                "conceptURI": undefined,
                "display": "Date Time",
                "name": "dateTime",
                "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                "alternateRangeURI": "xsd:dateTime",
                "shortDisplay": undefined,
                "lookupSchema": undefined,
                "lookupQuery": undefined,
              },
              "rangeURI": undefined,
            },
            "updatedField": false,
            "isPrimaryKey": false,
            "lockType": "NotLocked",
            "wrappedColumnName": undefined,
          },
        ],
        "indices": Immutable.List [],
        "domainException": undefined,
        "mandatoryFieldNames": Immutable.List [],
        "reservedFieldNames": Immutable.List [],
        "newDesignFields": undefined,
        "instructions": undefined,
      }
    }
    domainIndex={1}
    headerPrefix="Test Assay Protocol"
    helpTopic={null}
    initCollapsed={true}
    key="1"
    modelDomains={
      Immutable.List [
        Immutable.Record {
          "name": "Batch Fields",
          "container": undefined,
          "description": undefined,
          "domainURI": undefined,
          "domainId": null,
          "allowFileLinkProperties": true,
          "allowAttachmentProperties": true,
          "allowFlagProperties": true,
          "showDefaultValueSettings": false,
          "defaultDefaultValueType": undefined,
          "defaultValueOptions": Immutable.List [],
          "fields": Immutable.List [],
          "indices": Immutable.List [],
          "domainException": undefined,
          "mandatoryFieldNames": Immutable.List [],
          "reservedFieldNames": Immutable.List [],
          "newDesignFields": undefined,
          "instructions": undefined,
        },
        Immutable.Record {
          "name": "Sample Fields",
          "container": undefined,
          "description": undefined,
          "domainURI": undefined,
          "domainId": null,
          "allowFileLinkProperties": true,
          "allowAttachmentProperties": true,
          "allowFlagProperties": true,
          "showDefaultValueSettings": false,
          "defaultDefaultValueType": undefined,
          "defaultValueOptions": Immutable.List [],
          "fields": Immutable.List [
            Immutable.Record {
              "conceptURI": undefined,
              "conditionalFormats": Immutable.List [],
              "defaultScale": undefined,
              "defaultValueType": undefined,
              "defaultValue": undefined,
              "defaultDisplayValue": undefined,
              "description": undefined,
              "dimension": undefined,
              "excludeFromShifting": false,
              "format": undefined,
              "hidden": false,
              "importAliases": undefined,
              "label": undefined,
              "lookupContainer": undefined,
              "lookupQuery": undefined,
              "lookupSchema": undefined,
              "lookupValidator": undefined,
              "measure": undefined,
              "mvEnabled": false,
              "name": "field1",
              "PHI": undefined,
              "primaryKey": undefined,
              "propertyId": undefined,
              "propertyURI": undefined,
              "propertyValidators": Immutable.List [],
              "rangeValidators": Immutable.List [],
              "rangeURI": "xsd:string",
              "regexValidators": Immutable.List [],
              "recommendedVariable": false,
              "required": false,
              "scale": undefined,
              "URL": undefined,
              "shownInDetailsView": true,
              "shownInInsertView": true,
              "shownInUpdateView": true,
              "visible": true,
              "dataType": Immutable.Record {
                "conceptURI": undefined,
                "display": "Text",
                "name": "string",
                "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                "alternateRangeURI": "xsd:string",
                "shortDisplay": "String",
                "lookupSchema": undefined,
                "lookupQuery": undefined,
              },
              "lookupQueryValue": undefined,
              "lookupType": Immutable.Record {
                "conceptURI": undefined,
                "display": "Lookup",
                "name": "lookup",
                "rangeURI": "xsd:string",
                "alternateRangeURI": undefined,
                "shortDisplay": undefined,
                "lookupSchema": undefined,
                "lookupQuery": undefined,
              },
              "original": Object {
                "conceptURI": undefined,
                "dataType": Immutable.Record {
                  "conceptURI": undefined,
                  "display": "Text",
                  "name": "string",
                  "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                  "alternateRangeURI": "xsd:string",
                  "shortDisplay": "String",
                  "lookupSchema": undefined,
                  "lookupQuery": undefined,
                },
                "rangeURI": undefined,
              },
              "updatedField": false,
              "isPrimaryKey": false,
              "lockType": "NotLocked",
              "wrappedColumnName": undefined,
            },
            Immutable.Record {
              "conceptURI": undefined,
              "conditionalFormats": Immutable.List [],
              "defaultScale": undefined,
              "defaultValueType": undefined,
              "defaultValue": undefined,
              "defaultDisplayValue": undefined,
              "description": undefined,
              "dimension": undefined,
              "excludeFromShifting": false,
              "format": undefined,
              "hidden": false,
              "importAliases": undefined,
              "label": undefined,
              "lookupContainer": undefined,
              "lookupQuery": undefined,
              "lookupSchema": undefined,
              "lookupValidator": undefined,
              "measure": undefined,
              "mvEnabled": false,
              "name": "field2",
              "PHI": undefined,
              "primaryKey": undefined,
              "propertyId": undefined,
              "propertyURI": undefined,
              "propertyValidators": Immutable.List [],
              "rangeValidators": Immutable.List [],
              "rangeURI": "xsd:int",
              "regexValidators": Immutable.List [],
              "recommendedVariable": false,
              "required": false,
              "scale": undefined,
              "URL": undefined,
              "shownInDetailsView": true,
              "shownInInsertView": true,
              "shownInUpdateView": true,
              "visible": true,
              "dataType": Immutable.Record {
                "conceptURI": undefined,
                "display": "Integer",
                "name": "int",
                "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                "alternateRangeURI": "xsd:int",
                "shortDisplay": undefined,
                "lookupSchema": undefined,
                "lookupQuery": undefined,
              },
              "lookupQueryValue": undefined,
              "lookupType": Immutable.Record {
                "conceptURI": undefined,
                "display": "Lookup",
                "name": "lookup",
                "rangeURI": "xsd:int",
                "alternateRangeURI": undefined,
                "shortDisplay": undefined,
                "lookupSchema": undefined,
                "lookupQuery": undefined,
              },
              "original": Object {
                "conceptURI": undefined,
                "dataType": Immutable.Record {
                  "conceptURI": undefined,
                  "display": "Integer",
                  "name": "int",
                  "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                  "alternateRangeURI": "xsd:int",
                  "shortDisplay": undefined,
                  "lookupSchema": undefined,
                  "lookupQuery": undefined,
                },
                "rangeURI": undefined,
              },
              "updatedField": false,
              "isPrimaryKey": false,
              "lockType": "NotLocked",
              "wrappedColumnName": undefined,
            },
            Immutable.Record {
              "conceptURI": undefined,
              "conditionalFormats": Immutable.List [],
              "defaultScale": undefined,
              "defaultValueType": undefined,
              "defaultValue": undefined,
              "defaultDisplayValue": undefined,
              "description": undefined,
              "dimension": undefined,
              "excludeFromShifting": false,
              "format": undefined,
              "hidden": false,
              "importAliases": undefined,
              "label": undefined,
              "lookupContainer": undefined,
              "lookupQuery": undefined,
              "lookupSchema": undefined,
              "lookupValidator": undefined,
              "measure": undefined,
              "mvEnabled": false,
              "name": "field3",
              "PHI": undefined,
              "primaryKey": undefined,
              "propertyId": undefined,
              "propertyURI": undefined,
              "propertyValidators": Immutable.List [],
              "rangeValidators": Immutable.List [],
              "rangeURI": "xsd:dateTime",
              "regexValidators": Immutable.List [],
              "recommendedVariable": false,
              "required": false,
              "scale": undefined,
              "URL": undefined,
              "shownInDetailsView": true,
              "shownInInsertView": true,
              "shownInUpdateView": true,
              "visible": true,
              "dataType": Immutable.Record {
                "conceptURI": undefined,
                "display": "Date Time",
                "name": "dateTime",
                "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                "alternateRangeURI": "xsd:dateTime",
                "shortDisplay": undefined,
                "lookupSchema": undefined,
                "lookupQuery": undefined,
              },
              "lookupQueryValue": undefined,
              "lookupType": Immutable.Record {
                "conceptURI": undefined,
                "display": "Lookup",
                "name": "lookup",
                "rangeURI": "xsd:dateTime",
                "alternateRangeURI": undefined,
                "shortDisplay": undefined,
                "lookupSchema": undefined,
                "lookupQuery": undefined,
              },
              "original": Object {
                "conceptURI": undefined,
                "dataType": Immutable.Record {
                  "conceptURI": undefined,
                  "display": "Date Time",
                  "name": "dateTime",
                  "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                  "alternateRangeURI": "xsd:dateTime",
                  "shortDisplay": undefined,
                  "lookupSchema": undefined,
                  "lookupQuery": undefined,
                },
                "rangeURI": undefined,
              },
              "updatedField": false,
              "isPrimaryKey": false,
              "lockType": "NotLocked",
              "wrappedColumnName": undefined,
            },
          ],
          "indices": Immutable.List [],
          "domainException": undefined,
          "mandatoryFieldNames": Immutable.List [],
          "reservedFieldNames": Immutable.List [],
          "newDesignFields": undefined,
          "instructions": undefined,
        },
      ]
    }
    onChange={[Function]}
    onToggle={[Function]}
    panelStatus="COMPLETE"
    showFilePropertyType={false}
    showInferFromFile={false}
    validate={false}
  >
    <LookupProvider>
      <DomainFormImpl
        appPropertiesOnly={false}
        controlledCollapse={true}
        domain={
          Immutable.Record {
            "name": "Sample Fields",
            "container": undefined,
            "description": undefined,
            "domainURI": undefined,
            "domainId": null,
            "allowFileLinkProperties": true,
            "allowAttachmentProperties": true,
            "allowFlagProperties": true,
            "showDefaultValueSettings": false,
            "defaultDefaultValueType": undefined,
            "defaultValueOptions": Immutable.List [],
            "fields": Immutable.List [
              Immutable.Record {
                "conceptURI": undefined,
                "conditionalFormats": Immutable.List [],
                "defaultScale": undefined,
                "defaultValueType": undefined,
                "defaultValue": undefined,
                "defaultDisplayValue": undefined,
                "description": undefined,
                "dimension": undefined,
                "excludeFromShifting": false,
                "format": undefined,
                "hidden": false,
                "importAliases": undefined,
                "label": undefined,
                "lookupContainer": undefined,
                "lookupQuery": undefined,
                "lookupSchema": undefined,
                "lookupValidator": undefined,
                "measure": undefined,
                "mvEnabled": false,
                "name": "field1",
                "PHI": undefined,
                "primaryKey": undefined,
                "propertyId": undefined,
                "propertyURI": undefined,
                "propertyValidators": Immutable.List [],
                "rangeValidators": Immutable.List [],
                "rangeURI": "xsd:string",
                "regexValidators": Immutable.List [],
                "recommendedVariable": false,
                "required": false,
                "scale": undefined,
                "URL": undefined,
                "shownInDetailsView": true,
                "shownInInsertView": true,
                "shownInUpdateView": true,
                "visible": true,
                "dataType": Immutable.Record {
                  "conceptURI": undefined,
                  "display": "Text",
                  "name": "string",
                  "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                  "alternateRangeURI": "xsd:string",
                  "shortDisplay": "String",
                  "lookupSchema": undefined,
                  "lookupQuery": undefined,
                },
                "lookupQueryValue": undefined,
                "lookupType": Immutable.Record {
                  "conceptURI": undefined,
                  "display": "Lookup",
                  "name": "lookup",
                  "rangeURI": "xsd:string",
                  "alternateRangeURI": undefined,
                  "shortDisplay": undefined,
                  "lookupSchema": undefined,
                  "lookupQuery": undefined,
                },
                "original": Object {
                  "conceptURI": undefined,
                  "dataType": Immutable.Record {
                    "conceptURI": undefined,
                    "display": "Text",
                    "name": "string",
                    "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                    "alternateRangeURI": "xsd:string",
                    "shortDisplay": "String",
                    "lookupSchema": undefined,
                    "lookupQuery": undefined,
                  },
                  "rangeURI": undefined,
                },
                "updatedField": false,
                "isPrimaryKey": false,
                "lockType": "NotLocked",
                "wrappedColumnName": undefined,
              },
              Immutable.Record {
                "conceptURI": undefined,
                "conditionalFormats": Immutable.List [],
                "defaultScale": undefined,
                "defaultValueType": undefined,
                "defaultValue": undefined,
                "defaultDisplayValue": undefined,
                "description": undefined,
                "dimension": undefined,
                "excludeFromShifting": false,
                "format": undefined,
                "hidden": false,
                "importAliases": undefined,
                "label": undefined,
                "lookupContainer": undefined,
                "lookupQuery": undefined,
                "lookupSchema": undefined,
                "lookupValidator": undefined,
                "measure": undefined,
                "mvEnabled": false,
                "name": "field2",
                "PHI": undefined,
                "primaryKey": undefined,
                "propertyId": undefined,
                "propertyURI": undefined,
                "propertyValidators": Immutable.List [],
                "rangeValidators": Immutable.List [],
                "rangeURI": "xsd:int",
                "regexValidators": Immutable.List [],
                "recommendedVariable": false,
                "required": false,
                "scale": undefined,
                "URL": undefined,
                "shownInDetailsView": true,
                "shownInInsertView": true,
                "shownInUpdateView": true,
                "visible": true,
                "dataType": Immutable.Record {
                  "conceptURI": undefined,
                  "display": "Integer",
                  "name": "int",
                  "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                  "alternateRangeURI": "xsd:int",
                  "shortDisplay": undefined,
                  "lookupSchema": undefined,
                  "lookupQuery": undefined,
                },
                "lookupQueryValue": undefined,
                "lookupType": Immutable.Record {
                  "conceptURI": undefined,
                  "display": "Lookup",
                  "name": "lookup",
                  "rangeURI": "xsd:int",
                  "alternateRangeURI": undefined,
                  "shortDisplay": undefined,
                  "lookupSchema": undefined,
                  "lookupQuery": undefined,
                },
                "original": Object {
                  "conceptURI": undefined,
                  "dataType": Immutable.Record {
                    "conceptURI": undefined,
                    "display": "Integer",
                    "name": "int",
                    "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                    "alternateRangeURI": "xsd:int",
                    "shortDisplay": undefined,
                    "lookupSchema": undefined,
                    "lookupQuery": undefined,
                  },
                  "rangeURI": undefined,
                },
                "updatedField": false,
                "isPrimaryKey": false,
                "lockType": "NotLocked",
                "wrappedColumnName": undefined,
              },
              Immutable.Record {
                "conceptURI": undefined,
                "conditionalFormats": Immutable.List [],
                "defaultScale": undefined,
                "defaultValueType": undefined,
                "defaultValue": undefined,
                "defaultDisplayValue": undefined,
                "description": undefined,
                "dimension": undefined,
                "excludeFromShifting": false,
                "format": undefined,
                "hidden": false,
                "importAliases": undefined,
                "label": undefined,
                "lookupContainer": undefined,
                "lookupQuery": undefined,
                "lookupSchema": undefined,
                "lookupValidator": undefined,
                "measure": undefined,
                "mvEnabled": false,
                "name": "field3",
                "PHI": undefined,
                "primaryKey": undefined,
                "propertyId": undefined,
                "propertyURI": undefined,
                "propertyValidators": Immutable.List [],
                "rangeValidators": Immutable.List [],
                "rangeURI": "xsd:dateTime",
                "regexValidators": Immutable.List [],
                "recommendedVariable": false,
                "required": false,
                "scale": undefined,
                "URL": undefined,
                "shownInDetailsView": true,
                "shownInInsertView": true,
                "shownInUpdateView": true,
                "visible": true,
                "dataType": Immutable.Record {
                  "conceptURI": undefined,
                  "display": "Date Time",
                  "name": "dateTime",
                  "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                  "alternateRangeURI": "xsd:dateTime",
                  "shortDisplay": undefined,
                  "lookupSchema": undefined,
                  "lookupQuery": undefined,
                },
                "lookupQueryValue": undefined,
                "lookupType": Immutable.Record {
                  "conceptURI": undefined,
                  "display": "Lookup",
                  "name": "lookup",
                  "rangeURI": "xsd:dateTime",
                  "alternateRangeURI": undefined,
                  "shortDisplay": undefined,
                  "lookupSchema": undefined,
                  "lookupQuery": undefined,
                },
                "original": Object {
                  "conceptURI": undefined,
                  "dataType": Immutable.Record {
                    "conceptURI": undefined,
                    "display": "Date Time",
                    "name": "dateTime",
                    "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                    "alternateRangeURI": "xsd:dateTime",
                    "shortDisplay": undefined,
                    "lookupSchema": undefined,
                    "lookupQuery": undefined,
                  },
                  "rangeURI": undefined,
                },
                "updatedField": false,
                "isPrimaryKey": false,
                "lockType": "NotLocked",
                "wrappedColumnName": undefined,
              },
            ],
            "indices": Immutable.List [],
            "domainException": undefined,
            "mandatoryFieldNames": Immutable.List [],
            "reservedFieldNames": Immutable.List [],
            "newDesignFields": undefined,
            "instructions": undefined,
          }
        }
        domainFormDisplayOptions={
          Object {
            "isDragDisabled": false,
            "phiLevelDisabled": false,
            "showAddFieldsButton": true,
            "showRequired": true,
            "showTextOptions": true,
            "showValidators": true,
          }
        }
        domainIndex={1}
        headerPrefix="Test Assay Protocol"
        helpNoun="field designer"
        helpTopic={null}
        initCollapsed={true}
        isNew={false}
        modelDomains={
          Immutable.List [
            Immutable.Record {
              "name": "Batch Fields",
              "container": undefined,
              "description": undefined,
              "domainURI": undefined,
              "domainId": null,
              "allowFileLinkProperties": true,
              "allowAttachmentProperties": true,
              "allowFlagProperties": true,
              "showDefaultValueSettings": false,
              "defaultDefaultValueType": undefined,
              "defaultValueOptions": Immutable.List [],
              "fields": Immutable.List [],
              "indices": Immutable.List [],
              "domainException": undefined,
              "mandatoryFieldNames": Immutable.List [],
              "reservedFieldNames": Immutable.List [],
              "newDesignFields": undefined,
              "instructions": undefined,
            },
            Immutable.Record {
              "name": "Sample Fields",
              "container": undefined,
              "description": undefined,
              "domainURI": undefined,
              "domainId": null,
              "allowFileLinkProperties": true,
              "allowAttachmentProperties": true,
              "allowFlagProperties": true,
              "showDefaultValueSettings": false,
              "defaultDefaultValueType": undefined,
              "defaultValueOptions": Immutable.List [],
              "fields": Immutable.List [
                Immutable.Record {
                  "conceptURI": undefined,
                  "conditionalFormats": Immutable.List [],
                  "defaultScale": undefined,
                  "defaultValueType": undefined,
                  "defaultValue": undefined,
                  "defaultDisplayValue": undefined,
                  "description": undefined,
                  "dimension": undefined,
                  "excludeFromShifting": false,
                  "format": undefined,
                  "hidden": false,
                  "importAliases": undefined,
                  "label": undefined,
                  "lookupContainer": undefined,
                  "lookupQuery": undefined,
                  "lookupSchema": undefined,
                  "lookupValidator": undefined,
                  "measure": undefined,
                  "mvEnabled": false,
                  "name": "field1",
                  "PHI": undefined,
                  "primaryKey": undefined,
                  "propertyId": undefined,
                  "propertyURI": undefined,
                  "propertyValidators": Immutable.List [],
                  "rangeValidators": Immutable.List [],
                  "rangeURI": "xsd:string",
                  "regexValidators": Immutable.List [],
                  "recommendedVariable": false,
                  "required": false,
                  "scale": undefined,
                  "URL": undefined,
                  "shownInDetailsView": true,
                  "shownInInsertView": true,
                  "shownInUpdateView": true,
                  "visible": true,
                  "dataType": Immutable.Record {
                    "conceptURI": undefined,
                    "display": "Text",
                    "name": "string",
                    "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                    "alternateRangeURI": "xsd:string",
                    "shortDisplay": "String",
                    "lookupSchema": undefined,
                    "lookupQuery": undefined,
                  },
                  "lookupQueryValue": undefined,
                  "lookupType": Immutable.Record {
                    "conceptURI": undefined,
                    "display": "Lookup",
                    "name": "lookup",
                    "rangeURI": "xsd:string",
                    "alternateRangeURI": undefined,
                    "shortDisplay": undefined,
                    "lookupSchema": undefined,
                    "lookupQuery": undefined,
                  },
                  "original": Object {
                    "conceptURI": undefined,
                    "dataType": Immutable.Record {
                      "conceptURI": undefined,
                      "display": "Text",
                      "name": "string",
                      "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                      "alternateRangeURI": "xsd:string",
                      "shortDisplay": "String",
                      "lookupSchema": undefined,
                      "lookupQuery": undefined,
                    },
                    "rangeURI": undefined,
                  },
                  "updatedField": false,
                  "isPrimaryKey": false,
                  "lockType": "NotLocked",
                  "wrappedColumnName": undefined,
                },
                Immutable.Record {
                  "conceptURI": undefined,
                  "conditionalFormats": Immutable.List [],
                  "defaultScale": undefined,
                  "defaultValueType": undefined,
                  "defaultValue": undefined,
                  "defaultDisplayValue": undefined,
                  "description": undefined,
                  "dimension": undefined,
                  "excludeFromShifting": false,
                  "format": undefined,
                  "hidden": false,
                  "importAliases": undefined,
                  "label": undefined,
                  "lookupContainer": undefined,
                  "lookupQuery": undefined,
                  "lookupSchema": undefined,
                  "lookupValidator": undefined,
                  "measure": undefined,
                  "mvEnabled": false,
                  "name": "field2",
                  "PHI": undefined,
                  "primaryKey": undefined,
                  "propertyId": undefined,
                  "propertyURI": undefined,
                  "propertyValidators": Immutable.List [],
                  "rangeValidators": Immutable.List [],
                  "rangeURI": "xsd:int",
                  "regexValidators": Immutable.List [],
                  "recommendedVariable": false,
                  "required": false,
                  "scale": undefined,
                  "URL": undefined,
                  "shownInDetailsView": true,
                  "shownInInsertView": true,
                  "shownInUpdateView": true,
                  "visible": true,
                  "dataType": Immutable.Record {
                    "conceptURI": undefined,
                    "display": "Integer",
                    "name": "int",
                    "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                    "alternateRangeURI": "xsd:int",
                    "shortDisplay": undefined,
                    "lookupSchema": undefined,
                    "lookupQuery": undefined,
                  },
                  "lookupQueryValue": undefined,
                  "lookupType": Immutable.Record {
                    "conceptURI": undefined,
                    "display": "Lookup",
                    "name": "lookup",
                    "rangeURI": "xsd:int",
                    "alternateRangeURI": undefined,
                    "shortDisplay": undefined,
                    "lookupSchema": undefined,
                    "lookupQuery": undefined,
                  },
                  "original": Object {
                    "conceptURI": undefined,
                    "dataType": Immutable.Record {
                      "conceptURI": undefined,
                      "display": "Integer",
                      "name": "int",
                      "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                      "alternateRangeURI": "xsd:int",
                      "shortDisplay": undefined,
                      "lookupSchema": undefined,
                      "lookupQuery": undefined,
                    },
                    "rangeURI": undefined,
                  },
                  "updatedField": false,
                  "isPrimaryKey": false,
                  "lockType": "NotLocked",
                  "wrappedColumnName": undefined,
                },
                Immutable.Record {
                  "conceptURI": undefined,
                  "conditionalFormats": Immutable.List [],
                  "defaultScale": undefined,
                  "defaultValueType": undefined,
                  "defaultValue": undefined,
                  "defaultDisplayValue": undefined,
                  "description": undefined,
                  "dimension": undefined,
                  "excludeFromShifting": false,
                  "format": undefined,
                  "hidden": false,
                  "importAliases": undefined,
                  "label": undefined,
                  "lookupContainer": undefined,
                  "lookupQuery": undefined,
                  "lookupSchema": undefined,
                  "lookupValidator": undefined,
                  "measure": undefined,
                  "mvEnabled": false,
                  "name": "field3",
                  "PHI": undefined,
                  "primaryKey": undefined,
                  "propertyId": undefined,
                  "propertyURI": undefined,
                  "propertyValidators": Immutable.List [],
                  "rangeValidators": Immutable.List [],
                  "rangeURI": "xsd:dateTime",
                  "regexValidators": Immutable.List [],
                  "recommendedVariable": false,
                  "required": false,
                  "scale": undefined,
                  "URL": undefined,
                  "shownInDetailsView": true,
                  "shownInInsertView": true,
                  "shownInUpdateView": true,
                  "visible": true,
                  "dataType": Immutable.Record {
                    "conceptURI": undefined,
                    "display": "Date Time",
                    "name": "dateTime",
                    "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                    "alternateRangeURI": "xsd:dateTime",
                    "shortDisplay": undefined,
                    "lookupSchema": undefined,
                    "lookupQuery": undefined,
                  },
                  "lookupQueryValue": undefined,
                  "lookupType": Immutable.Record {
                    "conceptURI": undefined,
                    "display": "Lookup",
                    "name": "lookup",
                    "rangeURI": "xsd:dateTime",
                    "alternateRangeURI": undefined,
                    "shortDisplay": undefined,
                    "lookupSchema": undefined,
                    "lookupQuery": undefined,
                  },
                  "original": Object {
                    "conceptURI": undefined,
                    "dataType": Immutable.Record {
                      "conceptURI": undefined,
                      "display": "Date Time",
                      "name": "dateTime",
                      "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                      "alternateRangeURI": "xsd:dateTime",
                      "shortDisplay": undefined,
                      "lookupSchema": undefined,
                      "lookupQuery": undefined,
                    },
                    "rangeURI": undefined,
                  },
                  "updatedField": false,
                  "isPrimaryKey": false,
                  "lockType": "NotLocked",
                  "wrappedColumnName": undefined,
                },
              ],
              "indices": Immutable.List [],
              "domainException": undefined,
              "mandatoryFieldNames": Immutable.List [],
              "reservedFieldNames": Immutable.List [],
              "newDesignFields": undefined,
              "instructions": undefined,
            },
          ]
        }
        onChange={[Function]}
        onToggle={[Function]}
        panelStatus="COMPLETE"
        showFilePropertyType={false}
        showHeader={true}
        showInferFromFile={false}
        successBsStyle="success"
        validate={false}
      >
        <Uncontrolled(Panel)
          className="domain-form-panel"
          expanded={false}
          onToggle={[Function]}
        >
          <Panel
            bsClass="panel"
            bsStyle="default"
            className="domain-form-panel"
            expanded={false}
            onToggle={[Function]}
          >
            <div
              className="domain-form-panel panel panel-default"
            >
              <CollapsiblePanelHeader
                collapsed={true}
                controlledCollapse={true}
                headerDetails="3 Fields Defined"
                id="domainpropertiesrow-Sample-Fields-hdr"
                isValid={true}
                panelStatus="COMPLETE"
                title="Sample Fields"
                togglePanel={[Function]}
              >
                <PanelHeading
                  bsClass="panel"
                  className="domain-panel-header domain-heading-collapsible domain-panel-header-collapsed"
                  componentClass="div"
                  id="domainpropertiesrow-Sample-Fields-hdr"
                  onClick={[Function]}
                >
                  <div
                    className="domain-panel-header domain-heading-collapsible domain-panel-header-collapsed panel-heading"
                    id="domainpropertiesrow-Sample-Fields-hdr"
                    onClick={[Function]}
                  >
                    <span
                      className="domain-panel-status-icon domain-panel-status-icon-green"
                    >
                      <FontAwesomeIcon
                        border={false}
                        className=""
                        fixedWidth={false}
                        flip={null}
                        icon={
                          Object {
                            "icon": Array [
                              512,
                              512,
                              Array [],
                              "f058",
                              "M504 256c0 136.967-111.033 248-248 248S8 392.967 8 256 119.033 8 256 8s248 111.033 248 248zM227.314 387.314l184-184c6.248-6.248 6.248-16.379 0-22.627l-22.627-22.627c-6.248-6.249-16.379-6.249-22.628 0L216 308.118l-70.059-70.059c-6.248-6.248-16.379-6.248-22.628 0l-22.627 22.627c-6.248 6.248-6.248 16.379 0 22.627l104 104c6.249 6.249 16.379 6.249 22.628.001z",
                            ],
                            "iconName": "check-circle",
                            "prefix": "fas",
                          }
                        }
                        inverse={false}
                        listItem={false}
                        mask={null}
                        pull={null}
                        pulse={false}
                        rotation={null}
                        size={null}
                        spin={false}
                        symbol={false}
                        title=""
                        transform={null}
                      >
                        <svg
                          aria-hidden="true"
                          className="svg-inline--fa fa-check-circle fa-w-16 "
                          data-icon="check-circle"
                          data-prefix="fas"
                          focusable="false"
                          role="img"
                          style={Object {}}
                          viewBox="0 0 512 512"
                          xmlns="http://www.w3.org/2000/svg"
                        >
                          <path
                            d="M504 256c0 136.967-111.033 248-248 248S8 392.967 8 256 119.033 8 256 8s248 111.033 248 248zM227.314 387.314l184-184c6.248-6.248 6.248-16.379 0-22.627l-22.627-22.627c-6.248-6.249-16.379-6.249-22.628 0L216 308.118l-70.059-70.059c-6.248-6.248-16.379-6.248-22.628 0l-22.627 22.627c-6.248 6.248-6.248 16.379 0 22.627l104 104c6.249 6.249 16.379 6.249 22.628.001z"
                            fill="currentColor"
                            style={Object {}}
                          />
                        </svg>
                      </FontAwesomeIcon>
                    </span>
                    <span
                      className="domain-panel-title"
                    >
                      Sample Fields
                    </span>
                    <span
                      className="pull-right"
                    >
                      <FontAwesomeIcon
                        border={false}
                        className="domain-form-expand-btn"
                        fixedWidth={false}
                        flip={null}
                        icon={
                          Object {
                            "icon": Array [
                              448,
                              512,
                              Array [],
                              "f0fe",
                              "M400 32H48C21.5 32 0 53.5 0 80v352c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V80c0-26.5-21.5-48-48-48zm-32 252c0 6.6-5.4 12-12 12h-92v92c0 6.6-5.4 12-12 12h-56c-6.6 0-12-5.4-12-12v-92H92c-6.6 0-12-5.4-12-12v-56c0-6.6 5.4-12 12-12h92v-92c0-6.6 5.4-12 12-12h56c6.6 0 12 5.4 12 12v92h92c6.6 0 12 5.4 12 12v56z",
                            ],
                            "iconName": "plus-square",
                            "prefix": "fas",
                          }
                        }
                        inverse={false}
                        listItem={false}
                        mask={null}
                        pull={null}
                        pulse={false}
                        rotation={null}
                        size="lg"
                        spin={false}
                        symbol={false}
                        title=""
                        transform={null}
                      >
                        <svg
                          aria-hidden="true"
                          className="svg-inline--fa fa-plus-square fa-w-14 fa-lg domain-form-expand-btn"
                          data-icon="plus-square"
                          data-prefix="fas"
                          focusable="false"
                          role="img"
                          style={Object {}}
                          viewBox="0 0 448 512"
                          xmlns="http://www.w3.org/2000/svg"
                        >
                          <path
                            d="M400 32H48C21.5 32 0 53.5 0 80v352c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V80c0-26.5-21.5-48-48-48zm-32 252c0 6.6-5.4 12-12 12h-92v92c0 6.6-5.4 12-12 12h-56c-6.6 0-12-5.4-12-12v-92H92c-6.6 0-12-5.4-12-12v-56c0-6.6 5.4-12 12-12h92v-92c0-6.6 5.4-12 12-12h56c6.6 0 12 5.4 12 12v92h92c6.6 0 12 5.4 12 12v56z"
                            fill="currentColor"
                            style={Object {}}
                          />
                        </svg>
                      </FontAwesomeIcon>
                    </span>
                    <LabelHelpTip
                      body={[Function]}
                      customStyle={
                        Object {
                          "marginLeft": "5px",
                          "verticalAlign": "top",
                        }
                      }
                      id="tooltip"
                      placement="top"
                      size="1x"
                      title="Sample Fields"
                    >
                      <span
                        className="label-help-target"
                        onMouseOut={[Function]}
                        onMouseOver={[Function]}
                      >
                        <FontAwesomeIcon
                          border={false}
                          className="label-help-icon"
                          fixedWidth={false}
                          flip={null}
                          icon={
                            Object {
                              "icon": Array [
                                512,
                                512,
                                Array [],
                                "f059",
                                "M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z",
                              ],
                              "iconName": "question-circle",
                              "prefix": "fas",
                            }
                          }
                          inverse={false}
                          listItem={false}
                          mask={null}
                          pull={null}
                          pulse={false}
                          rotation={null}
                          size="1x"
                          spin={false}
                          style={
                            Object {
                              "marginLeft": "5px",
                              "verticalAlign": "top",
                            }
                          }
                          symbol={false}
                          title=""
                          transform={null}
                        >
                          <svg
                            aria-hidden="true"
                            className="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                            data-icon="question-circle"
                            data-prefix="fas"
                            focusable="false"
                            role="img"
                            style={
                              Object {
                                "marginLeft": "5px",
                                "verticalAlign": "top",
                              }
                            }
                            viewBox="0 0 512 512"
                            xmlns="http://www.w3.org/2000/svg"
                          >
                            <path
                              d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                              fill="currentColor"
                              style={Object {}}
                            />
                          </svg>
                        </FontAwesomeIcon>
                        <Overlay
                          animation={[Function]}
                          placement="top"
                          rootClose={false}
                          show={false}
                          target={
                            <span
                              class="label-help-target"
                            >
                              <svg
                                aria-hidden="true"
                                class="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                                data-icon="question-circle"
                                data-prefix="fas"
                                focusable="false"
                                role="img"
                                style="vertical-align: top; margin-left: 5px;"
                                viewBox="0 0 512 512"
                                xmlns="http://www.w3.org/2000/svg"
                              >
                                <path
                                  d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                  fill="currentColor"
                                />
                              </svg>
                            </span>
                          }
                        >
                          <Overlay
                            placement="top"
                            rootClose={false}
                            show={false}
                            target={
                              <span
                                class="label-help-target"
                              >
                                <svg
                                  aria-hidden="true"
                                  class="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                                  data-icon="question-circle"
                                  data-prefix="fas"
                                  focusable="false"
                                  role="img"
                                  style="vertical-align: top; margin-left: 5px;"
                                  viewBox="0 0 512 512"
                                  xmlns="http://www.w3.org/2000/svg"
                                >
                                  <path
                                    d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                    fill="currentColor"
                                  />
                                </svg>
                              </span>
                            }
                            transition={[Function]}
                          />
                        </Overlay>
                      </span>
                    </LabelHelpTip>
                    <span
                      className="domain-panel-header-fields-defined"
                    >
                      3 Fields Defined
                    </span>
                  </div>
                </PanelHeading>
              </CollapsiblePanelHeader>
              <PanelBody
                bsClass="panel"
                collapsible={true}
              >
                <PanelCollapse
                  bsClass="panel"
                >
                  <Collapse
                    appear={false}
                    dimension="height"
                    getDimensionValue={[Function]}
                    in={false}
                    mountOnEnter={false}
                    timeout={300}
                    unmountOnExit={false}
                  >
                    <Transition
                      appear={false}
                      aria-expanded={null}
                      enter={true}
                      exit={true}
                      in={false}
                      mountOnEnter={false}
                      onEnter={[Function]}
                      onEntered={[Function]}
                      onEntering={[Function]}
                      onExit={[Function]}
                      onExited={[Function]}
                      onExiting={[Function]}
                      timeout={300}
                      unmountOnExit={false}
                    >
                      <div
                        aria-expanded={null}
                        className="panel-collapse collapse"
                      >
                        <div
                          className="panel-body"
                        >
                          <Row
                            bsClass="row"
                            className=""
                            componentClass="div"
                          >
                            <div
                              className="row"
                            >
                              <Col
                                bsClass="col"
                                componentClass="div"
                                xs={12}
                              >
                                <div
                                  className="col-xs-12"
                                />
                              </Col>
                            </div>
                          </Row>
                          <Row
                            bsClass="row"
                            componentClass="div"
                          >
                            <div
                              className="row"
                            >
                              <Col
                                bsClass="col"
                                componentClass="div"
                                xs={3}
                              >
                                <div
                                  className="col-xs-3"
                                >
                                  <FormControl
                                    bsClass="form-control"
                                    componentClass="input"
                                    id="domain-search-name-1"
                                    onChange={[Function]}
                                    placeholder="Search Fields"
                                    type="text"
                                  >
                                    <input
                                      className="form-control"
                                      id="domain-search-name-1"
                                      onChange={[Function]}
                                      placeholder="Search Fields"
                                      type="text"
                                    />
                                  </FormControl>
                                </div>
                              </Col>
                            </div>
                          </Row>
                          <DragDropContext
                            onBeforeDragStart={[Function]}
                            onDragEnd={[Function]}
                          >
                            <ErrorBoundary>
                              <App
                                onBeforeDragStart={[Function]}
                                onDragEnd={[Function]}
                                setOnError={[Function]}
                                uniqueId={1}
                              >
                                <Provider
                                  context={
                                    Object {
                                      "$$typeof": Symbol(react.context),
                                      "Consumer": Object {
                                        "$$typeof": Symbol(react.context),
                                        "_calculateChangedBits": null,
                                        "_context": [Circular],
                                      },
                                      "Provider": Object {
                                        "$$typeof": Symbol(react.provider),
                                        "_context": [Circular],
                                      },
                                      "_calculateChangedBits": null,
                                      "_currentRenderer": Object {},
                                      "_currentRenderer2": null,
                                      "_currentValue": null,
                                      "_currentValue2": null,
                                      "_threadCount": 0,
                                    }
                                  }
                                  store={
                                    Object {
                                      "dispatch": [Function],
                                      "getState": [Function],
                                      "replaceReducer": [Function],
                                      "subscribe": [Function],
                                      Symbol(observable): [Function],
                                    }
                                  }
                                >
                                  <Container>
                                    <div
                                      onScroll={[Function]}
                                      onTouchEnd={[Function]}
                                      onTouchMove={[Function]}
                                      onTouchStart={[Function]}
                                    >
                                      <Sticky
                                        bottomOffset={0}
                                        disableCompensation={false}
                                        disableHardwareAcceleration={false}
                                        relative={false}
                                        topOffset={0}
                                      >
                                        <div>
                                          <div />
                                          <div
                                            style={
                                              Object {
                                                "top": 0,
                                                "zIndex": 1000,
                                              }
                                            }
                                          >
                                            <div
                                              className="domain-floating-hdr"
                                            >
                                              <Row
                                                bsClass="row"
                                                className="domain-form-hdr-row"
                                                componentClass="div"
                                              >
                                                <div
                                                  className="domain-form-hdr-row row"
                                                >
                                                  <Col
                                                    bsClass="col"
                                                    componentClass="div"
                                                    xs={6}
                                                  >
                                                    <div
                                                      className="col-xs-6"
                                                    >
                                                      <Col
                                                        bsClass="col"
                                                        componentClass="div"
                                                        xs={6}
                                                      >
                                                        <div
                                                          className="col-xs-6"
                                                        >
                                                          <b>
                                                            Name
                                                          </b>
                                                        </div>
                                                      </Col>
                                                      <Col
                                                        bsClass="col"
                                                        componentClass="div"
                                                        xs={4}
                                                      >
                                                        <div
                                                          className="col-xs-4"
                                                        >
                                                          <b>
                                                            Data Type
                                                          </b>
                                                        </div>
                                                      </Col>
                                                      <Col
                                                        bsClass="col"
                                                        className="domain-form-hdr-center"
                                                        componentClass="div"
                                                        xs={2}
                                                      >
                                                        <div
                                                          className="domain-form-hdr-center col-xs-2"
                                                        >
                                                          <b>
                                                            Required
                                                          </b>
                                                        </div>
                                                      </Col>
                                                    </div>
                                                  </Col>
                                                  <Col
                                                    bsClass="col"
                                                    componentClass="div"
                                                    xs={6}
                                                  >
                                                    <div
                                                      className="col-xs-6"
                                                    >
                                                      <b>
                                                        Details
                                                      </b>
                                                    </div>
                                                  </Col>
                                                </div>
                                              </Row>
                                            </div>
                                          </div>
                                        </div>
                                      </Sticky>
                                      <ConnectFunction
                                        direction="vertical"
                                        droppableId="domain-form-droppable"
                                        ignoreContainerClipping={false}
                                        isCombineEnabled={false}
                                        isDropDisabled={false}
                                        type="DEFAULT"
                                      >
                                        <Droppable
                                          direction="vertical"
                                          droppableId="domain-form-droppable"
                                          ignoreContainerClipping={false}
                                          isCombineEnabled={false}
                                          isDropDisabled={false}
                                          placeholder={null}
                                          shouldAnimatePlaceholder={true}
                                          snapshot={
                                            Object {
                                              "draggingFromThisWith": null,
                                              "draggingOverWith": null,
                                              "isDraggingOver": false,
                                            }
                                          }
                                          type="DEFAULT"
                                          updateViewportMaxScroll={[Function]}
                                        >
                                          <div
                                            data-react-beautiful-dnd-droppable="1"
                                          >
                                            <Form
                                              bsClass="form"
                                              componentClass="form"
                                              horizontal={false}
                                              inline={false}
                                            >
                                              <form
                                                className=""
                                              >
                                                <DomainRow
                                                  appPropertiesOnly={false}
                                                  availableTypes={
                                                    Immutable.List [
                                                      Immutable.Record {
                                                        "conceptURI": undefined,
                                                        "display": "Text",
                                                        "name": "string",
                                                        "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                        "alternateRangeURI": "xsd:string",
                                                        "shortDisplay": "String",
                                                        "lookupSchema": undefined,
                                                        "lookupQuery": undefined,
                                                      },
                                                      Immutable.Record {
                                                        "conceptURI": undefined,
                                                        "display": "Multi-Line Text",
                                                        "name": "multiLine",
                                                        "rangeURI": "http://www.w3.org/2001/XMLSchema#multiLine",
                                                        "alternateRangeURI": undefined,
                                                        "shortDisplay": undefined,
                                                        "lookupSchema": undefined,
                                                        "lookupQuery": undefined,
                                                      },
                                                      Immutable.Record {
                                                        "conceptURI": undefined,
                                                        "display": "Boolean",
                                                        "name": "boolean",
                                                        "rangeURI": "http://www.w3.org/2001/XMLSchema#boolean",
                                                        "alternateRangeURI": "xsd:boolean",
                                                        "shortDisplay": undefined,
                                                        "lookupSchema": undefined,
                                                        "lookupQuery": undefined,
                                                      },
                                                      Immutable.Record {
                                                        "conceptURI": undefined,
                                                        "display": "Integer",
                                                        "name": "int",
                                                        "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                                        "alternateRangeURI": "xsd:int",
                                                        "shortDisplay": undefined,
                                                        "lookupSchema": undefined,
                                                        "lookupQuery": undefined,
                                                      },
                                                      Immutable.Record {
                                                        "conceptURI": undefined,
                                                        "display": "Decimal",
                                                        "name": "double",
                                                        "rangeURI": "http://www.w3.org/2001/XMLSchema#double",
                                                        "alternateRangeURI": "xsd:double",
                                                        "shortDisplay": undefined,
                                                        "lookupSchema": undefined,
                                                        "lookupQuery": undefined,
                                                      },
                                                      Immutable.Record {
                                                        "conceptURI": undefined,
                                                        "display": "Date Time",
                                                        "name": "dateTime",
                                                        "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                                                        "alternateRangeURI": "xsd:dateTime",
                                                        "shortDisplay": undefined,
                                                        "lookupSchema": undefined,
                                                        "lookupQuery": undefined,
                                                      },
                                                      Immutable.Record {
                                                        "conceptURI": "http://www.labkey.org/exp/xml#flag",
                                                        "display": "Flag",
                                                        "name": "flag",
                                                        "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                        "alternateRangeURI": undefined,
                                                        "shortDisplay": undefined,
                                                        "lookupSchema": undefined,
                                                        "lookupQuery": undefined,
                                                      },
                                                      Immutable.Record {
                                                        "conceptURI": undefined,
                                                        "display": "File",
                                                        "name": "fileLink",
                                                        "rangeURI": "http://cpas.fhcrc.org/exp/xml#fileLink",
                                                        "alternateRangeURI": undefined,
                                                        "shortDisplay": undefined,
                                                        "lookupSchema": undefined,
                                                        "lookupQuery": undefined,
                                                      },
                                                      Immutable.Record {
                                                        "conceptURI": undefined,
                                                        "display": "Attachment",
                                                        "name": "attachment",
                                                        "rangeURI": "http://www.labkey.org/exp/xml#attachment",
                                                        "alternateRangeURI": undefined,
                                                        "shortDisplay": undefined,
                                                        "lookupSchema": undefined,
                                                        "lookupQuery": undefined,
                                                      },
                                                      Immutable.Record {
                                                        "conceptURI": undefined,
                                                        "display": "User",
                                                        "name": "users",
                                                        "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                                        "alternateRangeURI": undefined,
                                                        "shortDisplay": undefined,
                                                        "lookupSchema": "core",
                                                        "lookupQuery": "users",
                                                      },
                                                      Immutable.Record {
                                                        "conceptURI": "http://cpas.labkey.com/Study#ParticipantId",
                                                        "display": "Subject/Participant",
                                                        "name": "ParticipantId",
                                                        "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                        "alternateRangeURI": undefined,
                                                        "shortDisplay": undefined,
                                                        "lookupSchema": undefined,
                                                        "lookupQuery": undefined,
                                                      },
                                                      Immutable.Record {
                                                        "conceptURI": undefined,
                                                        "display": "Lookup",
                                                        "name": "lookup",
                                                        "rangeURI": undefined,
                                                        "alternateRangeURI": undefined,
                                                        "shortDisplay": undefined,
                                                        "lookupSchema": undefined,
                                                        "lookupQuery": undefined,
                                                      },
                                                      Immutable.Record {
                                                        "conceptURI": "http://www.labkey.org/exp/xml#sample",
                                                        "display": "Sample",
                                                        "name": "sample",
                                                        "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                                        "alternateRangeURI": undefined,
                                                        "shortDisplay": undefined,
                                                        "lookupSchema": undefined,
                                                        "lookupQuery": undefined,
                                                      },
                                                    ]
                                                  }
                                                  defaultValueOptions={Immutable.List []}
                                                  domainFormDisplayOptions={
                                                    Object {
                                                      "isDragDisabled": false,
                                                      "phiLevelDisabled": false,
                                                      "showAddFieldsButton": true,
                                                      "showRequired": true,
                                                      "showTextOptions": true,
                                                      "showValidators": true,
                                                    }
                                                  }
                                                  domainId={null}
                                                  domainIndex={1}
                                                  dragging={false}
                                                  expandTransition={300}
                                                  expanded={false}
                                                  field={
                                                    Immutable.Record {
                                                      "conceptURI": undefined,
                                                      "conditionalFormats": Immutable.List [],
                                                      "defaultScale": undefined,
                                                      "defaultValueType": undefined,
                                                      "defaultValue": undefined,
                                                      "defaultDisplayValue": undefined,
                                                      "description": undefined,
                                                      "dimension": undefined,
                                                      "excludeFromShifting": false,
                                                      "format": undefined,
                                                      "hidden": false,
                                                      "importAliases": undefined,
                                                      "label": undefined,
                                                      "lookupContainer": undefined,
                                                      "lookupQuery": undefined,
                                                      "lookupSchema": undefined,
                                                      "lookupValidator": undefined,
                                                      "measure": undefined,
                                                      "mvEnabled": false,
                                                      "name": "field1",
                                                      "PHI": undefined,
                                                      "primaryKey": undefined,
                                                      "propertyId": undefined,
                                                      "propertyURI": undefined,
                                                      "propertyValidators": Immutable.List [],
                                                      "rangeValidators": Immutable.List [],
                                                      "rangeURI": "xsd:string",
                                                      "regexValidators": Immutable.List [],
                                                      "recommendedVariable": false,
                                                      "required": false,
                                                      "scale": undefined,
                                                      "URL": undefined,
                                                      "shownInDetailsView": true,
                                                      "shownInInsertView": true,
                                                      "shownInUpdateView": true,
                                                      "visible": true,
                                                      "dataType": Immutable.Record {
                                                        "conceptURI": undefined,
                                                        "display": "Text",
                                                        "name": "string",
                                                        "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                        "alternateRangeURI": "xsd:string",
                                                        "shortDisplay": "String",
                                                        "lookupSchema": undefined,
                                                        "lookupQuery": undefined,
                                                      },
                                                      "lookupQueryValue": undefined,
                                                      "lookupType": Immutable.Record {
                                                        "conceptURI": undefined,
                                                        "display": "Lookup",
                                                        "name": "lookup",
                                                        "rangeURI": "xsd:string",
                                                        "alternateRangeURI": undefined,
                                                        "shortDisplay": undefined,
                                                        "lookupSchema": undefined,
                                                        "lookupQuery": undefined,
                                                      },
                                                      "original": Object {
                                                        "conceptURI": undefined,
                                                        "dataType": Immutable.Record {
                                                          "conceptURI": undefined,
                                                          "display": "Text",
                                                          "name": "string",
                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                          "alternateRangeURI": "xsd:string",
                                                          "shortDisplay": "String",
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                        "rangeURI": undefined,
                                                      },
                                                      "updatedField": false,
                                                      "isPrimaryKey": false,
                                                      "lockType": "NotLocked",
                                                      "wrappedColumnName": undefined,
                                                    }
                                                  }
                                                  helpNoun="field designer"
                                                  index={0}
                                                  key="domain-row-key-0"
                                                  maxPhiLevel="NotPHI"
                                                  onChange={[Function]}
                                                  onDelete={[Function]}
                                                  onExpand={[Function]}
                                                  showDefaultValueSettings={false}
                                                  showFilePropertyType={false}
                                                  successBsStyle="success"
                                                >
                                                  <ConnectFunction
                                                    disableInteractiveElementBlocking={false}
                                                    draggableId="domainpropertiesrow-domaindrag-1-0"
                                                    index={0}
                                                    isDragDisabled={false}
                                                    shouldRespectForcePress={false}
                                                  >
                                                    <Draggable
                                                      disableInteractiveElementBlocking={false}
                                                      draggableId="domainpropertiesrow-domaindrag-1-0"
                                                      drop={[Function]}
                                                      dropAnimationFinished={[Function]}
                                                      index={0}
                                                      isDragDisabled={false}
                                                      lift={[Function]}
                                                      mapped={
                                                        Object {
                                                          "combineTargetFor": null,
                                                          "offset": Object {
                                                            "x": 0,
                                                            "y": 0,
                                                          },
                                                          "shouldAnimateDisplacement": true,
                                                          "snapshot": Object {
                                                            "combineTargetFor": null,
                                                            "combineWith": null,
                                                            "draggingOver": null,
                                                            "dropAnimation": null,
                                                            "isDragging": false,
                                                            "isDropAnimating": false,
                                                            "mode": null,
                                                          },
                                                          "type": "SECONDARY",
                                                        }
                                                      }
                                                      move={[Function]}
                                                      moveByWindowScroll={[Function]}
                                                      moveDown={[Function]}
                                                      moveLeft={[Function]}
                                                      moveRight={[Function]}
                                                      moveUp={[Function]}
                                                      shouldRespectForcePress={false}
                                                    >
                                                      <div
                                                        className="domain-field-row domain-row-border-default"
                                                        data-react-beautiful-dnd-draggable="1"
                                                        onTransitionEnd={null}
                                                        style={
                                                          Object {
                                                            "transform": null,
                                                            "transition": null,
                                                          }
                                                        }
                                                        tabIndex={0}
                                                      >
                                                        <Row
                                                          bsClass="row"
                                                          className="domain-row-container"
                                                          componentClass="div"
                                                          key="domainpropertiesrow-domainrow-1-0"
                                                        >
                                                          <div
                                                            className="domain-row-container row"
                                                          >
                                                            <AdvancedSettings
                                                              defaultValueOptions={Immutable.List []}
                                                              domainFormDisplayOptions={
                                                                Object {
                                                                  "isDragDisabled": false,
                                                                  "phiLevelDisabled": false,
                                                                  "showAddFieldsButton": true,
                                                                  "showRequired": true,
                                                                  "showTextOptions": true,
                                                                  "showValidators": true,
                                                                }
                                                              }
                                                              domainId={null}
                                                              domainIndex={1}
                                                              field={
                                                                Immutable.Record {
                                                                  "conceptURI": undefined,
                                                                  "conditionalFormats": Immutable.List [],
                                                                  "defaultScale": undefined,
                                                                  "defaultValueType": undefined,
                                                                  "defaultValue": undefined,
                                                                  "defaultDisplayValue": undefined,
                                                                  "description": undefined,
                                                                  "dimension": undefined,
                                                                  "excludeFromShifting": false,
                                                                  "format": undefined,
                                                                  "hidden": false,
                                                                  "importAliases": undefined,
                                                                  "label": undefined,
                                                                  "lookupContainer": undefined,
                                                                  "lookupQuery": undefined,
                                                                  "lookupSchema": undefined,
                                                                  "lookupValidator": undefined,
                                                                  "measure": undefined,
                                                                  "mvEnabled": false,
                                                                  "name": "field1",
                                                                  "PHI": undefined,
                                                                  "primaryKey": undefined,
                                                                  "propertyId": undefined,
                                                                  "propertyURI": undefined,
                                                                  "propertyValidators": Immutable.List [],
                                                                  "rangeValidators": Immutable.List [],
                                                                  "rangeURI": "xsd:string",
                                                                  "regexValidators": Immutable.List [],
                                                                  "recommendedVariable": false,
                                                                  "required": false,
                                                                  "scale": undefined,
                                                                  "URL": undefined,
                                                                  "shownInDetailsView": true,
                                                                  "shownInInsertView": true,
                                                                  "shownInUpdateView": true,
                                                                  "visible": true,
                                                                  "dataType": Immutable.Record {
                                                                    "conceptURI": undefined,
                                                                    "display": "Text",
                                                                    "name": "string",
                                                                    "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                                    "alternateRangeURI": "xsd:string",
                                                                    "shortDisplay": "String",
                                                                    "lookupSchema": undefined,
                                                                    "lookupQuery": undefined,
                                                                  },
                                                                  "lookupQueryValue": undefined,
                                                                  "lookupType": Immutable.Record {
                                                                    "conceptURI": undefined,
                                                                    "display": "Lookup",
                                                                    "name": "lookup",
                                                                    "rangeURI": "xsd:string",
                                                                    "alternateRangeURI": undefined,
                                                                    "shortDisplay": undefined,
                                                                    "lookupSchema": undefined,
                                                                    "lookupQuery": undefined,
                                                                  },
                                                                  "original": Object {
                                                                    "conceptURI": undefined,
                                                                    "dataType": Immutable.Record {
                                                                      "conceptURI": undefined,
                                                                      "display": "Text",
                                                                      "name": "string",
                                                                      "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                                      "alternateRangeURI": "xsd:string",
                                                                      "shortDisplay": "String",
                                                                      "lookupSchema": undefined,
                                                                      "lookupQuery": undefined,
                                                                    },
                                                                    "rangeURI": undefined,
                                                                  },
                                                                  "updatedField": false,
                                                                  "isPrimaryKey": false,
                                                                  "lockType": "NotLocked",
                                                                  "wrappedColumnName": undefined,
                                                                }
                                                              }
                                                              helpNoun="field designer"
                                                              index={0}
                                                              label="field1"
                                                              maxPhiLevel="NotPHI"
                                                              onApply={[Function]}
                                                              onHide={[Function]}
                                                              show={false}
                                                              showDefaultValueSettings={false}
                                                              successBsStyle="success"
                                                            >
                                                              <Modal
                                                                animation={true}
                                                                autoFocus={true}
                                                                backdrop={true}
                                                                bsClass="modal"
                                                                dialogComponentClass={[Function]}
                                                                enforceFocus={true}
                                                                keyboard={true}
                                                                manager={
                                                                  ModalManager {
                                                                    "add": [Function],
                                                                    "containers": Array [],
                                                                    "data": Array [],
                                                                    "handleContainerOverflow": true,
                                                                    "hideSiblingNodes": true,
                                                                    "isTopModal": [Function],
                                                                    "modals": Array [],
                                                                    "remove": [Function],
                                                                  }
                                                                }
                                                                onEnter={[Function]}
                                                                onHide={[Function]}
                                                                renderBackdrop={[Function]}
                                                                restoreFocus={true}
                                                                show={false}
                                                              >
                                                                <Modal
                                                                  autoFocus={true}
                                                                  backdrop={true}
                                                                  backdropClassName="modal-backdrop"
                                                                  backdropTransition={[Function]}
                                                                  containerClassName="modal-open"
                                                                  enforceFocus={true}
                                                                  keyboard={true}
                                                                  manager={
                                                                    ModalManager {
                                                                      "add": [Function],
                                                                      "containers": Array [],
                                                                      "data": Array [],
                                                                      "handleContainerOverflow": true,
                                                                      "hideSiblingNodes": true,
                                                                      "isTopModal": [Function],
                                                                      "modals": Array [],
                                                                      "remove": [Function],
                                                                    }
                                                                  }
                                                                  onEnter={[Function]}
                                                                  onEntering={[Function]}
                                                                  onExited={[Function]}
                                                                  onHide={[Function]}
                                                                  renderBackdrop={[Function]}
                                                                  restoreFocus={true}
                                                                  show={false}
                                                                  transition={[Function]}
                                                                />
                                                              </Modal>
                                                            </AdvancedSettings>
                                                            <div
                                                              aria-roledescription="Draggable item. Press space bar to lift"
                                                              className="domain-row-handle"
                                                              data-react-beautiful-dnd-drag-handle="1"
                                                              draggable={false}
                                                              onBlur={[Function]}
                                                              onDragStart={[Function]}
                                                              onFocus={[Function]}
                                                              onKeyDown={[Function]}
                                                              onMouseDown={[Function]}
                                                              onTouchStart={[Function]}
                                                              tabIndex={0}
                                                            >
                                                              <DragDropHandle>
                                                                <FontAwesomeIcon
                                                                  border={false}
                                                                  className=""
                                                                  fixedWidth={false}
                                                                  flip={null}
                                                                  icon={
                                                                    Object {
                                                                      "icon": Array [
                                                                        320,
                                                                        512,
                                                                        Array [],
                                                                        "f58e",
                                                                        "M96 32H32C14.33 32 0 46.33 0 64v64c0 17.67 14.33 32 32 32h64c17.67 0 32-14.33 32-32V64c0-17.67-14.33-32-32-32zm0 160H32c-17.67 0-32 14.33-32 32v64c0 17.67 14.33 32 32 32h64c17.67 0 32-14.33 32-32v-64c0-17.67-14.33-32-32-32zm0 160H32c-17.67 0-32 14.33-32 32v64c0 17.67 14.33 32 32 32h64c17.67 0 32-14.33 32-32v-64c0-17.67-14.33-32-32-32zM288 32h-64c-17.67 0-32 14.33-32 32v64c0 17.67 14.33 32 32 32h64c17.67 0 32-14.33 32-32V64c0-17.67-14.33-32-32-32zm0 160h-64c-17.67 0-32 14.33-32 32v64c0 17.67 14.33 32 32 32h64c17.67 0 32-14.33 32-32v-64c0-17.67-14.33-32-32-32zm0 160h-64c-17.67 0-32 14.33-32 32v64c0 17.67 14.33 32 32 32h64c17.67 0 32-14.33 32-32v-64c0-17.67-14.33-32-32-32z",
                                                                      ],
                                                                      "iconName": "grip-vertical",
                                                                      "prefix": "fas",
                                                                    }
                                                                  }
                                                                  inverse={false}
                                                                  listItem={false}
                                                                  mask={null}
                                                                  pull={null}
                                                                  pulse={false}
                                                                  rotation={null}
                                                                  size="lg"
                                                                  spin={false}
                                                                  symbol={false}
                                                                  title=""
                                                                  transform={null}
                                                                >
                                                                  <svg
                                                                    aria-hidden="true"
                                                                    className="svg-inline--fa fa-grip-vertical fa-w-10 fa-lg "
                                                                    data-icon="grip-vertical"
                                                                    data-prefix="fas"
                                                                    focusable="false"
                                                                    role="img"
                                                                    style={Object {}}
                                                                    viewBox="0 0 320 512"
                                                                    xmlns="http://www.w3.org/2000/svg"
                                                                  >
                                                                    <path
                                                                      d="M96 32H32C14.33 32 0 46.33 0 64v64c0 17.67 14.33 32 32 32h64c17.67 0 32-14.33 32-32V64c0-17.67-14.33-32-32-32zm0 160H32c-17.67 0-32 14.33-32 32v64c0 17.67 14.33 32 32 32h64c17.67 0 32-14.33 32-32v-64c0-17.67-14.33-32-32-32zm0 160H32c-17.67 0-32 14.33-32 32v64c0 17.67 14.33 32 32 32h64c17.67 0 32-14.33 32-32v-64c0-17.67-14.33-32-32-32zM288 32h-64c-17.67 0-32 14.33-32 32v64c0 17.67 14.33 32 32 32h64c17.67 0 32-14.33 32-32V64c0-17.67-14.33-32-32-32zm0 160h-64c-17.67 0-32 14.33-32 32v64c0 17.67 14.33 32 32 32h64c17.67 0 32-14.33 32-32v-64c0-17.67-14.33-32-32-32zm0 160h-64c-17.67 0-32 14.33-32 32v64c0 17.67 14.33 32 32 32h64c17.67 0 32-14.33 32-32v-64c0-17.67-14.33-32-32-32z"
                                                                      fill="currentColor"
                                                                      style={Object {}}
                                                                    />
                                                                  </svg>
                                                                </FontAwesomeIcon>
                                                              </DragDropHandle>
                                                            </div>
                                                            <div
                                                              className="domain-row-main"
                                                            >
                                                              <Col
                                                                bsClass="col"
                                                                className="domain-row-base-fields"
                                                                componentClass="div"
                                                                xs={6}
                                                              >
                                                                <div
                                                                  className="domain-row-base-fields col-xs-6"
                                                                >
                                                                  <div
                                                                    id="domainpropertiesrow-row-1-0"
                                                                  >
                                                                    <Col
                                                                      bsClass="col"
                                                                      componentClass="div"
                                                                      xs={6}
                                                                    >
                                                                      <div
                                                                        className="col-xs-6"
                                                                      >
                                                                        <FormControl
                                                                          bsClass="form-control"
                                                                          componentClass="input"
                                                                          disabled={false}
                                                                          id="domainpropertiesrow-name-1-0"
                                                                          name="domainpropertiesrow-name"
                                                                          onChange={[Function]}
                                                                          type="text"
                                                                          value="field1"
                                                                        >
                                                                          <input
                                                                            className="form-control"
                                                                            disabled={false}
                                                                            id="domainpropertiesrow-name-1-0"
                                                                            name="domainpropertiesrow-name"
                                                                            onChange={[Function]}
                                                                            type="text"
                                                                            value="field1"
                                                                          />
                                                                        </FormControl>
                                                                      </div>
                                                                    </Col>
                                                                    <Col
                                                                      bsClass="col"
                                                                      componentClass="div"
                                                                      xs={4}
                                                                    >
                                                                      <div
                                                                        className="col-xs-4"
                                                                      >
                                                                        <FormControl
                                                                          bsClass="form-control"
                                                                          componentClass="select"
                                                                          disabled={false}
                                                                          id="domainpropertiesrow-type-1-0"
                                                                          name="domainpropertiesrow-type"
                                                                          onChange={[Function]}
                                                                          value="string"
                                                                        >
                                                                          <select
                                                                            className="form-control"
                                                                            disabled={false}
                                                                            id="domainpropertiesrow-type-1-0"
                                                                            name="domainpropertiesrow-type"
                                                                            onChange={[Function]}
                                                                            value="string"
                                                                          >
                                                                            <option
                                                                              key="0"
                                                                              value="string"
                                                                            >
                                                                              Text
                                                                            </option>
                                                                            <option
                                                                              key="1"
                                                                              value="multiLine"
                                                                            >
                                                                              Multi-Line Text
                                                                            </option>
                                                                            <option
                                                                              key="2"
                                                                              value="boolean"
                                                                            >
                                                                              Boolean
                                                                            </option>
                                                                            <option
                                                                              key="3"
                                                                              value="int"
                                                                            >
                                                                              Integer
                                                                            </option>
                                                                            <option
                                                                              key="4"
                                                                              value="double"
                                                                            >
                                                                              Decimal
                                                                            </option>
                                                                            <option
                                                                              key="5"
                                                                              value="dateTime"
                                                                            >
                                                                              Date Time
                                                                            </option>
                                                                            <option
                                                                              key="6"
                                                                              value="flag"
                                                                            >
                                                                              Flag
                                                                            </option>
                                                                            <option
                                                                              key="7"
                                                                              value="fileLink"
                                                                            >
                                                                              File
                                                                            </option>
                                                                            <option
                                                                              key="8"
                                                                              value="attachment"
                                                                            >
                                                                              Attachment
                                                                            </option>
                                                                            <option
                                                                              key="9"
                                                                              value="users"
                                                                            >
                                                                              User
                                                                            </option>
                                                                            <option
                                                                              key="10"
                                                                              value="ParticipantId"
                                                                            >
                                                                              Subject/Participant
                                                                            </option>
                                                                            <option
                                                                              key="11"
                                                                              value="lookup"
                                                                            >
                                                                              Lookup
                                                                            </option>
                                                                            <option
                                                                              key="12"
                                                                              value="sample"
                                                                            >
                                                                              Sample
                                                                            </option>
                                                                          </select>
                                                                        </FormControl>
                                                                      </div>
                                                                    </Col>
                                                                    <Col
                                                                      bsClass="col"
                                                                      componentClass="div"
                                                                      xs={2}
                                                                    >
                                                                      <div
                                                                        className="col-xs-2"
                                                                      >
                                                                        <div
                                                                          className="domain-field-checkbox-container"
                                                                        >
                                                                          <Checkbox
                                                                            bsClass="checkbox"
                                                                            checked={false}
                                                                            className="domain-field-checkbox"
                                                                            disabled={false}
                                                                            id="domainpropertiesrow-required-1-0"
                                                                            inline={false}
                                                                            name="domainpropertiesrow-required"
                                                                            onChange={[Function]}
                                                                            title=""
                                                                          >
                                                                            <div
                                                                              className="domain-field-checkbox checkbox"
                                                                            >
                                                                              <label
                                                                                title=""
                                                                              >
                                                                                <input
                                                                                  checked={false}
                                                                                  disabled={false}
                                                                                  id="domainpropertiesrow-required-1-0"
                                                                                  name="domainpropertiesrow-required"
                                                                                  onChange={[Function]}
                                                                                  type="checkbox"
                                                                                />
                                                                              </label>
                                                                            </div>
                                                                          </Checkbox>
                                                                        </div>
                                                                      </div>
                                                                    </Col>
                                                                  </div>
                                                                </div>
                                                              </Col>
                                                              <Col
                                                                bsClass="col"
                                                                className="field-details-container"
                                                                componentClass="div"
                                                                xs={6}
                                                              >
                                                                <div
                                                                  className="field-details-container col-xs-6"
                                                                >
                                                                  <div
                                                                    className="domain-field-details"
                                                                    id="domainpropertiesrow-details-1-0"
                                                                  >
                                                                    New Field
                                                                  </div>
                                                                  <div
                                                                    className="domain-field-buttons"
                                                                  >
                                                                    <DeleteIcon
                                                                      iconCls="domain-field-delete-icon"
                                                                      id="domainpropertiesrow-delete-1-0"
                                                                      onDelete={[Function]}
                                                                      title="Remove field"
                                                                    >
                                                                      <span
                                                                        className="field-icon"
                                                                        id="domainpropertiesrow-delete-1-0"
                                                                        onClick={[Function]}
                                                                        title="Remove field"
                                                                      >
                                                                        <FontAwesomeIcon
                                                                          border={false}
                                                                          className="domain-field-delete-icon"
                                                                          fixedWidth={false}
                                                                          flip={null}
                                                                          icon={
                                                                            Object {
                                                                              "icon": Array [
                                                                                512,
                                                                                512,
                                                                                Array [],
                                                                                "f057",
                                                                                "M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8zm121.6 313.1c4.7 4.7 4.7 12.3 0 17L338 377.6c-4.7 4.7-12.3 4.7-17 0L256 312l-65.1 65.6c-4.7 4.7-12.3 4.7-17 0L134.4 338c-4.7-4.7-4.7-12.3 0-17l65.6-65-65.6-65.1c-4.7-4.7-4.7-12.3 0-17l39.6-39.6c4.7-4.7 12.3-4.7 17 0l65 65.7 65.1-65.6c4.7-4.7 12.3-4.7 17 0l39.6 39.6c4.7 4.7 4.7 12.3 0 17L312 256l65.6 65.1z",
                                                                              ],
                                                                              "iconName": "times-circle",
                                                                              "prefix": "fas",
                                                                            }
                                                                          }
                                                                          inverse={false}
                                                                          listItem={false}
                                                                          mask={null}
                                                                          pull={null}
                                                                          pulse={false}
                                                                          rotation={null}
                                                                          size={null}
                                                                          spin={false}
                                                                          symbol={false}
                                                                          title=""
                                                                          transform={null}
                                                                        >
                                                                          <svg
                                                                            aria-hidden="true"
                                                                            className="svg-inline--fa fa-times-circle fa-w-16 domain-field-delete-icon"
                                                                            data-icon="times-circle"
                                                                            data-prefix="fas"
                                                                            focusable="false"
                                                                            role="img"
                                                                            style={Object {}}
                                                                            viewBox="0 0 512 512"
                                                                            xmlns="http://www.w3.org/2000/svg"
                                                                          >
                                                                            <path
                                                                              d="M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8zm121.6 313.1c4.7 4.7 4.7 12.3 0 17L338 377.6c-4.7 4.7-12.3 4.7-17 0L256 312l-65.1 65.6c-4.7 4.7-12.3 4.7-17 0L134.4 338c-4.7-4.7-4.7-12.3 0-17l65.6-65-65.6-65.1c-4.7-4.7-4.7-12.3 0-17l39.6-39.6c4.7-4.7 12.3-4.7 17 0l65 65.7 65.1-65.6c4.7-4.7 12.3-4.7 17 0l39.6 39.6c4.7 4.7 4.7 12.3 0 17L312 256l65.6 65.1z"
                                                                              fill="currentColor"
                                                                              style={Object {}}
                                                                            />
                                                                          </svg>
                                                                        </FontAwesomeIcon>
                                                                      </span>
                                                                    </DeleteIcon>
                                                                    <FieldExpansionToggle
                                                                      cls="domain-field-expand-icon"
                                                                      collapsedTitle="Show additional field properties"
                                                                      expanded={false}
                                                                      expandedTitle="Hide additional field properties"
                                                                      id="domainpropertiesrow-expand-1-0"
                                                                      onClick={[Function]}
                                                                    >
                                                                      <div
                                                                        className="field-icon domain-field-expand-icon"
                                                                        id="domainpropertiesrow-expand-1-0"
                                                                        onClick={[Function]}
                                                                        title="Show additional field properties"
                                                                      >
                                                                        <FontAwesomeIcon
                                                                          border={false}
                                                                          className=""
                                                                          fixedWidth={false}
                                                                          flip={null}
                                                                          icon={
                                                                            Object {
                                                                              "icon": Array [
                                                                                448,
                                                                                512,
                                                                                Array [],
                                                                                "f0fe",
                                                                                "M400 32H48C21.5 32 0 53.5 0 80v352c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V80c0-26.5-21.5-48-48-48zm-32 252c0 6.6-5.4 12-12 12h-92v92c0 6.6-5.4 12-12 12h-56c-6.6 0-12-5.4-12-12v-92H92c-6.6 0-12-5.4-12-12v-56c0-6.6 5.4-12 12-12h92v-92c0-6.6 5.4-12 12-12h56c6.6 0 12 5.4 12 12v92h92c6.6 0 12 5.4 12 12v56z",
                                                                              ],
                                                                              "iconName": "plus-square",
                                                                              "prefix": "fas",
                                                                            }
                                                                          }
                                                                          inverse={false}
                                                                          listItem={false}
                                                                          mask={null}
                                                                          pull={null}
                                                                          pulse={false}
                                                                          rotation={null}
                                                                          size="lg"
                                                                          spin={false}
                                                                          symbol={false}
                                                                          title=""
                                                                          transform={null}
                                                                        >
                                                                          <svg
                                                                            aria-hidden="true"
                                                                            className="svg-inline--fa fa-plus-square fa-w-14 fa-lg "
                                                                            data-icon="plus-square"
                                                                            data-prefix="fas"
                                                                            focusable="false"
                                                                            role="img"
                                                                            style={Object {}}
                                                                            viewBox="0 0 448 512"
                                                                            xmlns="http://www.w3.org/2000/svg"
                                                                          >
                                                                            <path
                                                                              d="M400 32H48C21.5 32 0 53.5 0 80v352c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V80c0-26.5-21.5-48-48-48zm-32 252c0 6.6-5.4 12-12 12h-92v92c0 6.6-5.4 12-12 12h-56c-6.6 0-12-5.4-12-12v-92H92c-6.6 0-12-5.4-12-12v-56c0-6.6 5.4-12 12-12h92v-92c0-6.6 5.4-12 12-12h56c6.6 0 12 5.4 12 12v92h92c6.6 0 12 5.4 12 12v56z"
                                                                              fill="currentColor"
                                                                              style={Object {}}
                                                                            />
                                                                          </svg>
                                                                        </FontAwesomeIcon>
                                                                      </div>
                                                                    </FieldExpansionToggle>
                                                                  </div>
                                                                </div>
                                                              </Col>
                                                            </div>
                                                          </div>
                                                        </Row>
                                                        <Collapse
                                                          appear={false}
                                                          dimension="height"
                                                          getDimensionValue={[Function]}
                                                          in={false}
                                                          mountOnEnter={false}
                                                          onExited={[Function]}
                                                          onExiting={[Function]}
                                                          timeout={300}
                                                          unmountOnExit={false}
                                                        >
                                                          <Transition
                                                            appear={false}
                                                            aria-expanded={null}
                                                            enter={true}
                                                            exit={true}
                                                            in={false}
                                                            mountOnEnter={false}
                                                            onEnter={[Function]}
                                                            onEntered={[Function]}
                                                            onEntering={[Function]}
                                                            onExit={[Function]}
                                                            onExited={[Function]}
                                                            onExiting={[Function]}
                                                            timeout={300}
                                                            unmountOnExit={false}
                                                          >
                                                            <div
                                                              aria-expanded={null}
                                                              className="collapse"
                                                            >
                                                              <DomainRowExpandedOptions
                                                                appPropertiesOnly={false}
                                                                domainFormDisplayOptions={
                                                                  Object {
                                                                    "isDragDisabled": false,
                                                                    "phiLevelDisabled": false,
                                                                    "showAddFieldsButton": true,
                                                                    "showRequired": true,
                                                                    "showTextOptions": true,
                                                                    "showValidators": true,
                                                                  }
                                                                }
                                                                domainIndex={1}
                                                                field={
                                                                  Immutable.Record {
                                                                    "conceptURI": undefined,
                                                                    "conditionalFormats": Immutable.List [],
                                                                    "defaultScale": undefined,
                                                                    "defaultValueType": undefined,
                                                                    "defaultValue": undefined,
                                                                    "defaultDisplayValue": undefined,
                                                                    "description": undefined,
                                                                    "dimension": undefined,
                                                                    "excludeFromShifting": false,
                                                                    "format": undefined,
                                                                    "hidden": false,
                                                                    "importAliases": undefined,
                                                                    "label": undefined,
                                                                    "lookupContainer": undefined,
                                                                    "lookupQuery": undefined,
                                                                    "lookupSchema": undefined,
                                                                    "lookupValidator": undefined,
                                                                    "measure": undefined,
                                                                    "mvEnabled": false,
                                                                    "name": "field1",
                                                                    "PHI": undefined,
                                                                    "primaryKey": undefined,
                                                                    "propertyId": undefined,
                                                                    "propertyURI": undefined,
                                                                    "propertyValidators": Immutable.List [],
                                                                    "rangeValidators": Immutable.List [],
                                                                    "rangeURI": "xsd:string",
                                                                    "regexValidators": Immutable.List [],
                                                                    "recommendedVariable": false,
                                                                    "required": false,
                                                                    "scale": undefined,
                                                                    "URL": undefined,
                                                                    "shownInDetailsView": true,
                                                                    "shownInInsertView": true,
                                                                    "shownInUpdateView": true,
                                                                    "visible": true,
                                                                    "dataType": Immutable.Record {
                                                                      "conceptURI": undefined,
                                                                      "display": "Text",
                                                                      "name": "string",
                                                                      "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                                      "alternateRangeURI": "xsd:string",
                                                                      "shortDisplay": "String",
                                                                      "lookupSchema": undefined,
                                                                      "lookupQuery": undefined,
                                                                    },
                                                                    "lookupQueryValue": undefined,
                                                                    "lookupType": Immutable.Record {
                                                                      "conceptURI": undefined,
                                                                      "display": "Lookup",
                                                                      "name": "lookup",
                                                                      "rangeURI": "xsd:string",
                                                                      "alternateRangeURI": undefined,
                                                                      "shortDisplay": undefined,
                                                                      "lookupSchema": undefined,
                                                                      "lookupQuery": undefined,
                                                                    },
                                                                    "original": Object {
                                                                      "conceptURI": undefined,
                                                                      "dataType": Immutable.Record {
                                                                        "conceptURI": undefined,
                                                                        "display": "Text",
                                                                        "name": "string",
                                                                        "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                                        "alternateRangeURI": "xsd:string",
                                                                        "shortDisplay": "String",
                                                                        "lookupSchema": undefined,
                                                                        "lookupQuery": undefined,
                                                                      },
                                                                      "rangeURI": undefined,
                                                                    },
                                                                    "updatedField": false,
                                                                    "isPrimaryKey": false,
                                                                    "lockType": "NotLocked",
                                                                    "wrappedColumnName": undefined,
                                                                  }
                                                                }
                                                                index={0}
                                                                onChange={[Function]}
                                                                onMultiChange={[Function]}
                                                                showingModal={[Function]}
                                                                successBsStyle="success"
                                                              >
                                                                <div
                                                                  className="domain-row-container"
                                                                >
                                                                  <div
                                                                    className="domain-row-handle"
                                                                  />
                                                                  <div
                                                                    className="domain-row-container-expanded"
                                                                  >
                                                                    <Col
                                                                      bsClass="col"
                                                                      componentClass="div"
                                                                      xs={12}
                                                                    >
                                                                      <div
                                                                        className="col-xs-12"
                                                                      >
                                                                        <TextFieldOptions
                                                                          domainIndex={1}
                                                                          index={0}
                                                                          label="Text Options"
                                                                          lockType="NotLocked"
                                                                          onChange={[Function]}
                                                                        >
                                                                          <div>
                                                                            <Row
                                                                              bsClass="row"
                                                                              className="domain-row-expanded"
                                                                              componentClass="div"
                                                                            >
                                                                              <div
                                                                                className="domain-row-expanded row"
                                                                              >
                                                                                <Col
                                                                                  bsClass="col"
                                                                                  componentClass="div"
                                                                                  xs={12}
                                                                                >
                                                                                  <div
                                                                                    className="col-xs-12"
                                                                                  >
                                                                                    <div
                                                                                      className="domain-field-section-heading"
                                                                                    >
                                                                                      Text Options
                                                                                    </div>
                                                                                  </div>
                                                                                </Col>
                                                                              </div>
                                                                            </Row>
                                                                            <Row
                                                                              bsClass="row"
                                                                              className="domain-row-expanded "
                                                                              componentClass="div"
                                                                            >
                                                                              <div
                                                                                className="domain-row-expanded  row"
                                                                              >
                                                                                <Col
                                                                                  bsClass="col"
                                                                                  componentClass="div"
                                                                                  xs={12}
                                                                                >
                                                                                  <div
                                                                                    className="col-xs-12"
                                                                                  >
                                                                                    <div
                                                                                      className="domain-field-label"
                                                                                    >
                                                                                      Maximum Text Length
                                                                                      <LabelHelpTip
                                                                                        body={[Function]}
                                                                                        customStyle={Object {}}
                                                                                        id="tooltip"
                                                                                        size="1x"
                                                                                        title="Max Text Length"
                                                                                      >
                                                                                        <span
                                                                                          className="label-help-target"
                                                                                          onMouseOut={[Function]}
                                                                                          onMouseOver={[Function]}
                                                                                        >
                                                                                          <FontAwesomeIcon
                                                                                            border={false}
                                                                                            className="label-help-icon"
                                                                                            fixedWidth={false}
                                                                                            flip={null}
                                                                                            icon={
                                                                                              Object {
                                                                                                "icon": Array [
                                                                                                  512,
                                                                                                  512,
                                                                                                  Array [],
                                                                                                  "f059",
                                                                                                  "M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z",
                                                                                                ],
                                                                                                "iconName": "question-circle",
                                                                                                "prefix": "fas",
                                                                                              }
                                                                                            }
                                                                                            inverse={false}
                                                                                            listItem={false}
                                                                                            mask={null}
                                                                                            pull={null}
                                                                                            pulse={false}
                                                                                            rotation={null}
                                                                                            size="1x"
                                                                                            spin={false}
                                                                                            style={Object {}}
                                                                                            symbol={false}
                                                                                            title=""
                                                                                            transform={null}
                                                                                          >
                                                                                            <svg
                                                                                              aria-hidden="true"
                                                                                              className="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                                                                                              data-icon="question-circle"
                                                                                              data-prefix="fas"
                                                                                              focusable="false"
                                                                                              role="img"
                                                                                              style={Object {}}
                                                                                              viewBox="0 0 512 512"
                                                                                              xmlns="http://www.w3.org/2000/svg"
                                                                                            >
                                                                                              <path
                                                                                                d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                                                                fill="currentColor"
                                                                                                style={Object {}}
                                                                                              />
                                                                                            </svg>
                                                                                          </FontAwesomeIcon>
                                                                                          <Overlay
                                                                                            animation={[Function]}
                                                                                            placement="right"
                                                                                            rootClose={false}
                                                                                            show={false}
                                                                                            target={
                                                                                              <span
                                                                                                class="label-help-target"
                                                                                              >
                                                                                                <svg
                                                                                                  aria-hidden="true"
                                                                                                  class="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                                                                                                  data-icon="question-circle"
                                                                                                  data-prefix="fas"
                                                                                                  focusable="false"
                                                                                                  role="img"
                                                                                                  viewBox="0 0 512 512"
                                                                                                  xmlns="http://www.w3.org/2000/svg"
                                                                                                >
                                                                                                  <path
                                                                                                    d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                                                                    fill="currentColor"
                                                                                                  />
                                                                                                </svg>
                                                                                              </span>
                                                                                            }
                                                                                          >
                                                                                            <Overlay
                                                                                              placement="right"
                                                                                              rootClose={false}
                                                                                              show={false}
                                                                                              target={
                                                                                                <span
                                                                                                  class="label-help-target"
                                                                                                >
                                                                                                  <svg
                                                                                                    aria-hidden="true"
                                                                                                    class="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                                                                                                    data-icon="question-circle"
                                                                                                    data-prefix="fas"
                                                                                                    focusable="false"
                                                                                                    role="img"
                                                                                                    viewBox="0 0 512 512"
                                                                                                    xmlns="http://www.w3.org/2000/svg"
                                                                                                  >
                                                                                                    <path
                                                                                                      d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                                                                      fill="currentColor"
                                                                                                    />
                                                                                                  </svg>
                                                                                                </span>
                                                                                              }
                                                                                              transition={[Function]}
                                                                                            />
                                                                                          </Overlay>
                                                                                        </span>
                                                                                      </LabelHelpTip>
                                                                                    </div>
                                                                                  </div>
                                                                                </Col>
                                                                              </div>
                                                                            </Row>
                                                                            <Row
                                                                              bsClass="row"
                                                                              className="domain-row-expanded"
                                                                              componentClass="div"
                                                                            >
                                                                              <div
                                                                                className="domain-row-expanded row"
                                                                              >
                                                                                <Col
                                                                                  bsClass="col"
                                                                                  className="domain-text-options-col"
                                                                                  componentClass="div"
                                                                                  xs={12}
                                                                                >
                                                                                  <div
                                                                                    className="domain-text-options-col col-xs-12"
                                                                                  >
                                                                                    <FormControl
                                                                                      bsClass="form-control"
                                                                                      checked={true}
                                                                                      className="domain-text-options-radio1 domain-field-float-left"
                                                                                      componentClass="input"
                                                                                      disabled={false}
                                                                                      id="domainpropertiesrow-maxLength-1-0"
                                                                                      onChange={[Function]}
                                                                                      type="radio"
                                                                                      value="maxLength"
                                                                                    >
                                                                                      <input
                                                                                        checked={true}
                                                                                        className="domain-text-options-radio1 domain-field-float-left form-control"
                                                                                        disabled={false}
                                                                                        id="domainpropertiesrow-maxLength-1-0"
                                                                                        onChange={[Function]}
                                                                                        type="radio"
                                                                                        value="maxLength"
                                                                                      />
                                                                                    </FormControl>
                                                                                    <div
                                                                                      className=""
                                                                                    >
                                                                                      Unlimited
                                                                                    </div>
                                                                                  </div>
                                                                                </Col>
                                                                              </div>
                                                                            </Row>
                                                                            <Row
                                                                              bsClass="row"
                                                                              className="domain-row-expanded"
                                                                              componentClass="div"
                                                                            >
                                                                              <div
                                                                                className="domain-row-expanded row"
                                                                              >
                                                                                <Col
                                                                                  bsClass="col"
                                                                                  componentClass="div"
                                                                                  xs={12}
                                                                                >
                                                                                  <div
                                                                                    className="col-xs-12"
                                                                                  >
                                                                                    <FormControl
                                                                                      bsClass="form-control"
                                                                                      checked={false}
                                                                                      className="domain-text-options-radio2 domain-field-float-left"
                                                                                      componentClass="input"
                                                                                      id="domainpropertiesrow-customLength-1-0"
                                                                                      onChange={[Function]}
                                                                                      type="radio"
                                                                                      value="customLength"
                                                                                    >
                                                                                      <input
                                                                                        checked={false}
                                                                                        className="domain-text-options-radio2 domain-field-float-left form-control"
                                                                                        id="domainpropertiesrow-customLength-1-0"
                                                                                        onChange={[Function]}
                                                                                        type="radio"
                                                                                        value="customLength"
                                                                                      />
                                                                                    </FormControl>
                                                                                    <span
                                                                                      className="domain-text-options-length domain-field-float-left domain-text-label"
                                                                                    >
                                                                                      No longer than X characters
                                                                                    </span>
                                                                                    <FormControl
                                                                                      bsClass="form-control"
                                                                                      className="domain-text-length-field"
                                                                                      componentClass="input"
                                                                                      disabled={true}
                                                                                      id="domainpropertiesrow-scale-1-0"
                                                                                      name="domainpropertiesrow-scale"
                                                                                      onChange={[Function]}
                                                                                      type="number"
                                                                                      value={4000}
                                                                                    >
                                                                                      <input
                                                                                        className="domain-text-length-field form-control"
                                                                                        disabled={true}
                                                                                        id="domainpropertiesrow-scale-1-0"
                                                                                        name="domainpropertiesrow-scale"
                                                                                        onChange={[Function]}
                                                                                        type="number"
                                                                                        value={4000}
                                                                                      />
                                                                                    </FormControl>
                                                                                  </div>
                                                                                </Col>
                                                                              </div>
                                                                            </Row>
                                                                          </div>
                                                                        </TextFieldOptions>
                                                                      </div>
                                                                    </Col>
                                                                    <Col
                                                                      bsClass="col"
                                                                      componentClass="div"
                                                                      lg={10}
                                                                      xs={12}
                                                                    >
                                                                      <div
                                                                        className="col-lg-10 col-xs-12"
                                                                      >
                                                                        <NameAndLinkingOptions
                                                                          domainIndex={1}
                                                                          field={
                                                                            Immutable.Record {
                                                                              "conceptURI": undefined,
                                                                              "conditionalFormats": Immutable.List [],
                                                                              "defaultScale": undefined,
                                                                              "defaultValueType": undefined,
                                                                              "defaultValue": undefined,
                                                                              "defaultDisplayValue": undefined,
                                                                              "description": undefined,
                                                                              "dimension": undefined,
                                                                              "excludeFromShifting": false,
                                                                              "format": undefined,
                                                                              "hidden": false,
                                                                              "importAliases": undefined,
                                                                              "label": undefined,
                                                                              "lookupContainer": undefined,
                                                                              "lookupQuery": undefined,
                                                                              "lookupSchema": undefined,
                                                                              "lookupValidator": undefined,
                                                                              "measure": undefined,
                                                                              "mvEnabled": false,
                                                                              "name": "field1",
                                                                              "PHI": undefined,
                                                                              "primaryKey": undefined,
                                                                              "propertyId": undefined,
                                                                              "propertyURI": undefined,
                                                                              "propertyValidators": Immutable.List [],
                                                                              "rangeValidators": Immutable.List [],
                                                                              "rangeURI": "xsd:string",
                                                                              "regexValidators": Immutable.List [],
                                                                              "recommendedVariable": false,
                                                                              "required": false,
                                                                              "scale": undefined,
                                                                              "URL": undefined,
                                                                              "shownInDetailsView": true,
                                                                              "shownInInsertView": true,
                                                                              "shownInUpdateView": true,
                                                                              "visible": true,
                                                                              "dataType": Immutable.Record {
                                                                                "conceptURI": undefined,
                                                                                "display": "Text",
                                                                                "name": "string",
                                                                                "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                                                "alternateRangeURI": "xsd:string",
                                                                                "shortDisplay": "String",
                                                                                "lookupSchema": undefined,
                                                                                "lookupQuery": undefined,
                                                                              },
                                                                              "lookupQueryValue": undefined,
                                                                              "lookupType": Immutable.Record {
                                                                                "conceptURI": undefined,
                                                                                "display": "Lookup",
                                                                                "name": "lookup",
                                                                                "rangeURI": "xsd:string",
                                                                                "alternateRangeURI": undefined,
                                                                                "shortDisplay": undefined,
                                                                                "lookupSchema": undefined,
                                                                                "lookupQuery": undefined,
                                                                              },
                                                                              "original": Object {
                                                                                "conceptURI": undefined,
                                                                                "dataType": Immutable.Record {
                                                                                  "conceptURI": undefined,
                                                                                  "display": "Text",
                                                                                  "name": "string",
                                                                                  "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                                                  "alternateRangeURI": "xsd:string",
                                                                                  "shortDisplay": "String",
                                                                                  "lookupSchema": undefined,
                                                                                  "lookupQuery": undefined,
                                                                                },
                                                                                "rangeURI": undefined,
                                                                              },
                                                                              "updatedField": false,
                                                                              "isPrimaryKey": false,
                                                                              "lockType": "NotLocked",
                                                                              "wrappedColumnName": undefined,
                                                                            }
                                                                          }
                                                                          index={0}
                                                                          onChange={[Function]}
                                                                        >
                                                                          <div>
                                                                            <Row
                                                                              bsClass="row"
                                                                              className="domain-row-expanded"
                                                                              componentClass="div"
                                                                            >
                                                                              <div
                                                                                className="domain-row-expanded row"
                                                                              >
                                                                                <Col
                                                                                  bsClass="col"
                                                                                  componentClass="div"
                                                                                  xs={12}
                                                                                >
                                                                                  <div
                                                                                    className="col-xs-12"
                                                                                  >
                                                                                    <div
                                                                                      className="domain-field-section-heading domain-field-section-hdr"
                                                                                    >
                                                                                      Name and Linking Options
                                                                                    </div>
                                                                                  </div>
                                                                                </Col>
                                                                              </div>
                                                                            </Row>
                                                                            <Row
                                                                              bsClass="row"
                                                                              className="domain-row-expanded"
                                                                              componentClass="div"
                                                                            >
                                                                              <div
                                                                                className="domain-row-expanded row"
                                                                              >
                                                                                <div>
                                                                                  <Col
                                                                                    bsClass="col"
                                                                                    componentClass="div"
                                                                                    xs={5}
                                                                                  >
                                                                                    <div
                                                                                      className="col-xs-5"
                                                                                    >
                                                                                      <div
                                                                                        className="domain-field-label"
                                                                                      >
                                                                                        Description
                                                                                      </div>
                                                                                      <FormControl
                                                                                        bsClass="form-control"
                                                                                        className="form-control textarea-noresize"
                                                                                        componentClass="textarea"
                                                                                        disabled={false}
                                                                                        id="domainpropertiesrow-description-1-0"
                                                                                        name="domainpropertiesrow-description"
                                                                                        onChange={[Function]}
                                                                                        rows={4}
                                                                                        value=""
                                                                                      >
                                                                                        <textarea
                                                                                          className="form-control textarea-noresize form-control"
                                                                                          disabled={false}
                                                                                          id="domainpropertiesrow-description-1-0"
                                                                                          name="domainpropertiesrow-description"
                                                                                          onChange={[Function]}
                                                                                          rows={4}
                                                                                          value=""
                                                                                        />
                                                                                      </FormControl>
                                                                                    </div>
                                                                                  </Col>
                                                                                  <Col
                                                                                    bsClass="col"
                                                                                    componentClass="div"
                                                                                    xs={3}
                                                                                  >
                                                                                    <div
                                                                                      className="col-xs-3"
                                                                                    >
                                                                                      <div
                                                                                        className="domain-field-label"
                                                                                      >
                                                                                        Label
                                                                                      </div>
                                                                                      <FormControl
                                                                                        bsClass="form-control"
                                                                                        componentClass="input"
                                                                                        disabled={false}
                                                                                        id="domainpropertiesrow-label-1-0"
                                                                                        name="domainpropertiesrow-label"
                                                                                        onChange={[Function]}
                                                                                        type="text"
                                                                                        value=""
                                                                                      >
                                                                                        <input
                                                                                          className="form-control"
                                                                                          disabled={false}
                                                                                          id="domainpropertiesrow-label-1-0"
                                                                                          name="domainpropertiesrow-label"
                                                                                          onChange={[Function]}
                                                                                          type="text"
                                                                                          value=""
                                                                                        />
                                                                                      </FormControl>
                                                                                      <div
                                                                                        className="domain-field-label"
                                                                                      >
                                                                                        Import Aliases
                                                                                        <LabelHelpTip
                                                                                          body={[Function]}
                                                                                          customStyle={Object {}}
                                                                                          id="tooltip"
                                                                                          size="1x"
                                                                                          title="Import Aliases"
                                                                                        >
                                                                                          <span
                                                                                            className="label-help-target"
                                                                                            onMouseOut={[Function]}
                                                                                            onMouseOver={[Function]}
                                                                                          >
                                                                                            <FontAwesomeIcon
                                                                                              border={false}
                                                                                              className="label-help-icon"
                                                                                              fixedWidth={false}
                                                                                              flip={null}
                                                                                              icon={
                                                                                                Object {
                                                                                                  "icon": Array [
                                                                                                    512,
                                                                                                    512,
                                                                                                    Array [],
                                                                                                    "f059",
                                                                                                    "M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z",
                                                                                                  ],
                                                                                                  "iconName": "question-circle",
                                                                                                  "prefix": "fas",
                                                                                                }
                                                                                              }
                                                                                              inverse={false}
                                                                                              listItem={false}
                                                                                              mask={null}
                                                                                              pull={null}
                                                                                              pulse={false}
                                                                                              rotation={null}
                                                                                              size="1x"
                                                                                              spin={false}
                                                                                              style={Object {}}
                                                                                              symbol={false}
                                                                                              title=""
                                                                                              transform={null}
                                                                                            >
                                                                                              <svg
                                                                                                aria-hidden="true"
                                                                                                className="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                                                                                                data-icon="question-circle"
                                                                                                data-prefix="fas"
                                                                                                focusable="false"
                                                                                                role="img"
                                                                                                style={Object {}}
                                                                                                viewBox="0 0 512 512"
                                                                                                xmlns="http://www.w3.org/2000/svg"
                                                                                              >
                                                                                                <path
                                                                                                  d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                                                                  fill="currentColor"
                                                                                                  style={Object {}}
                                                                                                />
                                                                                              </svg>
                                                                                            </FontAwesomeIcon>
                                                                                            <Overlay
                                                                                              animation={[Function]}
                                                                                              placement="right"
                                                                                              rootClose={false}
                                                                                              show={false}
                                                                                              target={
                                                                                                <span
                                                                                                  class="label-help-target"
                                                                                                >
                                                                                                  <svg
                                                                                                    aria-hidden="true"
                                                                                                    class="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                                                                                                    data-icon="question-circle"
                                                                                                    data-prefix="fas"
                                                                                                    focusable="false"
                                                                                                    role="img"
                                                                                                    viewBox="0 0 512 512"
                                                                                                    xmlns="http://www.w3.org/2000/svg"
                                                                                                  >
                                                                                                    <path
                                                                                                      d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                                                                      fill="currentColor"
                                                                                                    />
                                                                                                  </svg>
                                                                                                </span>
                                                                                              }
                                                                                            >
                                                                                              <Overlay
                                                                                                placement="right"
                                                                                                rootClose={false}
                                                                                                show={false}
                                                                                                target={
                                                                                                  <span
                                                                                                    class="label-help-target"
                                                                                                  >
                                                                                                    <svg
                                                                                                      aria-hidden="true"
                                                                                                      class="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                                                                                                      data-icon="question-circle"
                                                                                                      data-prefix="fas"
                                                                                                      focusable="false"
                                                                                                      role="img"
                                                                                                      viewBox="0 0 512 512"
                                                                                                      xmlns="http://www.w3.org/2000/svg"
                                                                                                    >
                                                                                                      <path
                                                                                                        d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                                                                        fill="currentColor"
                                                                                                      />
                                                                                                    </svg>
                                                                                                  </span>
                                                                                                }
                                                                                                transition={[Function]}
                                                                                              />
                                                                                            </Overlay>
                                                                                          </span>
                                                                                        </LabelHelpTip>
                                                                                      </div>
                                                                                      <FormControl
                                                                                        bsClass="form-control"
                                                                                        componentClass="input"
                                                                                        disabled={false}
                                                                                        id="domainpropertiesrow-importAliases-1-0"
                                                                                        name="domainpropertiesrow-importAliases"
                                                                                        onChange={[Function]}
                                                                                        type="text"
                                                                                        value=""
                                                                                      >
                                                                                        <input
                                                                                          className="form-control"
                                                                                          disabled={false}
                                                                                          id="domainpropertiesrow-importAliases-1-0"
                                                                                          name="domainpropertiesrow-importAliases"
                                                                                          onChange={[Function]}
                                                                                          type="text"
                                                                                          value=""
                                                                                        />
                                                                                      </FormControl>
                                                                                    </div>
                                                                                  </Col>
                                                                                  <Col
                                                                                    bsClass="col"
                                                                                    componentClass="div"
                                                                                    xs={4}
                                                                                  >
                                                                                    <div
                                                                                      className="col-xs-4"
                                                                                    >
                                                                                      <div
                                                                                        className="domain-field-label"
                                                                                      >
                                                                                        URL
                                                                                        <LabelHelpTip
                                                                                          body={[Function]}
                                                                                          customStyle={Object {}}
                                                                                          id="tooltip"
                                                                                          size="1x"
                                                                                          title="URL"
                                                                                        >
                                                                                          <span
                                                                                            className="label-help-target"
                                                                                            onMouseOut={[Function]}
                                                                                            onMouseOver={[Function]}
                                                                                          >
                                                                                            <FontAwesomeIcon
                                                                                              border={false}
                                                                                              className="label-help-icon"
                                                                                              fixedWidth={false}
                                                                                              flip={null}
                                                                                              icon={
                                                                                                Object {
                                                                                                  "icon": Array [
                                                                                                    512,
                                                                                                    512,
                                                                                                    Array [],
                                                                                                    "f059",
                                                                                                    "M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z",
                                                                                                  ],
                                                                                                  "iconName": "question-circle",
                                                                                                  "prefix": "fas",
                                                                                                }
                                                                                              }
                                                                                              inverse={false}
                                                                                              listItem={false}
                                                                                              mask={null}
                                                                                              pull={null}
                                                                                              pulse={false}
                                                                                              rotation={null}
                                                                                              size="1x"
                                                                                              spin={false}
                                                                                              style={Object {}}
                                                                                              symbol={false}
                                                                                              title=""
                                                                                              transform={null}
                                                                                            >
                                                                                              <svg
                                                                                                aria-hidden="true"
                                                                                                className="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                                                                                                data-icon="question-circle"
                                                                                                data-prefix="fas"
                                                                                                focusable="false"
                                                                                                role="img"
                                                                                                style={Object {}}
                                                                                                viewBox="0 0 512 512"
                                                                                                xmlns="http://www.w3.org/2000/svg"
                                                                                              >
                                                                                                <path
                                                                                                  d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                                                                  fill="currentColor"
                                                                                                  style={Object {}}
                                                                                                />
                                                                                              </svg>
                                                                                            </FontAwesomeIcon>
                                                                                            <Overlay
                                                                                              animation={[Function]}
                                                                                              placement="right"
                                                                                              rootClose={false}
                                                                                              show={false}
                                                                                              target={
                                                                                                <span
                                                                                                  class="label-help-target"
                                                                                                >
                                                                                                  <svg
                                                                                                    aria-hidden="true"
                                                                                                    class="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                                                                                                    data-icon="question-circle"
                                                                                                    data-prefix="fas"
                                                                                                    focusable="false"
                                                                                                    role="img"
                                                                                                    viewBox="0 0 512 512"
                                                                                                    xmlns="http://www.w3.org/2000/svg"
                                                                                                  >
                                                                                                    <path
                                                                                                      d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                                                                      fill="currentColor"
                                                                                                    />
                                                                                                  </svg>
                                                                                                </span>
                                                                                              }
                                                                                            >
                                                                                              <Overlay
                                                                                                placement="right"
                                                                                                rootClose={false}
                                                                                                show={false}
                                                                                                target={
                                                                                                  <span
                                                                                                    class="label-help-target"
                                                                                                  >
                                                                                                    <svg
                                                                                                      aria-hidden="true"
                                                                                                      class="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                                                                                                      data-icon="question-circle"
                                                                                                      data-prefix="fas"
                                                                                                      focusable="false"
                                                                                                      role="img"
                                                                                                      viewBox="0 0 512 512"
                                                                                                      xmlns="http://www.w3.org/2000/svg"
                                                                                                    >
                                                                                                      <path
                                                                                                        d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                                                                        fill="currentColor"
                                                                                                      />
                                                                                                    </svg>
                                                                                                  </span>
                                                                                                }
                                                                                                transition={[Function]}
                                                                                              />
                                                                                            </Overlay>
                                                                                          </span>
                                                                                        </LabelHelpTip>
                                                                                      </div>
                                                                                      <FormControl
                                                                                        bsClass="form-control"
                                                                                        componentClass="input"
                                                                                        disabled={false}
                                                                                        id="domainpropertiesrow-URL-1-0"
                                                                                        name="domainpropertiesrow-URL"
                                                                                        onChange={[Function]}
                                                                                        type="text"
                                                                                        value=""
                                                                                      >
                                                                                        <input
                                                                                          className="form-control"
                                                                                          disabled={false}
                                                                                          id="domainpropertiesrow-URL-1-0"
                                                                                          name="domainpropertiesrow-URL"
                                                                                          onChange={[Function]}
                                                                                          type="text"
                                                                                          value=""
                                                                                        />
                                                                                      </FormControl>
                                                                                    </div>
                                                                                  </Col>
                                                                                </div>
                                                                              </div>
                                                                            </Row>
                                                                          </div>
                                                                        </NameAndLinkingOptions>
                                                                      </div>
                                                                    </Col>
                                                                    <Col
                                                                      bsClass="col"
                                                                      componentClass="div"
                                                                      xs={12}
                                                                    >
                                                                      <div
                                                                        className="col-xs-12"
                                                                      >
                                                                        <ConditionalFormattingAndValidation
                                                                          domainFormDisplayOptions={
                                                                            Object {
                                                                              "isDragDisabled": false,
                                                                              "phiLevelDisabled": false,
                                                                              "showAddFieldsButton": true,
                                                                              "showRequired": true,
                                                                              "showTextOptions": true,
                                                                              "showValidators": true,
                                                                            }
                                                                          }
                                                                          domainIndex={1}
                                                                          field={
                                                                            Immutable.Record {
                                                                              "conceptURI": undefined,
                                                                              "conditionalFormats": Immutable.List [],
                                                                              "defaultScale": undefined,
                                                                              "defaultValueType": undefined,
                                                                              "defaultValue": undefined,
                                                                              "defaultDisplayValue": undefined,
                                                                              "description": undefined,
                                                                              "dimension": undefined,
                                                                              "excludeFromShifting": false,
                                                                              "format": undefined,
                                                                              "hidden": false,
                                                                              "importAliases": undefined,
                                                                              "label": undefined,
                                                                              "lookupContainer": undefined,
                                                                              "lookupQuery": undefined,
                                                                              "lookupSchema": undefined,
                                                                              "lookupValidator": undefined,
                                                                              "measure": undefined,
                                                                              "mvEnabled": false,
                                                                              "name": "field1",
                                                                              "PHI": undefined,
                                                                              "primaryKey": undefined,
                                                                              "propertyId": undefined,
                                                                              "propertyURI": undefined,
                                                                              "propertyValidators": Immutable.List [],
                                                                              "rangeValidators": Immutable.List [],
                                                                              "rangeURI": "xsd:string",
                                                                              "regexValidators": Immutable.List [],
                                                                              "recommendedVariable": false,
                                                                              "required": false,
                                                                              "scale": undefined,
                                                                              "URL": undefined,
                                                                              "shownInDetailsView": true,
                                                                              "shownInInsertView": true,
                                                                              "shownInUpdateView": true,
                                                                              "visible": true,
                                                                              "dataType": Immutable.Record {
                                                                                "conceptURI": undefined,
                                                                                "display": "Text",
                                                                                "name": "string",
                                                                                "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                                                "alternateRangeURI": "xsd:string",
                                                                                "shortDisplay": "String",
                                                                                "lookupSchema": undefined,
                                                                                "lookupQuery": undefined,
                                                                              },
                                                                              "lookupQueryValue": undefined,
                                                                              "lookupType": Immutable.Record {
                                                                                "conceptURI": undefined,
                                                                                "display": "Lookup",
                                                                                "name": "lookup",
                                                                                "rangeURI": "xsd:string",
                                                                                "alternateRangeURI": undefined,
                                                                                "shortDisplay": undefined,
                                                                                "lookupSchema": undefined,
                                                                                "lookupQuery": undefined,
                                                                              },
                                                                              "original": Object {
                                                                                "conceptURI": undefined,
                                                                                "dataType": Immutable.Record {
                                                                                  "conceptURI": undefined,
                                                                                  "display": "Text",
                                                                                  "name": "string",
                                                                                  "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                                                  "alternateRangeURI": "xsd:string",
                                                                                  "shortDisplay": "String",
                                                                                  "lookupSchema": undefined,
                                                                                  "lookupQuery": undefined,
                                                                                },
                                                                                "rangeURI": undefined,
                                                                              },
                                                                              "updatedField": false,
                                                                              "isPrimaryKey": false,
                                                                              "lockType": "NotLocked",
                                                                              "wrappedColumnName": undefined,
                                                                            }
                                                                          }
                                                                          hideConditionalFormatting={false}
                                                                          index={0}
                                                                          onChange={[Function]}
                                                                          showingModal={[Function]}
                                                                          successBsStyle="success"
                                                                        >
                                                                          <div>
                                                                            <Row
                                                                              bsClass="row"
                                                                              className="domain-row-expanded"
                                                                              componentClass="div"
                                                                            >
                                                                              <div
                                                                                className="domain-row-expanded row"
                                                                              >
                                                                                <Col
                                                                                  bsClass="col"
                                                                                  componentClass="div"
                                                                                  xs={12}
                                                                                >
                                                                                  <div
                                                                                    className="col-xs-12"
                                                                                  >
                                                                                    <div
                                                                                      className="domain-field-section-heading domain-field-section-hdr"
                                                                                    >
                                                                                      Conditional Formatting and Validation Options
                                                                                    </div>
                                                                                  </div>
                                                                                </Col>
                                                                              </div>
                                                                            </Row>
                                                                            <Row
                                                                              bsClass="row"
                                                                              className="domain-row-expanded"
                                                                              componentClass="div"
                                                                            >
                                                                              <div
                                                                                className="domain-row-expanded row"
                                                                              >
                                                                                <Col
                                                                                  bsClass="col"
                                                                                  componentClass="div"
                                                                                  xs={12}
                                                                                >
                                                                                  <div
                                                                                    className="col-xs-12"
                                                                                  >
                                                                                    <div
                                                                                      className="domain-validation-group"
                                                                                    >
                                                                                      <div
                                                                                        className="domain-field-label domain-no-wrap"
                                                                                      >
                                                                                        Create Conditional Format Criteria
                                                                                        <LabelHelpTip
                                                                                          body={[Function]}
                                                                                          customStyle={Object {}}
                                                                                          id="tooltip"
                                                                                          size="1x"
                                                                                          title="Add Conditional Format"
                                                                                        >
                                                                                          <span
                                                                                            className="label-help-target"
                                                                                            onMouseOut={[Function]}
                                                                                            onMouseOver={[Function]}
                                                                                          >
                                                                                            <FontAwesomeIcon
                                                                                              border={false}
                                                                                              className="label-help-icon"
                                                                                              fixedWidth={false}
                                                                                              flip={null}
                                                                                              icon={
                                                                                                Object {
                                                                                                  "icon": Array [
                                                                                                    512,
                                                                                                    512,
                                                                                                    Array [],
                                                                                                    "f059",
                                                                                                    "M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z",
                                                                                                  ],
                                                                                                  "iconName": "question-circle",
                                                                                                  "prefix": "fas",
                                                                                                }
                                                                                              }
                                                                                              inverse={false}
                                                                                              listItem={false}
                                                                                              mask={null}
                                                                                              pull={null}
                                                                                              pulse={false}
                                                                                              rotation={null}
                                                                                              size="1x"
                                                                                              spin={false}
                                                                                              style={Object {}}
                                                                                              symbol={false}
                                                                                              title=""
                                                                                              transform={null}
                                                                                            >
                                                                                              <svg
                                                                                                aria-hidden="true"
                                                                                                className="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                                                                                                data-icon="question-circle"
                                                                                                data-prefix="fas"
                                                                                                focusable="false"
                                                                                                role="img"
                                                                                                style={Object {}}
                                                                                                viewBox="0 0 512 512"
                                                                                                xmlns="http://www.w3.org/2000/svg"
                                                                                              >
                                                                                                <path
                                                                                                  d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                                                                  fill="currentColor"
                                                                                                  style={Object {}}
                                                                                                />
                                                                                              </svg>
                                                                                            </FontAwesomeIcon>
                                                                                            <Overlay
                                                                                              animation={[Function]}
                                                                                              placement="right"
                                                                                              rootClose={false}
                                                                                              show={false}
                                                                                              target={
                                                                                                <span
                                                                                                  class="label-help-target"
                                                                                                >
                                                                                                  <svg
                                                                                                    aria-hidden="true"
                                                                                                    class="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                                                                                                    data-icon="question-circle"
                                                                                                    data-prefix="fas"
                                                                                                    focusable="false"
                                                                                                    role="img"
                                                                                                    viewBox="0 0 512 512"
                                                                                                    xmlns="http://www.w3.org/2000/svg"
                                                                                                  >
                                                                                                    <path
                                                                                                      d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                                                                      fill="currentColor"
                                                                                                    />
                                                                                                  </svg>
                                                                                                </span>
                                                                                              }
                                                                                            >
                                                                                              <Overlay
                                                                                                placement="right"
                                                                                                rootClose={false}
                                                                                                show={false}
                                                                                                target={
                                                                                                  <span
                                                                                                    class="label-help-target"
                                                                                                  >
                                                                                                    <svg
                                                                                                      aria-hidden="true"
                                                                                                      class="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                                                                                                      data-icon="question-circle"
                                                                                                      data-prefix="fas"
                                                                                                      focusable="false"
                                                                                                      role="img"
                                                                                                      viewBox="0 0 512 512"
                                                                                                      xmlns="http://www.w3.org/2000/svg"
                                                                                                    >
                                                                                                      <path
                                                                                                        d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                                                                        fill="currentColor"
                                                                                                      />
                                                                                                    </svg>
                                                                                                  </span>
                                                                                                }
                                                                                                transition={[Function]}
                                                                                              />
                                                                                            </Overlay>
                                                                                          </span>
                                                                                        </LabelHelpTip>
                                                                                      </div>
                                                                                      <div>
                                                                                        <Button
                                                                                          active={false}
                                                                                          block={false}
                                                                                          bsClass="btn"
                                                                                          bsStyle="default"
                                                                                          className="domain-validation-button"
                                                                                          disabled={false}
                                                                                          id="domainpropertiesrow-conditionalFormat-1-0"
                                                                                          name="domainpropertiesrow-conditionalFormat"
                                                                                          onClick={[Function]}
                                                                                        >
                                                                                          <button
                                                                                            className="domain-validation-button btn btn-default"
                                                                                            disabled={false}
                                                                                            id="domainpropertiesrow-conditionalFormat-1-0"
                                                                                            name="domainpropertiesrow-conditionalFormat"
                                                                                            onClick={[Function]}
                                                                                            type="button"
                                                                                          >
                                                                                            Add Format
                                                                                          </button>
                                                                                        </Button>
                                                                                        <span
                                                                                          className="domain-text-label"
                                                                                        >
                                                                                          None Set
                                                                                        </span>
                                                                                      </div>
                                                                                    </div>
                                                                                    <div
                                                                                      className="domain-validation-group"
                                                                                    >
                                                                                      <div
                                                                                        className="domain-field-label domain-no-wrap"
                                                                                      >
                                                                                        Create Regular Expression Validator
                                                                                        <LabelHelpTip
                                                                                          body={[Function]}
                                                                                          customStyle={Object {}}
                                                                                          id="tooltip"
                                                                                          size="1x"
                                                                                          title="Add Regex Validator"
                                                                                        >
                                                                                          <span
                                                                                            className="label-help-target"
                                                                                            onMouseOut={[Function]}
                                                                                            onMouseOver={[Function]}
                                                                                          >
                                                                                            <FontAwesomeIcon
                                                                                              border={false}
                                                                                              className="label-help-icon"
                                                                                              fixedWidth={false}
                                                                                              flip={null}
                                                                                              icon={
                                                                                                Object {
                                                                                                  "icon": Array [
                                                                                                    512,
                                                                                                    512,
                                                                                                    Array [],
                                                                                                    "f059",
                                                                                                    "M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z",
                                                                                                  ],
                                                                                                  "iconName": "question-circle",
                                                                                                  "prefix": "fas",
                                                                                                }
                                                                                              }
                                                                                              inverse={false}
                                                                                              listItem={false}
                                                                                              mask={null}
                                                                                              pull={null}
                                                                                              pulse={false}
                                                                                              rotation={null}
                                                                                              size="1x"
                                                                                              spin={false}
                                                                                              style={Object {}}
                                                                                              symbol={false}
                                                                                              title=""
                                                                                              transform={null}
                                                                                            >
                                                                                              <svg
                                                                                                aria-hidden="true"
                                                                                                className="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                                                                                                data-icon="question-circle"
                                                                                                data-prefix="fas"
                                                                                                focusable="false"
                                                                                                role="img"
                                                                                                style={Object {}}
                                                                                                viewBox="0 0 512 512"
                                                                                                xmlns="http://www.w3.org/2000/svg"
                                                                                              >
                                                                                                <path
                                                                                                  d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                                                                  fill="currentColor"
                                                                                                  style={Object {}}
                                                                                                />
                                                                                              </svg>
                                                                                            </FontAwesomeIcon>
                                                                                            <Overlay
                                                                                              animation={[Function]}
                                                                                              placement="right"
                                                                                              rootClose={false}
                                                                                              show={false}
                                                                                              target={
                                                                                                <span
                                                                                                  class="label-help-target"
                                                                                                >
                                                                                                  <svg
                                                                                                    aria-hidden="true"
                                                                                                    class="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                                                                                                    data-icon="question-circle"
                                                                                                    data-prefix="fas"
                                                                                                    focusable="false"
                                                                                                    role="img"
                                                                                                    viewBox="0 0 512 512"
                                                                                                    xmlns="http://www.w3.org/2000/svg"
                                                                                                  >
                                                                                                    <path
                                                                                                      d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                                                                      fill="currentColor"
                                                                                                    />
                                                                                                  </svg>
                                                                                                </span>
                                                                                              }
                                                                                            >
                                                                                              <Overlay
                                                                                                placement="right"
                                                                                                rootClose={false}
                                                                                                show={false}
                                                                                                target={
                                                                                                  <span
                                                                                                    class="label-help-target"
                                                                                                  >
                                                                                                    <svg
                                                                                                      aria-hidden="true"
                                                                                                      class="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                                                                                                      data-icon="question-circle"
                                                                                                      data-prefix="fas"
                                                                                                      focusable="false"
                                                                                                      role="img"
                                                                                                      viewBox="0 0 512 512"
                                                                                                      xmlns="http://www.w3.org/2000/svg"
                                                                                                    >
                                                                                                      <path
                                                                                                        d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                                                                        fill="currentColor"
                                                                                                      />
                                                                                                    </svg>
                                                                                                  </span>
                                                                                                }
                                                                                                transition={[Function]}
                                                                                              />
                                                                                            </Overlay>
                                                                                          </span>
                                                                                        </LabelHelpTip>
                                                                                      </div>
                                                                                      <div>
                                                                                        <Button
                                                                                          active={false}
                                                                                          block={false}
                                                                                          bsClass="btn"
                                                                                          bsStyle="default"
                                                                                          className="domain-validation-button"
                                                                                          disabled={false}
                                                                                          id="domainpropertiesrow-regexValidator-1-0"
                                                                                          name="domainpropertiesrow-regexValidator"
                                                                                          onClick={[Function]}
                                                                                        >
                                                                                          <button
                                                                                            className="domain-validation-button btn btn-default"
                                                                                            disabled={false}
                                                                                            id="domainpropertiesrow-regexValidator-1-0"
                                                                                            name="domainpropertiesrow-regexValidator"
                                                                                            onClick={[Function]}
                                                                                            type="button"
                                                                                          >
                                                                                            Add Regex
                                                                                          </button>
                                                                                        </Button>
                                                                                        <span
                                                                                          className="domain-text-label"
                                                                                        >
                                                                                          None Set
                                                                                        </span>
                                                                                      </div>
                                                                                    </div>
                                                                                  </div>
                                                                                </Col>
                                                                              </div>
                                                                            </Row>
                                                                          </div>
                                                                        </ConditionalFormattingAndValidation>
                                                                      </div>
                                                                    </Col>
                                                                  </div>
                                                                </div>
                                                              </DomainRowExpandedOptions>
                                                            </div>
                                                          </Transition>
                                                        </Collapse>
                                                      </div>
                                                    </Draggable>
                                                  </ConnectFunction>
                                                </DomainRow>
                                                <DomainRow
                                                  appPropertiesOnly={false}
                                                  availableTypes={
                                                    Immutable.List [
                                                      Immutable.Record {
                                                        "conceptURI": undefined,
                                                        "display": "Text",
                                                        "name": "string",
                                                        "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                        "alternateRangeURI": "xsd:string",
                                                        "shortDisplay": "String",
                                                        "lookupSchema": undefined,
                                                        "lookupQuery": undefined,
                                                      },
                                                      Immutable.Record {
                                                        "conceptURI": undefined,
                                                        "display": "Multi-Line Text",
                                                        "name": "multiLine",
                                                        "rangeURI": "http://www.w3.org/2001/XMLSchema#multiLine",
                                                        "alternateRangeURI": undefined,
                                                        "shortDisplay": undefined,
                                                        "lookupSchema": undefined,
                                                        "lookupQuery": undefined,
                                                      },
                                                      Immutable.Record {
                                                        "conceptURI": undefined,
                                                        "display": "Boolean",
                                                        "name": "boolean",
                                                        "rangeURI": "http://www.w3.org/2001/XMLSchema#boolean",
                                                        "alternateRangeURI": "xsd:boolean",
                                                        "shortDisplay": undefined,
                                                        "lookupSchema": undefined,
                                                        "lookupQuery": undefined,
                                                      },
                                                      Immutable.Record {
                                                        "conceptURI": undefined,
                                                        "display": "Integer",
                                                        "name": "int",
                                                        "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                                        "alternateRangeURI": "xsd:int",
                                                        "shortDisplay": undefined,
                                                        "lookupSchema": undefined,
                                                        "lookupQuery": undefined,
                                                      },
                                                      Immutable.Record {
                                                        "conceptURI": undefined,
                                                        "display": "Decimal",
                                                        "name": "double",
                                                        "rangeURI": "http://www.w3.org/2001/XMLSchema#double",
                                                        "alternateRangeURI": "xsd:double",
                                                        "shortDisplay": undefined,
                                                        "lookupSchema": undefined,
                                                        "lookupQuery": undefined,
                                                      },
                                                      Immutable.Record {
                                                        "conceptURI": undefined,
                                                        "display": "Date Time",
                                                        "name": "dateTime",
                                                        "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                                                        "alternateRangeURI": "xsd:dateTime",
                                                        "shortDisplay": undefined,
                                                        "lookupSchema": undefined,
                                                        "lookupQuery": undefined,
                                                      },
                                                      Immutable.Record {
                                                        "conceptURI": "http://www.labkey.org/exp/xml#flag",
                                                        "display": "Flag",
                                                        "name": "flag",
                                                        "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                        "alternateRangeURI": undefined,
                                                        "shortDisplay": undefined,
                                                        "lookupSchema": undefined,
                                                        "lookupQuery": undefined,
                                                      },
                                                      Immutable.Record {
                                                        "conceptURI": undefined,
                                                        "display": "File",
                                                        "name": "fileLink",
                                                        "rangeURI": "http://cpas.fhcrc.org/exp/xml#fileLink",
                                                        "alternateRangeURI": undefined,
                                                        "shortDisplay": undefined,
                                                        "lookupSchema": undefined,
                                                        "lookupQuery": undefined,
                                                      },
                                                      Immutable.Record {
                                                        "conceptURI": undefined,
                                                        "display": "Attachment",
                                                        "name": "attachment",
                                                        "rangeURI": "http://www.labkey.org/exp/xml#attachment",
                                                        "alternateRangeURI": undefined,
                                                        "shortDisplay": undefined,
                                                        "lookupSchema": undefined,
                                                        "lookupQuery": undefined,
                                                      },
                                                      Immutable.Record {
                                                        "conceptURI": undefined,
                                                        "display": "User",
                                                        "name": "users",
                                                        "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                                        "alternateRangeURI": undefined,
                                                        "shortDisplay": undefined,
                                                        "lookupSchema": "core",
                                                        "lookupQuery": "users",
                                                      },
                                                      Immutable.Record {
                                                        "conceptURI": "http://cpas.labkey.com/Study#ParticipantId",
                                                        "display": "Subject/Participant",
                                                        "name": "ParticipantId",
                                                        "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                        "alternateRangeURI": undefined,
                                                        "shortDisplay": undefined,
                                                        "lookupSchema": undefined,
                                                        "lookupQuery": undefined,
                                                      },
                                                      Immutable.Record {
                                                        "conceptURI": undefined,
                                                        "display": "Lookup",
                                                        "name": "lookup",
                                                        "rangeURI": undefined,
                                                        "alternateRangeURI": undefined,
                                                        "shortDisplay": undefined,
                                                        "lookupSchema": undefined,
                                                        "lookupQuery": undefined,
                                                      },
                                                      Immutable.Record {
                                                        "conceptURI": "http://www.labkey.org/exp/xml#sample",
                                                        "display": "Sample",
                                                        "name": "sample",
                                                        "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                                        "alternateRangeURI": undefined,
                                                        "shortDisplay": undefined,
                                                        "lookupSchema": undefined,
                                                        "lookupQuery": undefined,
                                                      },
                                                    ]
                                                  }
                                                  defaultValueOptions={Immutable.List []}
                                                  domainFormDisplayOptions={
                                                    Object {
                                                      "isDragDisabled": false,
                                                      "phiLevelDisabled": false,
                                                      "showAddFieldsButton": true,
                                                      "showRequired": true,
                                                      "showTextOptions": true,
                                                      "showValidators": true,
                                                    }
                                                  }
                                                  domainId={null}
                                                  domainIndex={1}
                                                  dragging={false}
                                                  expandTransition={300}
                                                  expanded={false}
                                                  field={
                                                    Immutable.Record {
                                                      "conceptURI": undefined,
                                                      "conditionalFormats": Immutable.List [],
                                                      "defaultScale": undefined,
                                                      "defaultValueType": undefined,
                                                      "defaultValue": undefined,
                                                      "defaultDisplayValue": undefined,
                                                      "description": undefined,
                                                      "dimension": undefined,
                                                      "excludeFromShifting": false,
                                                      "format": undefined,
                                                      "hidden": false,
                                                      "importAliases": undefined,
                                                      "label": undefined,
                                                      "lookupContainer": undefined,
                                                      "lookupQuery": undefined,
                                                      "lookupSchema": undefined,
                                                      "lookupValidator": undefined,
                                                      "measure": undefined,
                                                      "mvEnabled": false,
                                                      "name": "field2",
                                                      "PHI": undefined,
                                                      "primaryKey": undefined,
                                                      "propertyId": undefined,
                                                      "propertyURI": undefined,
                                                      "propertyValidators": Immutable.List [],
                                                      "rangeValidators": Immutable.List [],
                                                      "rangeURI": "xsd:int",
                                                      "regexValidators": Immutable.List [],
                                                      "recommendedVariable": false,
                                                      "required": false,
                                                      "scale": undefined,
                                                      "URL": undefined,
                                                      "shownInDetailsView": true,
                                                      "shownInInsertView": true,
                                                      "shownInUpdateView": true,
                                                      "visible": true,
                                                      "dataType": Immutable.Record {
                                                        "conceptURI": undefined,
                                                        "display": "Integer",
                                                        "name": "int",
                                                        "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                                        "alternateRangeURI": "xsd:int",
                                                        "shortDisplay": undefined,
                                                        "lookupSchema": undefined,
                                                        "lookupQuery": undefined,
                                                      },
                                                      "lookupQueryValue": undefined,
                                                      "lookupType": Immutable.Record {
                                                        "conceptURI": undefined,
                                                        "display": "Lookup",
                                                        "name": "lookup",
                                                        "rangeURI": "xsd:int",
                                                        "alternateRangeURI": undefined,
                                                        "shortDisplay": undefined,
                                                        "lookupSchema": undefined,
                                                        "lookupQuery": undefined,
                                                      },
                                                      "original": Object {
                                                        "conceptURI": undefined,
                                                        "dataType": Immutable.Record {
                                                          "conceptURI": undefined,
                                                          "display": "Integer",
                                                          "name": "int",
                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                                          "alternateRangeURI": "xsd:int",
                                                          "shortDisplay": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                        "rangeURI": undefined,
                                                      },
                                                      "updatedField": false,
                                                      "isPrimaryKey": false,
                                                      "lockType": "NotLocked",
                                                      "wrappedColumnName": undefined,
                                                    }
                                                  }
                                                  helpNoun="field designer"
                                                  index={1}
                                                  key="domain-row-key-1"
                                                  maxPhiLevel="NotPHI"
                                                  onChange={[Function]}
                                                  onDelete={[Function]}
                                                  onExpand={[Function]}
                                                  showDefaultValueSettings={false}
                                                  showFilePropertyType={false}
                                                  successBsStyle="success"
                                                >
                                                  <ConnectFunction
                                                    disableInteractiveElementBlocking={false}
                                                    draggableId="domainpropertiesrow-domaindrag-1-1"
                                                    index={1}
                                                    isDragDisabled={false}
                                                    shouldRespectForcePress={false}
                                                  >
                                                    <Draggable
                                                      disableInteractiveElementBlocking={false}
                                                      draggableId="domainpropertiesrow-domaindrag-1-1"
                                                      drop={[Function]}
                                                      dropAnimationFinished={[Function]}
                                                      index={1}
                                                      isDragDisabled={false}
                                                      lift={[Function]}
                                                      mapped={
                                                        Object {
                                                          "combineTargetFor": null,
                                                          "offset": Object {
                                                            "x": 0,
                                                            "y": 0,
                                                          },
                                                          "shouldAnimateDisplacement": true,
                                                          "snapshot": Object {
                                                            "combineTargetFor": null,
                                                            "combineWith": null,
                                                            "draggingOver": null,
                                                            "dropAnimation": null,
                                                            "isDragging": false,
                                                            "isDropAnimating": false,
                                                            "mode": null,
                                                          },
                                                          "type": "SECONDARY",
                                                        }
                                                      }
                                                      move={[Function]}
                                                      moveByWindowScroll={[Function]}
                                                      moveDown={[Function]}
                                                      moveLeft={[Function]}
                                                      moveRight={[Function]}
                                                      moveUp={[Function]}
                                                      shouldRespectForcePress={false}
                                                    >
                                                      <div
                                                        className="domain-field-row domain-row-border-default"
                                                        data-react-beautiful-dnd-draggable="1"
                                                        onTransitionEnd={null}
                                                        style={
                                                          Object {
                                                            "transform": null,
                                                            "transition": null,
                                                          }
                                                        }
                                                        tabIndex={1}
                                                      >
                                                        <Row
                                                          bsClass="row"
                                                          className="domain-row-container"
                                                          componentClass="div"
                                                          key="domainpropertiesrow-domainrow-1-1"
                                                        >
                                                          <div
                                                            className="domain-row-container row"
                                                          >
                                                            <AdvancedSettings
                                                              defaultValueOptions={Immutable.List []}
                                                              domainFormDisplayOptions={
                                                                Object {
                                                                  "isDragDisabled": false,
                                                                  "phiLevelDisabled": false,
                                                                  "showAddFieldsButton": true,
                                                                  "showRequired": true,
                                                                  "showTextOptions": true,
                                                                  "showValidators": true,
                                                                }
                                                              }
                                                              domainId={null}
                                                              domainIndex={1}
                                                              field={
                                                                Immutable.Record {
                                                                  "conceptURI": undefined,
                                                                  "conditionalFormats": Immutable.List [],
                                                                  "defaultScale": undefined,
                                                                  "defaultValueType": undefined,
                                                                  "defaultValue": undefined,
                                                                  "defaultDisplayValue": undefined,
                                                                  "description": undefined,
                                                                  "dimension": undefined,
                                                                  "excludeFromShifting": false,
                                                                  "format": undefined,
                                                                  "hidden": false,
                                                                  "importAliases": undefined,
                                                                  "label": undefined,
                                                                  "lookupContainer": undefined,
                                                                  "lookupQuery": undefined,
                                                                  "lookupSchema": undefined,
                                                                  "lookupValidator": undefined,
                                                                  "measure": undefined,
                                                                  "mvEnabled": false,
                                                                  "name": "field2",
                                                                  "PHI": undefined,
                                                                  "primaryKey": undefined,
                                                                  "propertyId": undefined,
                                                                  "propertyURI": undefined,
                                                                  "propertyValidators": Immutable.List [],
                                                                  "rangeValidators": Immutable.List [],
                                                                  "rangeURI": "xsd:int",
                                                                  "regexValidators": Immutable.List [],
                                                                  "recommendedVariable": false,
                                                                  "required": false,
                                                                  "scale": undefined,
                                                                  "URL": undefined,
                                                                  "shownInDetailsView": true,
                                                                  "shownInInsertView": true,
                                                                  "shownInUpdateView": true,
                                                                  "visible": true,
                                                                  "dataType": Immutable.Record {
                                                                    "conceptURI": undefined,
                                                                    "display": "Integer",
                                                                    "name": "int",
                                                                    "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                                                    "alternateRangeURI": "xsd:int",
                                                                    "shortDisplay": undefined,
                                                                    "lookupSchema": undefined,
                                                                    "lookupQuery": undefined,
                                                                  },
                                                                  "lookupQueryValue": undefined,
                                                                  "lookupType": Immutable.Record {
                                                                    "conceptURI": undefined,
                                                                    "display": "Lookup",
                                                                    "name": "lookup",
                                                                    "rangeURI": "xsd:int",
                                                                    "alternateRangeURI": undefined,
                                                                    "shortDisplay": undefined,
                                                                    "lookupSchema": undefined,
                                                                    "lookupQuery": undefined,
                                                                  },
                                                                  "original": Object {
                                                                    "conceptURI": undefined,
                                                                    "dataType": Immutable.Record {
                                                                      "conceptURI": undefined,
                                                                      "display": "Integer",
                                                                      "name": "int",
                                                                      "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                                                      "alternateRangeURI": "xsd:int",
                                                                      "shortDisplay": undefined,
                                                                      "lookupSchema": undefined,
                                                                      "lookupQuery": undefined,
                                                                    },
                                                                    "rangeURI": undefined,
                                                                  },
                                                                  "updatedField": false,
                                                                  "isPrimaryKey": false,
                                                                  "lockType": "NotLocked",
                                                                  "wrappedColumnName": undefined,
                                                                }
                                                              }
                                                              helpNoun="field designer"
                                                              index={1}
                                                              label="field2"
                                                              maxPhiLevel="NotPHI"
                                                              onApply={[Function]}
                                                              onHide={[Function]}
                                                              show={false}
                                                              showDefaultValueSettings={false}
                                                              successBsStyle="success"
                                                            >
                                                              <Modal
                                                                animation={true}
                                                                autoFocus={true}
                                                                backdrop={true}
                                                                bsClass="modal"
                                                                dialogComponentClass={[Function]}
                                                                enforceFocus={true}
                                                                keyboard={true}
                                                                manager={
                                                                  ModalManager {
                                                                    "add": [Function],
                                                                    "containers": Array [],
                                                                    "data": Array [],
                                                                    "handleContainerOverflow": true,
                                                                    "hideSiblingNodes": true,
                                                                    "isTopModal": [Function],
                                                                    "modals": Array [],
                                                                    "remove": [Function],
                                                                  }
                                                                }
                                                                onEnter={[Function]}
                                                                onHide={[Function]}
                                                                renderBackdrop={[Function]}
                                                                restoreFocus={true}
                                                                show={false}
                                                              >
                                                                <Modal
                                                                  autoFocus={true}
                                                                  backdrop={true}
                                                                  backdropClassName="modal-backdrop"
                                                                  backdropTransition={[Function]}
                                                                  containerClassName="modal-open"
                                                                  enforceFocus={true}
                                                                  keyboard={true}
                                                                  manager={
                                                                    ModalManager {
                                                                      "add": [Function],
                                                                      "containers": Array [],
                                                                      "data": Array [],
                                                                      "handleContainerOverflow": true,
                                                                      "hideSiblingNodes": true,
                                                                      "isTopModal": [Function],
                                                                      "modals": Array [],
                                                                      "remove": [Function],
                                                                    }
                                                                  }
                                                                  onEnter={[Function]}
                                                                  onEntering={[Function]}
                                                                  onExited={[Function]}
                                                                  onHide={[Function]}
                                                                  renderBackdrop={[Function]}
                                                                  restoreFocus={true}
                                                                  show={false}
                                                                  transition={[Function]}
                                                                />
                                                              </Modal>
                                                            </AdvancedSettings>
                                                            <div
                                                              aria-roledescription="Draggable item. Press space bar to lift"
                                                              className="domain-row-handle"
                                                              data-react-beautiful-dnd-drag-handle="1"
                                                              draggable={false}
                                                              onBlur={[Function]}
                                                              onDragStart={[Function]}
                                                              onFocus={[Function]}
                                                              onKeyDown={[Function]}
                                                              onMouseDown={[Function]}
                                                              onTouchStart={[Function]}
                                                              tabIndex={0}
                                                            >
                                                              <DragDropHandle>
                                                                <FontAwesomeIcon
                                                                  border={false}
                                                                  className=""
                                                                  fixedWidth={false}
                                                                  flip={null}
                                                                  icon={
                                                                    Object {
                                                                      "icon": Array [
                                                                        320,
                                                                        512,
                                                                        Array [],
                                                                        "f58e",
                                                                        "M96 32H32C14.33 32 0 46.33 0 64v64c0 17.67 14.33 32 32 32h64c17.67 0 32-14.33 32-32V64c0-17.67-14.33-32-32-32zm0 160H32c-17.67 0-32 14.33-32 32v64c0 17.67 14.33 32 32 32h64c17.67 0 32-14.33 32-32v-64c0-17.67-14.33-32-32-32zm0 160H32c-17.67 0-32 14.33-32 32v64c0 17.67 14.33 32 32 32h64c17.67 0 32-14.33 32-32v-64c0-17.67-14.33-32-32-32zM288 32h-64c-17.67 0-32 14.33-32 32v64c0 17.67 14.33 32 32 32h64c17.67 0 32-14.33 32-32V64c0-17.67-14.33-32-32-32zm0 160h-64c-17.67 0-32 14.33-32 32v64c0 17.67 14.33 32 32 32h64c17.67 0 32-14.33 32-32v-64c0-17.67-14.33-32-32-32zm0 160h-64c-17.67 0-32 14.33-32 32v64c0 17.67 14.33 32 32 32h64c17.67 0 32-14.33 32-32v-64c0-17.67-14.33-32-32-32z",
                                                                      ],
                                                                      "iconName": "grip-vertical",
                                                                      "prefix": "fas",
                                                                    }
                                                                  }
                                                                  inverse={false}
                                                                  listItem={false}
                                                                  mask={null}
                                                                  pull={null}
                                                                  pulse={false}
                                                                  rotation={null}
                                                                  size="lg"
                                                                  spin={false}
                                                                  symbol={false}
                                                                  title=""
                                                                  transform={null}
                                                                >
                                                                  <svg
                                                                    aria-hidden="true"
                                                                    className="svg-inline--fa fa-grip-vertical fa-w-10 fa-lg "
                                                                    data-icon="grip-vertical"
                                                                    data-prefix="fas"
                                                                    focusable="false"
                                                                    role="img"
                                                                    style={Object {}}
                                                                    viewBox="0 0 320 512"
                                                                    xmlns="http://www.w3.org/2000/svg"
                                                                  >
                                                                    <path
                                                                      d="M96 32H32C14.33 32 0 46.33 0 64v64c0 17.67 14.33 32 32 32h64c17.67 0 32-14.33 32-32V64c0-17.67-14.33-32-32-32zm0 160H32c-17.67 0-32 14.33-32 32v64c0 17.67 14.33 32 32 32h64c17.67 0 32-14.33 32-32v-64c0-17.67-14.33-32-32-32zm0 160H32c-17.67 0-32 14.33-32 32v64c0 17.67 14.33 32 32 32h64c17.67 0 32-14.33 32-32v-64c0-17.67-14.33-32-32-32zM288 32h-64c-17.67 0-32 14.33-32 32v64c0 17.67 14.33 32 32 32h64c17.67 0 32-14.33 32-32V64c0-17.67-14.33-32-32-32zm0 160h-64c-17.67 0-32 14.33-32 32v64c0 17.67 14.33 32 32 32h64c17.67 0 32-14.33 32-32v-64c0-17.67-14.33-32-32-32zm0 160h-64c-17.67 0-32 14.33-32 32v64c0 17.67 14.33 32 32 32h64c17.67 0 32-14.33 32-32v-64c0-17.67-14.33-32-32-32z"
                                                                      fill="currentColor"
                                                                      style={Object {}}
                                                                    />
                                                                  </svg>
                                                                </FontAwesomeIcon>
                                                              </DragDropHandle>
                                                            </div>
                                                            <div
                                                              className="domain-row-main"
                                                            >
                                                              <Col
                                                                bsClass="col"
                                                                className="domain-row-base-fields"
                                                                componentClass="div"
                                                                xs={6}
                                                              >
                                                                <div
                                                                  className="domain-row-base-fields col-xs-6"
                                                                >
                                                                  <div
                                                                    id="domainpropertiesrow-row-1-1"
                                                                  >
                                                                    <Col
                                                                      bsClass="col"
                                                                      componentClass="div"
                                                                      xs={6}
                                                                    >
                                                                      <div
                                                                        className="col-xs-6"
                                                                      >
                                                                        <FormControl
                                                                          bsClass="form-control"
                                                                          componentClass="input"
                                                                          disabled={false}
                                                                          id="domainpropertiesrow-name-1-1"
                                                                          name="domainpropertiesrow-name"
                                                                          onChange={[Function]}
                                                                          type="text"
                                                                          value="field2"
                                                                        >
                                                                          <input
                                                                            className="form-control"
                                                                            disabled={false}
                                                                            id="domainpropertiesrow-name-1-1"
                                                                            name="domainpropertiesrow-name"
                                                                            onChange={[Function]}
                                                                            type="text"
                                                                            value="field2"
                                                                          />
                                                                        </FormControl>
                                                                      </div>
                                                                    </Col>
                                                                    <Col
                                                                      bsClass="col"
                                                                      componentClass="div"
                                                                      xs={4}
                                                                    >
                                                                      <div
                                                                        className="col-xs-4"
                                                                      >
                                                                        <FormControl
                                                                          bsClass="form-control"
                                                                          componentClass="select"
                                                                          disabled={false}
                                                                          id="domainpropertiesrow-type-1-1"
                                                                          name="domainpropertiesrow-type"
                                                                          onChange={[Function]}
                                                                          value="int"
                                                                        >
                                                                          <select
                                                                            className="form-control"
                                                                            disabled={false}
                                                                            id="domainpropertiesrow-type-1-1"
                                                                            name="domainpropertiesrow-type"
                                                                            onChange={[Function]}
                                                                            value="int"
                                                                          >
                                                                            <option
                                                                              key="0"
                                                                              value="string"
                                                                            >
                                                                              Text
                                                                            </option>
                                                                            <option
                                                                              key="1"
                                                                              value="multiLine"
                                                                            >
                                                                              Multi-Line Text
                                                                            </option>
                                                                            <option
                                                                              key="2"
                                                                              value="boolean"
                                                                            >
                                                                              Boolean
                                                                            </option>
                                                                            <option
                                                                              key="3"
                                                                              value="int"
                                                                            >
                                                                              Integer
                                                                            </option>
                                                                            <option
                                                                              key="4"
                                                                              value="double"
                                                                            >
                                                                              Decimal
                                                                            </option>
                                                                            <option
                                                                              key="5"
                                                                              value="dateTime"
                                                                            >
                                                                              Date Time
                                                                            </option>
                                                                            <option
                                                                              key="6"
                                                                              value="flag"
                                                                            >
                                                                              Flag
                                                                            </option>
                                                                            <option
                                                                              key="7"
                                                                              value="fileLink"
                                                                            >
                                                                              File
                                                                            </option>
                                                                            <option
                                                                              key="8"
                                                                              value="attachment"
                                                                            >
                                                                              Attachment
                                                                            </option>
                                                                            <option
                                                                              key="9"
                                                                              value="users"
                                                                            >
                                                                              User
                                                                            </option>
                                                                            <option
                                                                              key="10"
                                                                              value="ParticipantId"
                                                                            >
                                                                              Subject/Participant
                                                                            </option>
                                                                            <option
                                                                              key="11"
                                                                              value="lookup"
                                                                            >
                                                                              Lookup
                                                                            </option>
                                                                            <option
                                                                              key="12"
                                                                              value="sample"
                                                                            >
                                                                              Sample
                                                                            </option>
                                                                          </select>
                                                                        </FormControl>
                                                                      </div>
                                                                    </Col>
                                                                    <Col
                                                                      bsClass="col"
                                                                      componentClass="div"
                                                                      xs={2}
                                                                    >
                                                                      <div
                                                                        className="col-xs-2"
                                                                      >
                                                                        <div
                                                                          className="domain-field-checkbox-container"
                                                                        >
                                                                          <Checkbox
                                                                            bsClass="checkbox"
                                                                            checked={false}
                                                                            className="domain-field-checkbox"
                                                                            disabled={false}
                                                                            id="domainpropertiesrow-required-1-1"
                                                                            inline={false}
                                                                            name="domainpropertiesrow-required"
                                                                            onChange={[Function]}
                                                                            title=""
                                                                          >
                                                                            <div
                                                                              className="domain-field-checkbox checkbox"
                                                                            >
                                                                              <label
                                                                                title=""
                                                                              >
                                                                                <input
                                                                                  checked={false}
                                                                                  disabled={false}
                                                                                  id="domainpropertiesrow-required-1-1"
                                                                                  name="domainpropertiesrow-required"
                                                                                  onChange={[Function]}
                                                                                  type="checkbox"
                                                                                />
                                                                              </label>
                                                                            </div>
                                                                          </Checkbox>
                                                                        </div>
                                                                      </div>
                                                                    </Col>
                                                                  </div>
                                                                </div>
                                                              </Col>
                                                              <Col
                                                                bsClass="col"
                                                                className="field-details-container"
                                                                componentClass="div"
                                                                xs={6}
                                                              >
                                                                <div
                                                                  className="field-details-container col-xs-6"
                                                                >
                                                                  <div
                                                                    className="domain-field-details"
                                                                    id="domainpropertiesrow-details-1-1"
                                                                  >
                                                                    New Field
                                                                  </div>
                                                                  <div
                                                                    className="domain-field-buttons"
                                                                  >
                                                                    <DeleteIcon
                                                                      iconCls="domain-field-delete-icon"
                                                                      id="domainpropertiesrow-delete-1-1"
                                                                      onDelete={[Function]}
                                                                      title="Remove field"
                                                                    >
                                                                      <span
                                                                        className="field-icon"
                                                                        id="domainpropertiesrow-delete-1-1"
                                                                        onClick={[Function]}
                                                                        title="Remove field"
                                                                      >
                                                                        <FontAwesomeIcon
                                                                          border={false}
                                                                          className="domain-field-delete-icon"
                                                                          fixedWidth={false}
                                                                          flip={null}
                                                                          icon={
                                                                            Object {
                                                                              "icon": Array [
                                                                                512,
                                                                                512,
                                                                                Array [],
                                                                                "f057",
                                                                                "M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8zm121.6 313.1c4.7 4.7 4.7 12.3 0 17L338 377.6c-4.7 4.7-12.3 4.7-17 0L256 312l-65.1 65.6c-4.7 4.7-12.3 4.7-17 0L134.4 338c-4.7-4.7-4.7-12.3 0-17l65.6-65-65.6-65.1c-4.7-4.7-4.7-12.3 0-17l39.6-39.6c4.7-4.7 12.3-4.7 17 0l65 65.7 65.1-65.6c4.7-4.7 12.3-4.7 17 0l39.6 39.6c4.7 4.7 4.7 12.3 0 17L312 256l65.6 65.1z",
                                                                              ],
                                                                              "iconName": "times-circle",
                                                                              "prefix": "fas",
                                                                            }
                                                                          }
                                                                          inverse={false}
                                                                          listItem={false}
                                                                          mask={null}
                                                                          pull={null}
                                                                          pulse={false}
                                                                          rotation={null}
                                                                          size={null}
                                                                          spin={false}
                                                                          symbol={false}
                                                                          title=""
                                                                          transform={null}
                                                                        >
                                                                          <svg
                                                                            aria-hidden="true"
                                                                            className="svg-inline--fa fa-times-circle fa-w-16 domain-field-delete-icon"
                                                                            data-icon="times-circle"
                                                                            data-prefix="fas"
                                                                            focusable="false"
                                                                            role="img"
                                                                            style={Object {}}
                                                                            viewBox="0 0 512 512"
                                                                            xmlns="http://www.w3.org/2000/svg"
                                                                          >
                                                                            <path
                                                                              d="M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8zm121.6 313.1c4.7 4.7 4.7 12.3 0 17L338 377.6c-4.7 4.7-12.3 4.7-17 0L256 312l-65.1 65.6c-4.7 4.7-12.3 4.7-17 0L134.4 338c-4.7-4.7-4.7-12.3 0-17l65.6-65-65.6-65.1c-4.7-4.7-4.7-12.3 0-17l39.6-39.6c4.7-4.7 12.3-4.7 17 0l65 65.7 65.1-65.6c4.7-4.7 12.3-4.7 17 0l39.6 39.6c4.7 4.7 4.7 12.3 0 17L312 256l65.6 65.1z"
                                                                              fill="currentColor"
                                                                              style={Object {}}
                                                                            />
                                                                          </svg>
                                                                        </FontAwesomeIcon>
                                                                      </span>
                                                                    </DeleteIcon>
                                                                    <FieldExpansionToggle
                                                                      cls="domain-field-expand-icon"
                                                                      collapsedTitle="Show additional field properties"
                                                                      expanded={false}
                                                                      expandedTitle="Hide additional field properties"
                                                                      id="domainpropertiesrow-expand-1-1"
                                                                      onClick={[Function]}
                                                                    >
                                                                      <div
                                                                        className="field-icon domain-field-expand-icon"
                                                                        id="domainpropertiesrow-expand-1-1"
                                                                        onClick={[Function]}
                                                                        title="Show additional field properties"
                                                                      >
                                                                        <FontAwesomeIcon
                                                                          border={false}
                                                                          className=""
                                                                          fixedWidth={false}
                                                                          flip={null}
                                                                          icon={
                                                                            Object {
                                                                              "icon": Array [
                                                                                448,
                                                                                512,
                                                                                Array [],
                                                                                "f0fe",
                                                                                "M400 32H48C21.5 32 0 53.5 0 80v352c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V80c0-26.5-21.5-48-48-48zm-32 252c0 6.6-5.4 12-12 12h-92v92c0 6.6-5.4 12-12 12h-56c-6.6 0-12-5.4-12-12v-92H92c-6.6 0-12-5.4-12-12v-56c0-6.6 5.4-12 12-12h92v-92c0-6.6 5.4-12 12-12h56c6.6 0 12 5.4 12 12v92h92c6.6 0 12 5.4 12 12v56z",
                                                                              ],
                                                                              "iconName": "plus-square",
                                                                              "prefix": "fas",
                                                                            }
                                                                          }
                                                                          inverse={false}
                                                                          listItem={false}
                                                                          mask={null}
                                                                          pull={null}
                                                                          pulse={false}
                                                                          rotation={null}
                                                                          size="lg"
                                                                          spin={false}
                                                                          symbol={false}
                                                                          title=""
                                                                          transform={null}
                                                                        >
                                                                          <svg
                                                                            aria-hidden="true"
                                                                            className="svg-inline--fa fa-plus-square fa-w-14 fa-lg "
                                                                            data-icon="plus-square"
                                                                            data-prefix="fas"
                                                                            focusable="false"
                                                                            role="img"
                                                                            style={Object {}}
                                                                            viewBox="0 0 448 512"
                                                                            xmlns="http://www.w3.org/2000/svg"
                                                                          >
                                                                            <path
                                                                              d="M400 32H48C21.5 32 0 53.5 0 80v352c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V80c0-26.5-21.5-48-48-48zm-32 252c0 6.6-5.4 12-12 12h-92v92c0 6.6-5.4 12-12 12h-56c-6.6 0-12-5.4-12-12v-92H92c-6.6 0-12-5.4-12-12v-56c0-6.6 5.4-12 12-12h92v-92c0-6.6 5.4-12 12-12h56c6.6 0 12 5.4 12 12v92h92c6.6 0 12 5.4 12 12v56z"
                                                                              fill="currentColor"
                                                                              style={Object {}}
                                                                            />
                                                                          </svg>
                                                                        </FontAwesomeIcon>
                                                                      </div>
                                                                    </FieldExpansionToggle>
                                                                  </div>
                                                                </div>
                                                              </Col>
                                                            </div>
                                                          </div>
                                                        </Row>
                                                        <Collapse
                                                          appear={false}
                                                          dimension="height"
                                                          getDimensionValue={[Function]}
                                                          in={false}
                                                          mountOnEnter={false}
                                                          onExited={[Function]}
                                                          onExiting={[Function]}
                                                          timeout={300}
                                                          unmountOnExit={false}
                                                        >
                                                          <Transition
                                                            appear={false}
                                                            aria-expanded={null}
                                                            enter={true}
                                                            exit={true}
                                                            in={false}
                                                            mountOnEnter={false}
                                                            onEnter={[Function]}
                                                            onEntered={[Function]}
                                                            onEntering={[Function]}
                                                            onExit={[Function]}
                                                            onExited={[Function]}
                                                            onExiting={[Function]}
                                                            timeout={300}
                                                            unmountOnExit={false}
                                                          >
                                                            <div
                                                              aria-expanded={null}
                                                              className="collapse"
                                                            >
                                                              <DomainRowExpandedOptions
                                                                appPropertiesOnly={false}
                                                                domainFormDisplayOptions={
                                                                  Object {
                                                                    "isDragDisabled": false,
                                                                    "phiLevelDisabled": false,
                                                                    "showAddFieldsButton": true,
                                                                    "showRequired": true,
                                                                    "showTextOptions": true,
                                                                    "showValidators": true,
                                                                  }
                                                                }
                                                                domainIndex={1}
                                                                field={
                                                                  Immutable.Record {
                                                                    "conceptURI": undefined,
                                                                    "conditionalFormats": Immutable.List [],
                                                                    "defaultScale": undefined,
                                                                    "defaultValueType": undefined,
                                                                    "defaultValue": undefined,
                                                                    "defaultDisplayValue": undefined,
                                                                    "description": undefined,
                                                                    "dimension": undefined,
                                                                    "excludeFromShifting": false,
                                                                    "format": undefined,
                                                                    "hidden": false,
                                                                    "importAliases": undefined,
                                                                    "label": undefined,
                                                                    "lookupContainer": undefined,
                                                                    "lookupQuery": undefined,
                                                                    "lookupSchema": undefined,
                                                                    "lookupValidator": undefined,
                                                                    "measure": undefined,
                                                                    "mvEnabled": false,
                                                                    "name": "field2",
                                                                    "PHI": undefined,
                                                                    "primaryKey": undefined,
                                                                    "propertyId": undefined,
                                                                    "propertyURI": undefined,
                                                                    "propertyValidators": Immutable.List [],
                                                                    "rangeValidators": Immutable.List [],
                                                                    "rangeURI": "xsd:int",
                                                                    "regexValidators": Immutable.List [],
                                                                    "recommendedVariable": false,
                                                                    "required": false,
                                                                    "scale": undefined,
                                                                    "URL": undefined,
                                                                    "shownInDetailsView": true,
                                                                    "shownInInsertView": true,
                                                                    "shownInUpdateView": true,
                                                                    "visible": true,
                                                                    "dataType": Immutable.Record {
                                                                      "conceptURI": undefined,
                                                                      "display": "Integer",
                                                                      "name": "int",
                                                                      "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                                                      "alternateRangeURI": "xsd:int",
                                                                      "shortDisplay": undefined,
                                                                      "lookupSchema": undefined,
                                                                      "lookupQuery": undefined,
                                                                    },
                                                                    "lookupQueryValue": undefined,
                                                                    "lookupType": Immutable.Record {
                                                                      "conceptURI": undefined,
                                                                      "display": "Lookup",
                                                                      "name": "lookup",
                                                                      "rangeURI": "xsd:int",
                                                                      "alternateRangeURI": undefined,
                                                                      "shortDisplay": undefined,
                                                                      "lookupSchema": undefined,
                                                                      "lookupQuery": undefined,
                                                                    },
                                                                    "original": Object {
                                                                      "conceptURI": undefined,
                                                                      "dataType": Immutable.Record {
                                                                        "conceptURI": undefined,
                                                                        "display": "Integer",
                                                                        "name": "int",
                                                                        "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                                                        "alternateRangeURI": "xsd:int",
                                                                        "shortDisplay": undefined,
                                                                        "lookupSchema": undefined,
                                                                        "lookupQuery": undefined,
                                                                      },
                                                                      "rangeURI": undefined,
                                                                    },
                                                                    "updatedField": false,
                                                                    "isPrimaryKey": false,
                                                                    "lockType": "NotLocked",
                                                                    "wrappedColumnName": undefined,
                                                                  }
                                                                }
                                                                index={1}
                                                                onChange={[Function]}
                                                                onMultiChange={[Function]}
                                                                showingModal={[Function]}
                                                                successBsStyle="success"
                                                              >
                                                                <div
                                                                  className="domain-row-container"
                                                                >
                                                                  <div
                                                                    className="domain-row-handle"
                                                                  />
                                                                  <div
                                                                    className="domain-row-container-expanded"
                                                                  >
                                                                    <Col
                                                                      bsClass="col"
                                                                      componentClass="div"
                                                                      xs={12}
                                                                    >
                                                                      <div
                                                                        className="col-xs-12"
                                                                      >
                                                                        <NumericFieldOptions
                                                                          domainIndex={1}
                                                                          index={1}
                                                                          label="Integer Options"
                                                                          lockType="NotLocked"
                                                                          onChange={[Function]}
                                                                        >
                                                                          <div>
                                                                            <Row
                                                                              bsClass="row"
                                                                              className="domain-row-expanded"
                                                                              componentClass="div"
                                                                            >
                                                                              <div
                                                                                className="domain-row-expanded row"
                                                                              >
                                                                                <Col
                                                                                  bsClass="col"
                                                                                  componentClass="div"
                                                                                  xs={12}
                                                                                >
                                                                                  <div
                                                                                    className="col-xs-12"
                                                                                  >
                                                                                    <div
                                                                                      className="domain-field-section-heading"
                                                                                    >
                                                                                      Integer Options
                                                                                    </div>
                                                                                  </div>
                                                                                </Col>
                                                                              </div>
                                                                            </Row>
                                                                            <Row
                                                                              bsClass="row"
                                                                              className="domain-row-expanded"
                                                                              componentClass="div"
                                                                            >
                                                                              <div
                                                                                className="domain-row-expanded row"
                                                                              >
                                                                                <Col
                                                                                  bsClass="col"
                                                                                  componentClass="div"
                                                                                  xs={3}
                                                                                >
                                                                                  <div
                                                                                    className="col-xs-3"
                                                                                  >
                                                                                    <div
                                                                                      className="domain-field-label"
                                                                                    >
                                                                                      Format for Numbers
                                                                                      <LabelHelpTip
                                                                                        body={[Function]}
                                                                                        customStyle={Object {}}
                                                                                        id="tooltip"
                                                                                        size="1x"
                                                                                        title="Format Strings"
                                                                                      >
                                                                                        <span
                                                                                          className="label-help-target"
                                                                                          onMouseOut={[Function]}
                                                                                          onMouseOver={[Function]}
                                                                                        >
                                                                                          <FontAwesomeIcon
                                                                                            border={false}
                                                                                            className="label-help-icon"
                                                                                            fixedWidth={false}
                                                                                            flip={null}
                                                                                            icon={
                                                                                              Object {
                                                                                                "icon": Array [
                                                                                                  512,
                                                                                                  512,
                                                                                                  Array [],
                                                                                                  "f059",
                                                                                                  "M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z",
                                                                                                ],
                                                                                                "iconName": "question-circle",
                                                                                                "prefix": "fas",
                                                                                              }
                                                                                            }
                                                                                            inverse={false}
                                                                                            listItem={false}
                                                                                            mask={null}
                                                                                            pull={null}
                                                                                            pulse={false}
                                                                                            rotation={null}
                                                                                            size="1x"
                                                                                            spin={false}
                                                                                            style={Object {}}
                                                                                            symbol={false}
                                                                                            title=""
                                                                                            transform={null}
                                                                                          >
                                                                                            <svg
                                                                                              aria-hidden="true"
                                                                                              className="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                                                                                              data-icon="question-circle"
                                                                                              data-prefix="fas"
                                                                                              focusable="false"
                                                                                              role="img"
                                                                                              style={Object {}}
                                                                                              viewBox="0 0 512 512"
                                                                                              xmlns="http://www.w3.org/2000/svg"
                                                                                            >
                                                                                              <path
                                                                                                d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                                                                fill="currentColor"
                                                                                                style={Object {}}
                                                                                              />
                                                                                            </svg>
                                                                                          </FontAwesomeIcon>
                                                                                          <Overlay
                                                                                            animation={[Function]}
                                                                                            placement="right"
                                                                                            rootClose={false}
                                                                                            show={false}
                                                                                            target={
                                                                                              <span
                                                                                                class="label-help-target"
                                                                                              >
                                                                                                <svg
                                                                                                  aria-hidden="true"
                                                                                                  class="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                                                                                                  data-icon="question-circle"
                                                                                                  data-prefix="fas"
                                                                                                  focusable="false"
                                                                                                  role="img"
                                                                                                  viewBox="0 0 512 512"
                                                                                                  xmlns="http://www.w3.org/2000/svg"
                                                                                                >
                                                                                                  <path
                                                                                                    d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                                                                    fill="currentColor"
                                                                                                  />
                                                                                                </svg>
                                                                                              </span>
                                                                                            }
                                                                                          >
                                                                                            <Overlay
                                                                                              placement="right"
                                                                                              rootClose={false}
                                                                                              show={false}
                                                                                              target={
                                                                                                <span
                                                                                                  class="label-help-target"
                                                                                                >
                                                                                                  <svg
                                                                                                    aria-hidden="true"
                                                                                                    class="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                                                                                                    data-icon="question-circle"
                                                                                                    data-prefix="fas"
                                                                                                    focusable="false"
                                                                                                    role="img"
                                                                                                    viewBox="0 0 512 512"
                                                                                                    xmlns="http://www.w3.org/2000/svg"
                                                                                                  >
                                                                                                    <path
                                                                                                      d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                                                                      fill="currentColor"
                                                                                                    />
                                                                                                  </svg>
                                                                                                </span>
                                                                                              }
                                                                                              transition={[Function]}
                                                                                            />
                                                                                          </Overlay>
                                                                                        </span>
                                                                                      </LabelHelpTip>
                                                                                    </div>
                                                                                  </div>
                                                                                </Col>
                                                                                <Col
                                                                                  bsClass="col"
                                                                                  componentClass="div"
                                                                                  xs={2}
                                                                                >
                                                                                  <div
                                                                                    className="col-xs-2"
                                                                                  >
                                                                                    <div
                                                                                      className="domain-field-label"
                                                                                    >
                                                                                      Default Scale Type
                                                                                    </div>
                                                                                  </div>
                                                                                </Col>
                                                                              </div>
                                                                            </Row>
                                                                            <Row
                                                                              bsClass="row"
                                                                              className="domain-row-expanded"
                                                                              componentClass="div"
                                                                            >
                                                                              <div
                                                                                className="domain-row-expanded row"
                                                                              >
                                                                                <Col
                                                                                  bsClass="col"
                                                                                  componentClass="div"
                                                                                  xs={3}
                                                                                >
                                                                                  <div
                                                                                    className="col-xs-3"
                                                                                  >
                                                                                    <FormControl
                                                                                      bsClass="form-control"
                                                                                      componentClass="input"
                                                                                      disabled={false}
                                                                                      id="domainpropertiesrow-format-1-1"
                                                                                      name="domainpropertiesrow-format"
                                                                                      onChange={[Function]}
                                                                                      type="text"
                                                                                      value=""
                                                                                    >
                                                                                      <input
                                                                                        className="form-control"
                                                                                        disabled={false}
                                                                                        id="domainpropertiesrow-format-1-1"
                                                                                        name="domainpropertiesrow-format"
                                                                                        onChange={[Function]}
                                                                                        type="text"
                                                                                        value=""
                                                                                      />
                                                                                    </FormControl>
                                                                                  </div>
                                                                                </Col>
                                                                                <Col
                                                                                  bsClass="col"
                                                                                  componentClass="div"
                                                                                  xs={2}
                                                                                >
                                                                                  <div
                                                                                    className="col-xs-2"
                                                                                  >
                                                                                    <FormControl
                                                                                      bsClass="form-control"
                                                                                      componentClass="select"
                                                                                      disabled={false}
                                                                                      id="domainpropertiesrow-defaultScale-1-1"
                                                                                      name="domainpropertiesrow-defaultScale"
                                                                                      onChange={[Function]}
                                                                                    >
                                                                                      <select
                                                                                        className="form-control"
                                                                                        disabled={false}
                                                                                        id="domainpropertiesrow-defaultScale-1-1"
                                                                                        name="domainpropertiesrow-defaultScale"
                                                                                        onChange={[Function]}
                                                                                      >
                                                                                        <option
                                                                                          key="domainpropertiesrow-defaultScaleoption-LINEAR-1-1"
                                                                                          value="LINEAR"
                                                                                        >
                                                                                          Linear
                                                                                        </option>
                                                                                        <option
                                                                                          key="domainpropertiesrow-defaultScaleoption-LOG-1-1"
                                                                                          value="LOG"
                                                                                        >
                                                                                          Log
                                                                                        </option>
                                                                                      </select>
                                                                                    </FormControl>
                                                                                  </div>
                                                                                </Col>
                                                                              </div>
                                                                            </Row>
                                                                          </div>
                                                                        </NumericFieldOptions>
                                                                      </div>
                                                                    </Col>
                                                                    <Col
                                                                      bsClass="col"
                                                                      componentClass="div"
                                                                      lg={10}
                                                                      xs={12}
                                                                    >
                                                                      <div
                                                                        className="col-lg-10 col-xs-12"
                                                                      >
                                                                        <NameAndLinkingOptions
                                                                          domainIndex={1}
                                                                          field={
                                                                            Immutable.Record {
                                                                              "conceptURI": undefined,
                                                                              "conditionalFormats": Immutable.List [],
                                                                              "defaultScale": undefined,
                                                                              "defaultValueType": undefined,
                                                                              "defaultValue": undefined,
                                                                              "defaultDisplayValue": undefined,
                                                                              "description": undefined,
                                                                              "dimension": undefined,
                                                                              "excludeFromShifting": false,
                                                                              "format": undefined,
                                                                              "hidden": false,
                                                                              "importAliases": undefined,
                                                                              "label": undefined,
                                                                              "lookupContainer": undefined,
                                                                              "lookupQuery": undefined,
                                                                              "lookupSchema": undefined,
                                                                              "lookupValidator": undefined,
                                                                              "measure": undefined,
                                                                              "mvEnabled": false,
                                                                              "name": "field2",
                                                                              "PHI": undefined,
                                                                              "primaryKey": undefined,
                                                                              "propertyId": undefined,
                                                                              "propertyURI": undefined,
                                                                              "propertyValidators": Immutable.List [],
                                                                              "rangeValidators": Immutable.List [],
                                                                              "rangeURI": "xsd:int",
                                                                              "regexValidators": Immutable.List [],
                                                                              "recommendedVariable": false,
                                                                              "required": false,
                                                                              "scale": undefined,
                                                                              "URL": undefined,
                                                                              "shownInDetailsView": true,
                                                                              "shownInInsertView": true,
                                                                              "shownInUpdateView": true,
                                                                              "visible": true,
                                                                              "dataType": Immutable.Record {
                                                                                "conceptURI": undefined,
                                                                                "display": "Integer",
                                                                                "name": "int",
                                                                                "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                                                                "alternateRangeURI": "xsd:int",
                                                                                "shortDisplay": undefined,
                                                                                "lookupSchema": undefined,
                                                                                "lookupQuery": undefined,
                                                                              },
                                                                              "lookupQueryValue": undefined,
                                                                              "lookupType": Immutable.Record {
                                                                                "conceptURI": undefined,
                                                                                "display": "Lookup",
                                                                                "name": "lookup",
                                                                                "rangeURI": "xsd:int",
                                                                                "alternateRangeURI": undefined,
                                                                                "shortDisplay": undefined,
                                                                                "lookupSchema": undefined,
                                                                                "lookupQuery": undefined,
                                                                              },
                                                                              "original": Object {
                                                                                "conceptURI": undefined,
                                                                                "dataType": Immutable.Record {
                                                                                  "conceptURI": undefined,
                                                                                  "display": "Integer",
                                                                                  "name": "int",
                                                                                  "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                                                                  "alternateRangeURI": "xsd:int",
                                                                                  "shortDisplay": undefined,
                                                                                  "lookupSchema": undefined,
                                                                                  "lookupQuery": undefined,
                                                                                },
                                                                                "rangeURI": undefined,
                                                                              },
                                                                              "updatedField": false,
                                                                              "isPrimaryKey": false,
                                                                              "lockType": "NotLocked",
                                                                              "wrappedColumnName": undefined,
                                                                            }
                                                                          }
                                                                          index={1}
                                                                          onChange={[Function]}
                                                                        >
                                                                          <div>
                                                                            <Row
                                                                              bsClass="row"
                                                                              className="domain-row-expanded"
                                                                              componentClass="div"
                                                                            >
                                                                              <div
                                                                                className="domain-row-expanded row"
                                                                              >
                                                                                <Col
                                                                                  bsClass="col"
                                                                                  componentClass="div"
                                                                                  xs={12}
                                                                                >
                                                                                  <div
                                                                                    className="col-xs-12"
                                                                                  >
                                                                                    <div
                                                                                      className="domain-field-section-heading domain-field-section-hdr"
                                                                                    >
                                                                                      Name and Linking Options
                                                                                    </div>
                                                                                  </div>
                                                                                </Col>
                                                                              </div>
                                                                            </Row>
                                                                            <Row
                                                                              bsClass="row"
                                                                              className="domain-row-expanded"
                                                                              componentClass="div"
                                                                            >
                                                                              <div
                                                                                className="domain-row-expanded row"
                                                                              >
                                                                                <div>
                                                                                  <Col
                                                                                    bsClass="col"
                                                                                    componentClass="div"
                                                                                    xs={5}
                                                                                  >
                                                                                    <div
                                                                                      className="col-xs-5"
                                                                                    >
                                                                                      <div
                                                                                        className="domain-field-label"
                                                                                      >
                                                                                        Description
                                                                                      </div>
                                                                                      <FormControl
                                                                                        bsClass="form-control"
                                                                                        className="form-control textarea-noresize"
                                                                                        componentClass="textarea"
                                                                                        disabled={false}
                                                                                        id="domainpropertiesrow-description-1-1"
                                                                                        name="domainpropertiesrow-description"
                                                                                        onChange={[Function]}
                                                                                        rows={4}
                                                                                        value=""
                                                                                      >
                                                                                        <textarea
                                                                                          className="form-control textarea-noresize form-control"
                                                                                          disabled={false}
                                                                                          id="domainpropertiesrow-description-1-1"
                                                                                          name="domainpropertiesrow-description"
                                                                                          onChange={[Function]}
                                                                                          rows={4}
                                                                                          value=""
                                                                                        />
                                                                                      </FormControl>
                                                                                    </div>
                                                                                  </Col>
                                                                                  <Col
                                                                                    bsClass="col"
                                                                                    componentClass="div"
                                                                                    xs={3}
                                                                                  >
                                                                                    <div
                                                                                      className="col-xs-3"
                                                                                    >
                                                                                      <div
                                                                                        className="domain-field-label"
                                                                                      >
                                                                                        Label
                                                                                      </div>
                                                                                      <FormControl
                                                                                        bsClass="form-control"
                                                                                        componentClass="input"
                                                                                        disabled={false}
                                                                                        id="domainpropertiesrow-label-1-1"
                                                                                        name="domainpropertiesrow-label"
                                                                                        onChange={[Function]}
                                                                                        type="text"
                                                                                        value=""
                                                                                      >
                                                                                        <input
                                                                                          className="form-control"
                                                                                          disabled={false}
                                                                                          id="domainpropertiesrow-label-1-1"
                                                                                          name="domainpropertiesrow-label"
                                                                                          onChange={[Function]}
                                                                                          type="text"
                                                                                          value=""
                                                                                        />
                                                                                      </FormControl>
                                                                                      <div
                                                                                        className="domain-field-label"
                                                                                      >
                                                                                        Import Aliases
                                                                                        <LabelHelpTip
                                                                                          body={[Function]}
                                                                                          customStyle={Object {}}
                                                                                          id="tooltip"
                                                                                          size="1x"
                                                                                          title="Import Aliases"
                                                                                        >
                                                                                          <span
                                                                                            className="label-help-target"
                                                                                            onMouseOut={[Function]}
                                                                                            onMouseOver={[Function]}
                                                                                          >
                                                                                            <FontAwesomeIcon
                                                                                              border={false}
                                                                                              className="label-help-icon"
                                                                                              fixedWidth={false}
                                                                                              flip={null}
                                                                                              icon={
                                                                                                Object {
                                                                                                  "icon": Array [
                                                                                                    512,
                                                                                                    512,
                                                                                                    Array [],
                                                                                                    "f059",
                                                                                                    "M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z",
                                                                                                  ],
                                                                                                  "iconName": "question-circle",
                                                                                                  "prefix": "fas",
                                                                                                }
                                                                                              }
                                                                                              inverse={false}
                                                                                              listItem={false}
                                                                                              mask={null}
                                                                                              pull={null}
                                                                                              pulse={false}
                                                                                              rotation={null}
                                                                                              size="1x"
                                                                                              spin={false}
                                                                                              style={Object {}}
                                                                                              symbol={false}
                                                                                              title=""
                                                                                              transform={null}
                                                                                            >
                                                                                              <svg
                                                                                                aria-hidden="true"
                                                                                                className="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                                                                                                data-icon="question-circle"
                                                                                                data-prefix="fas"
                                                                                                focusable="false"
                                                                                                role="img"
                                                                                                style={Object {}}
                                                                                                viewBox="0 0 512 512"
                                                                                                xmlns="http://www.w3.org/2000/svg"
                                                                                              >
                                                                                                <path
                                                                                                  d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                                                                  fill="currentColor"
                                                                                                  style={Object {}}
                                                                                                />
                                                                                              </svg>
                                                                                            </FontAwesomeIcon>
                                                                                            <Overlay
                                                                                              animation={[Function]}
                                                                                              placement="right"
                                                                                              rootClose={false}
                                                                                              show={false}
                                                                                              target={
                                                                                                <span
                                                                                                  class="label-help-target"
                                                                                                >
                                                                                                  <svg
                                                                                                    aria-hidden="true"
                                                                                                    class="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                                                                                                    data-icon="question-circle"
                                                                                                    data-prefix="fas"
                                                                                                    focusable="false"
                                                                                                    role="img"
                                                                                                    viewBox="0 0 512 512"
                                                                                                    xmlns="http://www.w3.org/2000/svg"
                                                                                                  >
                                                                                                    <path
                                                                                                      d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                                                                      fill="currentColor"
                                                                                                    />
                                                                                                  </svg>
                                                                                                </span>
                                                                                              }
                                                                                            >
                                                                                              <Overlay
                                                                                                placement="right"
                                                                                                rootClose={false}
                                                                                                show={false}
                                                                                                target={
                                                                                                  <span
                                                                                                    class="label-help-target"
                                                                                                  >
                                                                                                    <svg
                                                                                                      aria-hidden="true"
                                                                                                      class="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                                                                                                      data-icon="question-circle"
                                                                                                      data-prefix="fas"
                                                                                                      focusable="false"
                                                                                                      role="img"
                                                                                                      viewBox="0 0 512 512"
                                                                                                      xmlns="http://www.w3.org/2000/svg"
                                                                                                    >
                                                                                                      <path
                                                                                                        d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                                                                        fill="currentColor"
                                                                                                      />
                                                                                                    </svg>
                                                                                                  </span>
                                                                                                }
                                                                                                transition={[Function]}
                                                                                              />
                                                                                            </Overlay>
                                                                                          </span>
                                                                                        </LabelHelpTip>
                                                                                      </div>
                                                                                      <FormControl
                                                                                        bsClass="form-control"
                                                                                        componentClass="input"
                                                                                        disabled={false}
                                                                                        id="domainpropertiesrow-importAliases-1-1"
                                                                                        name="domainpropertiesrow-importAliases"
                                                                                        onChange={[Function]}
                                                                                        type="text"
                                                                                        value=""
                                                                                      >
                                                                                        <input
                                                                                          className="form-control"
                                                                                          disabled={false}
                                                                                          id="domainpropertiesrow-importAliases-1-1"
                                                                                          name="domainpropertiesrow-importAliases"
                                                                                          onChange={[Function]}
                                                                                          type="text"
                                                                                          value=""
                                                                                        />
                                                                                      </FormControl>
                                                                                    </div>
                                                                                  </Col>
                                                                                  <Col
                                                                                    bsClass="col"
                                                                                    componentClass="div"
                                                                                    xs={4}
                                                                                  >
                                                                                    <div
                                                                                      className="col-xs-4"
                                                                                    >
                                                                                      <div
                                                                                        className="domain-field-label"
                                                                                      >
                                                                                        URL
                                                                                        <LabelHelpTip
                                                                                          body={[Function]}
                                                                                          customStyle={Object {}}
                                                                                          id="tooltip"
                                                                                          size="1x"
                                                                                          title="URL"
                                                                                        >
                                                                                          <span
                                                                                            className="label-help-target"
                                                                                            onMouseOut={[Function]}
                                                                                            onMouseOver={[Function]}
                                                                                          >
                                                                                            <FontAwesomeIcon
                                                                                              border={false}
                                                                                              className="label-help-icon"
                                                                                              fixedWidth={false}
                                                                                              flip={null}
                                                                                              icon={
                                                                                                Object {
                                                                                                  "icon": Array [
                                                                                                    512,
                                                                                                    512,
                                                                                                    Array [],
                                                                                                    "f059",
                                                                                                    "M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z",
                                                                                                  ],
                                                                                                  "iconName": "question-circle",
                                                                                                  "prefix": "fas",
                                                                                                }
                                                                                              }
                                                                                              inverse={false}
                                                                                              listItem={false}
                                                                                              mask={null}
                                                                                              pull={null}
                                                                                              pulse={false}
                                                                                              rotation={null}
                                                                                              size="1x"
                                                                                              spin={false}
                                                                                              style={Object {}}
                                                                                              symbol={false}
                                                                                              title=""
                                                                                              transform={null}
                                                                                            >
                                                                                              <svg
                                                                                                aria-hidden="true"
                                                                                                className="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                                                                                                data-icon="question-circle"
                                                                                                data-prefix="fas"
                                                                                                focusable="false"
                                                                                                role="img"
                                                                                                style={Object {}}
                                                                                                viewBox="0 0 512 512"
                                                                                                xmlns="http://www.w3.org/2000/svg"
                                                                                              >
                                                                                                <path
                                                                                                  d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                                                                  fill="currentColor"
                                                                                                  style={Object {}}
                                                                                                />
                                                                                              </svg>
                                                                                            </FontAwesomeIcon>
                                                                                            <Overlay
                                                                                              animation={[Function]}
                                                                                              placement="right"
                                                                                              rootClose={false}
                                                                                              show={false}
                                                                                              target={
                                                                                                <span
                                                                                                  class="label-help-target"
                                                                                                >
                                                                                                  <svg
                                                                                                    aria-hidden="true"
                                                                                                    class="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                                                                                                    data-icon="question-circle"
                                                                                                    data-prefix="fas"
                                                                                                    focusable="false"
                                                                                                    role="img"
                                                                                                    viewBox="0 0 512 512"
                                                                                                    xmlns="http://www.w3.org/2000/svg"
                                                                                                  >
                                                                                                    <path
                                                                                                      d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                                                                      fill="currentColor"
                                                                                                    />
                                                                                                  </svg>
                                                                                                </span>
                                                                                              }
                                                                                            >
                                                                                              <Overlay
                                                                                                placement="right"
                                                                                                rootClose={false}
                                                                                                show={false}
                                                                                                target={
                                                                                                  <span
                                                                                                    class="label-help-target"
                                                                                                  >
                                                                                                    <svg
                                                                                                      aria-hidden="true"
                                                                                                      class="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                                                                                                      data-icon="question-circle"
                                                                                                      data-prefix="fas"
                                                                                                      focusable="false"
                                                                                                      role="img"
                                                                                                      viewBox="0 0 512 512"
                                                                                                      xmlns="http://www.w3.org/2000/svg"
                                                                                                    >
                                                                                                      <path
                                                                                                        d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                                                                        fill="currentColor"
                                                                                                      />
                                                                                                    </svg>
                                                                                                  </span>
                                                                                                }
                                                                                                transition={[Function]}
                                                                                              />
                                                                                            </Overlay>
                                                                                          </span>
                                                                                        </LabelHelpTip>
                                                                                      </div>
                                                                                      <FormControl
                                                                                        bsClass="form-control"
                                                                                        componentClass="input"
                                                                                        disabled={false}
                                                                                        id="domainpropertiesrow-URL-1-1"
                                                                                        name="domainpropertiesrow-URL"
                                                                                        onChange={[Function]}
                                                                                        type="text"
                                                                                        value=""
                                                                                      >
                                                                                        <input
                                                                                          className="form-control"
                                                                                          disabled={false}
                                                                                          id="domainpropertiesrow-URL-1-1"
                                                                                          name="domainpropertiesrow-URL"
                                                                                          onChange={[Function]}
                                                                                          type="text"
                                                                                          value=""
                                                                                        />
                                                                                      </FormControl>
                                                                                    </div>
                                                                                  </Col>
                                                                                </div>
                                                                              </div>
                                                                            </Row>
                                                                          </div>
                                                                        </NameAndLinkingOptions>
                                                                      </div>
                                                                    </Col>
                                                                    <Col
                                                                      bsClass="col"
                                                                      componentClass="div"
                                                                      xs={12}
                                                                    >
                                                                      <div
                                                                        className="col-xs-12"
                                                                      >
                                                                        <ConditionalFormattingAndValidation
                                                                          domainFormDisplayOptions={
                                                                            Object {
                                                                              "isDragDisabled": false,
                                                                              "phiLevelDisabled": false,
                                                                              "showAddFieldsButton": true,
                                                                              "showRequired": true,
                                                                              "showTextOptions": true,
                                                                              "showValidators": true,
                                                                            }
                                                                          }
                                                                          domainIndex={1}
                                                                          field={
                                                                            Immutable.Record {
                                                                              "conceptURI": undefined,
                                                                              "conditionalFormats": Immutable.List [],
                                                                              "defaultScale": undefined,
                                                                              "defaultValueType": undefined,
                                                                              "defaultValue": undefined,
                                                                              "defaultDisplayValue": undefined,
                                                                              "description": undefined,
                                                                              "dimension": undefined,
                                                                              "excludeFromShifting": false,
                                                                              "format": undefined,
                                                                              "hidden": false,
                                                                              "importAliases": undefined,
                                                                              "label": undefined,
                                                                              "lookupContainer": undefined,
                                                                              "lookupQuery": undefined,
                                                                              "lookupSchema": undefined,
                                                                              "lookupValidator": undefined,
                                                                              "measure": undefined,
                                                                              "mvEnabled": false,
                                                                              "name": "field2",
                                                                              "PHI": undefined,
                                                                              "primaryKey": undefined,
                                                                              "propertyId": undefined,
                                                                              "propertyURI": undefined,
                                                                              "propertyValidators": Immutable.List [],
                                                                              "rangeValidators": Immutable.List [],
                                                                              "rangeURI": "xsd:int",
                                                                              "regexValidators": Immutable.List [],
                                                                              "recommendedVariable": false,
                                                                              "required": false,
                                                                              "scale": undefined,
                                                                              "URL": undefined,
                                                                              "shownInDetailsView": true,
                                                                              "shownInInsertView": true,
                                                                              "shownInUpdateView": true,
                                                                              "visible": true,
                                                                              "dataType": Immutable.Record {
                                                                                "conceptURI": undefined,
                                                                                "display": "Integer",
                                                                                "name": "int",
                                                                                "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                                                                "alternateRangeURI": "xsd:int",
                                                                                "shortDisplay": undefined,
                                                                                "lookupSchema": undefined,
                                                                                "lookupQuery": undefined,
                                                                              },
                                                                              "lookupQueryValue": undefined,
                                                                              "lookupType": Immutable.Record {
                                                                                "conceptURI": undefined,
                                                                                "display": "Lookup",
                                                                                "name": "lookup",
                                                                                "rangeURI": "xsd:int",
                                                                                "alternateRangeURI": undefined,
                                                                                "shortDisplay": undefined,
                                                                                "lookupSchema": undefined,
                                                                                "lookupQuery": undefined,
                                                                              },
                                                                              "original": Object {
                                                                                "conceptURI": undefined,
                                                                                "dataType": Immutable.Record {
                                                                                  "conceptURI": undefined,
                                                                                  "display": "Integer",
                                                                                  "name": "int",
                                                                                  "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                                                                  "alternateRangeURI": "xsd:int",
                                                                                  "shortDisplay": undefined,
                                                                                  "lookupSchema": undefined,
                                                                                  "lookupQuery": undefined,
                                                                                },
                                                                                "rangeURI": undefined,
                                                                              },
                                                                              "updatedField": false,
                                                                              "isPrimaryKey": false,
                                                                              "lockType": "NotLocked",
                                                                              "wrappedColumnName": undefined,
                                                                            }
                                                                          }
                                                                          hideConditionalFormatting={false}
                                                                          index={1}
                                                                          onChange={[Function]}
                                                                          showingModal={[Function]}
                                                                          successBsStyle="success"
                                                                        >
                                                                          <div>
                                                                            <Row
                                                                              bsClass="row"
                                                                              className="domain-row-expanded"
                                                                              componentClass="div"
                                                                            >
                                                                              <div
                                                                                className="domain-row-expanded row"
                                                                              >
                                                                                <Col
                                                                                  bsClass="col"
                                                                                  componentClass="div"
                                                                                  xs={12}
                                                                                >
                                                                                  <div
                                                                                    className="col-xs-12"
                                                                                  >
                                                                                    <div
                                                                                      className="domain-field-section-heading domain-field-section-hdr"
                                                                                    >
                                                                                      Conditional Formatting and Validation Options
                                                                                    </div>
                                                                                  </div>
                                                                                </Col>
                                                                              </div>
                                                                            </Row>
                                                                            <Row
                                                                              bsClass="row"
                                                                              className="domain-row-expanded"
                                                                              componentClass="div"
                                                                            >
                                                                              <div
                                                                                className="domain-row-expanded row"
                                                                              >
                                                                                <Col
                                                                                  bsClass="col"
                                                                                  componentClass="div"
                                                                                  xs={12}
                                                                                >
                                                                                  <div
                                                                                    className="col-xs-12"
                                                                                  >
                                                                                    <div
                                                                                      className="domain-validation-group"
                                                                                    >
                                                                                      <div
                                                                                        className="domain-field-label domain-no-wrap"
                                                                                      >
                                                                                        Create Conditional Format Criteria
                                                                                        <LabelHelpTip
                                                                                          body={[Function]}
                                                                                          customStyle={Object {}}
                                                                                          id="tooltip"
                                                                                          size="1x"
                                                                                          title="Add Conditional Format"
                                                                                        >
                                                                                          <span
                                                                                            className="label-help-target"
                                                                                            onMouseOut={[Function]}
                                                                                            onMouseOver={[Function]}
                                                                                          >
                                                                                            <FontAwesomeIcon
                                                                                              border={false}
                                                                                              className="label-help-icon"
                                                                                              fixedWidth={false}
                                                                                              flip={null}
                                                                                              icon={
                                                                                                Object {
                                                                                                  "icon": Array [
                                                                                                    512,
                                                                                                    512,
                                                                                                    Array [],
                                                                                                    "f059",
                                                                                                    "M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z",
                                                                                                  ],
                                                                                                  "iconName": "question-circle",
                                                                                                  "prefix": "fas",
                                                                                                }
                                                                                              }
                                                                                              inverse={false}
                                                                                              listItem={false}
                                                                                              mask={null}
                                                                                              pull={null}
                                                                                              pulse={false}
                                                                                              rotation={null}
                                                                                              size="1x"
                                                                                              spin={false}
                                                                                              style={Object {}}
                                                                                              symbol={false}
                                                                                              title=""
                                                                                              transform={null}
                                                                                            >
                                                                                              <svg
                                                                                                aria-hidden="true"
                                                                                                className="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                                                                                                data-icon="question-circle"
                                                                                                data-prefix="fas"
                                                                                                focusable="false"
                                                                                                role="img"
                                                                                                style={Object {}}
                                                                                                viewBox="0 0 512 512"
                                                                                                xmlns="http://www.w3.org/2000/svg"
                                                                                              >
                                                                                                <path
                                                                                                  d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                                                                  fill="currentColor"
                                                                                                  style={Object {}}
                                                                                                />
                                                                                              </svg>
                                                                                            </FontAwesomeIcon>
                                                                                            <Overlay
                                                                                              animation={[Function]}
                                                                                              placement="right"
                                                                                              rootClose={false}
                                                                                              show={false}
                                                                                              target={
                                                                                                <span
                                                                                                  class="label-help-target"
                                                                                                >
                                                                                                  <svg
                                                                                                    aria-hidden="true"
                                                                                                    class="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                                                                                                    data-icon="question-circle"
                                                                                                    data-prefix="fas"
                                                                                                    focusable="false"
                                                                                                    role="img"
                                                                                                    viewBox="0 0 512 512"
                                                                                                    xmlns="http://www.w3.org/2000/svg"
                                                                                                  >
                                                                                                    <path
                                                                                                      d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                                                                      fill="currentColor"
                                                                                                    />
                                                                                                  </svg>
                                                                                                </span>
                                                                                              }
                                                                                            >
                                                                                              <Overlay
                                                                                                placement="right"
                                                                                                rootClose={false}
                                                                                                show={false}
                                                                                                target={
                                                                                                  <span
                                                                                                    class="label-help-target"
                                                                                                  >
                                                                                                    <svg
                                                                                                      aria-hidden="true"
                                                                                                      class="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                                                                                                      data-icon="question-circle"
                                                                                                      data-prefix="fas"
                                                                                                      focusable="false"
                                                                                                      role="img"
                                                                                                      viewBox="0 0 512 512"
                                                                                                      xmlns="http://www.w3.org/2000/svg"
                                                                                                    >
                                                                                                      <path
                                                                                                        d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                                                                        fill="currentColor"
                                                                                                      />
                                                                                                    </svg>
                                                                                                  </span>
                                                                                                }
                                                                                                transition={[Function]}
                                                                                              />
                                                                                            </Overlay>
                                                                                          </span>
                                                                                        </LabelHelpTip>
                                                                                      </div>
                                                                                      <div>
                                                                                        <Button
                                                                                          active={false}
                                                                                          block={false}
                                                                                          bsClass="btn"
                                                                                          bsStyle="default"
                                                                                          className="domain-validation-button"
                                                                                          disabled={false}
                                                                                          id="domainpropertiesrow-conditionalFormat-1-1"
                                                                                          name="domainpropertiesrow-conditionalFormat"
                                                                                          onClick={[Function]}
                                                                                        >
                                                                                          <button
                                                                                            className="domain-validation-button btn btn-default"
                                                                                            disabled={false}
                                                                                            id="domainpropertiesrow-conditionalFormat-1-1"
                                                                                            name="domainpropertiesrow-conditionalFormat"
                                                                                            onClick={[Function]}
                                                                                            type="button"
                                                                                          >
                                                                                            Add Format
                                                                                          </button>
                                                                                        </Button>
                                                                                        <span
                                                                                          className="domain-text-label"
                                                                                        >
                                                                                          None Set
                                                                                        </span>
                                                                                      </div>
                                                                                    </div>
                                                                                    <div
                                                                                      className=""
                                                                                    >
                                                                                      <div
                                                                                        className="domain-field-label domain-no-wrap"
                                                                                      >
                                                                                        Create Range Validator
                                                                                        <LabelHelpTip
                                                                                          body={[Function]}
                                                                                          customStyle={Object {}}
                                                                                          id="tooltip"
                                                                                          size="1x"
                                                                                          title="Add Range Validator"
                                                                                        >
                                                                                          <span
                                                                                            className="label-help-target"
                                                                                            onMouseOut={[Function]}
                                                                                            onMouseOver={[Function]}
                                                                                          >
                                                                                            <FontAwesomeIcon
                                                                                              border={false}
                                                                                              className="label-help-icon"
                                                                                              fixedWidth={false}
                                                                                              flip={null}
                                                                                              icon={
                                                                                                Object {
                                                                                                  "icon": Array [
                                                                                                    512,
                                                                                                    512,
                                                                                                    Array [],
                                                                                                    "f059",
                                                                                                    "M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z",
                                                                                                  ],
                                                                                                  "iconName": "question-circle",
                                                                                                  "prefix": "fas",
                                                                                                }
                                                                                              }
                                                                                              inverse={false}
                                                                                              listItem={false}
                                                                                              mask={null}
                                                                                              pull={null}
                                                                                              pulse={false}
                                                                                              rotation={null}
                                                                                              size="1x"
                                                                                              spin={false}
                                                                                              style={Object {}}
                                                                                              symbol={false}
                                                                                              title=""
                                                                                              transform={null}
                                                                                            >
                                                                                              <svg
                                                                                                aria-hidden="true"
                                                                                                className="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                                                                                                data-icon="question-circle"
                                                                                                data-prefix="fas"
                                                                                                focusable="false"
                                                                                                role="img"
                                                                                                style={Object {}}
                                                                                                viewBox="0 0 512 512"
                                                                                                xmlns="http://www.w3.org/2000/svg"
                                                                                              >
                                                                                                <path
                                                                                                  d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                                                                  fill="currentColor"
                                                                                                  style={Object {}}
                                                                                                />
                                                                                              </svg>
                                                                                            </FontAwesomeIcon>
                                                                                            <Overlay
                                                                                              animation={[Function]}
                                                                                              placement="right"
                                                                                              rootClose={false}
                                                                                              show={false}
                                                                                              target={
                                                                                                <span
                                                                                                  class="label-help-target"
                                                                                                >
                                                                                                  <svg
                                                                                                    aria-hidden="true"
                                                                                                    class="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                                                                                                    data-icon="question-circle"
                                                                                                    data-prefix="fas"
                                                                                                    focusable="false"
                                                                                                    role="img"
                                                                                                    viewBox="0 0 512 512"
                                                                                                    xmlns="http://www.w3.org/2000/svg"
                                                                                                  >
                                                                                                    <path
                                                                                                      d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                                                                      fill="currentColor"
                                                                                                    />
                                                                                                  </svg>
                                                                                                </span>
                                                                                              }
                                                                                            >
                                                                                              <Overlay
                                                                                                placement="right"
                                                                                                rootClose={false}
                                                                                                show={false}
                                                                                                target={
                                                                                                  <span
                                                                                                    class="label-help-target"
                                                                                                  >
                                                                                                    <svg
                                                                                                      aria-hidden="true"
                                                                                                      class="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                                                                                                      data-icon="question-circle"
                                                                                                      data-prefix="fas"
                                                                                                      focusable="false"
                                                                                                      role="img"
                                                                                                      viewBox="0 0 512 512"
                                                                                                      xmlns="http://www.w3.org/2000/svg"
                                                                                                    >
                                                                                                      <path
                                                                                                        d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                                                                        fill="currentColor"
                                                                                                      />
                                                                                                    </svg>
                                                                                                  </span>
                                                                                                }
                                                                                                transition={[Function]}
                                                                                              />
                                                                                            </Overlay>
                                                                                          </span>
                                                                                        </LabelHelpTip>
                                                                                      </div>
                                                                                      <div>
                                                                                        <Button
                                                                                          active={false}
                                                                                          block={false}
                                                                                          bsClass="btn"
                                                                                          bsStyle="default"
                                                                                          className="domain-validation-button"
                                                                                          disabled={false}
                                                                                          id="domainpropertiesrow-rangeValidator-1-1"
                                                                                          name="domainpropertiesrow-rangeValidator"
                                                                                          onClick={[Function]}
                                                                                        >
                                                                                          <button
                                                                                            className="domain-validation-button btn btn-default"
                                                                                            disabled={false}
                                                                                            id="domainpropertiesrow-rangeValidator-1-1"
                                                                                            name="domainpropertiesrow-rangeValidator"
                                                                                            onClick={[Function]}
                                                                                            type="button"
                                                                                          >
                                                                                            Add Range
                                                                                          </button>
                                                                                        </Button>
                                                                                        <span
                                                                                          className="domain-text-label"
                                                                                        >
                                                                                          None Set
                                                                                        </span>
                                                                                      </div>
                                                                                    </div>
                                                                                  </div>
                                                                                </Col>
                                                                              </div>
                                                                            </Row>
                                                                          </div>
                                                                        </ConditionalFormattingAndValidation>
                                                                      </div>
                                                                    </Col>
                                                                  </div>
                                                                </div>
                                                              </DomainRowExpandedOptions>
                                                            </div>
                                                          </Transition>
                                                        </Collapse>
                                                      </div>
                                                    </Draggable>
                                                  </ConnectFunction>
                                                </DomainRow>
                                                <DomainRow
                                                  appPropertiesOnly={false}
                                                  availableTypes={
                                                    Immutable.List [
                                                      Immutable.Record {
                                                        "conceptURI": undefined,
                                                        "display": "Text",
                                                        "name": "string",
                                                        "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                        "alternateRangeURI": "xsd:string",
                                                        "shortDisplay": "String",
                                                        "lookupSchema": undefined,
                                                        "lookupQuery": undefined,
                                                      },
                                                      Immutable.Record {
                                                        "conceptURI": undefined,
                                                        "display": "Multi-Line Text",
                                                        "name": "multiLine",
                                                        "rangeURI": "http://www.w3.org/2001/XMLSchema#multiLine",
                                                        "alternateRangeURI": undefined,
                                                        "shortDisplay": undefined,
                                                        "lookupSchema": undefined,
                                                        "lookupQuery": undefined,
                                                      },
                                                      Immutable.Record {
                                                        "conceptURI": undefined,
                                                        "display": "Boolean",
                                                        "name": "boolean",
                                                        "rangeURI": "http://www.w3.org/2001/XMLSchema#boolean",
                                                        "alternateRangeURI": "xsd:boolean",
                                                        "shortDisplay": undefined,
                                                        "lookupSchema": undefined,
                                                        "lookupQuery": undefined,
                                                      },
                                                      Immutable.Record {
                                                        "conceptURI": undefined,
                                                        "display": "Integer",
                                                        "name": "int",
                                                        "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                                        "alternateRangeURI": "xsd:int",
                                                        "shortDisplay": undefined,
                                                        "lookupSchema": undefined,
                                                        "lookupQuery": undefined,
                                                      },
                                                      Immutable.Record {
                                                        "conceptURI": undefined,
                                                        "display": "Decimal",
                                                        "name": "double",
                                                        "rangeURI": "http://www.w3.org/2001/XMLSchema#double",
                                                        "alternateRangeURI": "xsd:double",
                                                        "shortDisplay": undefined,
                                                        "lookupSchema": undefined,
                                                        "lookupQuery": undefined,
                                                      },
                                                      Immutable.Record {
                                                        "conceptURI": undefined,
                                                        "display": "Date Time",
                                                        "name": "dateTime",
                                                        "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                                                        "alternateRangeURI": "xsd:dateTime",
                                                        "shortDisplay": undefined,
                                                        "lookupSchema": undefined,
                                                        "lookupQuery": undefined,
                                                      },
                                                      Immutable.Record {
                                                        "conceptURI": "http://www.labkey.org/exp/xml#flag",
                                                        "display": "Flag",
                                                        "name": "flag",
                                                        "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                        "alternateRangeURI": undefined,
                                                        "shortDisplay": undefined,
                                                        "lookupSchema": undefined,
                                                        "lookupQuery": undefined,
                                                      },
                                                      Immutable.Record {
                                                        "conceptURI": undefined,
                                                        "display": "File",
                                                        "name": "fileLink",
                                                        "rangeURI": "http://cpas.fhcrc.org/exp/xml#fileLink",
                                                        "alternateRangeURI": undefined,
                                                        "shortDisplay": undefined,
                                                        "lookupSchema": undefined,
                                                        "lookupQuery": undefined,
                                                      },
                                                      Immutable.Record {
                                                        "conceptURI": undefined,
                                                        "display": "Attachment",
                                                        "name": "attachment",
                                                        "rangeURI": "http://www.labkey.org/exp/xml#attachment",
                                                        "alternateRangeURI": undefined,
                                                        "shortDisplay": undefined,
                                                        "lookupSchema": undefined,
                                                        "lookupQuery": undefined,
                                                      },
                                                      Immutable.Record {
                                                        "conceptURI": undefined,
                                                        "display": "User",
                                                        "name": "users",
                                                        "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                                        "alternateRangeURI": undefined,
                                                        "shortDisplay": undefined,
                                                        "lookupSchema": "core",
                                                        "lookupQuery": "users",
                                                      },
                                                      Immutable.Record {
                                                        "conceptURI": "http://cpas.labkey.com/Study#ParticipantId",
                                                        "display": "Subject/Participant",
                                                        "name": "ParticipantId",
                                                        "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                        "alternateRangeURI": undefined,
                                                        "shortDisplay": undefined,
                                                        "lookupSchema": undefined,
                                                        "lookupQuery": undefined,
                                                      },
                                                      Immutable.Record {
                                                        "conceptURI": undefined,
                                                        "display": "Lookup",
                                                        "name": "lookup",
                                                        "rangeURI": undefined,
                                                        "alternateRangeURI": undefined,
                                                        "shortDisplay": undefined,
                                                        "lookupSchema": undefined,
                                                        "lookupQuery": undefined,
                                                      },
                                                      Immutable.Record {
                                                        "conceptURI": "http://www.labkey.org/exp/xml#sample",
                                                        "display": "Sample",
                                                        "name": "sample",
                                                        "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                                        "alternateRangeURI": undefined,
                                                        "shortDisplay": undefined,
                                                        "lookupSchema": undefined,
                                                        "lookupQuery": undefined,
                                                      },
                                                    ]
                                                  }
                                                  defaultValueOptions={Immutable.List []}
                                                  domainFormDisplayOptions={
                                                    Object {
                                                      "isDragDisabled": false,
                                                      "phiLevelDisabled": false,
                                                      "showAddFieldsButton": true,
                                                      "showRequired": true,
                                                      "showTextOptions": true,
                                                      "showValidators": true,
                                                    }
                                                  }
                                                  domainId={null}
                                                  domainIndex={1}
                                                  dragging={false}
                                                  expandTransition={300}
                                                  expanded={false}
                                                  field={
                                                    Immutable.Record {
                                                      "conceptURI": undefined,
                                                      "conditionalFormats": Immutable.List [],
                                                      "defaultScale": undefined,
                                                      "defaultValueType": undefined,
                                                      "defaultValue": undefined,
                                                      "defaultDisplayValue": undefined,
                                                      "description": undefined,
                                                      "dimension": undefined,
                                                      "excludeFromShifting": false,
                                                      "format": undefined,
                                                      "hidden": false,
                                                      "importAliases": undefined,
                                                      "label": undefined,
                                                      "lookupContainer": undefined,
                                                      "lookupQuery": undefined,
                                                      "lookupSchema": undefined,
                                                      "lookupValidator": undefined,
                                                      "measure": undefined,
                                                      "mvEnabled": false,
                                                      "name": "field3",
                                                      "PHI": undefined,
                                                      "primaryKey": undefined,
                                                      "propertyId": undefined,
                                                      "propertyURI": undefined,
                                                      "propertyValidators": Immutable.List [],
                                                      "rangeValidators": Immutable.List [],
                                                      "rangeURI": "xsd:dateTime",
                                                      "regexValidators": Immutable.List [],
                                                      "recommendedVariable": false,
                                                      "required": false,
                                                      "scale": undefined,
                                                      "URL": undefined,
                                                      "shownInDetailsView": true,
                                                      "shownInInsertView": true,
                                                      "shownInUpdateView": true,
                                                      "visible": true,
                                                      "dataType": Immutable.Record {
                                                        "conceptURI": undefined,
                                                        "display": "Date Time",
                                                        "name": "dateTime",
                                                        "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                                                        "alternateRangeURI": "xsd:dateTime",
                                                        "shortDisplay": undefined,
                                                        "lookupSchema": undefined,
                                                        "lookupQuery": undefined,
                                                      },
                                                      "lookupQueryValue": undefined,
                                                      "lookupType": Immutable.Record {
                                                        "conceptURI": undefined,
                                                        "display": "Lookup",
                                                        "name": "lookup",
                                                        "rangeURI": "xsd:dateTime",
                                                        "alternateRangeURI": undefined,
                                                        "shortDisplay": undefined,
                                                        "lookupSchema": undefined,
                                                        "lookupQuery": undefined,
                                                      },
                                                      "original": Object {
                                                        "conceptURI": undefined,
                                                        "dataType": Immutable.Record {
                                                          "conceptURI": undefined,
                                                          "display": "Date Time",
                                                          "name": "dateTime",
                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                                                          "alternateRangeURI": "xsd:dateTime",
                                                          "shortDisplay": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                        "rangeURI": undefined,
                                                      },
                                                      "updatedField": false,
                                                      "isPrimaryKey": false,
                                                      "lockType": "NotLocked",
                                                      "wrappedColumnName": undefined,
                                                    }
                                                  }
                                                  helpNoun="field designer"
                                                  index={2}
                                                  key="domain-row-key-2"
                                                  maxPhiLevel="NotPHI"
                                                  onChange={[Function]}
                                                  onDelete={[Function]}
                                                  onExpand={[Function]}
                                                  showDefaultValueSettings={false}
                                                  showFilePropertyType={false}
                                                  successBsStyle="success"
                                                >
                                                  <ConnectFunction
                                                    disableInteractiveElementBlocking={false}
                                                    draggableId="domainpropertiesrow-domaindrag-1-2"
                                                    index={2}
                                                    isDragDisabled={false}
                                                    shouldRespectForcePress={false}
                                                  >
                                                    <Draggable
                                                      disableInteractiveElementBlocking={false}
                                                      draggableId="domainpropertiesrow-domaindrag-1-2"
                                                      drop={[Function]}
                                                      dropAnimationFinished={[Function]}
                                                      index={2}
                                                      isDragDisabled={false}
                                                      lift={[Function]}
                                                      mapped={
                                                        Object {
                                                          "combineTargetFor": null,
                                                          "offset": Object {
                                                            "x": 0,
                                                            "y": 0,
                                                          },
                                                          "shouldAnimateDisplacement": true,
                                                          "snapshot": Object {
                                                            "combineTargetFor": null,
                                                            "combineWith": null,
                                                            "draggingOver": null,
                                                            "dropAnimation": null,
                                                            "isDragging": false,
                                                            "isDropAnimating": false,
                                                            "mode": null,
                                                          },
                                                          "type": "SECONDARY",
                                                        }
                                                      }
                                                      move={[Function]}
                                                      moveByWindowScroll={[Function]}
                                                      moveDown={[Function]}
                                                      moveLeft={[Function]}
                                                      moveRight={[Function]}
                                                      moveUp={[Function]}
                                                      shouldRespectForcePress={false}
                                                    >
                                                      <div
                                                        className="domain-field-row domain-row-border-default"
                                                        data-react-beautiful-dnd-draggable="1"
                                                        onTransitionEnd={null}
                                                        style={
                                                          Object {
                                                            "transform": null,
                                                            "transition": null,
                                                          }
                                                        }
                                                        tabIndex={2}
                                                      >
                                                        <Row
                                                          bsClass="row"
                                                          className="domain-row-container"
                                                          componentClass="div"
                                                          key="domainpropertiesrow-domainrow-1-2"
                                                        >
                                                          <div
                                                            className="domain-row-container row"
                                                          >
                                                            <AdvancedSettings
                                                              defaultValueOptions={Immutable.List []}
                                                              domainFormDisplayOptions={
                                                                Object {
                                                                  "isDragDisabled": false,
                                                                  "phiLevelDisabled": false,
                                                                  "showAddFieldsButton": true,
                                                                  "showRequired": true,
                                                                  "showTextOptions": true,
                                                                  "showValidators": true,
                                                                }
                                                              }
                                                              domainId={null}
                                                              domainIndex={1}
                                                              field={
                                                                Immutable.Record {
                                                                  "conceptURI": undefined,
                                                                  "conditionalFormats": Immutable.List [],
                                                                  "defaultScale": undefined,
                                                                  "defaultValueType": undefined,
                                                                  "defaultValue": undefined,
                                                                  "defaultDisplayValue": undefined,
                                                                  "description": undefined,
                                                                  "dimension": undefined,
                                                                  "excludeFromShifting": false,
                                                                  "format": undefined,
                                                                  "hidden": false,
                                                                  "importAliases": undefined,
                                                                  "label": undefined,
                                                                  "lookupContainer": undefined,
                                                                  "lookupQuery": undefined,
                                                                  "lookupSchema": undefined,
                                                                  "lookupValidator": undefined,
                                                                  "measure": undefined,
                                                                  "mvEnabled": false,
                                                                  "name": "field3",
                                                                  "PHI": undefined,
                                                                  "primaryKey": undefined,
                                                                  "propertyId": undefined,
                                                                  "propertyURI": undefined,
                                                                  "propertyValidators": Immutable.List [],
                                                                  "rangeValidators": Immutable.List [],
                                                                  "rangeURI": "xsd:dateTime",
                                                                  "regexValidators": Immutable.List [],
                                                                  "recommendedVariable": false,
                                                                  "required": false,
                                                                  "scale": undefined,
                                                                  "URL": undefined,
                                                                  "shownInDetailsView": true,
                                                                  "shownInInsertView": true,
                                                                  "shownInUpdateView": true,
                                                                  "visible": true,
                                                                  "dataType": Immutable.Record {
                                                                    "conceptURI": undefined,
                                                                    "display": "Date Time",
                                                                    "name": "dateTime",
                                                                    "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                                                                    "alternateRangeURI": "xsd:dateTime",
                                                                    "shortDisplay": undefined,
                                                                    "lookupSchema": undefined,
                                                                    "lookupQuery": undefined,
                                                                  },
                                                                  "lookupQueryValue": undefined,
                                                                  "lookupType": Immutable.Record {
                                                                    "conceptURI": undefined,
                                                                    "display": "Lookup",
                                                                    "name": "lookup",
                                                                    "rangeURI": "xsd:dateTime",
                                                                    "alternateRangeURI": undefined,
                                                                    "shortDisplay": undefined,
                                                                    "lookupSchema": undefined,
                                                                    "lookupQuery": undefined,
                                                                  },
                                                                  "original": Object {
                                                                    "conceptURI": undefined,
                                                                    "dataType": Immutable.Record {
                                                                      "conceptURI": undefined,
                                                                      "display": "Date Time",
                                                                      "name": "dateTime",
                                                                      "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                                                                      "alternateRangeURI": "xsd:dateTime",
                                                                      "shortDisplay": undefined,
                                                                      "lookupSchema": undefined,
                                                                      "lookupQuery": undefined,
                                                                    },
                                                                    "rangeURI": undefined,
                                                                  },
                                                                  "updatedField": false,
                                                                  "isPrimaryKey": false,
                                                                  "lockType": "NotLocked",
                                                                  "wrappedColumnName": undefined,
                                                                }
                                                              }
                                                              helpNoun="field designer"
                                                              index={2}
                                                              label="field3"
                                                              maxPhiLevel="NotPHI"
                                                              onApply={[Function]}
                                                              onHide={[Function]}
                                                              show={false}
                                                              showDefaultValueSettings={false}
                                                              successBsStyle="success"
                                                            >
                                                              <Modal
                                                                animation={true}
                                                                autoFocus={true}
                                                                backdrop={true}
                                                                bsClass="modal"
                                                                dialogComponentClass={[Function]}
                                                                enforceFocus={true}
                                                                keyboard={true}
                                                                manager={
                                                                  ModalManager {
                                                                    "add": [Function],
                                                                    "containers": Array [],
                                                                    "data": Array [],
                                                                    "handleContainerOverflow": true,
                                                                    "hideSiblingNodes": true,
                                                                    "isTopModal": [Function],
                                                                    "modals": Array [],
                                                                    "remove": [Function],
                                                                  }
                                                                }
                                                                onEnter={[Function]}
                                                                onHide={[Function]}
                                                                renderBackdrop={[Function]}
                                                                restoreFocus={true}
                                                                show={false}
                                                              >
                                                                <Modal
                                                                  autoFocus={true}
                                                                  backdrop={true}
                                                                  backdropClassName="modal-backdrop"
                                                                  backdropTransition={[Function]}
                                                                  containerClassName="modal-open"
                                                                  enforceFocus={true}
                                                                  keyboard={true}
                                                                  manager={
                                                                    ModalManager {
                                                                      "add": [Function],
                                                                      "containers": Array [],
                                                                      "data": Array [],
                                                                      "handleContainerOverflow": true,
                                                                      "hideSiblingNodes": true,
                                                                      "isTopModal": [Function],
                                                                      "modals": Array [],
                                                                      "remove": [Function],
                                                                    }
                                                                  }
                                                                  onEnter={[Function]}
                                                                  onEntering={[Function]}
                                                                  onExited={[Function]}
                                                                  onHide={[Function]}
                                                                  renderBackdrop={[Function]}
                                                                  restoreFocus={true}
                                                                  show={false}
                                                                  transition={[Function]}
                                                                />
                                                              </Modal>
                                                            </AdvancedSettings>
                                                            <div
                                                              aria-roledescription="Draggable item. Press space bar to lift"
                                                              className="domain-row-handle"
                                                              data-react-beautiful-dnd-drag-handle="1"
                                                              draggable={false}
                                                              onBlur={[Function]}
                                                              onDragStart={[Function]}
                                                              onFocus={[Function]}
                                                              onKeyDown={[Function]}
                                                              onMouseDown={[Function]}
                                                              onTouchStart={[Function]}
                                                              tabIndex={0}
                                                            >
                                                              <DragDropHandle>
                                                                <FontAwesomeIcon
                                                                  border={false}
                                                                  className=""
                                                                  fixedWidth={false}
                                                                  flip={null}
                                                                  icon={
                                                                    Object {
                                                                      "icon": Array [
                                                                        320,
                                                                        512,
                                                                        Array [],
                                                                        "f58e",
                                                                        "M96 32H32C14.33 32 0 46.33 0 64v64c0 17.67 14.33 32 32 32h64c17.67 0 32-14.33 32-32V64c0-17.67-14.33-32-32-32zm0 160H32c-17.67 0-32 14.33-32 32v64c0 17.67 14.33 32 32 32h64c17.67 0 32-14.33 32-32v-64c0-17.67-14.33-32-32-32zm0 160H32c-17.67 0-32 14.33-32 32v64c0 17.67 14.33 32 32 32h64c17.67 0 32-14.33 32-32v-64c0-17.67-14.33-32-32-32zM288 32h-64c-17.67 0-32 14.33-32 32v64c0 17.67 14.33 32 32 32h64c17.67 0 32-14.33 32-32V64c0-17.67-14.33-32-32-32zm0 160h-64c-17.67 0-32 14.33-32 32v64c0 17.67 14.33 32 32 32h64c17.67 0 32-14.33 32-32v-64c0-17.67-14.33-32-32-32zm0 160h-64c-17.67 0-32 14.33-32 32v64c0 17.67 14.33 32 32 32h64c17.67 0 32-14.33 32-32v-64c0-17.67-14.33-32-32-32z",
                                                                      ],
                                                                      "iconName": "grip-vertical",
                                                                      "prefix": "fas",
                                                                    }
                                                                  }
                                                                  inverse={false}
                                                                  listItem={false}
                                                                  mask={null}
                                                                  pull={null}
                                                                  pulse={false}
                                                                  rotation={null}
                                                                  size="lg"
                                                                  spin={false}
                                                                  symbol={false}
                                                                  title=""
                                                                  transform={null}
                                                                >
                                                                  <svg
                                                                    aria-hidden="true"
                                                                    className="svg-inline--fa fa-grip-vertical fa-w-10 fa-lg "
                                                                    data-icon="grip-vertical"
                                                                    data-prefix="fas"
                                                                    focusable="false"
                                                                    role="img"
                                                                    style={Object {}}
                                                                    viewBox="0 0 320 512"
                                                                    xmlns="http://www.w3.org/2000/svg"
                                                                  >
                                                                    <path
                                                                      d="M96 32H32C14.33 32 0 46.33 0 64v64c0 17.67 14.33 32 32 32h64c17.67 0 32-14.33 32-32V64c0-17.67-14.33-32-32-32zm0 160H32c-17.67 0-32 14.33-32 32v64c0 17.67 14.33 32 32 32h64c17.67 0 32-14.33 32-32v-64c0-17.67-14.33-32-32-32zm0 160H32c-17.67 0-32 14.33-32 32v64c0 17.67 14.33 32 32 32h64c17.67 0 32-14.33 32-32v-64c0-17.67-14.33-32-32-32zM288 32h-64c-17.67 0-32 14.33-32 32v64c0 17.67 14.33 32 32 32h64c17.67 0 32-14.33 32-32V64c0-17.67-14.33-32-32-32zm0 160h-64c-17.67 0-32 14.33-32 32v64c0 17.67 14.33 32 32 32h64c17.67 0 32-14.33 32-32v-64c0-17.67-14.33-32-32-32zm0 160h-64c-17.67 0-32 14.33-32 32v64c0 17.67 14.33 32 32 32h64c17.67 0 32-14.33 32-32v-64c0-17.67-14.33-32-32-32z"
                                                                      fill="currentColor"
                                                                      style={Object {}}
                                                                    />
                                                                  </svg>
                                                                </FontAwesomeIcon>
                                                              </DragDropHandle>
                                                            </div>
                                                            <div
                                                              className="domain-row-main"
                                                            >
                                                              <Col
                                                                bsClass="col"
                                                                className="domain-row-base-fields"
                                                                componentClass="div"
                                                                xs={6}
                                                              >
                                                                <div
                                                                  className="domain-row-base-fields col-xs-6"
                                                                >
                                                                  <div
                                                                    id="domainpropertiesrow-row-1-2"
                                                                  >
                                                                    <Col
                                                                      bsClass="col"
                                                                      componentClass="div"
                                                                      xs={6}
                                                                    >
                                                                      <div
                                                                        className="col-xs-6"
                                                                      >
                                                                        <FormControl
                                                                          bsClass="form-control"
                                                                          componentClass="input"
                                                                          disabled={false}
                                                                          id="domainpropertiesrow-name-1-2"
                                                                          name="domainpropertiesrow-name"
                                                                          onChange={[Function]}
                                                                          type="text"
                                                                          value="field3"
                                                                        >
                                                                          <input
                                                                            className="form-control"
                                                                            disabled={false}
                                                                            id="domainpropertiesrow-name-1-2"
                                                                            name="domainpropertiesrow-name"
                                                                            onChange={[Function]}
                                                                            type="text"
                                                                            value="field3"
                                                                          />
                                                                        </FormControl>
                                                                      </div>
                                                                    </Col>
                                                                    <Col
                                                                      bsClass="col"
                                                                      componentClass="div"
                                                                      xs={4}
                                                                    >
                                                                      <div
                                                                        className="col-xs-4"
                                                                      >
                                                                        <FormControl
                                                                          bsClass="form-control"
                                                                          componentClass="select"
                                                                          disabled={false}
                                                                          id="domainpropertiesrow-type-1-2"
                                                                          name="domainpropertiesrow-type"
                                                                          onChange={[Function]}
                                                                          value="dateTime"
                                                                        >
                                                                          <select
                                                                            className="form-control"
                                                                            disabled={false}
                                                                            id="domainpropertiesrow-type-1-2"
                                                                            name="domainpropertiesrow-type"
                                                                            onChange={[Function]}
                                                                            value="dateTime"
                                                                          >
                                                                            <option
                                                                              key="0"
                                                                              value="string"
                                                                            >
                                                                              Text
                                                                            </option>
                                                                            <option
                                                                              key="1"
                                                                              value="multiLine"
                                                                            >
                                                                              Multi-Line Text
                                                                            </option>
                                                                            <option
                                                                              key="2"
                                                                              value="boolean"
                                                                            >
                                                                              Boolean
                                                                            </option>
                                                                            <option
                                                                              key="3"
                                                                              value="int"
                                                                            >
                                                                              Integer
                                                                            </option>
                                                                            <option
                                                                              key="4"
                                                                              value="double"
                                                                            >
                                                                              Decimal
                                                                            </option>
                                                                            <option
                                                                              key="5"
                                                                              value="dateTime"
                                                                            >
                                                                              Date Time
                                                                            </option>
                                                                            <option
                                                                              key="6"
                                                                              value="flag"
                                                                            >
                                                                              Flag
                                                                            </option>
                                                                            <option
                                                                              key="7"
                                                                              value="fileLink"
                                                                            >
                                                                              File
                                                                            </option>
                                                                            <option
                                                                              key="8"
                                                                              value="attachment"
                                                                            >
                                                                              Attachment
                                                                            </option>
                                                                            <option
                                                                              key="9"
                                                                              value="users"
                                                                            >
                                                                              User
                                                                            </option>
                                                                            <option
                                                                              key="10"
                                                                              value="ParticipantId"
                                                                            >
                                                                              Subject/Participant
                                                                            </option>
                                                                            <option
                                                                              key="11"
                                                                              value="lookup"
                                                                            >
                                                                              Lookup
                                                                            </option>
                                                                            <option
                                                                              key="12"
                                                                              value="sample"
                                                                            >
                                                                              Sample
                                                                            </option>
                                                                          </select>
                                                                        </FormControl>
                                                                      </div>
                                                                    </Col>
                                                                    <Col
                                                                      bsClass="col"
                                                                      componentClass="div"
                                                                      xs={2}
                                                                    >
                                                                      <div
                                                                        className="col-xs-2"
                                                                      >
                                                                        <div
                                                                          className="domain-field-checkbox-container"
                                                                        >
                                                                          <Checkbox
                                                                            bsClass="checkbox"
                                                                            checked={false}
                                                                            className="domain-field-checkbox"
                                                                            disabled={false}
                                                                            id="domainpropertiesrow-required-1-2"
                                                                            inline={false}
                                                                            name="domainpropertiesrow-required"
                                                                            onChange={[Function]}
                                                                            title=""
                                                                          >
                                                                            <div
                                                                              className="domain-field-checkbox checkbox"
                                                                            >
                                                                              <label
                                                                                title=""
                                                                              >
                                                                                <input
                                                                                  checked={false}
                                                                                  disabled={false}
                                                                                  id="domainpropertiesrow-required-1-2"
                                                                                  name="domainpropertiesrow-required"
                                                                                  onChange={[Function]}
                                                                                  type="checkbox"
                                                                                />
                                                                              </label>
                                                                            </div>
                                                                          </Checkbox>
                                                                        </div>
                                                                      </div>
                                                                    </Col>
                                                                  </div>
                                                                </div>
                                                              </Col>
                                                              <Col
                                                                bsClass="col"
                                                                className="field-details-container"
                                                                componentClass="div"
                                                                xs={6}
                                                              >
                                                                <div
                                                                  className="field-details-container col-xs-6"
                                                                >
                                                                  <div
                                                                    className="domain-field-details"
                                                                    id="domainpropertiesrow-details-1-2"
                                                                  >
                                                                    New Field
                                                                  </div>
                                                                  <div
                                                                    className="domain-field-buttons"
                                                                  >
                                                                    <DeleteIcon
                                                                      iconCls="domain-field-delete-icon"
                                                                      id="domainpropertiesrow-delete-1-2"
                                                                      onDelete={[Function]}
                                                                      title="Remove field"
                                                                    >
                                                                      <span
                                                                        className="field-icon"
                                                                        id="domainpropertiesrow-delete-1-2"
                                                                        onClick={[Function]}
                                                                        title="Remove field"
                                                                      >
                                                                        <FontAwesomeIcon
                                                                          border={false}
                                                                          className="domain-field-delete-icon"
                                                                          fixedWidth={false}
                                                                          flip={null}
                                                                          icon={
                                                                            Object {
                                                                              "icon": Array [
                                                                                512,
                                                                                512,
                                                                                Array [],
                                                                                "f057",
                                                                                "M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8zm121.6 313.1c4.7 4.7 4.7 12.3 0 17L338 377.6c-4.7 4.7-12.3 4.7-17 0L256 312l-65.1 65.6c-4.7 4.7-12.3 4.7-17 0L134.4 338c-4.7-4.7-4.7-12.3 0-17l65.6-65-65.6-65.1c-4.7-4.7-4.7-12.3 0-17l39.6-39.6c4.7-4.7 12.3-4.7 17 0l65 65.7 65.1-65.6c4.7-4.7 12.3-4.7 17 0l39.6 39.6c4.7 4.7 4.7 12.3 0 17L312 256l65.6 65.1z",
                                                                              ],
                                                                              "iconName": "times-circle",
                                                                              "prefix": "fas",
                                                                            }
                                                                          }
                                                                          inverse={false}
                                                                          listItem={false}
                                                                          mask={null}
                                                                          pull={null}
                                                                          pulse={false}
                                                                          rotation={null}
                                                                          size={null}
                                                                          spin={false}
                                                                          symbol={false}
                                                                          title=""
                                                                          transform={null}
                                                                        >
                                                                          <svg
                                                                            aria-hidden="true"
                                                                            className="svg-inline--fa fa-times-circle fa-w-16 domain-field-delete-icon"
                                                                            data-icon="times-circle"
                                                                            data-prefix="fas"
                                                                            focusable="false"
                                                                            role="img"
                                                                            style={Object {}}
                                                                            viewBox="0 0 512 512"
                                                                            xmlns="http://www.w3.org/2000/svg"
                                                                          >
                                                                            <path
                                                                              d="M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8zm121.6 313.1c4.7 4.7 4.7 12.3 0 17L338 377.6c-4.7 4.7-12.3 4.7-17 0L256 312l-65.1 65.6c-4.7 4.7-12.3 4.7-17 0L134.4 338c-4.7-4.7-4.7-12.3 0-17l65.6-65-65.6-65.1c-4.7-4.7-4.7-12.3 0-17l39.6-39.6c4.7-4.7 12.3-4.7 17 0l65 65.7 65.1-65.6c4.7-4.7 12.3-4.7 17 0l39.6 39.6c4.7 4.7 4.7 12.3 0 17L312 256l65.6 65.1z"
                                                                              fill="currentColor"
                                                                              style={Object {}}
                                                                            />
                                                                          </svg>
                                                                        </FontAwesomeIcon>
                                                                      </span>
                                                                    </DeleteIcon>
                                                                    <FieldExpansionToggle
                                                                      cls="domain-field-expand-icon"
                                                                      collapsedTitle="Show additional field properties"
                                                                      expanded={false}
                                                                      expandedTitle="Hide additional field properties"
                                                                      id="domainpropertiesrow-expand-1-2"
                                                                      onClick={[Function]}
                                                                    >
                                                                      <div
                                                                        className="field-icon domain-field-expand-icon"
                                                                        id="domainpropertiesrow-expand-1-2"
                                                                        onClick={[Function]}
                                                                        title="Show additional field properties"
                                                                      >
                                                                        <FontAwesomeIcon
                                                                          border={false}
                                                                          className=""
                                                                          fixedWidth={false}
                                                                          flip={null}
                                                                          icon={
                                                                            Object {
                                                                              "icon": Array [
                                                                                448,
                                                                                512,
                                                                                Array [],
                                                                                "f0fe",
                                                                                "M400 32H48C21.5 32 0 53.5 0 80v352c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V80c0-26.5-21.5-48-48-48zm-32 252c0 6.6-5.4 12-12 12h-92v92c0 6.6-5.4 12-12 12h-56c-6.6 0-12-5.4-12-12v-92H92c-6.6 0-12-5.4-12-12v-56c0-6.6 5.4-12 12-12h92v-92c0-6.6 5.4-12 12-12h56c6.6 0 12 5.4 12 12v92h92c6.6 0 12 5.4 12 12v56z",
                                                                              ],
                                                                              "iconName": "plus-square",
                                                                              "prefix": "fas",
                                                                            }
                                                                          }
                                                                          inverse={false}
                                                                          listItem={false}
                                                                          mask={null}
                                                                          pull={null}
                                                                          pulse={false}
                                                                          rotation={null}
                                                                          size="lg"
                                                                          spin={false}
                                                                          symbol={false}
                                                                          title=""
                                                                          transform={null}
                                                                        >
                                                                          <svg
                                                                            aria-hidden="true"
                                                                            className="svg-inline--fa fa-plus-square fa-w-14 fa-lg "
                                                                            data-icon="plus-square"
                                                                            data-prefix="fas"
                                                                            focusable="false"
                                                                            role="img"
                                                                            style={Object {}}
                                                                            viewBox="0 0 448 512"
                                                                            xmlns="http://www.w3.org/2000/svg"
                                                                          >
                                                                            <path
                                                                              d="M400 32H48C21.5 32 0 53.5 0 80v352c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V80c0-26.5-21.5-48-48-48zm-32 252c0 6.6-5.4 12-12 12h-92v92c0 6.6-5.4 12-12 12h-56c-6.6 0-12-5.4-12-12v-92H92c-6.6 0-12-5.4-12-12v-56c0-6.6 5.4-12 12-12h92v-92c0-6.6 5.4-12 12-12h56c6.6 0 12 5.4 12 12v92h92c6.6 0 12 5.4 12 12v56z"
                                                                              fill="currentColor"
                                                                              style={Object {}}
                                                                            />
                                                                          </svg>
                                                                        </FontAwesomeIcon>
                                                                      </div>
                                                                    </FieldExpansionToggle>
                                                                  </div>
                                                                </div>
                                                              </Col>
                                                            </div>
                                                          </div>
                                                        </Row>
                                                        <Collapse
                                                          appear={false}
                                                          dimension="height"
                                                          getDimensionValue={[Function]}
                                                          in={false}
                                                          mountOnEnter={false}
                                                          onExited={[Function]}
                                                          onExiting={[Function]}
                                                          timeout={300}
                                                          unmountOnExit={false}
                                                        >
                                                          <Transition
                                                            appear={false}
                                                            aria-expanded={null}
                                                            enter={true}
                                                            exit={true}
                                                            in={false}
                                                            mountOnEnter={false}
                                                            onEnter={[Function]}
                                                            onEntered={[Function]}
                                                            onEntering={[Function]}
                                                            onExit={[Function]}
                                                            onExited={[Function]}
                                                            onExiting={[Function]}
                                                            timeout={300}
                                                            unmountOnExit={false}
                                                          >
                                                            <div
                                                              aria-expanded={null}
                                                              className="collapse"
                                                            >
                                                              <DomainRowExpandedOptions
                                                                appPropertiesOnly={false}
                                                                domainFormDisplayOptions={
                                                                  Object {
                                                                    "isDragDisabled": false,
                                                                    "phiLevelDisabled": false,
                                                                    "showAddFieldsButton": true,
                                                                    "showRequired": true,
                                                                    "showTextOptions": true,
                                                                    "showValidators": true,
                                                                  }
                                                                }
                                                                domainIndex={1}
                                                                field={
                                                                  Immutable.Record {
                                                                    "conceptURI": undefined,
                                                                    "conditionalFormats": Immutable.List [],
                                                                    "defaultScale": undefined,
                                                                    "defaultValueType": undefined,
                                                                    "defaultValue": undefined,
                                                                    "defaultDisplayValue": undefined,
                                                                    "description": undefined,
                                                                    "dimension": undefined,
                                                                    "excludeFromShifting": false,
                                                                    "format": undefined,
                                                                    "hidden": false,
                                                                    "importAliases": undefined,
                                                                    "label": undefined,
                                                                    "lookupContainer": undefined,
                                                                    "lookupQuery": undefined,
                                                                    "lookupSchema": undefined,
                                                                    "lookupValidator": undefined,
                                                                    "measure": undefined,
                                                                    "mvEnabled": false,
                                                                    "name": "field3",
                                                                    "PHI": undefined,
                                                                    "primaryKey": undefined,
                                                                    "propertyId": undefined,
                                                                    "propertyURI": undefined,
                                                                    "propertyValidators": Immutable.List [],
                                                                    "rangeValidators": Immutable.List [],
                                                                    "rangeURI": "xsd:dateTime",
                                                                    "regexValidators": Immutable.List [],
                                                                    "recommendedVariable": false,
                                                                    "required": false,
                                                                    "scale": undefined,
                                                                    "URL": undefined,
                                                                    "shownInDetailsView": true,
                                                                    "shownInInsertView": true,
                                                                    "shownInUpdateView": true,
                                                                    "visible": true,
                                                                    "dataType": Immutable.Record {
                                                                      "conceptURI": undefined,
                                                                      "display": "Date Time",
                                                                      "name": "dateTime",
                                                                      "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                                                                      "alternateRangeURI": "xsd:dateTime",
                                                                      "shortDisplay": undefined,
                                                                      "lookupSchema": undefined,
                                                                      "lookupQuery": undefined,
                                                                    },
                                                                    "lookupQueryValue": undefined,
                                                                    "lookupType": Immutable.Record {
                                                                      "conceptURI": undefined,
                                                                      "display": "Lookup",
                                                                      "name": "lookup",
                                                                      "rangeURI": "xsd:dateTime",
                                                                      "alternateRangeURI": undefined,
                                                                      "shortDisplay": undefined,
                                                                      "lookupSchema": undefined,
                                                                      "lookupQuery": undefined,
                                                                    },
                                                                    "original": Object {
                                                                      "conceptURI": undefined,
                                                                      "dataType": Immutable.Record {
                                                                        "conceptURI": undefined,
                                                                        "display": "Date Time",
                                                                        "name": "dateTime",
                                                                        "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                                                                        "alternateRangeURI": "xsd:dateTime",
                                                                        "shortDisplay": undefined,
                                                                        "lookupSchema": undefined,
                                                                        "lookupQuery": undefined,
                                                                      },
                                                                      "rangeURI": undefined,
                                                                    },
                                                                    "updatedField": false,
                                                                    "isPrimaryKey": false,
                                                                    "lockType": "NotLocked",
                                                                    "wrappedColumnName": undefined,
                                                                  }
                                                                }
                                                                index={2}
                                                                onChange={[Function]}
                                                                onMultiChange={[Function]}
                                                                showingModal={[Function]}
                                                                successBsStyle="success"
                                                              >
                                                                <div
                                                                  className="domain-row-container"
                                                                >
                                                                  <div
                                                                    className="domain-row-handle"
                                                                  />
                                                                  <div
                                                                    className="domain-row-container-expanded"
                                                                  >
                                                                    <Col
                                                                      bsClass="col"
                                                                      componentClass="div"
                                                                      xs={12}
                                                                    >
                                                                      <div
                                                                        className="col-xs-12"
                                                                      >
                                                                        <DateTimeFieldOptions
                                                                          domainIndex={1}
                                                                          excludeFromShifting={false}
                                                                          index={2}
                                                                          label="Date and Time Options"
                                                                          lockType="NotLocked"
                                                                          onChange={[Function]}
                                                                        >
                                                                          <div>
                                                                            <Row
                                                                              bsClass="row"
                                                                              className="domain-row-expanded"
                                                                              componentClass="div"
                                                                            >
                                                                              <div
                                                                                className="domain-row-expanded row"
                                                                              >
                                                                                <Col
                                                                                  bsClass="col"
                                                                                  componentClass="div"
                                                                                  xs={12}
                                                                                >
                                                                                  <div
                                                                                    className="col-xs-12"
                                                                                  >
                                                                                    <div
                                                                                      className="domain-field-section-heading"
                                                                                    >
                                                                                      Date and Time Options
                                                                                    </div>
                                                                                  </div>
                                                                                </Col>
                                                                              </div>
                                                                            </Row>
                                                                            <Row
                                                                              bsClass="row"
                                                                              className="domain-row-expanded"
                                                                              componentClass="div"
                                                                            >
                                                                              <div
                                                                                className="domain-row-expanded row"
                                                                              >
                                                                                <Col
                                                                                  bsClass="col"
                                                                                  componentClass="div"
                                                                                  xs={3}
                                                                                >
                                                                                  <div
                                                                                    className="col-xs-3"
                                                                                  >
                                                                                    <div
                                                                                      className="domain-field-label"
                                                                                    >
                                                                                      Format for Dates
                                                                                      <LabelHelpTip
                                                                                        body={[Function]}
                                                                                        customStyle={Object {}}
                                                                                        id="tooltip"
                                                                                        size="1x"
                                                                                        title="Format String"
                                                                                      >
                                                                                        <span
                                                                                          className="label-help-target"
                                                                                          onMouseOut={[Function]}
                                                                                          onMouseOver={[Function]}
                                                                                        >
                                                                                          <FontAwesomeIcon
                                                                                            border={false}
                                                                                            className="label-help-icon"
                                                                                            fixedWidth={false}
                                                                                            flip={null}
                                                                                            icon={
                                                                                              Object {
                                                                                                "icon": Array [
                                                                                                  512,
                                                                                                  512,
                                                                                                  Array [],
                                                                                                  "f059",
                                                                                                  "M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z",
                                                                                                ],
                                                                                                "iconName": "question-circle",
                                                                                                "prefix": "fas",
                                                                                              }
                                                                                            }
                                                                                            inverse={false}
                                                                                            listItem={false}
                                                                                            mask={null}
                                                                                            pull={null}
                                                                                            pulse={false}
                                                                                            rotation={null}
                                                                                            size="1x"
                                                                                            spin={false}
                                                                                            style={Object {}}
                                                                                            symbol={false}
                                                                                            title=""
                                                                                            transform={null}
                                                                                          >
                                                                                            <svg
                                                                                              aria-hidden="true"
                                                                                              className="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                                                                                              data-icon="question-circle"
                                                                                              data-prefix="fas"
                                                                                              focusable="false"
                                                                                              role="img"
                                                                                              style={Object {}}
                                                                                              viewBox="0 0 512 512"
                                                                                              xmlns="http://www.w3.org/2000/svg"
                                                                                            >
                                                                                              <path
                                                                                                d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                                                                fill="currentColor"
                                                                                                style={Object {}}
                                                                                              />
                                                                                            </svg>
                                                                                          </FontAwesomeIcon>
                                                                                          <Overlay
                                                                                            animation={[Function]}
                                                                                            placement="right"
                                                                                            rootClose={false}
                                                                                            show={false}
                                                                                            target={
                                                                                              <span
                                                                                                class="label-help-target"
                                                                                              >
                                                                                                <svg
                                                                                                  aria-hidden="true"
                                                                                                  class="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                                                                                                  data-icon="question-circle"
                                                                                                  data-prefix="fas"
                                                                                                  focusable="false"
                                                                                                  role="img"
                                                                                                  viewBox="0 0 512 512"
                                                                                                  xmlns="http://www.w3.org/2000/svg"
                                                                                                >
                                                                                                  <path
                                                                                                    d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                                                                    fill="currentColor"
                                                                                                  />
                                                                                                </svg>
                                                                                              </span>
                                                                                            }
                                                                                          >
                                                                                            <Overlay
                                                                                              placement="right"
                                                                                              rootClose={false}
                                                                                              show={false}
                                                                                              target={
                                                                                                <span
                                                                                                  class="label-help-target"
                                                                                                >
                                                                                                  <svg
                                                                                                    aria-hidden="true"
                                                                                                    class="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                                                                                                    data-icon="question-circle"
                                                                                                    data-prefix="fas"
                                                                                                    focusable="false"
                                                                                                    role="img"
                                                                                                    viewBox="0 0 512 512"
                                                                                                    xmlns="http://www.w3.org/2000/svg"
                                                                                                  >
                                                                                                    <path
                                                                                                      d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                                                                      fill="currentColor"
                                                                                                    />
                                                                                                  </svg>
                                                                                                </span>
                                                                                              }
                                                                                              transition={[Function]}
                                                                                            />
                                                                                          </Overlay>
                                                                                        </span>
                                                                                      </LabelHelpTip>
                                                                                    </div>
                                                                                  </div>
                                                                                </Col>
                                                                                <Col
                                                                                  bsClass="col"
                                                                                  componentClass="div"
                                                                                  xs={9}
                                                                                >
                                                                                  <div
                                                                                    className="col-xs-9"
                                                                                  />
                                                                                </Col>
                                                                              </div>
                                                                            </Row>
                                                                            <Row
                                                                              bsClass="row"
                                                                              className="domain-row-expanded"
                                                                              componentClass="div"
                                                                            >
                                                                              <div
                                                                                className="domain-row-expanded row"
                                                                              >
                                                                                <Col
                                                                                  bsClass="col"
                                                                                  componentClass="div"
                                                                                  xs={3}
                                                                                >
                                                                                  <div
                                                                                    className="col-xs-3"
                                                                                  >
                                                                                    <FormControl
                                                                                      bsClass="form-control"
                                                                                      componentClass="input"
                                                                                      disabled={false}
                                                                                      id="domainpropertiesrow-format-1-2"
                                                                                      name="domainpropertiesrow-format"
                                                                                      onChange={[Function]}
                                                                                      type="text"
                                                                                      value=""
                                                                                    >
                                                                                      <input
                                                                                        className="form-control"
                                                                                        disabled={false}
                                                                                        id="domainpropertiesrow-format-1-2"
                                                                                        name="domainpropertiesrow-format"
                                                                                        onChange={[Function]}
                                                                                        type="text"
                                                                                        value=""
                                                                                      />
                                                                                    </FormControl>
                                                                                  </div>
                                                                                </Col>
                                                                                <Col
                                                                                  bsClass="col"
                                                                                  componentClass="div"
                                                                                  xs={9}
                                                                                >
                                                                                  <div
                                                                                    className="col-xs-9"
                                                                                  />
                                                                                </Col>
                                                                              </div>
                                                                            </Row>
                                                                          </div>
                                                                        </DateTimeFieldOptions>
                                                                      </div>
                                                                    </Col>
                                                                    <Col
                                                                      bsClass="col"
                                                                      componentClass="div"
                                                                      lg={10}
                                                                      xs={12}
                                                                    >
                                                                      <div
                                                                        className="col-lg-10 col-xs-12"
                                                                      >
                                                                        <NameAndLinkingOptions
                                                                          domainIndex={1}
                                                                          field={
                                                                            Immutable.Record {
                                                                              "conceptURI": undefined,
                                                                              "conditionalFormats": Immutable.List [],
                                                                              "defaultScale": undefined,
                                                                              "defaultValueType": undefined,
                                                                              "defaultValue": undefined,
                                                                              "defaultDisplayValue": undefined,
                                                                              "description": undefined,
                                                                              "dimension": undefined,
                                                                              "excludeFromShifting": false,
                                                                              "format": undefined,
                                                                              "hidden": false,
                                                                              "importAliases": undefined,
                                                                              "label": undefined,
                                                                              "lookupContainer": undefined,
                                                                              "lookupQuery": undefined,
                                                                              "lookupSchema": undefined,
                                                                              "lookupValidator": undefined,
                                                                              "measure": undefined,
                                                                              "mvEnabled": false,
                                                                              "name": "field3",
                                                                              "PHI": undefined,
                                                                              "primaryKey": undefined,
                                                                              "propertyId": undefined,
                                                                              "propertyURI": undefined,
                                                                              "propertyValidators": Immutable.List [],
                                                                              "rangeValidators": Immutable.List [],
                                                                              "rangeURI": "xsd:dateTime",
                                                                              "regexValidators": Immutable.List [],
                                                                              "recommendedVariable": false,
                                                                              "required": false,
                                                                              "scale": undefined,
                                                                              "URL": undefined,
                                                                              "shownInDetailsView": true,
                                                                              "shownInInsertView": true,
                                                                              "shownInUpdateView": true,
                                                                              "visible": true,
                                                                              "dataType": Immutable.Record {
                                                                                "conceptURI": undefined,
                                                                                "display": "Date Time",
                                                                                "name": "dateTime",
                                                                                "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                                                                                "alternateRangeURI": "xsd:dateTime",
                                                                                "shortDisplay": undefined,
                                                                                "lookupSchema": undefined,
                                                                                "lookupQuery": undefined,
                                                                              },
                                                                              "lookupQueryValue": undefined,
                                                                              "lookupType": Immutable.Record {
                                                                                "conceptURI": undefined,
                                                                                "display": "Lookup",
                                                                                "name": "lookup",
                                                                                "rangeURI": "xsd:dateTime",
                                                                                "alternateRangeURI": undefined,
                                                                                "shortDisplay": undefined,
                                                                                "lookupSchema": undefined,
                                                                                "lookupQuery": undefined,
                                                                              },
                                                                              "original": Object {
                                                                                "conceptURI": undefined,
                                                                                "dataType": Immutable.Record {
                                                                                  "conceptURI": undefined,
                                                                                  "display": "Date Time",
                                                                                  "name": "dateTime",
                                                                                  "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                                                                                  "alternateRangeURI": "xsd:dateTime",
                                                                                  "shortDisplay": undefined,
                                                                                  "lookupSchema": undefined,
                                                                                  "lookupQuery": undefined,
                                                                                },
                                                                                "rangeURI": undefined,
                                                                              },
                                                                              "updatedField": false,
                                                                              "isPrimaryKey": false,
                                                                              "lockType": "NotLocked",
                                                                              "wrappedColumnName": undefined,
                                                                            }
                                                                          }
                                                                          index={2}
                                                                          onChange={[Function]}
                                                                        >
                                                                          <div>
                                                                            <Row
                                                                              bsClass="row"
                                                                              className="domain-row-expanded"
                                                                              componentClass="div"
                                                                            >
                                                                              <div
                                                                                className="domain-row-expanded row"
                                                                              >
                                                                                <Col
                                                                                  bsClass="col"
                                                                                  componentClass="div"
                                                                                  xs={12}
                                                                                >
                                                                                  <div
                                                                                    className="col-xs-12"
                                                                                  >
                                                                                    <div
                                                                                      className="domain-field-section-heading domain-field-section-hdr"
                                                                                    >
                                                                                      Name and Linking Options
                                                                                    </div>
                                                                                  </div>
                                                                                </Col>
                                                                              </div>
                                                                            </Row>
                                                                            <Row
                                                                              bsClass="row"
                                                                              className="domain-row-expanded"
                                                                              componentClass="div"
                                                                            >
                                                                              <div
                                                                                className="domain-row-expanded row"
                                                                              >
                                                                                <div>
                                                                                  <Col
                                                                                    bsClass="col"
                                                                                    componentClass="div"
                                                                                    xs={5}
                                                                                  >
                                                                                    <div
                                                                                      className="col-xs-5"
                                                                                    >
                                                                                      <div
                                                                                        className="domain-field-label"
                                                                                      >
                                                                                        Description
                                                                                      </div>
                                                                                      <FormControl
                                                                                        bsClass="form-control"
                                                                                        className="form-control textarea-noresize"
                                                                                        componentClass="textarea"
                                                                                        disabled={false}
                                                                                        id="domainpropertiesrow-description-1-2"
                                                                                        name="domainpropertiesrow-description"
                                                                                        onChange={[Function]}
                                                                                        rows={4}
                                                                                        value=""
                                                                                      >
                                                                                        <textarea
                                                                                          className="form-control textarea-noresize form-control"
                                                                                          disabled={false}
                                                                                          id="domainpropertiesrow-description-1-2"
                                                                                          name="domainpropertiesrow-description"
                                                                                          onChange={[Function]}
                                                                                          rows={4}
                                                                                          value=""
                                                                                        />
                                                                                      </FormControl>
                                                                                    </div>
                                                                                  </Col>
                                                                                  <Col
                                                                                    bsClass="col"
                                                                                    componentClass="div"
                                                                                    xs={3}
                                                                                  >
                                                                                    <div
                                                                                      className="col-xs-3"
                                                                                    >
                                                                                      <div
                                                                                        className="domain-field-label"
                                                                                      >
                                                                                        Label
                                                                                      </div>
                                                                                      <FormControl
                                                                                        bsClass="form-control"
                                                                                        componentClass="input"
                                                                                        disabled={false}
                                                                                        id="domainpropertiesrow-label-1-2"
                                                                                        name="domainpropertiesrow-label"
                                                                                        onChange={[Function]}
                                                                                        type="text"
                                                                                        value=""
                                                                                      >
                                                                                        <input
                                                                                          className="form-control"
                                                                                          disabled={false}
                                                                                          id="domainpropertiesrow-label-1-2"
                                                                                          name="domainpropertiesrow-label"
                                                                                          onChange={[Function]}
                                                                                          type="text"
                                                                                          value=""
                                                                                        />
                                                                                      </FormControl>
                                                                                      <div
                                                                                        className="domain-field-label"
                                                                                      >
                                                                                        Import Aliases
                                                                                        <LabelHelpTip
                                                                                          body={[Function]}
                                                                                          customStyle={Object {}}
                                                                                          id="tooltip"
                                                                                          size="1x"
                                                                                          title="Import Aliases"
                                                                                        >
                                                                                          <span
                                                                                            className="label-help-target"
                                                                                            onMouseOut={[Function]}
                                                                                            onMouseOver={[Function]}
                                                                                          >
                                                                                            <FontAwesomeIcon
                                                                                              border={false}
                                                                                              className="label-help-icon"
                                                                                              fixedWidth={false}
                                                                                              flip={null}
                                                                                              icon={
                                                                                                Object {
                                                                                                  "icon": Array [
                                                                                                    512,
                                                                                                    512,
                                                                                                    Array [],
                                                                                                    "f059",
                                                                                                    "M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z",
                                                                                                  ],
                                                                                                  "iconName": "question-circle",
                                                                                                  "prefix": "fas",
                                                                                                }
                                                                                              }
                                                                                              inverse={false}
                                                                                              listItem={false}
                                                                                              mask={null}
                                                                                              pull={null}
                                                                                              pulse={false}
                                                                                              rotation={null}
                                                                                              size="1x"
                                                                                              spin={false}
                                                                                              style={Object {}}
                                                                                              symbol={false}
                                                                                              title=""
                                                                                              transform={null}
                                                                                            >
                                                                                              <svg
                                                                                                aria-hidden="true"
                                                                                                className="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                                                                                                data-icon="question-circle"
                                                                                                data-prefix="fas"
                                                                                                focusable="false"
                                                                                                role="img"
                                                                                                style={Object {}}
                                                                                                viewBox="0 0 512 512"
                                                                                                xmlns="http://www.w3.org/2000/svg"
                                                                                              >
                                                                                                <path
                                                                                                  d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                                                                  fill="currentColor"
                                                                                                  style={Object {}}
                                                                                                />
                                                                                              </svg>
                                                                                            </FontAwesomeIcon>
                                                                                            <Overlay
                                                                                              animation={[Function]}
                                                                                              placement="right"
                                                                                              rootClose={false}
                                                                                              show={false}
                                                                                              target={
                                                                                                <span
                                                                                                  class="label-help-target"
                                                                                                >
                                                                                                  <svg
                                                                                                    aria-hidden="true"
                                                                                                    class="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                                                                                                    data-icon="question-circle"
                                                                                                    data-prefix="fas"
                                                                                                    focusable="false"
                                                                                                    role="img"
                                                                                                    viewBox="0 0 512 512"
                                                                                                    xmlns="http://www.w3.org/2000/svg"
                                                                                                  >
                                                                                                    <path
                                                                                                      d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                                                                      fill="currentColor"
                                                                                                    />
                                                                                                  </svg>
                                                                                                </span>
                                                                                              }
                                                                                            >
                                                                                              <Overlay
                                                                                                placement="right"
                                                                                                rootClose={false}
                                                                                                show={false}
                                                                                                target={
                                                                                                  <span
                                                                                                    class="label-help-target"
                                                                                                  >
                                                                                                    <svg
                                                                                                      aria-hidden="true"
                                                                                                      class="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                                                                                                      data-icon="question-circle"
                                                                                                      data-prefix="fas"
                                                                                                      focusable="false"
                                                                                                      role="img"
                                                                                                      viewBox="0 0 512 512"
                                                                                                      xmlns="http://www.w3.org/2000/svg"
                                                                                                    >
                                                                                                      <path
                                                                                                        d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                                                                        fill="currentColor"
                                                                                                      />
                                                                                                    </svg>
                                                                                                  </span>
                                                                                                }
                                                                                                transition={[Function]}
                                                                                              />
                                                                                            </Overlay>
                                                                                          </span>
                                                                                        </LabelHelpTip>
                                                                                      </div>
                                                                                      <FormControl
                                                                                        bsClass="form-control"
                                                                                        componentClass="input"
                                                                                        disabled={false}
                                                                                        id="domainpropertiesrow-importAliases-1-2"
                                                                                        name="domainpropertiesrow-importAliases"
                                                                                        onChange={[Function]}
                                                                                        type="text"
                                                                                        value=""
                                                                                      >
                                                                                        <input
                                                                                          className="form-control"
                                                                                          disabled={false}
                                                                                          id="domainpropertiesrow-importAliases-1-2"
                                                                                          name="domainpropertiesrow-importAliases"
                                                                                          onChange={[Function]}
                                                                                          type="text"
                                                                                          value=""
                                                                                        />
                                                                                      </FormControl>
                                                                                    </div>
                                                                                  </Col>
                                                                                  <Col
                                                                                    bsClass="col"
                                                                                    componentClass="div"
                                                                                    xs={4}
                                                                                  >
                                                                                    <div
                                                                                      className="col-xs-4"
                                                                                    >
                                                                                      <div
                                                                                        className="domain-field-label"
                                                                                      >
                                                                                        URL
                                                                                        <LabelHelpTip
                                                                                          body={[Function]}
                                                                                          customStyle={Object {}}
                                                                                          id="tooltip"
                                                                                          size="1x"
                                                                                          title="URL"
                                                                                        >
                                                                                          <span
                                                                                            className="label-help-target"
                                                                                            onMouseOut={[Function]}
                                                                                            onMouseOver={[Function]}
                                                                                          >
                                                                                            <FontAwesomeIcon
                                                                                              border={false}
                                                                                              className="label-help-icon"
                                                                                              fixedWidth={false}
                                                                                              flip={null}
                                                                                              icon={
                                                                                                Object {
                                                                                                  "icon": Array [
                                                                                                    512,
                                                                                                    512,
                                                                                                    Array [],
                                                                                                    "f059",
                                                                                                    "M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z",
                                                                                                  ],
                                                                                                  "iconName": "question-circle",
                                                                                                  "prefix": "fas",
                                                                                                }
                                                                                              }
                                                                                              inverse={false}
                                                                                              listItem={false}
                                                                                              mask={null}
                                                                                              pull={null}
                                                                                              pulse={false}
                                                                                              rotation={null}
                                                                                              size="1x"
                                                                                              spin={false}
                                                                                              style={Object {}}
                                                                                              symbol={false}
                                                                                              title=""
                                                                                              transform={null}
                                                                                            >
                                                                                              <svg
                                                                                                aria-hidden="true"
                                                                                                className="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                                                                                                data-icon="question-circle"
                                                                                                data-prefix="fas"
                                                                                                focusable="false"
                                                                                                role="img"
                                                                                                style={Object {}}
                                                                                                viewBox="0 0 512 512"
                                                                                                xmlns="http://www.w3.org/2000/svg"
                                                                                              >
                                                                                                <path
                                                                                                  d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                                                                  fill="currentColor"
                                                                                                  style={Object {}}
                                                                                                />
                                                                                              </svg>
                                                                                            </FontAwesomeIcon>
                                                                                            <Overlay
                                                                                              animation={[Function]}
                                                                                              placement="right"
                                                                                              rootClose={false}
                                                                                              show={false}
                                                                                              target={
                                                                                                <span
                                                                                                  class="label-help-target"
                                                                                                >
                                                                                                  <svg
                                                                                                    aria-hidden="true"
                                                                                                    class="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                                                                                                    data-icon="question-circle"
                                                                                                    data-prefix="fas"
                                                                                                    focusable="false"
                                                                                                    role="img"
                                                                                                    viewBox="0 0 512 512"
                                                                                                    xmlns="http://www.w3.org/2000/svg"
                                                                                                  >
                                                                                                    <path
                                                                                                      d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                                                                      fill="currentColor"
                                                                                                    />
                                                                                                  </svg>
                                                                                                </span>
                                                                                              }
                                                                                            >
                                                                                              <Overlay
                                                                                                placement="right"
                                                                                                rootClose={false}
                                                                                                show={false}
                                                                                                target={
                                                                                                  <span
                                                                                                    class="label-help-target"
                                                                                                  >
                                                                                                    <svg
                                                                                                      aria-hidden="true"
                                                                                                      class="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                                                                                                      data-icon="question-circle"
                                                                                                      data-prefix="fas"
                                                                                                      focusable="false"
                                                                                                      role="img"
                                                                                                      viewBox="0 0 512 512"
                                                                                                      xmlns="http://www.w3.org/2000/svg"
                                                                                                    >
                                                                                                      <path
                                                                                                        d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                                                                        fill="currentColor"
                                                                                                      />
                                                                                                    </svg>
                                                                                                  </span>
                                                                                                }
                                                                                                transition={[Function]}
                                                                                              />
                                                                                            </Overlay>
                                                                                          </span>
                                                                                        </LabelHelpTip>
                                                                                      </div>
                                                                                      <FormControl
                                                                                        bsClass="form-control"
                                                                                        componentClass="input"
                                                                                        disabled={false}
                                                                                        id="domainpropertiesrow-URL-1-2"
                                                                                        name="domainpropertiesrow-URL"
                                                                                        onChange={[Function]}
                                                                                        type="text"
                                                                                        value=""
                                                                                      >
                                                                                        <input
                                                                                          className="form-control"
                                                                                          disabled={false}
                                                                                          id="domainpropertiesrow-URL-1-2"
                                                                                          name="domainpropertiesrow-URL"
                                                                                          onChange={[Function]}
                                                                                          type="text"
                                                                                          value=""
                                                                                        />
                                                                                      </FormControl>
                                                                                    </div>
                                                                                  </Col>
                                                                                </div>
                                                                              </div>
                                                                            </Row>
                                                                          </div>
                                                                        </NameAndLinkingOptions>
                                                                      </div>
                                                                    </Col>
                                                                    <Col
                                                                      bsClass="col"
                                                                      componentClass="div"
                                                                      xs={12}
                                                                    >
                                                                      <div
                                                                        className="col-xs-12"
                                                                      >
                                                                        <ConditionalFormattingAndValidation
                                                                          domainFormDisplayOptions={
                                                                            Object {
                                                                              "isDragDisabled": false,
                                                                              "phiLevelDisabled": false,
                                                                              "showAddFieldsButton": true,
                                                                              "showRequired": true,
                                                                              "showTextOptions": true,
                                                                              "showValidators": true,
                                                                            }
                                                                          }
                                                                          domainIndex={1}
                                                                          field={
                                                                            Immutable.Record {
                                                                              "conceptURI": undefined,
                                                                              "conditionalFormats": Immutable.List [],
                                                                              "defaultScale": undefined,
                                                                              "defaultValueType": undefined,
                                                                              "defaultValue": undefined,
                                                                              "defaultDisplayValue": undefined,
                                                                              "description": undefined,
                                                                              "dimension": undefined,
                                                                              "excludeFromShifting": false,
                                                                              "format": undefined,
                                                                              "hidden": false,
                                                                              "importAliases": undefined,
                                                                              "label": undefined,
                                                                              "lookupContainer": undefined,
                                                                              "lookupQuery": undefined,
                                                                              "lookupSchema": undefined,
                                                                              "lookupValidator": undefined,
                                                                              "measure": undefined,
                                                                              "mvEnabled": false,
                                                                              "name": "field3",
                                                                              "PHI": undefined,
                                                                              "primaryKey": undefined,
                                                                              "propertyId": undefined,
                                                                              "propertyURI": undefined,
                                                                              "propertyValidators": Immutable.List [],
                                                                              "rangeValidators": Immutable.List [],
                                                                              "rangeURI": "xsd:dateTime",
                                                                              "regexValidators": Immutable.List [],
                                                                              "recommendedVariable": false,
                                                                              "required": false,
                                                                              "scale": undefined,
                                                                              "URL": undefined,
                                                                              "shownInDetailsView": true,
                                                                              "shownInInsertView": true,
                                                                              "shownInUpdateView": true,
                                                                              "visible": true,
                                                                              "dataType": Immutable.Record {
                                                                                "conceptURI": undefined,
                                                                                "display": "Date Time",
                                                                                "name": "dateTime",
                                                                                "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                                                                                "alternateRangeURI": "xsd:dateTime",
                                                                                "shortDisplay": undefined,
                                                                                "lookupSchema": undefined,
                                                                                "lookupQuery": undefined,
                                                                              },
                                                                              "lookupQueryValue": undefined,
                                                                              "lookupType": Immutable.Record {
                                                                                "conceptURI": undefined,
                                                                                "display": "Lookup",
                                                                                "name": "lookup",
                                                                                "rangeURI": "xsd:dateTime",
                                                                                "alternateRangeURI": undefined,
                                                                                "shortDisplay": undefined,
                                                                                "lookupSchema": undefined,
                                                                                "lookupQuery": undefined,
                                                                              },
                                                                              "original": Object {
                                                                                "conceptURI": undefined,
                                                                                "dataType": Immutable.Record {
                                                                                  "conceptURI": undefined,
                                                                                  "display": "Date Time",
                                                                                  "name": "dateTime",
                                                                                  "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                                                                                  "alternateRangeURI": "xsd:dateTime",
                                                                                  "shortDisplay": undefined,
                                                                                  "lookupSchema": undefined,
                                                                                  "lookupQuery": undefined,
                                                                                },
                                                                                "rangeURI": undefined,
                                                                              },
                                                                              "updatedField": false,
                                                                              "isPrimaryKey": false,
                                                                              "lockType": "NotLocked",
                                                                              "wrappedColumnName": undefined,
                                                                            }
                                                                          }
                                                                          hideConditionalFormatting={false}
                                                                          index={2}
                                                                          onChange={[Function]}
                                                                          showingModal={[Function]}
                                                                          successBsStyle="success"
                                                                        >
                                                                          <div>
                                                                            <Row
                                                                              bsClass="row"
                                                                              className="domain-row-expanded"
                                                                              componentClass="div"
                                                                            >
                                                                              <div
                                                                                className="domain-row-expanded row"
                                                                              >
                                                                                <Col
                                                                                  bsClass="col"
                                                                                  componentClass="div"
                                                                                  xs={12}
                                                                                >
                                                                                  <div
                                                                                    className="col-xs-12"
                                                                                  >
                                                                                    <div
                                                                                      className="domain-field-section-heading domain-field-section-hdr"
                                                                                    >
                                                                                      Conditional Formatting and Validation Options
                                                                                    </div>
                                                                                  </div>
                                                                                </Col>
                                                                              </div>
                                                                            </Row>
                                                                            <Row
                                                                              bsClass="row"
                                                                              className="domain-row-expanded"
                                                                              componentClass="div"
                                                                            >
                                                                              <div
                                                                                className="domain-row-expanded row"
                                                                              >
                                                                                <Col
                                                                                  bsClass="col"
                                                                                  componentClass="div"
                                                                                  xs={12}
                                                                                >
                                                                                  <div
                                                                                    className="col-xs-12"
                                                                                  >
                                                                                    <div
                                                                                      className="domain-validation-group"
                                                                                    >
                                                                                      <div
                                                                                        className="domain-field-label domain-no-wrap"
                                                                                      >
                                                                                        Create Conditional Format Criteria
                                                                                        <LabelHelpTip
                                                                                          body={[Function]}
                                                                                          customStyle={Object {}}
                                                                                          id="tooltip"
                                                                                          size="1x"
                                                                                          title="Add Conditional Format"
                                                                                        >
                                                                                          <span
                                                                                            className="label-help-target"
                                                                                            onMouseOut={[Function]}
                                                                                            onMouseOver={[Function]}
                                                                                          >
                                                                                            <FontAwesomeIcon
                                                                                              border={false}
                                                                                              className="label-help-icon"
                                                                                              fixedWidth={false}
                                                                                              flip={null}
                                                                                              icon={
                                                                                                Object {
                                                                                                  "icon": Array [
                                                                                                    512,
                                                                                                    512,
                                                                                                    Array [],
                                                                                                    "f059",
                                                                                                    "M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z",
                                                                                                  ],
                                                                                                  "iconName": "question-circle",
                                                                                                  "prefix": "fas",
                                                                                                }
                                                                                              }
                                                                                              inverse={false}
                                                                                              listItem={false}
                                                                                              mask={null}
                                                                                              pull={null}
                                                                                              pulse={false}
                                                                                              rotation={null}
                                                                                              size="1x"
                                                                                              spin={false}
                                                                                              style={Object {}}
                                                                                              symbol={false}
                                                                                              title=""
                                                                                              transform={null}
                                                                                            >
                                                                                              <svg
                                                                                                aria-hidden="true"
                                                                                                className="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                                                                                                data-icon="question-circle"
                                                                                                data-prefix="fas"
                                                                                                focusable="false"
                                                                                                role="img"
                                                                                                style={Object {}}
                                                                                                viewBox="0 0 512 512"
                                                                                                xmlns="http://www.w3.org/2000/svg"
                                                                                              >
                                                                                                <path
                                                                                                  d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                                                                  fill="currentColor"
                                                                                                  style={Object {}}
                                                                                                />
                                                                                              </svg>
                                                                                            </FontAwesomeIcon>
                                                                                            <Overlay
                                                                                              animation={[Function]}
                                                                                              placement="right"
                                                                                              rootClose={false}
                                                                                              show={false}
                                                                                              target={
                                                                                                <span
                                                                                                  class="label-help-target"
                                                                                                >
                                                                                                  <svg
                                                                                                    aria-hidden="true"
                                                                                                    class="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                                                                                                    data-icon="question-circle"
                                                                                                    data-prefix="fas"
                                                                                                    focusable="false"
                                                                                                    role="img"
                                                                                                    viewBox="0 0 512 512"
                                                                                                    xmlns="http://www.w3.org/2000/svg"
                                                                                                  >
                                                                                                    <path
                                                                                                      d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                                                                      fill="currentColor"
                                                                                                    />
                                                                                                  </svg>
                                                                                                </span>
                                                                                              }
                                                                                            >
                                                                                              <Overlay
                                                                                                placement="right"
                                                                                                rootClose={false}
                                                                                                show={false}
                                                                                                target={
                                                                                                  <span
                                                                                                    class="label-help-target"
                                                                                                  >
                                                                                                    <svg
                                                                                                      aria-hidden="true"
                                                                                                      class="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                                                                                                      data-icon="question-circle"
                                                                                                      data-prefix="fas"
                                                                                                      focusable="false"
                                                                                                      role="img"
                                                                                                      viewBox="0 0 512 512"
                                                                                                      xmlns="http://www.w3.org/2000/svg"
                                                                                                    >
                                                                                                      <path
                                                                                                        d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                                                                        fill="currentColor"
                                                                                                      />
                                                                                                    </svg>
                                                                                                  </span>
                                                                                                }
                                                                                                transition={[Function]}
                                                                                              />
                                                                                            </Overlay>
                                                                                          </span>
                                                                                        </LabelHelpTip>
                                                                                      </div>
                                                                                      <div>
                                                                                        <Button
                                                                                          active={false}
                                                                                          block={false}
                                                                                          bsClass="btn"
                                                                                          bsStyle="default"
                                                                                          className="domain-validation-button"
                                                                                          disabled={false}
                                                                                          id="domainpropertiesrow-conditionalFormat-1-2"
                                                                                          name="domainpropertiesrow-conditionalFormat"
                                                                                          onClick={[Function]}
                                                                                        >
                                                                                          <button
                                                                                            className="domain-validation-button btn btn-default"
                                                                                            disabled={false}
                                                                                            id="domainpropertiesrow-conditionalFormat-1-2"
                                                                                            name="domainpropertiesrow-conditionalFormat"
                                                                                            onClick={[Function]}
                                                                                            type="button"
                                                                                          >
                                                                                            Add Format
                                                                                          </button>
                                                                                        </Button>
                                                                                        <span
                                                                                          className="domain-text-label"
                                                                                        >
                                                                                          None Set
                                                                                        </span>
                                                                                      </div>
                                                                                    </div>
                                                                                    <div
                                                                                      className=""
                                                                                    >
                                                                                      <div
                                                                                        className="domain-field-label domain-no-wrap"
                                                                                      >
                                                                                        Create Range Validator
                                                                                        <LabelHelpTip
                                                                                          body={[Function]}
                                                                                          customStyle={Object {}}
                                                                                          id="tooltip"
                                                                                          size="1x"
                                                                                          title="Add Range Validator"
                                                                                        >
                                                                                          <span
                                                                                            className="label-help-target"
                                                                                            onMouseOut={[Function]}
                                                                                            onMouseOver={[Function]}
                                                                                          >
                                                                                            <FontAwesomeIcon
                                                                                              border={false}
                                                                                              className="label-help-icon"
                                                                                              fixedWidth={false}
                                                                                              flip={null}
                                                                                              icon={
                                                                                                Object {
                                                                                                  "icon": Array [
                                                                                                    512,
                                                                                                    512,
                                                                                                    Array [],
                                                                                                    "f059",
                                                                                                    "M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z",
                                                                                                  ],
                                                                                                  "iconName": "question-circle",
                                                                                                  "prefix": "fas",
                                                                                                }
                                                                                              }
                                                                                              inverse={false}
                                                                                              listItem={false}
                                                                                              mask={null}
                                                                                              pull={null}
                                                                                              pulse={false}
                                                                                              rotation={null}
                                                                                              size="1x"
                                                                                              spin={false}
                                                                                              style={Object {}}
                                                                                              symbol={false}
                                                                                              title=""
                                                                                              transform={null}
                                                                                            >
                                                                                              <svg
                                                                                                aria-hidden="true"
                                                                                                className="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                                                                                                data-icon="question-circle"
                                                                                                data-prefix="fas"
                                                                                                focusable="false"
                                                                                                role="img"
                                                                                                style={Object {}}
                                                                                                viewBox="0 0 512 512"
                                                                                                xmlns="http://www.w3.org/2000/svg"
                                                                                              >
                                                                                                <path
                                                                                                  d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                                                                  fill="currentColor"
                                                                                                  style={Object {}}
                                                                                                />
                                                                                              </svg>
                                                                                            </FontAwesomeIcon>
                                                                                            <Overlay
                                                                                              animation={[Function]}
                                                                                              placement="right"
                                                                                              rootClose={false}
                                                                                              show={false}
                                                                                              target={
                                                                                                <span
                                                                                                  class="label-help-target"
                                                                                                >
                                                                                                  <svg
                                                                                                    aria-hidden="true"
                                                                                                    class="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                                                                                                    data-icon="question-circle"
                                                                                                    data-prefix="fas"
                                                                                                    focusable="false"
                                                                                                    role="img"
                                                                                                    viewBox="0 0 512 512"
                                                                                                    xmlns="http://www.w3.org/2000/svg"
                                                                                                  >
                                                                                                    <path
                                                                                                      d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                                                                      fill="currentColor"
                                                                                                    />
                                                                                                  </svg>
                                                                                                </span>
                                                                                              }
                                                                                            >
                                                                                              <Overlay
                                                                                                placement="right"
                                                                                                rootClose={false}
                                                                                                show={false}
                                                                                                target={
                                                                                                  <span
                                                                                                    class="label-help-target"
                                                                                                  >
                                                                                                    <svg
                                                                                                      aria-hidden="true"
                                                                                                      class="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                                                                                                      data-icon="question-circle"
                                                                                                      data-prefix="fas"
                                                                                                      focusable="false"
                                                                                                      role="img"
                                                                                                      viewBox="0 0 512 512"
                                                                                                      xmlns="http://www.w3.org/2000/svg"
                                                                                                    >
                                                                                                      <path
                                                                                                        d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                                                                        fill="currentColor"
                                                                                                      />
                                                                                                    </svg>
                                                                                                  </span>
                                                                                                }
                                                                                                transition={[Function]}
                                                                                              />
                                                                                            </Overlay>
                                                                                          </span>
                                                                                        </LabelHelpTip>
                                                                                      </div>
                                                                                      <div>
                                                                                        <Button
                                                                                          active={false}
                                                                                          block={false}
                                                                                          bsClass="btn"
                                                                                          bsStyle="default"
                                                                                          className="domain-validation-button"
                                                                                          disabled={false}
                                                                                          id="domainpropertiesrow-rangeValidator-1-2"
                                                                                          name="domainpropertiesrow-rangeValidator"
                                                                                          onClick={[Function]}
                                                                                        >
                                                                                          <button
                                                                                            className="domain-validation-button btn btn-default"
                                                                                            disabled={false}
                                                                                            id="domainpropertiesrow-rangeValidator-1-2"
                                                                                            name="domainpropertiesrow-rangeValidator"
                                                                                            onClick={[Function]}
                                                                                            type="button"
                                                                                          >
                                                                                            Add Range
                                                                                          </button>
                                                                                        </Button>
                                                                                        <span
                                                                                          className="domain-text-label"
                                                                                        >
                                                                                          None Set
                                                                                        </span>
                                                                                      </div>
                                                                                    </div>
                                                                                  </div>
                                                                                </Col>
                                                                              </div>
                                                                            </Row>
                                                                          </div>
                                                                        </ConditionalFormattingAndValidation>
                                                                      </div>
                                                                    </Col>
                                                                  </div>
                                                                </div>
                                                              </DomainRowExpandedOptions>
                                                            </div>
                                                          </Transition>
                                                        </Collapse>
                                                      </div>
                                                    </Draggable>
                                                  </ConnectFunction>
                                                </DomainRow>
                                                <AnimateInOut
                                                  on={null}
                                                  shouldAnimate={true}
                                                />
                                              </form>
                                            </Form>
                                          </div>
                                        </Droppable>
                                      </ConnectFunction>
                                    </div>
                                  </Container>
                                </Provider>
                              </App>
                            </ErrorBoundary>
                          </DragDropContext>
                          <Row
                            bsClass="row"
                            className="domain-add-field-row"
                            componentClass="div"
                          >
                            <div
                              className="domain-add-field-row row"
                            >
                              <Col
                                bsClass="col"
                                componentClass="div"
                                xs={12}
                              >
                                <div
                                  className="col-xs-12"
                                >
                                  <AddEntityButton
                                    buttonClass="domain-form-add-btn"
                                    containerClass="form-group"
                                    entity="Field"
                                    helperTitle="More Info"
                                    onClick={[Function]}
                                  >
                                    <div
                                      className="form-group"
                                    >
                                      <div
                                        className="domain-form-add-btn"
                                      >
                                        <span
                                          className="container--action-button btn btn-default"
                                          onClick={[Function]}
                                        >
                                          <i
                                            className="fa fa-plus-circle container--addition-icon"
                                          />
                                           Add 
                                          Field
                                        </span>
                                      </div>
                                    </div>
                                  </AddEntityButton>
                                </div>
                              </Col>
                            </div>
                          </Row>
                        </div>
                      </div>
                    </Transition>
                  </Collapse>
                </PanelCollapse>
              </PanelBody>
            </div>
          </Panel>
        </Uncontrolled(Panel)>
      </DomainFormImpl>
    </LookupProvider>
  </DomainForm>
  <div
    className="domain-form-panel domain-designer-buttons"
  >
    <Button
      active={false}
      block={false}
      bsClass="btn"
      bsStyle="default"
      disabled={false}
      onClick={[Function]}
    >
      <button
        className="btn btn-default"
        disabled={false}
        onClick={[Function]}
        type="button"
      >
        Cancel
      </button>
    </Button>
    <Button
      active={false}
      block={false}
      bsClass="btn"
      bsStyle="success"
      className="pull-right"
      disabled={false}
      onClick={[Function]}
    >
      <button
        className="pull-right btn btn-success"
        disabled={false}
        onClick={[Function]}
        type="button"
      >
        Save
      </button>
    </Button>
  </div>
</AssayDesignerPanels>
`;

exports[`AssayDesignerPanels initModel 1`] = `
<AssayDesignerPanels
  initModel={
    Immutable.Record {
      "allowBackgroundUpload": true,
      "allowEditableResults": true,
      "allowQCStates": false,
      "allowSpacesInPath": false,
      "allowTransformationScript": false,
      "allowPlateMetadata": false,
      "autoCopyTargetContainer": undefined,
      "autoCopyTargetContainerId": undefined,
      "availableDetectionMethods": undefined,
      "availableMetadataInputFormats": undefined,
      "availablePlateTemplates": undefined,
      "backgroundUpload": true,
      "description": "My assay protocol for you all to use.",
      "domains": Immutable.List [
        Immutable.Record {
          "name": "Batch Fields",
          "container": undefined,
          "description": undefined,
          "domainURI": undefined,
          "domainId": null,
          "allowFileLinkProperties": true,
          "allowAttachmentProperties": true,
          "allowFlagProperties": true,
          "showDefaultValueSettings": false,
          "defaultDefaultValueType": undefined,
          "defaultValueOptions": Immutable.List [],
          "fields": Immutable.List [],
          "indices": Immutable.List [],
          "domainException": undefined,
          "mandatoryFieldNames": Immutable.List [],
          "reservedFieldNames": Immutable.List [],
          "newDesignFields": undefined,
          "instructions": undefined,
        },
        Immutable.Record {
          "name": "Sample Fields",
          "container": undefined,
          "description": undefined,
          "domainURI": undefined,
          "domainId": null,
          "allowFileLinkProperties": true,
          "allowAttachmentProperties": true,
          "allowFlagProperties": true,
          "showDefaultValueSettings": false,
          "defaultDefaultValueType": undefined,
          "defaultValueOptions": Immutable.List [],
          "fields": Immutable.List [
            Immutable.Record {
              "conceptURI": undefined,
              "conditionalFormats": Immutable.List [],
              "defaultScale": undefined,
              "defaultValueType": undefined,
              "defaultValue": undefined,
              "defaultDisplayValue": undefined,
              "description": undefined,
              "dimension": undefined,
              "excludeFromShifting": false,
              "format": undefined,
              "hidden": false,
              "importAliases": undefined,
              "label": undefined,
              "lookupContainer": undefined,
              "lookupQuery": undefined,
              "lookupSchema": undefined,
              "lookupValidator": undefined,
              "measure": undefined,
              "mvEnabled": false,
              "name": "field1",
              "PHI": undefined,
              "primaryKey": undefined,
              "propertyId": undefined,
              "propertyURI": undefined,
              "propertyValidators": Immutable.List [],
              "rangeValidators": Immutable.List [],
              "rangeURI": "xsd:string",
              "regexValidators": Immutable.List [],
              "recommendedVariable": false,
              "required": false,
              "scale": undefined,
              "URL": undefined,
              "shownInDetailsView": true,
              "shownInInsertView": true,
              "shownInUpdateView": true,
              "visible": true,
              "dataType": Immutable.Record {
                "conceptURI": undefined,
                "display": "Text",
                "name": "string",
                "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                "alternateRangeURI": "xsd:string",
                "shortDisplay": "String",
                "lookupSchema": undefined,
                "lookupQuery": undefined,
              },
              "lookupQueryValue": undefined,
              "lookupType": Immutable.Record {
                "conceptURI": undefined,
                "display": "Lookup",
                "name": "lookup",
                "rangeURI": "xsd:string",
                "alternateRangeURI": undefined,
                "shortDisplay": undefined,
                "lookupSchema": undefined,
                "lookupQuery": undefined,
              },
              "original": Object {
                "conceptURI": undefined,
                "dataType": Immutable.Record {
                  "conceptURI": undefined,
                  "display": "Text",
                  "name": "string",
                  "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                  "alternateRangeURI": "xsd:string",
                  "shortDisplay": "String",
                  "lookupSchema": undefined,
                  "lookupQuery": undefined,
                },
                "rangeURI": undefined,
              },
              "updatedField": false,
              "isPrimaryKey": false,
              "lockType": "NotLocked",
              "wrappedColumnName": undefined,
            },
            Immutable.Record {
              "conceptURI": undefined,
              "conditionalFormats": Immutable.List [],
              "defaultScale": undefined,
              "defaultValueType": undefined,
              "defaultValue": undefined,
              "defaultDisplayValue": undefined,
              "description": undefined,
              "dimension": undefined,
              "excludeFromShifting": false,
              "format": undefined,
              "hidden": false,
              "importAliases": undefined,
              "label": undefined,
              "lookupContainer": undefined,
              "lookupQuery": undefined,
              "lookupSchema": undefined,
              "lookupValidator": undefined,
              "measure": undefined,
              "mvEnabled": false,
              "name": "field2",
              "PHI": undefined,
              "primaryKey": undefined,
              "propertyId": undefined,
              "propertyURI": undefined,
              "propertyValidators": Immutable.List [],
              "rangeValidators": Immutable.List [],
              "rangeURI": "xsd:int",
              "regexValidators": Immutable.List [],
              "recommendedVariable": false,
              "required": false,
              "scale": undefined,
              "URL": undefined,
              "shownInDetailsView": true,
              "shownInInsertView": true,
              "shownInUpdateView": true,
              "visible": true,
              "dataType": Immutable.Record {
                "conceptURI": undefined,
                "display": "Integer",
                "name": "int",
                "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                "alternateRangeURI": "xsd:int",
                "shortDisplay": undefined,
                "lookupSchema": undefined,
                "lookupQuery": undefined,
              },
              "lookupQueryValue": undefined,
              "lookupType": Immutable.Record {
                "conceptURI": undefined,
                "display": "Lookup",
                "name": "lookup",
                "rangeURI": "xsd:int",
                "alternateRangeURI": undefined,
                "shortDisplay": undefined,
                "lookupSchema": undefined,
                "lookupQuery": undefined,
              },
              "original": Object {
                "conceptURI": undefined,
                "dataType": Immutable.Record {
                  "conceptURI": undefined,
                  "display": "Integer",
                  "name": "int",
                  "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                  "alternateRangeURI": "xsd:int",
                  "shortDisplay": undefined,
                  "lookupSchema": undefined,
                  "lookupQuery": undefined,
                },
                "rangeURI": undefined,
              },
              "updatedField": false,
              "isPrimaryKey": false,
              "lockType": "NotLocked",
              "wrappedColumnName": undefined,
            },
            Immutable.Record {
              "conceptURI": undefined,
              "conditionalFormats": Immutable.List [],
              "defaultScale": undefined,
              "defaultValueType": undefined,
              "defaultValue": undefined,
              "defaultDisplayValue": undefined,
              "description": undefined,
              "dimension": undefined,
              "excludeFromShifting": false,
              "format": undefined,
              "hidden": false,
              "importAliases": undefined,
              "label": undefined,
              "lookupContainer": undefined,
              "lookupQuery": undefined,
              "lookupSchema": undefined,
              "lookupValidator": undefined,
              "measure": undefined,
              "mvEnabled": false,
              "name": "field3",
              "PHI": undefined,
              "primaryKey": undefined,
              "propertyId": undefined,
              "propertyURI": undefined,
              "propertyValidators": Immutable.List [],
              "rangeValidators": Immutable.List [],
              "rangeURI": "xsd:dateTime",
              "regexValidators": Immutable.List [],
              "recommendedVariable": false,
              "required": false,
              "scale": undefined,
              "URL": undefined,
              "shownInDetailsView": true,
              "shownInInsertView": true,
              "shownInUpdateView": true,
              "visible": true,
              "dataType": Immutable.Record {
                "conceptURI": undefined,
                "display": "Date Time",
                "name": "dateTime",
                "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                "alternateRangeURI": "xsd:dateTime",
                "shortDisplay": undefined,
                "lookupSchema": undefined,
                "lookupQuery": undefined,
              },
              "lookupQueryValue": undefined,
              "lookupType": Immutable.Record {
                "conceptURI": undefined,
                "display": "Lookup",
                "name": "lookup",
                "rangeURI": "xsd:dateTime",
                "alternateRangeURI": undefined,
                "shortDisplay": undefined,
                "lookupSchema": undefined,
                "lookupQuery": undefined,
              },
              "original": Object {
                "conceptURI": undefined,
                "dataType": Immutable.Record {
                  "conceptURI": undefined,
                  "display": "Date Time",
                  "name": "dateTime",
                  "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                  "alternateRangeURI": "xsd:dateTime",
                  "shortDisplay": undefined,
                  "lookupSchema": undefined,
                  "lookupQuery": undefined,
                },
                "rangeURI": undefined,
              },
              "updatedField": false,
              "isPrimaryKey": false,
              "lockType": "NotLocked",
              "wrappedColumnName": undefined,
            },
          ],
          "indices": Immutable.List [],
          "domainException": undefined,
          "mandatoryFieldNames": Immutable.List [],
          "reservedFieldNames": Immutable.List [],
          "newDesignFields": undefined,
          "instructions": undefined,
        },
      ],
      "editableResults": true,
      "editableRuns": true,
      "exception": undefined,
      "metadataInputFormatHelp": undefined,
      "moduleTransformScripts": undefined,
      "name": "Test Assay Protocol",
      "plateMetadata": undefined,
      "protocolId": 1,
      "protocolParameters": undefined,
      "protocolTransformScripts": undefined,
      "providerName": undefined,
      "saveScriptFiles": false,
      "selectedDetectionMethod": undefined,
      "selectedMetadataInputFormat": undefined,
      "selectedPlateTemplate": undefined,
      "qcEnabled": undefined,
    }
  }
  onCancel={[Function]}
  onComplete={[Function]}
>
  <ComponentWithDomainPropertiesPanelCollapse
    controlledCollapse={true}
    initCollapsed={false}
    model={
      Immutable.Record {
        "allowBackgroundUpload": true,
        "allowEditableResults": true,
        "allowQCStates": false,
        "allowSpacesInPath": false,
        "allowTransformationScript": false,
        "allowPlateMetadata": false,
        "autoCopyTargetContainer": undefined,
        "autoCopyTargetContainerId": undefined,
        "availableDetectionMethods": undefined,
        "availableMetadataInputFormats": undefined,
        "availablePlateTemplates": undefined,
        "backgroundUpload": true,
        "description": "My assay protocol for you all to use.",
        "domains": Immutable.List [
          Immutable.Record {
            "name": "Batch Fields",
            "container": undefined,
            "description": undefined,
            "domainURI": undefined,
            "domainId": null,
            "allowFileLinkProperties": true,
            "allowAttachmentProperties": true,
            "allowFlagProperties": true,
            "showDefaultValueSettings": false,
            "defaultDefaultValueType": undefined,
            "defaultValueOptions": Immutable.List [],
            "fields": Immutable.List [],
            "indices": Immutable.List [],
            "domainException": undefined,
            "mandatoryFieldNames": Immutable.List [],
            "reservedFieldNames": Immutable.List [],
            "newDesignFields": undefined,
            "instructions": undefined,
          },
          Immutable.Record {
            "name": "Sample Fields",
            "container": undefined,
            "description": undefined,
            "domainURI": undefined,
            "domainId": null,
            "allowFileLinkProperties": true,
            "allowAttachmentProperties": true,
            "allowFlagProperties": true,
            "showDefaultValueSettings": false,
            "defaultDefaultValueType": undefined,
            "defaultValueOptions": Immutable.List [],
            "fields": Immutable.List [
              Immutable.Record {
                "conceptURI": undefined,
                "conditionalFormats": Immutable.List [],
                "defaultScale": undefined,
                "defaultValueType": undefined,
                "defaultValue": undefined,
                "defaultDisplayValue": undefined,
                "description": undefined,
                "dimension": undefined,
                "excludeFromShifting": false,
                "format": undefined,
                "hidden": false,
                "importAliases": undefined,
                "label": undefined,
                "lookupContainer": undefined,
                "lookupQuery": undefined,
                "lookupSchema": undefined,
                "lookupValidator": undefined,
                "measure": undefined,
                "mvEnabled": false,
                "name": "field1",
                "PHI": undefined,
                "primaryKey": undefined,
                "propertyId": undefined,
                "propertyURI": undefined,
                "propertyValidators": Immutable.List [],
                "rangeValidators": Immutable.List [],
                "rangeURI": "xsd:string",
                "regexValidators": Immutable.List [],
                "recommendedVariable": false,
                "required": false,
                "scale": undefined,
                "URL": undefined,
                "shownInDetailsView": true,
                "shownInInsertView": true,
                "shownInUpdateView": true,
                "visible": true,
                "dataType": Immutable.Record {
                  "conceptURI": undefined,
                  "display": "Text",
                  "name": "string",
                  "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                  "alternateRangeURI": "xsd:string",
                  "shortDisplay": "String",
                  "lookupSchema": undefined,
                  "lookupQuery": undefined,
                },
                "lookupQueryValue": undefined,
                "lookupType": Immutable.Record {
                  "conceptURI": undefined,
                  "display": "Lookup",
                  "name": "lookup",
                  "rangeURI": "xsd:string",
                  "alternateRangeURI": undefined,
                  "shortDisplay": undefined,
                  "lookupSchema": undefined,
                  "lookupQuery": undefined,
                },
                "original": Object {
                  "conceptURI": undefined,
                  "dataType": Immutable.Record {
                    "conceptURI": undefined,
                    "display": "Text",
                    "name": "string",
                    "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                    "alternateRangeURI": "xsd:string",
                    "shortDisplay": "String",
                    "lookupSchema": undefined,
                    "lookupQuery": undefined,
                  },
                  "rangeURI": undefined,
                },
                "updatedField": false,
                "isPrimaryKey": false,
                "lockType": "NotLocked",
                "wrappedColumnName": undefined,
              },
              Immutable.Record {
                "conceptURI": undefined,
                "conditionalFormats": Immutable.List [],
                "defaultScale": undefined,
                "defaultValueType": undefined,
                "defaultValue": undefined,
                "defaultDisplayValue": undefined,
                "description": undefined,
                "dimension": undefined,
                "excludeFromShifting": false,
                "format": undefined,
                "hidden": false,
                "importAliases": undefined,
                "label": undefined,
                "lookupContainer": undefined,
                "lookupQuery": undefined,
                "lookupSchema": undefined,
                "lookupValidator": undefined,
                "measure": undefined,
                "mvEnabled": false,
                "name": "field2",
                "PHI": undefined,
                "primaryKey": undefined,
                "propertyId": undefined,
                "propertyURI": undefined,
                "propertyValidators": Immutable.List [],
                "rangeValidators": Immutable.List [],
                "rangeURI": "xsd:int",
                "regexValidators": Immutable.List [],
                "recommendedVariable": false,
                "required": false,
                "scale": undefined,
                "URL": undefined,
                "shownInDetailsView": true,
                "shownInInsertView": true,
                "shownInUpdateView": true,
                "visible": true,
                "dataType": Immutable.Record {
                  "conceptURI": undefined,
                  "display": "Integer",
                  "name": "int",
                  "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                  "alternateRangeURI": "xsd:int",
                  "shortDisplay": undefined,
                  "lookupSchema": undefined,
                  "lookupQuery": undefined,
                },
                "lookupQueryValue": undefined,
                "lookupType": Immutable.Record {
                  "conceptURI": undefined,
                  "display": "Lookup",
                  "name": "lookup",
                  "rangeURI": "xsd:int",
                  "alternateRangeURI": undefined,
                  "shortDisplay": undefined,
                  "lookupSchema": undefined,
                  "lookupQuery": undefined,
                },
                "original": Object {
                  "conceptURI": undefined,
                  "dataType": Immutable.Record {
                    "conceptURI": undefined,
                    "display": "Integer",
                    "name": "int",
                    "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                    "alternateRangeURI": "xsd:int",
                    "shortDisplay": undefined,
                    "lookupSchema": undefined,
                    "lookupQuery": undefined,
                  },
                  "rangeURI": undefined,
                },
                "updatedField": false,
                "isPrimaryKey": false,
                "lockType": "NotLocked",
                "wrappedColumnName": undefined,
              },
              Immutable.Record {
                "conceptURI": undefined,
                "conditionalFormats": Immutable.List [],
                "defaultScale": undefined,
                "defaultValueType": undefined,
                "defaultValue": undefined,
                "defaultDisplayValue": undefined,
                "description": undefined,
                "dimension": undefined,
                "excludeFromShifting": false,
                "format": undefined,
                "hidden": false,
                "importAliases": undefined,
                "label": undefined,
                "lookupContainer": undefined,
                "lookupQuery": undefined,
                "lookupSchema": undefined,
                "lookupValidator": undefined,
                "measure": undefined,
                "mvEnabled": false,
                "name": "field3",
                "PHI": undefined,
                "primaryKey": undefined,
                "propertyId": undefined,
                "propertyURI": undefined,
                "propertyValidators": Immutable.List [],
                "rangeValidators": Immutable.List [],
                "rangeURI": "xsd:dateTime",
                "regexValidators": Immutable.List [],
                "recommendedVariable": false,
                "required": false,
                "scale": undefined,
                "URL": undefined,
                "shownInDetailsView": true,
                "shownInInsertView": true,
                "shownInUpdateView": true,
                "visible": true,
                "dataType": Immutable.Record {
                  "conceptURI": undefined,
                  "display": "Date Time",
                  "name": "dateTime",
                  "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                  "alternateRangeURI": "xsd:dateTime",
                  "shortDisplay": undefined,
                  "lookupSchema": undefined,
                  "lookupQuery": undefined,
                },
                "lookupQueryValue": undefined,
                "lookupType": Immutable.Record {
                  "conceptURI": undefined,
                  "display": "Lookup",
                  "name": "lookup",
                  "rangeURI": "xsd:dateTime",
                  "alternateRangeURI": undefined,
                  "shortDisplay": undefined,
                  "lookupSchema": undefined,
                  "lookupQuery": undefined,
                },
                "original": Object {
                  "conceptURI": undefined,
                  "dataType": Immutable.Record {
                    "conceptURI": undefined,
                    "display": "Date Time",
                    "name": "dateTime",
                    "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                    "alternateRangeURI": "xsd:dateTime",
                    "shortDisplay": undefined,
                    "lookupSchema": undefined,
                    "lookupQuery": undefined,
                  },
                  "rangeURI": undefined,
                },
                "updatedField": false,
                "isPrimaryKey": false,
                "lockType": "NotLocked",
                "wrappedColumnName": undefined,
              },
            ],
            "indices": Immutable.List [],
            "domainException": undefined,
            "mandatoryFieldNames": Immutable.List [],
            "reservedFieldNames": Immutable.List [],
            "newDesignFields": undefined,
            "instructions": undefined,
          },
        ],
        "editableResults": true,
        "editableRuns": true,
        "exception": undefined,
        "metadataInputFormatHelp": undefined,
        "moduleTransformScripts": undefined,
        "name": "Test Assay Protocol",
        "plateMetadata": undefined,
        "protocolId": 1,
        "protocolParameters": undefined,
        "protocolTransformScripts": undefined,
        "providerName": undefined,
        "saveScriptFiles": false,
        "selectedDetectionMethod": undefined,
        "selectedMetadataInputFormat": undefined,
        "selectedPlateTemplate": undefined,
        "qcEnabled": undefined,
      }
    }
    onChange={[Function]}
    onToggle={[Function]}
    panelStatus="COMPLETE"
    validate={false}
  >
    <AssayPropertiesPanelImpl
      appPropertiesOnly={false}
      asPanel={true}
      collapsed={false}
      controlledCollapse={true}
      helpTopic="defineAssaySchema"
      model={
        Immutable.Record {
          "allowBackgroundUpload": true,
          "allowEditableResults": true,
          "allowQCStates": false,
          "allowSpacesInPath": false,
          "allowTransformationScript": false,
          "allowPlateMetadata": false,
          "autoCopyTargetContainer": undefined,
          "autoCopyTargetContainerId": undefined,
          "availableDetectionMethods": undefined,
          "availableMetadataInputFormats": undefined,
          "availablePlateTemplates": undefined,
          "backgroundUpload": true,
          "description": "My assay protocol for you all to use.",
          "domains": Immutable.List [
            Immutable.Record {
              "name": "Batch Fields",
              "container": undefined,
              "description": undefined,
              "domainURI": undefined,
              "domainId": null,
              "allowFileLinkProperties": true,
              "allowAttachmentProperties": true,
              "allowFlagProperties": true,
              "showDefaultValueSettings": false,
              "defaultDefaultValueType": undefined,
              "defaultValueOptions": Immutable.List [],
              "fields": Immutable.List [],
              "indices": Immutable.List [],
              "domainException": undefined,
              "mandatoryFieldNames": Immutable.List [],
              "reservedFieldNames": Immutable.List [],
              "newDesignFields": undefined,
              "instructions": undefined,
            },
            Immutable.Record {
              "name": "Sample Fields",
              "container": undefined,
              "description": undefined,
              "domainURI": undefined,
              "domainId": null,
              "allowFileLinkProperties": true,
              "allowAttachmentProperties": true,
              "allowFlagProperties": true,
              "showDefaultValueSettings": false,
              "defaultDefaultValueType": undefined,
              "defaultValueOptions": Immutable.List [],
              "fields": Immutable.List [
                Immutable.Record {
                  "conceptURI": undefined,
                  "conditionalFormats": Immutable.List [],
                  "defaultScale": undefined,
                  "defaultValueType": undefined,
                  "defaultValue": undefined,
                  "defaultDisplayValue": undefined,
                  "description": undefined,
                  "dimension": undefined,
                  "excludeFromShifting": false,
                  "format": undefined,
                  "hidden": false,
                  "importAliases": undefined,
                  "label": undefined,
                  "lookupContainer": undefined,
                  "lookupQuery": undefined,
                  "lookupSchema": undefined,
                  "lookupValidator": undefined,
                  "measure": undefined,
                  "mvEnabled": false,
                  "name": "field1",
                  "PHI": undefined,
                  "primaryKey": undefined,
                  "propertyId": undefined,
                  "propertyURI": undefined,
                  "propertyValidators": Immutable.List [],
                  "rangeValidators": Immutable.List [],
                  "rangeURI": "xsd:string",
                  "regexValidators": Immutable.List [],
                  "recommendedVariable": false,
                  "required": false,
                  "scale": undefined,
                  "URL": undefined,
                  "shownInDetailsView": true,
                  "shownInInsertView": true,
                  "shownInUpdateView": true,
                  "visible": true,
                  "dataType": Immutable.Record {
                    "conceptURI": undefined,
                    "display": "Text",
                    "name": "string",
                    "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                    "alternateRangeURI": "xsd:string",
                    "shortDisplay": "String",
                    "lookupSchema": undefined,
                    "lookupQuery": undefined,
                  },
                  "lookupQueryValue": undefined,
                  "lookupType": Immutable.Record {
                    "conceptURI": undefined,
                    "display": "Lookup",
                    "name": "lookup",
                    "rangeURI": "xsd:string",
                    "alternateRangeURI": undefined,
                    "shortDisplay": undefined,
                    "lookupSchema": undefined,
                    "lookupQuery": undefined,
                  },
                  "original": Object {
                    "conceptURI": undefined,
                    "dataType": Immutable.Record {
                      "conceptURI": undefined,
                      "display": "Text",
                      "name": "string",
                      "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                      "alternateRangeURI": "xsd:string",
                      "shortDisplay": "String",
                      "lookupSchema": undefined,
                      "lookupQuery": undefined,
                    },
                    "rangeURI": undefined,
                  },
                  "updatedField": false,
                  "isPrimaryKey": false,
                  "lockType": "NotLocked",
                  "wrappedColumnName": undefined,
                },
                Immutable.Record {
                  "conceptURI": undefined,
                  "conditionalFormats": Immutable.List [],
                  "defaultScale": undefined,
                  "defaultValueType": undefined,
                  "defaultValue": undefined,
                  "defaultDisplayValue": undefined,
                  "description": undefined,
                  "dimension": undefined,
                  "excludeFromShifting": false,
                  "format": undefined,
                  "hidden": false,
                  "importAliases": undefined,
                  "label": undefined,
                  "lookupContainer": undefined,
                  "lookupQuery": undefined,
                  "lookupSchema": undefined,
                  "lookupValidator": undefined,
                  "measure": undefined,
                  "mvEnabled": false,
                  "name": "field2",
                  "PHI": undefined,
                  "primaryKey": undefined,
                  "propertyId": undefined,
                  "propertyURI": undefined,
                  "propertyValidators": Immutable.List [],
                  "rangeValidators": Immutable.List [],
                  "rangeURI": "xsd:int",
                  "regexValidators": Immutable.List [],
                  "recommendedVariable": false,
                  "required": false,
                  "scale": undefined,
                  "URL": undefined,
                  "shownInDetailsView": true,
                  "shownInInsertView": true,
                  "shownInUpdateView": true,
                  "visible": true,
                  "dataType": Immutable.Record {
                    "conceptURI": undefined,
                    "display": "Integer",
                    "name": "int",
                    "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                    "alternateRangeURI": "xsd:int",
                    "shortDisplay": undefined,
                    "lookupSchema": undefined,
                    "lookupQuery": undefined,
                  },
                  "lookupQueryValue": undefined,
                  "lookupType": Immutable.Record {
                    "conceptURI": undefined,
                    "display": "Lookup",
                    "name": "lookup",
                    "rangeURI": "xsd:int",
                    "alternateRangeURI": undefined,
                    "shortDisplay": undefined,
                    "lookupSchema": undefined,
                    "lookupQuery": undefined,
                  },
                  "original": Object {
                    "conceptURI": undefined,
                    "dataType": Immutable.Record {
                      "conceptURI": undefined,
                      "display": "Integer",
                      "name": "int",
                      "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                      "alternateRangeURI": "xsd:int",
                      "shortDisplay": undefined,
                      "lookupSchema": undefined,
                      "lookupQuery": undefined,
                    },
                    "rangeURI": undefined,
                  },
                  "updatedField": false,
                  "isPrimaryKey": false,
                  "lockType": "NotLocked",
                  "wrappedColumnName": undefined,
                },
                Immutable.Record {
                  "conceptURI": undefined,
                  "conditionalFormats": Immutable.List [],
                  "defaultScale": undefined,
                  "defaultValueType": undefined,
                  "defaultValue": undefined,
                  "defaultDisplayValue": undefined,
                  "description": undefined,
                  "dimension": undefined,
                  "excludeFromShifting": false,
                  "format": undefined,
                  "hidden": false,
                  "importAliases": undefined,
                  "label": undefined,
                  "lookupContainer": undefined,
                  "lookupQuery": undefined,
                  "lookupSchema": undefined,
                  "lookupValidator": undefined,
                  "measure": undefined,
                  "mvEnabled": false,
                  "name": "field3",
                  "PHI": undefined,
                  "primaryKey": undefined,
                  "propertyId": undefined,
                  "propertyURI": undefined,
                  "propertyValidators": Immutable.List [],
                  "rangeValidators": Immutable.List [],
                  "rangeURI": "xsd:dateTime",
                  "regexValidators": Immutable.List [],
                  "recommendedVariable": false,
                  "required": false,
                  "scale": undefined,
                  "URL": undefined,
                  "shownInDetailsView": true,
                  "shownInInsertView": true,
                  "shownInUpdateView": true,
                  "visible": true,
                  "dataType": Immutable.Record {
                    "conceptURI": undefined,
                    "display": "Date Time",
                    "name": "dateTime",
                    "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                    "alternateRangeURI": "xsd:dateTime",
                    "shortDisplay": undefined,
                    "lookupSchema": undefined,
                    "lookupQuery": undefined,
                  },
                  "lookupQueryValue": undefined,
                  "lookupType": Immutable.Record {
                    "conceptURI": undefined,
                    "display": "Lookup",
                    "name": "lookup",
                    "rangeURI": "xsd:dateTime",
                    "alternateRangeURI": undefined,
                    "shortDisplay": undefined,
                    "lookupSchema": undefined,
                    "lookupQuery": undefined,
                  },
                  "original": Object {
                    "conceptURI": undefined,
                    "dataType": Immutable.Record {
                      "conceptURI": undefined,
                      "display": "Date Time",
                      "name": "dateTime",
                      "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                      "alternateRangeURI": "xsd:dateTime",
                      "shortDisplay": undefined,
                      "lookupSchema": undefined,
                      "lookupQuery": undefined,
                    },
                    "rangeURI": undefined,
                  },
                  "updatedField": false,
                  "isPrimaryKey": false,
                  "lockType": "NotLocked",
                  "wrappedColumnName": undefined,
                },
              ],
              "indices": Immutable.List [],
              "domainException": undefined,
              "mandatoryFieldNames": Immutable.List [],
              "reservedFieldNames": Immutable.List [],
              "newDesignFields": undefined,
              "instructions": undefined,
            },
          ],
          "editableResults": true,
          "editableRuns": true,
          "exception": undefined,
          "metadataInputFormatHelp": undefined,
          "moduleTransformScripts": undefined,
          "name": "Test Assay Protocol",
          "plateMetadata": undefined,
          "protocolId": 1,
          "protocolParameters": undefined,
          "protocolTransformScripts": undefined,
          "providerName": undefined,
          "saveScriptFiles": false,
          "selectedDetectionMethod": undefined,
          "selectedMetadataInputFormat": undefined,
          "selectedPlateTemplate": undefined,
          "qcEnabled": undefined,
        }
      }
      onChange={[Function]}
      panelStatus="COMPLETE"
      togglePanel={[Function]}
      validate={false}
    >
      <Uncontrolled(Panel)
        className="domain-form-panel domain-panel-no-theme"
        expanded={true}
        onToggle={[Function]}
      >
        <Panel
          bsClass="panel"
          bsStyle="default"
          className="domain-form-panel domain-panel-no-theme"
          expanded={true}
          onToggle={[Function]}
        >
          <div
            className="domain-form-panel domain-panel-no-theme panel panel-default"
          >
            <CollapsiblePanelHeader
              collapsed={false}
              controlledCollapse={true}
              iconHelpMsg="Contains errors or is missing required values."
              id="assay-properties-hdr"
              isValid={true}
              panelStatus="COMPLETE"
              title="Assay Properties"
              titlePrefix="Test Assay Protocol"
              togglePanel={[Function]}
            >
              <PanelHeading
                bsClass="panel"
                className="domain-panel-header domain-heading-collapsible domain-panel-header-expanded domain-panel-header-no-theme"
                componentClass="div"
                id="assay-properties-hdr"
                onClick={[Function]}
              >
                <div
                  className="domain-panel-header domain-heading-collapsible domain-panel-header-expanded domain-panel-header-no-theme panel-heading"
                  id="assay-properties-hdr"
                  onClick={[Function]}
                >
                  <span
                    className="domain-panel-status-icon"
                  >
                    <FontAwesomeIcon
                      border={false}
                      className=""
                      fixedWidth={false}
                      flip={null}
                      icon={
                        Object {
                          "icon": Array [
                            512,
                            512,
                            Array [],
                            "f058",
                            "M504 256c0 136.967-111.033 248-248 248S8 392.967 8 256 119.033 8 256 8s248 111.033 248 248zM227.314 387.314l184-184c6.248-6.248 6.248-16.379 0-22.627l-22.627-22.627c-6.248-6.249-16.379-6.249-22.628 0L216 308.118l-70.059-70.059c-6.248-6.248-16.379-6.248-22.628 0l-22.627 22.627c-6.248 6.248-6.248 16.379 0 22.627l104 104c6.249 6.249 16.379 6.249 22.628.001z",
                          ],
                          "iconName": "check-circle",
                          "prefix": "fas",
                        }
                      }
                      inverse={false}
                      listItem={false}
                      mask={null}
                      pull={null}
                      pulse={false}
                      rotation={null}
                      size={null}
                      spin={false}
                      symbol={false}
                      title=""
                      transform={null}
                    >
                      <svg
                        aria-hidden="true"
                        className="svg-inline--fa fa-check-circle fa-w-16 "
                        data-icon="check-circle"
                        data-prefix="fas"
                        focusable="false"
                        role="img"
                        style={Object {}}
                        viewBox="0 0 512 512"
                        xmlns="http://www.w3.org/2000/svg"
                      >
                        <path
                          d="M504 256c0 136.967-111.033 248-248 248S8 392.967 8 256 119.033 8 256 8s248 111.033 248 248zM227.314 387.314l184-184c6.248-6.248 6.248-16.379 0-22.627l-22.627-22.627c-6.248-6.249-16.379-6.249-22.628 0L216 308.118l-70.059-70.059c-6.248-6.248-16.379-6.248-22.628 0l-22.627 22.627c-6.248 6.248-6.248 16.379 0 22.627l104 104c6.249 6.249 16.379 6.249 22.628.001z"
                          fill="currentColor"
                          style={Object {}}
                        />
                      </svg>
                    </FontAwesomeIcon>
                  </span>
                  <span
                    className="domain-panel-title"
                  >
                    Test Assay Protocol - Assay Properties
                  </span>
                  <span
                    className="pull-right"
                  >
                    <FontAwesomeIcon
                      border={false}
                      className="domain-form-collapse-btn"
                      fixedWidth={false}
                      flip={null}
                      icon={
                        Object {
                          "icon": Array [
                            448,
                            512,
                            Array [],
                            "f146",
                            "M400 32H48C21.5 32 0 53.5 0 80v352c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V80c0-26.5-21.5-48-48-48zM92 296c-6.6 0-12-5.4-12-12v-56c0-6.6 5.4-12 12-12h264c6.6 0 12 5.4 12 12v56c0 6.6-5.4 12-12 12H92z",
                          ],
                          "iconName": "minus-square",
                          "prefix": "fas",
                        }
                      }
                      inverse={false}
                      listItem={false}
                      mask={null}
                      pull={null}
                      pulse={false}
                      rotation={null}
                      size="lg"
                      spin={false}
                      symbol={false}
                      title=""
                      transform={null}
                    >
                      <svg
                        aria-hidden="true"
                        className="svg-inline--fa fa-minus-square fa-w-14 fa-lg domain-form-collapse-btn"
                        data-icon="minus-square"
                        data-prefix="fas"
                        focusable="false"
                        role="img"
                        style={Object {}}
                        viewBox="0 0 448 512"
                        xmlns="http://www.w3.org/2000/svg"
                      >
                        <path
                          d="M400 32H48C21.5 32 0 53.5 0 80v352c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V80c0-26.5-21.5-48-48-48zM92 296c-6.6 0-12-5.4-12-12v-56c0-6.6 5.4-12 12-12h264c6.6 0 12 5.4 12 12v56c0 6.6-5.4 12-12 12H92z"
                          fill="currentColor"
                          style={Object {}}
                        />
                      </svg>
                    </FontAwesomeIcon>
                  </span>
                </div>
              </PanelHeading>
            </CollapsiblePanelHeader>
            <PanelBody
              bsClass="panel"
              collapsible={true}
            >
              <PanelCollapse
                bsClass="panel"
              >
                <Collapse
                  appear={false}
                  dimension="height"
                  getDimensionValue={[Function]}
                  in={true}
                  mountOnEnter={false}
                  timeout={300}
                  unmountOnExit={false}
                >
                  <Transition
                    appear={false}
                    aria-expanded={null}
                    enter={true}
                    exit={true}
                    in={true}
                    mountOnEnter={false}
                    onEnter={[Function]}
                    onEntered={[Function]}
                    onEntering={[Function]}
                    onExit={[Function]}
                    onExited={[Function]}
                    onExiting={[Function]}
                    timeout={300}
                    unmountOnExit={false}
                  >
                    <div
                      aria-expanded={null}
                      className="panel-collapse collapse in"
                    >
                      <div
                        className="panel-body"
                      >
                        <HelpTopicURL
                          helpTopic="defineAssaySchema"
                          nounPlural="assays"
                        >
                          <Row
                            bsClass="row"
                            componentClass="div"
                          >
                            <div
                              className="row"
                            >
                              <Col
                                bsClass="col"
                                componentClass="div"
                                xs={12}
                              >
                                <div
                                  className="col-xs-12"
                                >
                                  <a
                                    className="domain-field-float-right"
                                    href="https://www.labkey.org/Documentation/wiki-page.view?name=defineAssaySchema"
                                    target="_blank"
                                  >
                                    Learn more about designing assays
                                  </a>
                                </div>
                              </Col>
                            </div>
                          </Row>
                        </HelpTopicURL>
                        <Form
                          bsClass="form"
                          componentClass="form"
                          horizontal={false}
                          inline={false}
                        >
                          <form
                            className=""
                          >
                            <Col
                              bsClass="col"
                              componentClass="div"
                              lg={6}
                              xs={12}
                            >
                              <div
                                className="col-lg-6 col-xs-12"
                              >
                                <div
                                  className="domain-field-padding-bottom"
                                >
                                  <SectionHeading
                                    helpTopic="defineAssaySchema"
                                    title="Basic Properties"
                                  >
                                    <Row
                                      bsClass="row"
                                      componentClass="div"
                                    >
                                      <div
                                        className="row"
                                      >
                                        <Col
                                          bsClass="col"
                                          componentClass="div"
                                          xs={9}
                                        >
                                          <div
                                            className="col-xs-9"
                                          >
                                            <div
                                              className="domain-field-section-heading"
                                            >
                                              Basic Properties
                                            </div>
                                          </div>
                                        </Col>
                                      </div>
                                    </Row>
                                  </SectionHeading>
                                  <NameInput
                                    appPropertiesOnly={false}
                                    model={
                                      Immutable.Record {
                                        "allowBackgroundUpload": true,
                                        "allowEditableResults": true,
                                        "allowQCStates": false,
                                        "allowSpacesInPath": false,
                                        "allowTransformationScript": false,
                                        "allowPlateMetadata": false,
                                        "autoCopyTargetContainer": undefined,
                                        "autoCopyTargetContainerId": undefined,
                                        "availableDetectionMethods": undefined,
                                        "availableMetadataInputFormats": undefined,
                                        "availablePlateTemplates": undefined,
                                        "backgroundUpload": true,
                                        "description": "My assay protocol for you all to use.",
                                        "domains": Immutable.List [
                                          Immutable.Record {
                                            "name": "Batch Fields",
                                            "container": undefined,
                                            "description": undefined,
                                            "domainURI": undefined,
                                            "domainId": null,
                                            "allowFileLinkProperties": true,
                                            "allowAttachmentProperties": true,
                                            "allowFlagProperties": true,
                                            "showDefaultValueSettings": false,
                                            "defaultDefaultValueType": undefined,
                                            "defaultValueOptions": Immutable.List [],
                                            "fields": Immutable.List [],
                                            "indices": Immutable.List [],
                                            "domainException": undefined,
                                            "mandatoryFieldNames": Immutable.List [],
                                            "reservedFieldNames": Immutable.List [],
                                            "newDesignFields": undefined,
                                            "instructions": undefined,
                                          },
                                          Immutable.Record {
                                            "name": "Sample Fields",
                                            "container": undefined,
                                            "description": undefined,
                                            "domainURI": undefined,
                                            "domainId": null,
                                            "allowFileLinkProperties": true,
                                            "allowAttachmentProperties": true,
                                            "allowFlagProperties": true,
                                            "showDefaultValueSettings": false,
                                            "defaultDefaultValueType": undefined,
                                            "defaultValueOptions": Immutable.List [],
                                            "fields": Immutable.List [
                                              Immutable.Record {
                                                "conceptURI": undefined,
                                                "conditionalFormats": Immutable.List [],
                                                "defaultScale": undefined,
                                                "defaultValueType": undefined,
                                                "defaultValue": undefined,
                                                "defaultDisplayValue": undefined,
                                                "description": undefined,
                                                "dimension": undefined,
                                                "excludeFromShifting": false,
                                                "format": undefined,
                                                "hidden": false,
                                                "importAliases": undefined,
                                                "label": undefined,
                                                "lookupContainer": undefined,
                                                "lookupQuery": undefined,
                                                "lookupSchema": undefined,
                                                "lookupValidator": undefined,
                                                "measure": undefined,
                                                "mvEnabled": false,
                                                "name": "field1",
                                                "PHI": undefined,
                                                "primaryKey": undefined,
                                                "propertyId": undefined,
                                                "propertyURI": undefined,
                                                "propertyValidators": Immutable.List [],
                                                "rangeValidators": Immutable.List [],
                                                "rangeURI": "xsd:string",
                                                "regexValidators": Immutable.List [],
                                                "recommendedVariable": false,
                                                "required": false,
                                                "scale": undefined,
                                                "URL": undefined,
                                                "shownInDetailsView": true,
                                                "shownInInsertView": true,
                                                "shownInUpdateView": true,
                                                "visible": true,
                                                "dataType": Immutable.Record {
                                                  "conceptURI": undefined,
                                                  "display": "Text",
                                                  "name": "string",
                                                  "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                  "alternateRangeURI": "xsd:string",
                                                  "shortDisplay": "String",
                                                  "lookupSchema": undefined,
                                                  "lookupQuery": undefined,
                                                },
                                                "lookupQueryValue": undefined,
                                                "lookupType": Immutable.Record {
                                                  "conceptURI": undefined,
                                                  "display": "Lookup",
                                                  "name": "lookup",
                                                  "rangeURI": "xsd:string",
                                                  "alternateRangeURI": undefined,
                                                  "shortDisplay": undefined,
                                                  "lookupSchema": undefined,
                                                  "lookupQuery": undefined,
                                                },
                                                "original": Object {
                                                  "conceptURI": undefined,
                                                  "dataType": Immutable.Record {
                                                    "conceptURI": undefined,
                                                    "display": "Text",
                                                    "name": "string",
                                                    "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                    "alternateRangeURI": "xsd:string",
                                                    "shortDisplay": "String",
                                                    "lookupSchema": undefined,
                                                    "lookupQuery": undefined,
                                                  },
                                                  "rangeURI": undefined,
                                                },
                                                "updatedField": false,
                                                "isPrimaryKey": false,
                                                "lockType": "NotLocked",
                                                "wrappedColumnName": undefined,
                                              },
                                              Immutable.Record {
                                                "conceptURI": undefined,
                                                "conditionalFormats": Immutable.List [],
                                                "defaultScale": undefined,
                                                "defaultValueType": undefined,
                                                "defaultValue": undefined,
                                                "defaultDisplayValue": undefined,
                                                "description": undefined,
                                                "dimension": undefined,
                                                "excludeFromShifting": false,
                                                "format": undefined,
                                                "hidden": false,
                                                "importAliases": undefined,
                                                "label": undefined,
                                                "lookupContainer": undefined,
                                                "lookupQuery": undefined,
                                                "lookupSchema": undefined,
                                                "lookupValidator": undefined,
                                                "measure": undefined,
                                                "mvEnabled": false,
                                                "name": "field2",
                                                "PHI": undefined,
                                                "primaryKey": undefined,
                                                "propertyId": undefined,
                                                "propertyURI": undefined,
                                                "propertyValidators": Immutable.List [],
                                                "rangeValidators": Immutable.List [],
                                                "rangeURI": "xsd:int",
                                                "regexValidators": Immutable.List [],
                                                "recommendedVariable": false,
                                                "required": false,
                                                "scale": undefined,
                                                "URL": undefined,
                                                "shownInDetailsView": true,
                                                "shownInInsertView": true,
                                                "shownInUpdateView": true,
                                                "visible": true,
                                                "dataType": Immutable.Record {
                                                  "conceptURI": undefined,
                                                  "display": "Integer",
                                                  "name": "int",
                                                  "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                                  "alternateRangeURI": "xsd:int",
                                                  "shortDisplay": undefined,
                                                  "lookupSchema": undefined,
                                                  "lookupQuery": undefined,
                                                },
                                                "lookupQueryValue": undefined,
                                                "lookupType": Immutable.Record {
                                                  "conceptURI": undefined,
                                                  "display": "Lookup",
                                                  "name": "lookup",
                                                  "rangeURI": "xsd:int",
                                                  "alternateRangeURI": undefined,
                                                  "shortDisplay": undefined,
                                                  "lookupSchema": undefined,
                                                  "lookupQuery": undefined,
                                                },
                                                "original": Object {
                                                  "conceptURI": undefined,
                                                  "dataType": Immutable.Record {
                                                    "conceptURI": undefined,
                                                    "display": "Integer",
                                                    "name": "int",
                                                    "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                                    "alternateRangeURI": "xsd:int",
                                                    "shortDisplay": undefined,
                                                    "lookupSchema": undefined,
                                                    "lookupQuery": undefined,
                                                  },
                                                  "rangeURI": undefined,
                                                },
                                                "updatedField": false,
                                                "isPrimaryKey": false,
                                                "lockType": "NotLocked",
                                                "wrappedColumnName": undefined,
                                              },
                                              Immutable.Record {
                                                "conceptURI": undefined,
                                                "conditionalFormats": Immutable.List [],
                                                "defaultScale": undefined,
                                                "defaultValueType": undefined,
                                                "defaultValue": undefined,
                                                "defaultDisplayValue": undefined,
                                                "description": undefined,
                                                "dimension": undefined,
                                                "excludeFromShifting": false,
                                                "format": undefined,
                                                "hidden": false,
                                                "importAliases": undefined,
                                                "label": undefined,
                                                "lookupContainer": undefined,
                                                "lookupQuery": undefined,
                                                "lookupSchema": undefined,
                                                "lookupValidator": undefined,
                                                "measure": undefined,
                                                "mvEnabled": false,
                                                "name": "field3",
                                                "PHI": undefined,
                                                "primaryKey": undefined,
                                                "propertyId": undefined,
                                                "propertyURI": undefined,
                                                "propertyValidators": Immutable.List [],
                                                "rangeValidators": Immutable.List [],
                                                "rangeURI": "xsd:dateTime",
                                                "regexValidators": Immutable.List [],
                                                "recommendedVariable": false,
                                                "required": false,
                                                "scale": undefined,
                                                "URL": undefined,
                                                "shownInDetailsView": true,
                                                "shownInInsertView": true,
                                                "shownInUpdateView": true,
                                                "visible": true,
                                                "dataType": Immutable.Record {
                                                  "conceptURI": undefined,
                                                  "display": "Date Time",
                                                  "name": "dateTime",
                                                  "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                                                  "alternateRangeURI": "xsd:dateTime",
                                                  "shortDisplay": undefined,
                                                  "lookupSchema": undefined,
                                                  "lookupQuery": undefined,
                                                },
                                                "lookupQueryValue": undefined,
                                                "lookupType": Immutable.Record {
                                                  "conceptURI": undefined,
                                                  "display": "Lookup",
                                                  "name": "lookup",
                                                  "rangeURI": "xsd:dateTime",
                                                  "alternateRangeURI": undefined,
                                                  "shortDisplay": undefined,
                                                  "lookupSchema": undefined,
                                                  "lookupQuery": undefined,
                                                },
                                                "original": Object {
                                                  "conceptURI": undefined,
                                                  "dataType": Immutable.Record {
                                                    "conceptURI": undefined,
                                                    "display": "Date Time",
                                                    "name": "dateTime",
                                                    "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                                                    "alternateRangeURI": "xsd:dateTime",
                                                    "shortDisplay": undefined,
                                                    "lookupSchema": undefined,
                                                    "lookupQuery": undefined,
                                                  },
                                                  "rangeURI": undefined,
                                                },
                                                "updatedField": false,
                                                "isPrimaryKey": false,
                                                "lockType": "NotLocked",
                                                "wrappedColumnName": undefined,
                                              },
                                            ],
                                            "indices": Immutable.List [],
                                            "domainException": undefined,
                                            "mandatoryFieldNames": Immutable.List [],
                                            "reservedFieldNames": Immutable.List [],
                                            "newDesignFields": undefined,
                                            "instructions": undefined,
                                          },
                                        ],
                                        "editableResults": true,
                                        "editableRuns": true,
                                        "exception": undefined,
                                        "metadataInputFormatHelp": undefined,
                                        "moduleTransformScripts": undefined,
                                        "name": "Test Assay Protocol",
                                        "plateMetadata": undefined,
                                        "protocolId": 1,
                                        "protocolParameters": undefined,
                                        "protocolTransformScripts": undefined,
                                        "providerName": undefined,
                                        "saveScriptFiles": false,
                                        "selectedDetectionMethod": undefined,
                                        "selectedMetadataInputFormat": undefined,
                                        "selectedPlateTemplate": undefined,
                                        "qcEnabled": undefined,
                                      }
                                    }
                                    onChange={[Function]}
                                  >
                                    <AssayPropertiesInput
                                      appPropertiesOnly={false}
                                      helpTipBody={[Function]}
                                      label="Name"
                                      required={true}
                                    >
                                      <Row
                                        bsClass="row"
                                        className="margin-top"
                                        componentClass="div"
                                      >
                                        <div
                                          className="margin-top row"
                                        >
                                          <Col
                                            bsClass="col"
                                            componentClass="div"
                                            lg={4}
                                            xs={3}
                                          >
                                            <div
                                              className="col-lg-4 col-xs-3"
                                            >
                                              <span
                                                className="domain-no-wrap"
                                              >
                                                Name
                                                 *
                                                <LabelHelpTip
                                                  body={[Function]}
                                                  customStyle={Object {}}
                                                  id="tooltip"
                                                  required={true}
                                                  size="1x"
                                                  title="Name"
                                                >
                                                  <span
                                                    className="label-help-target"
                                                    onMouseOut={[Function]}
                                                    onMouseOver={[Function]}
                                                  >
                                                    <FontAwesomeIcon
                                                      border={false}
                                                      className="label-help-icon"
                                                      fixedWidth={false}
                                                      flip={null}
                                                      icon={
                                                        Object {
                                                          "icon": Array [
                                                            512,
                                                            512,
                                                            Array [],
                                                            "f059",
                                                            "M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z",
                                                          ],
                                                          "iconName": "question-circle",
                                                          "prefix": "fas",
                                                        }
                                                      }
                                                      inverse={false}
                                                      listItem={false}
                                                      mask={null}
                                                      pull={null}
                                                      pulse={false}
                                                      rotation={null}
                                                      size="1x"
                                                      spin={false}
                                                      style={Object {}}
                                                      symbol={false}
                                                      title=""
                                                      transform={null}
                                                    >
                                                      <svg
                                                        aria-hidden="true"
                                                        className="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                                                        data-icon="question-circle"
                                                        data-prefix="fas"
                                                        focusable="false"
                                                        role="img"
                                                        style={Object {}}
                                                        viewBox="0 0 512 512"
                                                        xmlns="http://www.w3.org/2000/svg"
                                                      >
                                                        <path
                                                          d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                          fill="currentColor"
                                                          style={Object {}}
                                                        />
                                                      </svg>
                                                    </FontAwesomeIcon>
                                                    <Overlay
                                                      animation={[Function]}
                                                      placement="right"
                                                      rootClose={false}
                                                      show={false}
                                                      target={
                                                        <span
                                                          class="label-help-target"
                                                        >
                                                          <svg
                                                            aria-hidden="true"
                                                            class="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                                                            data-icon="question-circle"
                                                            data-prefix="fas"
                                                            focusable="false"
                                                            role="img"
                                                            viewBox="0 0 512 512"
                                                            xmlns="http://www.w3.org/2000/svg"
                                                          >
                                                            <path
                                                              d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                              fill="currentColor"
                                                            />
                                                          </svg>
                                                        </span>
                                                      }
                                                    >
                                                      <Overlay
                                                        placement="right"
                                                        rootClose={false}
                                                        show={false}
                                                        target={
                                                          <span
                                                            class="label-help-target"
                                                          >
                                                            <svg
                                                              aria-hidden="true"
                                                              class="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                                                              data-icon="question-circle"
                                                              data-prefix="fas"
                                                              focusable="false"
                                                              role="img"
                                                              viewBox="0 0 512 512"
                                                              xmlns="http://www.w3.org/2000/svg"
                                                            >
                                                              <path
                                                                d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                                fill="currentColor"
                                                              />
                                                            </svg>
                                                          </span>
                                                        }
                                                        transition={[Function]}
                                                      />
                                                    </Overlay>
                                                  </span>
                                                </LabelHelpTip>
                                              </span>
                                            </div>
                                          </Col>
                                          <Col
                                            bsClass="col"
                                            componentClass="div"
                                            lg={8}
                                            xs={9}
                                          >
                                            <div
                                              className="col-lg-8 col-xs-9"
                                            >
                                              <FormControl
                                                bsClass="form-control"
                                                componentClass="input"
                                                disabled={true}
                                                id="assay-design-name"
                                                onChange={[Function]}
                                                placeholder="Enter a name for this assay"
                                                type="text"
                                                value="Test Assay Protocol"
                                              >
                                                <input
                                                  className="form-control"
                                                  disabled={true}
                                                  id="assay-design-name"
                                                  onChange={[Function]}
                                                  placeholder="Enter a name for this assay"
                                                  type="text"
                                                  value="Test Assay Protocol"
                                                />
                                              </FormControl>
                                            </div>
                                          </Col>
                                        </div>
                                      </Row>
                                    </AssayPropertiesInput>
                                  </NameInput>
                                  <DescriptionInput
                                    appPropertiesOnly={false}
                                    model={
                                      Immutable.Record {
                                        "allowBackgroundUpload": true,
                                        "allowEditableResults": true,
                                        "allowQCStates": false,
                                        "allowSpacesInPath": false,
                                        "allowTransformationScript": false,
                                        "allowPlateMetadata": false,
                                        "autoCopyTargetContainer": undefined,
                                        "autoCopyTargetContainerId": undefined,
                                        "availableDetectionMethods": undefined,
                                        "availableMetadataInputFormats": undefined,
                                        "availablePlateTemplates": undefined,
                                        "backgroundUpload": true,
                                        "description": "My assay protocol for you all to use.",
                                        "domains": Immutable.List [
                                          Immutable.Record {
                                            "name": "Batch Fields",
                                            "container": undefined,
                                            "description": undefined,
                                            "domainURI": undefined,
                                            "domainId": null,
                                            "allowFileLinkProperties": true,
                                            "allowAttachmentProperties": true,
                                            "allowFlagProperties": true,
                                            "showDefaultValueSettings": false,
                                            "defaultDefaultValueType": undefined,
                                            "defaultValueOptions": Immutable.List [],
                                            "fields": Immutable.List [],
                                            "indices": Immutable.List [],
                                            "domainException": undefined,
                                            "mandatoryFieldNames": Immutable.List [],
                                            "reservedFieldNames": Immutable.List [],
                                            "newDesignFields": undefined,
                                            "instructions": undefined,
                                          },
                                          Immutable.Record {
                                            "name": "Sample Fields",
                                            "container": undefined,
                                            "description": undefined,
                                            "domainURI": undefined,
                                            "domainId": null,
                                            "allowFileLinkProperties": true,
                                            "allowAttachmentProperties": true,
                                            "allowFlagProperties": true,
                                            "showDefaultValueSettings": false,
                                            "defaultDefaultValueType": undefined,
                                            "defaultValueOptions": Immutable.List [],
                                            "fields": Immutable.List [
                                              Immutable.Record {
                                                "conceptURI": undefined,
                                                "conditionalFormats": Immutable.List [],
                                                "defaultScale": undefined,
                                                "defaultValueType": undefined,
                                                "defaultValue": undefined,
                                                "defaultDisplayValue": undefined,
                                                "description": undefined,
                                                "dimension": undefined,
                                                "excludeFromShifting": false,
                                                "format": undefined,
                                                "hidden": false,
                                                "importAliases": undefined,
                                                "label": undefined,
                                                "lookupContainer": undefined,
                                                "lookupQuery": undefined,
                                                "lookupSchema": undefined,
                                                "lookupValidator": undefined,
                                                "measure": undefined,
                                                "mvEnabled": false,
                                                "name": "field1",
                                                "PHI": undefined,
                                                "primaryKey": undefined,
                                                "propertyId": undefined,
                                                "propertyURI": undefined,
                                                "propertyValidators": Immutable.List [],
                                                "rangeValidators": Immutable.List [],
                                                "rangeURI": "xsd:string",
                                                "regexValidators": Immutable.List [],
                                                "recommendedVariable": false,
                                                "required": false,
                                                "scale": undefined,
                                                "URL": undefined,
                                                "shownInDetailsView": true,
                                                "shownInInsertView": true,
                                                "shownInUpdateView": true,
                                                "visible": true,
                                                "dataType": Immutable.Record {
                                                  "conceptURI": undefined,
                                                  "display": "Text",
                                                  "name": "string",
                                                  "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                  "alternateRangeURI": "xsd:string",
                                                  "shortDisplay": "String",
                                                  "lookupSchema": undefined,
                                                  "lookupQuery": undefined,
                                                },
                                                "lookupQueryValue": undefined,
                                                "lookupType": Immutable.Record {
                                                  "conceptURI": undefined,
                                                  "display": "Lookup",
                                                  "name": "lookup",
                                                  "rangeURI": "xsd:string",
                                                  "alternateRangeURI": undefined,
                                                  "shortDisplay": undefined,
                                                  "lookupSchema": undefined,
                                                  "lookupQuery": undefined,
                                                },
                                                "original": Object {
                                                  "conceptURI": undefined,
                                                  "dataType": Immutable.Record {
                                                    "conceptURI": undefined,
                                                    "display": "Text",
                                                    "name": "string",
                                                    "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                    "alternateRangeURI": "xsd:string",
                                                    "shortDisplay": "String",
                                                    "lookupSchema": undefined,
                                                    "lookupQuery": undefined,
                                                  },
                                                  "rangeURI": undefined,
                                                },
                                                "updatedField": false,
                                                "isPrimaryKey": false,
                                                "lockType": "NotLocked",
                                                "wrappedColumnName": undefined,
                                              },
                                              Immutable.Record {
                                                "conceptURI": undefined,
                                                "conditionalFormats": Immutable.List [],
                                                "defaultScale": undefined,
                                                "defaultValueType": undefined,
                                                "defaultValue": undefined,
                                                "defaultDisplayValue": undefined,
                                                "description": undefined,
                                                "dimension": undefined,
                                                "excludeFromShifting": false,
                                                "format": undefined,
                                                "hidden": false,
                                                "importAliases": undefined,
                                                "label": undefined,
                                                "lookupContainer": undefined,
                                                "lookupQuery": undefined,
                                                "lookupSchema": undefined,
                                                "lookupValidator": undefined,
                                                "measure": undefined,
                                                "mvEnabled": false,
                                                "name": "field2",
                                                "PHI": undefined,
                                                "primaryKey": undefined,
                                                "propertyId": undefined,
                                                "propertyURI": undefined,
                                                "propertyValidators": Immutable.List [],
                                                "rangeValidators": Immutable.List [],
                                                "rangeURI": "xsd:int",
                                                "regexValidators": Immutable.List [],
                                                "recommendedVariable": false,
                                                "required": false,
                                                "scale": undefined,
                                                "URL": undefined,
                                                "shownInDetailsView": true,
                                                "shownInInsertView": true,
                                                "shownInUpdateView": true,
                                                "visible": true,
                                                "dataType": Immutable.Record {
                                                  "conceptURI": undefined,
                                                  "display": "Integer",
                                                  "name": "int",
                                                  "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                                  "alternateRangeURI": "xsd:int",
                                                  "shortDisplay": undefined,
                                                  "lookupSchema": undefined,
                                                  "lookupQuery": undefined,
                                                },
                                                "lookupQueryValue": undefined,
                                                "lookupType": Immutable.Record {
                                                  "conceptURI": undefined,
                                                  "display": "Lookup",
                                                  "name": "lookup",
                                                  "rangeURI": "xsd:int",
                                                  "alternateRangeURI": undefined,
                                                  "shortDisplay": undefined,
                                                  "lookupSchema": undefined,
                                                  "lookupQuery": undefined,
                                                },
                                                "original": Object {
                                                  "conceptURI": undefined,
                                                  "dataType": Immutable.Record {
                                                    "conceptURI": undefined,
                                                    "display": "Integer",
                                                    "name": "int",
                                                    "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                                    "alternateRangeURI": "xsd:int",
                                                    "shortDisplay": undefined,
                                                    "lookupSchema": undefined,
                                                    "lookupQuery": undefined,
                                                  },
                                                  "rangeURI": undefined,
                                                },
                                                "updatedField": false,
                                                "isPrimaryKey": false,
                                                "lockType": "NotLocked",
                                                "wrappedColumnName": undefined,
                                              },
                                              Immutable.Record {
                                                "conceptURI": undefined,
                                                "conditionalFormats": Immutable.List [],
                                                "defaultScale": undefined,
                                                "defaultValueType": undefined,
                                                "defaultValue": undefined,
                                                "defaultDisplayValue": undefined,
                                                "description": undefined,
                                                "dimension": undefined,
                                                "excludeFromShifting": false,
                                                "format": undefined,
                                                "hidden": false,
                                                "importAliases": undefined,
                                                "label": undefined,
                                                "lookupContainer": undefined,
                                                "lookupQuery": undefined,
                                                "lookupSchema": undefined,
                                                "lookupValidator": undefined,
                                                "measure": undefined,
                                                "mvEnabled": false,
                                                "name": "field3",
                                                "PHI": undefined,
                                                "primaryKey": undefined,
                                                "propertyId": undefined,
                                                "propertyURI": undefined,
                                                "propertyValidators": Immutable.List [],
                                                "rangeValidators": Immutable.List [],
                                                "rangeURI": "xsd:dateTime",
                                                "regexValidators": Immutable.List [],
                                                "recommendedVariable": false,
                                                "required": false,
                                                "scale": undefined,
                                                "URL": undefined,
                                                "shownInDetailsView": true,
                                                "shownInInsertView": true,
                                                "shownInUpdateView": true,
                                                "visible": true,
                                                "dataType": Immutable.Record {
                                                  "conceptURI": undefined,
                                                  "display": "Date Time",
                                                  "name": "dateTime",
                                                  "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                                                  "alternateRangeURI": "xsd:dateTime",
                                                  "shortDisplay": undefined,
                                                  "lookupSchema": undefined,
                                                  "lookupQuery": undefined,
                                                },
                                                "lookupQueryValue": undefined,
                                                "lookupType": Immutable.Record {
                                                  "conceptURI": undefined,
                                                  "display": "Lookup",
                                                  "name": "lookup",
                                                  "rangeURI": "xsd:dateTime",
                                                  "alternateRangeURI": undefined,
                                                  "shortDisplay": undefined,
                                                  "lookupSchema": undefined,
                                                  "lookupQuery": undefined,
                                                },
                                                "original": Object {
                                                  "conceptURI": undefined,
                                                  "dataType": Immutable.Record {
                                                    "conceptURI": undefined,
                                                    "display": "Date Time",
                                                    "name": "dateTime",
                                                    "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                                                    "alternateRangeURI": "xsd:dateTime",
                                                    "shortDisplay": undefined,
                                                    "lookupSchema": undefined,
                                                    "lookupQuery": undefined,
                                                  },
                                                  "rangeURI": undefined,
                                                },
                                                "updatedField": false,
                                                "isPrimaryKey": false,
                                                "lockType": "NotLocked",
                                                "wrappedColumnName": undefined,
                                              },
                                            ],
                                            "indices": Immutable.List [],
                                            "domainException": undefined,
                                            "mandatoryFieldNames": Immutable.List [],
                                            "reservedFieldNames": Immutable.List [],
                                            "newDesignFields": undefined,
                                            "instructions": undefined,
                                          },
                                        ],
                                        "editableResults": true,
                                        "editableRuns": true,
                                        "exception": undefined,
                                        "metadataInputFormatHelp": undefined,
                                        "moduleTransformScripts": undefined,
                                        "name": "Test Assay Protocol",
                                        "plateMetadata": undefined,
                                        "protocolId": 1,
                                        "protocolParameters": undefined,
                                        "protocolTransformScripts": undefined,
                                        "providerName": undefined,
                                        "saveScriptFiles": false,
                                        "selectedDetectionMethod": undefined,
                                        "selectedMetadataInputFormat": undefined,
                                        "selectedPlateTemplate": undefined,
                                        "qcEnabled": undefined,
                                      }
                                    }
                                    onChange={[Function]}
                                  >
                                    <AssayPropertiesInput
                                      appPropertiesOnly={false}
                                      helpTipBody={[Function]}
                                      label="Description"
                                    >
                                      <Row
                                        bsClass="row"
                                        className="margin-top"
                                        componentClass="div"
                                      >
                                        <div
                                          className="margin-top row"
                                        >
                                          <Col
                                            bsClass="col"
                                            componentClass="div"
                                            lg={4}
                                            xs={3}
                                          >
                                            <div
                                              className="col-lg-4 col-xs-3"
                                            >
                                              <span
                                                className="domain-no-wrap"
                                              >
                                                Description
                                                <LabelHelpTip
                                                  body={[Function]}
                                                  customStyle={Object {}}
                                                  id="tooltip"
                                                  size="1x"
                                                  title="Description"
                                                >
                                                  <span
                                                    className="label-help-target"
                                                    onMouseOut={[Function]}
                                                    onMouseOver={[Function]}
                                                  >
                                                    <FontAwesomeIcon
                                                      border={false}
                                                      className="label-help-icon"
                                                      fixedWidth={false}
                                                      flip={null}
                                                      icon={
                                                        Object {
                                                          "icon": Array [
                                                            512,
                                                            512,
                                                            Array [],
                                                            "f059",
                                                            "M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z",
                                                          ],
                                                          "iconName": "question-circle",
                                                          "prefix": "fas",
                                                        }
                                                      }
                                                      inverse={false}
                                                      listItem={false}
                                                      mask={null}
                                                      pull={null}
                                                      pulse={false}
                                                      rotation={null}
                                                      size="1x"
                                                      spin={false}
                                                      style={Object {}}
                                                      symbol={false}
                                                      title=""
                                                      transform={null}
                                                    >
                                                      <svg
                                                        aria-hidden="true"
                                                        className="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                                                        data-icon="question-circle"
                                                        data-prefix="fas"
                                                        focusable="false"
                                                        role="img"
                                                        style={Object {}}
                                                        viewBox="0 0 512 512"
                                                        xmlns="http://www.w3.org/2000/svg"
                                                      >
                                                        <path
                                                          d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                          fill="currentColor"
                                                          style={Object {}}
                                                        />
                                                      </svg>
                                                    </FontAwesomeIcon>
                                                    <Overlay
                                                      animation={[Function]}
                                                      placement="right"
                                                      rootClose={false}
                                                      show={false}
                                                      target={
                                                        <span
                                                          class="label-help-target"
                                                        >
                                                          <svg
                                                            aria-hidden="true"
                                                            class="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                                                            data-icon="question-circle"
                                                            data-prefix="fas"
                                                            focusable="false"
                                                            role="img"
                                                            viewBox="0 0 512 512"
                                                            xmlns="http://www.w3.org/2000/svg"
                                                          >
                                                            <path
                                                              d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                              fill="currentColor"
                                                            />
                                                          </svg>
                                                        </span>
                                                      }
                                                    >
                                                      <Overlay
                                                        placement="right"
                                                        rootClose={false}
                                                        show={false}
                                                        target={
                                                          <span
                                                            class="label-help-target"
                                                          >
                                                            <svg
                                                              aria-hidden="true"
                                                              class="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                                                              data-icon="question-circle"
                                                              data-prefix="fas"
                                                              focusable="false"
                                                              role="img"
                                                              viewBox="0 0 512 512"
                                                              xmlns="http://www.w3.org/2000/svg"
                                                            >
                                                              <path
                                                                d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                                fill="currentColor"
                                                              />
                                                            </svg>
                                                          </span>
                                                        }
                                                        transition={[Function]}
                                                      />
                                                    </Overlay>
                                                  </span>
                                                </LabelHelpTip>
                                              </span>
                                            </div>
                                          </Col>
                                          <Col
                                            bsClass="col"
                                            componentClass="div"
                                            lg={8}
                                            xs={9}
                                          >
                                            <div
                                              className="col-lg-8 col-xs-9"
                                            >
                                              <textarea
                                                className="form-control textarea-noresize"
                                                id="assay-design-description"
                                                onChange={[Function]}
                                                value="My assay protocol for you all to use."
                                              />
                                            </div>
                                          </Col>
                                        </div>
                                      </Row>
                                    </AssayPropertiesInput>
                                  </DescriptionInput>
                                </div>
                                <div
                                  className="domain-field-padding-bottom"
                                >
                                  <SectionHeading
                                    title="Editing Settings"
                                  >
                                    <Row
                                      bsClass="row"
                                      componentClass="div"
                                    >
                                      <div
                                        className="row"
                                      >
                                        <Col
                                          bsClass="col"
                                          componentClass="div"
                                          xs={12}
                                        >
                                          <div
                                            className="col-xs-12"
                                          >
                                            <div
                                              className="domain-field-section-heading"
                                            >
                                              Editing Settings
                                            </div>
                                          </div>
                                        </Col>
                                      </div>
                                    </Row>
                                  </SectionHeading>
                                  <EditableRunsInput
                                    appPropertiesOnly={false}
                                    model={
                                      Immutable.Record {
                                        "allowBackgroundUpload": true,
                                        "allowEditableResults": true,
                                        "allowQCStates": false,
                                        "allowSpacesInPath": false,
                                        "allowTransformationScript": false,
                                        "allowPlateMetadata": false,
                                        "autoCopyTargetContainer": undefined,
                                        "autoCopyTargetContainerId": undefined,
                                        "availableDetectionMethods": undefined,
                                        "availableMetadataInputFormats": undefined,
                                        "availablePlateTemplates": undefined,
                                        "backgroundUpload": true,
                                        "description": "My assay protocol for you all to use.",
                                        "domains": Immutable.List [
                                          Immutable.Record {
                                            "name": "Batch Fields",
                                            "container": undefined,
                                            "description": undefined,
                                            "domainURI": undefined,
                                            "domainId": null,
                                            "allowFileLinkProperties": true,
                                            "allowAttachmentProperties": true,
                                            "allowFlagProperties": true,
                                            "showDefaultValueSettings": false,
                                            "defaultDefaultValueType": undefined,
                                            "defaultValueOptions": Immutable.List [],
                                            "fields": Immutable.List [],
                                            "indices": Immutable.List [],
                                            "domainException": undefined,
                                            "mandatoryFieldNames": Immutable.List [],
                                            "reservedFieldNames": Immutable.List [],
                                            "newDesignFields": undefined,
                                            "instructions": undefined,
                                          },
                                          Immutable.Record {
                                            "name": "Sample Fields",
                                            "container": undefined,
                                            "description": undefined,
                                            "domainURI": undefined,
                                            "domainId": null,
                                            "allowFileLinkProperties": true,
                                            "allowAttachmentProperties": true,
                                            "allowFlagProperties": true,
                                            "showDefaultValueSettings": false,
                                            "defaultDefaultValueType": undefined,
                                            "defaultValueOptions": Immutable.List [],
                                            "fields": Immutable.List [
                                              Immutable.Record {
                                                "conceptURI": undefined,
                                                "conditionalFormats": Immutable.List [],
                                                "defaultScale": undefined,
                                                "defaultValueType": undefined,
                                                "defaultValue": undefined,
                                                "defaultDisplayValue": undefined,
                                                "description": undefined,
                                                "dimension": undefined,
                                                "excludeFromShifting": false,
                                                "format": undefined,
                                                "hidden": false,
                                                "importAliases": undefined,
                                                "label": undefined,
                                                "lookupContainer": undefined,
                                                "lookupQuery": undefined,
                                                "lookupSchema": undefined,
                                                "lookupValidator": undefined,
                                                "measure": undefined,
                                                "mvEnabled": false,
                                                "name": "field1",
                                                "PHI": undefined,
                                                "primaryKey": undefined,
                                                "propertyId": undefined,
                                                "propertyURI": undefined,
                                                "propertyValidators": Immutable.List [],
                                                "rangeValidators": Immutable.List [],
                                                "rangeURI": "xsd:string",
                                                "regexValidators": Immutable.List [],
                                                "recommendedVariable": false,
                                                "required": false,
                                                "scale": undefined,
                                                "URL": undefined,
                                                "shownInDetailsView": true,
                                                "shownInInsertView": true,
                                                "shownInUpdateView": true,
                                                "visible": true,
                                                "dataType": Immutable.Record {
                                                  "conceptURI": undefined,
                                                  "display": "Text",
                                                  "name": "string",
                                                  "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                  "alternateRangeURI": "xsd:string",
                                                  "shortDisplay": "String",
                                                  "lookupSchema": undefined,
                                                  "lookupQuery": undefined,
                                                },
                                                "lookupQueryValue": undefined,
                                                "lookupType": Immutable.Record {
                                                  "conceptURI": undefined,
                                                  "display": "Lookup",
                                                  "name": "lookup",
                                                  "rangeURI": "xsd:string",
                                                  "alternateRangeURI": undefined,
                                                  "shortDisplay": undefined,
                                                  "lookupSchema": undefined,
                                                  "lookupQuery": undefined,
                                                },
                                                "original": Object {
                                                  "conceptURI": undefined,
                                                  "dataType": Immutable.Record {
                                                    "conceptURI": undefined,
                                                    "display": "Text",
                                                    "name": "string",
                                                    "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                    "alternateRangeURI": "xsd:string",
                                                    "shortDisplay": "String",
                                                    "lookupSchema": undefined,
                                                    "lookupQuery": undefined,
                                                  },
                                                  "rangeURI": undefined,
                                                },
                                                "updatedField": false,
                                                "isPrimaryKey": false,
                                                "lockType": "NotLocked",
                                                "wrappedColumnName": undefined,
                                              },
                                              Immutable.Record {
                                                "conceptURI": undefined,
                                                "conditionalFormats": Immutable.List [],
                                                "defaultScale": undefined,
                                                "defaultValueType": undefined,
                                                "defaultValue": undefined,
                                                "defaultDisplayValue": undefined,
                                                "description": undefined,
                                                "dimension": undefined,
                                                "excludeFromShifting": false,
                                                "format": undefined,
                                                "hidden": false,
                                                "importAliases": undefined,
                                                "label": undefined,
                                                "lookupContainer": undefined,
                                                "lookupQuery": undefined,
                                                "lookupSchema": undefined,
                                                "lookupValidator": undefined,
                                                "measure": undefined,
                                                "mvEnabled": false,
                                                "name": "field2",
                                                "PHI": undefined,
                                                "primaryKey": undefined,
                                                "propertyId": undefined,
                                                "propertyURI": undefined,
                                                "propertyValidators": Immutable.List [],
                                                "rangeValidators": Immutable.List [],
                                                "rangeURI": "xsd:int",
                                                "regexValidators": Immutable.List [],
                                                "recommendedVariable": false,
                                                "required": false,
                                                "scale": undefined,
                                                "URL": undefined,
                                                "shownInDetailsView": true,
                                                "shownInInsertView": true,
                                                "shownInUpdateView": true,
                                                "visible": true,
                                                "dataType": Immutable.Record {
                                                  "conceptURI": undefined,
                                                  "display": "Integer",
                                                  "name": "int",
                                                  "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                                  "alternateRangeURI": "xsd:int",
                                                  "shortDisplay": undefined,
                                                  "lookupSchema": undefined,
                                                  "lookupQuery": undefined,
                                                },
                                                "lookupQueryValue": undefined,
                                                "lookupType": Immutable.Record {
                                                  "conceptURI": undefined,
                                                  "display": "Lookup",
                                                  "name": "lookup",
                                                  "rangeURI": "xsd:int",
                                                  "alternateRangeURI": undefined,
                                                  "shortDisplay": undefined,
                                                  "lookupSchema": undefined,
                                                  "lookupQuery": undefined,
                                                },
                                                "original": Object {
                                                  "conceptURI": undefined,
                                                  "dataType": Immutable.Record {
                                                    "conceptURI": undefined,
                                                    "display": "Integer",
                                                    "name": "int",
                                                    "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                                    "alternateRangeURI": "xsd:int",
                                                    "shortDisplay": undefined,
                                                    "lookupSchema": undefined,
                                                    "lookupQuery": undefined,
                                                  },
                                                  "rangeURI": undefined,
                                                },
                                                "updatedField": false,
                                                "isPrimaryKey": false,
                                                "lockType": "NotLocked",
                                                "wrappedColumnName": undefined,
                                              },
                                              Immutable.Record {
                                                "conceptURI": undefined,
                                                "conditionalFormats": Immutable.List [],
                                                "defaultScale": undefined,
                                                "defaultValueType": undefined,
                                                "defaultValue": undefined,
                                                "defaultDisplayValue": undefined,
                                                "description": undefined,
                                                "dimension": undefined,
                                                "excludeFromShifting": false,
                                                "format": undefined,
                                                "hidden": false,
                                                "importAliases": undefined,
                                                "label": undefined,
                                                "lookupContainer": undefined,
                                                "lookupQuery": undefined,
                                                "lookupSchema": undefined,
                                                "lookupValidator": undefined,
                                                "measure": undefined,
                                                "mvEnabled": false,
                                                "name": "field3",
                                                "PHI": undefined,
                                                "primaryKey": undefined,
                                                "propertyId": undefined,
                                                "propertyURI": undefined,
                                                "propertyValidators": Immutable.List [],
                                                "rangeValidators": Immutable.List [],
                                                "rangeURI": "xsd:dateTime",
                                                "regexValidators": Immutable.List [],
                                                "recommendedVariable": false,
                                                "required": false,
                                                "scale": undefined,
                                                "URL": undefined,
                                                "shownInDetailsView": true,
                                                "shownInInsertView": true,
                                                "shownInUpdateView": true,
                                                "visible": true,
                                                "dataType": Immutable.Record {
                                                  "conceptURI": undefined,
                                                  "display": "Date Time",
                                                  "name": "dateTime",
                                                  "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                                                  "alternateRangeURI": "xsd:dateTime",
                                                  "shortDisplay": undefined,
                                                  "lookupSchema": undefined,
                                                  "lookupQuery": undefined,
                                                },
                                                "lookupQueryValue": undefined,
                                                "lookupType": Immutable.Record {
                                                  "conceptURI": undefined,
                                                  "display": "Lookup",
                                                  "name": "lookup",
                                                  "rangeURI": "xsd:dateTime",
                                                  "alternateRangeURI": undefined,
                                                  "shortDisplay": undefined,
                                                  "lookupSchema": undefined,
                                                  "lookupQuery": undefined,
                                                },
                                                "original": Object {
                                                  "conceptURI": undefined,
                                                  "dataType": Immutable.Record {
                                                    "conceptURI": undefined,
                                                    "display": "Date Time",
                                                    "name": "dateTime",
                                                    "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                                                    "alternateRangeURI": "xsd:dateTime",
                                                    "shortDisplay": undefined,
                                                    "lookupSchema": undefined,
                                                    "lookupQuery": undefined,
                                                  },
                                                  "rangeURI": undefined,
                                                },
                                                "updatedField": false,
                                                "isPrimaryKey": false,
                                                "lockType": "NotLocked",
                                                "wrappedColumnName": undefined,
                                              },
                                            ],
                                            "indices": Immutable.List [],
                                            "domainException": undefined,
                                            "mandatoryFieldNames": Immutable.List [],
                                            "reservedFieldNames": Immutable.List [],
                                            "newDesignFields": undefined,
                                            "instructions": undefined,
                                          },
                                        ],
                                        "editableResults": true,
                                        "editableRuns": true,
                                        "exception": undefined,
                                        "metadataInputFormatHelp": undefined,
                                        "moduleTransformScripts": undefined,
                                        "name": "Test Assay Protocol",
                                        "plateMetadata": undefined,
                                        "protocolId": 1,
                                        "protocolParameters": undefined,
                                        "protocolTransformScripts": undefined,
                                        "providerName": undefined,
                                        "saveScriptFiles": false,
                                        "selectedDetectionMethod": undefined,
                                        "selectedMetadataInputFormat": undefined,
                                        "selectedPlateTemplate": undefined,
                                        "qcEnabled": undefined,
                                      }
                                    }
                                    onChange={[Function]}
                                  >
                                    <AssayPropertiesInput
                                      appPropertiesOnly={false}
                                      helpTipBody={[Function]}
                                      label="Editable Runs"
                                    >
                                      <Row
                                        bsClass="row"
                                        className="margin-top"
                                        componentClass="div"
                                      >
                                        <div
                                          className="margin-top row"
                                        >
                                          <Col
                                            bsClass="col"
                                            componentClass="div"
                                            lg={4}
                                            xs={3}
                                          >
                                            <div
                                              className="col-lg-4 col-xs-3"
                                            >
                                              Editable 
                                              <span
                                                className="domain-no-wrap"
                                              >
                                                Runs
                                                <LabelHelpTip
                                                  body={[Function]}
                                                  customStyle={Object {}}
                                                  id="tooltip"
                                                  size="1x"
                                                  title="Editable Runs"
                                                >
                                                  <span
                                                    className="label-help-target"
                                                    onMouseOut={[Function]}
                                                    onMouseOver={[Function]}
                                                  >
                                                    <FontAwesomeIcon
                                                      border={false}
                                                      className="label-help-icon"
                                                      fixedWidth={false}
                                                      flip={null}
                                                      icon={
                                                        Object {
                                                          "icon": Array [
                                                            512,
                                                            512,
                                                            Array [],
                                                            "f059",
                                                            "M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z",
                                                          ],
                                                          "iconName": "question-circle",
                                                          "prefix": "fas",
                                                        }
                                                      }
                                                      inverse={false}
                                                      listItem={false}
                                                      mask={null}
                                                      pull={null}
                                                      pulse={false}
                                                      rotation={null}
                                                      size="1x"
                                                      spin={false}
                                                      style={Object {}}
                                                      symbol={false}
                                                      title=""
                                                      transform={null}
                                                    >
                                                      <svg
                                                        aria-hidden="true"
                                                        className="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                                                        data-icon="question-circle"
                                                        data-prefix="fas"
                                                        focusable="false"
                                                        role="img"
                                                        style={Object {}}
                                                        viewBox="0 0 512 512"
                                                        xmlns="http://www.w3.org/2000/svg"
                                                      >
                                                        <path
                                                          d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                          fill="currentColor"
                                                          style={Object {}}
                                                        />
                                                      </svg>
                                                    </FontAwesomeIcon>
                                                    <Overlay
                                                      animation={[Function]}
                                                      placement="right"
                                                      rootClose={false}
                                                      show={false}
                                                      target={
                                                        <span
                                                          class="label-help-target"
                                                        >
                                                          <svg
                                                            aria-hidden="true"
                                                            class="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                                                            data-icon="question-circle"
                                                            data-prefix="fas"
                                                            focusable="false"
                                                            role="img"
                                                            viewBox="0 0 512 512"
                                                            xmlns="http://www.w3.org/2000/svg"
                                                          >
                                                            <path
                                                              d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                              fill="currentColor"
                                                            />
                                                          </svg>
                                                        </span>
                                                      }
                                                    >
                                                      <Overlay
                                                        placement="right"
                                                        rootClose={false}
                                                        show={false}
                                                        target={
                                                          <span
                                                            class="label-help-target"
                                                          >
                                                            <svg
                                                              aria-hidden="true"
                                                              class="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                                                              data-icon="question-circle"
                                                              data-prefix="fas"
                                                              focusable="false"
                                                              role="img"
                                                              viewBox="0 0 512 512"
                                                              xmlns="http://www.w3.org/2000/svg"
                                                            >
                                                              <path
                                                                d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                                fill="currentColor"
                                                              />
                                                            </svg>
                                                          </span>
                                                        }
                                                        transition={[Function]}
                                                      />
                                                    </Overlay>
                                                  </span>
                                                </LabelHelpTip>
                                              </span>
                                            </div>
                                          </Col>
                                          <Col
                                            bsClass="col"
                                            componentClass="div"
                                            lg={8}
                                            xs={9}
                                          >
                                            <div
                                              className="col-lg-8 col-xs-9"
                                            >
                                              <input
                                                checked={true}
                                                id="assay-design-editableRuns"
                                                onChange={[Function]}
                                                type="checkbox"
                                              />
                                            </div>
                                          </Col>
                                        </div>
                                      </Row>
                                    </AssayPropertiesInput>
                                  </EditableRunsInput>
                                  <EditableResultsInput
                                    appPropertiesOnly={false}
                                    model={
                                      Immutable.Record {
                                        "allowBackgroundUpload": true,
                                        "allowEditableResults": true,
                                        "allowQCStates": false,
                                        "allowSpacesInPath": false,
                                        "allowTransformationScript": false,
                                        "allowPlateMetadata": false,
                                        "autoCopyTargetContainer": undefined,
                                        "autoCopyTargetContainerId": undefined,
                                        "availableDetectionMethods": undefined,
                                        "availableMetadataInputFormats": undefined,
                                        "availablePlateTemplates": undefined,
                                        "backgroundUpload": true,
                                        "description": "My assay protocol for you all to use.",
                                        "domains": Immutable.List [
                                          Immutable.Record {
                                            "name": "Batch Fields",
                                            "container": undefined,
                                            "description": undefined,
                                            "domainURI": undefined,
                                            "domainId": null,
                                            "allowFileLinkProperties": true,
                                            "allowAttachmentProperties": true,
                                            "allowFlagProperties": true,
                                            "showDefaultValueSettings": false,
                                            "defaultDefaultValueType": undefined,
                                            "defaultValueOptions": Immutable.List [],
                                            "fields": Immutable.List [],
                                            "indices": Immutable.List [],
                                            "domainException": undefined,
                                            "mandatoryFieldNames": Immutable.List [],
                                            "reservedFieldNames": Immutable.List [],
                                            "newDesignFields": undefined,
                                            "instructions": undefined,
                                          },
                                          Immutable.Record {
                                            "name": "Sample Fields",
                                            "container": undefined,
                                            "description": undefined,
                                            "domainURI": undefined,
                                            "domainId": null,
                                            "allowFileLinkProperties": true,
                                            "allowAttachmentProperties": true,
                                            "allowFlagProperties": true,
                                            "showDefaultValueSettings": false,
                                            "defaultDefaultValueType": undefined,
                                            "defaultValueOptions": Immutable.List [],
                                            "fields": Immutable.List [
                                              Immutable.Record {
                                                "conceptURI": undefined,
                                                "conditionalFormats": Immutable.List [],
                                                "defaultScale": undefined,
                                                "defaultValueType": undefined,
                                                "defaultValue": undefined,
                                                "defaultDisplayValue": undefined,
                                                "description": undefined,
                                                "dimension": undefined,
                                                "excludeFromShifting": false,
                                                "format": undefined,
                                                "hidden": false,
                                                "importAliases": undefined,
                                                "label": undefined,
                                                "lookupContainer": undefined,
                                                "lookupQuery": undefined,
                                                "lookupSchema": undefined,
                                                "lookupValidator": undefined,
                                                "measure": undefined,
                                                "mvEnabled": false,
                                                "name": "field1",
                                                "PHI": undefined,
                                                "primaryKey": undefined,
                                                "propertyId": undefined,
                                                "propertyURI": undefined,
                                                "propertyValidators": Immutable.List [],
                                                "rangeValidators": Immutable.List [],
                                                "rangeURI": "xsd:string",
                                                "regexValidators": Immutable.List [],
                                                "recommendedVariable": false,
                                                "required": false,
                                                "scale": undefined,
                                                "URL": undefined,
                                                "shownInDetailsView": true,
                                                "shownInInsertView": true,
                                                "shownInUpdateView": true,
                                                "visible": true,
                                                "dataType": Immutable.Record {
                                                  "conceptURI": undefined,
                                                  "display": "Text",
                                                  "name": "string",
                                                  "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                  "alternateRangeURI": "xsd:string",
                                                  "shortDisplay": "String",
                                                  "lookupSchema": undefined,
                                                  "lookupQuery": undefined,
                                                },
                                                "lookupQueryValue": undefined,
                                                "lookupType": Immutable.Record {
                                                  "conceptURI": undefined,
                                                  "display": "Lookup",
                                                  "name": "lookup",
                                                  "rangeURI": "xsd:string",
                                                  "alternateRangeURI": undefined,
                                                  "shortDisplay": undefined,
                                                  "lookupSchema": undefined,
                                                  "lookupQuery": undefined,
                                                },
                                                "original": Object {
                                                  "conceptURI": undefined,
                                                  "dataType": Immutable.Record {
                                                    "conceptURI": undefined,
                                                    "display": "Text",
                                                    "name": "string",
                                                    "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                    "alternateRangeURI": "xsd:string",
                                                    "shortDisplay": "String",
                                                    "lookupSchema": undefined,
                                                    "lookupQuery": undefined,
                                                  },
                                                  "rangeURI": undefined,
                                                },
                                                "updatedField": false,
                                                "isPrimaryKey": false,
                                                "lockType": "NotLocked",
                                                "wrappedColumnName": undefined,
                                              },
                                              Immutable.Record {
                                                "conceptURI": undefined,
                                                "conditionalFormats": Immutable.List [],
                                                "defaultScale": undefined,
                                                "defaultValueType": undefined,
                                                "defaultValue": undefined,
                                                "defaultDisplayValue": undefined,
                                                "description": undefined,
                                                "dimension": undefined,
                                                "excludeFromShifting": false,
                                                "format": undefined,
                                                "hidden": false,
                                                "importAliases": undefined,
                                                "label": undefined,
                                                "lookupContainer": undefined,
                                                "lookupQuery": undefined,
                                                "lookupSchema": undefined,
                                                "lookupValidator": undefined,
                                                "measure": undefined,
                                                "mvEnabled": false,
                                                "name": "field2",
                                                "PHI": undefined,
                                                "primaryKey": undefined,
                                                "propertyId": undefined,
                                                "propertyURI": undefined,
                                                "propertyValidators": Immutable.List [],
                                                "rangeValidators": Immutable.List [],
                                                "rangeURI": "xsd:int",
                                                "regexValidators": Immutable.List [],
                                                "recommendedVariable": false,
                                                "required": false,
                                                "scale": undefined,
                                                "URL": undefined,
                                                "shownInDetailsView": true,
                                                "shownInInsertView": true,
                                                "shownInUpdateView": true,
                                                "visible": true,
                                                "dataType": Immutable.Record {
                                                  "conceptURI": undefined,
                                                  "display": "Integer",
                                                  "name": "int",
                                                  "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                                  "alternateRangeURI": "xsd:int",
                                                  "shortDisplay": undefined,
                                                  "lookupSchema": undefined,
                                                  "lookupQuery": undefined,
                                                },
                                                "lookupQueryValue": undefined,
                                                "lookupType": Immutable.Record {
                                                  "conceptURI": undefined,
                                                  "display": "Lookup",
                                                  "name": "lookup",
                                                  "rangeURI": "xsd:int",
                                                  "alternateRangeURI": undefined,
                                                  "shortDisplay": undefined,
                                                  "lookupSchema": undefined,
                                                  "lookupQuery": undefined,
                                                },
                                                "original": Object {
                                                  "conceptURI": undefined,
                                                  "dataType": Immutable.Record {
                                                    "conceptURI": undefined,
                                                    "display": "Integer",
                                                    "name": "int",
                                                    "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                                    "alternateRangeURI": "xsd:int",
                                                    "shortDisplay": undefined,
                                                    "lookupSchema": undefined,
                                                    "lookupQuery": undefined,
                                                  },
                                                  "rangeURI": undefined,
                                                },
                                                "updatedField": false,
                                                "isPrimaryKey": false,
                                                "lockType": "NotLocked",
                                                "wrappedColumnName": undefined,
                                              },
                                              Immutable.Record {
                                                "conceptURI": undefined,
                                                "conditionalFormats": Immutable.List [],
                                                "defaultScale": undefined,
                                                "defaultValueType": undefined,
                                                "defaultValue": undefined,
                                                "defaultDisplayValue": undefined,
                                                "description": undefined,
                                                "dimension": undefined,
                                                "excludeFromShifting": false,
                                                "format": undefined,
                                                "hidden": false,
                                                "importAliases": undefined,
                                                "label": undefined,
                                                "lookupContainer": undefined,
                                                "lookupQuery": undefined,
                                                "lookupSchema": undefined,
                                                "lookupValidator": undefined,
                                                "measure": undefined,
                                                "mvEnabled": false,
                                                "name": "field3",
                                                "PHI": undefined,
                                                "primaryKey": undefined,
                                                "propertyId": undefined,
                                                "propertyURI": undefined,
                                                "propertyValidators": Immutable.List [],
                                                "rangeValidators": Immutable.List [],
                                                "rangeURI": "xsd:dateTime",
                                                "regexValidators": Immutable.List [],
                                                "recommendedVariable": false,
                                                "required": false,
                                                "scale": undefined,
                                                "URL": undefined,
                                                "shownInDetailsView": true,
                                                "shownInInsertView": true,
                                                "shownInUpdateView": true,
                                                "visible": true,
                                                "dataType": Immutable.Record {
                                                  "conceptURI": undefined,
                                                  "display": "Date Time",
                                                  "name": "dateTime",
                                                  "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                                                  "alternateRangeURI": "xsd:dateTime",
                                                  "shortDisplay": undefined,
                                                  "lookupSchema": undefined,
                                                  "lookupQuery": undefined,
                                                },
                                                "lookupQueryValue": undefined,
                                                "lookupType": Immutable.Record {
                                                  "conceptURI": undefined,
                                                  "display": "Lookup",
                                                  "name": "lookup",
                                                  "rangeURI": "xsd:dateTime",
                                                  "alternateRangeURI": undefined,
                                                  "shortDisplay": undefined,
                                                  "lookupSchema": undefined,
                                                  "lookupQuery": undefined,
                                                },
                                                "original": Object {
                                                  "conceptURI": undefined,
                                                  "dataType": Immutable.Record {
                                                    "conceptURI": undefined,
                                                    "display": "Date Time",
                                                    "name": "dateTime",
                                                    "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                                                    "alternateRangeURI": "xsd:dateTime",
                                                    "shortDisplay": undefined,
                                                    "lookupSchema": undefined,
                                                    "lookupQuery": undefined,
                                                  },
                                                  "rangeURI": undefined,
                                                },
                                                "updatedField": false,
                                                "isPrimaryKey": false,
                                                "lockType": "NotLocked",
                                                "wrappedColumnName": undefined,
                                              },
                                            ],
                                            "indices": Immutable.List [],
                                            "domainException": undefined,
                                            "mandatoryFieldNames": Immutable.List [],
                                            "reservedFieldNames": Immutable.List [],
                                            "newDesignFields": undefined,
                                            "instructions": undefined,
                                          },
                                        ],
                                        "editableResults": true,
                                        "editableRuns": true,
                                        "exception": undefined,
                                        "metadataInputFormatHelp": undefined,
                                        "moduleTransformScripts": undefined,
                                        "name": "Test Assay Protocol",
                                        "plateMetadata": undefined,
                                        "protocolId": 1,
                                        "protocolParameters": undefined,
                                        "protocolTransformScripts": undefined,
                                        "providerName": undefined,
                                        "saveScriptFiles": false,
                                        "selectedDetectionMethod": undefined,
                                        "selectedMetadataInputFormat": undefined,
                                        "selectedPlateTemplate": undefined,
                                        "qcEnabled": undefined,
                                      }
                                    }
                                    onChange={[Function]}
                                  >
                                    <AssayPropertiesInput
                                      appPropertiesOnly={false}
                                      helpTipBody={[Function]}
                                      label="Editable Results"
                                    >
                                      <Row
                                        bsClass="row"
                                        className="margin-top"
                                        componentClass="div"
                                      >
                                        <div
                                          className="margin-top row"
                                        >
                                          <Col
                                            bsClass="col"
                                            componentClass="div"
                                            lg={4}
                                            xs={3}
                                          >
                                            <div
                                              className="col-lg-4 col-xs-3"
                                            >
                                              Editable 
                                              <span
                                                className="domain-no-wrap"
                                              >
                                                Results
                                                <LabelHelpTip
                                                  body={[Function]}
                                                  customStyle={Object {}}
                                                  id="tooltip"
                                                  size="1x"
                                                  title="Editable Results"
                                                >
                                                  <span
                                                    className="label-help-target"
                                                    onMouseOut={[Function]}
                                                    onMouseOver={[Function]}
                                                  >
                                                    <FontAwesomeIcon
                                                      border={false}
                                                      className="label-help-icon"
                                                      fixedWidth={false}
                                                      flip={null}
                                                      icon={
                                                        Object {
                                                          "icon": Array [
                                                            512,
                                                            512,
                                                            Array [],
                                                            "f059",
                                                            "M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z",
                                                          ],
                                                          "iconName": "question-circle",
                                                          "prefix": "fas",
                                                        }
                                                      }
                                                      inverse={false}
                                                      listItem={false}
                                                      mask={null}
                                                      pull={null}
                                                      pulse={false}
                                                      rotation={null}
                                                      size="1x"
                                                      spin={false}
                                                      style={Object {}}
                                                      symbol={false}
                                                      title=""
                                                      transform={null}
                                                    >
                                                      <svg
                                                        aria-hidden="true"
                                                        className="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                                                        data-icon="question-circle"
                                                        data-prefix="fas"
                                                        focusable="false"
                                                        role="img"
                                                        style={Object {}}
                                                        viewBox="0 0 512 512"
                                                        xmlns="http://www.w3.org/2000/svg"
                                                      >
                                                        <path
                                                          d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                          fill="currentColor"
                                                          style={Object {}}
                                                        />
                                                      </svg>
                                                    </FontAwesomeIcon>
                                                    <Overlay
                                                      animation={[Function]}
                                                      placement="right"
                                                      rootClose={false}
                                                      show={false}
                                                      target={
                                                        <span
                                                          class="label-help-target"
                                                        >
                                                          <svg
                                                            aria-hidden="true"
                                                            class="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                                                            data-icon="question-circle"
                                                            data-prefix="fas"
                                                            focusable="false"
                                                            role="img"
                                                            viewBox="0 0 512 512"
                                                            xmlns="http://www.w3.org/2000/svg"
                                                          >
                                                            <path
                                                              d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                              fill="currentColor"
                                                            />
                                                          </svg>
                                                        </span>
                                                      }
                                                    >
                                                      <Overlay
                                                        placement="right"
                                                        rootClose={false}
                                                        show={false}
                                                        target={
                                                          <span
                                                            class="label-help-target"
                                                          >
                                                            <svg
                                                              aria-hidden="true"
                                                              class="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                                                              data-icon="question-circle"
                                                              data-prefix="fas"
                                                              focusable="false"
                                                              role="img"
                                                              viewBox="0 0 512 512"
                                                              xmlns="http://www.w3.org/2000/svg"
                                                            >
                                                              <path
                                                                d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                                fill="currentColor"
                                                              />
                                                            </svg>
                                                          </span>
                                                        }
                                                        transition={[Function]}
                                                      />
                                                    </Overlay>
                                                  </span>
                                                </LabelHelpTip>
                                              </span>
                                            </div>
                                          </Col>
                                          <Col
                                            bsClass="col"
                                            componentClass="div"
                                            lg={8}
                                            xs={9}
                                          >
                                            <div
                                              className="col-lg-8 col-xs-9"
                                            >
                                              <input
                                                checked={true}
                                                id="assay-design-editableResults"
                                                onChange={[Function]}
                                                type="checkbox"
                                              />
                                            </div>
                                          </Col>
                                        </div>
                                      </Row>
                                    </AssayPropertiesInput>
                                  </EditableResultsInput>
                                </div>
                              </div>
                            </Col>
                            <Col
                              bsClass="col"
                              componentClass="div"
                              lg={6}
                              xs={12}
                            >
                              <div
                                className="col-lg-6 col-xs-12"
                              >
                                <div
                                  className="domain-field-padding-bottom"
                                >
                                  <SectionHeading
                                    title="Import Settings"
                                  >
                                    <Row
                                      bsClass="row"
                                      componentClass="div"
                                    >
                                      <div
                                        className="row"
                                      >
                                        <Col
                                          bsClass="col"
                                          componentClass="div"
                                          xs={12}
                                        >
                                          <div
                                            className="col-xs-12"
                                          >
                                            <div
                                              className="domain-field-section-heading"
                                            >
                                              Import Settings
                                            </div>
                                          </div>
                                        </Col>
                                      </div>
                                    </Row>
                                  </SectionHeading>
                                  <AutoCopyDataInput
                                    model={
                                      Immutable.Record {
                                        "allowBackgroundUpload": true,
                                        "allowEditableResults": true,
                                        "allowQCStates": false,
                                        "allowSpacesInPath": false,
                                        "allowTransformationScript": false,
                                        "allowPlateMetadata": false,
                                        "autoCopyTargetContainer": undefined,
                                        "autoCopyTargetContainerId": undefined,
                                        "availableDetectionMethods": undefined,
                                        "availableMetadataInputFormats": undefined,
                                        "availablePlateTemplates": undefined,
                                        "backgroundUpload": true,
                                        "description": "My assay protocol for you all to use.",
                                        "domains": Immutable.List [
                                          Immutable.Record {
                                            "name": "Batch Fields",
                                            "container": undefined,
                                            "description": undefined,
                                            "domainURI": undefined,
                                            "domainId": null,
                                            "allowFileLinkProperties": true,
                                            "allowAttachmentProperties": true,
                                            "allowFlagProperties": true,
                                            "showDefaultValueSettings": false,
                                            "defaultDefaultValueType": undefined,
                                            "defaultValueOptions": Immutable.List [],
                                            "fields": Immutable.List [],
                                            "indices": Immutable.List [],
                                            "domainException": undefined,
                                            "mandatoryFieldNames": Immutable.List [],
                                            "reservedFieldNames": Immutable.List [],
                                            "newDesignFields": undefined,
                                            "instructions": undefined,
                                          },
                                          Immutable.Record {
                                            "name": "Sample Fields",
                                            "container": undefined,
                                            "description": undefined,
                                            "domainURI": undefined,
                                            "domainId": null,
                                            "allowFileLinkProperties": true,
                                            "allowAttachmentProperties": true,
                                            "allowFlagProperties": true,
                                            "showDefaultValueSettings": false,
                                            "defaultDefaultValueType": undefined,
                                            "defaultValueOptions": Immutable.List [],
                                            "fields": Immutable.List [
                                              Immutable.Record {
                                                "conceptURI": undefined,
                                                "conditionalFormats": Immutable.List [],
                                                "defaultScale": undefined,
                                                "defaultValueType": undefined,
                                                "defaultValue": undefined,
                                                "defaultDisplayValue": undefined,
                                                "description": undefined,
                                                "dimension": undefined,
                                                "excludeFromShifting": false,
                                                "format": undefined,
                                                "hidden": false,
                                                "importAliases": undefined,
                                                "label": undefined,
                                                "lookupContainer": undefined,
                                                "lookupQuery": undefined,
                                                "lookupSchema": undefined,
                                                "lookupValidator": undefined,
                                                "measure": undefined,
                                                "mvEnabled": false,
                                                "name": "field1",
                                                "PHI": undefined,
                                                "primaryKey": undefined,
                                                "propertyId": undefined,
                                                "propertyURI": undefined,
                                                "propertyValidators": Immutable.List [],
                                                "rangeValidators": Immutable.List [],
                                                "rangeURI": "xsd:string",
                                                "regexValidators": Immutable.List [],
                                                "recommendedVariable": false,
                                                "required": false,
                                                "scale": undefined,
                                                "URL": undefined,
                                                "shownInDetailsView": true,
                                                "shownInInsertView": true,
                                                "shownInUpdateView": true,
                                                "visible": true,
                                                "dataType": Immutable.Record {
                                                  "conceptURI": undefined,
                                                  "display": "Text",
                                                  "name": "string",
                                                  "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                  "alternateRangeURI": "xsd:string",
                                                  "shortDisplay": "String",
                                                  "lookupSchema": undefined,
                                                  "lookupQuery": undefined,
                                                },
                                                "lookupQueryValue": undefined,
                                                "lookupType": Immutable.Record {
                                                  "conceptURI": undefined,
                                                  "display": "Lookup",
                                                  "name": "lookup",
                                                  "rangeURI": "xsd:string",
                                                  "alternateRangeURI": undefined,
                                                  "shortDisplay": undefined,
                                                  "lookupSchema": undefined,
                                                  "lookupQuery": undefined,
                                                },
                                                "original": Object {
                                                  "conceptURI": undefined,
                                                  "dataType": Immutable.Record {
                                                    "conceptURI": undefined,
                                                    "display": "Text",
                                                    "name": "string",
                                                    "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                    "alternateRangeURI": "xsd:string",
                                                    "shortDisplay": "String",
                                                    "lookupSchema": undefined,
                                                    "lookupQuery": undefined,
                                                  },
                                                  "rangeURI": undefined,
                                                },
                                                "updatedField": false,
                                                "isPrimaryKey": false,
                                                "lockType": "NotLocked",
                                                "wrappedColumnName": undefined,
                                              },
                                              Immutable.Record {
                                                "conceptURI": undefined,
                                                "conditionalFormats": Immutable.List [],
                                                "defaultScale": undefined,
                                                "defaultValueType": undefined,
                                                "defaultValue": undefined,
                                                "defaultDisplayValue": undefined,
                                                "description": undefined,
                                                "dimension": undefined,
                                                "excludeFromShifting": false,
                                                "format": undefined,
                                                "hidden": false,
                                                "importAliases": undefined,
                                                "label": undefined,
                                                "lookupContainer": undefined,
                                                "lookupQuery": undefined,
                                                "lookupSchema": undefined,
                                                "lookupValidator": undefined,
                                                "measure": undefined,
                                                "mvEnabled": false,
                                                "name": "field2",
                                                "PHI": undefined,
                                                "primaryKey": undefined,
                                                "propertyId": undefined,
                                                "propertyURI": undefined,
                                                "propertyValidators": Immutable.List [],
                                                "rangeValidators": Immutable.List [],
                                                "rangeURI": "xsd:int",
                                                "regexValidators": Immutable.List [],
                                                "recommendedVariable": false,
                                                "required": false,
                                                "scale": undefined,
                                                "URL": undefined,
                                                "shownInDetailsView": true,
                                                "shownInInsertView": true,
                                                "shownInUpdateView": true,
                                                "visible": true,
                                                "dataType": Immutable.Record {
                                                  "conceptURI": undefined,
                                                  "display": "Integer",
                                                  "name": "int",
                                                  "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                                  "alternateRangeURI": "xsd:int",
                                                  "shortDisplay": undefined,
                                                  "lookupSchema": undefined,
                                                  "lookupQuery": undefined,
                                                },
                                                "lookupQueryValue": undefined,
                                                "lookupType": Immutable.Record {
                                                  "conceptURI": undefined,
                                                  "display": "Lookup",
                                                  "name": "lookup",
                                                  "rangeURI": "xsd:int",
                                                  "alternateRangeURI": undefined,
                                                  "shortDisplay": undefined,
                                                  "lookupSchema": undefined,
                                                  "lookupQuery": undefined,
                                                },
                                                "original": Object {
                                                  "conceptURI": undefined,
                                                  "dataType": Immutable.Record {
                                                    "conceptURI": undefined,
                                                    "display": "Integer",
                                                    "name": "int",
                                                    "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                                    "alternateRangeURI": "xsd:int",
                                                    "shortDisplay": undefined,
                                                    "lookupSchema": undefined,
                                                    "lookupQuery": undefined,
                                                  },
                                                  "rangeURI": undefined,
                                                },
                                                "updatedField": false,
                                                "isPrimaryKey": false,
                                                "lockType": "NotLocked",
                                                "wrappedColumnName": undefined,
                                              },
                                              Immutable.Record {
                                                "conceptURI": undefined,
                                                "conditionalFormats": Immutable.List [],
                                                "defaultScale": undefined,
                                                "defaultValueType": undefined,
                                                "defaultValue": undefined,
                                                "defaultDisplayValue": undefined,
                                                "description": undefined,
                                                "dimension": undefined,
                                                "excludeFromShifting": false,
                                                "format": undefined,
                                                "hidden": false,
                                                "importAliases": undefined,
                                                "label": undefined,
                                                "lookupContainer": undefined,
                                                "lookupQuery": undefined,
                                                "lookupSchema": undefined,
                                                "lookupValidator": undefined,
                                                "measure": undefined,
                                                "mvEnabled": false,
                                                "name": "field3",
                                                "PHI": undefined,
                                                "primaryKey": undefined,
                                                "propertyId": undefined,
                                                "propertyURI": undefined,
                                                "propertyValidators": Immutable.List [],
                                                "rangeValidators": Immutable.List [],
                                                "rangeURI": "xsd:dateTime",
                                                "regexValidators": Immutable.List [],
                                                "recommendedVariable": false,
                                                "required": false,
                                                "scale": undefined,
                                                "URL": undefined,
                                                "shownInDetailsView": true,
                                                "shownInInsertView": true,
                                                "shownInUpdateView": true,
                                                "visible": true,
                                                "dataType": Immutable.Record {
                                                  "conceptURI": undefined,
                                                  "display": "Date Time",
                                                  "name": "dateTime",
                                                  "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                                                  "alternateRangeURI": "xsd:dateTime",
                                                  "shortDisplay": undefined,
                                                  "lookupSchema": undefined,
                                                  "lookupQuery": undefined,
                                                },
                                                "lookupQueryValue": undefined,
                                                "lookupType": Immutable.Record {
                                                  "conceptURI": undefined,
                                                  "display": "Lookup",
                                                  "name": "lookup",
                                                  "rangeURI": "xsd:dateTime",
                                                  "alternateRangeURI": undefined,
                                                  "shortDisplay": undefined,
                                                  "lookupSchema": undefined,
                                                  "lookupQuery": undefined,
                                                },
                                                "original": Object {
                                                  "conceptURI": undefined,
                                                  "dataType": Immutable.Record {
                                                    "conceptURI": undefined,
                                                    "display": "Date Time",
                                                    "name": "dateTime",
                                                    "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                                                    "alternateRangeURI": "xsd:dateTime",
                                                    "shortDisplay": undefined,
                                                    "lookupSchema": undefined,
                                                    "lookupQuery": undefined,
                                                  },
                                                  "rangeURI": undefined,
                                                },
                                                "updatedField": false,
                                                "isPrimaryKey": false,
                                                "lockType": "NotLocked",
                                                "wrappedColumnName": undefined,
                                              },
                                            ],
                                            "indices": Immutable.List [],
                                            "domainException": undefined,
                                            "mandatoryFieldNames": Immutable.List [],
                                            "reservedFieldNames": Immutable.List [],
                                            "newDesignFields": undefined,
                                            "instructions": undefined,
                                          },
                                        ],
                                        "editableResults": true,
                                        "editableRuns": true,
                                        "exception": undefined,
                                        "metadataInputFormatHelp": undefined,
                                        "moduleTransformScripts": undefined,
                                        "name": "Test Assay Protocol",
                                        "plateMetadata": undefined,
                                        "protocolId": 1,
                                        "protocolParameters": undefined,
                                        "protocolTransformScripts": undefined,
                                        "providerName": undefined,
                                        "saveScriptFiles": false,
                                        "selectedDetectionMethod": undefined,
                                        "selectedMetadataInputFormat": undefined,
                                        "selectedPlateTemplate": undefined,
                                        "qcEnabled": undefined,
                                      }
                                    }
                                    onChange={[Function]}
                                  >
                                    <AssayPropertiesInput
                                      helpTipBody={[Function]}
                                      label="Auto-Copy Data to Study"
                                    >
                                      <Row
                                        bsClass="row"
                                        className="margin-top"
                                        componentClass="div"
                                      >
                                        <div
                                          className="margin-top row"
                                        >
                                          <Col
                                            bsClass="col"
                                            componentClass="div"
                                            lg={4}
                                            xs={3}
                                          >
                                            <div
                                              className="col-lg-4 col-xs-3"
                                            >
                                              Auto-Copy Data to 
                                              <span
                                                className="domain-no-wrap"
                                              >
                                                Study
                                                <LabelHelpTip
                                                  body={[Function]}
                                                  customStyle={Object {}}
                                                  id="tooltip"
                                                  size="1x"
                                                  title="Auto-Copy Data to Study"
                                                >
                                                  <span
                                                    className="label-help-target"
                                                    onMouseOut={[Function]}
                                                    onMouseOver={[Function]}
                                                  >
                                                    <FontAwesomeIcon
                                                      border={false}
                                                      className="label-help-icon"
                                                      fixedWidth={false}
                                                      flip={null}
                                                      icon={
                                                        Object {
                                                          "icon": Array [
                                                            512,
                                                            512,
                                                            Array [],
                                                            "f059",
                                                            "M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z",
                                                          ],
                                                          "iconName": "question-circle",
                                                          "prefix": "fas",
                                                        }
                                                      }
                                                      inverse={false}
                                                      listItem={false}
                                                      mask={null}
                                                      pull={null}
                                                      pulse={false}
                                                      rotation={null}
                                                      size="1x"
                                                      spin={false}
                                                      style={Object {}}
                                                      symbol={false}
                                                      title=""
                                                      transform={null}
                                                    >
                                                      <svg
                                                        aria-hidden="true"
                                                        className="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                                                        data-icon="question-circle"
                                                        data-prefix="fas"
                                                        focusable="false"
                                                        role="img"
                                                        style={Object {}}
                                                        viewBox="0 0 512 512"
                                                        xmlns="http://www.w3.org/2000/svg"
                                                      >
                                                        <path
                                                          d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                          fill="currentColor"
                                                          style={Object {}}
                                                        />
                                                      </svg>
                                                    </FontAwesomeIcon>
                                                    <Overlay
                                                      animation={[Function]}
                                                      placement="right"
                                                      rootClose={false}
                                                      show={false}
                                                      target={
                                                        <span
                                                          class="label-help-target"
                                                        >
                                                          <svg
                                                            aria-hidden="true"
                                                            class="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                                                            data-icon="question-circle"
                                                            data-prefix="fas"
                                                            focusable="false"
                                                            role="img"
                                                            viewBox="0 0 512 512"
                                                            xmlns="http://www.w3.org/2000/svg"
                                                          >
                                                            <path
                                                              d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                              fill="currentColor"
                                                            />
                                                          </svg>
                                                        </span>
                                                      }
                                                    >
                                                      <Overlay
                                                        placement="right"
                                                        rootClose={false}
                                                        show={false}
                                                        target={
                                                          <span
                                                            class="label-help-target"
                                                          >
                                                            <svg
                                                              aria-hidden="true"
                                                              class="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                                                              data-icon="question-circle"
                                                              data-prefix="fas"
                                                              focusable="false"
                                                              role="img"
                                                              viewBox="0 0 512 512"
                                                              xmlns="http://www.w3.org/2000/svg"
                                                            >
                                                              <path
                                                                d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                                fill="currentColor"
                                                              />
                                                            </svg>
                                                          </span>
                                                        }
                                                        transition={[Function]}
                                                      />
                                                    </Overlay>
                                                  </span>
                                                </LabelHelpTip>
                                              </span>
                                            </div>
                                          </Col>
                                          <Col
                                            bsClass="col"
                                            componentClass="div"
                                            lg={8}
                                            xs={9}
                                          >
                                            <div
                                              className="col-lg-8 col-xs-9"
                                            >
                                              <LoadingSpinner
                                                msg="Loading..."
                                                wrapperClassName=""
                                              >
                                                <span
                                                  className=""
                                                >
                                                  <i
                                                    aria-hidden="true"
                                                    className="fa fa-spinner fa-pulse"
                                                  />
                                                   
                                                  Loading...
                                                </span>
                                              </LoadingSpinner>
                                            </div>
                                          </Col>
                                        </div>
                                      </Row>
                                    </AssayPropertiesInput>
                                  </AutoCopyDataInput>
                                  <BackgroundUploadInput
                                    model={
                                      Immutable.Record {
                                        "allowBackgroundUpload": true,
                                        "allowEditableResults": true,
                                        "allowQCStates": false,
                                        "allowSpacesInPath": false,
                                        "allowTransformationScript": false,
                                        "allowPlateMetadata": false,
                                        "autoCopyTargetContainer": undefined,
                                        "autoCopyTargetContainerId": undefined,
                                        "availableDetectionMethods": undefined,
                                        "availableMetadataInputFormats": undefined,
                                        "availablePlateTemplates": undefined,
                                        "backgroundUpload": true,
                                        "description": "My assay protocol for you all to use.",
                                        "domains": Immutable.List [
                                          Immutable.Record {
                                            "name": "Batch Fields",
                                            "container": undefined,
                                            "description": undefined,
                                            "domainURI": undefined,
                                            "domainId": null,
                                            "allowFileLinkProperties": true,
                                            "allowAttachmentProperties": true,
                                            "allowFlagProperties": true,
                                            "showDefaultValueSettings": false,
                                            "defaultDefaultValueType": undefined,
                                            "defaultValueOptions": Immutable.List [],
                                            "fields": Immutable.List [],
                                            "indices": Immutable.List [],
                                            "domainException": undefined,
                                            "mandatoryFieldNames": Immutable.List [],
                                            "reservedFieldNames": Immutable.List [],
                                            "newDesignFields": undefined,
                                            "instructions": undefined,
                                          },
                                          Immutable.Record {
                                            "name": "Sample Fields",
                                            "container": undefined,
                                            "description": undefined,
                                            "domainURI": undefined,
                                            "domainId": null,
                                            "allowFileLinkProperties": true,
                                            "allowAttachmentProperties": true,
                                            "allowFlagProperties": true,
                                            "showDefaultValueSettings": false,
                                            "defaultDefaultValueType": undefined,
                                            "defaultValueOptions": Immutable.List [],
                                            "fields": Immutable.List [
                                              Immutable.Record {
                                                "conceptURI": undefined,
                                                "conditionalFormats": Immutable.List [],
                                                "defaultScale": undefined,
                                                "defaultValueType": undefined,
                                                "defaultValue": undefined,
                                                "defaultDisplayValue": undefined,
                                                "description": undefined,
                                                "dimension": undefined,
                                                "excludeFromShifting": false,
                                                "format": undefined,
                                                "hidden": false,
                                                "importAliases": undefined,
                                                "label": undefined,
                                                "lookupContainer": undefined,
                                                "lookupQuery": undefined,
                                                "lookupSchema": undefined,
                                                "lookupValidator": undefined,
                                                "measure": undefined,
                                                "mvEnabled": false,
                                                "name": "field1",
                                                "PHI": undefined,
                                                "primaryKey": undefined,
                                                "propertyId": undefined,
                                                "propertyURI": undefined,
                                                "propertyValidators": Immutable.List [],
                                                "rangeValidators": Immutable.List [],
                                                "rangeURI": "xsd:string",
                                                "regexValidators": Immutable.List [],
                                                "recommendedVariable": false,
                                                "required": false,
                                                "scale": undefined,
                                                "URL": undefined,
                                                "shownInDetailsView": true,
                                                "shownInInsertView": true,
                                                "shownInUpdateView": true,
                                                "visible": true,
                                                "dataType": Immutable.Record {
                                                  "conceptURI": undefined,
                                                  "display": "Text",
                                                  "name": "string",
                                                  "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                  "alternateRangeURI": "xsd:string",
                                                  "shortDisplay": "String",
                                                  "lookupSchema": undefined,
                                                  "lookupQuery": undefined,
                                                },
                                                "lookupQueryValue": undefined,
                                                "lookupType": Immutable.Record {
                                                  "conceptURI": undefined,
                                                  "display": "Lookup",
                                                  "name": "lookup",
                                                  "rangeURI": "xsd:string",
                                                  "alternateRangeURI": undefined,
                                                  "shortDisplay": undefined,
                                                  "lookupSchema": undefined,
                                                  "lookupQuery": undefined,
                                                },
                                                "original": Object {
                                                  "conceptURI": undefined,
                                                  "dataType": Immutable.Record {
                                                    "conceptURI": undefined,
                                                    "display": "Text",
                                                    "name": "string",
                                                    "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                    "alternateRangeURI": "xsd:string",
                                                    "shortDisplay": "String",
                                                    "lookupSchema": undefined,
                                                    "lookupQuery": undefined,
                                                  },
                                                  "rangeURI": undefined,
                                                },
                                                "updatedField": false,
                                                "isPrimaryKey": false,
                                                "lockType": "NotLocked",
                                                "wrappedColumnName": undefined,
                                              },
                                              Immutable.Record {
                                                "conceptURI": undefined,
                                                "conditionalFormats": Immutable.List [],
                                                "defaultScale": undefined,
                                                "defaultValueType": undefined,
                                                "defaultValue": undefined,
                                                "defaultDisplayValue": undefined,
                                                "description": undefined,
                                                "dimension": undefined,
                                                "excludeFromShifting": false,
                                                "format": undefined,
                                                "hidden": false,
                                                "importAliases": undefined,
                                                "label": undefined,
                                                "lookupContainer": undefined,
                                                "lookupQuery": undefined,
                                                "lookupSchema": undefined,
                                                "lookupValidator": undefined,
                                                "measure": undefined,
                                                "mvEnabled": false,
                                                "name": "field2",
                                                "PHI": undefined,
                                                "primaryKey": undefined,
                                                "propertyId": undefined,
                                                "propertyURI": undefined,
                                                "propertyValidators": Immutable.List [],
                                                "rangeValidators": Immutable.List [],
                                                "rangeURI": "xsd:int",
                                                "regexValidators": Immutable.List [],
                                                "recommendedVariable": false,
                                                "required": false,
                                                "scale": undefined,
                                                "URL": undefined,
                                                "shownInDetailsView": true,
                                                "shownInInsertView": true,
                                                "shownInUpdateView": true,
                                                "visible": true,
                                                "dataType": Immutable.Record {
                                                  "conceptURI": undefined,
                                                  "display": "Integer",
                                                  "name": "int",
                                                  "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                                  "alternateRangeURI": "xsd:int",
                                                  "shortDisplay": undefined,
                                                  "lookupSchema": undefined,
                                                  "lookupQuery": undefined,
                                                },
                                                "lookupQueryValue": undefined,
                                                "lookupType": Immutable.Record {
                                                  "conceptURI": undefined,
                                                  "display": "Lookup",
                                                  "name": "lookup",
                                                  "rangeURI": "xsd:int",
                                                  "alternateRangeURI": undefined,
                                                  "shortDisplay": undefined,
                                                  "lookupSchema": undefined,
                                                  "lookupQuery": undefined,
                                                },
                                                "original": Object {
                                                  "conceptURI": undefined,
                                                  "dataType": Immutable.Record {
                                                    "conceptURI": undefined,
                                                    "display": "Integer",
                                                    "name": "int",
                                                    "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                                    "alternateRangeURI": "xsd:int",
                                                    "shortDisplay": undefined,
                                                    "lookupSchema": undefined,
                                                    "lookupQuery": undefined,
                                                  },
                                                  "rangeURI": undefined,
                                                },
                                                "updatedField": false,
                                                "isPrimaryKey": false,
                                                "lockType": "NotLocked",
                                                "wrappedColumnName": undefined,
                                              },
                                              Immutable.Record {
                                                "conceptURI": undefined,
                                                "conditionalFormats": Immutable.List [],
                                                "defaultScale": undefined,
                                                "defaultValueType": undefined,
                                                "defaultValue": undefined,
                                                "defaultDisplayValue": undefined,
                                                "description": undefined,
                                                "dimension": undefined,
                                                "excludeFromShifting": false,
                                                "format": undefined,
                                                "hidden": false,
                                                "importAliases": undefined,
                                                "label": undefined,
                                                "lookupContainer": undefined,
                                                "lookupQuery": undefined,
                                                "lookupSchema": undefined,
                                                "lookupValidator": undefined,
                                                "measure": undefined,
                                                "mvEnabled": false,
                                                "name": "field3",
                                                "PHI": undefined,
                                                "primaryKey": undefined,
                                                "propertyId": undefined,
                                                "propertyURI": undefined,
                                                "propertyValidators": Immutable.List [],
                                                "rangeValidators": Immutable.List [],
                                                "rangeURI": "xsd:dateTime",
                                                "regexValidators": Immutable.List [],
                                                "recommendedVariable": false,
                                                "required": false,
                                                "scale": undefined,
                                                "URL": undefined,
                                                "shownInDetailsView": true,
                                                "shownInInsertView": true,
                                                "shownInUpdateView": true,
                                                "visible": true,
                                                "dataType": Immutable.Record {
                                                  "conceptURI": undefined,
                                                  "display": "Date Time",
                                                  "name": "dateTime",
                                                  "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                                                  "alternateRangeURI": "xsd:dateTime",
                                                  "shortDisplay": undefined,
                                                  "lookupSchema": undefined,
                                                  "lookupQuery": undefined,
                                                },
                                                "lookupQueryValue": undefined,
                                                "lookupType": Immutable.Record {
                                                  "conceptURI": undefined,
                                                  "display": "Lookup",
                                                  "name": "lookup",
                                                  "rangeURI": "xsd:dateTime",
                                                  "alternateRangeURI": undefined,
                                                  "shortDisplay": undefined,
                                                  "lookupSchema": undefined,
                                                  "lookupQuery": undefined,
                                                },
                                                "original": Object {
                                                  "conceptURI": undefined,
                                                  "dataType": Immutable.Record {
                                                    "conceptURI": undefined,
                                                    "display": "Date Time",
                                                    "name": "dateTime",
                                                    "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                                                    "alternateRangeURI": "xsd:dateTime",
                                                    "shortDisplay": undefined,
                                                    "lookupSchema": undefined,
                                                    "lookupQuery": undefined,
                                                  },
                                                  "rangeURI": undefined,
                                                },
                                                "updatedField": false,
                                                "isPrimaryKey": false,
                                                "lockType": "NotLocked",
                                                "wrappedColumnName": undefined,
                                              },
                                            ],
                                            "indices": Immutable.List [],
                                            "domainException": undefined,
                                            "mandatoryFieldNames": Immutable.List [],
                                            "reservedFieldNames": Immutable.List [],
                                            "newDesignFields": undefined,
                                            "instructions": undefined,
                                          },
                                        ],
                                        "editableResults": true,
                                        "editableRuns": true,
                                        "exception": undefined,
                                        "metadataInputFormatHelp": undefined,
                                        "moduleTransformScripts": undefined,
                                        "name": "Test Assay Protocol",
                                        "plateMetadata": undefined,
                                        "protocolId": 1,
                                        "protocolParameters": undefined,
                                        "protocolTransformScripts": undefined,
                                        "providerName": undefined,
                                        "saveScriptFiles": false,
                                        "selectedDetectionMethod": undefined,
                                        "selectedMetadataInputFormat": undefined,
                                        "selectedPlateTemplate": undefined,
                                        "qcEnabled": undefined,
                                      }
                                    }
                                    onChange={[Function]}
                                  >
                                    <AssayPropertiesInput
                                      helpTipBody={[Function]}
                                      label="Import in Background"
                                    >
                                      <Row
                                        bsClass="row"
                                        className="margin-top"
                                        componentClass="div"
                                      >
                                        <div
                                          className="margin-top row"
                                        >
                                          <Col
                                            bsClass="col"
                                            componentClass="div"
                                            lg={4}
                                            xs={3}
                                          >
                                            <div
                                              className="col-lg-4 col-xs-3"
                                            >
                                              Import in 
                                              <span
                                                className="domain-no-wrap"
                                              >
                                                Background
                                                <LabelHelpTip
                                                  body={[Function]}
                                                  customStyle={Object {}}
                                                  id="tooltip"
                                                  size="1x"
                                                  title="Import in Background"
                                                >
                                                  <span
                                                    className="label-help-target"
                                                    onMouseOut={[Function]}
                                                    onMouseOver={[Function]}
                                                  >
                                                    <FontAwesomeIcon
                                                      border={false}
                                                      className="label-help-icon"
                                                      fixedWidth={false}
                                                      flip={null}
                                                      icon={
                                                        Object {
                                                          "icon": Array [
                                                            512,
                                                            512,
                                                            Array [],
                                                            "f059",
                                                            "M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z",
                                                          ],
                                                          "iconName": "question-circle",
                                                          "prefix": "fas",
                                                        }
                                                      }
                                                      inverse={false}
                                                      listItem={false}
                                                      mask={null}
                                                      pull={null}
                                                      pulse={false}
                                                      rotation={null}
                                                      size="1x"
                                                      spin={false}
                                                      style={Object {}}
                                                      symbol={false}
                                                      title=""
                                                      transform={null}
                                                    >
                                                      <svg
                                                        aria-hidden="true"
                                                        className="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                                                        data-icon="question-circle"
                                                        data-prefix="fas"
                                                        focusable="false"
                                                        role="img"
                                                        style={Object {}}
                                                        viewBox="0 0 512 512"
                                                        xmlns="http://www.w3.org/2000/svg"
                                                      >
                                                        <path
                                                          d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                          fill="currentColor"
                                                          style={Object {}}
                                                        />
                                                      </svg>
                                                    </FontAwesomeIcon>
                                                    <Overlay
                                                      animation={[Function]}
                                                      placement="right"
                                                      rootClose={false}
                                                      show={false}
                                                      target={
                                                        <span
                                                          class="label-help-target"
                                                        >
                                                          <svg
                                                            aria-hidden="true"
                                                            class="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                                                            data-icon="question-circle"
                                                            data-prefix="fas"
                                                            focusable="false"
                                                            role="img"
                                                            viewBox="0 0 512 512"
                                                            xmlns="http://www.w3.org/2000/svg"
                                                          >
                                                            <path
                                                              d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                              fill="currentColor"
                                                            />
                                                          </svg>
                                                        </span>
                                                      }
                                                    >
                                                      <Overlay
                                                        placement="right"
                                                        rootClose={false}
                                                        show={false}
                                                        target={
                                                          <span
                                                            class="label-help-target"
                                                          >
                                                            <svg
                                                              aria-hidden="true"
                                                              class="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                                                              data-icon="question-circle"
                                                              data-prefix="fas"
                                                              focusable="false"
                                                              role="img"
                                                              viewBox="0 0 512 512"
                                                              xmlns="http://www.w3.org/2000/svg"
                                                            >
                                                              <path
                                                                d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                                fill="currentColor"
                                                              />
                                                            </svg>
                                                          </span>
                                                        }
                                                        transition={[Function]}
                                                      />
                                                    </Overlay>
                                                  </span>
                                                </LabelHelpTip>
                                              </span>
                                            </div>
                                          </Col>
                                          <Col
                                            bsClass="col"
                                            componentClass="div"
                                            lg={8}
                                            xs={9}
                                          >
                                            <div
                                              className="col-lg-8 col-xs-9"
                                            >
                                              <input
                                                checked={true}
                                                id="assay-design-backgroundUpload"
                                                onChange={[Function]}
                                                type="checkbox"
                                              />
                                            </div>
                                          </Col>
                                        </div>
                                      </Row>
                                    </AssayPropertiesInput>
                                  </BackgroundUploadInput>
                                </div>
                              </div>
                            </Col>
                          </form>
                        </Form>
                      </div>
                    </div>
                  </Transition>
                </Collapse>
              </PanelCollapse>
            </PanelBody>
          </div>
        </Panel>
      </Uncontrolled(Panel)>
    </AssayPropertiesPanelImpl>
  </ComponentWithDomainPropertiesPanelCollapse>
  <DomainForm
    controlledCollapse={true}
    domain={
      Immutable.Record {
        "name": "Batch Fields",
        "container": undefined,
        "description": undefined,
        "domainURI": undefined,
        "domainId": null,
        "allowFileLinkProperties": true,
        "allowAttachmentProperties": true,
        "allowFlagProperties": true,
        "showDefaultValueSettings": false,
        "defaultDefaultValueType": undefined,
        "defaultValueOptions": Immutable.List [],
        "fields": Immutable.List [],
        "indices": Immutable.List [],
        "domainException": undefined,
        "mandatoryFieldNames": Immutable.List [],
        "reservedFieldNames": Immutable.List [],
        "newDesignFields": undefined,
        "instructions": undefined,
      }
    }
    domainIndex={0}
    headerPrefix="Test Assay Protocol"
    helpTopic={null}
    initCollapsed={true}
    key="0"
    modelDomains={
      Immutable.List [
        Immutable.Record {
          "name": "Batch Fields",
          "container": undefined,
          "description": undefined,
          "domainURI": undefined,
          "domainId": null,
          "allowFileLinkProperties": true,
          "allowAttachmentProperties": true,
          "allowFlagProperties": true,
          "showDefaultValueSettings": false,
          "defaultDefaultValueType": undefined,
          "defaultValueOptions": Immutable.List [],
          "fields": Immutable.List [],
          "indices": Immutable.List [],
          "domainException": undefined,
          "mandatoryFieldNames": Immutable.List [],
          "reservedFieldNames": Immutable.List [],
          "newDesignFields": undefined,
          "instructions": undefined,
        },
        Immutable.Record {
          "name": "Sample Fields",
          "container": undefined,
          "description": undefined,
          "domainURI": undefined,
          "domainId": null,
          "allowFileLinkProperties": true,
          "allowAttachmentProperties": true,
          "allowFlagProperties": true,
          "showDefaultValueSettings": false,
          "defaultDefaultValueType": undefined,
          "defaultValueOptions": Immutable.List [],
          "fields": Immutable.List [
            Immutable.Record {
              "conceptURI": undefined,
              "conditionalFormats": Immutable.List [],
              "defaultScale": undefined,
              "defaultValueType": undefined,
              "defaultValue": undefined,
              "defaultDisplayValue": undefined,
              "description": undefined,
              "dimension": undefined,
              "excludeFromShifting": false,
              "format": undefined,
              "hidden": false,
              "importAliases": undefined,
              "label": undefined,
              "lookupContainer": undefined,
              "lookupQuery": undefined,
              "lookupSchema": undefined,
              "lookupValidator": undefined,
              "measure": undefined,
              "mvEnabled": false,
              "name": "field1",
              "PHI": undefined,
              "primaryKey": undefined,
              "propertyId": undefined,
              "propertyURI": undefined,
              "propertyValidators": Immutable.List [],
              "rangeValidators": Immutable.List [],
              "rangeURI": "xsd:string",
              "regexValidators": Immutable.List [],
              "recommendedVariable": false,
              "required": false,
              "scale": undefined,
              "URL": undefined,
              "shownInDetailsView": true,
              "shownInInsertView": true,
              "shownInUpdateView": true,
              "visible": true,
              "dataType": Immutable.Record {
                "conceptURI": undefined,
                "display": "Text",
                "name": "string",
                "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                "alternateRangeURI": "xsd:string",
                "shortDisplay": "String",
                "lookupSchema": undefined,
                "lookupQuery": undefined,
              },
              "lookupQueryValue": undefined,
              "lookupType": Immutable.Record {
                "conceptURI": undefined,
                "display": "Lookup",
                "name": "lookup",
                "rangeURI": "xsd:string",
                "alternateRangeURI": undefined,
                "shortDisplay": undefined,
                "lookupSchema": undefined,
                "lookupQuery": undefined,
              },
              "original": Object {
                "conceptURI": undefined,
                "dataType": Immutable.Record {
                  "conceptURI": undefined,
                  "display": "Text",
                  "name": "string",
                  "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                  "alternateRangeURI": "xsd:string",
                  "shortDisplay": "String",
                  "lookupSchema": undefined,
                  "lookupQuery": undefined,
                },
                "rangeURI": undefined,
              },
              "updatedField": false,
              "isPrimaryKey": false,
              "lockType": "NotLocked",
              "wrappedColumnName": undefined,
            },
            Immutable.Record {
              "conceptURI": undefined,
              "conditionalFormats": Immutable.List [],
              "defaultScale": undefined,
              "defaultValueType": undefined,
              "defaultValue": undefined,
              "defaultDisplayValue": undefined,
              "description": undefined,
              "dimension": undefined,
              "excludeFromShifting": false,
              "format": undefined,
              "hidden": false,
              "importAliases": undefined,
              "label": undefined,
              "lookupContainer": undefined,
              "lookupQuery": undefined,
              "lookupSchema": undefined,
              "lookupValidator": undefined,
              "measure": undefined,
              "mvEnabled": false,
              "name": "field2",
              "PHI": undefined,
              "primaryKey": undefined,
              "propertyId": undefined,
              "propertyURI": undefined,
              "propertyValidators": Immutable.List [],
              "rangeValidators": Immutable.List [],
              "rangeURI": "xsd:int",
              "regexValidators": Immutable.List [],
              "recommendedVariable": false,
              "required": false,
              "scale": undefined,
              "URL": undefined,
              "shownInDetailsView": true,
              "shownInInsertView": true,
              "shownInUpdateView": true,
              "visible": true,
              "dataType": Immutable.Record {
                "conceptURI": undefined,
                "display": "Integer",
                "name": "int",
                "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                "alternateRangeURI": "xsd:int",
                "shortDisplay": undefined,
                "lookupSchema": undefined,
                "lookupQuery": undefined,
              },
              "lookupQueryValue": undefined,
              "lookupType": Immutable.Record {
                "conceptURI": undefined,
                "display": "Lookup",
                "name": "lookup",
                "rangeURI": "xsd:int",
                "alternateRangeURI": undefined,
                "shortDisplay": undefined,
                "lookupSchema": undefined,
                "lookupQuery": undefined,
              },
              "original": Object {
                "conceptURI": undefined,
                "dataType": Immutable.Record {
                  "conceptURI": undefined,
                  "display": "Integer",
                  "name": "int",
                  "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                  "alternateRangeURI": "xsd:int",
                  "shortDisplay": undefined,
                  "lookupSchema": undefined,
                  "lookupQuery": undefined,
                },
                "rangeURI": undefined,
              },
              "updatedField": false,
              "isPrimaryKey": false,
              "lockType": "NotLocked",
              "wrappedColumnName": undefined,
            },
            Immutable.Record {
              "conceptURI": undefined,
              "conditionalFormats": Immutable.List [],
              "defaultScale": undefined,
              "defaultValueType": undefined,
              "defaultValue": undefined,
              "defaultDisplayValue": undefined,
              "description": undefined,
              "dimension": undefined,
              "excludeFromShifting": false,
              "format": undefined,
              "hidden": false,
              "importAliases": undefined,
              "label": undefined,
              "lookupContainer": undefined,
              "lookupQuery": undefined,
              "lookupSchema": undefined,
              "lookupValidator": undefined,
              "measure": undefined,
              "mvEnabled": false,
              "name": "field3",
              "PHI": undefined,
              "primaryKey": undefined,
              "propertyId": undefined,
              "propertyURI": undefined,
              "propertyValidators": Immutable.List [],
              "rangeValidators": Immutable.List [],
              "rangeURI": "xsd:dateTime",
              "regexValidators": Immutable.List [],
              "recommendedVariable": false,
              "required": false,
              "scale": undefined,
              "URL": undefined,
              "shownInDetailsView": true,
              "shownInInsertView": true,
              "shownInUpdateView": true,
              "visible": true,
              "dataType": Immutable.Record {
                "conceptURI": undefined,
                "display": "Date Time",
                "name": "dateTime",
                "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                "alternateRangeURI": "xsd:dateTime",
                "shortDisplay": undefined,
                "lookupSchema": undefined,
                "lookupQuery": undefined,
              },
              "lookupQueryValue": undefined,
              "lookupType": Immutable.Record {
                "conceptURI": undefined,
                "display": "Lookup",
                "name": "lookup",
                "rangeURI": "xsd:dateTime",
                "alternateRangeURI": undefined,
                "shortDisplay": undefined,
                "lookupSchema": undefined,
                "lookupQuery": undefined,
              },
              "original": Object {
                "conceptURI": undefined,
                "dataType": Immutable.Record {
                  "conceptURI": undefined,
                  "display": "Date Time",
                  "name": "dateTime",
                  "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                  "alternateRangeURI": "xsd:dateTime",
                  "shortDisplay": undefined,
                  "lookupSchema": undefined,
                  "lookupQuery": undefined,
                },
                "rangeURI": undefined,
              },
              "updatedField": false,
              "isPrimaryKey": false,
              "lockType": "NotLocked",
              "wrappedColumnName": undefined,
            },
          ],
          "indices": Immutable.List [],
          "domainException": undefined,
          "mandatoryFieldNames": Immutable.List [],
          "reservedFieldNames": Immutable.List [],
          "newDesignFields": undefined,
          "instructions": undefined,
        },
      ]
    }
    onChange={[Function]}
    onToggle={[Function]}
    panelStatus="COMPLETE"
    showFilePropertyType={true}
    showInferFromFile={false}
    validate={false}
  >
    <LookupProvider>
      <DomainFormImpl
        appPropertiesOnly={false}
        controlledCollapse={true}
        domain={
          Immutable.Record {
            "name": "Batch Fields",
            "container": undefined,
            "description": undefined,
            "domainURI": undefined,
            "domainId": null,
            "allowFileLinkProperties": true,
            "allowAttachmentProperties": true,
            "allowFlagProperties": true,
            "showDefaultValueSettings": false,
            "defaultDefaultValueType": undefined,
            "defaultValueOptions": Immutable.List [],
            "fields": Immutable.List [],
            "indices": Immutable.List [],
            "domainException": undefined,
            "mandatoryFieldNames": Immutable.List [],
            "reservedFieldNames": Immutable.List [],
            "newDesignFields": undefined,
            "instructions": undefined,
          }
        }
        domainFormDisplayOptions={
          Object {
            "isDragDisabled": false,
            "phiLevelDisabled": false,
            "showAddFieldsButton": true,
            "showRequired": true,
            "showTextOptions": true,
            "showValidators": true,
          }
        }
        domainIndex={0}
        headerPrefix="Test Assay Protocol"
        helpNoun="field designer"
        helpTopic={null}
        initCollapsed={true}
        isNew={false}
        modelDomains={
          Immutable.List [
            Immutable.Record {
              "name": "Batch Fields",
              "container": undefined,
              "description": undefined,
              "domainURI": undefined,
              "domainId": null,
              "allowFileLinkProperties": true,
              "allowAttachmentProperties": true,
              "allowFlagProperties": true,
              "showDefaultValueSettings": false,
              "defaultDefaultValueType": undefined,
              "defaultValueOptions": Immutable.List [],
              "fields": Immutable.List [],
              "indices": Immutable.List [],
              "domainException": undefined,
              "mandatoryFieldNames": Immutable.List [],
              "reservedFieldNames": Immutable.List [],
              "newDesignFields": undefined,
              "instructions": undefined,
            },
            Immutable.Record {
              "name": "Sample Fields",
              "container": undefined,
              "description": undefined,
              "domainURI": undefined,
              "domainId": null,
              "allowFileLinkProperties": true,
              "allowAttachmentProperties": true,
              "allowFlagProperties": true,
              "showDefaultValueSettings": false,
              "defaultDefaultValueType": undefined,
              "defaultValueOptions": Immutable.List [],
              "fields": Immutable.List [
                Immutable.Record {
                  "conceptURI": undefined,
                  "conditionalFormats": Immutable.List [],
                  "defaultScale": undefined,
                  "defaultValueType": undefined,
                  "defaultValue": undefined,
                  "defaultDisplayValue": undefined,
                  "description": undefined,
                  "dimension": undefined,
                  "excludeFromShifting": false,
                  "format": undefined,
                  "hidden": false,
                  "importAliases": undefined,
                  "label": undefined,
                  "lookupContainer": undefined,
                  "lookupQuery": undefined,
                  "lookupSchema": undefined,
                  "lookupValidator": undefined,
                  "measure": undefined,
                  "mvEnabled": false,
                  "name": "field1",
                  "PHI": undefined,
                  "primaryKey": undefined,
                  "propertyId": undefined,
                  "propertyURI": undefined,
                  "propertyValidators": Immutable.List [],
                  "rangeValidators": Immutable.List [],
                  "rangeURI": "xsd:string",
                  "regexValidators": Immutable.List [],
                  "recommendedVariable": false,
                  "required": false,
                  "scale": undefined,
                  "URL": undefined,
                  "shownInDetailsView": true,
                  "shownInInsertView": true,
                  "shownInUpdateView": true,
                  "visible": true,
                  "dataType": Immutable.Record {
                    "conceptURI": undefined,
                    "display": "Text",
                    "name": "string",
                    "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                    "alternateRangeURI": "xsd:string",
                    "shortDisplay": "String",
                    "lookupSchema": undefined,
                    "lookupQuery": undefined,
                  },
                  "lookupQueryValue": undefined,
                  "lookupType": Immutable.Record {
                    "conceptURI": undefined,
                    "display": "Lookup",
                    "name": "lookup",
                    "rangeURI": "xsd:string",
                    "alternateRangeURI": undefined,
                    "shortDisplay": undefined,
                    "lookupSchema": undefined,
                    "lookupQuery": undefined,
                  },
                  "original": Object {
                    "conceptURI": undefined,
                    "dataType": Immutable.Record {
                      "conceptURI": undefined,
                      "display": "Text",
                      "name": "string",
                      "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                      "alternateRangeURI": "xsd:string",
                      "shortDisplay": "String",
                      "lookupSchema": undefined,
                      "lookupQuery": undefined,
                    },
                    "rangeURI": undefined,
                  },
                  "updatedField": false,
                  "isPrimaryKey": false,
                  "lockType": "NotLocked",
                  "wrappedColumnName": undefined,
                },
                Immutable.Record {
                  "conceptURI": undefined,
                  "conditionalFormats": Immutable.List [],
                  "defaultScale": undefined,
                  "defaultValueType": undefined,
                  "defaultValue": undefined,
                  "defaultDisplayValue": undefined,
                  "description": undefined,
                  "dimension": undefined,
                  "excludeFromShifting": false,
                  "format": undefined,
                  "hidden": false,
                  "importAliases": undefined,
                  "label": undefined,
                  "lookupContainer": undefined,
                  "lookupQuery": undefined,
                  "lookupSchema": undefined,
                  "lookupValidator": undefined,
                  "measure": undefined,
                  "mvEnabled": false,
                  "name": "field2",
                  "PHI": undefined,
                  "primaryKey": undefined,
                  "propertyId": undefined,
                  "propertyURI": undefined,
                  "propertyValidators": Immutable.List [],
                  "rangeValidators": Immutable.List [],
                  "rangeURI": "xsd:int",
                  "regexValidators": Immutable.List [],
                  "recommendedVariable": false,
                  "required": false,
                  "scale": undefined,
                  "URL": undefined,
                  "shownInDetailsView": true,
                  "shownInInsertView": true,
                  "shownInUpdateView": true,
                  "visible": true,
                  "dataType": Immutable.Record {
                    "conceptURI": undefined,
                    "display": "Integer",
                    "name": "int",
                    "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                    "alternateRangeURI": "xsd:int",
                    "shortDisplay": undefined,
                    "lookupSchema": undefined,
                    "lookupQuery": undefined,
                  },
                  "lookupQueryValue": undefined,
                  "lookupType": Immutable.Record {
                    "conceptURI": undefined,
                    "display": "Lookup",
                    "name": "lookup",
                    "rangeURI": "xsd:int",
                    "alternateRangeURI": undefined,
                    "shortDisplay": undefined,
                    "lookupSchema": undefined,
                    "lookupQuery": undefined,
                  },
                  "original": Object {
                    "conceptURI": undefined,
                    "dataType": Immutable.Record {
                      "conceptURI": undefined,
                      "display": "Integer",
                      "name": "int",
                      "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                      "alternateRangeURI": "xsd:int",
                      "shortDisplay": undefined,
                      "lookupSchema": undefined,
                      "lookupQuery": undefined,
                    },
                    "rangeURI": undefined,
                  },
                  "updatedField": false,
                  "isPrimaryKey": false,
                  "lockType": "NotLocked",
                  "wrappedColumnName": undefined,
                },
                Immutable.Record {
                  "conceptURI": undefined,
                  "conditionalFormats": Immutable.List [],
                  "defaultScale": undefined,
                  "defaultValueType": undefined,
                  "defaultValue": undefined,
                  "defaultDisplayValue": undefined,
                  "description": undefined,
                  "dimension": undefined,
                  "excludeFromShifting": false,
                  "format": undefined,
                  "hidden": false,
                  "importAliases": undefined,
                  "label": undefined,
                  "lookupContainer": undefined,
                  "lookupQuery": undefined,
                  "lookupSchema": undefined,
                  "lookupValidator": undefined,
                  "measure": undefined,
                  "mvEnabled": false,
                  "name": "field3",
                  "PHI": undefined,
                  "primaryKey": undefined,
                  "propertyId": undefined,
                  "propertyURI": undefined,
                  "propertyValidators": Immutable.List [],
                  "rangeValidators": Immutable.List [],
                  "rangeURI": "xsd:dateTime",
                  "regexValidators": Immutable.List [],
                  "recommendedVariable": false,
                  "required": false,
                  "scale": undefined,
                  "URL": undefined,
                  "shownInDetailsView": true,
                  "shownInInsertView": true,
                  "shownInUpdateView": true,
                  "visible": true,
                  "dataType": Immutable.Record {
                    "conceptURI": undefined,
                    "display": "Date Time",
                    "name": "dateTime",
                    "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                    "alternateRangeURI": "xsd:dateTime",
                    "shortDisplay": undefined,
                    "lookupSchema": undefined,
                    "lookupQuery": undefined,
                  },
                  "lookupQueryValue": undefined,
                  "lookupType": Immutable.Record {
                    "conceptURI": undefined,
                    "display": "Lookup",
                    "name": "lookup",
                    "rangeURI": "xsd:dateTime",
                    "alternateRangeURI": undefined,
                    "shortDisplay": undefined,
                    "lookupSchema": undefined,
                    "lookupQuery": undefined,
                  },
                  "original": Object {
                    "conceptURI": undefined,
                    "dataType": Immutable.Record {
                      "conceptURI": undefined,
                      "display": "Date Time",
                      "name": "dateTime",
                      "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                      "alternateRangeURI": "xsd:dateTime",
                      "shortDisplay": undefined,
                      "lookupSchema": undefined,
                      "lookupQuery": undefined,
                    },
                    "rangeURI": undefined,
                  },
                  "updatedField": false,
                  "isPrimaryKey": false,
                  "lockType": "NotLocked",
                  "wrappedColumnName": undefined,
                },
              ],
              "indices": Immutable.List [],
              "domainException": undefined,
              "mandatoryFieldNames": Immutable.List [],
              "reservedFieldNames": Immutable.List [],
              "newDesignFields": undefined,
              "instructions": undefined,
            },
          ]
        }
        onChange={[Function]}
        onToggle={[Function]}
        panelStatus="COMPLETE"
        showFilePropertyType={true}
        showHeader={true}
        showInferFromFile={false}
        successBsStyle="success"
        validate={false}
      >
        <Uncontrolled(Panel)
          className="domain-form-panel"
          expanded={false}
          onToggle={[Function]}
        >
          <Panel
            bsClass="panel"
            bsStyle="default"
            className="domain-form-panel"
            expanded={false}
            onToggle={[Function]}
          >
            <div
              className="domain-form-panel panel panel-default"
            >
              <CollapsiblePanelHeader
                collapsed={true}
                controlledCollapse={true}
                id="domainpropertiesrow-Batch-Fields-hdr"
                isValid={true}
                panelStatus="COMPLETE"
                title="Batch Fields"
                togglePanel={[Function]}
              >
                <PanelHeading
                  bsClass="panel"
                  className="domain-panel-header domain-heading-collapsible domain-panel-header-collapsed"
                  componentClass="div"
                  id="domainpropertiesrow-Batch-Fields-hdr"
                  onClick={[Function]}
                >
                  <div
                    className="domain-panel-header domain-heading-collapsible domain-panel-header-collapsed panel-heading"
                    id="domainpropertiesrow-Batch-Fields-hdr"
                    onClick={[Function]}
                  >
                    <span
                      className="domain-panel-status-icon domain-panel-status-icon-green"
                    >
                      <FontAwesomeIcon
                        border={false}
                        className=""
                        fixedWidth={false}
                        flip={null}
                        icon={
                          Object {
                            "icon": Array [
                              512,
                              512,
                              Array [],
                              "f058",
                              "M504 256c0 136.967-111.033 248-248 248S8 392.967 8 256 119.033 8 256 8s248 111.033 248 248zM227.314 387.314l184-184c6.248-6.248 6.248-16.379 0-22.627l-22.627-22.627c-6.248-6.249-16.379-6.249-22.628 0L216 308.118l-70.059-70.059c-6.248-6.248-16.379-6.248-22.628 0l-22.627 22.627c-6.248 6.248-6.248 16.379 0 22.627l104 104c6.249 6.249 16.379 6.249 22.628.001z",
                            ],
                            "iconName": "check-circle",
                            "prefix": "fas",
                          }
                        }
                        inverse={false}
                        listItem={false}
                        mask={null}
                        pull={null}
                        pulse={false}
                        rotation={null}
                        size={null}
                        spin={false}
                        symbol={false}
                        title=""
                        transform={null}
                      >
                        <svg
                          aria-hidden="true"
                          className="svg-inline--fa fa-check-circle fa-w-16 "
                          data-icon="check-circle"
                          data-prefix="fas"
                          focusable="false"
                          role="img"
                          style={Object {}}
                          viewBox="0 0 512 512"
                          xmlns="http://www.w3.org/2000/svg"
                        >
                          <path
                            d="M504 256c0 136.967-111.033 248-248 248S8 392.967 8 256 119.033 8 256 8s248 111.033 248 248zM227.314 387.314l184-184c6.248-6.248 6.248-16.379 0-22.627l-22.627-22.627c-6.248-6.249-16.379-6.249-22.628 0L216 308.118l-70.059-70.059c-6.248-6.248-16.379-6.248-22.628 0l-22.627 22.627c-6.248 6.248-6.248 16.379 0 22.627l104 104c6.249 6.249 16.379 6.249 22.628.001z"
                            fill="currentColor"
                            style={Object {}}
                          />
                        </svg>
                      </FontAwesomeIcon>
                    </span>
                    <span
                      className="domain-panel-title"
                    >
                      Batch Fields
                    </span>
                    <span
                      className="pull-right"
                    >
                      <FontAwesomeIcon
                        border={false}
                        className="domain-form-expand-btn"
                        fixedWidth={false}
                        flip={null}
                        icon={
                          Object {
                            "icon": Array [
                              448,
                              512,
                              Array [],
                              "f0fe",
                              "M400 32H48C21.5 32 0 53.5 0 80v352c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V80c0-26.5-21.5-48-48-48zm-32 252c0 6.6-5.4 12-12 12h-92v92c0 6.6-5.4 12-12 12h-56c-6.6 0-12-5.4-12-12v-92H92c-6.6 0-12-5.4-12-12v-56c0-6.6 5.4-12 12-12h92v-92c0-6.6 5.4-12 12-12h56c6.6 0 12 5.4 12 12v92h92c6.6 0 12 5.4 12 12v56z",
                            ],
                            "iconName": "plus-square",
                            "prefix": "fas",
                          }
                        }
                        inverse={false}
                        listItem={false}
                        mask={null}
                        pull={null}
                        pulse={false}
                        rotation={null}
                        size="lg"
                        spin={false}
                        symbol={false}
                        title=""
                        transform={null}
                      >
                        <svg
                          aria-hidden="true"
                          className="svg-inline--fa fa-plus-square fa-w-14 fa-lg domain-form-expand-btn"
                          data-icon="plus-square"
                          data-prefix="fas"
                          focusable="false"
                          role="img"
                          style={Object {}}
                          viewBox="0 0 448 512"
                          xmlns="http://www.w3.org/2000/svg"
                        >
                          <path
                            d="M400 32H48C21.5 32 0 53.5 0 80v352c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V80c0-26.5-21.5-48-48-48zm-32 252c0 6.6-5.4 12-12 12h-92v92c0 6.6-5.4 12-12 12h-56c-6.6 0-12-5.4-12-12v-92H92c-6.6 0-12-5.4-12-12v-56c0-6.6 5.4-12 12-12h92v-92c0-6.6 5.4-12 12-12h56c6.6 0 12 5.4 12 12v92h92c6.6 0 12 5.4 12 12v56z"
                            fill="currentColor"
                            style={Object {}}
                          />
                        </svg>
                      </FontAwesomeIcon>
                    </span>
                    <LabelHelpTip
                      body={[Function]}
                      customStyle={
                        Object {
                          "marginLeft": "5px",
                          "verticalAlign": "top",
                        }
                      }
                      id="tooltip"
                      placement="top"
                      size="1x"
                      title="Batch Fields"
                    >
                      <span
                        className="label-help-target"
                        onMouseOut={[Function]}
                        onMouseOver={[Function]}
                      >
                        <FontAwesomeIcon
                          border={false}
                          className="label-help-icon"
                          fixedWidth={false}
                          flip={null}
                          icon={
                            Object {
                              "icon": Array [
                                512,
                                512,
                                Array [],
                                "f059",
                                "M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z",
                              ],
                              "iconName": "question-circle",
                              "prefix": "fas",
                            }
                          }
                          inverse={false}
                          listItem={false}
                          mask={null}
                          pull={null}
                          pulse={false}
                          rotation={null}
                          size="1x"
                          spin={false}
                          style={
                            Object {
                              "marginLeft": "5px",
                              "verticalAlign": "top",
                            }
                          }
                          symbol={false}
                          title=""
                          transform={null}
                        >
                          <svg
                            aria-hidden="true"
                            className="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                            data-icon="question-circle"
                            data-prefix="fas"
                            focusable="false"
                            role="img"
                            style={
                              Object {
                                "marginLeft": "5px",
                                "verticalAlign": "top",
                              }
                            }
                            viewBox="0 0 512 512"
                            xmlns="http://www.w3.org/2000/svg"
                          >
                            <path
                              d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                              fill="currentColor"
                              style={Object {}}
                            />
                          </svg>
                        </FontAwesomeIcon>
                        <Overlay
                          animation={[Function]}
                          placement="top"
                          rootClose={false}
                          show={false}
                          target={
                            <span
                              class="label-help-target"
                            >
                              <svg
                                aria-hidden="true"
                                class="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                                data-icon="question-circle"
                                data-prefix="fas"
                                focusable="false"
                                role="img"
                                style="vertical-align: top; margin-left: 5px;"
                                viewBox="0 0 512 512"
                                xmlns="http://www.w3.org/2000/svg"
                              >
                                <path
                                  d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                  fill="currentColor"
                                />
                              </svg>
                            </span>
                          }
                        >
                          <Overlay
                            placement="top"
                            rootClose={false}
                            show={false}
                            target={
                              <span
                                class="label-help-target"
                              >
                                <svg
                                  aria-hidden="true"
                                  class="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                                  data-icon="question-circle"
                                  data-prefix="fas"
                                  focusable="false"
                                  role="img"
                                  style="vertical-align: top; margin-left: 5px;"
                                  viewBox="0 0 512 512"
                                  xmlns="http://www.w3.org/2000/svg"
                                >
                                  <path
                                    d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                    fill="currentColor"
                                  />
                                </svg>
                              </span>
                            }
                            transition={[Function]}
                          />
                        </Overlay>
                      </span>
                    </LabelHelpTip>
                  </div>
                </PanelHeading>
              </CollapsiblePanelHeader>
              <PanelBody
                bsClass="panel"
                collapsible={true}
              >
                <PanelCollapse
                  bsClass="panel"
                >
                  <Collapse
                    appear={false}
                    dimension="height"
                    getDimensionValue={[Function]}
                    in={false}
                    mountOnEnter={false}
                    timeout={300}
                    unmountOnExit={false}
                  >
                    <Transition
                      appear={false}
                      aria-expanded={null}
                      enter={true}
                      exit={true}
                      in={false}
                      mountOnEnter={false}
                      onEnter={[Function]}
                      onEntered={[Function]}
                      onEntering={[Function]}
                      onExit={[Function]}
                      onExited={[Function]}
                      onExiting={[Function]}
                      timeout={300}
                      unmountOnExit={false}
                    >
                      <div
                        aria-expanded={null}
                        className="panel-collapse collapse"
                      >
                        <div
                          className="panel-body"
                        >
                          <Row
                            bsClass="row"
                            className=""
                            componentClass="div"
                          >
                            <div
                              className="row"
                            >
                              <Col
                                bsClass="col"
                                componentClass="div"
                                xs={12}
                              >
                                <div
                                  className="col-xs-12"
                                />
                              </Col>
                            </div>
                          </Row>
                          <Uncontrolled(Panel)
                            className="domain-form-no-field-panel"
                          >
                            <Panel
                              bsClass="panel"
                              bsStyle="default"
                              className="domain-form-no-field-panel"
                              onToggle={[Function]}
                            >
                              <div
                                className="domain-form-no-field-panel panel panel-default"
                              >
                                No fields created yet. Add some using the button below.
                              </div>
                            </Panel>
                          </Uncontrolled(Panel)>
                          <Row
                            bsClass="row"
                            className="domain-add-field-row"
                            componentClass="div"
                          >
                            <div
                              className="domain-add-field-row row"
                            >
                              <Col
                                bsClass="col"
                                componentClass="div"
                                xs={12}
                              >
                                <div
                                  className="col-xs-12"
                                >
                                  <AddEntityButton
                                    buttonClass="domain-form-add-btn"
                                    containerClass="form-group"
                                    entity="Field"
                                    helperTitle="More Info"
                                    onClick={[Function]}
                                  >
                                    <div
                                      className="form-group"
                                    >
                                      <div
                                        className="domain-form-add-btn"
                                      >
                                        <span
                                          className="container--action-button btn btn-default"
                                          onClick={[Function]}
                                        >
                                          <i
                                            className="fa fa-plus-circle container--addition-icon"
                                          />
                                           Add 
                                          Field
                                        </span>
                                      </div>
                                    </div>
                                  </AddEntityButton>
                                </div>
                              </Col>
                            </div>
                          </Row>
                        </div>
                      </div>
                    </Transition>
                  </Collapse>
                </PanelCollapse>
              </PanelBody>
            </div>
          </Panel>
        </Uncontrolled(Panel)>
      </DomainFormImpl>
    </LookupProvider>
  </DomainForm>
  <DomainForm
    controlledCollapse={true}
    domain={
      Immutable.Record {
        "name": "Sample Fields",
        "container": undefined,
        "description": undefined,
        "domainURI": undefined,
        "domainId": null,
        "allowFileLinkProperties": true,
        "allowAttachmentProperties": true,
        "allowFlagProperties": true,
        "showDefaultValueSettings": false,
        "defaultDefaultValueType": undefined,
        "defaultValueOptions": Immutable.List [],
        "fields": Immutable.List [
          Immutable.Record {
            "conceptURI": undefined,
            "conditionalFormats": Immutable.List [],
            "defaultScale": undefined,
            "defaultValueType": undefined,
            "defaultValue": undefined,
            "defaultDisplayValue": undefined,
            "description": undefined,
            "dimension": undefined,
            "excludeFromShifting": false,
            "format": undefined,
            "hidden": false,
            "importAliases": undefined,
            "label": undefined,
            "lookupContainer": undefined,
            "lookupQuery": undefined,
            "lookupSchema": undefined,
            "lookupValidator": undefined,
            "measure": undefined,
            "mvEnabled": false,
            "name": "field1",
            "PHI": undefined,
            "primaryKey": undefined,
            "propertyId": undefined,
            "propertyURI": undefined,
            "propertyValidators": Immutable.List [],
            "rangeValidators": Immutable.List [],
            "rangeURI": "xsd:string",
            "regexValidators": Immutable.List [],
            "recommendedVariable": false,
            "required": false,
            "scale": undefined,
            "URL": undefined,
            "shownInDetailsView": true,
            "shownInInsertView": true,
            "shownInUpdateView": true,
            "visible": true,
            "dataType": Immutable.Record {
              "conceptURI": undefined,
              "display": "Text",
              "name": "string",
              "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
              "alternateRangeURI": "xsd:string",
              "shortDisplay": "String",
              "lookupSchema": undefined,
              "lookupQuery": undefined,
            },
            "lookupQueryValue": undefined,
            "lookupType": Immutable.Record {
              "conceptURI": undefined,
              "display": "Lookup",
              "name": "lookup",
              "rangeURI": "xsd:string",
              "alternateRangeURI": undefined,
              "shortDisplay": undefined,
              "lookupSchema": undefined,
              "lookupQuery": undefined,
            },
            "original": Object {
              "conceptURI": undefined,
              "dataType": Immutable.Record {
                "conceptURI": undefined,
                "display": "Text",
                "name": "string",
                "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                "alternateRangeURI": "xsd:string",
                "shortDisplay": "String",
                "lookupSchema": undefined,
                "lookupQuery": undefined,
              },
              "rangeURI": undefined,
            },
            "updatedField": false,
            "isPrimaryKey": false,
            "lockType": "NotLocked",
            "wrappedColumnName": undefined,
          },
          Immutable.Record {
            "conceptURI": undefined,
            "conditionalFormats": Immutable.List [],
            "defaultScale": undefined,
            "defaultValueType": undefined,
            "defaultValue": undefined,
            "defaultDisplayValue": undefined,
            "description": undefined,
            "dimension": undefined,
            "excludeFromShifting": false,
            "format": undefined,
            "hidden": false,
            "importAliases": undefined,
            "label": undefined,
            "lookupContainer": undefined,
            "lookupQuery": undefined,
            "lookupSchema": undefined,
            "lookupValidator": undefined,
            "measure": undefined,
            "mvEnabled": false,
            "name": "field2",
            "PHI": undefined,
            "primaryKey": undefined,
            "propertyId": undefined,
            "propertyURI": undefined,
            "propertyValidators": Immutable.List [],
            "rangeValidators": Immutable.List [],
            "rangeURI": "xsd:int",
            "regexValidators": Immutable.List [],
            "recommendedVariable": false,
            "required": false,
            "scale": undefined,
            "URL": undefined,
            "shownInDetailsView": true,
            "shownInInsertView": true,
            "shownInUpdateView": true,
            "visible": true,
            "dataType": Immutable.Record {
              "conceptURI": undefined,
              "display": "Integer",
              "name": "int",
              "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
              "alternateRangeURI": "xsd:int",
              "shortDisplay": undefined,
              "lookupSchema": undefined,
              "lookupQuery": undefined,
            },
            "lookupQueryValue": undefined,
            "lookupType": Immutable.Record {
              "conceptURI": undefined,
              "display": "Lookup",
              "name": "lookup",
              "rangeURI": "xsd:int",
              "alternateRangeURI": undefined,
              "shortDisplay": undefined,
              "lookupSchema": undefined,
              "lookupQuery": undefined,
            },
            "original": Object {
              "conceptURI": undefined,
              "dataType": Immutable.Record {
                "conceptURI": undefined,
                "display": "Integer",
                "name": "int",
                "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                "alternateRangeURI": "xsd:int",
                "shortDisplay": undefined,
                "lookupSchema": undefined,
                "lookupQuery": undefined,
              },
              "rangeURI": undefined,
            },
            "updatedField": false,
            "isPrimaryKey": false,
            "lockType": "NotLocked",
            "wrappedColumnName": undefined,
          },
          Immutable.Record {
            "conceptURI": undefined,
            "conditionalFormats": Immutable.List [],
            "defaultScale": undefined,
            "defaultValueType": undefined,
            "defaultValue": undefined,
            "defaultDisplayValue": undefined,
            "description": undefined,
            "dimension": undefined,
            "excludeFromShifting": false,
            "format": undefined,
            "hidden": false,
            "importAliases": undefined,
            "label": undefined,
            "lookupContainer": undefined,
            "lookupQuery": undefined,
            "lookupSchema": undefined,
            "lookupValidator": undefined,
            "measure": undefined,
            "mvEnabled": false,
            "name": "field3",
            "PHI": undefined,
            "primaryKey": undefined,
            "propertyId": undefined,
            "propertyURI": undefined,
            "propertyValidators": Immutable.List [],
            "rangeValidators": Immutable.List [],
            "rangeURI": "xsd:dateTime",
            "regexValidators": Immutable.List [],
            "recommendedVariable": false,
            "required": false,
            "scale": undefined,
            "URL": undefined,
            "shownInDetailsView": true,
            "shownInInsertView": true,
            "shownInUpdateView": true,
            "visible": true,
            "dataType": Immutable.Record {
              "conceptURI": undefined,
              "display": "Date Time",
              "name": "dateTime",
              "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
              "alternateRangeURI": "xsd:dateTime",
              "shortDisplay": undefined,
              "lookupSchema": undefined,
              "lookupQuery": undefined,
            },
            "lookupQueryValue": undefined,
            "lookupType": Immutable.Record {
              "conceptURI": undefined,
              "display": "Lookup",
              "name": "lookup",
              "rangeURI": "xsd:dateTime",
              "alternateRangeURI": undefined,
              "shortDisplay": undefined,
              "lookupSchema": undefined,
              "lookupQuery": undefined,
            },
            "original": Object {
              "conceptURI": undefined,
              "dataType": Immutable.Record {
                "conceptURI": undefined,
                "display": "Date Time",
                "name": "dateTime",
                "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                "alternateRangeURI": "xsd:dateTime",
                "shortDisplay": undefined,
                "lookupSchema": undefined,
                "lookupQuery": undefined,
              },
              "rangeURI": undefined,
            },
            "updatedField": false,
            "isPrimaryKey": false,
            "lockType": "NotLocked",
            "wrappedColumnName": undefined,
          },
        ],
        "indices": Immutable.List [],
        "domainException": undefined,
        "mandatoryFieldNames": Immutable.List [],
        "reservedFieldNames": Immutable.List [],
        "newDesignFields": undefined,
        "instructions": undefined,
      }
    }
    domainIndex={1}
    headerPrefix="Test Assay Protocol"
    helpTopic={null}
    initCollapsed={true}
    key="1"
    modelDomains={
      Immutable.List [
        Immutable.Record {
          "name": "Batch Fields",
          "container": undefined,
          "description": undefined,
          "domainURI": undefined,
          "domainId": null,
          "allowFileLinkProperties": true,
          "allowAttachmentProperties": true,
          "allowFlagProperties": true,
          "showDefaultValueSettings": false,
          "defaultDefaultValueType": undefined,
          "defaultValueOptions": Immutable.List [],
          "fields": Immutable.List [],
          "indices": Immutable.List [],
          "domainException": undefined,
          "mandatoryFieldNames": Immutable.List [],
          "reservedFieldNames": Immutable.List [],
          "newDesignFields": undefined,
          "instructions": undefined,
        },
        Immutable.Record {
          "name": "Sample Fields",
          "container": undefined,
          "description": undefined,
          "domainURI": undefined,
          "domainId": null,
          "allowFileLinkProperties": true,
          "allowAttachmentProperties": true,
          "allowFlagProperties": true,
          "showDefaultValueSettings": false,
          "defaultDefaultValueType": undefined,
          "defaultValueOptions": Immutable.List [],
          "fields": Immutable.List [
            Immutable.Record {
              "conceptURI": undefined,
              "conditionalFormats": Immutable.List [],
              "defaultScale": undefined,
              "defaultValueType": undefined,
              "defaultValue": undefined,
              "defaultDisplayValue": undefined,
              "description": undefined,
              "dimension": undefined,
              "excludeFromShifting": false,
              "format": undefined,
              "hidden": false,
              "importAliases": undefined,
              "label": undefined,
              "lookupContainer": undefined,
              "lookupQuery": undefined,
              "lookupSchema": undefined,
              "lookupValidator": undefined,
              "measure": undefined,
              "mvEnabled": false,
              "name": "field1",
              "PHI": undefined,
              "primaryKey": undefined,
              "propertyId": undefined,
              "propertyURI": undefined,
              "propertyValidators": Immutable.List [],
              "rangeValidators": Immutable.List [],
              "rangeURI": "xsd:string",
              "regexValidators": Immutable.List [],
              "recommendedVariable": false,
              "required": false,
              "scale": undefined,
              "URL": undefined,
              "shownInDetailsView": true,
              "shownInInsertView": true,
              "shownInUpdateView": true,
              "visible": true,
              "dataType": Immutable.Record {
                "conceptURI": undefined,
                "display": "Text",
                "name": "string",
                "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                "alternateRangeURI": "xsd:string",
                "shortDisplay": "String",
                "lookupSchema": undefined,
                "lookupQuery": undefined,
              },
              "lookupQueryValue": undefined,
              "lookupType": Immutable.Record {
                "conceptURI": undefined,
                "display": "Lookup",
                "name": "lookup",
                "rangeURI": "xsd:string",
                "alternateRangeURI": undefined,
                "shortDisplay": undefined,
                "lookupSchema": undefined,
                "lookupQuery": undefined,
              },
              "original": Object {
                "conceptURI": undefined,
                "dataType": Immutable.Record {
                  "conceptURI": undefined,
                  "display": "Text",
                  "name": "string",
                  "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                  "alternateRangeURI": "xsd:string",
                  "shortDisplay": "String",
                  "lookupSchema": undefined,
                  "lookupQuery": undefined,
                },
                "rangeURI": undefined,
              },
              "updatedField": false,
              "isPrimaryKey": false,
              "lockType": "NotLocked",
              "wrappedColumnName": undefined,
            },
            Immutable.Record {
              "conceptURI": undefined,
              "conditionalFormats": Immutable.List [],
              "defaultScale": undefined,
              "defaultValueType": undefined,
              "defaultValue": undefined,
              "defaultDisplayValue": undefined,
              "description": undefined,
              "dimension": undefined,
              "excludeFromShifting": false,
              "format": undefined,
              "hidden": false,
              "importAliases": undefined,
              "label": undefined,
              "lookupContainer": undefined,
              "lookupQuery": undefined,
              "lookupSchema": undefined,
              "lookupValidator": undefined,
              "measure": undefined,
              "mvEnabled": false,
              "name": "field2",
              "PHI": undefined,
              "primaryKey": undefined,
              "propertyId": undefined,
              "propertyURI": undefined,
              "propertyValidators": Immutable.List [],
              "rangeValidators": Immutable.List [],
              "rangeURI": "xsd:int",
              "regexValidators": Immutable.List [],
              "recommendedVariable": false,
              "required": false,
              "scale": undefined,
              "URL": undefined,
              "shownInDetailsView": true,
              "shownInInsertView": true,
              "shownInUpdateView": true,
              "visible": true,
              "dataType": Immutable.Record {
                "conceptURI": undefined,
                "display": "Integer",
                "name": "int",
                "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                "alternateRangeURI": "xsd:int",
                "shortDisplay": undefined,
                "lookupSchema": undefined,
                "lookupQuery": undefined,
              },
              "lookupQueryValue": undefined,
              "lookupType": Immutable.Record {
                "conceptURI": undefined,
                "display": "Lookup",
                "name": "lookup",
                "rangeURI": "xsd:int",
                "alternateRangeURI": undefined,
                "shortDisplay": undefined,
                "lookupSchema": undefined,
                "lookupQuery": undefined,
              },
              "original": Object {
                "conceptURI": undefined,
                "dataType": Immutable.Record {
                  "conceptURI": undefined,
                  "display": "Integer",
                  "name": "int",
                  "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                  "alternateRangeURI": "xsd:int",
                  "shortDisplay": undefined,
                  "lookupSchema": undefined,
                  "lookupQuery": undefined,
                },
                "rangeURI": undefined,
              },
              "updatedField": false,
              "isPrimaryKey": false,
              "lockType": "NotLocked",
              "wrappedColumnName": undefined,
            },
            Immutable.Record {
              "conceptURI": undefined,
              "conditionalFormats": Immutable.List [],
              "defaultScale": undefined,
              "defaultValueType": undefined,
              "defaultValue": undefined,
              "defaultDisplayValue": undefined,
              "description": undefined,
              "dimension": undefined,
              "excludeFromShifting": false,
              "format": undefined,
              "hidden": false,
              "importAliases": undefined,
              "label": undefined,
              "lookupContainer": undefined,
              "lookupQuery": undefined,
              "lookupSchema": undefined,
              "lookupValidator": undefined,
              "measure": undefined,
              "mvEnabled": false,
              "name": "field3",
              "PHI": undefined,
              "primaryKey": undefined,
              "propertyId": undefined,
              "propertyURI": undefined,
              "propertyValidators": Immutable.List [],
              "rangeValidators": Immutable.List [],
              "rangeURI": "xsd:dateTime",
              "regexValidators": Immutable.List [],
              "recommendedVariable": false,
              "required": false,
              "scale": undefined,
              "URL": undefined,
              "shownInDetailsView": true,
              "shownInInsertView": true,
              "shownInUpdateView": true,
              "visible": true,
              "dataType": Immutable.Record {
                "conceptURI": undefined,
                "display": "Date Time",
                "name": "dateTime",
                "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                "alternateRangeURI": "xsd:dateTime",
                "shortDisplay": undefined,
                "lookupSchema": undefined,
                "lookupQuery": undefined,
              },
              "lookupQueryValue": undefined,
              "lookupType": Immutable.Record {
                "conceptURI": undefined,
                "display": "Lookup",
                "name": "lookup",
                "rangeURI": "xsd:dateTime",
                "alternateRangeURI": undefined,
                "shortDisplay": undefined,
                "lookupSchema": undefined,
                "lookupQuery": undefined,
              },
              "original": Object {
                "conceptURI": undefined,
                "dataType": Immutable.Record {
                  "conceptURI": undefined,
                  "display": "Date Time",
                  "name": "dateTime",
                  "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                  "alternateRangeURI": "xsd:dateTime",
                  "shortDisplay": undefined,
                  "lookupSchema": undefined,
                  "lookupQuery": undefined,
                },
                "rangeURI": undefined,
              },
              "updatedField": false,
              "isPrimaryKey": false,
              "lockType": "NotLocked",
              "wrappedColumnName": undefined,
            },
          ],
          "indices": Immutable.List [],
          "domainException": undefined,
          "mandatoryFieldNames": Immutable.List [],
          "reservedFieldNames": Immutable.List [],
          "newDesignFields": undefined,
          "instructions": undefined,
        },
      ]
    }
    onChange={[Function]}
    onToggle={[Function]}
    panelStatus="COMPLETE"
    showFilePropertyType={false}
    showInferFromFile={false}
    validate={false}
  >
    <LookupProvider>
      <DomainFormImpl
        appPropertiesOnly={false}
        controlledCollapse={true}
        domain={
          Immutable.Record {
            "name": "Sample Fields",
            "container": undefined,
            "description": undefined,
            "domainURI": undefined,
            "domainId": null,
            "allowFileLinkProperties": true,
            "allowAttachmentProperties": true,
            "allowFlagProperties": true,
            "showDefaultValueSettings": false,
            "defaultDefaultValueType": undefined,
            "defaultValueOptions": Immutable.List [],
            "fields": Immutable.List [
              Immutable.Record {
                "conceptURI": undefined,
                "conditionalFormats": Immutable.List [],
                "defaultScale": undefined,
                "defaultValueType": undefined,
                "defaultValue": undefined,
                "defaultDisplayValue": undefined,
                "description": undefined,
                "dimension": undefined,
                "excludeFromShifting": false,
                "format": undefined,
                "hidden": false,
                "importAliases": undefined,
                "label": undefined,
                "lookupContainer": undefined,
                "lookupQuery": undefined,
                "lookupSchema": undefined,
                "lookupValidator": undefined,
                "measure": undefined,
                "mvEnabled": false,
                "name": "field1",
                "PHI": undefined,
                "primaryKey": undefined,
                "propertyId": undefined,
                "propertyURI": undefined,
                "propertyValidators": Immutable.List [],
                "rangeValidators": Immutable.List [],
                "rangeURI": "xsd:string",
                "regexValidators": Immutable.List [],
                "recommendedVariable": false,
                "required": false,
                "scale": undefined,
                "URL": undefined,
                "shownInDetailsView": true,
                "shownInInsertView": true,
                "shownInUpdateView": true,
                "visible": true,
                "dataType": Immutable.Record {
                  "conceptURI": undefined,
                  "display": "Text",
                  "name": "string",
                  "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                  "alternateRangeURI": "xsd:string",
                  "shortDisplay": "String",
                  "lookupSchema": undefined,
                  "lookupQuery": undefined,
                },
                "lookupQueryValue": undefined,
                "lookupType": Immutable.Record {
                  "conceptURI": undefined,
                  "display": "Lookup",
                  "name": "lookup",
                  "rangeURI": "xsd:string",
                  "alternateRangeURI": undefined,
                  "shortDisplay": undefined,
                  "lookupSchema": undefined,
                  "lookupQuery": undefined,
                },
                "original": Object {
                  "conceptURI": undefined,
                  "dataType": Immutable.Record {
                    "conceptURI": undefined,
                    "display": "Text",
                    "name": "string",
                    "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                    "alternateRangeURI": "xsd:string",
                    "shortDisplay": "String",
                    "lookupSchema": undefined,
                    "lookupQuery": undefined,
                  },
                  "rangeURI": undefined,
                },
                "updatedField": false,
                "isPrimaryKey": false,
                "lockType": "NotLocked",
                "wrappedColumnName": undefined,
              },
              Immutable.Record {
                "conceptURI": undefined,
                "conditionalFormats": Immutable.List [],
                "defaultScale": undefined,
                "defaultValueType": undefined,
                "defaultValue": undefined,
                "defaultDisplayValue": undefined,
                "description": undefined,
                "dimension": undefined,
                "excludeFromShifting": false,
                "format": undefined,
                "hidden": false,
                "importAliases": undefined,
                "label": undefined,
                "lookupContainer": undefined,
                "lookupQuery": undefined,
                "lookupSchema": undefined,
                "lookupValidator": undefined,
                "measure": undefined,
                "mvEnabled": false,
                "name": "field2",
                "PHI": undefined,
                "primaryKey": undefined,
                "propertyId": undefined,
                "propertyURI": undefined,
                "propertyValidators": Immutable.List [],
                "rangeValidators": Immutable.List [],
                "rangeURI": "xsd:int",
                "regexValidators": Immutable.List [],
                "recommendedVariable": false,
                "required": false,
                "scale": undefined,
                "URL": undefined,
                "shownInDetailsView": true,
                "shownInInsertView": true,
                "shownInUpdateView": true,
                "visible": true,
                "dataType": Immutable.Record {
                  "conceptURI": undefined,
                  "display": "Integer",
                  "name": "int",
                  "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                  "alternateRangeURI": "xsd:int",
                  "shortDisplay": undefined,
                  "lookupSchema": undefined,
                  "lookupQuery": undefined,
                },
                "lookupQueryValue": undefined,
                "lookupType": Immutable.Record {
                  "conceptURI": undefined,
                  "display": "Lookup",
                  "name": "lookup",
                  "rangeURI": "xsd:int",
                  "alternateRangeURI": undefined,
                  "shortDisplay": undefined,
                  "lookupSchema": undefined,
                  "lookupQuery": undefined,
                },
                "original": Object {
                  "conceptURI": undefined,
                  "dataType": Immutable.Record {
                    "conceptURI": undefined,
                    "display": "Integer",
                    "name": "int",
                    "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                    "alternateRangeURI": "xsd:int",
                    "shortDisplay": undefined,
                    "lookupSchema": undefined,
                    "lookupQuery": undefined,
                  },
                  "rangeURI": undefined,
                },
                "updatedField": false,
                "isPrimaryKey": false,
                "lockType": "NotLocked",
                "wrappedColumnName": undefined,
              },
              Immutable.Record {
                "conceptURI": undefined,
                "conditionalFormats": Immutable.List [],
                "defaultScale": undefined,
                "defaultValueType": undefined,
                "defaultValue": undefined,
                "defaultDisplayValue": undefined,
                "description": undefined,
                "dimension": undefined,
                "excludeFromShifting": false,
                "format": undefined,
                "hidden": false,
                "importAliases": undefined,
                "label": undefined,
                "lookupContainer": undefined,
                "lookupQuery": undefined,
                "lookupSchema": undefined,
                "lookupValidator": undefined,
                "measure": undefined,
                "mvEnabled": false,
                "name": "field3",
                "PHI": undefined,
                "primaryKey": undefined,
                "propertyId": undefined,
                "propertyURI": undefined,
                "propertyValidators": Immutable.List [],
                "rangeValidators": Immutable.List [],
                "rangeURI": "xsd:dateTime",
                "regexValidators": Immutable.List [],
                "recommendedVariable": false,
                "required": false,
                "scale": undefined,
                "URL": undefined,
                "shownInDetailsView": true,
                "shownInInsertView": true,
                "shownInUpdateView": true,
                "visible": true,
                "dataType": Immutable.Record {
                  "conceptURI": undefined,
                  "display": "Date Time",
                  "name": "dateTime",
                  "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                  "alternateRangeURI": "xsd:dateTime",
                  "shortDisplay": undefined,
                  "lookupSchema": undefined,
                  "lookupQuery": undefined,
                },
                "lookupQueryValue": undefined,
                "lookupType": Immutable.Record {
                  "conceptURI": undefined,
                  "display": "Lookup",
                  "name": "lookup",
                  "rangeURI": "xsd:dateTime",
                  "alternateRangeURI": undefined,
                  "shortDisplay": undefined,
                  "lookupSchema": undefined,
                  "lookupQuery": undefined,
                },
                "original": Object {
                  "conceptURI": undefined,
                  "dataType": Immutable.Record {
                    "conceptURI": undefined,
                    "display": "Date Time",
                    "name": "dateTime",
                    "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                    "alternateRangeURI": "xsd:dateTime",
                    "shortDisplay": undefined,
                    "lookupSchema": undefined,
                    "lookupQuery": undefined,
                  },
                  "rangeURI": undefined,
                },
                "updatedField": false,
                "isPrimaryKey": false,
                "lockType": "NotLocked",
                "wrappedColumnName": undefined,
              },
            ],
            "indices": Immutable.List [],
            "domainException": undefined,
            "mandatoryFieldNames": Immutable.List [],
            "reservedFieldNames": Immutable.List [],
            "newDesignFields": undefined,
            "instructions": undefined,
          }
        }
        domainFormDisplayOptions={
          Object {
            "isDragDisabled": false,
            "phiLevelDisabled": false,
            "showAddFieldsButton": true,
            "showRequired": true,
            "showTextOptions": true,
            "showValidators": true,
          }
        }
        domainIndex={1}
        headerPrefix="Test Assay Protocol"
        helpNoun="field designer"
        helpTopic={null}
        initCollapsed={true}
        isNew={false}
        modelDomains={
          Immutable.List [
            Immutable.Record {
              "name": "Batch Fields",
              "container": undefined,
              "description": undefined,
              "domainURI": undefined,
              "domainId": null,
              "allowFileLinkProperties": true,
              "allowAttachmentProperties": true,
              "allowFlagProperties": true,
              "showDefaultValueSettings": false,
              "defaultDefaultValueType": undefined,
              "defaultValueOptions": Immutable.List [],
              "fields": Immutable.List [],
              "indices": Immutable.List [],
              "domainException": undefined,
              "mandatoryFieldNames": Immutable.List [],
              "reservedFieldNames": Immutable.List [],
              "newDesignFields": undefined,
              "instructions": undefined,
            },
            Immutable.Record {
              "name": "Sample Fields",
              "container": undefined,
              "description": undefined,
              "domainURI": undefined,
              "domainId": null,
              "allowFileLinkProperties": true,
              "allowAttachmentProperties": true,
              "allowFlagProperties": true,
              "showDefaultValueSettings": false,
              "defaultDefaultValueType": undefined,
              "defaultValueOptions": Immutable.List [],
              "fields": Immutable.List [
                Immutable.Record {
                  "conceptURI": undefined,
                  "conditionalFormats": Immutable.List [],
                  "defaultScale": undefined,
                  "defaultValueType": undefined,
                  "defaultValue": undefined,
                  "defaultDisplayValue": undefined,
                  "description": undefined,
                  "dimension": undefined,
                  "excludeFromShifting": false,
                  "format": undefined,
                  "hidden": false,
                  "importAliases": undefined,
                  "label": undefined,
                  "lookupContainer": undefined,
                  "lookupQuery": undefined,
                  "lookupSchema": undefined,
                  "lookupValidator": undefined,
                  "measure": undefined,
                  "mvEnabled": false,
                  "name": "field1",
                  "PHI": undefined,
                  "primaryKey": undefined,
                  "propertyId": undefined,
                  "propertyURI": undefined,
                  "propertyValidators": Immutable.List [],
                  "rangeValidators": Immutable.List [],
                  "rangeURI": "xsd:string",
                  "regexValidators": Immutable.List [],
                  "recommendedVariable": false,
                  "required": false,
                  "scale": undefined,
                  "URL": undefined,
                  "shownInDetailsView": true,
                  "shownInInsertView": true,
                  "shownInUpdateView": true,
                  "visible": true,
                  "dataType": Immutable.Record {
                    "conceptURI": undefined,
                    "display": "Text",
                    "name": "string",
                    "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                    "alternateRangeURI": "xsd:string",
                    "shortDisplay": "String",
                    "lookupSchema": undefined,
                    "lookupQuery": undefined,
                  },
                  "lookupQueryValue": undefined,
                  "lookupType": Immutable.Record {
                    "conceptURI": undefined,
                    "display": "Lookup",
                    "name": "lookup",
                    "rangeURI": "xsd:string",
                    "alternateRangeURI": undefined,
                    "shortDisplay": undefined,
                    "lookupSchema": undefined,
                    "lookupQuery": undefined,
                  },
                  "original": Object {
                    "conceptURI": undefined,
                    "dataType": Immutable.Record {
                      "conceptURI": undefined,
                      "display": "Text",
                      "name": "string",
                      "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                      "alternateRangeURI": "xsd:string",
                      "shortDisplay": "String",
                      "lookupSchema": undefined,
                      "lookupQuery": undefined,
                    },
                    "rangeURI": undefined,
                  },
                  "updatedField": false,
                  "isPrimaryKey": false,
                  "lockType": "NotLocked",
                  "wrappedColumnName": undefined,
                },
                Immutable.Record {
                  "conceptURI": undefined,
                  "conditionalFormats": Immutable.List [],
                  "defaultScale": undefined,
                  "defaultValueType": undefined,
                  "defaultValue": undefined,
                  "defaultDisplayValue": undefined,
                  "description": undefined,
                  "dimension": undefined,
                  "excludeFromShifting": false,
                  "format": undefined,
                  "hidden": false,
                  "importAliases": undefined,
                  "label": undefined,
                  "lookupContainer": undefined,
                  "lookupQuery": undefined,
                  "lookupSchema": undefined,
                  "lookupValidator": undefined,
                  "measure": undefined,
                  "mvEnabled": false,
                  "name": "field2",
                  "PHI": undefined,
                  "primaryKey": undefined,
                  "propertyId": undefined,
                  "propertyURI": undefined,
                  "propertyValidators": Immutable.List [],
                  "rangeValidators": Immutable.List [],
                  "rangeURI": "xsd:int",
                  "regexValidators": Immutable.List [],
                  "recommendedVariable": false,
                  "required": false,
                  "scale": undefined,
                  "URL": undefined,
                  "shownInDetailsView": true,
                  "shownInInsertView": true,
                  "shownInUpdateView": true,
                  "visible": true,
                  "dataType": Immutable.Record {
                    "conceptURI": undefined,
                    "display": "Integer",
                    "name": "int",
                    "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                    "alternateRangeURI": "xsd:int",
                    "shortDisplay": undefined,
                    "lookupSchema": undefined,
                    "lookupQuery": undefined,
                  },
                  "lookupQueryValue": undefined,
                  "lookupType": Immutable.Record {
                    "conceptURI": undefined,
                    "display": "Lookup",
                    "name": "lookup",
                    "rangeURI": "xsd:int",
                    "alternateRangeURI": undefined,
                    "shortDisplay": undefined,
                    "lookupSchema": undefined,
                    "lookupQuery": undefined,
                  },
                  "original": Object {
                    "conceptURI": undefined,
                    "dataType": Immutable.Record {
                      "conceptURI": undefined,
                      "display": "Integer",
                      "name": "int",
                      "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                      "alternateRangeURI": "xsd:int",
                      "shortDisplay": undefined,
                      "lookupSchema": undefined,
                      "lookupQuery": undefined,
                    },
                    "rangeURI": undefined,
                  },
                  "updatedField": false,
                  "isPrimaryKey": false,
                  "lockType": "NotLocked",
                  "wrappedColumnName": undefined,
                },
                Immutable.Record {
                  "conceptURI": undefined,
                  "conditionalFormats": Immutable.List [],
                  "defaultScale": undefined,
                  "defaultValueType": undefined,
                  "defaultValue": undefined,
                  "defaultDisplayValue": undefined,
                  "description": undefined,
                  "dimension": undefined,
                  "excludeFromShifting": false,
                  "format": undefined,
                  "hidden": false,
                  "importAliases": undefined,
                  "label": undefined,
                  "lookupContainer": undefined,
                  "lookupQuery": undefined,
                  "lookupSchema": undefined,
                  "lookupValidator": undefined,
                  "measure": undefined,
                  "mvEnabled": false,
                  "name": "field3",
                  "PHI": undefined,
                  "primaryKey": undefined,
                  "propertyId": undefined,
                  "propertyURI": undefined,
                  "propertyValidators": Immutable.List [],
                  "rangeValidators": Immutable.List [],
                  "rangeURI": "xsd:dateTime",
                  "regexValidators": Immutable.List [],
                  "recommendedVariable": false,
                  "required": false,
                  "scale": undefined,
                  "URL": undefined,
                  "shownInDetailsView": true,
                  "shownInInsertView": true,
                  "shownInUpdateView": true,
                  "visible": true,
                  "dataType": Immutable.Record {
                    "conceptURI": undefined,
                    "display": "Date Time",
                    "name": "dateTime",
                    "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                    "alternateRangeURI": "xsd:dateTime",
                    "shortDisplay": undefined,
                    "lookupSchema": undefined,
                    "lookupQuery": undefined,
                  },
                  "lookupQueryValue": undefined,
                  "lookupType": Immutable.Record {
                    "conceptURI": undefined,
                    "display": "Lookup",
                    "name": "lookup",
                    "rangeURI": "xsd:dateTime",
                    "alternateRangeURI": undefined,
                    "shortDisplay": undefined,
                    "lookupSchema": undefined,
                    "lookupQuery": undefined,
                  },
                  "original": Object {
                    "conceptURI": undefined,
                    "dataType": Immutable.Record {
                      "conceptURI": undefined,
                      "display": "Date Time",
                      "name": "dateTime",
                      "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                      "alternateRangeURI": "xsd:dateTime",
                      "shortDisplay": undefined,
                      "lookupSchema": undefined,
                      "lookupQuery": undefined,
                    },
                    "rangeURI": undefined,
                  },
                  "updatedField": false,
                  "isPrimaryKey": false,
                  "lockType": "NotLocked",
                  "wrappedColumnName": undefined,
                },
              ],
              "indices": Immutable.List [],
              "domainException": undefined,
              "mandatoryFieldNames": Immutable.List [],
              "reservedFieldNames": Immutable.List [],
              "newDesignFields": undefined,
              "instructions": undefined,
            },
          ]
        }
        onChange={[Function]}
        onToggle={[Function]}
        panelStatus="COMPLETE"
        showFilePropertyType={false}
        showHeader={true}
        showInferFromFile={false}
        successBsStyle="success"
        validate={false}
      >
        <Uncontrolled(Panel)
          className="domain-form-panel"
          expanded={false}
          onToggle={[Function]}
        >
          <Panel
            bsClass="panel"
            bsStyle="default"
            className="domain-form-panel"
            expanded={false}
            onToggle={[Function]}
          >
            <div
              className="domain-form-panel panel panel-default"
            >
              <CollapsiblePanelHeader
                collapsed={true}
                controlledCollapse={true}
                headerDetails="3 Fields Defined"
                id="domainpropertiesrow-Sample-Fields-hdr"
                isValid={true}
                panelStatus="COMPLETE"
                title="Sample Fields"
                togglePanel={[Function]}
              >
                <PanelHeading
                  bsClass="panel"
                  className="domain-panel-header domain-heading-collapsible domain-panel-header-collapsed"
                  componentClass="div"
                  id="domainpropertiesrow-Sample-Fields-hdr"
                  onClick={[Function]}
                >
                  <div
                    className="domain-panel-header domain-heading-collapsible domain-panel-header-collapsed panel-heading"
                    id="domainpropertiesrow-Sample-Fields-hdr"
                    onClick={[Function]}
                  >
                    <span
                      className="domain-panel-status-icon domain-panel-status-icon-green"
                    >
                      <FontAwesomeIcon
                        border={false}
                        className=""
                        fixedWidth={false}
                        flip={null}
                        icon={
                          Object {
                            "icon": Array [
                              512,
                              512,
                              Array [],
                              "f058",
                              "M504 256c0 136.967-111.033 248-248 248S8 392.967 8 256 119.033 8 256 8s248 111.033 248 248zM227.314 387.314l184-184c6.248-6.248 6.248-16.379 0-22.627l-22.627-22.627c-6.248-6.249-16.379-6.249-22.628 0L216 308.118l-70.059-70.059c-6.248-6.248-16.379-6.248-22.628 0l-22.627 22.627c-6.248 6.248-6.248 16.379 0 22.627l104 104c6.249 6.249 16.379 6.249 22.628.001z",
                            ],
                            "iconName": "check-circle",
                            "prefix": "fas",
                          }
                        }
                        inverse={false}
                        listItem={false}
                        mask={null}
                        pull={null}
                        pulse={false}
                        rotation={null}
                        size={null}
                        spin={false}
                        symbol={false}
                        title=""
                        transform={null}
                      >
                        <svg
                          aria-hidden="true"
                          className="svg-inline--fa fa-check-circle fa-w-16 "
                          data-icon="check-circle"
                          data-prefix="fas"
                          focusable="false"
                          role="img"
                          style={Object {}}
                          viewBox="0 0 512 512"
                          xmlns="http://www.w3.org/2000/svg"
                        >
                          <path
                            d="M504 256c0 136.967-111.033 248-248 248S8 392.967 8 256 119.033 8 256 8s248 111.033 248 248zM227.314 387.314l184-184c6.248-6.248 6.248-16.379 0-22.627l-22.627-22.627c-6.248-6.249-16.379-6.249-22.628 0L216 308.118l-70.059-70.059c-6.248-6.248-16.379-6.248-22.628 0l-22.627 22.627c-6.248 6.248-6.248 16.379 0 22.627l104 104c6.249 6.249 16.379 6.249 22.628.001z"
                            fill="currentColor"
                            style={Object {}}
                          />
                        </svg>
                      </FontAwesomeIcon>
                    </span>
                    <span
                      className="domain-panel-title"
                    >
                      Sample Fields
                    </span>
                    <span
                      className="pull-right"
                    >
                      <FontAwesomeIcon
                        border={false}
                        className="domain-form-expand-btn"
                        fixedWidth={false}
                        flip={null}
                        icon={
                          Object {
                            "icon": Array [
                              448,
                              512,
                              Array [],
                              "f0fe",
                              "M400 32H48C21.5 32 0 53.5 0 80v352c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V80c0-26.5-21.5-48-48-48zm-32 252c0 6.6-5.4 12-12 12h-92v92c0 6.6-5.4 12-12 12h-56c-6.6 0-12-5.4-12-12v-92H92c-6.6 0-12-5.4-12-12v-56c0-6.6 5.4-12 12-12h92v-92c0-6.6 5.4-12 12-12h56c6.6 0 12 5.4 12 12v92h92c6.6 0 12 5.4 12 12v56z",
                            ],
                            "iconName": "plus-square",
                            "prefix": "fas",
                          }
                        }
                        inverse={false}
                        listItem={false}
                        mask={null}
                        pull={null}
                        pulse={false}
                        rotation={null}
                        size="lg"
                        spin={false}
                        symbol={false}
                        title=""
                        transform={null}
                      >
                        <svg
                          aria-hidden="true"
                          className="svg-inline--fa fa-plus-square fa-w-14 fa-lg domain-form-expand-btn"
                          data-icon="plus-square"
                          data-prefix="fas"
                          focusable="false"
                          role="img"
                          style={Object {}}
                          viewBox="0 0 448 512"
                          xmlns="http://www.w3.org/2000/svg"
                        >
                          <path
                            d="M400 32H48C21.5 32 0 53.5 0 80v352c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V80c0-26.5-21.5-48-48-48zm-32 252c0 6.6-5.4 12-12 12h-92v92c0 6.6-5.4 12-12 12h-56c-6.6 0-12-5.4-12-12v-92H92c-6.6 0-12-5.4-12-12v-56c0-6.6 5.4-12 12-12h92v-92c0-6.6 5.4-12 12-12h56c6.6 0 12 5.4 12 12v92h92c6.6 0 12 5.4 12 12v56z"
                            fill="currentColor"
                            style={Object {}}
                          />
                        </svg>
                      </FontAwesomeIcon>
                    </span>
                    <LabelHelpTip
                      body={[Function]}
                      customStyle={
                        Object {
                          "marginLeft": "5px",
                          "verticalAlign": "top",
                        }
                      }
                      id="tooltip"
                      placement="top"
                      size="1x"
                      title="Sample Fields"
                    >
                      <span
                        className="label-help-target"
                        onMouseOut={[Function]}
                        onMouseOver={[Function]}
                      >
                        <FontAwesomeIcon
                          border={false}
                          className="label-help-icon"
                          fixedWidth={false}
                          flip={null}
                          icon={
                            Object {
                              "icon": Array [
                                512,
                                512,
                                Array [],
                                "f059",
                                "M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z",
                              ],
                              "iconName": "question-circle",
                              "prefix": "fas",
                            }
                          }
                          inverse={false}
                          listItem={false}
                          mask={null}
                          pull={null}
                          pulse={false}
                          rotation={null}
                          size="1x"
                          spin={false}
                          style={
                            Object {
                              "marginLeft": "5px",
                              "verticalAlign": "top",
                            }
                          }
                          symbol={false}
                          title=""
                          transform={null}
                        >
                          <svg
                            aria-hidden="true"
                            className="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                            data-icon="question-circle"
                            data-prefix="fas"
                            focusable="false"
                            role="img"
                            style={
                              Object {
                                "marginLeft": "5px",
                                "verticalAlign": "top",
                              }
                            }
                            viewBox="0 0 512 512"
                            xmlns="http://www.w3.org/2000/svg"
                          >
                            <path
                              d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                              fill="currentColor"
                              style={Object {}}
                            />
                          </svg>
                        </FontAwesomeIcon>
                        <Overlay
                          animation={[Function]}
                          placement="top"
                          rootClose={false}
                          show={false}
                          target={
                            <span
                              class="label-help-target"
                            >
                              <svg
                                aria-hidden="true"
                                class="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                                data-icon="question-circle"
                                data-prefix="fas"
                                focusable="false"
                                role="img"
                                style="vertical-align: top; margin-left: 5px;"
                                viewBox="0 0 512 512"
                                xmlns="http://www.w3.org/2000/svg"
                              >
                                <path
                                  d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                  fill="currentColor"
                                />
                              </svg>
                            </span>
                          }
                        >
                          <Overlay
                            placement="top"
                            rootClose={false}
                            show={false}
                            target={
                              <span
                                class="label-help-target"
                              >
                                <svg
                                  aria-hidden="true"
                                  class="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                                  data-icon="question-circle"
                                  data-prefix="fas"
                                  focusable="false"
                                  role="img"
                                  style="vertical-align: top; margin-left: 5px;"
                                  viewBox="0 0 512 512"
                                  xmlns="http://www.w3.org/2000/svg"
                                >
                                  <path
                                    d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                    fill="currentColor"
                                  />
                                </svg>
                              </span>
                            }
                            transition={[Function]}
                          />
                        </Overlay>
                      </span>
                    </LabelHelpTip>
                    <span
                      className="domain-panel-header-fields-defined"
                    >
                      3 Fields Defined
                    </span>
                  </div>
                </PanelHeading>
              </CollapsiblePanelHeader>
              <PanelBody
                bsClass="panel"
                collapsible={true}
              >
                <PanelCollapse
                  bsClass="panel"
                >
                  <Collapse
                    appear={false}
                    dimension="height"
                    getDimensionValue={[Function]}
                    in={false}
                    mountOnEnter={false}
                    timeout={300}
                    unmountOnExit={false}
                  >
                    <Transition
                      appear={false}
                      aria-expanded={null}
                      enter={true}
                      exit={true}
                      in={false}
                      mountOnEnter={false}
                      onEnter={[Function]}
                      onEntered={[Function]}
                      onEntering={[Function]}
                      onExit={[Function]}
                      onExited={[Function]}
                      onExiting={[Function]}
                      timeout={300}
                      unmountOnExit={false}
                    >
                      <div
                        aria-expanded={null}
                        className="panel-collapse collapse"
                      >
                        <div
                          className="panel-body"
                        >
                          <Row
                            bsClass="row"
                            className=""
                            componentClass="div"
                          >
                            <div
                              className="row"
                            >
                              <Col
                                bsClass="col"
                                componentClass="div"
                                xs={12}
                              >
                                <div
                                  className="col-xs-12"
                                />
                              </Col>
                            </div>
                          </Row>
                          <Row
                            bsClass="row"
                            componentClass="div"
                          >
                            <div
                              className="row"
                            >
                              <Col
                                bsClass="col"
                                componentClass="div"
                                xs={3}
                              >
                                <div
                                  className="col-xs-3"
                                >
                                  <FormControl
                                    bsClass="form-control"
                                    componentClass="input"
                                    id="domain-search-name-1"
                                    onChange={[Function]}
                                    placeholder="Search Fields"
                                    type="text"
                                  >
                                    <input
                                      className="form-control"
                                      id="domain-search-name-1"
                                      onChange={[Function]}
                                      placeholder="Search Fields"
                                      type="text"
                                    />
                                  </FormControl>
                                </div>
                              </Col>
                            </div>
                          </Row>
                          <DragDropContext
                            onBeforeDragStart={[Function]}
                            onDragEnd={[Function]}
                          >
                            <ErrorBoundary>
                              <App
                                onBeforeDragStart={[Function]}
                                onDragEnd={[Function]}
                                setOnError={[Function]}
                                uniqueId={0}
                              >
                                <Provider
                                  context={
                                    Object {
                                      "$$typeof": Symbol(react.context),
                                      "Consumer": Object {
                                        "$$typeof": Symbol(react.context),
                                        "_calculateChangedBits": null,
                                        "_context": [Circular],
                                      },
                                      "Provider": Object {
                                        "$$typeof": Symbol(react.provider),
                                        "_context": [Circular],
                                      },
                                      "_calculateChangedBits": null,
                                      "_currentRenderer": Object {},
                                      "_currentRenderer2": null,
                                      "_currentValue": null,
                                      "_currentValue2": null,
                                      "_threadCount": 0,
                                    }
                                  }
                                  store={
                                    Object {
                                      "dispatch": [Function],
                                      "getState": [Function],
                                      "replaceReducer": [Function],
                                      "subscribe": [Function],
                                      Symbol(observable): [Function],
                                    }
                                  }
                                >
                                  <Container>
                                    <div
                                      onScroll={[Function]}
                                      onTouchEnd={[Function]}
                                      onTouchMove={[Function]}
                                      onTouchStart={[Function]}
                                    >
                                      <Sticky
                                        bottomOffset={0}
                                        disableCompensation={false}
                                        disableHardwareAcceleration={false}
                                        relative={false}
                                        topOffset={0}
                                      >
                                        <div>
                                          <div />
                                          <div
                                            style={
                                              Object {
                                                "top": 0,
                                                "zIndex": 1000,
                                              }
                                            }
                                          >
                                            <div
                                              className="domain-floating-hdr"
                                            >
                                              <Row
                                                bsClass="row"
                                                className="domain-form-hdr-row"
                                                componentClass="div"
                                              >
                                                <div
                                                  className="domain-form-hdr-row row"
                                                >
                                                  <Col
                                                    bsClass="col"
                                                    componentClass="div"
                                                    xs={6}
                                                  >
                                                    <div
                                                      className="col-xs-6"
                                                    >
                                                      <Col
                                                        bsClass="col"
                                                        componentClass="div"
                                                        xs={6}
                                                      >
                                                        <div
                                                          className="col-xs-6"
                                                        >
                                                          <b>
                                                            Name
                                                          </b>
                                                        </div>
                                                      </Col>
                                                      <Col
                                                        bsClass="col"
                                                        componentClass="div"
                                                        xs={4}
                                                      >
                                                        <div
                                                          className="col-xs-4"
                                                        >
                                                          <b>
                                                            Data Type
                                                          </b>
                                                        </div>
                                                      </Col>
                                                      <Col
                                                        bsClass="col"
                                                        className="domain-form-hdr-center"
                                                        componentClass="div"
                                                        xs={2}
                                                      >
                                                        <div
                                                          className="domain-form-hdr-center col-xs-2"
                                                        >
                                                          <b>
                                                            Required
                                                          </b>
                                                        </div>
                                                      </Col>
                                                    </div>
                                                  </Col>
                                                  <Col
                                                    bsClass="col"
                                                    componentClass="div"
                                                    xs={6}
                                                  >
                                                    <div
                                                      className="col-xs-6"
                                                    >
                                                      <b>
                                                        Details
                                                      </b>
                                                    </div>
                                                  </Col>
                                                </div>
                                              </Row>
                                            </div>
                                          </div>
                                        </div>
                                      </Sticky>
                                      <ConnectFunction
                                        direction="vertical"
                                        droppableId="domain-form-droppable"
                                        ignoreContainerClipping={false}
                                        isCombineEnabled={false}
                                        isDropDisabled={false}
                                        type="DEFAULT"
                                      >
                                        <Droppable
                                          direction="vertical"
                                          droppableId="domain-form-droppable"
                                          ignoreContainerClipping={false}
                                          isCombineEnabled={false}
                                          isDropDisabled={false}
                                          placeholder={null}
                                          shouldAnimatePlaceholder={true}
                                          snapshot={
                                            Object {
                                              "draggingFromThisWith": null,
                                              "draggingOverWith": null,
                                              "isDraggingOver": false,
                                            }
                                          }
                                          type="DEFAULT"
                                          updateViewportMaxScroll={[Function]}
                                        >
                                          <div
                                            data-react-beautiful-dnd-droppable="0"
                                          >
                                            <Form
                                              bsClass="form"
                                              componentClass="form"
                                              horizontal={false}
                                              inline={false}
                                            >
                                              <form
                                                className=""
                                              >
                                                <DomainRow
                                                  appPropertiesOnly={false}
                                                  availableTypes={
                                                    Immutable.List [
                                                      Immutable.Record {
                                                        "conceptURI": undefined,
                                                        "display": "Text",
                                                        "name": "string",
                                                        "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                        "alternateRangeURI": "xsd:string",
                                                        "shortDisplay": "String",
                                                        "lookupSchema": undefined,
                                                        "lookupQuery": undefined,
                                                      },
                                                      Immutable.Record {
                                                        "conceptURI": undefined,
                                                        "display": "Multi-Line Text",
                                                        "name": "multiLine",
                                                        "rangeURI": "http://www.w3.org/2001/XMLSchema#multiLine",
                                                        "alternateRangeURI": undefined,
                                                        "shortDisplay": undefined,
                                                        "lookupSchema": undefined,
                                                        "lookupQuery": undefined,
                                                      },
                                                      Immutable.Record {
                                                        "conceptURI": undefined,
                                                        "display": "Boolean",
                                                        "name": "boolean",
                                                        "rangeURI": "http://www.w3.org/2001/XMLSchema#boolean",
                                                        "alternateRangeURI": "xsd:boolean",
                                                        "shortDisplay": undefined,
                                                        "lookupSchema": undefined,
                                                        "lookupQuery": undefined,
                                                      },
                                                      Immutable.Record {
                                                        "conceptURI": undefined,
                                                        "display": "Integer",
                                                        "name": "int",
                                                        "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                                        "alternateRangeURI": "xsd:int",
                                                        "shortDisplay": undefined,
                                                        "lookupSchema": undefined,
                                                        "lookupQuery": undefined,
                                                      },
                                                      Immutable.Record {
                                                        "conceptURI": undefined,
                                                        "display": "Decimal",
                                                        "name": "double",
                                                        "rangeURI": "http://www.w3.org/2001/XMLSchema#double",
                                                        "alternateRangeURI": "xsd:double",
                                                        "shortDisplay": undefined,
                                                        "lookupSchema": undefined,
                                                        "lookupQuery": undefined,
                                                      },
                                                      Immutable.Record {
                                                        "conceptURI": undefined,
                                                        "display": "Date Time",
                                                        "name": "dateTime",
                                                        "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                                                        "alternateRangeURI": "xsd:dateTime",
                                                        "shortDisplay": undefined,
                                                        "lookupSchema": undefined,
                                                        "lookupQuery": undefined,
                                                      },
                                                      Immutable.Record {
                                                        "conceptURI": "http://www.labkey.org/exp/xml#flag",
                                                        "display": "Flag",
                                                        "name": "flag",
                                                        "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                        "alternateRangeURI": undefined,
                                                        "shortDisplay": undefined,
                                                        "lookupSchema": undefined,
                                                        "lookupQuery": undefined,
                                                      },
                                                      Immutable.Record {
                                                        "conceptURI": undefined,
                                                        "display": "File",
                                                        "name": "fileLink",
                                                        "rangeURI": "http://cpas.fhcrc.org/exp/xml#fileLink",
                                                        "alternateRangeURI": undefined,
                                                        "shortDisplay": undefined,
                                                        "lookupSchema": undefined,
                                                        "lookupQuery": undefined,
                                                      },
                                                      Immutable.Record {
                                                        "conceptURI": undefined,
                                                        "display": "Attachment",
                                                        "name": "attachment",
                                                        "rangeURI": "http://www.labkey.org/exp/xml#attachment",
                                                        "alternateRangeURI": undefined,
                                                        "shortDisplay": undefined,
                                                        "lookupSchema": undefined,
                                                        "lookupQuery": undefined,
                                                      },
                                                      Immutable.Record {
                                                        "conceptURI": undefined,
                                                        "display": "User",
                                                        "name": "users",
                                                        "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                                        "alternateRangeURI": undefined,
                                                        "shortDisplay": undefined,
                                                        "lookupSchema": "core",
                                                        "lookupQuery": "users",
                                                      },
                                                      Immutable.Record {
                                                        "conceptURI": "http://cpas.labkey.com/Study#ParticipantId",
                                                        "display": "Subject/Participant",
                                                        "name": "ParticipantId",
                                                        "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                        "alternateRangeURI": undefined,
                                                        "shortDisplay": undefined,
                                                        "lookupSchema": undefined,
                                                        "lookupQuery": undefined,
                                                      },
                                                      Immutable.Record {
                                                        "conceptURI": undefined,
                                                        "display": "Lookup",
                                                        "name": "lookup",
                                                        "rangeURI": undefined,
                                                        "alternateRangeURI": undefined,
                                                        "shortDisplay": undefined,
                                                        "lookupSchema": undefined,
                                                        "lookupQuery": undefined,
                                                      },
                                                      Immutable.Record {
                                                        "conceptURI": "http://www.labkey.org/exp/xml#sample",
                                                        "display": "Sample",
                                                        "name": "sample",
                                                        "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                                        "alternateRangeURI": undefined,
                                                        "shortDisplay": undefined,
                                                        "lookupSchema": undefined,
                                                        "lookupQuery": undefined,
                                                      },
                                                    ]
                                                  }
                                                  defaultValueOptions={Immutable.List []}
                                                  domainFormDisplayOptions={
                                                    Object {
                                                      "isDragDisabled": false,
                                                      "phiLevelDisabled": false,
                                                      "showAddFieldsButton": true,
                                                      "showRequired": true,
                                                      "showTextOptions": true,
                                                      "showValidators": true,
                                                    }
                                                  }
                                                  domainId={null}
                                                  domainIndex={1}
                                                  dragging={false}
                                                  expandTransition={300}
                                                  expanded={false}
                                                  field={
                                                    Immutable.Record {
                                                      "conceptURI": undefined,
                                                      "conditionalFormats": Immutable.List [],
                                                      "defaultScale": undefined,
                                                      "defaultValueType": undefined,
                                                      "defaultValue": undefined,
                                                      "defaultDisplayValue": undefined,
                                                      "description": undefined,
                                                      "dimension": undefined,
                                                      "excludeFromShifting": false,
                                                      "format": undefined,
                                                      "hidden": false,
                                                      "importAliases": undefined,
                                                      "label": undefined,
                                                      "lookupContainer": undefined,
                                                      "lookupQuery": undefined,
                                                      "lookupSchema": undefined,
                                                      "lookupValidator": undefined,
                                                      "measure": undefined,
                                                      "mvEnabled": false,
                                                      "name": "field1",
                                                      "PHI": undefined,
                                                      "primaryKey": undefined,
                                                      "propertyId": undefined,
                                                      "propertyURI": undefined,
                                                      "propertyValidators": Immutable.List [],
                                                      "rangeValidators": Immutable.List [],
                                                      "rangeURI": "xsd:string",
                                                      "regexValidators": Immutable.List [],
                                                      "recommendedVariable": false,
                                                      "required": false,
                                                      "scale": undefined,
                                                      "URL": undefined,
                                                      "shownInDetailsView": true,
                                                      "shownInInsertView": true,
                                                      "shownInUpdateView": true,
                                                      "visible": true,
                                                      "dataType": Immutable.Record {
                                                        "conceptURI": undefined,
                                                        "display": "Text",
                                                        "name": "string",
                                                        "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                        "alternateRangeURI": "xsd:string",
                                                        "shortDisplay": "String",
                                                        "lookupSchema": undefined,
                                                        "lookupQuery": undefined,
                                                      },
                                                      "lookupQueryValue": undefined,
                                                      "lookupType": Immutable.Record {
                                                        "conceptURI": undefined,
                                                        "display": "Lookup",
                                                        "name": "lookup",
                                                        "rangeURI": "xsd:string",
                                                        "alternateRangeURI": undefined,
                                                        "shortDisplay": undefined,
                                                        "lookupSchema": undefined,
                                                        "lookupQuery": undefined,
                                                      },
                                                      "original": Object {
                                                        "conceptURI": undefined,
                                                        "dataType": Immutable.Record {
                                                          "conceptURI": undefined,
                                                          "display": "Text",
                                                          "name": "string",
                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                          "alternateRangeURI": "xsd:string",
                                                          "shortDisplay": "String",
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                        "rangeURI": undefined,
                                                      },
                                                      "updatedField": false,
                                                      "isPrimaryKey": false,
                                                      "lockType": "NotLocked",
                                                      "wrappedColumnName": undefined,
                                                    }
                                                  }
                                                  helpNoun="field designer"
                                                  index={0}
                                                  key="domain-row-key-0"
                                                  maxPhiLevel="NotPHI"
                                                  onChange={[Function]}
                                                  onDelete={[Function]}
                                                  onExpand={[Function]}
                                                  showDefaultValueSettings={false}
                                                  showFilePropertyType={false}
                                                  successBsStyle="success"
                                                >
                                                  <ConnectFunction
                                                    disableInteractiveElementBlocking={false}
                                                    draggableId="domainpropertiesrow-domaindrag-1-0"
                                                    index={0}
                                                    isDragDisabled={false}
                                                    shouldRespectForcePress={false}
                                                  >
                                                    <Draggable
                                                      disableInteractiveElementBlocking={false}
                                                      draggableId="domainpropertiesrow-domaindrag-1-0"
                                                      drop={[Function]}
                                                      dropAnimationFinished={[Function]}
                                                      index={0}
                                                      isDragDisabled={false}
                                                      lift={[Function]}
                                                      mapped={
                                                        Object {
                                                          "combineTargetFor": null,
                                                          "offset": Object {
                                                            "x": 0,
                                                            "y": 0,
                                                          },
                                                          "shouldAnimateDisplacement": true,
                                                          "snapshot": Object {
                                                            "combineTargetFor": null,
                                                            "combineWith": null,
                                                            "draggingOver": null,
                                                            "dropAnimation": null,
                                                            "isDragging": false,
                                                            "isDropAnimating": false,
                                                            "mode": null,
                                                          },
                                                          "type": "SECONDARY",
                                                        }
                                                      }
                                                      move={[Function]}
                                                      moveByWindowScroll={[Function]}
                                                      moveDown={[Function]}
                                                      moveLeft={[Function]}
                                                      moveRight={[Function]}
                                                      moveUp={[Function]}
                                                      shouldRespectForcePress={false}
                                                    >
                                                      <div
                                                        className="domain-field-row domain-row-border-default"
                                                        data-react-beautiful-dnd-draggable="0"
                                                        onTransitionEnd={null}
                                                        style={
                                                          Object {
                                                            "transform": null,
                                                            "transition": null,
                                                          }
                                                        }
                                                        tabIndex={0}
                                                      >
                                                        <Row
                                                          bsClass="row"
                                                          className="domain-row-container"
                                                          componentClass="div"
                                                          key="domainpropertiesrow-domainrow-1-0"
                                                        >
                                                          <div
                                                            className="domain-row-container row"
                                                          >
                                                            <AdvancedSettings
                                                              defaultValueOptions={Immutable.List []}
                                                              domainFormDisplayOptions={
                                                                Object {
                                                                  "isDragDisabled": false,
                                                                  "phiLevelDisabled": false,
                                                                  "showAddFieldsButton": true,
                                                                  "showRequired": true,
                                                                  "showTextOptions": true,
                                                                  "showValidators": true,
                                                                }
                                                              }
                                                              domainId={null}
                                                              domainIndex={1}
                                                              field={
                                                                Immutable.Record {
                                                                  "conceptURI": undefined,
                                                                  "conditionalFormats": Immutable.List [],
                                                                  "defaultScale": undefined,
                                                                  "defaultValueType": undefined,
                                                                  "defaultValue": undefined,
                                                                  "defaultDisplayValue": undefined,
                                                                  "description": undefined,
                                                                  "dimension": undefined,
                                                                  "excludeFromShifting": false,
                                                                  "format": undefined,
                                                                  "hidden": false,
                                                                  "importAliases": undefined,
                                                                  "label": undefined,
                                                                  "lookupContainer": undefined,
                                                                  "lookupQuery": undefined,
                                                                  "lookupSchema": undefined,
                                                                  "lookupValidator": undefined,
                                                                  "measure": undefined,
                                                                  "mvEnabled": false,
                                                                  "name": "field1",
                                                                  "PHI": undefined,
                                                                  "primaryKey": undefined,
                                                                  "propertyId": undefined,
                                                                  "propertyURI": undefined,
                                                                  "propertyValidators": Immutable.List [],
                                                                  "rangeValidators": Immutable.List [],
                                                                  "rangeURI": "xsd:string",
                                                                  "regexValidators": Immutable.List [],
                                                                  "recommendedVariable": false,
                                                                  "required": false,
                                                                  "scale": undefined,
                                                                  "URL": undefined,
                                                                  "shownInDetailsView": true,
                                                                  "shownInInsertView": true,
                                                                  "shownInUpdateView": true,
                                                                  "visible": true,
                                                                  "dataType": Immutable.Record {
                                                                    "conceptURI": undefined,
                                                                    "display": "Text",
                                                                    "name": "string",
                                                                    "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                                    "alternateRangeURI": "xsd:string",
                                                                    "shortDisplay": "String",
                                                                    "lookupSchema": undefined,
                                                                    "lookupQuery": undefined,
                                                                  },
                                                                  "lookupQueryValue": undefined,
                                                                  "lookupType": Immutable.Record {
                                                                    "conceptURI": undefined,
                                                                    "display": "Lookup",
                                                                    "name": "lookup",
                                                                    "rangeURI": "xsd:string",
                                                                    "alternateRangeURI": undefined,
                                                                    "shortDisplay": undefined,
                                                                    "lookupSchema": undefined,
                                                                    "lookupQuery": undefined,
                                                                  },
                                                                  "original": Object {
                                                                    "conceptURI": undefined,
                                                                    "dataType": Immutable.Record {
                                                                      "conceptURI": undefined,
                                                                      "display": "Text",
                                                                      "name": "string",
                                                                      "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                                      "alternateRangeURI": "xsd:string",
                                                                      "shortDisplay": "String",
                                                                      "lookupSchema": undefined,
                                                                      "lookupQuery": undefined,
                                                                    },
                                                                    "rangeURI": undefined,
                                                                  },
                                                                  "updatedField": false,
                                                                  "isPrimaryKey": false,
                                                                  "lockType": "NotLocked",
                                                                  "wrappedColumnName": undefined,
                                                                }
                                                              }
                                                              helpNoun="field designer"
                                                              index={0}
                                                              label="field1"
                                                              maxPhiLevel="NotPHI"
                                                              onApply={[Function]}
                                                              onHide={[Function]}
                                                              show={false}
                                                              showDefaultValueSettings={false}
                                                              successBsStyle="success"
                                                            >
                                                              <Modal
                                                                animation={true}
                                                                autoFocus={true}
                                                                backdrop={true}
                                                                bsClass="modal"
                                                                dialogComponentClass={[Function]}
                                                                enforceFocus={true}
                                                                keyboard={true}
                                                                manager={
                                                                  ModalManager {
                                                                    "add": [Function],
                                                                    "containers": Array [],
                                                                    "data": Array [],
                                                                    "handleContainerOverflow": true,
                                                                    "hideSiblingNodes": true,
                                                                    "isTopModal": [Function],
                                                                    "modals": Array [],
                                                                    "remove": [Function],
                                                                  }
                                                                }
                                                                onEnter={[Function]}
                                                                onHide={[Function]}
                                                                renderBackdrop={[Function]}
                                                                restoreFocus={true}
                                                                show={false}
                                                              >
                                                                <Modal
                                                                  autoFocus={true}
                                                                  backdrop={true}
                                                                  backdropClassName="modal-backdrop"
                                                                  backdropTransition={[Function]}
                                                                  containerClassName="modal-open"
                                                                  enforceFocus={true}
                                                                  keyboard={true}
                                                                  manager={
                                                                    ModalManager {
                                                                      "add": [Function],
                                                                      "containers": Array [],
                                                                      "data": Array [],
                                                                      "handleContainerOverflow": true,
                                                                      "hideSiblingNodes": true,
                                                                      "isTopModal": [Function],
                                                                      "modals": Array [],
                                                                      "remove": [Function],
                                                                    }
                                                                  }
                                                                  onEnter={[Function]}
                                                                  onEntering={[Function]}
                                                                  onExited={[Function]}
                                                                  onHide={[Function]}
                                                                  renderBackdrop={[Function]}
                                                                  restoreFocus={true}
                                                                  show={false}
                                                                  transition={[Function]}
                                                                />
                                                              </Modal>
                                                            </AdvancedSettings>
                                                            <div
                                                              aria-roledescription="Draggable item. Press space bar to lift"
                                                              className="domain-row-handle"
                                                              data-react-beautiful-dnd-drag-handle="0"
                                                              draggable={false}
                                                              onBlur={[Function]}
                                                              onDragStart={[Function]}
                                                              onFocus={[Function]}
                                                              onKeyDown={[Function]}
                                                              onMouseDown={[Function]}
                                                              onTouchStart={[Function]}
                                                              tabIndex={0}
                                                            >
                                                              <DragDropHandle>
                                                                <FontAwesomeIcon
                                                                  border={false}
                                                                  className=""
                                                                  fixedWidth={false}
                                                                  flip={null}
                                                                  icon={
                                                                    Object {
                                                                      "icon": Array [
                                                                        320,
                                                                        512,
                                                                        Array [],
                                                                        "f58e",
                                                                        "M96 32H32C14.33 32 0 46.33 0 64v64c0 17.67 14.33 32 32 32h64c17.67 0 32-14.33 32-32V64c0-17.67-14.33-32-32-32zm0 160H32c-17.67 0-32 14.33-32 32v64c0 17.67 14.33 32 32 32h64c17.67 0 32-14.33 32-32v-64c0-17.67-14.33-32-32-32zm0 160H32c-17.67 0-32 14.33-32 32v64c0 17.67 14.33 32 32 32h64c17.67 0 32-14.33 32-32v-64c0-17.67-14.33-32-32-32zM288 32h-64c-17.67 0-32 14.33-32 32v64c0 17.67 14.33 32 32 32h64c17.67 0 32-14.33 32-32V64c0-17.67-14.33-32-32-32zm0 160h-64c-17.67 0-32 14.33-32 32v64c0 17.67 14.33 32 32 32h64c17.67 0 32-14.33 32-32v-64c0-17.67-14.33-32-32-32zm0 160h-64c-17.67 0-32 14.33-32 32v64c0 17.67 14.33 32 32 32h64c17.67 0 32-14.33 32-32v-64c0-17.67-14.33-32-32-32z",
                                                                      ],
                                                                      "iconName": "grip-vertical",
                                                                      "prefix": "fas",
                                                                    }
                                                                  }
                                                                  inverse={false}
                                                                  listItem={false}
                                                                  mask={null}
                                                                  pull={null}
                                                                  pulse={false}
                                                                  rotation={null}
                                                                  size="lg"
                                                                  spin={false}
                                                                  symbol={false}
                                                                  title=""
                                                                  transform={null}
                                                                >
                                                                  <svg
                                                                    aria-hidden="true"
                                                                    className="svg-inline--fa fa-grip-vertical fa-w-10 fa-lg "
                                                                    data-icon="grip-vertical"
                                                                    data-prefix="fas"
                                                                    focusable="false"
                                                                    role="img"
                                                                    style={Object {}}
                                                                    viewBox="0 0 320 512"
                                                                    xmlns="http://www.w3.org/2000/svg"
                                                                  >
                                                                    <path
                                                                      d="M96 32H32C14.33 32 0 46.33 0 64v64c0 17.67 14.33 32 32 32h64c17.67 0 32-14.33 32-32V64c0-17.67-14.33-32-32-32zm0 160H32c-17.67 0-32 14.33-32 32v64c0 17.67 14.33 32 32 32h64c17.67 0 32-14.33 32-32v-64c0-17.67-14.33-32-32-32zm0 160H32c-17.67 0-32 14.33-32 32v64c0 17.67 14.33 32 32 32h64c17.67 0 32-14.33 32-32v-64c0-17.67-14.33-32-32-32zM288 32h-64c-17.67 0-32 14.33-32 32v64c0 17.67 14.33 32 32 32h64c17.67 0 32-14.33 32-32V64c0-17.67-14.33-32-32-32zm0 160h-64c-17.67 0-32 14.33-32 32v64c0 17.67 14.33 32 32 32h64c17.67 0 32-14.33 32-32v-64c0-17.67-14.33-32-32-32zm0 160h-64c-17.67 0-32 14.33-32 32v64c0 17.67 14.33 32 32 32h64c17.67 0 32-14.33 32-32v-64c0-17.67-14.33-32-32-32z"
                                                                      fill="currentColor"
                                                                      style={Object {}}
                                                                    />
                                                                  </svg>
                                                                </FontAwesomeIcon>
                                                              </DragDropHandle>
                                                            </div>
                                                            <div
                                                              className="domain-row-main"
                                                            >
                                                              <Col
                                                                bsClass="col"
                                                                className="domain-row-base-fields"
                                                                componentClass="div"
                                                                xs={6}
                                                              >
                                                                <div
                                                                  className="domain-row-base-fields col-xs-6"
                                                                >
                                                                  <div
                                                                    id="domainpropertiesrow-row-1-0"
                                                                  >
                                                                    <Col
                                                                      bsClass="col"
                                                                      componentClass="div"
                                                                      xs={6}
                                                                    >
                                                                      <div
                                                                        className="col-xs-6"
                                                                      >
                                                                        <FormControl
                                                                          bsClass="form-control"
                                                                          componentClass="input"
                                                                          disabled={false}
                                                                          id="domainpropertiesrow-name-1-0"
                                                                          name="domainpropertiesrow-name"
                                                                          onChange={[Function]}
                                                                          type="text"
                                                                          value="field1"
                                                                        >
                                                                          <input
                                                                            className="form-control"
                                                                            disabled={false}
                                                                            id="domainpropertiesrow-name-1-0"
                                                                            name="domainpropertiesrow-name"
                                                                            onChange={[Function]}
                                                                            type="text"
                                                                            value="field1"
                                                                          />
                                                                        </FormControl>
                                                                      </div>
                                                                    </Col>
                                                                    <Col
                                                                      bsClass="col"
                                                                      componentClass="div"
                                                                      xs={4}
                                                                    >
                                                                      <div
                                                                        className="col-xs-4"
                                                                      >
                                                                        <FormControl
                                                                          bsClass="form-control"
                                                                          componentClass="select"
                                                                          disabled={false}
                                                                          id="domainpropertiesrow-type-1-0"
                                                                          name="domainpropertiesrow-type"
                                                                          onChange={[Function]}
                                                                          value="string"
                                                                        >
                                                                          <select
                                                                            className="form-control"
                                                                            disabled={false}
                                                                            id="domainpropertiesrow-type-1-0"
                                                                            name="domainpropertiesrow-type"
                                                                            onChange={[Function]}
                                                                            value="string"
                                                                          >
                                                                            <option
                                                                              key="0"
                                                                              value="string"
                                                                            >
                                                                              Text
                                                                            </option>
                                                                            <option
                                                                              key="1"
                                                                              value="multiLine"
                                                                            >
                                                                              Multi-Line Text
                                                                            </option>
                                                                            <option
                                                                              key="2"
                                                                              value="boolean"
                                                                            >
                                                                              Boolean
                                                                            </option>
                                                                            <option
                                                                              key="3"
                                                                              value="int"
                                                                            >
                                                                              Integer
                                                                            </option>
                                                                            <option
                                                                              key="4"
                                                                              value="double"
                                                                            >
                                                                              Decimal
                                                                            </option>
                                                                            <option
                                                                              key="5"
                                                                              value="dateTime"
                                                                            >
                                                                              Date Time
                                                                            </option>
                                                                            <option
                                                                              key="6"
                                                                              value="flag"
                                                                            >
                                                                              Flag
                                                                            </option>
                                                                            <option
                                                                              key="7"
                                                                              value="fileLink"
                                                                            >
                                                                              File
                                                                            </option>
                                                                            <option
                                                                              key="8"
                                                                              value="attachment"
                                                                            >
                                                                              Attachment
                                                                            </option>
                                                                            <option
                                                                              key="9"
                                                                              value="users"
                                                                            >
                                                                              User
                                                                            </option>
                                                                            <option
                                                                              key="10"
                                                                              value="ParticipantId"
                                                                            >
                                                                              Subject/Participant
                                                                            </option>
                                                                            <option
                                                                              key="11"
                                                                              value="lookup"
                                                                            >
                                                                              Lookup
                                                                            </option>
                                                                            <option
                                                                              key="12"
                                                                              value="sample"
                                                                            >
                                                                              Sample
                                                                            </option>
                                                                          </select>
                                                                        </FormControl>
                                                                      </div>
                                                                    </Col>
                                                                    <Col
                                                                      bsClass="col"
                                                                      componentClass="div"
                                                                      xs={2}
                                                                    >
                                                                      <div
                                                                        className="col-xs-2"
                                                                      >
                                                                        <div
                                                                          className="domain-field-checkbox-container"
                                                                        >
                                                                          <Checkbox
                                                                            bsClass="checkbox"
                                                                            checked={false}
                                                                            className="domain-field-checkbox"
                                                                            disabled={false}
                                                                            id="domainpropertiesrow-required-1-0"
                                                                            inline={false}
                                                                            name="domainpropertiesrow-required"
                                                                            onChange={[Function]}
                                                                            title=""
                                                                          >
                                                                            <div
                                                                              className="domain-field-checkbox checkbox"
                                                                            >
                                                                              <label
                                                                                title=""
                                                                              >
                                                                                <input
                                                                                  checked={false}
                                                                                  disabled={false}
                                                                                  id="domainpropertiesrow-required-1-0"
                                                                                  name="domainpropertiesrow-required"
                                                                                  onChange={[Function]}
                                                                                  type="checkbox"
                                                                                />
                                                                              </label>
                                                                            </div>
                                                                          </Checkbox>
                                                                        </div>
                                                                      </div>
                                                                    </Col>
                                                                  </div>
                                                                </div>
                                                              </Col>
                                                              <Col
                                                                bsClass="col"
                                                                className="field-details-container"
                                                                componentClass="div"
                                                                xs={6}
                                                              >
                                                                <div
                                                                  className="field-details-container col-xs-6"
                                                                >
                                                                  <div
                                                                    className="domain-field-details"
                                                                    id="domainpropertiesrow-details-1-0"
                                                                  >
                                                                    New Field
                                                                  </div>
                                                                  <div
                                                                    className="domain-field-buttons"
                                                                  >
                                                                    <DeleteIcon
                                                                      iconCls="domain-field-delete-icon"
                                                                      id="domainpropertiesrow-delete-1-0"
                                                                      onDelete={[Function]}
                                                                      title="Remove field"
                                                                    >
                                                                      <span
                                                                        className="field-icon"
                                                                        id="domainpropertiesrow-delete-1-0"
                                                                        onClick={[Function]}
                                                                        title="Remove field"
                                                                      >
                                                                        <FontAwesomeIcon
                                                                          border={false}
                                                                          className="domain-field-delete-icon"
                                                                          fixedWidth={false}
                                                                          flip={null}
                                                                          icon={
                                                                            Object {
                                                                              "icon": Array [
                                                                                512,
                                                                                512,
                                                                                Array [],
                                                                                "f057",
                                                                                "M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8zm121.6 313.1c4.7 4.7 4.7 12.3 0 17L338 377.6c-4.7 4.7-12.3 4.7-17 0L256 312l-65.1 65.6c-4.7 4.7-12.3 4.7-17 0L134.4 338c-4.7-4.7-4.7-12.3 0-17l65.6-65-65.6-65.1c-4.7-4.7-4.7-12.3 0-17l39.6-39.6c4.7-4.7 12.3-4.7 17 0l65 65.7 65.1-65.6c4.7-4.7 12.3-4.7 17 0l39.6 39.6c4.7 4.7 4.7 12.3 0 17L312 256l65.6 65.1z",
                                                                              ],
                                                                              "iconName": "times-circle",
                                                                              "prefix": "fas",
                                                                            }
                                                                          }
                                                                          inverse={false}
                                                                          listItem={false}
                                                                          mask={null}
                                                                          pull={null}
                                                                          pulse={false}
                                                                          rotation={null}
                                                                          size={null}
                                                                          spin={false}
                                                                          symbol={false}
                                                                          title=""
                                                                          transform={null}
                                                                        >
                                                                          <svg
                                                                            aria-hidden="true"
                                                                            className="svg-inline--fa fa-times-circle fa-w-16 domain-field-delete-icon"
                                                                            data-icon="times-circle"
                                                                            data-prefix="fas"
                                                                            focusable="false"
                                                                            role="img"
                                                                            style={Object {}}
                                                                            viewBox="0 0 512 512"
                                                                            xmlns="http://www.w3.org/2000/svg"
                                                                          >
                                                                            <path
                                                                              d="M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8zm121.6 313.1c4.7 4.7 4.7 12.3 0 17L338 377.6c-4.7 4.7-12.3 4.7-17 0L256 312l-65.1 65.6c-4.7 4.7-12.3 4.7-17 0L134.4 338c-4.7-4.7-4.7-12.3 0-17l65.6-65-65.6-65.1c-4.7-4.7-4.7-12.3 0-17l39.6-39.6c4.7-4.7 12.3-4.7 17 0l65 65.7 65.1-65.6c4.7-4.7 12.3-4.7 17 0l39.6 39.6c4.7 4.7 4.7 12.3 0 17L312 256l65.6 65.1z"
                                                                              fill="currentColor"
                                                                              style={Object {}}
                                                                            />
                                                                          </svg>
                                                                        </FontAwesomeIcon>
                                                                      </span>
                                                                    </DeleteIcon>
                                                                    <FieldExpansionToggle
                                                                      cls="domain-field-expand-icon"
                                                                      collapsedTitle="Show additional field properties"
                                                                      expanded={false}
                                                                      expandedTitle="Hide additional field properties"
                                                                      id="domainpropertiesrow-expand-1-0"
                                                                      onClick={[Function]}
                                                                    >
                                                                      <div
                                                                        className="field-icon domain-field-expand-icon"
                                                                        id="domainpropertiesrow-expand-1-0"
                                                                        onClick={[Function]}
                                                                        title="Show additional field properties"
                                                                      >
                                                                        <FontAwesomeIcon
                                                                          border={false}
                                                                          className=""
                                                                          fixedWidth={false}
                                                                          flip={null}
                                                                          icon={
                                                                            Object {
                                                                              "icon": Array [
                                                                                448,
                                                                                512,
                                                                                Array [],
                                                                                "f0fe",
                                                                                "M400 32H48C21.5 32 0 53.5 0 80v352c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V80c0-26.5-21.5-48-48-48zm-32 252c0 6.6-5.4 12-12 12h-92v92c0 6.6-5.4 12-12 12h-56c-6.6 0-12-5.4-12-12v-92H92c-6.6 0-12-5.4-12-12v-56c0-6.6 5.4-12 12-12h92v-92c0-6.6 5.4-12 12-12h56c6.6 0 12 5.4 12 12v92h92c6.6 0 12 5.4 12 12v56z",
                                                                              ],
                                                                              "iconName": "plus-square",
                                                                              "prefix": "fas",
                                                                            }
                                                                          }
                                                                          inverse={false}
                                                                          listItem={false}
                                                                          mask={null}
                                                                          pull={null}
                                                                          pulse={false}
                                                                          rotation={null}
                                                                          size="lg"
                                                                          spin={false}
                                                                          symbol={false}
                                                                          title=""
                                                                          transform={null}
                                                                        >
                                                                          <svg
                                                                            aria-hidden="true"
                                                                            className="svg-inline--fa fa-plus-square fa-w-14 fa-lg "
                                                                            data-icon="plus-square"
                                                                            data-prefix="fas"
                                                                            focusable="false"
                                                                            role="img"
                                                                            style={Object {}}
                                                                            viewBox="0 0 448 512"
                                                                            xmlns="http://www.w3.org/2000/svg"
                                                                          >
                                                                            <path
                                                                              d="M400 32H48C21.5 32 0 53.5 0 80v352c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V80c0-26.5-21.5-48-48-48zm-32 252c0 6.6-5.4 12-12 12h-92v92c0 6.6-5.4 12-12 12h-56c-6.6 0-12-5.4-12-12v-92H92c-6.6 0-12-5.4-12-12v-56c0-6.6 5.4-12 12-12h92v-92c0-6.6 5.4-12 12-12h56c6.6 0 12 5.4 12 12v92h92c6.6 0 12 5.4 12 12v56z"
                                                                              fill="currentColor"
                                                                              style={Object {}}
                                                                            />
                                                                          </svg>
                                                                        </FontAwesomeIcon>
                                                                      </div>
                                                                    </FieldExpansionToggle>
                                                                  </div>
                                                                </div>
                                                              </Col>
                                                            </div>
                                                          </div>
                                                        </Row>
                                                        <Collapse
                                                          appear={false}
                                                          dimension="height"
                                                          getDimensionValue={[Function]}
                                                          in={false}
                                                          mountOnEnter={false}
                                                          onExited={[Function]}
                                                          onExiting={[Function]}
                                                          timeout={300}
                                                          unmountOnExit={false}
                                                        >
                                                          <Transition
                                                            appear={false}
                                                            aria-expanded={null}
                                                            enter={true}
                                                            exit={true}
                                                            in={false}
                                                            mountOnEnter={false}
                                                            onEnter={[Function]}
                                                            onEntered={[Function]}
                                                            onEntering={[Function]}
                                                            onExit={[Function]}
                                                            onExited={[Function]}
                                                            onExiting={[Function]}
                                                            timeout={300}
                                                            unmountOnExit={false}
                                                          >
                                                            <div
                                                              aria-expanded={null}
                                                              className="collapse"
                                                            >
                                                              <DomainRowExpandedOptions
                                                                appPropertiesOnly={false}
                                                                domainFormDisplayOptions={
                                                                  Object {
                                                                    "isDragDisabled": false,
                                                                    "phiLevelDisabled": false,
                                                                    "showAddFieldsButton": true,
                                                                    "showRequired": true,
                                                                    "showTextOptions": true,
                                                                    "showValidators": true,
                                                                  }
                                                                }
                                                                domainIndex={1}
                                                                field={
                                                                  Immutable.Record {
                                                                    "conceptURI": undefined,
                                                                    "conditionalFormats": Immutable.List [],
                                                                    "defaultScale": undefined,
                                                                    "defaultValueType": undefined,
                                                                    "defaultValue": undefined,
                                                                    "defaultDisplayValue": undefined,
                                                                    "description": undefined,
                                                                    "dimension": undefined,
                                                                    "excludeFromShifting": false,
                                                                    "format": undefined,
                                                                    "hidden": false,
                                                                    "importAliases": undefined,
                                                                    "label": undefined,
                                                                    "lookupContainer": undefined,
                                                                    "lookupQuery": undefined,
                                                                    "lookupSchema": undefined,
                                                                    "lookupValidator": undefined,
                                                                    "measure": undefined,
                                                                    "mvEnabled": false,
                                                                    "name": "field1",
                                                                    "PHI": undefined,
                                                                    "primaryKey": undefined,
                                                                    "propertyId": undefined,
                                                                    "propertyURI": undefined,
                                                                    "propertyValidators": Immutable.List [],
                                                                    "rangeValidators": Immutable.List [],
                                                                    "rangeURI": "xsd:string",
                                                                    "regexValidators": Immutable.List [],
                                                                    "recommendedVariable": false,
                                                                    "required": false,
                                                                    "scale": undefined,
                                                                    "URL": undefined,
                                                                    "shownInDetailsView": true,
                                                                    "shownInInsertView": true,
                                                                    "shownInUpdateView": true,
                                                                    "visible": true,
                                                                    "dataType": Immutable.Record {
                                                                      "conceptURI": undefined,
                                                                      "display": "Text",
                                                                      "name": "string",
                                                                      "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                                      "alternateRangeURI": "xsd:string",
                                                                      "shortDisplay": "String",
                                                                      "lookupSchema": undefined,
                                                                      "lookupQuery": undefined,
                                                                    },
                                                                    "lookupQueryValue": undefined,
                                                                    "lookupType": Immutable.Record {
                                                                      "conceptURI": undefined,
                                                                      "display": "Lookup",
                                                                      "name": "lookup",
                                                                      "rangeURI": "xsd:string",
                                                                      "alternateRangeURI": undefined,
                                                                      "shortDisplay": undefined,
                                                                      "lookupSchema": undefined,
                                                                      "lookupQuery": undefined,
                                                                    },
                                                                    "original": Object {
                                                                      "conceptURI": undefined,
                                                                      "dataType": Immutable.Record {
                                                                        "conceptURI": undefined,
                                                                        "display": "Text",
                                                                        "name": "string",
                                                                        "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                                        "alternateRangeURI": "xsd:string",
                                                                        "shortDisplay": "String",
                                                                        "lookupSchema": undefined,
                                                                        "lookupQuery": undefined,
                                                                      },
                                                                      "rangeURI": undefined,
                                                                    },
                                                                    "updatedField": false,
                                                                    "isPrimaryKey": false,
                                                                    "lockType": "NotLocked",
                                                                    "wrappedColumnName": undefined,
                                                                  }
                                                                }
                                                                index={0}
                                                                onChange={[Function]}
                                                                onMultiChange={[Function]}
                                                                showingModal={[Function]}
                                                                successBsStyle="success"
                                                              >
                                                                <div
                                                                  className="domain-row-container"
                                                                >
                                                                  <div
                                                                    className="domain-row-handle"
                                                                  />
                                                                  <div
                                                                    className="domain-row-container-expanded"
                                                                  >
                                                                    <Col
                                                                      bsClass="col"
                                                                      componentClass="div"
                                                                      xs={12}
                                                                    >
                                                                      <div
                                                                        className="col-xs-12"
                                                                      >
                                                                        <TextFieldOptions
                                                                          domainIndex={1}
                                                                          index={0}
                                                                          label="Text Options"
                                                                          lockType="NotLocked"
                                                                          onChange={[Function]}
                                                                        >
                                                                          <div>
                                                                            <Row
                                                                              bsClass="row"
                                                                              className="domain-row-expanded"
                                                                              componentClass="div"
                                                                            >
                                                                              <div
                                                                                className="domain-row-expanded row"
                                                                              >
                                                                                <Col
                                                                                  bsClass="col"
                                                                                  componentClass="div"
                                                                                  xs={12}
                                                                                >
                                                                                  <div
                                                                                    className="col-xs-12"
                                                                                  >
                                                                                    <div
                                                                                      className="domain-field-section-heading"
                                                                                    >
                                                                                      Text Options
                                                                                    </div>
                                                                                  </div>
                                                                                </Col>
                                                                              </div>
                                                                            </Row>
                                                                            <Row
                                                                              bsClass="row"
                                                                              className="domain-row-expanded "
                                                                              componentClass="div"
                                                                            >
                                                                              <div
                                                                                className="domain-row-expanded  row"
                                                                              >
                                                                                <Col
                                                                                  bsClass="col"
                                                                                  componentClass="div"
                                                                                  xs={12}
                                                                                >
                                                                                  <div
                                                                                    className="col-xs-12"
                                                                                  >
                                                                                    <div
                                                                                      className="domain-field-label"
                                                                                    >
                                                                                      Maximum Text Length
                                                                                      <LabelHelpTip
                                                                                        body={[Function]}
                                                                                        customStyle={Object {}}
                                                                                        id="tooltip"
                                                                                        size="1x"
                                                                                        title="Max Text Length"
                                                                                      >
                                                                                        <span
                                                                                          className="label-help-target"
                                                                                          onMouseOut={[Function]}
                                                                                          onMouseOver={[Function]}
                                                                                        >
                                                                                          <FontAwesomeIcon
                                                                                            border={false}
                                                                                            className="label-help-icon"
                                                                                            fixedWidth={false}
                                                                                            flip={null}
                                                                                            icon={
                                                                                              Object {
                                                                                                "icon": Array [
                                                                                                  512,
                                                                                                  512,
                                                                                                  Array [],
                                                                                                  "f059",
                                                                                                  "M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z",
                                                                                                ],
                                                                                                "iconName": "question-circle",
                                                                                                "prefix": "fas",
                                                                                              }
                                                                                            }
                                                                                            inverse={false}
                                                                                            listItem={false}
                                                                                            mask={null}
                                                                                            pull={null}
                                                                                            pulse={false}
                                                                                            rotation={null}
                                                                                            size="1x"
                                                                                            spin={false}
                                                                                            style={Object {}}
                                                                                            symbol={false}
                                                                                            title=""
                                                                                            transform={null}
                                                                                          >
                                                                                            <svg
                                                                                              aria-hidden="true"
                                                                                              className="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                                                                                              data-icon="question-circle"
                                                                                              data-prefix="fas"
                                                                                              focusable="false"
                                                                                              role="img"
                                                                                              style={Object {}}
                                                                                              viewBox="0 0 512 512"
                                                                                              xmlns="http://www.w3.org/2000/svg"
                                                                                            >
                                                                                              <path
                                                                                                d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                                                                fill="currentColor"
                                                                                                style={Object {}}
                                                                                              />
                                                                                            </svg>
                                                                                          </FontAwesomeIcon>
                                                                                          <Overlay
                                                                                            animation={[Function]}
                                                                                            placement="right"
                                                                                            rootClose={false}
                                                                                            show={false}
                                                                                            target={
                                                                                              <span
                                                                                                class="label-help-target"
                                                                                              >
                                                                                                <svg
                                                                                                  aria-hidden="true"
                                                                                                  class="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                                                                                                  data-icon="question-circle"
                                                                                                  data-prefix="fas"
                                                                                                  focusable="false"
                                                                                                  role="img"
                                                                                                  viewBox="0 0 512 512"
                                                                                                  xmlns="http://www.w3.org/2000/svg"
                                                                                                >
                                                                                                  <path
                                                                                                    d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                                                                    fill="currentColor"
                                                                                                  />
                                                                                                </svg>
                                                                                              </span>
                                                                                            }
                                                                                          >
                                                                                            <Overlay
                                                                                              placement="right"
                                                                                              rootClose={false}
                                                                                              show={false}
                                                                                              target={
                                                                                                <span
                                                                                                  class="label-help-target"
                                                                                                >
                                                                                                  <svg
                                                                                                    aria-hidden="true"
                                                                                                    class="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                                                                                                    data-icon="question-circle"
                                                                                                    data-prefix="fas"
                                                                                                    focusable="false"
                                                                                                    role="img"
                                                                                                    viewBox="0 0 512 512"
                                                                                                    xmlns="http://www.w3.org/2000/svg"
                                                                                                  >
                                                                                                    <path
                                                                                                      d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                                                                      fill="currentColor"
                                                                                                    />
                                                                                                  </svg>
                                                                                                </span>
                                                                                              }
                                                                                              transition={[Function]}
                                                                                            />
                                                                                          </Overlay>
                                                                                        </span>
                                                                                      </LabelHelpTip>
                                                                                    </div>
                                                                                  </div>
                                                                                </Col>
                                                                              </div>
                                                                            </Row>
                                                                            <Row
                                                                              bsClass="row"
                                                                              className="domain-row-expanded"
                                                                              componentClass="div"
                                                                            >
                                                                              <div
                                                                                className="domain-row-expanded row"
                                                                              >
                                                                                <Col
                                                                                  bsClass="col"
                                                                                  className="domain-text-options-col"
                                                                                  componentClass="div"
                                                                                  xs={12}
                                                                                >
                                                                                  <div
                                                                                    className="domain-text-options-col col-xs-12"
                                                                                  >
                                                                                    <FormControl
                                                                                      bsClass="form-control"
                                                                                      checked={true}
                                                                                      className="domain-text-options-radio1 domain-field-float-left"
                                                                                      componentClass="input"
                                                                                      disabled={false}
                                                                                      id="domainpropertiesrow-maxLength-1-0"
                                                                                      onChange={[Function]}
                                                                                      type="radio"
                                                                                      value="maxLength"
                                                                                    >
                                                                                      <input
                                                                                        checked={true}
                                                                                        className="domain-text-options-radio1 domain-field-float-left form-control"
                                                                                        disabled={false}
                                                                                        id="domainpropertiesrow-maxLength-1-0"
                                                                                        onChange={[Function]}
                                                                                        type="radio"
                                                                                        value="maxLength"
                                                                                      />
                                                                                    </FormControl>
                                                                                    <div
                                                                                      className=""
                                                                                    >
                                                                                      Unlimited
                                                                                    </div>
                                                                                  </div>
                                                                                </Col>
                                                                              </div>
                                                                            </Row>
                                                                            <Row
                                                                              bsClass="row"
                                                                              className="domain-row-expanded"
                                                                              componentClass="div"
                                                                            >
                                                                              <div
                                                                                className="domain-row-expanded row"
                                                                              >
                                                                                <Col
                                                                                  bsClass="col"
                                                                                  componentClass="div"
                                                                                  xs={12}
                                                                                >
                                                                                  <div
                                                                                    className="col-xs-12"
                                                                                  >
                                                                                    <FormControl
                                                                                      bsClass="form-control"
                                                                                      checked={false}
                                                                                      className="domain-text-options-radio2 domain-field-float-left"
                                                                                      componentClass="input"
                                                                                      id="domainpropertiesrow-customLength-1-0"
                                                                                      onChange={[Function]}
                                                                                      type="radio"
                                                                                      value="customLength"
                                                                                    >
                                                                                      <input
                                                                                        checked={false}
                                                                                        className="domain-text-options-radio2 domain-field-float-left form-control"
                                                                                        id="domainpropertiesrow-customLength-1-0"
                                                                                        onChange={[Function]}
                                                                                        type="radio"
                                                                                        value="customLength"
                                                                                      />
                                                                                    </FormControl>
                                                                                    <span
                                                                                      className="domain-text-options-length domain-field-float-left domain-text-label"
                                                                                    >
                                                                                      No longer than X characters
                                                                                    </span>
                                                                                    <FormControl
                                                                                      bsClass="form-control"
                                                                                      className="domain-text-length-field"
                                                                                      componentClass="input"
                                                                                      disabled={true}
                                                                                      id="domainpropertiesrow-scale-1-0"
                                                                                      name="domainpropertiesrow-scale"
                                                                                      onChange={[Function]}
                                                                                      type="number"
                                                                                      value={4000}
                                                                                    >
                                                                                      <input
                                                                                        className="domain-text-length-field form-control"
                                                                                        disabled={true}
                                                                                        id="domainpropertiesrow-scale-1-0"
                                                                                        name="domainpropertiesrow-scale"
                                                                                        onChange={[Function]}
                                                                                        type="number"
                                                                                        value={4000}
                                                                                      />
                                                                                    </FormControl>
                                                                                  </div>
                                                                                </Col>
                                                                              </div>
                                                                            </Row>
                                                                          </div>
                                                                        </TextFieldOptions>
                                                                      </div>
                                                                    </Col>
                                                                    <Col
                                                                      bsClass="col"
                                                                      componentClass="div"
                                                                      lg={10}
                                                                      xs={12}
                                                                    >
                                                                      <div
                                                                        className="col-lg-10 col-xs-12"
                                                                      >
                                                                        <NameAndLinkingOptions
                                                                          domainIndex={1}
                                                                          field={
                                                                            Immutable.Record {
                                                                              "conceptURI": undefined,
                                                                              "conditionalFormats": Immutable.List [],
                                                                              "defaultScale": undefined,
                                                                              "defaultValueType": undefined,
                                                                              "defaultValue": undefined,
                                                                              "defaultDisplayValue": undefined,
                                                                              "description": undefined,
                                                                              "dimension": undefined,
                                                                              "excludeFromShifting": false,
                                                                              "format": undefined,
                                                                              "hidden": false,
                                                                              "importAliases": undefined,
                                                                              "label": undefined,
                                                                              "lookupContainer": undefined,
                                                                              "lookupQuery": undefined,
                                                                              "lookupSchema": undefined,
                                                                              "lookupValidator": undefined,
                                                                              "measure": undefined,
                                                                              "mvEnabled": false,
                                                                              "name": "field1",
                                                                              "PHI": undefined,
                                                                              "primaryKey": undefined,
                                                                              "propertyId": undefined,
                                                                              "propertyURI": undefined,
                                                                              "propertyValidators": Immutable.List [],
                                                                              "rangeValidators": Immutable.List [],
                                                                              "rangeURI": "xsd:string",
                                                                              "regexValidators": Immutable.List [],
                                                                              "recommendedVariable": false,
                                                                              "required": false,
                                                                              "scale": undefined,
                                                                              "URL": undefined,
                                                                              "shownInDetailsView": true,
                                                                              "shownInInsertView": true,
                                                                              "shownInUpdateView": true,
                                                                              "visible": true,
                                                                              "dataType": Immutable.Record {
                                                                                "conceptURI": undefined,
                                                                                "display": "Text",
                                                                                "name": "string",
                                                                                "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                                                "alternateRangeURI": "xsd:string",
                                                                                "shortDisplay": "String",
                                                                                "lookupSchema": undefined,
                                                                                "lookupQuery": undefined,
                                                                              },
                                                                              "lookupQueryValue": undefined,
                                                                              "lookupType": Immutable.Record {
                                                                                "conceptURI": undefined,
                                                                                "display": "Lookup",
                                                                                "name": "lookup",
                                                                                "rangeURI": "xsd:string",
                                                                                "alternateRangeURI": undefined,
                                                                                "shortDisplay": undefined,
                                                                                "lookupSchema": undefined,
                                                                                "lookupQuery": undefined,
                                                                              },
                                                                              "original": Object {
                                                                                "conceptURI": undefined,
                                                                                "dataType": Immutable.Record {
                                                                                  "conceptURI": undefined,
                                                                                  "display": "Text",
                                                                                  "name": "string",
                                                                                  "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                                                  "alternateRangeURI": "xsd:string",
                                                                                  "shortDisplay": "String",
                                                                                  "lookupSchema": undefined,
                                                                                  "lookupQuery": undefined,
                                                                                },
                                                                                "rangeURI": undefined,
                                                                              },
                                                                              "updatedField": false,
                                                                              "isPrimaryKey": false,
                                                                              "lockType": "NotLocked",
                                                                              "wrappedColumnName": undefined,
                                                                            }
                                                                          }
                                                                          index={0}
                                                                          onChange={[Function]}
                                                                        >
                                                                          <div>
                                                                            <Row
                                                                              bsClass="row"
                                                                              className="domain-row-expanded"
                                                                              componentClass="div"
                                                                            >
                                                                              <div
                                                                                className="domain-row-expanded row"
                                                                              >
                                                                                <Col
                                                                                  bsClass="col"
                                                                                  componentClass="div"
                                                                                  xs={12}
                                                                                >
                                                                                  <div
                                                                                    className="col-xs-12"
                                                                                  >
                                                                                    <div
                                                                                      className="domain-field-section-heading domain-field-section-hdr"
                                                                                    >
                                                                                      Name and Linking Options
                                                                                    </div>
                                                                                  </div>
                                                                                </Col>
                                                                              </div>
                                                                            </Row>
                                                                            <Row
                                                                              bsClass="row"
                                                                              className="domain-row-expanded"
                                                                              componentClass="div"
                                                                            >
                                                                              <div
                                                                                className="domain-row-expanded row"
                                                                              >
                                                                                <div>
                                                                                  <Col
                                                                                    bsClass="col"
                                                                                    componentClass="div"
                                                                                    xs={5}
                                                                                  >
                                                                                    <div
                                                                                      className="col-xs-5"
                                                                                    >
                                                                                      <div
                                                                                        className="domain-field-label"
                                                                                      >
                                                                                        Description
                                                                                      </div>
                                                                                      <FormControl
                                                                                        bsClass="form-control"
                                                                                        className="form-control textarea-noresize"
                                                                                        componentClass="textarea"
                                                                                        disabled={false}
                                                                                        id="domainpropertiesrow-description-1-0"
                                                                                        name="domainpropertiesrow-description"
                                                                                        onChange={[Function]}
                                                                                        rows={4}
                                                                                        value=""
                                                                                      >
                                                                                        <textarea
                                                                                          className="form-control textarea-noresize form-control"
                                                                                          disabled={false}
                                                                                          id="domainpropertiesrow-description-1-0"
                                                                                          name="domainpropertiesrow-description"
                                                                                          onChange={[Function]}
                                                                                          rows={4}
                                                                                          value=""
                                                                                        />
                                                                                      </FormControl>
                                                                                    </div>
                                                                                  </Col>
                                                                                  <Col
                                                                                    bsClass="col"
                                                                                    componentClass="div"
                                                                                    xs={3}
                                                                                  >
                                                                                    <div
                                                                                      className="col-xs-3"
                                                                                    >
                                                                                      <div
                                                                                        className="domain-field-label"
                                                                                      >
                                                                                        Label
                                                                                      </div>
                                                                                      <FormControl
                                                                                        bsClass="form-control"
                                                                                        componentClass="input"
                                                                                        disabled={false}
                                                                                        id="domainpropertiesrow-label-1-0"
                                                                                        name="domainpropertiesrow-label"
                                                                                        onChange={[Function]}
                                                                                        type="text"
                                                                                        value=""
                                                                                      >
                                                                                        <input
                                                                                          className="form-control"
                                                                                          disabled={false}
                                                                                          id="domainpropertiesrow-label-1-0"
                                                                                          name="domainpropertiesrow-label"
                                                                                          onChange={[Function]}
                                                                                          type="text"
                                                                                          value=""
                                                                                        />
                                                                                      </FormControl>
                                                                                      <div
                                                                                        className="domain-field-label"
                                                                                      >
                                                                                        Import Aliases
                                                                                        <LabelHelpTip
                                                                                          body={[Function]}
                                                                                          customStyle={Object {}}
                                                                                          id="tooltip"
                                                                                          size="1x"
                                                                                          title="Import Aliases"
                                                                                        >
                                                                                          <span
                                                                                            className="label-help-target"
                                                                                            onMouseOut={[Function]}
                                                                                            onMouseOver={[Function]}
                                                                                          >
                                                                                            <FontAwesomeIcon
                                                                                              border={false}
                                                                                              className="label-help-icon"
                                                                                              fixedWidth={false}
                                                                                              flip={null}
                                                                                              icon={
                                                                                                Object {
                                                                                                  "icon": Array [
                                                                                                    512,
                                                                                                    512,
                                                                                                    Array [],
                                                                                                    "f059",
                                                                                                    "M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z",
                                                                                                  ],
                                                                                                  "iconName": "question-circle",
                                                                                                  "prefix": "fas",
                                                                                                }
                                                                                              }
                                                                                              inverse={false}
                                                                                              listItem={false}
                                                                                              mask={null}
                                                                                              pull={null}
                                                                                              pulse={false}
                                                                                              rotation={null}
                                                                                              size="1x"
                                                                                              spin={false}
                                                                                              style={Object {}}
                                                                                              symbol={false}
                                                                                              title=""
                                                                                              transform={null}
                                                                                            >
                                                                                              <svg
                                                                                                aria-hidden="true"
                                                                                                className="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                                                                                                data-icon="question-circle"
                                                                                                data-prefix="fas"
                                                                                                focusable="false"
                                                                                                role="img"
                                                                                                style={Object {}}
                                                                                                viewBox="0 0 512 512"
                                                                                                xmlns="http://www.w3.org/2000/svg"
                                                                                              >
                                                                                                <path
                                                                                                  d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                                                                  fill="currentColor"
                                                                                                  style={Object {}}
                                                                                                />
                                                                                              </svg>
                                                                                            </FontAwesomeIcon>
                                                                                            <Overlay
                                                                                              animation={[Function]}
                                                                                              placement="right"
                                                                                              rootClose={false}
                                                                                              show={false}
                                                                                              target={
                                                                                                <span
                                                                                                  class="label-help-target"
                                                                                                >
                                                                                                  <svg
                                                                                                    aria-hidden="true"
                                                                                                    class="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                                                                                                    data-icon="question-circle"
                                                                                                    data-prefix="fas"
                                                                                                    focusable="false"
                                                                                                    role="img"
                                                                                                    viewBox="0 0 512 512"
                                                                                                    xmlns="http://www.w3.org/2000/svg"
                                                                                                  >
                                                                                                    <path
                                                                                                      d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                                                                      fill="currentColor"
                                                                                                    />
                                                                                                  </svg>
                                                                                                </span>
                                                                                              }
                                                                                            >
                                                                                              <Overlay
                                                                                                placement="right"
                                                                                                rootClose={false}
                                                                                                show={false}
                                                                                                target={
                                                                                                  <span
                                                                                                    class="label-help-target"
                                                                                                  >
                                                                                                    <svg
                                                                                                      aria-hidden="true"
                                                                                                      class="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                                                                                                      data-icon="question-circle"
                                                                                                      data-prefix="fas"
                                                                                                      focusable="false"
                                                                                                      role="img"
                                                                                                      viewBox="0 0 512 512"
                                                                                                      xmlns="http://www.w3.org/2000/svg"
                                                                                                    >
                                                                                                      <path
                                                                                                        d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                                                                        fill="currentColor"
                                                                                                      />
                                                                                                    </svg>
                                                                                                  </span>
                                                                                                }
                                                                                                transition={[Function]}
                                                                                              />
                                                                                            </Overlay>
                                                                                          </span>
                                                                                        </LabelHelpTip>
                                                                                      </div>
                                                                                      <FormControl
                                                                                        bsClass="form-control"
                                                                                        componentClass="input"
                                                                                        disabled={false}
                                                                                        id="domainpropertiesrow-importAliases-1-0"
                                                                                        name="domainpropertiesrow-importAliases"
                                                                                        onChange={[Function]}
                                                                                        type="text"
                                                                                        value=""
                                                                                      >
                                                                                        <input
                                                                                          className="form-control"
                                                                                          disabled={false}
                                                                                          id="domainpropertiesrow-importAliases-1-0"
                                                                                          name="domainpropertiesrow-importAliases"
                                                                                          onChange={[Function]}
                                                                                          type="text"
                                                                                          value=""
                                                                                        />
                                                                                      </FormControl>
                                                                                    </div>
                                                                                  </Col>
                                                                                  <Col
                                                                                    bsClass="col"
                                                                                    componentClass="div"
                                                                                    xs={4}
                                                                                  >
                                                                                    <div
                                                                                      className="col-xs-4"
                                                                                    >
                                                                                      <div
                                                                                        className="domain-field-label"
                                                                                      >
                                                                                        URL
                                                                                        <LabelHelpTip
                                                                                          body={[Function]}
                                                                                          customStyle={Object {}}
                                                                                          id="tooltip"
                                                                                          size="1x"
                                                                                          title="URL"
                                                                                        >
                                                                                          <span
                                                                                            className="label-help-target"
                                                                                            onMouseOut={[Function]}
                                                                                            onMouseOver={[Function]}
                                                                                          >
                                                                                            <FontAwesomeIcon
                                                                                              border={false}
                                                                                              className="label-help-icon"
                                                                                              fixedWidth={false}
                                                                                              flip={null}
                                                                                              icon={
                                                                                                Object {
                                                                                                  "icon": Array [
                                                                                                    512,
                                                                                                    512,
                                                                                                    Array [],
                                                                                                    "f059",
                                                                                                    "M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z",
                                                                                                  ],
                                                                                                  "iconName": "question-circle",
                                                                                                  "prefix": "fas",
                                                                                                }
                                                                                              }
                                                                                              inverse={false}
                                                                                              listItem={false}
                                                                                              mask={null}
                                                                                              pull={null}
                                                                                              pulse={false}
                                                                                              rotation={null}
                                                                                              size="1x"
                                                                                              spin={false}
                                                                                              style={Object {}}
                                                                                              symbol={false}
                                                                                              title=""
                                                                                              transform={null}
                                                                                            >
                                                                                              <svg
                                                                                                aria-hidden="true"
                                                                                                className="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                                                                                                data-icon="question-circle"
                                                                                                data-prefix="fas"
                                                                                                focusable="false"
                                                                                                role="img"
                                                                                                style={Object {}}
                                                                                                viewBox="0 0 512 512"
                                                                                                xmlns="http://www.w3.org/2000/svg"
                                                                                              >
                                                                                                <path
                                                                                                  d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                                                                  fill="currentColor"
                                                                                                  style={Object {}}
                                                                                                />
                                                                                              </svg>
                                                                                            </FontAwesomeIcon>
                                                                                            <Overlay
                                                                                              animation={[Function]}
                                                                                              placement="right"
                                                                                              rootClose={false}
                                                                                              show={false}
                                                                                              target={
                                                                                                <span
                                                                                                  class="label-help-target"
                                                                                                >
                                                                                                  <svg
                                                                                                    aria-hidden="true"
                                                                                                    class="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                                                                                                    data-icon="question-circle"
                                                                                                    data-prefix="fas"
                                                                                                    focusable="false"
                                                                                                    role="img"
                                                                                                    viewBox="0 0 512 512"
                                                                                                    xmlns="http://www.w3.org/2000/svg"
                                                                                                  >
                                                                                                    <path
                                                                                                      d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                                                                      fill="currentColor"
                                                                                                    />
                                                                                                  </svg>
                                                                                                </span>
                                                                                              }
                                                                                            >
                                                                                              <Overlay
                                                                                                placement="right"
                                                                                                rootClose={false}
                                                                                                show={false}
                                                                                                target={
                                                                                                  <span
                                                                                                    class="label-help-target"
                                                                                                  >
                                                                                                    <svg
                                                                                                      aria-hidden="true"
                                                                                                      class="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                                                                                                      data-icon="question-circle"
                                                                                                      data-prefix="fas"
                                                                                                      focusable="false"
                                                                                                      role="img"
                                                                                                      viewBox="0 0 512 512"
                                                                                                      xmlns="http://www.w3.org/2000/svg"
                                                                                                    >
                                                                                                      <path
                                                                                                        d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                                                                        fill="currentColor"
                                                                                                      />
                                                                                                    </svg>
                                                                                                  </span>
                                                                                                }
                                                                                                transition={[Function]}
                                                                                              />
                                                                                            </Overlay>
                                                                                          </span>
                                                                                        </LabelHelpTip>
                                                                                      </div>
                                                                                      <FormControl
                                                                                        bsClass="form-control"
                                                                                        componentClass="input"
                                                                                        disabled={false}
                                                                                        id="domainpropertiesrow-URL-1-0"
                                                                                        name="domainpropertiesrow-URL"
                                                                                        onChange={[Function]}
                                                                                        type="text"
                                                                                        value=""
                                                                                      >
                                                                                        <input
                                                                                          className="form-control"
                                                                                          disabled={false}
                                                                                          id="domainpropertiesrow-URL-1-0"
                                                                                          name="domainpropertiesrow-URL"
                                                                                          onChange={[Function]}
                                                                                          type="text"
                                                                                          value=""
                                                                                        />
                                                                                      </FormControl>
                                                                                    </div>
                                                                                  </Col>
                                                                                </div>
                                                                              </div>
                                                                            </Row>
                                                                          </div>
                                                                        </NameAndLinkingOptions>
                                                                      </div>
                                                                    </Col>
                                                                    <Col
                                                                      bsClass="col"
                                                                      componentClass="div"
                                                                      xs={12}
                                                                    >
                                                                      <div
                                                                        className="col-xs-12"
                                                                      >
                                                                        <ConditionalFormattingAndValidation
                                                                          domainFormDisplayOptions={
                                                                            Object {
                                                                              "isDragDisabled": false,
                                                                              "phiLevelDisabled": false,
                                                                              "showAddFieldsButton": true,
                                                                              "showRequired": true,
                                                                              "showTextOptions": true,
                                                                              "showValidators": true,
                                                                            }
                                                                          }
                                                                          domainIndex={1}
                                                                          field={
                                                                            Immutable.Record {
                                                                              "conceptURI": undefined,
                                                                              "conditionalFormats": Immutable.List [],
                                                                              "defaultScale": undefined,
                                                                              "defaultValueType": undefined,
                                                                              "defaultValue": undefined,
                                                                              "defaultDisplayValue": undefined,
                                                                              "description": undefined,
                                                                              "dimension": undefined,
                                                                              "excludeFromShifting": false,
                                                                              "format": undefined,
                                                                              "hidden": false,
                                                                              "importAliases": undefined,
                                                                              "label": undefined,
                                                                              "lookupContainer": undefined,
                                                                              "lookupQuery": undefined,
                                                                              "lookupSchema": undefined,
                                                                              "lookupValidator": undefined,
                                                                              "measure": undefined,
                                                                              "mvEnabled": false,
                                                                              "name": "field1",
                                                                              "PHI": undefined,
                                                                              "primaryKey": undefined,
                                                                              "propertyId": undefined,
                                                                              "propertyURI": undefined,
                                                                              "propertyValidators": Immutable.List [],
                                                                              "rangeValidators": Immutable.List [],
                                                                              "rangeURI": "xsd:string",
                                                                              "regexValidators": Immutable.List [],
                                                                              "recommendedVariable": false,
                                                                              "required": false,
                                                                              "scale": undefined,
                                                                              "URL": undefined,
                                                                              "shownInDetailsView": true,
                                                                              "shownInInsertView": true,
                                                                              "shownInUpdateView": true,
                                                                              "visible": true,
                                                                              "dataType": Immutable.Record {
                                                                                "conceptURI": undefined,
                                                                                "display": "Text",
                                                                                "name": "string",
                                                                                "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                                                "alternateRangeURI": "xsd:string",
                                                                                "shortDisplay": "String",
                                                                                "lookupSchema": undefined,
                                                                                "lookupQuery": undefined,
                                                                              },
                                                                              "lookupQueryValue": undefined,
                                                                              "lookupType": Immutable.Record {
                                                                                "conceptURI": undefined,
                                                                                "display": "Lookup",
                                                                                "name": "lookup",
                                                                                "rangeURI": "xsd:string",
                                                                                "alternateRangeURI": undefined,
                                                                                "shortDisplay": undefined,
                                                                                "lookupSchema": undefined,
                                                                                "lookupQuery": undefined,
                                                                              },
                                                                              "original": Object {
                                                                                "conceptURI": undefined,
                                                                                "dataType": Immutable.Record {
                                                                                  "conceptURI": undefined,
                                                                                  "display": "Text",
                                                                                  "name": "string",
                                                                                  "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                                                  "alternateRangeURI": "xsd:string",
                                                                                  "shortDisplay": "String",
                                                                                  "lookupSchema": undefined,
                                                                                  "lookupQuery": undefined,
                                                                                },
                                                                                "rangeURI": undefined,
                                                                              },
                                                                              "updatedField": false,
                                                                              "isPrimaryKey": false,
                                                                              "lockType": "NotLocked",
                                                                              "wrappedColumnName": undefined,
                                                                            }
                                                                          }
                                                                          hideConditionalFormatting={false}
                                                                          index={0}
                                                                          onChange={[Function]}
                                                                          showingModal={[Function]}
                                                                          successBsStyle="success"
                                                                        >
                                                                          <div>
                                                                            <Row
                                                                              bsClass="row"
                                                                              className="domain-row-expanded"
                                                                              componentClass="div"
                                                                            >
                                                                              <div
                                                                                className="domain-row-expanded row"
                                                                              >
                                                                                <Col
                                                                                  bsClass="col"
                                                                                  componentClass="div"
                                                                                  xs={12}
                                                                                >
                                                                                  <div
                                                                                    className="col-xs-12"
                                                                                  >
                                                                                    <div
                                                                                      className="domain-field-section-heading domain-field-section-hdr"
                                                                                    >
                                                                                      Conditional Formatting and Validation Options
                                                                                    </div>
                                                                                  </div>
                                                                                </Col>
                                                                              </div>
                                                                            </Row>
                                                                            <Row
                                                                              bsClass="row"
                                                                              className="domain-row-expanded"
                                                                              componentClass="div"
                                                                            >
                                                                              <div
                                                                                className="domain-row-expanded row"
                                                                              >
                                                                                <Col
                                                                                  bsClass="col"
                                                                                  componentClass="div"
                                                                                  xs={12}
                                                                                >
                                                                                  <div
                                                                                    className="col-xs-12"
                                                                                  >
                                                                                    <div
                                                                                      className="domain-validation-group"
                                                                                    >
                                                                                      <div
                                                                                        className="domain-field-label domain-no-wrap"
                                                                                      >
                                                                                        Create Conditional Format Criteria
                                                                                        <LabelHelpTip
                                                                                          body={[Function]}
                                                                                          customStyle={Object {}}
                                                                                          id="tooltip"
                                                                                          size="1x"
                                                                                          title="Add Conditional Format"
                                                                                        >
                                                                                          <span
                                                                                            className="label-help-target"
                                                                                            onMouseOut={[Function]}
                                                                                            onMouseOver={[Function]}
                                                                                          >
                                                                                            <FontAwesomeIcon
                                                                                              border={false}
                                                                                              className="label-help-icon"
                                                                                              fixedWidth={false}
                                                                                              flip={null}
                                                                                              icon={
                                                                                                Object {
                                                                                                  "icon": Array [
                                                                                                    512,
                                                                                                    512,
                                                                                                    Array [],
                                                                                                    "f059",
                                                                                                    "M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z",
                                                                                                  ],
                                                                                                  "iconName": "question-circle",
                                                                                                  "prefix": "fas",
                                                                                                }
                                                                                              }
                                                                                              inverse={false}
                                                                                              listItem={false}
                                                                                              mask={null}
                                                                                              pull={null}
                                                                                              pulse={false}
                                                                                              rotation={null}
                                                                                              size="1x"
                                                                                              spin={false}
                                                                                              style={Object {}}
                                                                                              symbol={false}
                                                                                              title=""
                                                                                              transform={null}
                                                                                            >
                                                                                              <svg
                                                                                                aria-hidden="true"
                                                                                                className="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                                                                                                data-icon="question-circle"
                                                                                                data-prefix="fas"
                                                                                                focusable="false"
                                                                                                role="img"
                                                                                                style={Object {}}
                                                                                                viewBox="0 0 512 512"
                                                                                                xmlns="http://www.w3.org/2000/svg"
                                                                                              >
                                                                                                <path
                                                                                                  d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                                                                  fill="currentColor"
                                                                                                  style={Object {}}
                                                                                                />
                                                                                              </svg>
                                                                                            </FontAwesomeIcon>
                                                                                            <Overlay
                                                                                              animation={[Function]}
                                                                                              placement="right"
                                                                                              rootClose={false}
                                                                                              show={false}
                                                                                              target={
                                                                                                <span
                                                                                                  class="label-help-target"
                                                                                                >
                                                                                                  <svg
                                                                                                    aria-hidden="true"
                                                                                                    class="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                                                                                                    data-icon="question-circle"
                                                                                                    data-prefix="fas"
                                                                                                    focusable="false"
                                                                                                    role="img"
                                                                                                    viewBox="0 0 512 512"
                                                                                                    xmlns="http://www.w3.org/2000/svg"
                                                                                                  >
                                                                                                    <path
                                                                                                      d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                                                                      fill="currentColor"
                                                                                                    />
                                                                                                  </svg>
                                                                                                </span>
                                                                                              }
                                                                                            >
                                                                                              <Overlay
                                                                                                placement="right"
                                                                                                rootClose={false}
                                                                                                show={false}
                                                                                                target={
                                                                                                  <span
                                                                                                    class="label-help-target"
                                                                                                  >
                                                                                                    <svg
                                                                                                      aria-hidden="true"
                                                                                                      class="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                                                                                                      data-icon="question-circle"
                                                                                                      data-prefix="fas"
                                                                                                      focusable="false"
                                                                                                      role="img"
                                                                                                      viewBox="0 0 512 512"
                                                                                                      xmlns="http://www.w3.org/2000/svg"
                                                                                                    >
                                                                                                      <path
                                                                                                        d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                                                                        fill="currentColor"
                                                                                                      />
                                                                                                    </svg>
                                                                                                  </span>
                                                                                                }
                                                                                                transition={[Function]}
                                                                                              />
                                                                                            </Overlay>
                                                                                          </span>
                                                                                        </LabelHelpTip>
                                                                                      </div>
                                                                                      <div>
                                                                                        <Button
                                                                                          active={false}
                                                                                          block={false}
                                                                                          bsClass="btn"
                                                                                          bsStyle="default"
                                                                                          className="domain-validation-button"
                                                                                          disabled={false}
                                                                                          id="domainpropertiesrow-conditionalFormat-1-0"
                                                                                          name="domainpropertiesrow-conditionalFormat"
                                                                                          onClick={[Function]}
                                                                                        >
                                                                                          <button
                                                                                            className="domain-validation-button btn btn-default"
                                                                                            disabled={false}
                                                                                            id="domainpropertiesrow-conditionalFormat-1-0"
                                                                                            name="domainpropertiesrow-conditionalFormat"
                                                                                            onClick={[Function]}
                                                                                            type="button"
                                                                                          >
                                                                                            Add Format
                                                                                          </button>
                                                                                        </Button>
                                                                                        <span
                                                                                          className="domain-text-label"
                                                                                        >
                                                                                          None Set
                                                                                        </span>
                                                                                      </div>
                                                                                    </div>
                                                                                    <div
                                                                                      className="domain-validation-group"
                                                                                    >
                                                                                      <div
                                                                                        className="domain-field-label domain-no-wrap"
                                                                                      >
                                                                                        Create Regular Expression Validator
                                                                                        <LabelHelpTip
                                                                                          body={[Function]}
                                                                                          customStyle={Object {}}
                                                                                          id="tooltip"
                                                                                          size="1x"
                                                                                          title="Add Regex Validator"
                                                                                        >
                                                                                          <span
                                                                                            className="label-help-target"
                                                                                            onMouseOut={[Function]}
                                                                                            onMouseOver={[Function]}
                                                                                          >
                                                                                            <FontAwesomeIcon
                                                                                              border={false}
                                                                                              className="label-help-icon"
                                                                                              fixedWidth={false}
                                                                                              flip={null}
                                                                                              icon={
                                                                                                Object {
                                                                                                  "icon": Array [
                                                                                                    512,
                                                                                                    512,
                                                                                                    Array [],
                                                                                                    "f059",
                                                                                                    "M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z",
                                                                                                  ],
                                                                                                  "iconName": "question-circle",
                                                                                                  "prefix": "fas",
                                                                                                }
                                                                                              }
                                                                                              inverse={false}
                                                                                              listItem={false}
                                                                                              mask={null}
                                                                                              pull={null}
                                                                                              pulse={false}
                                                                                              rotation={null}
                                                                                              size="1x"
                                                                                              spin={false}
                                                                                              style={Object {}}
                                                                                              symbol={false}
                                                                                              title=""
                                                                                              transform={null}
                                                                                            >
                                                                                              <svg
                                                                                                aria-hidden="true"
                                                                                                className="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                                                                                                data-icon="question-circle"
                                                                                                data-prefix="fas"
                                                                                                focusable="false"
                                                                                                role="img"
                                                                                                style={Object {}}
                                                                                                viewBox="0 0 512 512"
                                                                                                xmlns="http://www.w3.org/2000/svg"
                                                                                              >
                                                                                                <path
                                                                                                  d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                                                                  fill="currentColor"
                                                                                                  style={Object {}}
                                                                                                />
                                                                                              </svg>
                                                                                            </FontAwesomeIcon>
                                                                                            <Overlay
                                                                                              animation={[Function]}
                                                                                              placement="right"
                                                                                              rootClose={false}
                                                                                              show={false}
                                                                                              target={
                                                                                                <span
                                                                                                  class="label-help-target"
                                                                                                >
                                                                                                  <svg
                                                                                                    aria-hidden="true"
                                                                                                    class="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                                                                                                    data-icon="question-circle"
                                                                                                    data-prefix="fas"
                                                                                                    focusable="false"
                                                                                                    role="img"
                                                                                                    viewBox="0 0 512 512"
                                                                                                    xmlns="http://www.w3.org/2000/svg"
                                                                                                  >
                                                                                                    <path
                                                                                                      d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                                                                      fill="currentColor"
                                                                                                    />
                                                                                                  </svg>
                                                                                                </span>
                                                                                              }
                                                                                            >
                                                                                              <Overlay
                                                                                                placement="right"
                                                                                                rootClose={false}
                                                                                                show={false}
                                                                                                target={
                                                                                                  <span
                                                                                                    class="label-help-target"
                                                                                                  >
                                                                                                    <svg
                                                                                                      aria-hidden="true"
                                                                                                      class="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                                                                                                      data-icon="question-circle"
                                                                                                      data-prefix="fas"
                                                                                                      focusable="false"
                                                                                                      role="img"
                                                                                                      viewBox="0 0 512 512"
                                                                                                      xmlns="http://www.w3.org/2000/svg"
                                                                                                    >
                                                                                                      <path
                                                                                                        d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                                                                        fill="currentColor"
                                                                                                      />
                                                                                                    </svg>
                                                                                                  </span>
                                                                                                }
                                                                                                transition={[Function]}
                                                                                              />
                                                                                            </Overlay>
                                                                                          </span>
                                                                                        </LabelHelpTip>
                                                                                      </div>
                                                                                      <div>
                                                                                        <Button
                                                                                          active={false}
                                                                                          block={false}
                                                                                          bsClass="btn"
                                                                                          bsStyle="default"
                                                                                          className="domain-validation-button"
                                                                                          disabled={false}
                                                                                          id="domainpropertiesrow-regexValidator-1-0"
                                                                                          name="domainpropertiesrow-regexValidator"
                                                                                          onClick={[Function]}
                                                                                        >
                                                                                          <button
                                                                                            className="domain-validation-button btn btn-default"
                                                                                            disabled={false}
                                                                                            id="domainpropertiesrow-regexValidator-1-0"
                                                                                            name="domainpropertiesrow-regexValidator"
                                                                                            onClick={[Function]}
                                                                                            type="button"
                                                                                          >
                                                                                            Add Regex
                                                                                          </button>
                                                                                        </Button>
                                                                                        <span
                                                                                          className="domain-text-label"
                                                                                        >
                                                                                          None Set
                                                                                        </span>
                                                                                      </div>
                                                                                    </div>
                                                                                  </div>
                                                                                </Col>
                                                                              </div>
                                                                            </Row>
                                                                          </div>
                                                                        </ConditionalFormattingAndValidation>
                                                                      </div>
                                                                    </Col>
                                                                  </div>
                                                                </div>
                                                              </DomainRowExpandedOptions>
                                                            </div>
                                                          </Transition>
                                                        </Collapse>
                                                      </div>
                                                    </Draggable>
                                                  </ConnectFunction>
                                                </DomainRow>
                                                <DomainRow
                                                  appPropertiesOnly={false}
                                                  availableTypes={
                                                    Immutable.List [
                                                      Immutable.Record {
                                                        "conceptURI": undefined,
                                                        "display": "Text",
                                                        "name": "string",
                                                        "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                        "alternateRangeURI": "xsd:string",
                                                        "shortDisplay": "String",
                                                        "lookupSchema": undefined,
                                                        "lookupQuery": undefined,
                                                      },
                                                      Immutable.Record {
                                                        "conceptURI": undefined,
                                                        "display": "Multi-Line Text",
                                                        "name": "multiLine",
                                                        "rangeURI": "http://www.w3.org/2001/XMLSchema#multiLine",
                                                        "alternateRangeURI": undefined,
                                                        "shortDisplay": undefined,
                                                        "lookupSchema": undefined,
                                                        "lookupQuery": undefined,
                                                      },
                                                      Immutable.Record {
                                                        "conceptURI": undefined,
                                                        "display": "Boolean",
                                                        "name": "boolean",
                                                        "rangeURI": "http://www.w3.org/2001/XMLSchema#boolean",
                                                        "alternateRangeURI": "xsd:boolean",
                                                        "shortDisplay": undefined,
                                                        "lookupSchema": undefined,
                                                        "lookupQuery": undefined,
                                                      },
                                                      Immutable.Record {
                                                        "conceptURI": undefined,
                                                        "display": "Integer",
                                                        "name": "int",
                                                        "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                                        "alternateRangeURI": "xsd:int",
                                                        "shortDisplay": undefined,
                                                        "lookupSchema": undefined,
                                                        "lookupQuery": undefined,
                                                      },
                                                      Immutable.Record {
                                                        "conceptURI": undefined,
                                                        "display": "Decimal",
                                                        "name": "double",
                                                        "rangeURI": "http://www.w3.org/2001/XMLSchema#double",
                                                        "alternateRangeURI": "xsd:double",
                                                        "shortDisplay": undefined,
                                                        "lookupSchema": undefined,
                                                        "lookupQuery": undefined,
                                                      },
                                                      Immutable.Record {
                                                        "conceptURI": undefined,
                                                        "display": "Date Time",
                                                        "name": "dateTime",
                                                        "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                                                        "alternateRangeURI": "xsd:dateTime",
                                                        "shortDisplay": undefined,
                                                        "lookupSchema": undefined,
                                                        "lookupQuery": undefined,
                                                      },
                                                      Immutable.Record {
                                                        "conceptURI": "http://www.labkey.org/exp/xml#flag",
                                                        "display": "Flag",
                                                        "name": "flag",
                                                        "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                        "alternateRangeURI": undefined,
                                                        "shortDisplay": undefined,
                                                        "lookupSchema": undefined,
                                                        "lookupQuery": undefined,
                                                      },
                                                      Immutable.Record {
                                                        "conceptURI": undefined,
                                                        "display": "File",
                                                        "name": "fileLink",
                                                        "rangeURI": "http://cpas.fhcrc.org/exp/xml#fileLink",
                                                        "alternateRangeURI": undefined,
                                                        "shortDisplay": undefined,
                                                        "lookupSchema": undefined,
                                                        "lookupQuery": undefined,
                                                      },
                                                      Immutable.Record {
                                                        "conceptURI": undefined,
                                                        "display": "Attachment",
                                                        "name": "attachment",
                                                        "rangeURI": "http://www.labkey.org/exp/xml#attachment",
                                                        "alternateRangeURI": undefined,
                                                        "shortDisplay": undefined,
                                                        "lookupSchema": undefined,
                                                        "lookupQuery": undefined,
                                                      },
                                                      Immutable.Record {
                                                        "conceptURI": undefined,
                                                        "display": "User",
                                                        "name": "users",
                                                        "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                                        "alternateRangeURI": undefined,
                                                        "shortDisplay": undefined,
                                                        "lookupSchema": "core",
                                                        "lookupQuery": "users",
                                                      },
                                                      Immutable.Record {
                                                        "conceptURI": "http://cpas.labkey.com/Study#ParticipantId",
                                                        "display": "Subject/Participant",
                                                        "name": "ParticipantId",
                                                        "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                        "alternateRangeURI": undefined,
                                                        "shortDisplay": undefined,
                                                        "lookupSchema": undefined,
                                                        "lookupQuery": undefined,
                                                      },
                                                      Immutable.Record {
                                                        "conceptURI": undefined,
                                                        "display": "Lookup",
                                                        "name": "lookup",
                                                        "rangeURI": undefined,
                                                        "alternateRangeURI": undefined,
                                                        "shortDisplay": undefined,
                                                        "lookupSchema": undefined,
                                                        "lookupQuery": undefined,
                                                      },
                                                      Immutable.Record {
                                                        "conceptURI": "http://www.labkey.org/exp/xml#sample",
                                                        "display": "Sample",
                                                        "name": "sample",
                                                        "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                                        "alternateRangeURI": undefined,
                                                        "shortDisplay": undefined,
                                                        "lookupSchema": undefined,
                                                        "lookupQuery": undefined,
                                                      },
                                                    ]
                                                  }
                                                  defaultValueOptions={Immutable.List []}
                                                  domainFormDisplayOptions={
                                                    Object {
                                                      "isDragDisabled": false,
                                                      "phiLevelDisabled": false,
                                                      "showAddFieldsButton": true,
                                                      "showRequired": true,
                                                      "showTextOptions": true,
                                                      "showValidators": true,
                                                    }
                                                  }
                                                  domainId={null}
                                                  domainIndex={1}
                                                  dragging={false}
                                                  expandTransition={300}
                                                  expanded={false}
                                                  field={
                                                    Immutable.Record {
                                                      "conceptURI": undefined,
                                                      "conditionalFormats": Immutable.List [],
                                                      "defaultScale": undefined,
                                                      "defaultValueType": undefined,
                                                      "defaultValue": undefined,
                                                      "defaultDisplayValue": undefined,
                                                      "description": undefined,
                                                      "dimension": undefined,
                                                      "excludeFromShifting": false,
                                                      "format": undefined,
                                                      "hidden": false,
                                                      "importAliases": undefined,
                                                      "label": undefined,
                                                      "lookupContainer": undefined,
                                                      "lookupQuery": undefined,
                                                      "lookupSchema": undefined,
                                                      "lookupValidator": undefined,
                                                      "measure": undefined,
                                                      "mvEnabled": false,
                                                      "name": "field2",
                                                      "PHI": undefined,
                                                      "primaryKey": undefined,
                                                      "propertyId": undefined,
                                                      "propertyURI": undefined,
                                                      "propertyValidators": Immutable.List [],
                                                      "rangeValidators": Immutable.List [],
                                                      "rangeURI": "xsd:int",
                                                      "regexValidators": Immutable.List [],
                                                      "recommendedVariable": false,
                                                      "required": false,
                                                      "scale": undefined,
                                                      "URL": undefined,
                                                      "shownInDetailsView": true,
                                                      "shownInInsertView": true,
                                                      "shownInUpdateView": true,
                                                      "visible": true,
                                                      "dataType": Immutable.Record {
                                                        "conceptURI": undefined,
                                                        "display": "Integer",
                                                        "name": "int",
                                                        "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                                        "alternateRangeURI": "xsd:int",
                                                        "shortDisplay": undefined,
                                                        "lookupSchema": undefined,
                                                        "lookupQuery": undefined,
                                                      },
                                                      "lookupQueryValue": undefined,
                                                      "lookupType": Immutable.Record {
                                                        "conceptURI": undefined,
                                                        "display": "Lookup",
                                                        "name": "lookup",
                                                        "rangeURI": "xsd:int",
                                                        "alternateRangeURI": undefined,
                                                        "shortDisplay": undefined,
                                                        "lookupSchema": undefined,
                                                        "lookupQuery": undefined,
                                                      },
                                                      "original": Object {
                                                        "conceptURI": undefined,
                                                        "dataType": Immutable.Record {
                                                          "conceptURI": undefined,
                                                          "display": "Integer",
                                                          "name": "int",
                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                                          "alternateRangeURI": "xsd:int",
                                                          "shortDisplay": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                        "rangeURI": undefined,
                                                      },
                                                      "updatedField": false,
                                                      "isPrimaryKey": false,
                                                      "lockType": "NotLocked",
                                                      "wrappedColumnName": undefined,
                                                    }
                                                  }
                                                  helpNoun="field designer"
                                                  index={1}
                                                  key="domain-row-key-1"
                                                  maxPhiLevel="NotPHI"
                                                  onChange={[Function]}
                                                  onDelete={[Function]}
                                                  onExpand={[Function]}
                                                  showDefaultValueSettings={false}
                                                  showFilePropertyType={false}
                                                  successBsStyle="success"
                                                >
                                                  <ConnectFunction
                                                    disableInteractiveElementBlocking={false}
                                                    draggableId="domainpropertiesrow-domaindrag-1-1"
                                                    index={1}
                                                    isDragDisabled={false}
                                                    shouldRespectForcePress={false}
                                                  >
                                                    <Draggable
                                                      disableInteractiveElementBlocking={false}
                                                      draggableId="domainpropertiesrow-domaindrag-1-1"
                                                      drop={[Function]}
                                                      dropAnimationFinished={[Function]}
                                                      index={1}
                                                      isDragDisabled={false}
                                                      lift={[Function]}
                                                      mapped={
                                                        Object {
                                                          "combineTargetFor": null,
                                                          "offset": Object {
                                                            "x": 0,
                                                            "y": 0,
                                                          },
                                                          "shouldAnimateDisplacement": true,
                                                          "snapshot": Object {
                                                            "combineTargetFor": null,
                                                            "combineWith": null,
                                                            "draggingOver": null,
                                                            "dropAnimation": null,
                                                            "isDragging": false,
                                                            "isDropAnimating": false,
                                                            "mode": null,
                                                          },
                                                          "type": "SECONDARY",
                                                        }
                                                      }
                                                      move={[Function]}
                                                      moveByWindowScroll={[Function]}
                                                      moveDown={[Function]}
                                                      moveLeft={[Function]}
                                                      moveRight={[Function]}
                                                      moveUp={[Function]}
                                                      shouldRespectForcePress={false}
                                                    >
                                                      <div
                                                        className="domain-field-row domain-row-border-default"
                                                        data-react-beautiful-dnd-draggable="0"
                                                        onTransitionEnd={null}
                                                        style={
                                                          Object {
                                                            "transform": null,
                                                            "transition": null,
                                                          }
                                                        }
                                                        tabIndex={1}
                                                      >
                                                        <Row
                                                          bsClass="row"
                                                          className="domain-row-container"
                                                          componentClass="div"
                                                          key="domainpropertiesrow-domainrow-1-1"
                                                        >
                                                          <div
                                                            className="domain-row-container row"
                                                          >
                                                            <AdvancedSettings
                                                              defaultValueOptions={Immutable.List []}
                                                              domainFormDisplayOptions={
                                                                Object {
                                                                  "isDragDisabled": false,
                                                                  "phiLevelDisabled": false,
                                                                  "showAddFieldsButton": true,
                                                                  "showRequired": true,
                                                                  "showTextOptions": true,
                                                                  "showValidators": true,
                                                                }
                                                              }
                                                              domainId={null}
                                                              domainIndex={1}
                                                              field={
                                                                Immutable.Record {
                                                                  "conceptURI": undefined,
                                                                  "conditionalFormats": Immutable.List [],
                                                                  "defaultScale": undefined,
                                                                  "defaultValueType": undefined,
                                                                  "defaultValue": undefined,
                                                                  "defaultDisplayValue": undefined,
                                                                  "description": undefined,
                                                                  "dimension": undefined,
                                                                  "excludeFromShifting": false,
                                                                  "format": undefined,
                                                                  "hidden": false,
                                                                  "importAliases": undefined,
                                                                  "label": undefined,
                                                                  "lookupContainer": undefined,
                                                                  "lookupQuery": undefined,
                                                                  "lookupSchema": undefined,
                                                                  "lookupValidator": undefined,
                                                                  "measure": undefined,
                                                                  "mvEnabled": false,
                                                                  "name": "field2",
                                                                  "PHI": undefined,
                                                                  "primaryKey": undefined,
                                                                  "propertyId": undefined,
                                                                  "propertyURI": undefined,
                                                                  "propertyValidators": Immutable.List [],
                                                                  "rangeValidators": Immutable.List [],
                                                                  "rangeURI": "xsd:int",
                                                                  "regexValidators": Immutable.List [],
                                                                  "recommendedVariable": false,
                                                                  "required": false,
                                                                  "scale": undefined,
                                                                  "URL": undefined,
                                                                  "shownInDetailsView": true,
                                                                  "shownInInsertView": true,
                                                                  "shownInUpdateView": true,
                                                                  "visible": true,
                                                                  "dataType": Immutable.Record {
                                                                    "conceptURI": undefined,
                                                                    "display": "Integer",
                                                                    "name": "int",
                                                                    "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                                                    "alternateRangeURI": "xsd:int",
                                                                    "shortDisplay": undefined,
                                                                    "lookupSchema": undefined,
                                                                    "lookupQuery": undefined,
                                                                  },
                                                                  "lookupQueryValue": undefined,
                                                                  "lookupType": Immutable.Record {
                                                                    "conceptURI": undefined,
                                                                    "display": "Lookup",
                                                                    "name": "lookup",
                                                                    "rangeURI": "xsd:int",
                                                                    "alternateRangeURI": undefined,
                                                                    "shortDisplay": undefined,
                                                                    "lookupSchema": undefined,
                                                                    "lookupQuery": undefined,
                                                                  },
                                                                  "original": Object {
                                                                    "conceptURI": undefined,
                                                                    "dataType": Immutable.Record {
                                                                      "conceptURI": undefined,
                                                                      "display": "Integer",
                                                                      "name": "int",
                                                                      "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                                                      "alternateRangeURI": "xsd:int",
                                                                      "shortDisplay": undefined,
                                                                      "lookupSchema": undefined,
                                                                      "lookupQuery": undefined,
                                                                    },
                                                                    "rangeURI": undefined,
                                                                  },
                                                                  "updatedField": false,
                                                                  "isPrimaryKey": false,
                                                                  "lockType": "NotLocked",
                                                                  "wrappedColumnName": undefined,
                                                                }
                                                              }
                                                              helpNoun="field designer"
                                                              index={1}
                                                              label="field2"
                                                              maxPhiLevel="NotPHI"
                                                              onApply={[Function]}
                                                              onHide={[Function]}
                                                              show={false}
                                                              showDefaultValueSettings={false}
                                                              successBsStyle="success"
                                                            >
                                                              <Modal
                                                                animation={true}
                                                                autoFocus={true}
                                                                backdrop={true}
                                                                bsClass="modal"
                                                                dialogComponentClass={[Function]}
                                                                enforceFocus={true}
                                                                keyboard={true}
                                                                manager={
                                                                  ModalManager {
                                                                    "add": [Function],
                                                                    "containers": Array [],
                                                                    "data": Array [],
                                                                    "handleContainerOverflow": true,
                                                                    "hideSiblingNodes": true,
                                                                    "isTopModal": [Function],
                                                                    "modals": Array [],
                                                                    "remove": [Function],
                                                                  }
                                                                }
                                                                onEnter={[Function]}
                                                                onHide={[Function]}
                                                                renderBackdrop={[Function]}
                                                                restoreFocus={true}
                                                                show={false}
                                                              >
                                                                <Modal
                                                                  autoFocus={true}
                                                                  backdrop={true}
                                                                  backdropClassName="modal-backdrop"
                                                                  backdropTransition={[Function]}
                                                                  containerClassName="modal-open"
                                                                  enforceFocus={true}
                                                                  keyboard={true}
                                                                  manager={
                                                                    ModalManager {
                                                                      "add": [Function],
                                                                      "containers": Array [],
                                                                      "data": Array [],
                                                                      "handleContainerOverflow": true,
                                                                      "hideSiblingNodes": true,
                                                                      "isTopModal": [Function],
                                                                      "modals": Array [],
                                                                      "remove": [Function],
                                                                    }
                                                                  }
                                                                  onEnter={[Function]}
                                                                  onEntering={[Function]}
                                                                  onExited={[Function]}
                                                                  onHide={[Function]}
                                                                  renderBackdrop={[Function]}
                                                                  restoreFocus={true}
                                                                  show={false}
                                                                  transition={[Function]}
                                                                />
                                                              </Modal>
                                                            </AdvancedSettings>
                                                            <div
                                                              aria-roledescription="Draggable item. Press space bar to lift"
                                                              className="domain-row-handle"
                                                              data-react-beautiful-dnd-drag-handle="0"
                                                              draggable={false}
                                                              onBlur={[Function]}
                                                              onDragStart={[Function]}
                                                              onFocus={[Function]}
                                                              onKeyDown={[Function]}
                                                              onMouseDown={[Function]}
                                                              onTouchStart={[Function]}
                                                              tabIndex={0}
                                                            >
                                                              <DragDropHandle>
                                                                <FontAwesomeIcon
                                                                  border={false}
                                                                  className=""
                                                                  fixedWidth={false}
                                                                  flip={null}
                                                                  icon={
                                                                    Object {
                                                                      "icon": Array [
                                                                        320,
                                                                        512,
                                                                        Array [],
                                                                        "f58e",
                                                                        "M96 32H32C14.33 32 0 46.33 0 64v64c0 17.67 14.33 32 32 32h64c17.67 0 32-14.33 32-32V64c0-17.67-14.33-32-32-32zm0 160H32c-17.67 0-32 14.33-32 32v64c0 17.67 14.33 32 32 32h64c17.67 0 32-14.33 32-32v-64c0-17.67-14.33-32-32-32zm0 160H32c-17.67 0-32 14.33-32 32v64c0 17.67 14.33 32 32 32h64c17.67 0 32-14.33 32-32v-64c0-17.67-14.33-32-32-32zM288 32h-64c-17.67 0-32 14.33-32 32v64c0 17.67 14.33 32 32 32h64c17.67 0 32-14.33 32-32V64c0-17.67-14.33-32-32-32zm0 160h-64c-17.67 0-32 14.33-32 32v64c0 17.67 14.33 32 32 32h64c17.67 0 32-14.33 32-32v-64c0-17.67-14.33-32-32-32zm0 160h-64c-17.67 0-32 14.33-32 32v64c0 17.67 14.33 32 32 32h64c17.67 0 32-14.33 32-32v-64c0-17.67-14.33-32-32-32z",
                                                                      ],
                                                                      "iconName": "grip-vertical",
                                                                      "prefix": "fas",
                                                                    }
                                                                  }
                                                                  inverse={false}
                                                                  listItem={false}
                                                                  mask={null}
                                                                  pull={null}
                                                                  pulse={false}
                                                                  rotation={null}
                                                                  size="lg"
                                                                  spin={false}
                                                                  symbol={false}
                                                                  title=""
                                                                  transform={null}
                                                                >
                                                                  <svg
                                                                    aria-hidden="true"
                                                                    className="svg-inline--fa fa-grip-vertical fa-w-10 fa-lg "
                                                                    data-icon="grip-vertical"
                                                                    data-prefix="fas"
                                                                    focusable="false"
                                                                    role="img"
                                                                    style={Object {}}
                                                                    viewBox="0 0 320 512"
                                                                    xmlns="http://www.w3.org/2000/svg"
                                                                  >
                                                                    <path
                                                                      d="M96 32H32C14.33 32 0 46.33 0 64v64c0 17.67 14.33 32 32 32h64c17.67 0 32-14.33 32-32V64c0-17.67-14.33-32-32-32zm0 160H32c-17.67 0-32 14.33-32 32v64c0 17.67 14.33 32 32 32h64c17.67 0 32-14.33 32-32v-64c0-17.67-14.33-32-32-32zm0 160H32c-17.67 0-32 14.33-32 32v64c0 17.67 14.33 32 32 32h64c17.67 0 32-14.33 32-32v-64c0-17.67-14.33-32-32-32zM288 32h-64c-17.67 0-32 14.33-32 32v64c0 17.67 14.33 32 32 32h64c17.67 0 32-14.33 32-32V64c0-17.67-14.33-32-32-32zm0 160h-64c-17.67 0-32 14.33-32 32v64c0 17.67 14.33 32 32 32h64c17.67 0 32-14.33 32-32v-64c0-17.67-14.33-32-32-32zm0 160h-64c-17.67 0-32 14.33-32 32v64c0 17.67 14.33 32 32 32h64c17.67 0 32-14.33 32-32v-64c0-17.67-14.33-32-32-32z"
                                                                      fill="currentColor"
                                                                      style={Object {}}
                                                                    />
                                                                  </svg>
                                                                </FontAwesomeIcon>
                                                              </DragDropHandle>
                                                            </div>
                                                            <div
                                                              className="domain-row-main"
                                                            >
                                                              <Col
                                                                bsClass="col"
                                                                className="domain-row-base-fields"
                                                                componentClass="div"
                                                                xs={6}
                                                              >
                                                                <div
                                                                  className="domain-row-base-fields col-xs-6"
                                                                >
                                                                  <div
                                                                    id="domainpropertiesrow-row-1-1"
                                                                  >
                                                                    <Col
                                                                      bsClass="col"
                                                                      componentClass="div"
                                                                      xs={6}
                                                                    >
                                                                      <div
                                                                        className="col-xs-6"
                                                                      >
                                                                        <FormControl
                                                                          bsClass="form-control"
                                                                          componentClass="input"
                                                                          disabled={false}
                                                                          id="domainpropertiesrow-name-1-1"
                                                                          name="domainpropertiesrow-name"
                                                                          onChange={[Function]}
                                                                          type="text"
                                                                          value="field2"
                                                                        >
                                                                          <input
                                                                            className="form-control"
                                                                            disabled={false}
                                                                            id="domainpropertiesrow-name-1-1"
                                                                            name="domainpropertiesrow-name"
                                                                            onChange={[Function]}
                                                                            type="text"
                                                                            value="field2"
                                                                          />
                                                                        </FormControl>
                                                                      </div>
                                                                    </Col>
                                                                    <Col
                                                                      bsClass="col"
                                                                      componentClass="div"
                                                                      xs={4}
                                                                    >
                                                                      <div
                                                                        className="col-xs-4"
                                                                      >
                                                                        <FormControl
                                                                          bsClass="form-control"
                                                                          componentClass="select"
                                                                          disabled={false}
                                                                          id="domainpropertiesrow-type-1-1"
                                                                          name="domainpropertiesrow-type"
                                                                          onChange={[Function]}
                                                                          value="int"
                                                                        >
                                                                          <select
                                                                            className="form-control"
                                                                            disabled={false}
                                                                            id="domainpropertiesrow-type-1-1"
                                                                            name="domainpropertiesrow-type"
                                                                            onChange={[Function]}
                                                                            value="int"
                                                                          >
                                                                            <option
                                                                              key="0"
                                                                              value="string"
                                                                            >
                                                                              Text
                                                                            </option>
                                                                            <option
                                                                              key="1"
                                                                              value="multiLine"
                                                                            >
                                                                              Multi-Line Text
                                                                            </option>
                                                                            <option
                                                                              key="2"
                                                                              value="boolean"
                                                                            >
                                                                              Boolean
                                                                            </option>
                                                                            <option
                                                                              key="3"
                                                                              value="int"
                                                                            >
                                                                              Integer
                                                                            </option>
                                                                            <option
                                                                              key="4"
                                                                              value="double"
                                                                            >
                                                                              Decimal
                                                                            </option>
                                                                            <option
                                                                              key="5"
                                                                              value="dateTime"
                                                                            >
                                                                              Date Time
                                                                            </option>
                                                                            <option
                                                                              key="6"
                                                                              value="flag"
                                                                            >
                                                                              Flag
                                                                            </option>
                                                                            <option
                                                                              key="7"
                                                                              value="fileLink"
                                                                            >
                                                                              File
                                                                            </option>
                                                                            <option
                                                                              key="8"
                                                                              value="attachment"
                                                                            >
                                                                              Attachment
                                                                            </option>
                                                                            <option
                                                                              key="9"
                                                                              value="users"
                                                                            >
                                                                              User
                                                                            </option>
                                                                            <option
                                                                              key="10"
                                                                              value="ParticipantId"
                                                                            >
                                                                              Subject/Participant
                                                                            </option>
                                                                            <option
                                                                              key="11"
                                                                              value="lookup"
                                                                            >
                                                                              Lookup
                                                                            </option>
                                                                            <option
                                                                              key="12"
                                                                              value="sample"
                                                                            >
                                                                              Sample
                                                                            </option>
                                                                          </select>
                                                                        </FormControl>
                                                                      </div>
                                                                    </Col>
                                                                    <Col
                                                                      bsClass="col"
                                                                      componentClass="div"
                                                                      xs={2}
                                                                    >
                                                                      <div
                                                                        className="col-xs-2"
                                                                      >
                                                                        <div
                                                                          className="domain-field-checkbox-container"
                                                                        >
                                                                          <Checkbox
                                                                            bsClass="checkbox"
                                                                            checked={false}
                                                                            className="domain-field-checkbox"
                                                                            disabled={false}
                                                                            id="domainpropertiesrow-required-1-1"
                                                                            inline={false}
                                                                            name="domainpropertiesrow-required"
                                                                            onChange={[Function]}
                                                                            title=""
                                                                          >
                                                                            <div
                                                                              className="domain-field-checkbox checkbox"
                                                                            >
                                                                              <label
                                                                                title=""
                                                                              >
                                                                                <input
                                                                                  checked={false}
                                                                                  disabled={false}
                                                                                  id="domainpropertiesrow-required-1-1"
                                                                                  name="domainpropertiesrow-required"
                                                                                  onChange={[Function]}
                                                                                  type="checkbox"
                                                                                />
                                                                              </label>
                                                                            </div>
                                                                          </Checkbox>
                                                                        </div>
                                                                      </div>
                                                                    </Col>
                                                                  </div>
                                                                </div>
                                                              </Col>
                                                              <Col
                                                                bsClass="col"
                                                                className="field-details-container"
                                                                componentClass="div"
                                                                xs={6}
                                                              >
                                                                <div
                                                                  className="field-details-container col-xs-6"
                                                                >
                                                                  <div
                                                                    className="domain-field-details"
                                                                    id="domainpropertiesrow-details-1-1"
                                                                  >
                                                                    New Field
                                                                  </div>
                                                                  <div
                                                                    className="domain-field-buttons"
                                                                  >
                                                                    <DeleteIcon
                                                                      iconCls="domain-field-delete-icon"
                                                                      id="domainpropertiesrow-delete-1-1"
                                                                      onDelete={[Function]}
                                                                      title="Remove field"
                                                                    >
                                                                      <span
                                                                        className="field-icon"
                                                                        id="domainpropertiesrow-delete-1-1"
                                                                        onClick={[Function]}
                                                                        title="Remove field"
                                                                      >
                                                                        <FontAwesomeIcon
                                                                          border={false}
                                                                          className="domain-field-delete-icon"
                                                                          fixedWidth={false}
                                                                          flip={null}
                                                                          icon={
                                                                            Object {
                                                                              "icon": Array [
                                                                                512,
                                                                                512,
                                                                                Array [],
                                                                                "f057",
                                                                                "M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8zm121.6 313.1c4.7 4.7 4.7 12.3 0 17L338 377.6c-4.7 4.7-12.3 4.7-17 0L256 312l-65.1 65.6c-4.7 4.7-12.3 4.7-17 0L134.4 338c-4.7-4.7-4.7-12.3 0-17l65.6-65-65.6-65.1c-4.7-4.7-4.7-12.3 0-17l39.6-39.6c4.7-4.7 12.3-4.7 17 0l65 65.7 65.1-65.6c4.7-4.7 12.3-4.7 17 0l39.6 39.6c4.7 4.7 4.7 12.3 0 17L312 256l65.6 65.1z",
                                                                              ],
                                                                              "iconName": "times-circle",
                                                                              "prefix": "fas",
                                                                            }
                                                                          }
                                                                          inverse={false}
                                                                          listItem={false}
                                                                          mask={null}
                                                                          pull={null}
                                                                          pulse={false}
                                                                          rotation={null}
                                                                          size={null}
                                                                          spin={false}
                                                                          symbol={false}
                                                                          title=""
                                                                          transform={null}
                                                                        >
                                                                          <svg
                                                                            aria-hidden="true"
                                                                            className="svg-inline--fa fa-times-circle fa-w-16 domain-field-delete-icon"
                                                                            data-icon="times-circle"
                                                                            data-prefix="fas"
                                                                            focusable="false"
                                                                            role="img"
                                                                            style={Object {}}
                                                                            viewBox="0 0 512 512"
                                                                            xmlns="http://www.w3.org/2000/svg"
                                                                          >
                                                                            <path
                                                                              d="M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8zm121.6 313.1c4.7 4.7 4.7 12.3 0 17L338 377.6c-4.7 4.7-12.3 4.7-17 0L256 312l-65.1 65.6c-4.7 4.7-12.3 4.7-17 0L134.4 338c-4.7-4.7-4.7-12.3 0-17l65.6-65-65.6-65.1c-4.7-4.7-4.7-12.3 0-17l39.6-39.6c4.7-4.7 12.3-4.7 17 0l65 65.7 65.1-65.6c4.7-4.7 12.3-4.7 17 0l39.6 39.6c4.7 4.7 4.7 12.3 0 17L312 256l65.6 65.1z"
                                                                              fill="currentColor"
                                                                              style={Object {}}
                                                                            />
                                                                          </svg>
                                                                        </FontAwesomeIcon>
                                                                      </span>
                                                                    </DeleteIcon>
                                                                    <FieldExpansionToggle
                                                                      cls="domain-field-expand-icon"
                                                                      collapsedTitle="Show additional field properties"
                                                                      expanded={false}
                                                                      expandedTitle="Hide additional field properties"
                                                                      id="domainpropertiesrow-expand-1-1"
                                                                      onClick={[Function]}
                                                                    >
                                                                      <div
                                                                        className="field-icon domain-field-expand-icon"
                                                                        id="domainpropertiesrow-expand-1-1"
                                                                        onClick={[Function]}
                                                                        title="Show additional field properties"
                                                                      >
                                                                        <FontAwesomeIcon
                                                                          border={false}
                                                                          className=""
                                                                          fixedWidth={false}
                                                                          flip={null}
                                                                          icon={
                                                                            Object {
                                                                              "icon": Array [
                                                                                448,
                                                                                512,
                                                                                Array [],
                                                                                "f0fe",
                                                                                "M400 32H48C21.5 32 0 53.5 0 80v352c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V80c0-26.5-21.5-48-48-48zm-32 252c0 6.6-5.4 12-12 12h-92v92c0 6.6-5.4 12-12 12h-56c-6.6 0-12-5.4-12-12v-92H92c-6.6 0-12-5.4-12-12v-56c0-6.6 5.4-12 12-12h92v-92c0-6.6 5.4-12 12-12h56c6.6 0 12 5.4 12 12v92h92c6.6 0 12 5.4 12 12v56z",
                                                                              ],
                                                                              "iconName": "plus-square",
                                                                              "prefix": "fas",
                                                                            }
                                                                          }
                                                                          inverse={false}
                                                                          listItem={false}
                                                                          mask={null}
                                                                          pull={null}
                                                                          pulse={false}
                                                                          rotation={null}
                                                                          size="lg"
                                                                          spin={false}
                                                                          symbol={false}
                                                                          title=""
                                                                          transform={null}
                                                                        >
                                                                          <svg
                                                                            aria-hidden="true"
                                                                            className="svg-inline--fa fa-plus-square fa-w-14 fa-lg "
                                                                            data-icon="plus-square"
                                                                            data-prefix="fas"
                                                                            focusable="false"
                                                                            role="img"
                                                                            style={Object {}}
                                                                            viewBox="0 0 448 512"
                                                                            xmlns="http://www.w3.org/2000/svg"
                                                                          >
                                                                            <path
                                                                              d="M400 32H48C21.5 32 0 53.5 0 80v352c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V80c0-26.5-21.5-48-48-48zm-32 252c0 6.6-5.4 12-12 12h-92v92c0 6.6-5.4 12-12 12h-56c-6.6 0-12-5.4-12-12v-92H92c-6.6 0-12-5.4-12-12v-56c0-6.6 5.4-12 12-12h92v-92c0-6.6 5.4-12 12-12h56c6.6 0 12 5.4 12 12v92h92c6.6 0 12 5.4 12 12v56z"
                                                                              fill="currentColor"
                                                                              style={Object {}}
                                                                            />
                                                                          </svg>
                                                                        </FontAwesomeIcon>
                                                                      </div>
                                                                    </FieldExpansionToggle>
                                                                  </div>
                                                                </div>
                                                              </Col>
                                                            </div>
                                                          </div>
                                                        </Row>
                                                        <Collapse
                                                          appear={false}
                                                          dimension="height"
                                                          getDimensionValue={[Function]}
                                                          in={false}
                                                          mountOnEnter={false}
                                                          onExited={[Function]}
                                                          onExiting={[Function]}
                                                          timeout={300}
                                                          unmountOnExit={false}
                                                        >
                                                          <Transition
                                                            appear={false}
                                                            aria-expanded={null}
                                                            enter={true}
                                                            exit={true}
                                                            in={false}
                                                            mountOnEnter={false}
                                                            onEnter={[Function]}
                                                            onEntered={[Function]}
                                                            onEntering={[Function]}
                                                            onExit={[Function]}
                                                            onExited={[Function]}
                                                            onExiting={[Function]}
                                                            timeout={300}
                                                            unmountOnExit={false}
                                                          >
                                                            <div
                                                              aria-expanded={null}
                                                              className="collapse"
                                                            >
                                                              <DomainRowExpandedOptions
                                                                appPropertiesOnly={false}
                                                                domainFormDisplayOptions={
                                                                  Object {
                                                                    "isDragDisabled": false,
                                                                    "phiLevelDisabled": false,
                                                                    "showAddFieldsButton": true,
                                                                    "showRequired": true,
                                                                    "showTextOptions": true,
                                                                    "showValidators": true,
                                                                  }
                                                                }
                                                                domainIndex={1}
                                                                field={
                                                                  Immutable.Record {
                                                                    "conceptURI": undefined,
                                                                    "conditionalFormats": Immutable.List [],
                                                                    "defaultScale": undefined,
                                                                    "defaultValueType": undefined,
                                                                    "defaultValue": undefined,
                                                                    "defaultDisplayValue": undefined,
                                                                    "description": undefined,
                                                                    "dimension": undefined,
                                                                    "excludeFromShifting": false,
                                                                    "format": undefined,
                                                                    "hidden": false,
                                                                    "importAliases": undefined,
                                                                    "label": undefined,
                                                                    "lookupContainer": undefined,
                                                                    "lookupQuery": undefined,
                                                                    "lookupSchema": undefined,
                                                                    "lookupValidator": undefined,
                                                                    "measure": undefined,
                                                                    "mvEnabled": false,
                                                                    "name": "field2",
                                                                    "PHI": undefined,
                                                                    "primaryKey": undefined,
                                                                    "propertyId": undefined,
                                                                    "propertyURI": undefined,
                                                                    "propertyValidators": Immutable.List [],
                                                                    "rangeValidators": Immutable.List [],
                                                                    "rangeURI": "xsd:int",
                                                                    "regexValidators": Immutable.List [],
                                                                    "recommendedVariable": false,
                                                                    "required": false,
                                                                    "scale": undefined,
                                                                    "URL": undefined,
                                                                    "shownInDetailsView": true,
                                                                    "shownInInsertView": true,
                                                                    "shownInUpdateView": true,
                                                                    "visible": true,
                                                                    "dataType": Immutable.Record {
                                                                      "conceptURI": undefined,
                                                                      "display": "Integer",
                                                                      "name": "int",
                                                                      "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                                                      "alternateRangeURI": "xsd:int",
                                                                      "shortDisplay": undefined,
                                                                      "lookupSchema": undefined,
                                                                      "lookupQuery": undefined,
                                                                    },
                                                                    "lookupQueryValue": undefined,
                                                                    "lookupType": Immutable.Record {
                                                                      "conceptURI": undefined,
                                                                      "display": "Lookup",
                                                                      "name": "lookup",
                                                                      "rangeURI": "xsd:int",
                                                                      "alternateRangeURI": undefined,
                                                                      "shortDisplay": undefined,
                                                                      "lookupSchema": undefined,
                                                                      "lookupQuery": undefined,
                                                                    },
                                                                    "original": Object {
                                                                      "conceptURI": undefined,
                                                                      "dataType": Immutable.Record {
                                                                        "conceptURI": undefined,
                                                                        "display": "Integer",
                                                                        "name": "int",
                                                                        "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                                                        "alternateRangeURI": "xsd:int",
                                                                        "shortDisplay": undefined,
                                                                        "lookupSchema": undefined,
                                                                        "lookupQuery": undefined,
                                                                      },
                                                                      "rangeURI": undefined,
                                                                    },
                                                                    "updatedField": false,
                                                                    "isPrimaryKey": false,
                                                                    "lockType": "NotLocked",
                                                                    "wrappedColumnName": undefined,
                                                                  }
                                                                }
                                                                index={1}
                                                                onChange={[Function]}
                                                                onMultiChange={[Function]}
                                                                showingModal={[Function]}
                                                                successBsStyle="success"
                                                              >
                                                                <div
                                                                  className="domain-row-container"
                                                                >
                                                                  <div
                                                                    className="domain-row-handle"
                                                                  />
                                                                  <div
                                                                    className="domain-row-container-expanded"
                                                                  >
                                                                    <Col
                                                                      bsClass="col"
                                                                      componentClass="div"
                                                                      xs={12}
                                                                    >
                                                                      <div
                                                                        className="col-xs-12"
                                                                      >
                                                                        <NumericFieldOptions
                                                                          domainIndex={1}
                                                                          index={1}
                                                                          label="Integer Options"
                                                                          lockType="NotLocked"
                                                                          onChange={[Function]}
                                                                        >
                                                                          <div>
                                                                            <Row
                                                                              bsClass="row"
                                                                              className="domain-row-expanded"
                                                                              componentClass="div"
                                                                            >
                                                                              <div
                                                                                className="domain-row-expanded row"
                                                                              >
                                                                                <Col
                                                                                  bsClass="col"
                                                                                  componentClass="div"
                                                                                  xs={12}
                                                                                >
                                                                                  <div
                                                                                    className="col-xs-12"
                                                                                  >
                                                                                    <div
                                                                                      className="domain-field-section-heading"
                                                                                    >
                                                                                      Integer Options
                                                                                    </div>
                                                                                  </div>
                                                                                </Col>
                                                                              </div>
                                                                            </Row>
                                                                            <Row
                                                                              bsClass="row"
                                                                              className="domain-row-expanded"
                                                                              componentClass="div"
                                                                            >
                                                                              <div
                                                                                className="domain-row-expanded row"
                                                                              >
                                                                                <Col
                                                                                  bsClass="col"
                                                                                  componentClass="div"
                                                                                  xs={3}
                                                                                >
                                                                                  <div
                                                                                    className="col-xs-3"
                                                                                  >
                                                                                    <div
                                                                                      className="domain-field-label"
                                                                                    >
                                                                                      Format for Numbers
                                                                                      <LabelHelpTip
                                                                                        body={[Function]}
                                                                                        customStyle={Object {}}
                                                                                        id="tooltip"
                                                                                        size="1x"
                                                                                        title="Format Strings"
                                                                                      >
                                                                                        <span
                                                                                          className="label-help-target"
                                                                                          onMouseOut={[Function]}
                                                                                          onMouseOver={[Function]}
                                                                                        >
                                                                                          <FontAwesomeIcon
                                                                                            border={false}
                                                                                            className="label-help-icon"
                                                                                            fixedWidth={false}
                                                                                            flip={null}
                                                                                            icon={
                                                                                              Object {
                                                                                                "icon": Array [
                                                                                                  512,
                                                                                                  512,
                                                                                                  Array [],
                                                                                                  "f059",
                                                                                                  "M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z",
                                                                                                ],
                                                                                                "iconName": "question-circle",
                                                                                                "prefix": "fas",
                                                                                              }
                                                                                            }
                                                                                            inverse={false}
                                                                                            listItem={false}
                                                                                            mask={null}
                                                                                            pull={null}
                                                                                            pulse={false}
                                                                                            rotation={null}
                                                                                            size="1x"
                                                                                            spin={false}
                                                                                            style={Object {}}
                                                                                            symbol={false}
                                                                                            title=""
                                                                                            transform={null}
                                                                                          >
                                                                                            <svg
                                                                                              aria-hidden="true"
                                                                                              className="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                                                                                              data-icon="question-circle"
                                                                                              data-prefix="fas"
                                                                                              focusable="false"
                                                                                              role="img"
                                                                                              style={Object {}}
                                                                                              viewBox="0 0 512 512"
                                                                                              xmlns="http://www.w3.org/2000/svg"
                                                                                            >
                                                                                              <path
                                                                                                d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                                                                fill="currentColor"
                                                                                                style={Object {}}
                                                                                              />
                                                                                            </svg>
                                                                                          </FontAwesomeIcon>
                                                                                          <Overlay
                                                                                            animation={[Function]}
                                                                                            placement="right"
                                                                                            rootClose={false}
                                                                                            show={false}
                                                                                            target={
                                                                                              <span
                                                                                                class="label-help-target"
                                                                                              >
                                                                                                <svg
                                                                                                  aria-hidden="true"
                                                                                                  class="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                                                                                                  data-icon="question-circle"
                                                                                                  data-prefix="fas"
                                                                                                  focusable="false"
                                                                                                  role="img"
                                                                                                  viewBox="0 0 512 512"
                                                                                                  xmlns="http://www.w3.org/2000/svg"
                                                                                                >
                                                                                                  <path
                                                                                                    d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                                                                    fill="currentColor"
                                                                                                  />
                                                                                                </svg>
                                                                                              </span>
                                                                                            }
                                                                                          >
                                                                                            <Overlay
                                                                                              placement="right"
                                                                                              rootClose={false}
                                                                                              show={false}
                                                                                              target={
                                                                                                <span
                                                                                                  class="label-help-target"
                                                                                                >
                                                                                                  <svg
                                                                                                    aria-hidden="true"
                                                                                                    class="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                                                                                                    data-icon="question-circle"
                                                                                                    data-prefix="fas"
                                                                                                    focusable="false"
                                                                                                    role="img"
                                                                                                    viewBox="0 0 512 512"
                                                                                                    xmlns="http://www.w3.org/2000/svg"
                                                                                                  >
                                                                                                    <path
                                                                                                      d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                                                                      fill="currentColor"
                                                                                                    />
                                                                                                  </svg>
                                                                                                </span>
                                                                                              }
                                                                                              transition={[Function]}
                                                                                            />
                                                                                          </Overlay>
                                                                                        </span>
                                                                                      </LabelHelpTip>
                                                                                    </div>
                                                                                  </div>
                                                                                </Col>
                                                                                <Col
                                                                                  bsClass="col"
                                                                                  componentClass="div"
                                                                                  xs={2}
                                                                                >
                                                                                  <div
                                                                                    className="col-xs-2"
                                                                                  >
                                                                                    <div
                                                                                      className="domain-field-label"
                                                                                    >
                                                                                      Default Scale Type
                                                                                    </div>
                                                                                  </div>
                                                                                </Col>
                                                                              </div>
                                                                            </Row>
                                                                            <Row
                                                                              bsClass="row"
                                                                              className="domain-row-expanded"
                                                                              componentClass="div"
                                                                            >
                                                                              <div
                                                                                className="domain-row-expanded row"
                                                                              >
                                                                                <Col
                                                                                  bsClass="col"
                                                                                  componentClass="div"
                                                                                  xs={3}
                                                                                >
                                                                                  <div
                                                                                    className="col-xs-3"
                                                                                  >
                                                                                    <FormControl
                                                                                      bsClass="form-control"
                                                                                      componentClass="input"
                                                                                      disabled={false}
                                                                                      id="domainpropertiesrow-format-1-1"
                                                                                      name="domainpropertiesrow-format"
                                                                                      onChange={[Function]}
                                                                                      type="text"
                                                                                      value=""
                                                                                    >
                                                                                      <input
                                                                                        className="form-control"
                                                                                        disabled={false}
                                                                                        id="domainpropertiesrow-format-1-1"
                                                                                        name="domainpropertiesrow-format"
                                                                                        onChange={[Function]}
                                                                                        type="text"
                                                                                        value=""
                                                                                      />
                                                                                    </FormControl>
                                                                                  </div>
                                                                                </Col>
                                                                                <Col
                                                                                  bsClass="col"
                                                                                  componentClass="div"
                                                                                  xs={2}
                                                                                >
                                                                                  <div
                                                                                    className="col-xs-2"
                                                                                  >
                                                                                    <FormControl
                                                                                      bsClass="form-control"
                                                                                      componentClass="select"
                                                                                      disabled={false}
                                                                                      id="domainpropertiesrow-defaultScale-1-1"
                                                                                      name="domainpropertiesrow-defaultScale"
                                                                                      onChange={[Function]}
                                                                                    >
                                                                                      <select
                                                                                        className="form-control"
                                                                                        disabled={false}
                                                                                        id="domainpropertiesrow-defaultScale-1-1"
                                                                                        name="domainpropertiesrow-defaultScale"
                                                                                        onChange={[Function]}
                                                                                      >
                                                                                        <option
                                                                                          key="domainpropertiesrow-defaultScaleoption-LINEAR-1-1"
                                                                                          value="LINEAR"
                                                                                        >
                                                                                          Linear
                                                                                        </option>
                                                                                        <option
                                                                                          key="domainpropertiesrow-defaultScaleoption-LOG-1-1"
                                                                                          value="LOG"
                                                                                        >
                                                                                          Log
                                                                                        </option>
                                                                                      </select>
                                                                                    </FormControl>
                                                                                  </div>
                                                                                </Col>
                                                                              </div>
                                                                            </Row>
                                                                          </div>
                                                                        </NumericFieldOptions>
                                                                      </div>
                                                                    </Col>
                                                                    <Col
                                                                      bsClass="col"
                                                                      componentClass="div"
                                                                      lg={10}
                                                                      xs={12}
                                                                    >
                                                                      <div
                                                                        className="col-lg-10 col-xs-12"
                                                                      >
                                                                        <NameAndLinkingOptions
                                                                          domainIndex={1}
                                                                          field={
                                                                            Immutable.Record {
                                                                              "conceptURI": undefined,
                                                                              "conditionalFormats": Immutable.List [],
                                                                              "defaultScale": undefined,
                                                                              "defaultValueType": undefined,
                                                                              "defaultValue": undefined,
                                                                              "defaultDisplayValue": undefined,
                                                                              "description": undefined,
                                                                              "dimension": undefined,
                                                                              "excludeFromShifting": false,
                                                                              "format": undefined,
                                                                              "hidden": false,
                                                                              "importAliases": undefined,
                                                                              "label": undefined,
                                                                              "lookupContainer": undefined,
                                                                              "lookupQuery": undefined,
                                                                              "lookupSchema": undefined,
                                                                              "lookupValidator": undefined,
                                                                              "measure": undefined,
                                                                              "mvEnabled": false,
                                                                              "name": "field2",
                                                                              "PHI": undefined,
                                                                              "primaryKey": undefined,
                                                                              "propertyId": undefined,
                                                                              "propertyURI": undefined,
                                                                              "propertyValidators": Immutable.List [],
                                                                              "rangeValidators": Immutable.List [],
                                                                              "rangeURI": "xsd:int",
                                                                              "regexValidators": Immutable.List [],
                                                                              "recommendedVariable": false,
                                                                              "required": false,
                                                                              "scale": undefined,
                                                                              "URL": undefined,
                                                                              "shownInDetailsView": true,
                                                                              "shownInInsertView": true,
                                                                              "shownInUpdateView": true,
                                                                              "visible": true,
                                                                              "dataType": Immutable.Record {
                                                                                "conceptURI": undefined,
                                                                                "display": "Integer",
                                                                                "name": "int",
                                                                                "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                                                                "alternateRangeURI": "xsd:int",
                                                                                "shortDisplay": undefined,
                                                                                "lookupSchema": undefined,
                                                                                "lookupQuery": undefined,
                                                                              },
                                                                              "lookupQueryValue": undefined,
                                                                              "lookupType": Immutable.Record {
                                                                                "conceptURI": undefined,
                                                                                "display": "Lookup",
                                                                                "name": "lookup",
                                                                                "rangeURI": "xsd:int",
                                                                                "alternateRangeURI": undefined,
                                                                                "shortDisplay": undefined,
                                                                                "lookupSchema": undefined,
                                                                                "lookupQuery": undefined,
                                                                              },
                                                                              "original": Object {
                                                                                "conceptURI": undefined,
                                                                                "dataType": Immutable.Record {
                                                                                  "conceptURI": undefined,
                                                                                  "display": "Integer",
                                                                                  "name": "int",
                                                                                  "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                                                                  "alternateRangeURI": "xsd:int",
                                                                                  "shortDisplay": undefined,
                                                                                  "lookupSchema": undefined,
                                                                                  "lookupQuery": undefined,
                                                                                },
                                                                                "rangeURI": undefined,
                                                                              },
                                                                              "updatedField": false,
                                                                              "isPrimaryKey": false,
                                                                              "lockType": "NotLocked",
                                                                              "wrappedColumnName": undefined,
                                                                            }
                                                                          }
                                                                          index={1}
                                                                          onChange={[Function]}
                                                                        >
                                                                          <div>
                                                                            <Row
                                                                              bsClass="row"
                                                                              className="domain-row-expanded"
                                                                              componentClass="div"
                                                                            >
                                                                              <div
                                                                                className="domain-row-expanded row"
                                                                              >
                                                                                <Col
                                                                                  bsClass="col"
                                                                                  componentClass="div"
                                                                                  xs={12}
                                                                                >
                                                                                  <div
                                                                                    className="col-xs-12"
                                                                                  >
                                                                                    <div
                                                                                      className="domain-field-section-heading domain-field-section-hdr"
                                                                                    >
                                                                                      Name and Linking Options
                                                                                    </div>
                                                                                  </div>
                                                                                </Col>
                                                                              </div>
                                                                            </Row>
                                                                            <Row
                                                                              bsClass="row"
                                                                              className="domain-row-expanded"
                                                                              componentClass="div"
                                                                            >
                                                                              <div
                                                                                className="domain-row-expanded row"
                                                                              >
                                                                                <div>
                                                                                  <Col
                                                                                    bsClass="col"
                                                                                    componentClass="div"
                                                                                    xs={5}
                                                                                  >
                                                                                    <div
                                                                                      className="col-xs-5"
                                                                                    >
                                                                                      <div
                                                                                        className="domain-field-label"
                                                                                      >
                                                                                        Description
                                                                                      </div>
                                                                                      <FormControl
                                                                                        bsClass="form-control"
                                                                                        className="form-control textarea-noresize"
                                                                                        componentClass="textarea"
                                                                                        disabled={false}
                                                                                        id="domainpropertiesrow-description-1-1"
                                                                                        name="domainpropertiesrow-description"
                                                                                        onChange={[Function]}
                                                                                        rows={4}
                                                                                        value=""
                                                                                      >
                                                                                        <textarea
                                                                                          className="form-control textarea-noresize form-control"
                                                                                          disabled={false}
                                                                                          id="domainpropertiesrow-description-1-1"
                                                                                          name="domainpropertiesrow-description"
                                                                                          onChange={[Function]}
                                                                                          rows={4}
                                                                                          value=""
                                                                                        />
                                                                                      </FormControl>
                                                                                    </div>
                                                                                  </Col>
                                                                                  <Col
                                                                                    bsClass="col"
                                                                                    componentClass="div"
                                                                                    xs={3}
                                                                                  >
                                                                                    <div
                                                                                      className="col-xs-3"
                                                                                    >
                                                                                      <div
                                                                                        className="domain-field-label"
                                                                                      >
                                                                                        Label
                                                                                      </div>
                                                                                      <FormControl
                                                                                        bsClass="form-control"
                                                                                        componentClass="input"
                                                                                        disabled={false}
                                                                                        id="domainpropertiesrow-label-1-1"
                                                                                        name="domainpropertiesrow-label"
                                                                                        onChange={[Function]}
                                                                                        type="text"
                                                                                        value=""
                                                                                      >
                                                                                        <input
                                                                                          className="form-control"
                                                                                          disabled={false}
                                                                                          id="domainpropertiesrow-label-1-1"
                                                                                          name="domainpropertiesrow-label"
                                                                                          onChange={[Function]}
                                                                                          type="text"
                                                                                          value=""
                                                                                        />
                                                                                      </FormControl>
                                                                                      <div
                                                                                        className="domain-field-label"
                                                                                      >
                                                                                        Import Aliases
                                                                                        <LabelHelpTip
                                                                                          body={[Function]}
                                                                                          customStyle={Object {}}
                                                                                          id="tooltip"
                                                                                          size="1x"
                                                                                          title="Import Aliases"
                                                                                        >
                                                                                          <span
                                                                                            className="label-help-target"
                                                                                            onMouseOut={[Function]}
                                                                                            onMouseOver={[Function]}
                                                                                          >
                                                                                            <FontAwesomeIcon
                                                                                              border={false}
                                                                                              className="label-help-icon"
                                                                                              fixedWidth={false}
                                                                                              flip={null}
                                                                                              icon={
                                                                                                Object {
                                                                                                  "icon": Array [
                                                                                                    512,
                                                                                                    512,
                                                                                                    Array [],
                                                                                                    "f059",
                                                                                                    "M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z",
                                                                                                  ],
                                                                                                  "iconName": "question-circle",
                                                                                                  "prefix": "fas",
                                                                                                }
                                                                                              }
                                                                                              inverse={false}
                                                                                              listItem={false}
                                                                                              mask={null}
                                                                                              pull={null}
                                                                                              pulse={false}
                                                                                              rotation={null}
                                                                                              size="1x"
                                                                                              spin={false}
                                                                                              style={Object {}}
                                                                                              symbol={false}
                                                                                              title=""
                                                                                              transform={null}
                                                                                            >
                                                                                              <svg
                                                                                                aria-hidden="true"
                                                                                                className="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                                                                                                data-icon="question-circle"
                                                                                                data-prefix="fas"
                                                                                                focusable="false"
                                                                                                role="img"
                                                                                                style={Object {}}
                                                                                                viewBox="0 0 512 512"
                                                                                                xmlns="http://www.w3.org/2000/svg"
                                                                                              >
                                                                                                <path
                                                                                                  d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                                                                  fill="currentColor"
                                                                                                  style={Object {}}
                                                                                                />
                                                                                              </svg>
                                                                                            </FontAwesomeIcon>
                                                                                            <Overlay
                                                                                              animation={[Function]}
                                                                                              placement="right"
                                                                                              rootClose={false}
                                                                                              show={false}
                                                                                              target={
                                                                                                <span
                                                                                                  class="label-help-target"
                                                                                                >
                                                                                                  <svg
                                                                                                    aria-hidden="true"
                                                                                                    class="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                                                                                                    data-icon="question-circle"
                                                                                                    data-prefix="fas"
                                                                                                    focusable="false"
                                                                                                    role="img"
                                                                                                    viewBox="0 0 512 512"
                                                                                                    xmlns="http://www.w3.org/2000/svg"
                                                                                                  >
                                                                                                    <path
                                                                                                      d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                                                                      fill="currentColor"
                                                                                                    />
                                                                                                  </svg>
                                                                                                </span>
                                                                                              }
                                                                                            >
                                                                                              <Overlay
                                                                                                placement="right"
                                                                                                rootClose={false}
                                                                                                show={false}
                                                                                                target={
                                                                                                  <span
                                                                                                    class="label-help-target"
                                                                                                  >
                                                                                                    <svg
                                                                                                      aria-hidden="true"
                                                                                                      class="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                                                                                                      data-icon="question-circle"
                                                                                                      data-prefix="fas"
                                                                                                      focusable="false"
                                                                                                      role="img"
                                                                                                      viewBox="0 0 512 512"
                                                                                                      xmlns="http://www.w3.org/2000/svg"
                                                                                                    >
                                                                                                      <path
                                                                                                        d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                                                                        fill="currentColor"
                                                                                                      />
                                                                                                    </svg>
                                                                                                  </span>
                                                                                                }
                                                                                                transition={[Function]}
                                                                                              />
                                                                                            </Overlay>
                                                                                          </span>
                                                                                        </LabelHelpTip>
                                                                                      </div>
                                                                                      <FormControl
                                                                                        bsClass="form-control"
                                                                                        componentClass="input"
                                                                                        disabled={false}
                                                                                        id="domainpropertiesrow-importAliases-1-1"
                                                                                        name="domainpropertiesrow-importAliases"
                                                                                        onChange={[Function]}
                                                                                        type="text"
                                                                                        value=""
                                                                                      >
                                                                                        <input
                                                                                          className="form-control"
                                                                                          disabled={false}
                                                                                          id="domainpropertiesrow-importAliases-1-1"
                                                                                          name="domainpropertiesrow-importAliases"
                                                                                          onChange={[Function]}
                                                                                          type="text"
                                                                                          value=""
                                                                                        />
                                                                                      </FormControl>
                                                                                    </div>
                                                                                  </Col>
                                                                                  <Col
                                                                                    bsClass="col"
                                                                                    componentClass="div"
                                                                                    xs={4}
                                                                                  >
                                                                                    <div
                                                                                      className="col-xs-4"
                                                                                    >
                                                                                      <div
                                                                                        className="domain-field-label"
                                                                                      >
                                                                                        URL
                                                                                        <LabelHelpTip
                                                                                          body={[Function]}
                                                                                          customStyle={Object {}}
                                                                                          id="tooltip"
                                                                                          size="1x"
                                                                                          title="URL"
                                                                                        >
                                                                                          <span
                                                                                            className="label-help-target"
                                                                                            onMouseOut={[Function]}
                                                                                            onMouseOver={[Function]}
                                                                                          >
                                                                                            <FontAwesomeIcon
                                                                                              border={false}
                                                                                              className="label-help-icon"
                                                                                              fixedWidth={false}
                                                                                              flip={null}
                                                                                              icon={
                                                                                                Object {
                                                                                                  "icon": Array [
                                                                                                    512,
                                                                                                    512,
                                                                                                    Array [],
                                                                                                    "f059",
                                                                                                    "M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z",
                                                                                                  ],
                                                                                                  "iconName": "question-circle",
                                                                                                  "prefix": "fas",
                                                                                                }
                                                                                              }
                                                                                              inverse={false}
                                                                                              listItem={false}
                                                                                              mask={null}
                                                                                              pull={null}
                                                                                              pulse={false}
                                                                                              rotation={null}
                                                                                              size="1x"
                                                                                              spin={false}
                                                                                              style={Object {}}
                                                                                              symbol={false}
                                                                                              title=""
                                                                                              transform={null}
                                                                                            >
                                                                                              <svg
                                                                                                aria-hidden="true"
                                                                                                className="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                                                                                                data-icon="question-circle"
                                                                                                data-prefix="fas"
                                                                                                focusable="false"
                                                                                                role="img"
                                                                                                style={Object {}}
                                                                                                viewBox="0 0 512 512"
                                                                                                xmlns="http://www.w3.org/2000/svg"
                                                                                              >
                                                                                                <path
                                                                                                  d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                                                                  fill="currentColor"
                                                                                                  style={Object {}}
                                                                                                />
                                                                                              </svg>
                                                                                            </FontAwesomeIcon>
                                                                                            <Overlay
                                                                                              animation={[Function]}
                                                                                              placement="right"
                                                                                              rootClose={false}
                                                                                              show={false}
                                                                                              target={
                                                                                                <span
                                                                                                  class="label-help-target"
                                                                                                >
                                                                                                  <svg
                                                                                                    aria-hidden="true"
                                                                                                    class="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                                                                                                    data-icon="question-circle"
                                                                                                    data-prefix="fas"
                                                                                                    focusable="false"
                                                                                                    role="img"
                                                                                                    viewBox="0 0 512 512"
                                                                                                    xmlns="http://www.w3.org/2000/svg"
                                                                                                  >
                                                                                                    <path
                                                                                                      d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                                                                      fill="currentColor"
                                                                                                    />
                                                                                                  </svg>
                                                                                                </span>
                                                                                              }
                                                                                            >
                                                                                              <Overlay
                                                                                                placement="right"
                                                                                                rootClose={false}
                                                                                                show={false}
                                                                                                target={
                                                                                                  <span
                                                                                                    class="label-help-target"
                                                                                                  >
                                                                                                    <svg
                                                                                                      aria-hidden="true"
                                                                                                      class="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                                                                                                      data-icon="question-circle"
                                                                                                      data-prefix="fas"
                                                                                                      focusable="false"
                                                                                                      role="img"
                                                                                                      viewBox="0 0 512 512"
                                                                                                      xmlns="http://www.w3.org/2000/svg"
                                                                                                    >
                                                                                                      <path
                                                                                                        d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                                                                        fill="currentColor"
                                                                                                      />
                                                                                                    </svg>
                                                                                                  </span>
                                                                                                }
                                                                                                transition={[Function]}
                                                                                              />
                                                                                            </Overlay>
                                                                                          </span>
                                                                                        </LabelHelpTip>
                                                                                      </div>
                                                                                      <FormControl
                                                                                        bsClass="form-control"
                                                                                        componentClass="input"
                                                                                        disabled={false}
                                                                                        id="domainpropertiesrow-URL-1-1"
                                                                                        name="domainpropertiesrow-URL"
                                                                                        onChange={[Function]}
                                                                                        type="text"
                                                                                        value=""
                                                                                      >
                                                                                        <input
                                                                                          className="form-control"
                                                                                          disabled={false}
                                                                                          id="domainpropertiesrow-URL-1-1"
                                                                                          name="domainpropertiesrow-URL"
                                                                                          onChange={[Function]}
                                                                                          type="text"
                                                                                          value=""
                                                                                        />
                                                                                      </FormControl>
                                                                                    </div>
                                                                                  </Col>
                                                                                </div>
                                                                              </div>
                                                                            </Row>
                                                                          </div>
                                                                        </NameAndLinkingOptions>
                                                                      </div>
                                                                    </Col>
                                                                    <Col
                                                                      bsClass="col"
                                                                      componentClass="div"
                                                                      xs={12}
                                                                    >
                                                                      <div
                                                                        className="col-xs-12"
                                                                      >
                                                                        <ConditionalFormattingAndValidation
                                                                          domainFormDisplayOptions={
                                                                            Object {
                                                                              "isDragDisabled": false,
                                                                              "phiLevelDisabled": false,
                                                                              "showAddFieldsButton": true,
                                                                              "showRequired": true,
                                                                              "showTextOptions": true,
                                                                              "showValidators": true,
                                                                            }
                                                                          }
                                                                          domainIndex={1}
                                                                          field={
                                                                            Immutable.Record {
                                                                              "conceptURI": undefined,
                                                                              "conditionalFormats": Immutable.List [],
                                                                              "defaultScale": undefined,
                                                                              "defaultValueType": undefined,
                                                                              "defaultValue": undefined,
                                                                              "defaultDisplayValue": undefined,
                                                                              "description": undefined,
                                                                              "dimension": undefined,
                                                                              "excludeFromShifting": false,
                                                                              "format": undefined,
                                                                              "hidden": false,
                                                                              "importAliases": undefined,
                                                                              "label": undefined,
                                                                              "lookupContainer": undefined,
                                                                              "lookupQuery": undefined,
                                                                              "lookupSchema": undefined,
                                                                              "lookupValidator": undefined,
                                                                              "measure": undefined,
                                                                              "mvEnabled": false,
                                                                              "name": "field2",
                                                                              "PHI": undefined,
                                                                              "primaryKey": undefined,
                                                                              "propertyId": undefined,
                                                                              "propertyURI": undefined,
                                                                              "propertyValidators": Immutable.List [],
                                                                              "rangeValidators": Immutable.List [],
                                                                              "rangeURI": "xsd:int",
                                                                              "regexValidators": Immutable.List [],
                                                                              "recommendedVariable": false,
                                                                              "required": false,
                                                                              "scale": undefined,
                                                                              "URL": undefined,
                                                                              "shownInDetailsView": true,
                                                                              "shownInInsertView": true,
                                                                              "shownInUpdateView": true,
                                                                              "visible": true,
                                                                              "dataType": Immutable.Record {
                                                                                "conceptURI": undefined,
                                                                                "display": "Integer",
                                                                                "name": "int",
                                                                                "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                                                                "alternateRangeURI": "xsd:int",
                                                                                "shortDisplay": undefined,
                                                                                "lookupSchema": undefined,
                                                                                "lookupQuery": undefined,
                                                                              },
                                                                              "lookupQueryValue": undefined,
                                                                              "lookupType": Immutable.Record {
                                                                                "conceptURI": undefined,
                                                                                "display": "Lookup",
                                                                                "name": "lookup",
                                                                                "rangeURI": "xsd:int",
                                                                                "alternateRangeURI": undefined,
                                                                                "shortDisplay": undefined,
                                                                                "lookupSchema": undefined,
                                                                                "lookupQuery": undefined,
                                                                              },
                                                                              "original": Object {
                                                                                "conceptURI": undefined,
                                                                                "dataType": Immutable.Record {
                                                                                  "conceptURI": undefined,
                                                                                  "display": "Integer",
                                                                                  "name": "int",
                                                                                  "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                                                                  "alternateRangeURI": "xsd:int",
                                                                                  "shortDisplay": undefined,
                                                                                  "lookupSchema": undefined,
                                                                                  "lookupQuery": undefined,
                                                                                },
                                                                                "rangeURI": undefined,
                                                                              },
                                                                              "updatedField": false,
                                                                              "isPrimaryKey": false,
                                                                              "lockType": "NotLocked",
                                                                              "wrappedColumnName": undefined,
                                                                            }
                                                                          }
                                                                          hideConditionalFormatting={false}
                                                                          index={1}
                                                                          onChange={[Function]}
                                                                          showingModal={[Function]}
                                                                          successBsStyle="success"
                                                                        >
                                                                          <div>
                                                                            <Row
                                                                              bsClass="row"
                                                                              className="domain-row-expanded"
                                                                              componentClass="div"
                                                                            >
                                                                              <div
                                                                                className="domain-row-expanded row"
                                                                              >
                                                                                <Col
                                                                                  bsClass="col"
                                                                                  componentClass="div"
                                                                                  xs={12}
                                                                                >
                                                                                  <div
                                                                                    className="col-xs-12"
                                                                                  >
                                                                                    <div
                                                                                      className="domain-field-section-heading domain-field-section-hdr"
                                                                                    >
                                                                                      Conditional Formatting and Validation Options
                                                                                    </div>
                                                                                  </div>
                                                                                </Col>
                                                                              </div>
                                                                            </Row>
                                                                            <Row
                                                                              bsClass="row"
                                                                              className="domain-row-expanded"
                                                                              componentClass="div"
                                                                            >
                                                                              <div
                                                                                className="domain-row-expanded row"
                                                                              >
                                                                                <Col
                                                                                  bsClass="col"
                                                                                  componentClass="div"
                                                                                  xs={12}
                                                                                >
                                                                                  <div
                                                                                    className="col-xs-12"
                                                                                  >
                                                                                    <div
                                                                                      className="domain-validation-group"
                                                                                    >
                                                                                      <div
                                                                                        className="domain-field-label domain-no-wrap"
                                                                                      >
                                                                                        Create Conditional Format Criteria
                                                                                        <LabelHelpTip
                                                                                          body={[Function]}
                                                                                          customStyle={Object {}}
                                                                                          id="tooltip"
                                                                                          size="1x"
                                                                                          title="Add Conditional Format"
                                                                                        >
                                                                                          <span
                                                                                            className="label-help-target"
                                                                                            onMouseOut={[Function]}
                                                                                            onMouseOver={[Function]}
                                                                                          >
                                                                                            <FontAwesomeIcon
                                                                                              border={false}
                                                                                              className="label-help-icon"
                                                                                              fixedWidth={false}
                                                                                              flip={null}
                                                                                              icon={
                                                                                                Object {
                                                                                                  "icon": Array [
                                                                                                    512,
                                                                                                    512,
                                                                                                    Array [],
                                                                                                    "f059",
                                                                                                    "M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z",
                                                                                                  ],
                                                                                                  "iconName": "question-circle",
                                                                                                  "prefix": "fas",
                                                                                                }
                                                                                              }
                                                                                              inverse={false}
                                                                                              listItem={false}
                                                                                              mask={null}
                                                                                              pull={null}
                                                                                              pulse={false}
                                                                                              rotation={null}
                                                                                              size="1x"
                                                                                              spin={false}
                                                                                              style={Object {}}
                                                                                              symbol={false}
                                                                                              title=""
                                                                                              transform={null}
                                                                                            >
                                                                                              <svg
                                                                                                aria-hidden="true"
                                                                                                className="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                                                                                                data-icon="question-circle"
                                                                                                data-prefix="fas"
                                                                                                focusable="false"
                                                                                                role="img"
                                                                                                style={Object {}}
                                                                                                viewBox="0 0 512 512"
                                                                                                xmlns="http://www.w3.org/2000/svg"
                                                                                              >
                                                                                                <path
                                                                                                  d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                                                                  fill="currentColor"
                                                                                                  style={Object {}}
                                                                                                />
                                                                                              </svg>
                                                                                            </FontAwesomeIcon>
                                                                                            <Overlay
                                                                                              animation={[Function]}
                                                                                              placement="right"
                                                                                              rootClose={false}
                                                                                              show={false}
                                                                                              target={
                                                                                                <span
                                                                                                  class="label-help-target"
                                                                                                >
                                                                                                  <svg
                                                                                                    aria-hidden="true"
                                                                                                    class="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                                                                                                    data-icon="question-circle"
                                                                                                    data-prefix="fas"
                                                                                                    focusable="false"
                                                                                                    role="img"
                                                                                                    viewBox="0 0 512 512"
                                                                                                    xmlns="http://www.w3.org/2000/svg"
                                                                                                  >
                                                                                                    <path
                                                                                                      d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                                                                      fill="currentColor"
                                                                                                    />
                                                                                                  </svg>
                                                                                                </span>
                                                                                              }
                                                                                            >
                                                                                              <Overlay
                                                                                                placement="right"
                                                                                                rootClose={false}
                                                                                                show={false}
                                                                                                target={
                                                                                                  <span
                                                                                                    class="label-help-target"
                                                                                                  >
                                                                                                    <svg
                                                                                                      aria-hidden="true"
                                                                                                      class="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                                                                                                      data-icon="question-circle"
                                                                                                      data-prefix="fas"
                                                                                                      focusable="false"
                                                                                                      role="img"
                                                                                                      viewBox="0 0 512 512"
                                                                                                      xmlns="http://www.w3.org/2000/svg"
                                                                                                    >
                                                                                                      <path
                                                                                                        d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                                                                        fill="currentColor"
                                                                                                      />
                                                                                                    </svg>
                                                                                                  </span>
                                                                                                }
                                                                                                transition={[Function]}
                                                                                              />
                                                                                            </Overlay>
                                                                                          </span>
                                                                                        </LabelHelpTip>
                                                                                      </div>
                                                                                      <div>
                                                                                        <Button
                                                                                          active={false}
                                                                                          block={false}
                                                                                          bsClass="btn"
                                                                                          bsStyle="default"
                                                                                          className="domain-validation-button"
                                                                                          disabled={false}
                                                                                          id="domainpropertiesrow-conditionalFormat-1-1"
                                                                                          name="domainpropertiesrow-conditionalFormat"
                                                                                          onClick={[Function]}
                                                                                        >
                                                                                          <button
                                                                                            className="domain-validation-button btn btn-default"
                                                                                            disabled={false}
                                                                                            id="domainpropertiesrow-conditionalFormat-1-1"
                                                                                            name="domainpropertiesrow-conditionalFormat"
                                                                                            onClick={[Function]}
                                                                                            type="button"
                                                                                          >
                                                                                            Add Format
                                                                                          </button>
                                                                                        </Button>
                                                                                        <span
                                                                                          className="domain-text-label"
                                                                                        >
                                                                                          None Set
                                                                                        </span>
                                                                                      </div>
                                                                                    </div>
                                                                                    <div
                                                                                      className=""
                                                                                    >
                                                                                      <div
                                                                                        className="domain-field-label domain-no-wrap"
                                                                                      >
                                                                                        Create Range Validator
                                                                                        <LabelHelpTip
                                                                                          body={[Function]}
                                                                                          customStyle={Object {}}
                                                                                          id="tooltip"
                                                                                          size="1x"
                                                                                          title="Add Range Validator"
                                                                                        >
                                                                                          <span
                                                                                            className="label-help-target"
                                                                                            onMouseOut={[Function]}
                                                                                            onMouseOver={[Function]}
                                                                                          >
                                                                                            <FontAwesomeIcon
                                                                                              border={false}
                                                                                              className="label-help-icon"
                                                                                              fixedWidth={false}
                                                                                              flip={null}
                                                                                              icon={
                                                                                                Object {
                                                                                                  "icon": Array [
                                                                                                    512,
                                                                                                    512,
                                                                                                    Array [],
                                                                                                    "f059",
                                                                                                    "M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z",
                                                                                                  ],
                                                                                                  "iconName": "question-circle",
                                                                                                  "prefix": "fas",
                                                                                                }
                                                                                              }
                                                                                              inverse={false}
                                                                                              listItem={false}
                                                                                              mask={null}
                                                                                              pull={null}
                                                                                              pulse={false}
                                                                                              rotation={null}
                                                                                              size="1x"
                                                                                              spin={false}
                                                                                              style={Object {}}
                                                                                              symbol={false}
                                                                                              title=""
                                                                                              transform={null}
                                                                                            >
                                                                                              <svg
                                                                                                aria-hidden="true"
                                                                                                className="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                                                                                                data-icon="question-circle"
                                                                                                data-prefix="fas"
                                                                                                focusable="false"
                                                                                                role="img"
                                                                                                style={Object {}}
                                                                                                viewBox="0 0 512 512"
                                                                                                xmlns="http://www.w3.org/2000/svg"
                                                                                              >
                                                                                                <path
                                                                                                  d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                                                                  fill="currentColor"
                                                                                                  style={Object {}}
                                                                                                />
                                                                                              </svg>
                                                                                            </FontAwesomeIcon>
                                                                                            <Overlay
                                                                                              animation={[Function]}
                                                                                              placement="right"
                                                                                              rootClose={false}
                                                                                              show={false}
                                                                                              target={
                                                                                                <span
                                                                                                  class="label-help-target"
                                                                                                >
                                                                                                  <svg
                                                                                                    aria-hidden="true"
                                                                                                    class="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                                                                                                    data-icon="question-circle"
                                                                                                    data-prefix="fas"
                                                                                                    focusable="false"
                                                                                                    role="img"
                                                                                                    viewBox="0 0 512 512"
                                                                                                    xmlns="http://www.w3.org/2000/svg"
                                                                                                  >
                                                                                                    <path
                                                                                                      d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                                                                      fill="currentColor"
                                                                                                    />
                                                                                                  </svg>
                                                                                                </span>
                                                                                              }
                                                                                            >
                                                                                              <Overlay
                                                                                                placement="right"
                                                                                                rootClose={false}
                                                                                                show={false}
                                                                                                target={
                                                                                                  <span
                                                                                                    class="label-help-target"
                                                                                                  >
                                                                                                    <svg
                                                                                                      aria-hidden="true"
                                                                                                      class="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                                                                                                      data-icon="question-circle"
                                                                                                      data-prefix="fas"
                                                                                                      focusable="false"
                                                                                                      role="img"
                                                                                                      viewBox="0 0 512 512"
                                                                                                      xmlns="http://www.w3.org/2000/svg"
                                                                                                    >
                                                                                                      <path
                                                                                                        d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                                                                        fill="currentColor"
                                                                                                      />
                                                                                                    </svg>
                                                                                                  </span>
                                                                                                }
                                                                                                transition={[Function]}
                                                                                              />
                                                                                            </Overlay>
                                                                                          </span>
                                                                                        </LabelHelpTip>
                                                                                      </div>
                                                                                      <div>
                                                                                        <Button
                                                                                          active={false}
                                                                                          block={false}
                                                                                          bsClass="btn"
                                                                                          bsStyle="default"
                                                                                          className="domain-validation-button"
                                                                                          disabled={false}
                                                                                          id="domainpropertiesrow-rangeValidator-1-1"
                                                                                          name="domainpropertiesrow-rangeValidator"
                                                                                          onClick={[Function]}
                                                                                        >
                                                                                          <button
                                                                                            className="domain-validation-button btn btn-default"
                                                                                            disabled={false}
                                                                                            id="domainpropertiesrow-rangeValidator-1-1"
                                                                                            name="domainpropertiesrow-rangeValidator"
                                                                                            onClick={[Function]}
                                                                                            type="button"
                                                                                          >
                                                                                            Add Range
                                                                                          </button>
                                                                                        </Button>
                                                                                        <span
                                                                                          className="domain-text-label"
                                                                                        >
                                                                                          None Set
                                                                                        </span>
                                                                                      </div>
                                                                                    </div>
                                                                                  </div>
                                                                                </Col>
                                                                              </div>
                                                                            </Row>
                                                                          </div>
                                                                        </ConditionalFormattingAndValidation>
                                                                      </div>
                                                                    </Col>
                                                                  </div>
                                                                </div>
                                                              </DomainRowExpandedOptions>
                                                            </div>
                                                          </Transition>
                                                        </Collapse>
                                                      </div>
                                                    </Draggable>
                                                  </ConnectFunction>
                                                </DomainRow>
                                                <DomainRow
                                                  appPropertiesOnly={false}
                                                  availableTypes={
                                                    Immutable.List [
                                                      Immutable.Record {
                                                        "conceptURI": undefined,
                                                        "display": "Text",
                                                        "name": "string",
                                                        "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                        "alternateRangeURI": "xsd:string",
                                                        "shortDisplay": "String",
                                                        "lookupSchema": undefined,
                                                        "lookupQuery": undefined,
                                                      },
                                                      Immutable.Record {
                                                        "conceptURI": undefined,
                                                        "display": "Multi-Line Text",
                                                        "name": "multiLine",
                                                        "rangeURI": "http://www.w3.org/2001/XMLSchema#multiLine",
                                                        "alternateRangeURI": undefined,
                                                        "shortDisplay": undefined,
                                                        "lookupSchema": undefined,
                                                        "lookupQuery": undefined,
                                                      },
                                                      Immutable.Record {
                                                        "conceptURI": undefined,
                                                        "display": "Boolean",
                                                        "name": "boolean",
                                                        "rangeURI": "http://www.w3.org/2001/XMLSchema#boolean",
                                                        "alternateRangeURI": "xsd:boolean",
                                                        "shortDisplay": undefined,
                                                        "lookupSchema": undefined,
                                                        "lookupQuery": undefined,
                                                      },
                                                      Immutable.Record {
                                                        "conceptURI": undefined,
                                                        "display": "Integer",
                                                        "name": "int",
                                                        "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                                        "alternateRangeURI": "xsd:int",
                                                        "shortDisplay": undefined,
                                                        "lookupSchema": undefined,
                                                        "lookupQuery": undefined,
                                                      },
                                                      Immutable.Record {
                                                        "conceptURI": undefined,
                                                        "display": "Decimal",
                                                        "name": "double",
                                                        "rangeURI": "http://www.w3.org/2001/XMLSchema#double",
                                                        "alternateRangeURI": "xsd:double",
                                                        "shortDisplay": undefined,
                                                        "lookupSchema": undefined,
                                                        "lookupQuery": undefined,
                                                      },
                                                      Immutable.Record {
                                                        "conceptURI": undefined,
                                                        "display": "Date Time",
                                                        "name": "dateTime",
                                                        "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                                                        "alternateRangeURI": "xsd:dateTime",
                                                        "shortDisplay": undefined,
                                                        "lookupSchema": undefined,
                                                        "lookupQuery": undefined,
                                                      },
                                                      Immutable.Record {
                                                        "conceptURI": "http://www.labkey.org/exp/xml#flag",
                                                        "display": "Flag",
                                                        "name": "flag",
                                                        "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                        "alternateRangeURI": undefined,
                                                        "shortDisplay": undefined,
                                                        "lookupSchema": undefined,
                                                        "lookupQuery": undefined,
                                                      },
                                                      Immutable.Record {
                                                        "conceptURI": undefined,
                                                        "display": "File",
                                                        "name": "fileLink",
                                                        "rangeURI": "http://cpas.fhcrc.org/exp/xml#fileLink",
                                                        "alternateRangeURI": undefined,
                                                        "shortDisplay": undefined,
                                                        "lookupSchema": undefined,
                                                        "lookupQuery": undefined,
                                                      },
                                                      Immutable.Record {
                                                        "conceptURI": undefined,
                                                        "display": "Attachment",
                                                        "name": "attachment",
                                                        "rangeURI": "http://www.labkey.org/exp/xml#attachment",
                                                        "alternateRangeURI": undefined,
                                                        "shortDisplay": undefined,
                                                        "lookupSchema": undefined,
                                                        "lookupQuery": undefined,
                                                      },
                                                      Immutable.Record {
                                                        "conceptURI": undefined,
                                                        "display": "User",
                                                        "name": "users",
                                                        "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                                        "alternateRangeURI": undefined,
                                                        "shortDisplay": undefined,
                                                        "lookupSchema": "core",
                                                        "lookupQuery": "users",
                                                      },
                                                      Immutable.Record {
                                                        "conceptURI": "http://cpas.labkey.com/Study#ParticipantId",
                                                        "display": "Subject/Participant",
                                                        "name": "ParticipantId",
                                                        "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                        "alternateRangeURI": undefined,
                                                        "shortDisplay": undefined,
                                                        "lookupSchema": undefined,
                                                        "lookupQuery": undefined,
                                                      },
                                                      Immutable.Record {
                                                        "conceptURI": undefined,
                                                        "display": "Lookup",
                                                        "name": "lookup",
                                                        "rangeURI": undefined,
                                                        "alternateRangeURI": undefined,
                                                        "shortDisplay": undefined,
                                                        "lookupSchema": undefined,
                                                        "lookupQuery": undefined,
                                                      },
                                                      Immutable.Record {
                                                        "conceptURI": "http://www.labkey.org/exp/xml#sample",
                                                        "display": "Sample",
                                                        "name": "sample",
                                                        "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                                        "alternateRangeURI": undefined,
                                                        "shortDisplay": undefined,
                                                        "lookupSchema": undefined,
                                                        "lookupQuery": undefined,
                                                      },
                                                    ]
                                                  }
                                                  defaultValueOptions={Immutable.List []}
                                                  domainFormDisplayOptions={
                                                    Object {
                                                      "isDragDisabled": false,
                                                      "phiLevelDisabled": false,
                                                      "showAddFieldsButton": true,
                                                      "showRequired": true,
                                                      "showTextOptions": true,
                                                      "showValidators": true,
                                                    }
                                                  }
                                                  domainId={null}
                                                  domainIndex={1}
                                                  dragging={false}
                                                  expandTransition={300}
                                                  expanded={false}
                                                  field={
                                                    Immutable.Record {
                                                      "conceptURI": undefined,
                                                      "conditionalFormats": Immutable.List [],
                                                      "defaultScale": undefined,
                                                      "defaultValueType": undefined,
                                                      "defaultValue": undefined,
                                                      "defaultDisplayValue": undefined,
                                                      "description": undefined,
                                                      "dimension": undefined,
                                                      "excludeFromShifting": false,
                                                      "format": undefined,
                                                      "hidden": false,
                                                      "importAliases": undefined,
                                                      "label": undefined,
                                                      "lookupContainer": undefined,
                                                      "lookupQuery": undefined,
                                                      "lookupSchema": undefined,
                                                      "lookupValidator": undefined,
                                                      "measure": undefined,
                                                      "mvEnabled": false,
                                                      "name": "field3",
                                                      "PHI": undefined,
                                                      "primaryKey": undefined,
                                                      "propertyId": undefined,
                                                      "propertyURI": undefined,
                                                      "propertyValidators": Immutable.List [],
                                                      "rangeValidators": Immutable.List [],
                                                      "rangeURI": "xsd:dateTime",
                                                      "regexValidators": Immutable.List [],
                                                      "recommendedVariable": false,
                                                      "required": false,
                                                      "scale": undefined,
                                                      "URL": undefined,
                                                      "shownInDetailsView": true,
                                                      "shownInInsertView": true,
                                                      "shownInUpdateView": true,
                                                      "visible": true,
                                                      "dataType": Immutable.Record {
                                                        "conceptURI": undefined,
                                                        "display": "Date Time",
                                                        "name": "dateTime",
                                                        "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                                                        "alternateRangeURI": "xsd:dateTime",
                                                        "shortDisplay": undefined,
                                                        "lookupSchema": undefined,
                                                        "lookupQuery": undefined,
                                                      },
                                                      "lookupQueryValue": undefined,
                                                      "lookupType": Immutable.Record {
                                                        "conceptURI": undefined,
                                                        "display": "Lookup",
                                                        "name": "lookup",
                                                        "rangeURI": "xsd:dateTime",
                                                        "alternateRangeURI": undefined,
                                                        "shortDisplay": undefined,
                                                        "lookupSchema": undefined,
                                                        "lookupQuery": undefined,
                                                      },
                                                      "original": Object {
                                                        "conceptURI": undefined,
                                                        "dataType": Immutable.Record {
                                                          "conceptURI": undefined,
                                                          "display": "Date Time",
                                                          "name": "dateTime",
                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                                                          "alternateRangeURI": "xsd:dateTime",
                                                          "shortDisplay": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                        "rangeURI": undefined,
                                                      },
                                                      "updatedField": false,
                                                      "isPrimaryKey": false,
                                                      "lockType": "NotLocked",
                                                      "wrappedColumnName": undefined,
                                                    }
                                                  }
                                                  helpNoun="field designer"
                                                  index={2}
                                                  key="domain-row-key-2"
                                                  maxPhiLevel="NotPHI"
                                                  onChange={[Function]}
                                                  onDelete={[Function]}
                                                  onExpand={[Function]}
                                                  showDefaultValueSettings={false}
                                                  showFilePropertyType={false}
                                                  successBsStyle="success"
                                                >
                                                  <ConnectFunction
                                                    disableInteractiveElementBlocking={false}
                                                    draggableId="domainpropertiesrow-domaindrag-1-2"
                                                    index={2}
                                                    isDragDisabled={false}
                                                    shouldRespectForcePress={false}
                                                  >
                                                    <Draggable
                                                      disableInteractiveElementBlocking={false}
                                                      draggableId="domainpropertiesrow-domaindrag-1-2"
                                                      drop={[Function]}
                                                      dropAnimationFinished={[Function]}
                                                      index={2}
                                                      isDragDisabled={false}
                                                      lift={[Function]}
                                                      mapped={
                                                        Object {
                                                          "combineTargetFor": null,
                                                          "offset": Object {
                                                            "x": 0,
                                                            "y": 0,
                                                          },
                                                          "shouldAnimateDisplacement": true,
                                                          "snapshot": Object {
                                                            "combineTargetFor": null,
                                                            "combineWith": null,
                                                            "draggingOver": null,
                                                            "dropAnimation": null,
                                                            "isDragging": false,
                                                            "isDropAnimating": false,
                                                            "mode": null,
                                                          },
                                                          "type": "SECONDARY",
                                                        }
                                                      }
                                                      move={[Function]}
                                                      moveByWindowScroll={[Function]}
                                                      moveDown={[Function]}
                                                      moveLeft={[Function]}
                                                      moveRight={[Function]}
                                                      moveUp={[Function]}
                                                      shouldRespectForcePress={false}
                                                    >
                                                      <div
                                                        className="domain-field-row domain-row-border-default"
                                                        data-react-beautiful-dnd-draggable="0"
                                                        onTransitionEnd={null}
                                                        style={
                                                          Object {
                                                            "transform": null,
                                                            "transition": null,
                                                          }
                                                        }
                                                        tabIndex={2}
                                                      >
                                                        <Row
                                                          bsClass="row"
                                                          className="domain-row-container"
                                                          componentClass="div"
                                                          key="domainpropertiesrow-domainrow-1-2"
                                                        >
                                                          <div
                                                            className="domain-row-container row"
                                                          >
                                                            <AdvancedSettings
                                                              defaultValueOptions={Immutable.List []}
                                                              domainFormDisplayOptions={
                                                                Object {
                                                                  "isDragDisabled": false,
                                                                  "phiLevelDisabled": false,
                                                                  "showAddFieldsButton": true,
                                                                  "showRequired": true,
                                                                  "showTextOptions": true,
                                                                  "showValidators": true,
                                                                }
                                                              }
                                                              domainId={null}
                                                              domainIndex={1}
                                                              field={
                                                                Immutable.Record {
                                                                  "conceptURI": undefined,
                                                                  "conditionalFormats": Immutable.List [],
                                                                  "defaultScale": undefined,
                                                                  "defaultValueType": undefined,
                                                                  "defaultValue": undefined,
                                                                  "defaultDisplayValue": undefined,
                                                                  "description": undefined,
                                                                  "dimension": undefined,
                                                                  "excludeFromShifting": false,
                                                                  "format": undefined,
                                                                  "hidden": false,
                                                                  "importAliases": undefined,
                                                                  "label": undefined,
                                                                  "lookupContainer": undefined,
                                                                  "lookupQuery": undefined,
                                                                  "lookupSchema": undefined,
                                                                  "lookupValidator": undefined,
                                                                  "measure": undefined,
                                                                  "mvEnabled": false,
                                                                  "name": "field3",
                                                                  "PHI": undefined,
                                                                  "primaryKey": undefined,
                                                                  "propertyId": undefined,
                                                                  "propertyURI": undefined,
                                                                  "propertyValidators": Immutable.List [],
                                                                  "rangeValidators": Immutable.List [],
                                                                  "rangeURI": "xsd:dateTime",
                                                                  "regexValidators": Immutable.List [],
                                                                  "recommendedVariable": false,
                                                                  "required": false,
                                                                  "scale": undefined,
                                                                  "URL": undefined,
                                                                  "shownInDetailsView": true,
                                                                  "shownInInsertView": true,
                                                                  "shownInUpdateView": true,
                                                                  "visible": true,
                                                                  "dataType": Immutable.Record {
                                                                    "conceptURI": undefined,
                                                                    "display": "Date Time",
                                                                    "name": "dateTime",
                                                                    "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                                                                    "alternateRangeURI": "xsd:dateTime",
                                                                    "shortDisplay": undefined,
                                                                    "lookupSchema": undefined,
                                                                    "lookupQuery": undefined,
                                                                  },
                                                                  "lookupQueryValue": undefined,
                                                                  "lookupType": Immutable.Record {
                                                                    "conceptURI": undefined,
                                                                    "display": "Lookup",
                                                                    "name": "lookup",
                                                                    "rangeURI": "xsd:dateTime",
                                                                    "alternateRangeURI": undefined,
                                                                    "shortDisplay": undefined,
                                                                    "lookupSchema": undefined,
                                                                    "lookupQuery": undefined,
                                                                  },
                                                                  "original": Object {
                                                                    "conceptURI": undefined,
                                                                    "dataType": Immutable.Record {
                                                                      "conceptURI": undefined,
                                                                      "display": "Date Time",
                                                                      "name": "dateTime",
                                                                      "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                                                                      "alternateRangeURI": "xsd:dateTime",
                                                                      "shortDisplay": undefined,
                                                                      "lookupSchema": undefined,
                                                                      "lookupQuery": undefined,
                                                                    },
                                                                    "rangeURI": undefined,
                                                                  },
                                                                  "updatedField": false,
                                                                  "isPrimaryKey": false,
                                                                  "lockType": "NotLocked",
                                                                  "wrappedColumnName": undefined,
                                                                }
                                                              }
                                                              helpNoun="field designer"
                                                              index={2}
                                                              label="field3"
                                                              maxPhiLevel="NotPHI"
                                                              onApply={[Function]}
                                                              onHide={[Function]}
                                                              show={false}
                                                              showDefaultValueSettings={false}
                                                              successBsStyle="success"
                                                            >
                                                              <Modal
                                                                animation={true}
                                                                autoFocus={true}
                                                                backdrop={true}
                                                                bsClass="modal"
                                                                dialogComponentClass={[Function]}
                                                                enforceFocus={true}
                                                                keyboard={true}
                                                                manager={
                                                                  ModalManager {
                                                                    "add": [Function],
                                                                    "containers": Array [],
                                                                    "data": Array [],
                                                                    "handleContainerOverflow": true,
                                                                    "hideSiblingNodes": true,
                                                                    "isTopModal": [Function],
                                                                    "modals": Array [],
                                                                    "remove": [Function],
                                                                  }
                                                                }
                                                                onEnter={[Function]}
                                                                onHide={[Function]}
                                                                renderBackdrop={[Function]}
                                                                restoreFocus={true}
                                                                show={false}
                                                              >
                                                                <Modal
                                                                  autoFocus={true}
                                                                  backdrop={true}
                                                                  backdropClassName="modal-backdrop"
                                                                  backdropTransition={[Function]}
                                                                  containerClassName="modal-open"
                                                                  enforceFocus={true}
                                                                  keyboard={true}
                                                                  manager={
                                                                    ModalManager {
                                                                      "add": [Function],
                                                                      "containers": Array [],
                                                                      "data": Array [],
                                                                      "handleContainerOverflow": true,
                                                                      "hideSiblingNodes": true,
                                                                      "isTopModal": [Function],
                                                                      "modals": Array [],
                                                                      "remove": [Function],
                                                                    }
                                                                  }
                                                                  onEnter={[Function]}
                                                                  onEntering={[Function]}
                                                                  onExited={[Function]}
                                                                  onHide={[Function]}
                                                                  renderBackdrop={[Function]}
                                                                  restoreFocus={true}
                                                                  show={false}
                                                                  transition={[Function]}
                                                                />
                                                              </Modal>
                                                            </AdvancedSettings>
                                                            <div
                                                              aria-roledescription="Draggable item. Press space bar to lift"
                                                              className="domain-row-handle"
                                                              data-react-beautiful-dnd-drag-handle="0"
                                                              draggable={false}
                                                              onBlur={[Function]}
                                                              onDragStart={[Function]}
                                                              onFocus={[Function]}
                                                              onKeyDown={[Function]}
                                                              onMouseDown={[Function]}
                                                              onTouchStart={[Function]}
                                                              tabIndex={0}
                                                            >
                                                              <DragDropHandle>
                                                                <FontAwesomeIcon
                                                                  border={false}
                                                                  className=""
                                                                  fixedWidth={false}
                                                                  flip={null}
                                                                  icon={
                                                                    Object {
                                                                      "icon": Array [
                                                                        320,
                                                                        512,
                                                                        Array [],
                                                                        "f58e",
                                                                        "M96 32H32C14.33 32 0 46.33 0 64v64c0 17.67 14.33 32 32 32h64c17.67 0 32-14.33 32-32V64c0-17.67-14.33-32-32-32zm0 160H32c-17.67 0-32 14.33-32 32v64c0 17.67 14.33 32 32 32h64c17.67 0 32-14.33 32-32v-64c0-17.67-14.33-32-32-32zm0 160H32c-17.67 0-32 14.33-32 32v64c0 17.67 14.33 32 32 32h64c17.67 0 32-14.33 32-32v-64c0-17.67-14.33-32-32-32zM288 32h-64c-17.67 0-32 14.33-32 32v64c0 17.67 14.33 32 32 32h64c17.67 0 32-14.33 32-32V64c0-17.67-14.33-32-32-32zm0 160h-64c-17.67 0-32 14.33-32 32v64c0 17.67 14.33 32 32 32h64c17.67 0 32-14.33 32-32v-64c0-17.67-14.33-32-32-32zm0 160h-64c-17.67 0-32 14.33-32 32v64c0 17.67 14.33 32 32 32h64c17.67 0 32-14.33 32-32v-64c0-17.67-14.33-32-32-32z",
                                                                      ],
                                                                      "iconName": "grip-vertical",
                                                                      "prefix": "fas",
                                                                    }
                                                                  }
                                                                  inverse={false}
                                                                  listItem={false}
                                                                  mask={null}
                                                                  pull={null}
                                                                  pulse={false}
                                                                  rotation={null}
                                                                  size="lg"
                                                                  spin={false}
                                                                  symbol={false}
                                                                  title=""
                                                                  transform={null}
                                                                >
                                                                  <svg
                                                                    aria-hidden="true"
                                                                    className="svg-inline--fa fa-grip-vertical fa-w-10 fa-lg "
                                                                    data-icon="grip-vertical"
                                                                    data-prefix="fas"
                                                                    focusable="false"
                                                                    role="img"
                                                                    style={Object {}}
                                                                    viewBox="0 0 320 512"
                                                                    xmlns="http://www.w3.org/2000/svg"
                                                                  >
                                                                    <path
                                                                      d="M96 32H32C14.33 32 0 46.33 0 64v64c0 17.67 14.33 32 32 32h64c17.67 0 32-14.33 32-32V64c0-17.67-14.33-32-32-32zm0 160H32c-17.67 0-32 14.33-32 32v64c0 17.67 14.33 32 32 32h64c17.67 0 32-14.33 32-32v-64c0-17.67-14.33-32-32-32zm0 160H32c-17.67 0-32 14.33-32 32v64c0 17.67 14.33 32 32 32h64c17.67 0 32-14.33 32-32v-64c0-17.67-14.33-32-32-32zM288 32h-64c-17.67 0-32 14.33-32 32v64c0 17.67 14.33 32 32 32h64c17.67 0 32-14.33 32-32V64c0-17.67-14.33-32-32-32zm0 160h-64c-17.67 0-32 14.33-32 32v64c0 17.67 14.33 32 32 32h64c17.67 0 32-14.33 32-32v-64c0-17.67-14.33-32-32-32zm0 160h-64c-17.67 0-32 14.33-32 32v64c0 17.67 14.33 32 32 32h64c17.67 0 32-14.33 32-32v-64c0-17.67-14.33-32-32-32z"
                                                                      fill="currentColor"
                                                                      style={Object {}}
                                                                    />
                                                                  </svg>
                                                                </FontAwesomeIcon>
                                                              </DragDropHandle>
                                                            </div>
                                                            <div
                                                              className="domain-row-main"
                                                            >
                                                              <Col
                                                                bsClass="col"
                                                                className="domain-row-base-fields"
                                                                componentClass="div"
                                                                xs={6}
                                                              >
                                                                <div
                                                                  className="domain-row-base-fields col-xs-6"
                                                                >
                                                                  <div
                                                                    id="domainpropertiesrow-row-1-2"
                                                                  >
                                                                    <Col
                                                                      bsClass="col"
                                                                      componentClass="div"
                                                                      xs={6}
                                                                    >
                                                                      <div
                                                                        className="col-xs-6"
                                                                      >
                                                                        <FormControl
                                                                          bsClass="form-control"
                                                                          componentClass="input"
                                                                          disabled={false}
                                                                          id="domainpropertiesrow-name-1-2"
                                                                          name="domainpropertiesrow-name"
                                                                          onChange={[Function]}
                                                                          type="text"
                                                                          value="field3"
                                                                        >
                                                                          <input
                                                                            className="form-control"
                                                                            disabled={false}
                                                                            id="domainpropertiesrow-name-1-2"
                                                                            name="domainpropertiesrow-name"
                                                                            onChange={[Function]}
                                                                            type="text"
                                                                            value="field3"
                                                                          />
                                                                        </FormControl>
                                                                      </div>
                                                                    </Col>
                                                                    <Col
                                                                      bsClass="col"
                                                                      componentClass="div"
                                                                      xs={4}
                                                                    >
                                                                      <div
                                                                        className="col-xs-4"
                                                                      >
                                                                        <FormControl
                                                                          bsClass="form-control"
                                                                          componentClass="select"
                                                                          disabled={false}
                                                                          id="domainpropertiesrow-type-1-2"
                                                                          name="domainpropertiesrow-type"
                                                                          onChange={[Function]}
                                                                          value="dateTime"
                                                                        >
                                                                          <select
                                                                            className="form-control"
                                                                            disabled={false}
                                                                            id="domainpropertiesrow-type-1-2"
                                                                            name="domainpropertiesrow-type"
                                                                            onChange={[Function]}
                                                                            value="dateTime"
                                                                          >
                                                                            <option
                                                                              key="0"
                                                                              value="string"
                                                                            >
                                                                              Text
                                                                            </option>
                                                                            <option
                                                                              key="1"
                                                                              value="multiLine"
                                                                            >
                                                                              Multi-Line Text
                                                                            </option>
                                                                            <option
                                                                              key="2"
                                                                              value="boolean"
                                                                            >
                                                                              Boolean
                                                                            </option>
                                                                            <option
                                                                              key="3"
                                                                              value="int"
                                                                            >
                                                                              Integer
                                                                            </option>
                                                                            <option
                                                                              key="4"
                                                                              value="double"
                                                                            >
                                                                              Decimal
                                                                            </option>
                                                                            <option
                                                                              key="5"
                                                                              value="dateTime"
                                                                            >
                                                                              Date Time
                                                                            </option>
                                                                            <option
                                                                              key="6"
                                                                              value="flag"
                                                                            >
                                                                              Flag
                                                                            </option>
                                                                            <option
                                                                              key="7"
                                                                              value="fileLink"
                                                                            >
                                                                              File
                                                                            </option>
                                                                            <option
                                                                              key="8"
                                                                              value="attachment"
                                                                            >
                                                                              Attachment
                                                                            </option>
                                                                            <option
                                                                              key="9"
                                                                              value="users"
                                                                            >
                                                                              User
                                                                            </option>
                                                                            <option
                                                                              key="10"
                                                                              value="ParticipantId"
                                                                            >
                                                                              Subject/Participant
                                                                            </option>
                                                                            <option
                                                                              key="11"
                                                                              value="lookup"
                                                                            >
                                                                              Lookup
                                                                            </option>
                                                                            <option
                                                                              key="12"
                                                                              value="sample"
                                                                            >
                                                                              Sample
                                                                            </option>
                                                                          </select>
                                                                        </FormControl>
                                                                      </div>
                                                                    </Col>
                                                                    <Col
                                                                      bsClass="col"
                                                                      componentClass="div"
                                                                      xs={2}
                                                                    >
                                                                      <div
                                                                        className="col-xs-2"
                                                                      >
                                                                        <div
                                                                          className="domain-field-checkbox-container"
                                                                        >
                                                                          <Checkbox
                                                                            bsClass="checkbox"
                                                                            checked={false}
                                                                            className="domain-field-checkbox"
                                                                            disabled={false}
                                                                            id="domainpropertiesrow-required-1-2"
                                                                            inline={false}
                                                                            name="domainpropertiesrow-required"
                                                                            onChange={[Function]}
                                                                            title=""
                                                                          >
                                                                            <div
                                                                              className="domain-field-checkbox checkbox"
                                                                            >
                                                                              <label
                                                                                title=""
                                                                              >
                                                                                <input
                                                                                  checked={false}
                                                                                  disabled={false}
                                                                                  id="domainpropertiesrow-required-1-2"
                                                                                  name="domainpropertiesrow-required"
                                                                                  onChange={[Function]}
                                                                                  type="checkbox"
                                                                                />
                                                                              </label>
                                                                            </div>
                                                                          </Checkbox>
                                                                        </div>
                                                                      </div>
                                                                    </Col>
                                                                  </div>
                                                                </div>
                                                              </Col>
                                                              <Col
                                                                bsClass="col"
                                                                className="field-details-container"
                                                                componentClass="div"
                                                                xs={6}
                                                              >
                                                                <div
                                                                  className="field-details-container col-xs-6"
                                                                >
                                                                  <div
                                                                    className="domain-field-details"
                                                                    id="domainpropertiesrow-details-1-2"
                                                                  >
                                                                    New Field
                                                                  </div>
                                                                  <div
                                                                    className="domain-field-buttons"
                                                                  >
                                                                    <DeleteIcon
                                                                      iconCls="domain-field-delete-icon"
                                                                      id="domainpropertiesrow-delete-1-2"
                                                                      onDelete={[Function]}
                                                                      title="Remove field"
                                                                    >
                                                                      <span
                                                                        className="field-icon"
                                                                        id="domainpropertiesrow-delete-1-2"
                                                                        onClick={[Function]}
                                                                        title="Remove field"
                                                                      >
                                                                        <FontAwesomeIcon
                                                                          border={false}
                                                                          className="domain-field-delete-icon"
                                                                          fixedWidth={false}
                                                                          flip={null}
                                                                          icon={
                                                                            Object {
                                                                              "icon": Array [
                                                                                512,
                                                                                512,
                                                                                Array [],
                                                                                "f057",
                                                                                "M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8zm121.6 313.1c4.7 4.7 4.7 12.3 0 17L338 377.6c-4.7 4.7-12.3 4.7-17 0L256 312l-65.1 65.6c-4.7 4.7-12.3 4.7-17 0L134.4 338c-4.7-4.7-4.7-12.3 0-17l65.6-65-65.6-65.1c-4.7-4.7-4.7-12.3 0-17l39.6-39.6c4.7-4.7 12.3-4.7 17 0l65 65.7 65.1-65.6c4.7-4.7 12.3-4.7 17 0l39.6 39.6c4.7 4.7 4.7 12.3 0 17L312 256l65.6 65.1z",
                                                                              ],
                                                                              "iconName": "times-circle",
                                                                              "prefix": "fas",
                                                                            }
                                                                          }
                                                                          inverse={false}
                                                                          listItem={false}
                                                                          mask={null}
                                                                          pull={null}
                                                                          pulse={false}
                                                                          rotation={null}
                                                                          size={null}
                                                                          spin={false}
                                                                          symbol={false}
                                                                          title=""
                                                                          transform={null}
                                                                        >
                                                                          <svg
                                                                            aria-hidden="true"
                                                                            className="svg-inline--fa fa-times-circle fa-w-16 domain-field-delete-icon"
                                                                            data-icon="times-circle"
                                                                            data-prefix="fas"
                                                                            focusable="false"
                                                                            role="img"
                                                                            style={Object {}}
                                                                            viewBox="0 0 512 512"
                                                                            xmlns="http://www.w3.org/2000/svg"
                                                                          >
                                                                            <path
                                                                              d="M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8zm121.6 313.1c4.7 4.7 4.7 12.3 0 17L338 377.6c-4.7 4.7-12.3 4.7-17 0L256 312l-65.1 65.6c-4.7 4.7-12.3 4.7-17 0L134.4 338c-4.7-4.7-4.7-12.3 0-17l65.6-65-65.6-65.1c-4.7-4.7-4.7-12.3 0-17l39.6-39.6c4.7-4.7 12.3-4.7 17 0l65 65.7 65.1-65.6c4.7-4.7 12.3-4.7 17 0l39.6 39.6c4.7 4.7 4.7 12.3 0 17L312 256l65.6 65.1z"
                                                                              fill="currentColor"
                                                                              style={Object {}}
                                                                            />
                                                                          </svg>
                                                                        </FontAwesomeIcon>
                                                                      </span>
                                                                    </DeleteIcon>
                                                                    <FieldExpansionToggle
                                                                      cls="domain-field-expand-icon"
                                                                      collapsedTitle="Show additional field properties"
                                                                      expanded={false}
                                                                      expandedTitle="Hide additional field properties"
                                                                      id="domainpropertiesrow-expand-1-2"
                                                                      onClick={[Function]}
                                                                    >
                                                                      <div
                                                                        className="field-icon domain-field-expand-icon"
                                                                        id="domainpropertiesrow-expand-1-2"
                                                                        onClick={[Function]}
                                                                        title="Show additional field properties"
                                                                      >
                                                                        <FontAwesomeIcon
                                                                          border={false}
                                                                          className=""
                                                                          fixedWidth={false}
                                                                          flip={null}
                                                                          icon={
                                                                            Object {
                                                                              "icon": Array [
                                                                                448,
                                                                                512,
                                                                                Array [],
                                                                                "f0fe",
                                                                                "M400 32H48C21.5 32 0 53.5 0 80v352c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V80c0-26.5-21.5-48-48-48zm-32 252c0 6.6-5.4 12-12 12h-92v92c0 6.6-5.4 12-12 12h-56c-6.6 0-12-5.4-12-12v-92H92c-6.6 0-12-5.4-12-12v-56c0-6.6 5.4-12 12-12h92v-92c0-6.6 5.4-12 12-12h56c6.6 0 12 5.4 12 12v92h92c6.6 0 12 5.4 12 12v56z",
                                                                              ],
                                                                              "iconName": "plus-square",
                                                                              "prefix": "fas",
                                                                            }
                                                                          }
                                                                          inverse={false}
                                                                          listItem={false}
                                                                          mask={null}
                                                                          pull={null}
                                                                          pulse={false}
                                                                          rotation={null}
                                                                          size="lg"
                                                                          spin={false}
                                                                          symbol={false}
                                                                          title=""
                                                                          transform={null}
                                                                        >
                                                                          <svg
                                                                            aria-hidden="true"
                                                                            className="svg-inline--fa fa-plus-square fa-w-14 fa-lg "
                                                                            data-icon="plus-square"
                                                                            data-prefix="fas"
                                                                            focusable="false"
                                                                            role="img"
                                                                            style={Object {}}
                                                                            viewBox="0 0 448 512"
                                                                            xmlns="http://www.w3.org/2000/svg"
                                                                          >
                                                                            <path
                                                                              d="M400 32H48C21.5 32 0 53.5 0 80v352c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V80c0-26.5-21.5-48-48-48zm-32 252c0 6.6-5.4 12-12 12h-92v92c0 6.6-5.4 12-12 12h-56c-6.6 0-12-5.4-12-12v-92H92c-6.6 0-12-5.4-12-12v-56c0-6.6 5.4-12 12-12h92v-92c0-6.6 5.4-12 12-12h56c6.6 0 12 5.4 12 12v92h92c6.6 0 12 5.4 12 12v56z"
                                                                              fill="currentColor"
                                                                              style={Object {}}
                                                                            />
                                                                          </svg>
                                                                        </FontAwesomeIcon>
                                                                      </div>
                                                                    </FieldExpansionToggle>
                                                                  </div>
                                                                </div>
                                                              </Col>
                                                            </div>
                                                          </div>
                                                        </Row>
                                                        <Collapse
                                                          appear={false}
                                                          dimension="height"
                                                          getDimensionValue={[Function]}
                                                          in={false}
                                                          mountOnEnter={false}
                                                          onExited={[Function]}
                                                          onExiting={[Function]}
                                                          timeout={300}
                                                          unmountOnExit={false}
                                                        >
                                                          <Transition
                                                            appear={false}
                                                            aria-expanded={null}
                                                            enter={true}
                                                            exit={true}
                                                            in={false}
                                                            mountOnEnter={false}
                                                            onEnter={[Function]}
                                                            onEntered={[Function]}
                                                            onEntering={[Function]}
                                                            onExit={[Function]}
                                                            onExited={[Function]}
                                                            onExiting={[Function]}
                                                            timeout={300}
                                                            unmountOnExit={false}
                                                          >
                                                            <div
                                                              aria-expanded={null}
                                                              className="collapse"
                                                            >
                                                              <DomainRowExpandedOptions
                                                                appPropertiesOnly={false}
                                                                domainFormDisplayOptions={
                                                                  Object {
                                                                    "isDragDisabled": false,
                                                                    "phiLevelDisabled": false,
                                                                    "showAddFieldsButton": true,
                                                                    "showRequired": true,
                                                                    "showTextOptions": true,
                                                                    "showValidators": true,
                                                                  }
                                                                }
                                                                domainIndex={1}
                                                                field={
                                                                  Immutable.Record {
                                                                    "conceptURI": undefined,
                                                                    "conditionalFormats": Immutable.List [],
                                                                    "defaultScale": undefined,
                                                                    "defaultValueType": undefined,
                                                                    "defaultValue": undefined,
                                                                    "defaultDisplayValue": undefined,
                                                                    "description": undefined,
                                                                    "dimension": undefined,
                                                                    "excludeFromShifting": false,
                                                                    "format": undefined,
                                                                    "hidden": false,
                                                                    "importAliases": undefined,
                                                                    "label": undefined,
                                                                    "lookupContainer": undefined,
                                                                    "lookupQuery": undefined,
                                                                    "lookupSchema": undefined,
                                                                    "lookupValidator": undefined,
                                                                    "measure": undefined,
                                                                    "mvEnabled": false,
                                                                    "name": "field3",
                                                                    "PHI": undefined,
                                                                    "primaryKey": undefined,
                                                                    "propertyId": undefined,
                                                                    "propertyURI": undefined,
                                                                    "propertyValidators": Immutable.List [],
                                                                    "rangeValidators": Immutable.List [],
                                                                    "rangeURI": "xsd:dateTime",
                                                                    "regexValidators": Immutable.List [],
                                                                    "recommendedVariable": false,
                                                                    "required": false,
                                                                    "scale": undefined,
                                                                    "URL": undefined,
                                                                    "shownInDetailsView": true,
                                                                    "shownInInsertView": true,
                                                                    "shownInUpdateView": true,
                                                                    "visible": true,
                                                                    "dataType": Immutable.Record {
                                                                      "conceptURI": undefined,
                                                                      "display": "Date Time",
                                                                      "name": "dateTime",
                                                                      "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                                                                      "alternateRangeURI": "xsd:dateTime",
                                                                      "shortDisplay": undefined,
                                                                      "lookupSchema": undefined,
                                                                      "lookupQuery": undefined,
                                                                    },
                                                                    "lookupQueryValue": undefined,
                                                                    "lookupType": Immutable.Record {
                                                                      "conceptURI": undefined,
                                                                      "display": "Lookup",
                                                                      "name": "lookup",
                                                                      "rangeURI": "xsd:dateTime",
                                                                      "alternateRangeURI": undefined,
                                                                      "shortDisplay": undefined,
                                                                      "lookupSchema": undefined,
                                                                      "lookupQuery": undefined,
                                                                    },
                                                                    "original": Object {
                                                                      "conceptURI": undefined,
                                                                      "dataType": Immutable.Record {
                                                                        "conceptURI": undefined,
                                                                        "display": "Date Time",
                                                                        "name": "dateTime",
                                                                        "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                                                                        "alternateRangeURI": "xsd:dateTime",
                                                                        "shortDisplay": undefined,
                                                                        "lookupSchema": undefined,
                                                                        "lookupQuery": undefined,
                                                                      },
                                                                      "rangeURI": undefined,
                                                                    },
                                                                    "updatedField": false,
                                                                    "isPrimaryKey": false,
                                                                    "lockType": "NotLocked",
                                                                    "wrappedColumnName": undefined,
                                                                  }
                                                                }
                                                                index={2}
                                                                onChange={[Function]}
                                                                onMultiChange={[Function]}
                                                                showingModal={[Function]}
                                                                successBsStyle="success"
                                                              >
                                                                <div
                                                                  className="domain-row-container"
                                                                >
                                                                  <div
                                                                    className="domain-row-handle"
                                                                  />
                                                                  <div
                                                                    className="domain-row-container-expanded"
                                                                  >
                                                                    <Col
                                                                      bsClass="col"
                                                                      componentClass="div"
                                                                      xs={12}
                                                                    >
                                                                      <div
                                                                        className="col-xs-12"
                                                                      >
                                                                        <DateTimeFieldOptions
                                                                          domainIndex={1}
                                                                          excludeFromShifting={false}
                                                                          index={2}
                                                                          label="Date and Time Options"
                                                                          lockType="NotLocked"
                                                                          onChange={[Function]}
                                                                        >
                                                                          <div>
                                                                            <Row
                                                                              bsClass="row"
                                                                              className="domain-row-expanded"
                                                                              componentClass="div"
                                                                            >
                                                                              <div
                                                                                className="domain-row-expanded row"
                                                                              >
                                                                                <Col
                                                                                  bsClass="col"
                                                                                  componentClass="div"
                                                                                  xs={12}
                                                                                >
                                                                                  <div
                                                                                    className="col-xs-12"
                                                                                  >
                                                                                    <div
                                                                                      className="domain-field-section-heading"
                                                                                    >
                                                                                      Date and Time Options
                                                                                    </div>
                                                                                  </div>
                                                                                </Col>
                                                                              </div>
                                                                            </Row>
                                                                            <Row
                                                                              bsClass="row"
                                                                              className="domain-row-expanded"
                                                                              componentClass="div"
                                                                            >
                                                                              <div
                                                                                className="domain-row-expanded row"
                                                                              >
                                                                                <Col
                                                                                  bsClass="col"
                                                                                  componentClass="div"
                                                                                  xs={3}
                                                                                >
                                                                                  <div
                                                                                    className="col-xs-3"
                                                                                  >
                                                                                    <div
                                                                                      className="domain-field-label"
                                                                                    >
                                                                                      Format for Dates
                                                                                      <LabelHelpTip
                                                                                        body={[Function]}
                                                                                        customStyle={Object {}}
                                                                                        id="tooltip"
                                                                                        size="1x"
                                                                                        title="Format String"
                                                                                      >
                                                                                        <span
                                                                                          className="label-help-target"
                                                                                          onMouseOut={[Function]}
                                                                                          onMouseOver={[Function]}
                                                                                        >
                                                                                          <FontAwesomeIcon
                                                                                            border={false}
                                                                                            className="label-help-icon"
                                                                                            fixedWidth={false}
                                                                                            flip={null}
                                                                                            icon={
                                                                                              Object {
                                                                                                "icon": Array [
                                                                                                  512,
                                                                                                  512,
                                                                                                  Array [],
                                                                                                  "f059",
                                                                                                  "M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z",
                                                                                                ],
                                                                                                "iconName": "question-circle",
                                                                                                "prefix": "fas",
                                                                                              }
                                                                                            }
                                                                                            inverse={false}
                                                                                            listItem={false}
                                                                                            mask={null}
                                                                                            pull={null}
                                                                                            pulse={false}
                                                                                            rotation={null}
                                                                                            size="1x"
                                                                                            spin={false}
                                                                                            style={Object {}}
                                                                                            symbol={false}
                                                                                            title=""
                                                                                            transform={null}
                                                                                          >
                                                                                            <svg
                                                                                              aria-hidden="true"
                                                                                              className="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                                                                                              data-icon="question-circle"
                                                                                              data-prefix="fas"
                                                                                              focusable="false"
                                                                                              role="img"
                                                                                              style={Object {}}
                                                                                              viewBox="0 0 512 512"
                                                                                              xmlns="http://www.w3.org/2000/svg"
                                                                                            >
                                                                                              <path
                                                                                                d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                                                                fill="currentColor"
                                                                                                style={Object {}}
                                                                                              />
                                                                                            </svg>
                                                                                          </FontAwesomeIcon>
                                                                                          <Overlay
                                                                                            animation={[Function]}
                                                                                            placement="right"
                                                                                            rootClose={false}
                                                                                            show={false}
                                                                                            target={
                                                                                              <span
                                                                                                class="label-help-target"
                                                                                              >
                                                                                                <svg
                                                                                                  aria-hidden="true"
                                                                                                  class="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                                                                                                  data-icon="question-circle"
                                                                                                  data-prefix="fas"
                                                                                                  focusable="false"
                                                                                                  role="img"
                                                                                                  viewBox="0 0 512 512"
                                                                                                  xmlns="http://www.w3.org/2000/svg"
                                                                                                >
                                                                                                  <path
                                                                                                    d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                                                                    fill="currentColor"
                                                                                                  />
                                                                                                </svg>
                                                                                              </span>
                                                                                            }
                                                                                          >
                                                                                            <Overlay
                                                                                              placement="right"
                                                                                              rootClose={false}
                                                                                              show={false}
                                                                                              target={
                                                                                                <span
                                                                                                  class="label-help-target"
                                                                                                >
                                                                                                  <svg
                                                                                                    aria-hidden="true"
                                                                                                    class="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                                                                                                    data-icon="question-circle"
                                                                                                    data-prefix="fas"
                                                                                                    focusable="false"
                                                                                                    role="img"
                                                                                                    viewBox="0 0 512 512"
                                                                                                    xmlns="http://www.w3.org/2000/svg"
                                                                                                  >
                                                                                                    <path
                                                                                                      d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                                                                      fill="currentColor"
                                                                                                    />
                                                                                                  </svg>
                                                                                                </span>
                                                                                              }
                                                                                              transition={[Function]}
                                                                                            />
                                                                                          </Overlay>
                                                                                        </span>
                                                                                      </LabelHelpTip>
                                                                                    </div>
                                                                                  </div>
                                                                                </Col>
                                                                                <Col
                                                                                  bsClass="col"
                                                                                  componentClass="div"
                                                                                  xs={9}
                                                                                >
                                                                                  <div
                                                                                    className="col-xs-9"
                                                                                  />
                                                                                </Col>
                                                                              </div>
                                                                            </Row>
                                                                            <Row
                                                                              bsClass="row"
                                                                              className="domain-row-expanded"
                                                                              componentClass="div"
                                                                            >
                                                                              <div
                                                                                className="domain-row-expanded row"
                                                                              >
                                                                                <Col
                                                                                  bsClass="col"
                                                                                  componentClass="div"
                                                                                  xs={3}
                                                                                >
                                                                                  <div
                                                                                    className="col-xs-3"
                                                                                  >
                                                                                    <FormControl
                                                                                      bsClass="form-control"
                                                                                      componentClass="input"
                                                                                      disabled={false}
                                                                                      id="domainpropertiesrow-format-1-2"
                                                                                      name="domainpropertiesrow-format"
                                                                                      onChange={[Function]}
                                                                                      type="text"
                                                                                      value=""
                                                                                    >
                                                                                      <input
                                                                                        className="form-control"
                                                                                        disabled={false}
                                                                                        id="domainpropertiesrow-format-1-2"
                                                                                        name="domainpropertiesrow-format"
                                                                                        onChange={[Function]}
                                                                                        type="text"
                                                                                        value=""
                                                                                      />
                                                                                    </FormControl>
                                                                                  </div>
                                                                                </Col>
                                                                                <Col
                                                                                  bsClass="col"
                                                                                  componentClass="div"
                                                                                  xs={9}
                                                                                >
                                                                                  <div
                                                                                    className="col-xs-9"
                                                                                  />
                                                                                </Col>
                                                                              </div>
                                                                            </Row>
                                                                          </div>
                                                                        </DateTimeFieldOptions>
                                                                      </div>
                                                                    </Col>
                                                                    <Col
                                                                      bsClass="col"
                                                                      componentClass="div"
                                                                      lg={10}
                                                                      xs={12}
                                                                    >
                                                                      <div
                                                                        className="col-lg-10 col-xs-12"
                                                                      >
                                                                        <NameAndLinkingOptions
                                                                          domainIndex={1}
                                                                          field={
                                                                            Immutable.Record {
                                                                              "conceptURI": undefined,
                                                                              "conditionalFormats": Immutable.List [],
                                                                              "defaultScale": undefined,
                                                                              "defaultValueType": undefined,
                                                                              "defaultValue": undefined,
                                                                              "defaultDisplayValue": undefined,
                                                                              "description": undefined,
                                                                              "dimension": undefined,
                                                                              "excludeFromShifting": false,
                                                                              "format": undefined,
                                                                              "hidden": false,
                                                                              "importAliases": undefined,
                                                                              "label": undefined,
                                                                              "lookupContainer": undefined,
                                                                              "lookupQuery": undefined,
                                                                              "lookupSchema": undefined,
                                                                              "lookupValidator": undefined,
                                                                              "measure": undefined,
                                                                              "mvEnabled": false,
                                                                              "name": "field3",
                                                                              "PHI": undefined,
                                                                              "primaryKey": undefined,
                                                                              "propertyId": undefined,
                                                                              "propertyURI": undefined,
                                                                              "propertyValidators": Immutable.List [],
                                                                              "rangeValidators": Immutable.List [],
                                                                              "rangeURI": "xsd:dateTime",
                                                                              "regexValidators": Immutable.List [],
                                                                              "recommendedVariable": false,
                                                                              "required": false,
                                                                              "scale": undefined,
                                                                              "URL": undefined,
                                                                              "shownInDetailsView": true,
                                                                              "shownInInsertView": true,
                                                                              "shownInUpdateView": true,
                                                                              "visible": true,
                                                                              "dataType": Immutable.Record {
                                                                                "conceptURI": undefined,
                                                                                "display": "Date Time",
                                                                                "name": "dateTime",
                                                                                "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                                                                                "alternateRangeURI": "xsd:dateTime",
                                                                                "shortDisplay": undefined,
                                                                                "lookupSchema": undefined,
                                                                                "lookupQuery": undefined,
                                                                              },
                                                                              "lookupQueryValue": undefined,
                                                                              "lookupType": Immutable.Record {
                                                                                "conceptURI": undefined,
                                                                                "display": "Lookup",
                                                                                "name": "lookup",
                                                                                "rangeURI": "xsd:dateTime",
                                                                                "alternateRangeURI": undefined,
                                                                                "shortDisplay": undefined,
                                                                                "lookupSchema": undefined,
                                                                                "lookupQuery": undefined,
                                                                              },
                                                                              "original": Object {
                                                                                "conceptURI": undefined,
                                                                                "dataType": Immutable.Record {
                                                                                  "conceptURI": undefined,
                                                                                  "display": "Date Time",
                                                                                  "name": "dateTime",
                                                                                  "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                                                                                  "alternateRangeURI": "xsd:dateTime",
                                                                                  "shortDisplay": undefined,
                                                                                  "lookupSchema": undefined,
                                                                                  "lookupQuery": undefined,
                                                                                },
                                                                                "rangeURI": undefined,
                                                                              },
                                                                              "updatedField": false,
                                                                              "isPrimaryKey": false,
                                                                              "lockType": "NotLocked",
                                                                              "wrappedColumnName": undefined,
                                                                            }
                                                                          }
                                                                          index={2}
                                                                          onChange={[Function]}
                                                                        >
                                                                          <div>
                                                                            <Row
                                                                              bsClass="row"
                                                                              className="domain-row-expanded"
                                                                              componentClass="div"
                                                                            >
                                                                              <div
                                                                                className="domain-row-expanded row"
                                                                              >
                                                                                <Col
                                                                                  bsClass="col"
                                                                                  componentClass="div"
                                                                                  xs={12}
                                                                                >
                                                                                  <div
                                                                                    className="col-xs-12"
                                                                                  >
                                                                                    <div
                                                                                      className="domain-field-section-heading domain-field-section-hdr"
                                                                                    >
                                                                                      Name and Linking Options
                                                                                    </div>
                                                                                  </div>
                                                                                </Col>
                                                                              </div>
                                                                            </Row>
                                                                            <Row
                                                                              bsClass="row"
                                                                              className="domain-row-expanded"
                                                                              componentClass="div"
                                                                            >
                                                                              <div
                                                                                className="domain-row-expanded row"
                                                                              >
                                                                                <div>
                                                                                  <Col
                                                                                    bsClass="col"
                                                                                    componentClass="div"
                                                                                    xs={5}
                                                                                  >
                                                                                    <div
                                                                                      className="col-xs-5"
                                                                                    >
                                                                                      <div
                                                                                        className="domain-field-label"
                                                                                      >
                                                                                        Description
                                                                                      </div>
                                                                                      <FormControl
                                                                                        bsClass="form-control"
                                                                                        className="form-control textarea-noresize"
                                                                                        componentClass="textarea"
                                                                                        disabled={false}
                                                                                        id="domainpropertiesrow-description-1-2"
                                                                                        name="domainpropertiesrow-description"
                                                                                        onChange={[Function]}
                                                                                        rows={4}
                                                                                        value=""
                                                                                      >
                                                                                        <textarea
                                                                                          className="form-control textarea-noresize form-control"
                                                                                          disabled={false}
                                                                                          id="domainpropertiesrow-description-1-2"
                                                                                          name="domainpropertiesrow-description"
                                                                                          onChange={[Function]}
                                                                                          rows={4}
                                                                                          value=""
                                                                                        />
                                                                                      </FormControl>
                                                                                    </div>
                                                                                  </Col>
                                                                                  <Col
                                                                                    bsClass="col"
                                                                                    componentClass="div"
                                                                                    xs={3}
                                                                                  >
                                                                                    <div
                                                                                      className="col-xs-3"
                                                                                    >
                                                                                      <div
                                                                                        className="domain-field-label"
                                                                                      >
                                                                                        Label
                                                                                      </div>
                                                                                      <FormControl
                                                                                        bsClass="form-control"
                                                                                        componentClass="input"
                                                                                        disabled={false}
                                                                                        id="domainpropertiesrow-label-1-2"
                                                                                        name="domainpropertiesrow-label"
                                                                                        onChange={[Function]}
                                                                                        type="text"
                                                                                        value=""
                                                                                      >
                                                                                        <input
                                                                                          className="form-control"
                                                                                          disabled={false}
                                                                                          id="domainpropertiesrow-label-1-2"
                                                                                          name="domainpropertiesrow-label"
                                                                                          onChange={[Function]}
                                                                                          type="text"
                                                                                          value=""
                                                                                        />
                                                                                      </FormControl>
                                                                                      <div
                                                                                        className="domain-field-label"
                                                                                      >
                                                                                        Import Aliases
                                                                                        <LabelHelpTip
                                                                                          body={[Function]}
                                                                                          customStyle={Object {}}
                                                                                          id="tooltip"
                                                                                          size="1x"
                                                                                          title="Import Aliases"
                                                                                        >
                                                                                          <span
                                                                                            className="label-help-target"
                                                                                            onMouseOut={[Function]}
                                                                                            onMouseOver={[Function]}
                                                                                          >
                                                                                            <FontAwesomeIcon
                                                                                              border={false}
                                                                                              className="label-help-icon"
                                                                                              fixedWidth={false}
                                                                                              flip={null}
                                                                                              icon={
                                                                                                Object {
                                                                                                  "icon": Array [
                                                                                                    512,
                                                                                                    512,
                                                                                                    Array [],
                                                                                                    "f059",
                                                                                                    "M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z",
                                                                                                  ],
                                                                                                  "iconName": "question-circle",
                                                                                                  "prefix": "fas",
                                                                                                }
                                                                                              }
                                                                                              inverse={false}
                                                                                              listItem={false}
                                                                                              mask={null}
                                                                                              pull={null}
                                                                                              pulse={false}
                                                                                              rotation={null}
                                                                                              size="1x"
                                                                                              spin={false}
                                                                                              style={Object {}}
                                                                                              symbol={false}
                                                                                              title=""
                                                                                              transform={null}
                                                                                            >
                                                                                              <svg
                                                                                                aria-hidden="true"
                                                                                                className="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                                                                                                data-icon="question-circle"
                                                                                                data-prefix="fas"
                                                                                                focusable="false"
                                                                                                role="img"
                                                                                                style={Object {}}
                                                                                                viewBox="0 0 512 512"
                                                                                                xmlns="http://www.w3.org/2000/svg"
                                                                                              >
                                                                                                <path
                                                                                                  d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                                                                  fill="currentColor"
                                                                                                  style={Object {}}
                                                                                                />
                                                                                              </svg>
                                                                                            </FontAwesomeIcon>
                                                                                            <Overlay
                                                                                              animation={[Function]}
                                                                                              placement="right"
                                                                                              rootClose={false}
                                                                                              show={false}
                                                                                              target={
                                                                                                <span
                                                                                                  class="label-help-target"
                                                                                                >
                                                                                                  <svg
                                                                                                    aria-hidden="true"
                                                                                                    class="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                                                                                                    data-icon="question-circle"
                                                                                                    data-prefix="fas"
                                                                                                    focusable="false"
                                                                                                    role="img"
                                                                                                    viewBox="0 0 512 512"
                                                                                                    xmlns="http://www.w3.org/2000/svg"
                                                                                                  >
                                                                                                    <path
                                                                                                      d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                                                                      fill="currentColor"
                                                                                                    />
                                                                                                  </svg>
                                                                                                </span>
                                                                                              }
                                                                                            >
                                                                                              <Overlay
                                                                                                placement="right"
                                                                                                rootClose={false}
                                                                                                show={false}
                                                                                                target={
                                                                                                  <span
                                                                                                    class="label-help-target"
                                                                                                  >
                                                                                                    <svg
                                                                                                      aria-hidden="true"
                                                                                                      class="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                                                                                                      data-icon="question-circle"
                                                                                                      data-prefix="fas"
                                                                                                      focusable="false"
                                                                                                      role="img"
                                                                                                      viewBox="0 0 512 512"
                                                                                                      xmlns="http://www.w3.org/2000/svg"
                                                                                                    >
                                                                                                      <path
                                                                                                        d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                                                                        fill="currentColor"
                                                                                                      />
                                                                                                    </svg>
                                                                                                  </span>
                                                                                                }
                                                                                                transition={[Function]}
                                                                                              />
                                                                                            </Overlay>
                                                                                          </span>
                                                                                        </LabelHelpTip>
                                                                                      </div>
                                                                                      <FormControl
                                                                                        bsClass="form-control"
                                                                                        componentClass="input"
                                                                                        disabled={false}
                                                                                        id="domainpropertiesrow-importAliases-1-2"
                                                                                        name="domainpropertiesrow-importAliases"
                                                                                        onChange={[Function]}
                                                                                        type="text"
                                                                                        value=""
                                                                                      >
                                                                                        <input
                                                                                          className="form-control"
                                                                                          disabled={false}
                                                                                          id="domainpropertiesrow-importAliases-1-2"
                                                                                          name="domainpropertiesrow-importAliases"
                                                                                          onChange={[Function]}
                                                                                          type="text"
                                                                                          value=""
                                                                                        />
                                                                                      </FormControl>
                                                                                    </div>
                                                                                  </Col>
                                                                                  <Col
                                                                                    bsClass="col"
                                                                                    componentClass="div"
                                                                                    xs={4}
                                                                                  >
                                                                                    <div
                                                                                      className="col-xs-4"
                                                                                    >
                                                                                      <div
                                                                                        className="domain-field-label"
                                                                                      >
                                                                                        URL
                                                                                        <LabelHelpTip
                                                                                          body={[Function]}
                                                                                          customStyle={Object {}}
                                                                                          id="tooltip"
                                                                                          size="1x"
                                                                                          title="URL"
                                                                                        >
                                                                                          <span
                                                                                            className="label-help-target"
                                                                                            onMouseOut={[Function]}
                                                                                            onMouseOver={[Function]}
                                                                                          >
                                                                                            <FontAwesomeIcon
                                                                                              border={false}
                                                                                              className="label-help-icon"
                                                                                              fixedWidth={false}
                                                                                              flip={null}
                                                                                              icon={
                                                                                                Object {
                                                                                                  "icon": Array [
                                                                                                    512,
                                                                                                    512,
                                                                                                    Array [],
                                                                                                    "f059",
                                                                                                    "M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z",
                                                                                                  ],
                                                                                                  "iconName": "question-circle",
                                                                                                  "prefix": "fas",
                                                                                                }
                                                                                              }
                                                                                              inverse={false}
                                                                                              listItem={false}
                                                                                              mask={null}
                                                                                              pull={null}
                                                                                              pulse={false}
                                                                                              rotation={null}
                                                                                              size="1x"
                                                                                              spin={false}
                                                                                              style={Object {}}
                                                                                              symbol={false}
                                                                                              title=""
                                                                                              transform={null}
                                                                                            >
                                                                                              <svg
                                                                                                aria-hidden="true"
                                                                                                className="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                                                                                                data-icon="question-circle"
                                                                                                data-prefix="fas"
                                                                                                focusable="false"
                                                                                                role="img"
                                                                                                style={Object {}}
                                                                                                viewBox="0 0 512 512"
                                                                                                xmlns="http://www.w3.org/2000/svg"
                                                                                              >
                                                                                                <path
                                                                                                  d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                                                                  fill="currentColor"
                                                                                                  style={Object {}}
                                                                                                />
                                                                                              </svg>
                                                                                            </FontAwesomeIcon>
                                                                                            <Overlay
                                                                                              animation={[Function]}
                                                                                              placement="right"
                                                                                              rootClose={false}
                                                                                              show={false}
                                                                                              target={
                                                                                                <span
                                                                                                  class="label-help-target"
                                                                                                >
                                                                                                  <svg
                                                                                                    aria-hidden="true"
                                                                                                    class="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                                                                                                    data-icon="question-circle"
                                                                                                    data-prefix="fas"
                                                                                                    focusable="false"
                                                                                                    role="img"
                                                                                                    viewBox="0 0 512 512"
                                                                                                    xmlns="http://www.w3.org/2000/svg"
                                                                                                  >
                                                                                                    <path
                                                                                                      d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                                                                      fill="currentColor"
                                                                                                    />
                                                                                                  </svg>
                                                                                                </span>
                                                                                              }
                                                                                            >
                                                                                              <Overlay
                                                                                                placement="right"
                                                                                                rootClose={false}
                                                                                                show={false}
                                                                                                target={
                                                                                                  <span
                                                                                                    class="label-help-target"
                                                                                                  >
                                                                                                    <svg
                                                                                                      aria-hidden="true"
                                                                                                      class="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                                                                                                      data-icon="question-circle"
                                                                                                      data-prefix="fas"
                                                                                                      focusable="false"
                                                                                                      role="img"
                                                                                                      viewBox="0 0 512 512"
                                                                                                      xmlns="http://www.w3.org/2000/svg"
                                                                                                    >
                                                                                                      <path
                                                                                                        d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                                                                        fill="currentColor"
                                                                                                      />
                                                                                                    </svg>
                                                                                                  </span>
                                                                                                }
                                                                                                transition={[Function]}
                                                                                              />
                                                                                            </Overlay>
                                                                                          </span>
                                                                                        </LabelHelpTip>
                                                                                      </div>
                                                                                      <FormControl
                                                                                        bsClass="form-control"
                                                                                        componentClass="input"
                                                                                        disabled={false}
                                                                                        id="domainpropertiesrow-URL-1-2"
                                                                                        name="domainpropertiesrow-URL"
                                                                                        onChange={[Function]}
                                                                                        type="text"
                                                                                        value=""
                                                                                      >
                                                                                        <input
                                                                                          className="form-control"
                                                                                          disabled={false}
                                                                                          id="domainpropertiesrow-URL-1-2"
                                                                                          name="domainpropertiesrow-URL"
                                                                                          onChange={[Function]}
                                                                                          type="text"
                                                                                          value=""
                                                                                        />
                                                                                      </FormControl>
                                                                                    </div>
                                                                                  </Col>
                                                                                </div>
                                                                              </div>
                                                                            </Row>
                                                                          </div>
                                                                        </NameAndLinkingOptions>
                                                                      </div>
                                                                    </Col>
                                                                    <Col
                                                                      bsClass="col"
                                                                      componentClass="div"
                                                                      xs={12}
                                                                    >
                                                                      <div
                                                                        className="col-xs-12"
                                                                      >
                                                                        <ConditionalFormattingAndValidation
                                                                          domainFormDisplayOptions={
                                                                            Object {
                                                                              "isDragDisabled": false,
                                                                              "phiLevelDisabled": false,
                                                                              "showAddFieldsButton": true,
                                                                              "showRequired": true,
                                                                              "showTextOptions": true,
                                                                              "showValidators": true,
                                                                            }
                                                                          }
                                                                          domainIndex={1}
                                                                          field={
                                                                            Immutable.Record {
                                                                              "conceptURI": undefined,
                                                                              "conditionalFormats": Immutable.List [],
                                                                              "defaultScale": undefined,
                                                                              "defaultValueType": undefined,
                                                                              "defaultValue": undefined,
                                                                              "defaultDisplayValue": undefined,
                                                                              "description": undefined,
                                                                              "dimension": undefined,
                                                                              "excludeFromShifting": false,
                                                                              "format": undefined,
                                                                              "hidden": false,
                                                                              "importAliases": undefined,
                                                                              "label": undefined,
                                                                              "lookupContainer": undefined,
                                                                              "lookupQuery": undefined,
                                                                              "lookupSchema": undefined,
                                                                              "lookupValidator": undefined,
                                                                              "measure": undefined,
                                                                              "mvEnabled": false,
                                                                              "name": "field3",
                                                                              "PHI": undefined,
                                                                              "primaryKey": undefined,
                                                                              "propertyId": undefined,
                                                                              "propertyURI": undefined,
                                                                              "propertyValidators": Immutable.List [],
                                                                              "rangeValidators": Immutable.List [],
                                                                              "rangeURI": "xsd:dateTime",
                                                                              "regexValidators": Immutable.List [],
                                                                              "recommendedVariable": false,
                                                                              "required": false,
                                                                              "scale": undefined,
                                                                              "URL": undefined,
                                                                              "shownInDetailsView": true,
                                                                              "shownInInsertView": true,
                                                                              "shownInUpdateView": true,
                                                                              "visible": true,
                                                                              "dataType": Immutable.Record {
                                                                                "conceptURI": undefined,
                                                                                "display": "Date Time",
                                                                                "name": "dateTime",
                                                                                "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                                                                                "alternateRangeURI": "xsd:dateTime",
                                                                                "shortDisplay": undefined,
                                                                                "lookupSchema": undefined,
                                                                                "lookupQuery": undefined,
                                                                              },
                                                                              "lookupQueryValue": undefined,
                                                                              "lookupType": Immutable.Record {
                                                                                "conceptURI": undefined,
                                                                                "display": "Lookup",
                                                                                "name": "lookup",
                                                                                "rangeURI": "xsd:dateTime",
                                                                                "alternateRangeURI": undefined,
                                                                                "shortDisplay": undefined,
                                                                                "lookupSchema": undefined,
                                                                                "lookupQuery": undefined,
                                                                              },
                                                                              "original": Object {
                                                                                "conceptURI": undefined,
                                                                                "dataType": Immutable.Record {
                                                                                  "conceptURI": undefined,
                                                                                  "display": "Date Time",
                                                                                  "name": "dateTime",
                                                                                  "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                                                                                  "alternateRangeURI": "xsd:dateTime",
                                                                                  "shortDisplay": undefined,
                                                                                  "lookupSchema": undefined,
                                                                                  "lookupQuery": undefined,
                                                                                },
                                                                                "rangeURI": undefined,
                                                                              },
                                                                              "updatedField": false,
                                                                              "isPrimaryKey": false,
                                                                              "lockType": "NotLocked",
                                                                              "wrappedColumnName": undefined,
                                                                            }
                                                                          }
                                                                          hideConditionalFormatting={false}
                                                                          index={2}
                                                                          onChange={[Function]}
                                                                          showingModal={[Function]}
                                                                          successBsStyle="success"
                                                                        >
                                                                          <div>
                                                                            <Row
                                                                              bsClass="row"
                                                                              className="domain-row-expanded"
                                                                              componentClass="div"
                                                                            >
                                                                              <div
                                                                                className="domain-row-expanded row"
                                                                              >
                                                                                <Col
                                                                                  bsClass="col"
                                                                                  componentClass="div"
                                                                                  xs={12}
                                                                                >
                                                                                  <div
                                                                                    className="col-xs-12"
                                                                                  >
                                                                                    <div
                                                                                      className="domain-field-section-heading domain-field-section-hdr"
                                                                                    >
                                                                                      Conditional Formatting and Validation Options
                                                                                    </div>
                                                                                  </div>
                                                                                </Col>
                                                                              </div>
                                                                            </Row>
                                                                            <Row
                                                                              bsClass="row"
                                                                              className="domain-row-expanded"
                                                                              componentClass="div"
                                                                            >
                                                                              <div
                                                                                className="domain-row-expanded row"
                                                                              >
                                                                                <Col
                                                                                  bsClass="col"
                                                                                  componentClass="div"
                                                                                  xs={12}
                                                                                >
                                                                                  <div
                                                                                    className="col-xs-12"
                                                                                  >
                                                                                    <div
                                                                                      className="domain-validation-group"
                                                                                    >
                                                                                      <div
                                                                                        className="domain-field-label domain-no-wrap"
                                                                                      >
                                                                                        Create Conditional Format Criteria
                                                                                        <LabelHelpTip
                                                                                          body={[Function]}
                                                                                          customStyle={Object {}}
                                                                                          id="tooltip"
                                                                                          size="1x"
                                                                                          title="Add Conditional Format"
                                                                                        >
                                                                                          <span
                                                                                            className="label-help-target"
                                                                                            onMouseOut={[Function]}
                                                                                            onMouseOver={[Function]}
                                                                                          >
                                                                                            <FontAwesomeIcon
                                                                                              border={false}
                                                                                              className="label-help-icon"
                                                                                              fixedWidth={false}
                                                                                              flip={null}
                                                                                              icon={
                                                                                                Object {
                                                                                                  "icon": Array [
                                                                                                    512,
                                                                                                    512,
                                                                                                    Array [],
                                                                                                    "f059",
                                                                                                    "M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z",
                                                                                                  ],
                                                                                                  "iconName": "question-circle",
                                                                                                  "prefix": "fas",
                                                                                                }
                                                                                              }
                                                                                              inverse={false}
                                                                                              listItem={false}
                                                                                              mask={null}
                                                                                              pull={null}
                                                                                              pulse={false}
                                                                                              rotation={null}
                                                                                              size="1x"
                                                                                              spin={false}
                                                                                              style={Object {}}
                                                                                              symbol={false}
                                                                                              title=""
                                                                                              transform={null}
                                                                                            >
                                                                                              <svg
                                                                                                aria-hidden="true"
                                                                                                className="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                                                                                                data-icon="question-circle"
                                                                                                data-prefix="fas"
                                                                                                focusable="false"
                                                                                                role="img"
                                                                                                style={Object {}}
                                                                                                viewBox="0 0 512 512"
                                                                                                xmlns="http://www.w3.org/2000/svg"
                                                                                              >
                                                                                                <path
                                                                                                  d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                                                                  fill="currentColor"
                                                                                                  style={Object {}}
                                                                                                />
                                                                                              </svg>
                                                                                            </FontAwesomeIcon>
                                                                                            <Overlay
                                                                                              animation={[Function]}
                                                                                              placement="right"
                                                                                              rootClose={false}
                                                                                              show={false}
                                                                                              target={
                                                                                                <span
                                                                                                  class="label-help-target"
                                                                                                >
                                                                                                  <svg
                                                                                                    aria-hidden="true"
                                                                                                    class="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                                                                                                    data-icon="question-circle"
                                                                                                    data-prefix="fas"
                                                                                                    focusable="false"
                                                                                                    role="img"
                                                                                                    viewBox="0 0 512 512"
                                                                                                    xmlns="http://www.w3.org/2000/svg"
                                                                                                  >
                                                                                                    <path
                                                                                                      d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                                                                      fill="currentColor"
                                                                                                    />
                                                                                                  </svg>
                                                                                                </span>
                                                                                              }
                                                                                            >
                                                                                              <Overlay
                                                                                                placement="right"
                                                                                                rootClose={false}
                                                                                                show={false}
                                                                                                target={
                                                                                                  <span
                                                                                                    class="label-help-target"
                                                                                                  >
                                                                                                    <svg
                                                                                                      aria-hidden="true"
                                                                                                      class="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                                                                                                      data-icon="question-circle"
                                                                                                      data-prefix="fas"
                                                                                                      focusable="false"
                                                                                                      role="img"
                                                                                                      viewBox="0 0 512 512"
                                                                                                      xmlns="http://www.w3.org/2000/svg"
                                                                                                    >
                                                                                                      <path
                                                                                                        d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                                                                        fill="currentColor"
                                                                                                      />
                                                                                                    </svg>
                                                                                                  </span>
                                                                                                }
                                                                                                transition={[Function]}
                                                                                              />
                                                                                            </Overlay>
                                                                                          </span>
                                                                                        </LabelHelpTip>
                                                                                      </div>
                                                                                      <div>
                                                                                        <Button
                                                                                          active={false}
                                                                                          block={false}
                                                                                          bsClass="btn"
                                                                                          bsStyle="default"
                                                                                          className="domain-validation-button"
                                                                                          disabled={false}
                                                                                          id="domainpropertiesrow-conditionalFormat-1-2"
                                                                                          name="domainpropertiesrow-conditionalFormat"
                                                                                          onClick={[Function]}
                                                                                        >
                                                                                          <button
                                                                                            className="domain-validation-button btn btn-default"
                                                                                            disabled={false}
                                                                                            id="domainpropertiesrow-conditionalFormat-1-2"
                                                                                            name="domainpropertiesrow-conditionalFormat"
                                                                                            onClick={[Function]}
                                                                                            type="button"
                                                                                          >
                                                                                            Add Format
                                                                                          </button>
                                                                                        </Button>
                                                                                        <span
                                                                                          className="domain-text-label"
                                                                                        >
                                                                                          None Set
                                                                                        </span>
                                                                                      </div>
                                                                                    </div>
                                                                                    <div
                                                                                      className=""
                                                                                    >
                                                                                      <div
                                                                                        className="domain-field-label domain-no-wrap"
                                                                                      >
                                                                                        Create Range Validator
                                                                                        <LabelHelpTip
                                                                                          body={[Function]}
                                                                                          customStyle={Object {}}
                                                                                          id="tooltip"
                                                                                          size="1x"
                                                                                          title="Add Range Validator"
                                                                                        >
                                                                                          <span
                                                                                            className="label-help-target"
                                                                                            onMouseOut={[Function]}
                                                                                            onMouseOver={[Function]}
                                                                                          >
                                                                                            <FontAwesomeIcon
                                                                                              border={false}
                                                                                              className="label-help-icon"
                                                                                              fixedWidth={false}
                                                                                              flip={null}
                                                                                              icon={
                                                                                                Object {
                                                                                                  "icon": Array [
                                                                                                    512,
                                                                                                    512,
                                                                                                    Array [],
                                                                                                    "f059",
                                                                                                    "M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z",
                                                                                                  ],
                                                                                                  "iconName": "question-circle",
                                                                                                  "prefix": "fas",
                                                                                                }
                                                                                              }
                                                                                              inverse={false}
                                                                                              listItem={false}
                                                                                              mask={null}
                                                                                              pull={null}
                                                                                              pulse={false}
                                                                                              rotation={null}
                                                                                              size="1x"
                                                                                              spin={false}
                                                                                              style={Object {}}
                                                                                              symbol={false}
                                                                                              title=""
                                                                                              transform={null}
                                                                                            >
                                                                                              <svg
                                                                                                aria-hidden="true"
                                                                                                className="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                                                                                                data-icon="question-circle"
                                                                                                data-prefix="fas"
                                                                                                focusable="false"
                                                                                                role="img"
                                                                                                style={Object {}}
                                                                                                viewBox="0 0 512 512"
                                                                                                xmlns="http://www.w3.org/2000/svg"
                                                                                              >
                                                                                                <path
                                                                                                  d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                                                                  fill="currentColor"
                                                                                                  style={Object {}}
                                                                                                />
                                                                                              </svg>
                                                                                            </FontAwesomeIcon>
                                                                                            <Overlay
                                                                                              animation={[Function]}
                                                                                              placement="right"
                                                                                              rootClose={false}
                                                                                              show={false}
                                                                                              target={
                                                                                                <span
                                                                                                  class="label-help-target"
                                                                                                >
                                                                                                  <svg
                                                                                                    aria-hidden="true"
                                                                                                    class="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                                                                                                    data-icon="question-circle"
                                                                                                    data-prefix="fas"
                                                                                                    focusable="false"
                                                                                                    role="img"
                                                                                                    viewBox="0 0 512 512"
                                                                                                    xmlns="http://www.w3.org/2000/svg"
                                                                                                  >
                                                                                                    <path
                                                                                                      d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                                                                      fill="currentColor"
                                                                                                    />
                                                                                                  </svg>
                                                                                                </span>
                                                                                              }
                                                                                            >
                                                                                              <Overlay
                                                                                                placement="right"
                                                                                                rootClose={false}
                                                                                                show={false}
                                                                                                target={
                                                                                                  <span
                                                                                                    class="label-help-target"
                                                                                                  >
                                                                                                    <svg
                                                                                                      aria-hidden="true"
                                                                                                      class="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                                                                                                      data-icon="question-circle"
                                                                                                      data-prefix="fas"
                                                                                                      focusable="false"
                                                                                                      role="img"
                                                                                                      viewBox="0 0 512 512"
                                                                                                      xmlns="http://www.w3.org/2000/svg"
                                                                                                    >
                                                                                                      <path
                                                                                                        d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                                                                        fill="currentColor"
                                                                                                      />
                                                                                                    </svg>
                                                                                                  </span>
                                                                                                }
                                                                                                transition={[Function]}
                                                                                              />
                                                                                            </Overlay>
                                                                                          </span>
                                                                                        </LabelHelpTip>
                                                                                      </div>
                                                                                      <div>
                                                                                        <Button
                                                                                          active={false}
                                                                                          block={false}
                                                                                          bsClass="btn"
                                                                                          bsStyle="default"
                                                                                          className="domain-validation-button"
                                                                                          disabled={false}
                                                                                          id="domainpropertiesrow-rangeValidator-1-2"
                                                                                          name="domainpropertiesrow-rangeValidator"
                                                                                          onClick={[Function]}
                                                                                        >
                                                                                          <button
                                                                                            className="domain-validation-button btn btn-default"
                                                                                            disabled={false}
                                                                                            id="domainpropertiesrow-rangeValidator-1-2"
                                                                                            name="domainpropertiesrow-rangeValidator"
                                                                                            onClick={[Function]}
                                                                                            type="button"
                                                                                          >
                                                                                            Add Range
                                                                                          </button>
                                                                                        </Button>
                                                                                        <span
                                                                                          className="domain-text-label"
                                                                                        >
                                                                                          None Set
                                                                                        </span>
                                                                                      </div>
                                                                                    </div>
                                                                                  </div>
                                                                                </Col>
                                                                              </div>
                                                                            </Row>
                                                                          </div>
                                                                        </ConditionalFormattingAndValidation>
                                                                      </div>
                                                                    </Col>
                                                                  </div>
                                                                </div>
                                                              </DomainRowExpandedOptions>
                                                            </div>
                                                          </Transition>
                                                        </Collapse>
                                                      </div>
                                                    </Draggable>
                                                  </ConnectFunction>
                                                </DomainRow>
                                                <AnimateInOut
                                                  on={null}
                                                  shouldAnimate={true}
                                                />
                                              </form>
                                            </Form>
                                          </div>
                                        </Droppable>
                                      </ConnectFunction>
                                    </div>
                                  </Container>
                                </Provider>
                              </App>
                            </ErrorBoundary>
                          </DragDropContext>
                          <Row
                            bsClass="row"
                            className="domain-add-field-row"
                            componentClass="div"
                          >
                            <div
                              className="domain-add-field-row row"
                            >
                              <Col
                                bsClass="col"
                                componentClass="div"
                                xs={12}
                              >
                                <div
                                  className="col-xs-12"
                                >
                                  <AddEntityButton
                                    buttonClass="domain-form-add-btn"
                                    containerClass="form-group"
                                    entity="Field"
                                    helperTitle="More Info"
                                    onClick={[Function]}
                                  >
                                    <div
                                      className="form-group"
                                    >
                                      <div
                                        className="domain-form-add-btn"
                                      >
                                        <span
                                          className="container--action-button btn btn-default"
                                          onClick={[Function]}
                                        >
                                          <i
                                            className="fa fa-plus-circle container--addition-icon"
                                          />
                                           Add 
                                          Field
                                        </span>
                                      </div>
                                    </div>
                                  </AddEntityButton>
                                </div>
                              </Col>
                            </div>
                          </Row>
                        </div>
                      </div>
                    </Transition>
                  </Collapse>
                </PanelCollapse>
              </PanelBody>
            </div>
          </Panel>
        </Uncontrolled(Panel)>
      </DomainFormImpl>
    </LookupProvider>
  </DomainForm>
  <div
    className="domain-form-panel domain-designer-buttons"
  >
    <Button
      active={false}
      block={false}
      bsClass="btn"
      bsStyle="default"
      disabled={false}
      onClick={[Function]}
    >
      <button
        className="btn btn-default"
        disabled={false}
        onClick={[Function]}
        type="button"
      >
        Cancel
      </button>
    </Button>
    <Button
      active={false}
      block={false}
      bsClass="btn"
      bsStyle="success"
      className="pull-right"
      disabled={false}
      onClick={[Function]}
    >
      <button
        className="pull-right btn btn-success"
        disabled={false}
        onClick={[Function]}
        type="button"
      >
        Save
      </button>
    </Button>
  </div>
</AssayDesignerPanels>
`;
