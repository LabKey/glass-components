// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<SampleEventListing/> Filter by event type and date 1`] = `
<ForwardRef>
  <PanelBody
    bsClass="panel"
    collapsible={false}
  >
    <div>
      <Row
        bsClass="row"
        componentClass="div"
      >
        <Col
          bsClass="col"
          className="font-large timeline-title"
          componentClass="div"
          xs={7}
        >
          Event Timeline for S-20200404-1
        </Col>
        <Col
          bsClass="col"
          componentClass="div"
          xs={5}
        >
          <span
            className="pull-right"
          >
            <DropdownButton
              className="button-right-spacing"
              id="job-tasks-comments-sort-btn"
              title="Show Oldest first"
            >
              <MenuItem
                active={true}
                bsClass="dropdown"
                disabled={false}
                divider={false}
                header={false}
                key="oldest"
                onClick={[Function]}
              >
                Oldest first
              </MenuItem>
              <MenuItem
                active={false}
                bsClass="dropdown"
                disabled={false}
                divider={false}
                header={false}
                key="recent"
                onClick={[Function]}
              >
                Recent first
              </MenuItem>
            </DropdownButton>
            <Tip
              caption="Export"
              trigger={
                [
                  "focus",
                  "hover",
                ]
              }
            >
              <Button
                active={false}
                block={false}
                bsClass="btn"
                bsStyle="default"
                disabled={false}
                onClick={[Function]}
              >
                <i
                  className="fa fa-download"
                />
              </Button>
            </Tip>
          </span>
        </Col>
      </Row>
      <hr />
    </div>
    <div>
      <ExpandableFilterToggle
        filterExpanded={true}
        hasFilter={true}
        panelCls="show-hide-filter-toggle"
        resetFilter={[Function]}
        toggleFilterPanel={[Function]}
      />
      <Row
        bsClass="row"
        className="top-spacing"
        componentClass="div"
      >
        <Col
          bsClass="col"
          componentClass="div"
          xs={3}
        >
          <div
            className="list__bold-text"
          >
            Filter Events: 
          </div>
          <Checkbox
            bsClass="checkbox"
            checked={false}
            disabled={false}
            inline={false}
            name="includeSampleEvent"
            onChange={[Function]}
            title=""
          >
            Sample Events
          </Checkbox>
          <Checkbox
            bsClass="checkbox"
            checked={false}
            disabled={false}
            inline={false}
            name="includeAssayEvent"
            onChange={[Function]}
            title=""
          >
            Assay Events
          </Checkbox>
          <Checkbox
            bsClass="checkbox"
            checked={true}
            disabled={false}
            inline={false}
            name="includeJobEvent"
            onChange={[Function]}
            title=""
          >
            Job Events
          </Checkbox>
          <Checkbox
            bsClass="checkbox"
            checked={false}
            disabled={false}
            inline={false}
            name="includeStorageEvent"
            onChange={[Function]}
            title=""
          >
            Storage Events
          </Checkbox>
        </Col>
        <Col
          bsClass="col"
          componentClass="div"
          xs={6}
        >
          <div
            className="list__bold-text"
          >
            Filter By: 
          </div>
          <Row
            bsClass="row"
            className="margin-top"
            componentClass="div"
          >
            <Col
              bsClass="col"
              className="bottom-spacing-less"
              componentClass="div"
              xs={3}
            >
              User:
               
            </Col>
            <Col
              bsClass="col"
              componentClass="div"
              xs={9}
            >
              <UserSelectInput
                containerClass="form-group row"
                inputClass="timeline-filter-user-input"
                key="filterCreatedBy"
                name="filterCreatedBy"
                notifyList={false}
                onChange={[Function]}
                permissions="org.labkey.api.security.permissions.ReadPermission"
                placeholder="Select User"
                useEmail={false}
              />
            </Col>
          </Row>
          <Row
            bsClass="row"
            componentClass="div"
          >
            <Col
              bsClass="col"
              className="bottom-spacing-less"
              componentClass="div"
              xs={3}
            >
              Date:
               
            </Col>
            <Col
              bsClass="col"
              componentClass="div"
              xs={4}
            >
              <r
                allowSameDay={false}
                autoComplete="off"
                className="form-control"
                customTimeInput={null}
                dateFormat="yyyy-MM-dd"
                dateFormatCalendar="LLLL yyyy"
                disabled={false}
                disabledKeyboardNavigation={false}
                dropdownMode="scroll"
                enableTabLoop={true}
                excludeScrollbar={true}
                focusSelectedMonth={false}
                isClearable={true}
                monthsShown={1}
                name="startDate"
                nextMonthAriaLabel="Next Month"
                nextMonthButtonLabel="Next Month"
                nextYearAriaLabel="Next Year"
                nextYearButtonLabel="Next Year"
                onBlur={[Function]}
                onCalendarClose={[Function]}
                onCalendarOpen={[Function]}
                onChange={[Function]}
                onClickOutside={[Function]}
                onFocus={[Function]}
                onInputClick={[Function]}
                onInputError={[Function]}
                onKeyDown={[Function]}
                onMonthChange={[Function]}
                onSelect={[Function]}
                onYearChange={[Function]}
                placeholderText="From"
                preventOpenOnFocus={false}
                previousMonthAriaLabel="Previous Month"
                previousMonthButtonLabel="Previous Month"
                previousYearAriaLabel="Previous Year"
                previousYearButtonLabel="Previous Year"
                readOnly={false}
                renderDayContents={[Function]}
                selected={2020-04-09T00:00:00.000Z}
                selectsDisabledDaysInRange={false}
                selectsStart={true}
                shouldCloseOnSelect={true}
                showFourColumnMonthYearPicker={false}
                showFullMonthYearPicker={false}
                showMonthYearPicker={false}
                showPopperArrow={true}
                showPreviousMonths={false}
                showQuarterYearPicker={false}
                showTimeInput={false}
                showTimeSelect={false}
                showTwoColumnMonthYearPicker={false}
                showYearPicker={false}
                startDate={2020-04-09T00:00:00.000Z}
                strictParsing={false}
                timeCaption="Time"
                timeInputLabel="Time"
                timeIntervals={30}
                withPortal={false}
                wrapperClassName="row"
                yearItemNumber={12}
              />
            </Col>
            <Col
              bsClass="col"
              componentClass="div"
              xs={5}
            >
              <Row
                bsClass="row"
                componentClass="div"
              >
                <Col
                  bsClass="col"
                  componentClass="div"
                  xs={3}
                />
                <Col
                  bsClass="col"
                  componentClass="div"
                  xs={9}
                >
                  <r
                    allowSameDay={false}
                    autoComplete="off"
                    className="form-control"
                    customTimeInput={null}
                    dateFormat="yyyy-MM-dd"
                    dateFormatCalendar="LLLL yyyy"
                    disabled={false}
                    disabledKeyboardNavigation={false}
                    dropdownMode="scroll"
                    enableTabLoop={true}
                    excludeScrollbar={true}
                    focusSelectedMonth={false}
                    isClearable={true}
                    minDate={2020-04-09T00:00:00.000Z}
                    monthsShown={1}
                    name="endDate"
                    nextMonthAriaLabel="Next Month"
                    nextMonthButtonLabel="Next Month"
                    nextYearAriaLabel="Next Year"
                    nextYearButtonLabel="Next Year"
                    onBlur={[Function]}
                    onCalendarClose={[Function]}
                    onCalendarOpen={[Function]}
                    onChange={[Function]}
                    onClickOutside={[Function]}
                    onFocus={[Function]}
                    onInputClick={[Function]}
                    onInputError={[Function]}
                    onKeyDown={[Function]}
                    onMonthChange={[Function]}
                    onSelect={[Function]}
                    onYearChange={[Function]}
                    placeholderText="To"
                    preventOpenOnFocus={false}
                    previousMonthAriaLabel="Previous Month"
                    previousMonthButtonLabel="Previous Month"
                    previousYearAriaLabel="Previous Year"
                    previousYearButtonLabel="Previous Year"
                    readOnly={false}
                    renderDayContents={[Function]}
                    selectsDisabledDaysInRange={false}
                    selectsEnd={true}
                    shouldCloseOnSelect={true}
                    showFourColumnMonthYearPicker={false}
                    showFullMonthYearPicker={false}
                    showMonthYearPicker={false}
                    showPopperArrow={true}
                    showPreviousMonths={false}
                    showQuarterYearPicker={false}
                    showTimeInput={false}
                    showTimeSelect={false}
                    showTwoColumnMonthYearPicker={false}
                    showYearPicker={false}
                    startDate={2020-04-09T00:00:00.000Z}
                    strictParsing={false}
                    timeCaption="Time"
                    timeInputLabel="Time"
                    timeIntervals={30}
                    withPortal={false}
                    wrapperClassName="row"
                    yearItemNumber={12}
                  />
                </Col>
              </Row>
            </Col>
          </Row>
        </Col>
        <Col
          bsClass="col"
          componentClass="div"
          xs={3}
        >
          <span
            className="pull-right timeline-filter-btn-group"
          >
            <Button
              active={false}
              block={false}
              bsClass="btn"
              bsStyle="default"
              disabled={false}
              onClick={[Function]}
            >
              Clear
            </Button>
            <span
              className="timeline-filter-btn-spacer"
            />
            <Button
              active={false}
              block={false}
              bsClass="btn"
              bsStyle="primary"
              className="timeline-filter-apply-btn"
              disabled={false}
              onClick={[Function]}
            >
              Apply
            </Button>
          </span>
        </Col>
      </Row>
      <hr />
    </div>
    <Row
      bsClass="row"
      componentClass="div"
    >
      <Col
        bsClass="col"
        className="timeline-container"
        componentClass="div"
        lg={12}
      >
        <TimelineView
          events={
            [
              Immutable.Record {
                "rowId": 546,
                "eventType": "workflow",
                "subEventType": undefined,
                "summary": "Added to job",
                "user": Immutable.Map {
                  "value": 1038,
                  "urlType": "user",
                  "displayValue": "Test Lab User",
                },
                "eventUserId": 1038,
                "timestamp": Immutable.Map {
                  "value": "2020-04-09 18:57:36.941",
                  "formattedValue": "2020-04-09 18:57",
                },
                "eventTimestamp": 2020-04-09T18:57:36.941Z,
                "entity": Immutable.Map {
                  "value": 688,
                  "urlType": "workflow",
                  "displayValue": "job-3",
                },
                "entitySeparator": undefined,
                "metadata": Immutable.List [
                  Immutable.Map {
                    "field": "Job Name",
                    "value": Immutable.Map {
                      "value": 688,
                      "urlType": "workflow",
                      "displayValue": "job-3",
                    },
                  },
                  Immutable.Map {
                    "field": "Job Owner",
                    "value": Immutable.Map {
                      "value": 1038,
                      "urlType": "user",
                      "displayValue": "Test Lab User",
                    },
                  },
                  Immutable.Map {
                    "field": "Job Status",
                    "value": "In Progress",
                  },
                ],
                "oldData": undefined,
                "newData": undefined,
                "userComment": undefined,
              },
              Immutable.Record {
                "rowId": 547,
                "eventType": "workflow",
                "subEventType": undefined,
                "summary": "Removed from job",
                "user": Immutable.Map {
                  "value": 1038,
                  "urlType": "user",
                  "displayValue": "Test Lab User",
                },
                "eventUserId": 1038,
                "timestamp": Immutable.Map {
                  "value": "2020-04-09 19:57:36.941",
                  "formattedValue": "2020-04-09 19:57",
                },
                "eventTimestamp": 2020-04-09T19:57:36.941Z,
                "entity": Immutable.Map {
                  "value": 688,
                  "urlType": "workflow",
                  "displayValue": "job-3",
                },
                "entitySeparator": undefined,
                "metadata": Immutable.List [
                  Immutable.Map {
                    "field": "Job Name",
                    "value": Immutable.Map {
                      "value": 688,
                      "urlType": "workflow",
                      "displayValue": "job-3",
                    },
                  },
                  Immutable.Map {
                    "field": "Job Owner",
                    "value": Immutable.Map {
                      "value": 1038,
                      "urlType": "user",
                      "displayValue": "Test Lab User",
                    },
                  },
                  Immutable.Map {
                    "field": "Job Status",
                    "value": "In Progress",
                  },
                ],
                "oldData": undefined,
                "newData": undefined,
                "userComment": undefined,
              },
              Immutable.Record {
                "rowId": 548,
                "eventType": "workflow",
                "subEventType": undefined,
                "summary": "Completed job",
                "user": Immutable.Map {
                  "value": 1005,
                  "urlType": "user",
                  "displayValue": "Vader",
                },
                "eventUserId": 1005,
                "timestamp": Immutable.Map {
                  "value": "2020-04-09 20:57:36.941",
                  "formattedValue": "2020-04-09 20:57",
                },
                "eventTimestamp": 2020-04-09T20:57:36.941Z,
                "entity": Immutable.Map {
                  "value": 687,
                  "urlType": "workflow",
                  "displayValue": "job-1",
                },
                "entitySeparator": undefined,
                "metadata": Immutable.List [
                  Immutable.Map {
                    "field": "Job Name",
                    "value": Immutable.Map {
                      "value": 687,
                      "urlType": "workflow",
                      "displayValue": "job-1",
                    },
                  },
                  Immutable.Map {
                    "field": "Job Owner",
                    "value": Immutable.Map {
                      "value": 1005,
                      "urlType": "user",
                      "displayValue": "Vader",
                    },
                  },
                  Immutable.Map {
                    "field": "Job Status",
                    "value": "Completed",
                  },
                ],
                "oldData": undefined,
                "newData": undefined,
                "userComment": undefined,
              },
              Immutable.Record {
                "rowId": 550,
                "eventType": "workflow",
                "subEventType": undefined,
                "summary": "Added to job",
                "user": Immutable.Map {
                  "value": 1038,
                  "urlType": "user",
                  "displayValue": "Test Lab User",
                },
                "eventUserId": 1038,
                "timestamp": Immutable.Map {
                  "value": "2020-04-10 02:57:36.941",
                  "formattedValue": "2020-04-10 02:57",
                },
                "eventTimestamp": 2020-04-10T02:57:36.941Z,
                "entity": Immutable.Map {
                  "value": 689,
                  "urlType": "workflow",
                  "displayValue": "job-4",
                },
                "entitySeparator": undefined,
                "metadata": Immutable.List [
                  Immutable.Map {
                    "field": "Job Name",
                    "value": Immutable.Map {
                      "value": 689,
                      "urlType": "workflow",
                      "displayValue": "job-4",
                    },
                  },
                  Immutable.Map {
                    "field": "Job Owner",
                    "value": Immutable.Map {
                      "value": 1038,
                      "urlType": "user",
                      "displayValue": "Test Lab User",
                    },
                  },
                  Immutable.Map {
                    "field": "Job Status",
                    "value": "In Progress",
                  },
                ],
                "oldData": undefined,
                "newData": undefined,
                "userComment": undefined,
              },
            ]
          }
          onEventSelection={[MockFunction]}
          selectedEntityConnectionInfo={null}
          showRecentFirst={false}
        />
      </Col>
    </Row>
  </PanelBody>
</ForwardRef>
`;

exports[`<SampleEventListing/> Sort by latest 1`] = `
<ForwardRef>
  <PanelBody
    bsClass="panel"
    collapsible={false}
  >
    <div>
      <Row
        bsClass="row"
        componentClass="div"
      >
        <Col
          bsClass="col"
          className="font-large timeline-title"
          componentClass="div"
          xs={7}
        >
          Event Timeline for S-20200404-1
        </Col>
        <Col
          bsClass="col"
          componentClass="div"
          xs={5}
        >
          <span
            className="pull-right"
          >
            <DropdownButton
              className="button-right-spacing"
              id="job-tasks-comments-sort-btn"
              title="Show Recent first"
            >
              <MenuItem
                active={false}
                bsClass="dropdown"
                disabled={false}
                divider={false}
                header={false}
                key="oldest"
                onClick={[Function]}
              >
                Oldest first
              </MenuItem>
              <MenuItem
                active={true}
                bsClass="dropdown"
                disabled={false}
                divider={false}
                header={false}
                key="recent"
                onClick={[Function]}
              >
                Recent first
              </MenuItem>
            </DropdownButton>
            <Tip
              caption="Export"
              trigger={
                [
                  "focus",
                  "hover",
                ]
              }
            >
              <Button
                active={false}
                block={false}
                bsClass="btn"
                bsStyle="default"
                disabled={false}
                onClick={[Function]}
              >
                <i
                  className="fa fa-download"
                />
              </Button>
            </Tip>
          </span>
        </Col>
      </Row>
      <hr />
    </div>
    <div>
      <ExpandableFilterToggle
        filterExpanded={false}
        hasFilter={false}
        panelCls="show-hide-filter-toggle"
        resetFilter={[Function]}
        toggleFilterPanel={[Function]}
      />
      <hr />
    </div>
    <Row
      bsClass="row"
      componentClass="div"
    >
      <Col
        bsClass="col"
        className="timeline-container"
        componentClass="div"
        lg={12}
      >
        <TimelineView
          events={
            [
              Immutable.Record {
                "rowId": 550,
                "eventType": "workflow",
                "subEventType": undefined,
                "summary": "Added to job",
                "user": Immutable.Map {
                  "value": 1038,
                  "urlType": "user",
                  "displayValue": "Test Lab User",
                },
                "eventUserId": 1038,
                "timestamp": Immutable.Map {
                  "value": "2020-04-10 02:57:36.941",
                  "formattedValue": "2020-04-10 02:57",
                },
                "eventTimestamp": 2020-04-10T02:57:36.941Z,
                "entity": Immutable.Map {
                  "value": 689,
                  "urlType": "workflow",
                  "displayValue": "job-4",
                },
                "entitySeparator": undefined,
                "metadata": Immutable.List [
                  Immutable.Map {
                    "field": "Job Name",
                    "value": Immutable.Map {
                      "value": 689,
                      "urlType": "workflow",
                      "displayValue": "job-4",
                    },
                  },
                  Immutable.Map {
                    "field": "Job Owner",
                    "value": Immutable.Map {
                      "value": 1038,
                      "urlType": "user",
                      "displayValue": "Test Lab User",
                    },
                  },
                  Immutable.Map {
                    "field": "Job Status",
                    "value": "In Progress",
                  },
                ],
                "oldData": undefined,
                "newData": undefined,
                "userComment": undefined,
              },
              Immutable.Record {
                "rowId": 1549,
                "eventType": "assays",
                "subEventType": undefined,
                "summary": "Assay Data Re-Import Run",
                "user": Immutable.Map {
                  "value": 1005,
                  "urlType": "user",
                  "displayValue": "Vader",
                },
                "eventUserId": 1005,
                "timestamp": Immutable.Map {
                  "value": "2020-04-09 23:57:36.941",
                  "formattedValue": "2020-04-09 23:57",
                },
                "eventTimestamp": 2020-04-09T23:57:36.941Z,
                "entity": Immutable.Map {
                  "value": Immutable.List [
                    "xlsx assay",
                    233,
                  ],
                  "urlType": "assayRun",
                  "displayValue": "XLSX Assay",
                },
                "entitySeparator": undefined,
                "metadata": Immutable.List [
                  Immutable.Map {
                    "field": "Assay",
                    "value": Immutable.Map {
                      "value": "xlsx assay",
                      "urlType": "assays",
                      "displayValue": "XLSX Assay",
                    },
                  },
                  Immutable.Map {
                    "field": "Assay ID",
                    "value": Immutable.Map {
                      "value": Immutable.List [
                        "xlsx assay",
                        233,
                      ],
                      "urlType": "assayRun",
                      "displayValue": "XLSX Assay_2019-10-16_11-54-56",
                    },
                  },
                  Immutable.Map {
                    "field": "Completed By",
                    "value": Immutable.Map {
                      "value": 1005,
                      "urlType": "user",
                      "displayValue": "Vader",
                    },
                  },
                  Immutable.Map {
                    "field": "Date",
                    "value": Immutable.Map {
                      "value": "2020-04-09 23:57:36.941",
                      "formattedValue": "2020-04-09 23:57",
                    },
                  },
                ],
                "oldData": undefined,
                "newData": undefined,
                "userComment": undefined,
              },
              Immutable.Record {
                "rowId": 548,
                "eventType": "workflow",
                "subEventType": undefined,
                "summary": "Completed job",
                "user": Immutable.Map {
                  "value": 1005,
                  "urlType": "user",
                  "displayValue": "Vader",
                },
                "eventUserId": 1005,
                "timestamp": Immutable.Map {
                  "value": "2020-04-09 20:57:36.941",
                  "formattedValue": "2020-04-09 20:57",
                },
                "eventTimestamp": 2020-04-09T20:57:36.941Z,
                "entity": Immutable.Map {
                  "value": 687,
                  "urlType": "workflow",
                  "displayValue": "job-1",
                },
                "entitySeparator": undefined,
                "metadata": Immutable.List [
                  Immutable.Map {
                    "field": "Job Name",
                    "value": Immutable.Map {
                      "value": 687,
                      "urlType": "workflow",
                      "displayValue": "job-1",
                    },
                  },
                  Immutable.Map {
                    "field": "Job Owner",
                    "value": Immutable.Map {
                      "value": 1005,
                      "urlType": "user",
                      "displayValue": "Vader",
                    },
                  },
                  Immutable.Map {
                    "field": "Job Status",
                    "value": "Completed",
                  },
                ],
                "oldData": undefined,
                "newData": undefined,
                "userComment": undefined,
              },
              Immutable.Record {
                "rowId": 547,
                "eventType": "workflow",
                "subEventType": undefined,
                "summary": "Removed from job",
                "user": Immutable.Map {
                  "value": 1038,
                  "urlType": "user",
                  "displayValue": "Test Lab User",
                },
                "eventUserId": 1038,
                "timestamp": Immutable.Map {
                  "value": "2020-04-09 19:57:36.941",
                  "formattedValue": "2020-04-09 19:57",
                },
                "eventTimestamp": 2020-04-09T19:57:36.941Z,
                "entity": Immutable.Map {
                  "value": 688,
                  "urlType": "workflow",
                  "displayValue": "job-3",
                },
                "entitySeparator": undefined,
                "metadata": Immutable.List [
                  Immutable.Map {
                    "field": "Job Name",
                    "value": Immutable.Map {
                      "value": 688,
                      "urlType": "workflow",
                      "displayValue": "job-3",
                    },
                  },
                  Immutable.Map {
                    "field": "Job Owner",
                    "value": Immutable.Map {
                      "value": 1038,
                      "urlType": "user",
                      "displayValue": "Test Lab User",
                    },
                  },
                  Immutable.Map {
                    "field": "Job Status",
                    "value": "In Progress",
                  },
                ],
                "oldData": undefined,
                "newData": undefined,
                "userComment": undefined,
              },
              Immutable.Record {
                "rowId": 546,
                "eventType": "workflow",
                "subEventType": undefined,
                "summary": "Added to job",
                "user": Immutable.Map {
                  "value": 1038,
                  "urlType": "user",
                  "displayValue": "Test Lab User",
                },
                "eventUserId": 1038,
                "timestamp": Immutable.Map {
                  "value": "2020-04-09 18:57:36.941",
                  "formattedValue": "2020-04-09 18:57",
                },
                "eventTimestamp": 2020-04-09T18:57:36.941Z,
                "entity": Immutable.Map {
                  "value": 688,
                  "urlType": "workflow",
                  "displayValue": "job-3",
                },
                "entitySeparator": undefined,
                "metadata": Immutable.List [
                  Immutable.Map {
                    "field": "Job Name",
                    "value": Immutable.Map {
                      "value": 688,
                      "urlType": "workflow",
                      "displayValue": "job-3",
                    },
                  },
                  Immutable.Map {
                    "field": "Job Owner",
                    "value": Immutable.Map {
                      "value": 1038,
                      "urlType": "user",
                      "displayValue": "Test Lab User",
                    },
                  },
                  Immutable.Map {
                    "field": "Job Status",
                    "value": "In Progress",
                  },
                ],
                "oldData": undefined,
                "newData": undefined,
                "userComment": undefined,
              },
              Immutable.Record {
                "rowId": 1548,
                "eventType": "assays",
                "subEventType": undefined,
                "summary": "Assay Data Uploaded",
                "user": Immutable.Map {
                  "value": 1005,
                  "urlType": "user",
                  "displayValue": "Vader",
                },
                "eventUserId": 1005,
                "timestamp": Immutable.Map {
                  "value": "2020-04-08 22:57:36.941",
                  "formattedValue": "2020-04-08 22:57",
                },
                "eventTimestamp": 2020-04-08T22:57:36.941Z,
                "entity": Immutable.Map {
                  "value": "xlsx assay",
                  "urlType": "assays",
                  "displayValue": "XLSX Assay",
                },
                "entitySeparator": undefined,
                "metadata": Immutable.List [
                  Immutable.Map {
                    "field": "Assay",
                    "value": Immutable.Map {
                      "value": "xlsx assay",
                      "urlType": "assays",
                      "displayValue": "XLSX Assay",
                    },
                  },
                  Immutable.Map {
                    "field": "Completed By",
                    "value": Immutable.Map {
                      "value": 1005,
                      "urlType": "user",
                      "displayValue": "Vader",
                    },
                  },
                  Immutable.Map {
                    "field": "Date",
                    "value": Immutable.Map {
                      "value": "2020-04-08 21:57:36.941",
                      "formattedValue": "2020-04-08 21:57",
                    },
                  },
                ],
                "oldData": undefined,
                "newData": undefined,
                "userComment": undefined,
              },
              Immutable.Record {
                "rowId": 462023,
                "eventType": "samples",
                "subEventType": undefined,
                "summary": "Sample updated",
                "user": Immutable.Map {
                  "value": 1005,
                  "urlType": "user",
                  "displayValue": "Vader",
                },
                "eventUserId": 1005,
                "timestamp": Immutable.Map {
                  "value": "2020-04-05 21:57:36.941",
                  "formattedValue": "2020-04-05 21:57",
                },
                "eventTimestamp": 2020-04-05T21:57:36.941Z,
                "entity": undefined,
                "entitySeparator": undefined,
                "metadata": undefined,
                "oldData": Immutable.Map {
                  "description": "des",
                  "modified": "2020-04-05T21:56:54.584-07:00",
                },
                "newData": Immutable.Map {
                  "description": "desc",
                  "modified": "2020-04-05T21:57:36.915-07:00",
                },
                "userComment": undefined,
              },
              Immutable.Record {
                "rowId": 544,
                "eventType": "workflow",
                "subEventType": undefined,
                "summary": "Added to job",
                "user": Immutable.Map {
                  "value": 1005,
                  "urlType": "user",
                  "displayValue": "Vader",
                },
                "eventUserId": 1005,
                "timestamp": Immutable.Map {
                  "value": "2020-04-04 22:57:36.941",
                  "formattedValue": "2020-04-04 22:57",
                },
                "eventTimestamp": 2020-04-04T22:57:36.941Z,
                "entity": Immutable.Map {
                  "value": 687,
                  "urlType": "workflow",
                  "displayValue": "job-1",
                },
                "entitySeparator": undefined,
                "metadata": Immutable.List [
                  Immutable.Map {
                    "field": "Job Name",
                    "value": Immutable.Map {
                      "value": 687,
                      "urlType": "workflow",
                      "displayValue": "job-1",
                    },
                  },
                  Immutable.Map {
                    "field": "Job Owner",
                    "value": Immutable.Map {
                      "value": 1005,
                      "urlType": "user",
                      "displayValue": "Vader",
                    },
                  },
                  Immutable.Map {
                    "field": "Job Status",
                    "value": "In Progress",
                  },
                ],
                "oldData": undefined,
                "newData": undefined,
                "userComment": undefined,
              },
              Immutable.Record {
                "rowId": 462022,
                "eventType": "samples",
                "subEventType": undefined,
                "summary": "Sample Registered",
                "user": Immutable.Map {
                  "value": 1005,
                  "urlType": "user",
                  "displayValue": "Vader",
                },
                "eventUserId": 1005,
                "timestamp": Immutable.Map {
                  "value": "2020-04-04 21:57:36.941",
                  "formattedValue": "2020-04-04 21:57",
                },
                "eventTimestamp": 2020-04-04T21:57:36.941Z,
                "entity": undefined,
                "entitySeparator": undefined,
                "metadata": undefined,
                "oldData": Immutable.Map {},
                "newData": Immutable.Map {
                  "ModifiedBy": "1005",
                  "LSID": "urn:lsid:labkey.com:Sample.101.test2:S-20200404-1",
                  "_rowNumber": "1",
                  "Created": "2020-04-04T21:56:54.637-07:00",
                  "Modified": "2020-04-04T21:56:54.637-07:00",
                  "genId": "7",
                  "Name": "S-20200404-1",
                  "Folder": "fac9522f-d271-1037-ab94-32fda5aa448a",
                  "MaterialInputs/Test": "abc",
                  "RowId": "86873",
                  "cpasType": "urn:lsid:labkey.com:SampleSet.Folder-101:test2",
                  "Description": "des",
                  "CreatedBy": "1005",
                },
                "userComment": undefined,
              },
            ]
          }
          onEventSelection={[MockFunction]}
          selectedEntityConnectionInfo={null}
          showRecentFirst={true}
        />
      </Col>
    </Row>
  </PanelBody>
</ForwardRef>
`;

exports[`<SampleEventListing/> With selected assay re-import event 1`] = `
<ForwardRef>
  <PanelBody
    bsClass="panel"
    collapsible={false}
  >
    <div>
      <Row
        bsClass="row"
        componentClass="div"
      >
        <Col
          bsClass="col"
          className="font-large timeline-title"
          componentClass="div"
          xs={7}
        >
          Event Timeline for S-20200404-1
        </Col>
        <Col
          bsClass="col"
          componentClass="div"
          xs={5}
        >
          <span
            className="pull-right"
          >
            <DropdownButton
              className="button-right-spacing"
              id="job-tasks-comments-sort-btn"
              title="Show Oldest first"
            >
              <MenuItem
                active={true}
                bsClass="dropdown"
                disabled={false}
                divider={false}
                header={false}
                key="oldest"
                onClick={[Function]}
              >
                Oldest first
              </MenuItem>
              <MenuItem
                active={false}
                bsClass="dropdown"
                disabled={false}
                divider={false}
                header={false}
                key="recent"
                onClick={[Function]}
              >
                Recent first
              </MenuItem>
            </DropdownButton>
            <Tip
              caption="Export"
              trigger={
                [
                  "focus",
                  "hover",
                ]
              }
            >
              <Button
                active={false}
                block={false}
                bsClass="btn"
                bsStyle="default"
                disabled={false}
                onClick={[Function]}
              >
                <i
                  className="fa fa-download"
                />
              </Button>
            </Tip>
          </span>
        </Col>
      </Row>
      <hr />
    </div>
    <div>
      <ExpandableFilterToggle
        filterExpanded={false}
        hasFilter={false}
        panelCls="show-hide-filter-toggle"
        resetFilter={[Function]}
        toggleFilterPanel={[Function]}
      />
      <hr />
    </div>
    <Row
      bsClass="row"
      componentClass="div"
    >
      <Col
        bsClass="col"
        className="timeline-container"
        componentClass="div"
        lg={12}
      >
        <TimelineView
          events={
            [
              Immutable.Record {
                "rowId": 462022,
                "eventType": "samples",
                "subEventType": undefined,
                "summary": "Sample Registered",
                "user": Immutable.Map {
                  "value": 1005,
                  "urlType": "user",
                  "displayValue": "Vader",
                },
                "eventUserId": 1005,
                "timestamp": Immutable.Map {
                  "value": "2020-04-04 21:57:36.941",
                  "formattedValue": "2020-04-04 21:57",
                },
                "eventTimestamp": 2020-04-04T21:57:36.941Z,
                "entity": undefined,
                "entitySeparator": undefined,
                "metadata": undefined,
                "oldData": Immutable.Map {},
                "newData": Immutable.Map {
                  "ModifiedBy": "1005",
                  "LSID": "urn:lsid:labkey.com:Sample.101.test2:S-20200404-1",
                  "_rowNumber": "1",
                  "Created": "2020-04-04T21:56:54.637-07:00",
                  "Modified": "2020-04-04T21:56:54.637-07:00",
                  "genId": "7",
                  "Name": "S-20200404-1",
                  "Folder": "fac9522f-d271-1037-ab94-32fda5aa448a",
                  "MaterialInputs/Test": "abc",
                  "RowId": "86873",
                  "cpasType": "urn:lsid:labkey.com:SampleSet.Folder-101:test2",
                  "Description": "des",
                  "CreatedBy": "1005",
                },
                "userComment": undefined,
              },
              Immutable.Record {
                "rowId": 544,
                "eventType": "workflow",
                "subEventType": undefined,
                "summary": "Added to job",
                "user": Immutable.Map {
                  "value": 1005,
                  "urlType": "user",
                  "displayValue": "Vader",
                },
                "eventUserId": 1005,
                "timestamp": Immutable.Map {
                  "value": "2020-04-04 22:57:36.941",
                  "formattedValue": "2020-04-04 22:57",
                },
                "eventTimestamp": 2020-04-04T22:57:36.941Z,
                "entity": Immutable.Map {
                  "value": 687,
                  "urlType": "workflow",
                  "displayValue": "job-1",
                },
                "entitySeparator": undefined,
                "metadata": Immutable.List [
                  Immutable.Map {
                    "field": "Job Name",
                    "value": Immutable.Map {
                      "value": 687,
                      "urlType": "workflow",
                      "displayValue": "job-1",
                    },
                  },
                  Immutable.Map {
                    "field": "Job Owner",
                    "value": Immutable.Map {
                      "value": 1005,
                      "urlType": "user",
                      "displayValue": "Vader",
                    },
                  },
                  Immutable.Map {
                    "field": "Job Status",
                    "value": "In Progress",
                  },
                ],
                "oldData": undefined,
                "newData": undefined,
                "userComment": undefined,
              },
              Immutable.Record {
                "rowId": 462023,
                "eventType": "samples",
                "subEventType": undefined,
                "summary": "Sample updated",
                "user": Immutable.Map {
                  "value": 1005,
                  "urlType": "user",
                  "displayValue": "Vader",
                },
                "eventUserId": 1005,
                "timestamp": Immutable.Map {
                  "value": "2020-04-05 21:57:36.941",
                  "formattedValue": "2020-04-05 21:57",
                },
                "eventTimestamp": 2020-04-05T21:57:36.941Z,
                "entity": undefined,
                "entitySeparator": undefined,
                "metadata": undefined,
                "oldData": Immutable.Map {
                  "description": "des",
                  "modified": "2020-04-05T21:56:54.584-07:00",
                },
                "newData": Immutable.Map {
                  "description": "desc",
                  "modified": "2020-04-05T21:57:36.915-07:00",
                },
                "userComment": undefined,
              },
              Immutable.Record {
                "rowId": 1548,
                "eventType": "assays",
                "subEventType": undefined,
                "summary": "Assay Data Uploaded",
                "user": Immutable.Map {
                  "value": 1005,
                  "urlType": "user",
                  "displayValue": "Vader",
                },
                "eventUserId": 1005,
                "timestamp": Immutable.Map {
                  "value": "2020-04-08 22:57:36.941",
                  "formattedValue": "2020-04-08 22:57",
                },
                "eventTimestamp": 2020-04-08T22:57:36.941Z,
                "entity": Immutable.Map {
                  "value": "xlsx assay",
                  "urlType": "assays",
                  "displayValue": "XLSX Assay",
                },
                "entitySeparator": undefined,
                "metadata": Immutable.List [
                  Immutable.Map {
                    "field": "Assay",
                    "value": Immutable.Map {
                      "value": "xlsx assay",
                      "urlType": "assays",
                      "displayValue": "XLSX Assay",
                    },
                  },
                  Immutable.Map {
                    "field": "Completed By",
                    "value": Immutable.Map {
                      "value": 1005,
                      "urlType": "user",
                      "displayValue": "Vader",
                    },
                  },
                  Immutable.Map {
                    "field": "Date",
                    "value": Immutable.Map {
                      "value": "2020-04-08 21:57:36.941",
                      "formattedValue": "2020-04-08 21:57",
                    },
                  },
                ],
                "oldData": undefined,
                "newData": undefined,
                "userComment": undefined,
              },
              Immutable.Record {
                "rowId": 546,
                "eventType": "workflow",
                "subEventType": undefined,
                "summary": "Added to job",
                "user": Immutable.Map {
                  "value": 1038,
                  "urlType": "user",
                  "displayValue": "Test Lab User",
                },
                "eventUserId": 1038,
                "timestamp": Immutable.Map {
                  "value": "2020-04-09 18:57:36.941",
                  "formattedValue": "2020-04-09 18:57",
                },
                "eventTimestamp": 2020-04-09T18:57:36.941Z,
                "entity": Immutable.Map {
                  "value": 688,
                  "urlType": "workflow",
                  "displayValue": "job-3",
                },
                "entitySeparator": undefined,
                "metadata": Immutable.List [
                  Immutable.Map {
                    "field": "Job Name",
                    "value": Immutable.Map {
                      "value": 688,
                      "urlType": "workflow",
                      "displayValue": "job-3",
                    },
                  },
                  Immutable.Map {
                    "field": "Job Owner",
                    "value": Immutable.Map {
                      "value": 1038,
                      "urlType": "user",
                      "displayValue": "Test Lab User",
                    },
                  },
                  Immutable.Map {
                    "field": "Job Status",
                    "value": "In Progress",
                  },
                ],
                "oldData": undefined,
                "newData": undefined,
                "userComment": undefined,
              },
              Immutable.Record {
                "rowId": 547,
                "eventType": "workflow",
                "subEventType": undefined,
                "summary": "Removed from job",
                "user": Immutable.Map {
                  "value": 1038,
                  "urlType": "user",
                  "displayValue": "Test Lab User",
                },
                "eventUserId": 1038,
                "timestamp": Immutable.Map {
                  "value": "2020-04-09 19:57:36.941",
                  "formattedValue": "2020-04-09 19:57",
                },
                "eventTimestamp": 2020-04-09T19:57:36.941Z,
                "entity": Immutable.Map {
                  "value": 688,
                  "urlType": "workflow",
                  "displayValue": "job-3",
                },
                "entitySeparator": undefined,
                "metadata": Immutable.List [
                  Immutable.Map {
                    "field": "Job Name",
                    "value": Immutable.Map {
                      "value": 688,
                      "urlType": "workflow",
                      "displayValue": "job-3",
                    },
                  },
                  Immutable.Map {
                    "field": "Job Owner",
                    "value": Immutable.Map {
                      "value": 1038,
                      "urlType": "user",
                      "displayValue": "Test Lab User",
                    },
                  },
                  Immutable.Map {
                    "field": "Job Status",
                    "value": "In Progress",
                  },
                ],
                "oldData": undefined,
                "newData": undefined,
                "userComment": undefined,
              },
              Immutable.Record {
                "rowId": 548,
                "eventType": "workflow",
                "subEventType": undefined,
                "summary": "Completed job",
                "user": Immutable.Map {
                  "value": 1005,
                  "urlType": "user",
                  "displayValue": "Vader",
                },
                "eventUserId": 1005,
                "timestamp": Immutable.Map {
                  "value": "2020-04-09 20:57:36.941",
                  "formattedValue": "2020-04-09 20:57",
                },
                "eventTimestamp": 2020-04-09T20:57:36.941Z,
                "entity": Immutable.Map {
                  "value": 687,
                  "urlType": "workflow",
                  "displayValue": "job-1",
                },
                "entitySeparator": undefined,
                "metadata": Immutable.List [
                  Immutable.Map {
                    "field": "Job Name",
                    "value": Immutable.Map {
                      "value": 687,
                      "urlType": "workflow",
                      "displayValue": "job-1",
                    },
                  },
                  Immutable.Map {
                    "field": "Job Owner",
                    "value": Immutable.Map {
                      "value": 1005,
                      "urlType": "user",
                      "displayValue": "Vader",
                    },
                  },
                  Immutable.Map {
                    "field": "Job Status",
                    "value": "Completed",
                  },
                ],
                "oldData": undefined,
                "newData": undefined,
                "userComment": undefined,
              },
              Immutable.Record {
                "rowId": 1549,
                "eventType": "assays",
                "subEventType": undefined,
                "summary": "Assay Data Re-Import Run",
                "user": Immutable.Map {
                  "value": 1005,
                  "urlType": "user",
                  "displayValue": "Vader",
                },
                "eventUserId": 1005,
                "timestamp": Immutable.Map {
                  "value": "2020-04-09 23:57:36.941",
                  "formattedValue": "2020-04-09 23:57",
                },
                "eventTimestamp": 2020-04-09T23:57:36.941Z,
                "entity": Immutable.Map {
                  "value": Immutable.List [
                    "xlsx assay",
                    233,
                  ],
                  "urlType": "assayRun",
                  "displayValue": "XLSX Assay",
                },
                "entitySeparator": undefined,
                "metadata": Immutable.List [
                  Immutable.Map {
                    "field": "Assay",
                    "value": Immutable.Map {
                      "value": "xlsx assay",
                      "urlType": "assays",
                      "displayValue": "XLSX Assay",
                    },
                  },
                  Immutable.Map {
                    "field": "Assay ID",
                    "value": Immutable.Map {
                      "value": Immutable.List [
                        "xlsx assay",
                        233,
                      ],
                      "urlType": "assayRun",
                      "displayValue": "XLSX Assay_2019-10-16_11-54-56",
                    },
                  },
                  Immutable.Map {
                    "field": "Completed By",
                    "value": Immutable.Map {
                      "value": 1005,
                      "urlType": "user",
                      "displayValue": "Vader",
                    },
                  },
                  Immutable.Map {
                    "field": "Date",
                    "value": Immutable.Map {
                      "value": "2020-04-09 23:57:36.941",
                      "formattedValue": "2020-04-09 23:57",
                    },
                  },
                ],
                "oldData": undefined,
                "newData": undefined,
                "userComment": undefined,
              },
              Immutable.Record {
                "rowId": 550,
                "eventType": "workflow",
                "subEventType": undefined,
                "summary": "Added to job",
                "user": Immutable.Map {
                  "value": 1038,
                  "urlType": "user",
                  "displayValue": "Test Lab User",
                },
                "eventUserId": 1038,
                "timestamp": Immutable.Map {
                  "value": "2020-04-10 02:57:36.941",
                  "formattedValue": "2020-04-10 02:57",
                },
                "eventTimestamp": 2020-04-10T02:57:36.941Z,
                "entity": Immutable.Map {
                  "value": 689,
                  "urlType": "workflow",
                  "displayValue": "job-4",
                },
                "entitySeparator": undefined,
                "metadata": Immutable.List [
                  Immutable.Map {
                    "field": "Job Name",
                    "value": Immutable.Map {
                      "value": 689,
                      "urlType": "workflow",
                      "displayValue": "job-4",
                    },
                  },
                  Immutable.Map {
                    "field": "Job Owner",
                    "value": Immutable.Map {
                      "value": 1038,
                      "urlType": "user",
                      "displayValue": "Test Lab User",
                    },
                  },
                  Immutable.Map {
                    "field": "Job Status",
                    "value": "In Progress",
                  },
                ],
                "oldData": undefined,
                "newData": undefined,
                "userComment": undefined,
              },
            ]
          }
          onEventSelection={[MockFunction]}
          selectedEntityConnectionInfo={null}
          selectedEvent={
            Immutable.Record {
              "rowId": 1549,
              "eventType": "assays",
              "subEventType": undefined,
              "summary": "Assay Data Re-Import Run",
              "user": Immutable.Map {
                "value": 1005,
                "urlType": "user",
                "displayValue": "Vader",
              },
              "eventUserId": 1005,
              "timestamp": Immutable.Map {
                "value": "2020-04-09 23:57:36.941",
                "formattedValue": "2020-04-09 23:57",
              },
              "eventTimestamp": 2020-04-09T23:57:36.941Z,
              "entity": Immutable.Map {
                "value": Immutable.List [
                  "xlsx assay",
                  233,
                ],
                "urlType": "assayRun",
                "displayValue": "XLSX Assay",
              },
              "entitySeparator": undefined,
              "metadata": Immutable.List [
                Immutable.Map {
                  "field": "Assay",
                  "value": Immutable.Map {
                    "value": "xlsx assay",
                    "urlType": "assays",
                    "displayValue": "XLSX Assay",
                  },
                },
                Immutable.Map {
                  "field": "Assay ID",
                  "value": Immutable.Map {
                    "value": Immutable.List [
                      "xlsx assay",
                      233,
                    ],
                    "urlType": "assayRun",
                    "displayValue": "XLSX Assay_2019-10-16_11-54-56",
                  },
                },
                Immutable.Map {
                  "field": "Completed By",
                  "value": Immutable.Map {
                    "value": 1005,
                    "urlType": "user",
                    "displayValue": "Vader",
                  },
                },
                Immutable.Map {
                  "field": "Date",
                  "value": Immutable.Map {
                    "value": "2020-04-09 23:57:36.941",
                    "formattedValue": "2020-04-09 23:57",
                  },
                },
              ],
              "oldData": undefined,
              "newData": undefined,
              "userComment": undefined,
            }
          }
          showRecentFirst={false}
        />
      </Col>
    </Row>
  </PanelBody>
</ForwardRef>
`;

exports[`<SampleEventListing/> With selected assay upload event 1`] = `
<ForwardRef>
  <PanelBody
    bsClass="panel"
    collapsible={false}
  >
    <div>
      <Row
        bsClass="row"
        componentClass="div"
      >
        <Col
          bsClass="col"
          className="font-large timeline-title"
          componentClass="div"
          xs={7}
        >
          Event Timeline for S-20200404-1
        </Col>
        <Col
          bsClass="col"
          componentClass="div"
          xs={5}
        >
          <span
            className="pull-right"
          >
            <DropdownButton
              className="button-right-spacing"
              id="job-tasks-comments-sort-btn"
              title="Show Oldest first"
            >
              <MenuItem
                active={true}
                bsClass="dropdown"
                disabled={false}
                divider={false}
                header={false}
                key="oldest"
                onClick={[Function]}
              >
                Oldest first
              </MenuItem>
              <MenuItem
                active={false}
                bsClass="dropdown"
                disabled={false}
                divider={false}
                header={false}
                key="recent"
                onClick={[Function]}
              >
                Recent first
              </MenuItem>
            </DropdownButton>
            <Tip
              caption="Export"
              trigger={
                [
                  "focus",
                  "hover",
                ]
              }
            >
              <Button
                active={false}
                block={false}
                bsClass="btn"
                bsStyle="default"
                disabled={false}
                onClick={[Function]}
              >
                <i
                  className="fa fa-download"
                />
              </Button>
            </Tip>
          </span>
        </Col>
      </Row>
      <hr />
    </div>
    <div>
      <ExpandableFilterToggle
        filterExpanded={false}
        hasFilter={false}
        panelCls="show-hide-filter-toggle"
        resetFilter={[Function]}
        toggleFilterPanel={[Function]}
      />
      <hr />
    </div>
    <Row
      bsClass="row"
      componentClass="div"
    >
      <Col
        bsClass="col"
        className="timeline-container"
        componentClass="div"
        lg={12}
      >
        <TimelineView
          events={
            [
              Immutable.Record {
                "rowId": 462022,
                "eventType": "samples",
                "subEventType": undefined,
                "summary": "Sample Registered",
                "user": Immutable.Map {
                  "value": 1005,
                  "urlType": "user",
                  "displayValue": "Vader",
                },
                "eventUserId": 1005,
                "timestamp": Immutable.Map {
                  "value": "2020-04-04 21:57:36.941",
                  "formattedValue": "2020-04-04 21:57",
                },
                "eventTimestamp": 2020-04-04T21:57:36.941Z,
                "entity": undefined,
                "entitySeparator": undefined,
                "metadata": undefined,
                "oldData": Immutable.Map {},
                "newData": Immutable.Map {
                  "ModifiedBy": "1005",
                  "LSID": "urn:lsid:labkey.com:Sample.101.test2:S-20200404-1",
                  "_rowNumber": "1",
                  "Created": "2020-04-04T21:56:54.637-07:00",
                  "Modified": "2020-04-04T21:56:54.637-07:00",
                  "genId": "7",
                  "Name": "S-20200404-1",
                  "Folder": "fac9522f-d271-1037-ab94-32fda5aa448a",
                  "MaterialInputs/Test": "abc",
                  "RowId": "86873",
                  "cpasType": "urn:lsid:labkey.com:SampleSet.Folder-101:test2",
                  "Description": "des",
                  "CreatedBy": "1005",
                },
                "userComment": undefined,
              },
              Immutable.Record {
                "rowId": 544,
                "eventType": "workflow",
                "subEventType": undefined,
                "summary": "Added to job",
                "user": Immutable.Map {
                  "value": 1005,
                  "urlType": "user",
                  "displayValue": "Vader",
                },
                "eventUserId": 1005,
                "timestamp": Immutable.Map {
                  "value": "2020-04-04 22:57:36.941",
                  "formattedValue": "2020-04-04 22:57",
                },
                "eventTimestamp": 2020-04-04T22:57:36.941Z,
                "entity": Immutable.Map {
                  "value": 687,
                  "urlType": "workflow",
                  "displayValue": "job-1",
                },
                "entitySeparator": undefined,
                "metadata": Immutable.List [
                  Immutable.Map {
                    "field": "Job Name",
                    "value": Immutable.Map {
                      "value": 687,
                      "urlType": "workflow",
                      "displayValue": "job-1",
                    },
                  },
                  Immutable.Map {
                    "field": "Job Owner",
                    "value": Immutable.Map {
                      "value": 1005,
                      "urlType": "user",
                      "displayValue": "Vader",
                    },
                  },
                  Immutable.Map {
                    "field": "Job Status",
                    "value": "In Progress",
                  },
                ],
                "oldData": undefined,
                "newData": undefined,
                "userComment": undefined,
              },
              Immutable.Record {
                "rowId": 462023,
                "eventType": "samples",
                "subEventType": undefined,
                "summary": "Sample updated",
                "user": Immutable.Map {
                  "value": 1005,
                  "urlType": "user",
                  "displayValue": "Vader",
                },
                "eventUserId": 1005,
                "timestamp": Immutable.Map {
                  "value": "2020-04-05 21:57:36.941",
                  "formattedValue": "2020-04-05 21:57",
                },
                "eventTimestamp": 2020-04-05T21:57:36.941Z,
                "entity": undefined,
                "entitySeparator": undefined,
                "metadata": undefined,
                "oldData": Immutable.Map {
                  "description": "des",
                  "modified": "2020-04-05T21:56:54.584-07:00",
                },
                "newData": Immutable.Map {
                  "description": "desc",
                  "modified": "2020-04-05T21:57:36.915-07:00",
                },
                "userComment": undefined,
              },
              Immutable.Record {
                "rowId": 1548,
                "eventType": "assays",
                "subEventType": undefined,
                "summary": "Assay Data Uploaded",
                "user": Immutable.Map {
                  "value": 1005,
                  "urlType": "user",
                  "displayValue": "Vader",
                },
                "eventUserId": 1005,
                "timestamp": Immutable.Map {
                  "value": "2020-04-08 22:57:36.941",
                  "formattedValue": "2020-04-08 22:57",
                },
                "eventTimestamp": 2020-04-08T22:57:36.941Z,
                "entity": Immutable.Map {
                  "value": "xlsx assay",
                  "urlType": "assays",
                  "displayValue": "XLSX Assay",
                },
                "entitySeparator": undefined,
                "metadata": Immutable.List [
                  Immutable.Map {
                    "field": "Assay",
                    "value": Immutable.Map {
                      "value": "xlsx assay",
                      "urlType": "assays",
                      "displayValue": "XLSX Assay",
                    },
                  },
                  Immutable.Map {
                    "field": "Completed By",
                    "value": Immutable.Map {
                      "value": 1005,
                      "urlType": "user",
                      "displayValue": "Vader",
                    },
                  },
                  Immutable.Map {
                    "field": "Date",
                    "value": Immutable.Map {
                      "value": "2020-04-08 21:57:36.941",
                      "formattedValue": "2020-04-08 21:57",
                    },
                  },
                ],
                "oldData": undefined,
                "newData": undefined,
                "userComment": undefined,
              },
              Immutable.Record {
                "rowId": 546,
                "eventType": "workflow",
                "subEventType": undefined,
                "summary": "Added to job",
                "user": Immutable.Map {
                  "value": 1038,
                  "urlType": "user",
                  "displayValue": "Test Lab User",
                },
                "eventUserId": 1038,
                "timestamp": Immutable.Map {
                  "value": "2020-04-09 18:57:36.941",
                  "formattedValue": "2020-04-09 18:57",
                },
                "eventTimestamp": 2020-04-09T18:57:36.941Z,
                "entity": Immutable.Map {
                  "value": 688,
                  "urlType": "workflow",
                  "displayValue": "job-3",
                },
                "entitySeparator": undefined,
                "metadata": Immutable.List [
                  Immutable.Map {
                    "field": "Job Name",
                    "value": Immutable.Map {
                      "value": 688,
                      "urlType": "workflow",
                      "displayValue": "job-3",
                    },
                  },
                  Immutable.Map {
                    "field": "Job Owner",
                    "value": Immutable.Map {
                      "value": 1038,
                      "urlType": "user",
                      "displayValue": "Test Lab User",
                    },
                  },
                  Immutable.Map {
                    "field": "Job Status",
                    "value": "In Progress",
                  },
                ],
                "oldData": undefined,
                "newData": undefined,
                "userComment": undefined,
              },
              Immutable.Record {
                "rowId": 547,
                "eventType": "workflow",
                "subEventType": undefined,
                "summary": "Removed from job",
                "user": Immutable.Map {
                  "value": 1038,
                  "urlType": "user",
                  "displayValue": "Test Lab User",
                },
                "eventUserId": 1038,
                "timestamp": Immutable.Map {
                  "value": "2020-04-09 19:57:36.941",
                  "formattedValue": "2020-04-09 19:57",
                },
                "eventTimestamp": 2020-04-09T19:57:36.941Z,
                "entity": Immutable.Map {
                  "value": 688,
                  "urlType": "workflow",
                  "displayValue": "job-3",
                },
                "entitySeparator": undefined,
                "metadata": Immutable.List [
                  Immutable.Map {
                    "field": "Job Name",
                    "value": Immutable.Map {
                      "value": 688,
                      "urlType": "workflow",
                      "displayValue": "job-3",
                    },
                  },
                  Immutable.Map {
                    "field": "Job Owner",
                    "value": Immutable.Map {
                      "value": 1038,
                      "urlType": "user",
                      "displayValue": "Test Lab User",
                    },
                  },
                  Immutable.Map {
                    "field": "Job Status",
                    "value": "In Progress",
                  },
                ],
                "oldData": undefined,
                "newData": undefined,
                "userComment": undefined,
              },
              Immutable.Record {
                "rowId": 548,
                "eventType": "workflow",
                "subEventType": undefined,
                "summary": "Completed job",
                "user": Immutable.Map {
                  "value": 1005,
                  "urlType": "user",
                  "displayValue": "Vader",
                },
                "eventUserId": 1005,
                "timestamp": Immutable.Map {
                  "value": "2020-04-09 20:57:36.941",
                  "formattedValue": "2020-04-09 20:57",
                },
                "eventTimestamp": 2020-04-09T20:57:36.941Z,
                "entity": Immutable.Map {
                  "value": 687,
                  "urlType": "workflow",
                  "displayValue": "job-1",
                },
                "entitySeparator": undefined,
                "metadata": Immutable.List [
                  Immutable.Map {
                    "field": "Job Name",
                    "value": Immutable.Map {
                      "value": 687,
                      "urlType": "workflow",
                      "displayValue": "job-1",
                    },
                  },
                  Immutable.Map {
                    "field": "Job Owner",
                    "value": Immutable.Map {
                      "value": 1005,
                      "urlType": "user",
                      "displayValue": "Vader",
                    },
                  },
                  Immutable.Map {
                    "field": "Job Status",
                    "value": "Completed",
                  },
                ],
                "oldData": undefined,
                "newData": undefined,
                "userComment": undefined,
              },
              Immutable.Record {
                "rowId": 1549,
                "eventType": "assays",
                "subEventType": undefined,
                "summary": "Assay Data Re-Import Run",
                "user": Immutable.Map {
                  "value": 1005,
                  "urlType": "user",
                  "displayValue": "Vader",
                },
                "eventUserId": 1005,
                "timestamp": Immutable.Map {
                  "value": "2020-04-09 23:57:36.941",
                  "formattedValue": "2020-04-09 23:57",
                },
                "eventTimestamp": 2020-04-09T23:57:36.941Z,
                "entity": Immutable.Map {
                  "value": Immutable.List [
                    "xlsx assay",
                    233,
                  ],
                  "urlType": "assayRun",
                  "displayValue": "XLSX Assay",
                },
                "entitySeparator": undefined,
                "metadata": Immutable.List [
                  Immutable.Map {
                    "field": "Assay",
                    "value": Immutable.Map {
                      "value": "xlsx assay",
                      "urlType": "assays",
                      "displayValue": "XLSX Assay",
                    },
                  },
                  Immutable.Map {
                    "field": "Assay ID",
                    "value": Immutable.Map {
                      "value": Immutable.List [
                        "xlsx assay",
                        233,
                      ],
                      "urlType": "assayRun",
                      "displayValue": "XLSX Assay_2019-10-16_11-54-56",
                    },
                  },
                  Immutable.Map {
                    "field": "Completed By",
                    "value": Immutable.Map {
                      "value": 1005,
                      "urlType": "user",
                      "displayValue": "Vader",
                    },
                  },
                  Immutable.Map {
                    "field": "Date",
                    "value": Immutable.Map {
                      "value": "2020-04-09 23:57:36.941",
                      "formattedValue": "2020-04-09 23:57",
                    },
                  },
                ],
                "oldData": undefined,
                "newData": undefined,
                "userComment": undefined,
              },
              Immutable.Record {
                "rowId": 550,
                "eventType": "workflow",
                "subEventType": undefined,
                "summary": "Added to job",
                "user": Immutable.Map {
                  "value": 1038,
                  "urlType": "user",
                  "displayValue": "Test Lab User",
                },
                "eventUserId": 1038,
                "timestamp": Immutable.Map {
                  "value": "2020-04-10 02:57:36.941",
                  "formattedValue": "2020-04-10 02:57",
                },
                "eventTimestamp": 2020-04-10T02:57:36.941Z,
                "entity": Immutable.Map {
                  "value": 689,
                  "urlType": "workflow",
                  "displayValue": "job-4",
                },
                "entitySeparator": undefined,
                "metadata": Immutable.List [
                  Immutable.Map {
                    "field": "Job Name",
                    "value": Immutable.Map {
                      "value": 689,
                      "urlType": "workflow",
                      "displayValue": "job-4",
                    },
                  },
                  Immutable.Map {
                    "field": "Job Owner",
                    "value": Immutable.Map {
                      "value": 1038,
                      "urlType": "user",
                      "displayValue": "Test Lab User",
                    },
                  },
                  Immutable.Map {
                    "field": "Job Status",
                    "value": "In Progress",
                  },
                ],
                "oldData": undefined,
                "newData": undefined,
                "userComment": undefined,
              },
            ]
          }
          onEventSelection={[MockFunction]}
          selectedEntityConnectionInfo={null}
          selectedEvent={
            Immutable.Record {
              "rowId": 1548,
              "eventType": "assays",
              "subEventType": undefined,
              "summary": "Assay Data Uploaded",
              "user": Immutable.Map {
                "value": 1005,
                "urlType": "user",
                "displayValue": "Vader",
              },
              "eventUserId": 1005,
              "timestamp": Immutable.Map {
                "value": "2020-04-08 22:57:36.941",
                "formattedValue": "2020-04-08 22:57",
              },
              "eventTimestamp": 2020-04-08T22:57:36.941Z,
              "entity": Immutable.Map {
                "value": "xlsx assay",
                "urlType": "assays",
                "displayValue": "XLSX Assay",
              },
              "entitySeparator": undefined,
              "metadata": Immutable.List [
                Immutable.Map {
                  "field": "Assay",
                  "value": Immutable.Map {
                    "value": "xlsx assay",
                    "urlType": "assays",
                    "displayValue": "XLSX Assay",
                  },
                },
                Immutable.Map {
                  "field": "Completed By",
                  "value": Immutable.Map {
                    "value": 1005,
                    "urlType": "user",
                    "displayValue": "Vader",
                  },
                },
                Immutable.Map {
                  "field": "Date",
                  "value": Immutable.Map {
                    "value": "2020-04-08 21:57:36.941",
                    "formattedValue": "2020-04-08 21:57",
                  },
                },
              ],
              "oldData": undefined,
              "newData": undefined,
              "userComment": undefined,
            }
          }
          showRecentFirst={false}
        />
      </Col>
    </Row>
  </PanelBody>
</ForwardRef>
`;

exports[`<SampleEventListing/> With selected job that is completed 1`] = `
<ForwardRef>
  <PanelBody
    bsClass="panel"
    collapsible={false}
  >
    <div>
      <Row
        bsClass="row"
        componentClass="div"
      >
        <Col
          bsClass="col"
          className="font-large timeline-title"
          componentClass="div"
          xs={7}
        >
          Event Timeline for S-20200404-1
        </Col>
        <Col
          bsClass="col"
          componentClass="div"
          xs={5}
        >
          <span
            className="pull-right"
          >
            <DropdownButton
              className="button-right-spacing"
              id="job-tasks-comments-sort-btn"
              title="Show Oldest first"
            >
              <MenuItem
                active={true}
                bsClass="dropdown"
                disabled={false}
                divider={false}
                header={false}
                key="oldest"
                onClick={[Function]}
              >
                Oldest first
              </MenuItem>
              <MenuItem
                active={false}
                bsClass="dropdown"
                disabled={false}
                divider={false}
                header={false}
                key="recent"
                onClick={[Function]}
              >
                Recent first
              </MenuItem>
            </DropdownButton>
            <Tip
              caption="Export"
              trigger={
                [
                  "focus",
                  "hover",
                ]
              }
            >
              <Button
                active={false}
                block={false}
                bsClass="btn"
                bsStyle="default"
                disabled={false}
                onClick={[Function]}
              >
                <i
                  className="fa fa-download"
                />
              </Button>
            </Tip>
          </span>
        </Col>
      </Row>
      <hr />
    </div>
    <div>
      <ExpandableFilterToggle
        filterExpanded={false}
        hasFilter={false}
        panelCls="show-hide-filter-toggle"
        resetFilter={[Function]}
        toggleFilterPanel={[Function]}
      />
      <hr />
    </div>
    <Row
      bsClass="row"
      componentClass="div"
    >
      <Col
        bsClass="col"
        className="timeline-container"
        componentClass="div"
        lg={12}
      >
        <TimelineView
          events={
            [
              Immutable.Record {
                "rowId": 462022,
                "eventType": "samples",
                "subEventType": undefined,
                "summary": "Sample Registered",
                "user": Immutable.Map {
                  "value": 1005,
                  "urlType": "user",
                  "displayValue": "Vader",
                },
                "eventUserId": 1005,
                "timestamp": Immutable.Map {
                  "value": "2020-04-04 21:57:36.941",
                  "formattedValue": "2020-04-04 21:57",
                },
                "eventTimestamp": 2020-04-04T21:57:36.941Z,
                "entity": undefined,
                "entitySeparator": undefined,
                "metadata": undefined,
                "oldData": Immutable.Map {},
                "newData": Immutable.Map {
                  "ModifiedBy": "1005",
                  "LSID": "urn:lsid:labkey.com:Sample.101.test2:S-20200404-1",
                  "_rowNumber": "1",
                  "Created": "2020-04-04T21:56:54.637-07:00",
                  "Modified": "2020-04-04T21:56:54.637-07:00",
                  "genId": "7",
                  "Name": "S-20200404-1",
                  "Folder": "fac9522f-d271-1037-ab94-32fda5aa448a",
                  "MaterialInputs/Test": "abc",
                  "RowId": "86873",
                  "cpasType": "urn:lsid:labkey.com:SampleSet.Folder-101:test2",
                  "Description": "des",
                  "CreatedBy": "1005",
                },
                "userComment": undefined,
              },
              Immutable.Record {
                "rowId": 544,
                "eventType": "workflow",
                "subEventType": undefined,
                "summary": "Added to job",
                "user": Immutable.Map {
                  "value": 1005,
                  "urlType": "user",
                  "displayValue": "Vader",
                },
                "eventUserId": 1005,
                "timestamp": Immutable.Map {
                  "value": "2020-04-04 22:57:36.941",
                  "formattedValue": "2020-04-04 22:57",
                },
                "eventTimestamp": 2020-04-04T22:57:36.941Z,
                "entity": Immutable.Map {
                  "value": 687,
                  "urlType": "workflow",
                  "displayValue": "job-1",
                },
                "entitySeparator": undefined,
                "metadata": Immutable.List [
                  Immutable.Map {
                    "field": "Job Name",
                    "value": Immutable.Map {
                      "value": 687,
                      "urlType": "workflow",
                      "displayValue": "job-1",
                    },
                  },
                  Immutable.Map {
                    "field": "Job Owner",
                    "value": Immutable.Map {
                      "value": 1005,
                      "urlType": "user",
                      "displayValue": "Vader",
                    },
                  },
                  Immutable.Map {
                    "field": "Job Status",
                    "value": "In Progress",
                  },
                ],
                "oldData": undefined,
                "newData": undefined,
                "userComment": undefined,
              },
              Immutable.Record {
                "rowId": 462023,
                "eventType": "samples",
                "subEventType": undefined,
                "summary": "Sample updated",
                "user": Immutable.Map {
                  "value": 1005,
                  "urlType": "user",
                  "displayValue": "Vader",
                },
                "eventUserId": 1005,
                "timestamp": Immutable.Map {
                  "value": "2020-04-05 21:57:36.941",
                  "formattedValue": "2020-04-05 21:57",
                },
                "eventTimestamp": 2020-04-05T21:57:36.941Z,
                "entity": undefined,
                "entitySeparator": undefined,
                "metadata": undefined,
                "oldData": Immutable.Map {
                  "description": "des",
                  "modified": "2020-04-05T21:56:54.584-07:00",
                },
                "newData": Immutable.Map {
                  "description": "desc",
                  "modified": "2020-04-05T21:57:36.915-07:00",
                },
                "userComment": undefined,
              },
              Immutable.Record {
                "rowId": 1548,
                "eventType": "assays",
                "subEventType": undefined,
                "summary": "Assay Data Uploaded",
                "user": Immutable.Map {
                  "value": 1005,
                  "urlType": "user",
                  "displayValue": "Vader",
                },
                "eventUserId": 1005,
                "timestamp": Immutable.Map {
                  "value": "2020-04-08 22:57:36.941",
                  "formattedValue": "2020-04-08 22:57",
                },
                "eventTimestamp": 2020-04-08T22:57:36.941Z,
                "entity": Immutable.Map {
                  "value": "xlsx assay",
                  "urlType": "assays",
                  "displayValue": "XLSX Assay",
                },
                "entitySeparator": undefined,
                "metadata": Immutable.List [
                  Immutable.Map {
                    "field": "Assay",
                    "value": Immutable.Map {
                      "value": "xlsx assay",
                      "urlType": "assays",
                      "displayValue": "XLSX Assay",
                    },
                  },
                  Immutable.Map {
                    "field": "Completed By",
                    "value": Immutable.Map {
                      "value": 1005,
                      "urlType": "user",
                      "displayValue": "Vader",
                    },
                  },
                  Immutable.Map {
                    "field": "Date",
                    "value": Immutable.Map {
                      "value": "2020-04-08 21:57:36.941",
                      "formattedValue": "2020-04-08 21:57",
                    },
                  },
                ],
                "oldData": undefined,
                "newData": undefined,
                "userComment": undefined,
              },
              Immutable.Record {
                "rowId": 546,
                "eventType": "workflow",
                "subEventType": undefined,
                "summary": "Added to job",
                "user": Immutable.Map {
                  "value": 1038,
                  "urlType": "user",
                  "displayValue": "Test Lab User",
                },
                "eventUserId": 1038,
                "timestamp": Immutable.Map {
                  "value": "2020-04-09 18:57:36.941",
                  "formattedValue": "2020-04-09 18:57",
                },
                "eventTimestamp": 2020-04-09T18:57:36.941Z,
                "entity": Immutable.Map {
                  "value": 688,
                  "urlType": "workflow",
                  "displayValue": "job-3",
                },
                "entitySeparator": undefined,
                "metadata": Immutable.List [
                  Immutable.Map {
                    "field": "Job Name",
                    "value": Immutable.Map {
                      "value": 688,
                      "urlType": "workflow",
                      "displayValue": "job-3",
                    },
                  },
                  Immutable.Map {
                    "field": "Job Owner",
                    "value": Immutable.Map {
                      "value": 1038,
                      "urlType": "user",
                      "displayValue": "Test Lab User",
                    },
                  },
                  Immutable.Map {
                    "field": "Job Status",
                    "value": "In Progress",
                  },
                ],
                "oldData": undefined,
                "newData": undefined,
                "userComment": undefined,
              },
              Immutable.Record {
                "rowId": 547,
                "eventType": "workflow",
                "subEventType": undefined,
                "summary": "Removed from job",
                "user": Immutable.Map {
                  "value": 1038,
                  "urlType": "user",
                  "displayValue": "Test Lab User",
                },
                "eventUserId": 1038,
                "timestamp": Immutable.Map {
                  "value": "2020-04-09 19:57:36.941",
                  "formattedValue": "2020-04-09 19:57",
                },
                "eventTimestamp": 2020-04-09T19:57:36.941Z,
                "entity": Immutable.Map {
                  "value": 688,
                  "urlType": "workflow",
                  "displayValue": "job-3",
                },
                "entitySeparator": undefined,
                "metadata": Immutable.List [
                  Immutable.Map {
                    "field": "Job Name",
                    "value": Immutable.Map {
                      "value": 688,
                      "urlType": "workflow",
                      "displayValue": "job-3",
                    },
                  },
                  Immutable.Map {
                    "field": "Job Owner",
                    "value": Immutable.Map {
                      "value": 1038,
                      "urlType": "user",
                      "displayValue": "Test Lab User",
                    },
                  },
                  Immutable.Map {
                    "field": "Job Status",
                    "value": "In Progress",
                  },
                ],
                "oldData": undefined,
                "newData": undefined,
                "userComment": undefined,
              },
              Immutable.Record {
                "rowId": 548,
                "eventType": "workflow",
                "subEventType": undefined,
                "summary": "Completed job",
                "user": Immutable.Map {
                  "value": 1005,
                  "urlType": "user",
                  "displayValue": "Vader",
                },
                "eventUserId": 1005,
                "timestamp": Immutable.Map {
                  "value": "2020-04-09 20:57:36.941",
                  "formattedValue": "2020-04-09 20:57",
                },
                "eventTimestamp": 2020-04-09T20:57:36.941Z,
                "entity": Immutable.Map {
                  "value": 687,
                  "urlType": "workflow",
                  "displayValue": "job-1",
                },
                "entitySeparator": undefined,
                "metadata": Immutable.List [
                  Immutable.Map {
                    "field": "Job Name",
                    "value": Immutable.Map {
                      "value": 687,
                      "urlType": "workflow",
                      "displayValue": "job-1",
                    },
                  },
                  Immutable.Map {
                    "field": "Job Owner",
                    "value": Immutable.Map {
                      "value": 1005,
                      "urlType": "user",
                      "displayValue": "Vader",
                    },
                  },
                  Immutable.Map {
                    "field": "Job Status",
                    "value": "Completed",
                  },
                ],
                "oldData": undefined,
                "newData": undefined,
                "userComment": undefined,
              },
              Immutable.Record {
                "rowId": 1549,
                "eventType": "assays",
                "subEventType": undefined,
                "summary": "Assay Data Re-Import Run",
                "user": Immutable.Map {
                  "value": 1005,
                  "urlType": "user",
                  "displayValue": "Vader",
                },
                "eventUserId": 1005,
                "timestamp": Immutable.Map {
                  "value": "2020-04-09 23:57:36.941",
                  "formattedValue": "2020-04-09 23:57",
                },
                "eventTimestamp": 2020-04-09T23:57:36.941Z,
                "entity": Immutable.Map {
                  "value": Immutable.List [
                    "xlsx assay",
                    233,
                  ],
                  "urlType": "assayRun",
                  "displayValue": "XLSX Assay",
                },
                "entitySeparator": undefined,
                "metadata": Immutable.List [
                  Immutable.Map {
                    "field": "Assay",
                    "value": Immutable.Map {
                      "value": "xlsx assay",
                      "urlType": "assays",
                      "displayValue": "XLSX Assay",
                    },
                  },
                  Immutable.Map {
                    "field": "Assay ID",
                    "value": Immutable.Map {
                      "value": Immutable.List [
                        "xlsx assay",
                        233,
                      ],
                      "urlType": "assayRun",
                      "displayValue": "XLSX Assay_2019-10-16_11-54-56",
                    },
                  },
                  Immutable.Map {
                    "field": "Completed By",
                    "value": Immutable.Map {
                      "value": 1005,
                      "urlType": "user",
                      "displayValue": "Vader",
                    },
                  },
                  Immutable.Map {
                    "field": "Date",
                    "value": Immutable.Map {
                      "value": "2020-04-09 23:57:36.941",
                      "formattedValue": "2020-04-09 23:57",
                    },
                  },
                ],
                "oldData": undefined,
                "newData": undefined,
                "userComment": undefined,
              },
              Immutable.Record {
                "rowId": 550,
                "eventType": "workflow",
                "subEventType": undefined,
                "summary": "Added to job",
                "user": Immutable.Map {
                  "value": 1038,
                  "urlType": "user",
                  "displayValue": "Test Lab User",
                },
                "eventUserId": 1038,
                "timestamp": Immutable.Map {
                  "value": "2020-04-10 02:57:36.941",
                  "formattedValue": "2020-04-10 02:57",
                },
                "eventTimestamp": 2020-04-10T02:57:36.941Z,
                "entity": Immutable.Map {
                  "value": 689,
                  "urlType": "workflow",
                  "displayValue": "job-4",
                },
                "entitySeparator": undefined,
                "metadata": Immutable.List [
                  Immutable.Map {
                    "field": "Job Name",
                    "value": Immutable.Map {
                      "value": 689,
                      "urlType": "workflow",
                      "displayValue": "job-4",
                    },
                  },
                  Immutable.Map {
                    "field": "Job Owner",
                    "value": Immutable.Map {
                      "value": 1038,
                      "urlType": "user",
                      "displayValue": "Test Lab User",
                    },
                  },
                  Immutable.Map {
                    "field": "Job Status",
                    "value": "In Progress",
                  },
                ],
                "oldData": undefined,
                "newData": undefined,
                "userComment": undefined,
              },
            ]
          }
          onEventSelection={[MockFunction]}
          selectedEntityConnectionInfo={
            [
              {
                "firstEvent": Immutable.Record {
                  "rowId": 544,
                  "eventType": "workflow",
                  "subEventType": undefined,
                  "summary": "Added to job",
                  "user": Immutable.Map {
                    "value": 1005,
                    "urlType": "user",
                    "displayValue": "Vader",
                  },
                  "eventUserId": 1005,
                  "timestamp": Immutable.Map {
                    "value": "2020-04-04 22:57:36.941",
                    "formattedValue": "2020-04-04 22:57",
                  },
                  "eventTimestamp": 2020-04-04T22:57:36.941Z,
                  "entity": Immutable.Map {
                    "value": 687,
                    "urlType": "workflow",
                    "displayValue": "job-1",
                  },
                  "entitySeparator": undefined,
                  "metadata": Immutable.List [
                    Immutable.Map {
                      "field": "Job Name",
                      "value": Immutable.Map {
                        "value": 687,
                        "urlType": "workflow",
                        "displayValue": "job-1",
                      },
                    },
                    Immutable.Map {
                      "field": "Job Owner",
                      "value": Immutable.Map {
                        "value": 1005,
                        "urlType": "user",
                        "displayValue": "Vader",
                      },
                    },
                    Immutable.Map {
                      "field": "Job Status",
                      "value": "In Progress",
                    },
                  ],
                  "oldData": undefined,
                  "newData": undefined,
                  "userComment": undefined,
                },
                "isCompleted": true,
                "lastEvent": Immutable.Record {
                  "rowId": 548,
                  "eventType": "workflow",
                  "subEventType": undefined,
                  "summary": "Completed job",
                  "user": Immutable.Map {
                    "value": 1005,
                    "urlType": "user",
                    "displayValue": "Vader",
                  },
                  "eventUserId": 1005,
                  "timestamp": Immutable.Map {
                    "value": "2020-04-09 20:57:36.941",
                    "formattedValue": "2020-04-09 20:57",
                  },
                  "eventTimestamp": 2020-04-09T20:57:36.941Z,
                  "entity": Immutable.Map {
                    "value": 687,
                    "urlType": "workflow",
                    "displayValue": "job-1",
                  },
                  "entitySeparator": undefined,
                  "metadata": Immutable.List [
                    Immutable.Map {
                      "field": "Job Name",
                      "value": Immutable.Map {
                        "value": 687,
                        "urlType": "workflow",
                        "displayValue": "job-1",
                      },
                    },
                    Immutable.Map {
                      "field": "Job Owner",
                      "value": Immutable.Map {
                        "value": 1005,
                        "urlType": "user",
                        "displayValue": "Vader",
                      },
                    },
                    Immutable.Map {
                      "field": "Job Status",
                      "value": "Completed",
                    },
                  ],
                  "oldData": undefined,
                  "newData": undefined,
                  "userComment": undefined,
                },
              },
            ]
          }
          selectedEvent={
            Immutable.Record {
              "rowId": 548,
              "eventType": "workflow",
              "subEventType": undefined,
              "summary": "Completed job",
              "user": Immutable.Map {
                "value": 1005,
                "urlType": "user",
                "displayValue": "Vader",
              },
              "eventUserId": 1005,
              "timestamp": Immutable.Map {
                "value": "2020-04-09 20:57:36.941",
                "formattedValue": "2020-04-09 20:57",
              },
              "eventTimestamp": 2020-04-09T20:57:36.941Z,
              "entity": Immutable.Map {
                "value": 687,
                "urlType": "workflow",
                "displayValue": "job-1",
              },
              "entitySeparator": undefined,
              "metadata": Immutable.List [
                Immutable.Map {
                  "field": "Job Name",
                  "value": Immutable.Map {
                    "value": 687,
                    "urlType": "workflow",
                    "displayValue": "job-1",
                  },
                },
                Immutable.Map {
                  "field": "Job Owner",
                  "value": Immutable.Map {
                    "value": 1005,
                    "urlType": "user",
                    "displayValue": "Vader",
                  },
                },
                Immutable.Map {
                  "field": "Job Status",
                  "value": "Completed",
                },
              ],
              "oldData": undefined,
              "newData": undefined,
              "userComment": undefined,
            }
          }
          showRecentFirst={false}
        />
      </Col>
    </Row>
  </PanelBody>
</ForwardRef>
`;

exports[`<SampleEventListing/> With selected job that is completed and with filter by date 1`] = `
<ForwardRef>
  <PanelBody
    bsClass="panel"
    collapsible={false}
  >
    <div>
      <Row
        bsClass="row"
        componentClass="div"
      >
        <Col
          bsClass="col"
          className="font-large timeline-title"
          componentClass="div"
          xs={7}
        >
          Event Timeline for S-20200404-1
        </Col>
        <Col
          bsClass="col"
          componentClass="div"
          xs={5}
        >
          <span
            className="pull-right"
          >
            <DropdownButton
              className="button-right-spacing"
              id="job-tasks-comments-sort-btn"
              title="Show Oldest first"
            >
              <MenuItem
                active={true}
                bsClass="dropdown"
                disabled={false}
                divider={false}
                header={false}
                key="oldest"
                onClick={[Function]}
              >
                Oldest first
              </MenuItem>
              <MenuItem
                active={false}
                bsClass="dropdown"
                disabled={false}
                divider={false}
                header={false}
                key="recent"
                onClick={[Function]}
              >
                Recent first
              </MenuItem>
            </DropdownButton>
            <Tip
              caption="Export"
              trigger={
                [
                  "focus",
                  "hover",
                ]
              }
            >
              <Button
                active={false}
                block={false}
                bsClass="btn"
                bsStyle="default"
                disabled={false}
                onClick={[Function]}
              >
                <i
                  className="fa fa-download"
                />
              </Button>
            </Tip>
          </span>
        </Col>
      </Row>
      <hr />
    </div>
    <div>
      <ExpandableFilterToggle
        filterExpanded={true}
        hasFilter={true}
        panelCls="show-hide-filter-toggle"
        resetFilter={[Function]}
        toggleFilterPanel={[Function]}
      />
      <Row
        bsClass="row"
        className="top-spacing"
        componentClass="div"
      >
        <Col
          bsClass="col"
          componentClass="div"
          xs={3}
        >
          <div
            className="list__bold-text"
          >
            Filter Events: 
          </div>
          <Checkbox
            bsClass="checkbox"
            checked={false}
            disabled={false}
            inline={false}
            name="includeSampleEvent"
            onChange={[Function]}
            title=""
          >
            Sample Events
          </Checkbox>
          <Checkbox
            bsClass="checkbox"
            checked={false}
            disabled={false}
            inline={false}
            name="includeAssayEvent"
            onChange={[Function]}
            title=""
          >
            Assay Events
          </Checkbox>
          <Checkbox
            bsClass="checkbox"
            checked={false}
            disabled={false}
            inline={false}
            name="includeJobEvent"
            onChange={[Function]}
            title=""
          >
            Job Events
          </Checkbox>
          <Checkbox
            bsClass="checkbox"
            checked={false}
            disabled={false}
            inline={false}
            name="includeStorageEvent"
            onChange={[Function]}
            title=""
          >
            Storage Events
          </Checkbox>
        </Col>
        <Col
          bsClass="col"
          componentClass="div"
          xs={6}
        >
          <div
            className="list__bold-text"
          >
            Filter By: 
          </div>
          <Row
            bsClass="row"
            className="margin-top"
            componentClass="div"
          >
            <Col
              bsClass="col"
              className="bottom-spacing-less"
              componentClass="div"
              xs={3}
            >
              User:
               
            </Col>
            <Col
              bsClass="col"
              componentClass="div"
              xs={9}
            >
              <UserSelectInput
                containerClass="form-group row"
                inputClass="timeline-filter-user-input"
                key="filterCreatedBy"
                name="filterCreatedBy"
                notifyList={false}
                onChange={[Function]}
                permissions="org.labkey.api.security.permissions.ReadPermission"
                placeholder="Select User"
                useEmail={false}
              />
            </Col>
          </Row>
          <Row
            bsClass="row"
            componentClass="div"
          >
            <Col
              bsClass="col"
              className="bottom-spacing-less"
              componentClass="div"
              xs={3}
            >
              Date:
               
            </Col>
            <Col
              bsClass="col"
              componentClass="div"
              xs={4}
            >
              <r
                allowSameDay={false}
                autoComplete="off"
                className="form-control"
                customTimeInput={null}
                dateFormat="yyyy-MM-dd"
                dateFormatCalendar="LLLL yyyy"
                disabled={false}
                disabledKeyboardNavigation={false}
                dropdownMode="scroll"
                enableTabLoop={true}
                excludeScrollbar={true}
                focusSelectedMonth={false}
                isClearable={true}
                monthsShown={1}
                name="startDate"
                nextMonthAriaLabel="Next Month"
                nextMonthButtonLabel="Next Month"
                nextYearAriaLabel="Next Year"
                nextYearButtonLabel="Next Year"
                onBlur={[Function]}
                onCalendarClose={[Function]}
                onCalendarOpen={[Function]}
                onChange={[Function]}
                onClickOutside={[Function]}
                onFocus={[Function]}
                onInputClick={[Function]}
                onInputError={[Function]}
                onKeyDown={[Function]}
                onMonthChange={[Function]}
                onSelect={[Function]}
                onYearChange={[Function]}
                placeholderText="From"
                preventOpenOnFocus={false}
                previousMonthAriaLabel="Previous Month"
                previousMonthButtonLabel="Previous Month"
                previousYearAriaLabel="Previous Year"
                previousYearButtonLabel="Previous Year"
                readOnly={false}
                renderDayContents={[Function]}
                selected={2020-04-08T00:00:00.000Z}
                selectsDisabledDaysInRange={false}
                selectsStart={true}
                shouldCloseOnSelect={true}
                showFourColumnMonthYearPicker={false}
                showFullMonthYearPicker={false}
                showMonthYearPicker={false}
                showPopperArrow={true}
                showPreviousMonths={false}
                showQuarterYearPicker={false}
                showTimeInput={false}
                showTimeSelect={false}
                showTwoColumnMonthYearPicker={false}
                showYearPicker={false}
                startDate={2020-04-08T00:00:00.000Z}
                strictParsing={false}
                timeCaption="Time"
                timeInputLabel="Time"
                timeIntervals={30}
                withPortal={false}
                wrapperClassName="row"
                yearItemNumber={12}
              />
            </Col>
            <Col
              bsClass="col"
              componentClass="div"
              xs={5}
            >
              <Row
                bsClass="row"
                componentClass="div"
              >
                <Col
                  bsClass="col"
                  componentClass="div"
                  xs={3}
                />
                <Col
                  bsClass="col"
                  componentClass="div"
                  xs={9}
                >
                  <r
                    allowSameDay={false}
                    autoComplete="off"
                    className="form-control"
                    customTimeInput={null}
                    dateFormat="yyyy-MM-dd"
                    dateFormatCalendar="LLLL yyyy"
                    disabled={false}
                    disabledKeyboardNavigation={false}
                    dropdownMode="scroll"
                    enableTabLoop={true}
                    excludeScrollbar={true}
                    focusSelectedMonth={false}
                    isClearable={true}
                    minDate={2020-04-08T00:00:00.000Z}
                    monthsShown={1}
                    name="endDate"
                    nextMonthAriaLabel="Next Month"
                    nextMonthButtonLabel="Next Month"
                    nextYearAriaLabel="Next Year"
                    nextYearButtonLabel="Next Year"
                    onBlur={[Function]}
                    onCalendarClose={[Function]}
                    onCalendarOpen={[Function]}
                    onChange={[Function]}
                    onClickOutside={[Function]}
                    onFocus={[Function]}
                    onInputClick={[Function]}
                    onInputError={[Function]}
                    onKeyDown={[Function]}
                    onMonthChange={[Function]}
                    onSelect={[Function]}
                    onYearChange={[Function]}
                    placeholderText="To"
                    preventOpenOnFocus={false}
                    previousMonthAriaLabel="Previous Month"
                    previousMonthButtonLabel="Previous Month"
                    previousYearAriaLabel="Previous Year"
                    previousYearButtonLabel="Previous Year"
                    readOnly={false}
                    renderDayContents={[Function]}
                    selectsDisabledDaysInRange={false}
                    selectsEnd={true}
                    shouldCloseOnSelect={true}
                    showFourColumnMonthYearPicker={false}
                    showFullMonthYearPicker={false}
                    showMonthYearPicker={false}
                    showPopperArrow={true}
                    showPreviousMonths={false}
                    showQuarterYearPicker={false}
                    showTimeInput={false}
                    showTimeSelect={false}
                    showTwoColumnMonthYearPicker={false}
                    showYearPicker={false}
                    startDate={2020-04-08T00:00:00.000Z}
                    strictParsing={false}
                    timeCaption="Time"
                    timeInputLabel="Time"
                    timeIntervals={30}
                    withPortal={false}
                    wrapperClassName="row"
                    yearItemNumber={12}
                  />
                </Col>
              </Row>
            </Col>
          </Row>
        </Col>
        <Col
          bsClass="col"
          componentClass="div"
          xs={3}
        >
          <span
            className="pull-right timeline-filter-btn-group"
          >
            <Button
              active={false}
              block={false}
              bsClass="btn"
              bsStyle="default"
              disabled={false}
              onClick={[Function]}
            >
              Clear
            </Button>
            <span
              className="timeline-filter-btn-spacer"
            />
            <Button
              active={false}
              block={false}
              bsClass="btn"
              bsStyle="primary"
              className="timeline-filter-apply-btn"
              disabled={false}
              onClick={[Function]}
            >
              Apply
            </Button>
          </span>
        </Col>
      </Row>
      <hr />
    </div>
    <Row
      bsClass="row"
      componentClass="div"
    >
      <Col
        bsClass="col"
        className="timeline-container"
        componentClass="div"
        lg={12}
      >
        <TimelineView
          events={
            [
              Immutable.Record {
                "rowId": 1548,
                "eventType": "assays",
                "subEventType": undefined,
                "summary": "Assay Data Uploaded",
                "user": Immutable.Map {
                  "value": 1005,
                  "urlType": "user",
                  "displayValue": "Vader",
                },
                "eventUserId": 1005,
                "timestamp": Immutable.Map {
                  "value": "2020-04-08 22:57:36.941",
                  "formattedValue": "2020-04-08 22:57",
                },
                "eventTimestamp": 2020-04-08T22:57:36.941Z,
                "entity": Immutable.Map {
                  "value": "xlsx assay",
                  "urlType": "assays",
                  "displayValue": "XLSX Assay",
                },
                "entitySeparator": undefined,
                "metadata": Immutable.List [
                  Immutable.Map {
                    "field": "Assay",
                    "value": Immutable.Map {
                      "value": "xlsx assay",
                      "urlType": "assays",
                      "displayValue": "XLSX Assay",
                    },
                  },
                  Immutable.Map {
                    "field": "Completed By",
                    "value": Immutable.Map {
                      "value": 1005,
                      "urlType": "user",
                      "displayValue": "Vader",
                    },
                  },
                  Immutable.Map {
                    "field": "Date",
                    "value": Immutable.Map {
                      "value": "2020-04-08 21:57:36.941",
                      "formattedValue": "2020-04-08 21:57",
                    },
                  },
                ],
                "oldData": undefined,
                "newData": undefined,
                "userComment": undefined,
              },
              Immutable.Record {
                "rowId": 546,
                "eventType": "workflow",
                "subEventType": undefined,
                "summary": "Added to job",
                "user": Immutable.Map {
                  "value": 1038,
                  "urlType": "user",
                  "displayValue": "Test Lab User",
                },
                "eventUserId": 1038,
                "timestamp": Immutable.Map {
                  "value": "2020-04-09 18:57:36.941",
                  "formattedValue": "2020-04-09 18:57",
                },
                "eventTimestamp": 2020-04-09T18:57:36.941Z,
                "entity": Immutable.Map {
                  "value": 688,
                  "urlType": "workflow",
                  "displayValue": "job-3",
                },
                "entitySeparator": undefined,
                "metadata": Immutable.List [
                  Immutable.Map {
                    "field": "Job Name",
                    "value": Immutable.Map {
                      "value": 688,
                      "urlType": "workflow",
                      "displayValue": "job-3",
                    },
                  },
                  Immutable.Map {
                    "field": "Job Owner",
                    "value": Immutable.Map {
                      "value": 1038,
                      "urlType": "user",
                      "displayValue": "Test Lab User",
                    },
                  },
                  Immutable.Map {
                    "field": "Job Status",
                    "value": "In Progress",
                  },
                ],
                "oldData": undefined,
                "newData": undefined,
                "userComment": undefined,
              },
              Immutable.Record {
                "rowId": 547,
                "eventType": "workflow",
                "subEventType": undefined,
                "summary": "Removed from job",
                "user": Immutable.Map {
                  "value": 1038,
                  "urlType": "user",
                  "displayValue": "Test Lab User",
                },
                "eventUserId": 1038,
                "timestamp": Immutable.Map {
                  "value": "2020-04-09 19:57:36.941",
                  "formattedValue": "2020-04-09 19:57",
                },
                "eventTimestamp": 2020-04-09T19:57:36.941Z,
                "entity": Immutable.Map {
                  "value": 688,
                  "urlType": "workflow",
                  "displayValue": "job-3",
                },
                "entitySeparator": undefined,
                "metadata": Immutable.List [
                  Immutable.Map {
                    "field": "Job Name",
                    "value": Immutable.Map {
                      "value": 688,
                      "urlType": "workflow",
                      "displayValue": "job-3",
                    },
                  },
                  Immutable.Map {
                    "field": "Job Owner",
                    "value": Immutable.Map {
                      "value": 1038,
                      "urlType": "user",
                      "displayValue": "Test Lab User",
                    },
                  },
                  Immutable.Map {
                    "field": "Job Status",
                    "value": "In Progress",
                  },
                ],
                "oldData": undefined,
                "newData": undefined,
                "userComment": undefined,
              },
              Immutable.Record {
                "rowId": 548,
                "eventType": "workflow",
                "subEventType": undefined,
                "summary": "Completed job",
                "user": Immutable.Map {
                  "value": 1005,
                  "urlType": "user",
                  "displayValue": "Vader",
                },
                "eventUserId": 1005,
                "timestamp": Immutable.Map {
                  "value": "2020-04-09 20:57:36.941",
                  "formattedValue": "2020-04-09 20:57",
                },
                "eventTimestamp": 2020-04-09T20:57:36.941Z,
                "entity": Immutable.Map {
                  "value": 687,
                  "urlType": "workflow",
                  "displayValue": "job-1",
                },
                "entitySeparator": undefined,
                "metadata": Immutable.List [
                  Immutable.Map {
                    "field": "Job Name",
                    "value": Immutable.Map {
                      "value": 687,
                      "urlType": "workflow",
                      "displayValue": "job-1",
                    },
                  },
                  Immutable.Map {
                    "field": "Job Owner",
                    "value": Immutable.Map {
                      "value": 1005,
                      "urlType": "user",
                      "displayValue": "Vader",
                    },
                  },
                  Immutable.Map {
                    "field": "Job Status",
                    "value": "Completed",
                  },
                ],
                "oldData": undefined,
                "newData": undefined,
                "userComment": undefined,
              },
              Immutable.Record {
                "rowId": 1549,
                "eventType": "assays",
                "subEventType": undefined,
                "summary": "Assay Data Re-Import Run",
                "user": Immutable.Map {
                  "value": 1005,
                  "urlType": "user",
                  "displayValue": "Vader",
                },
                "eventUserId": 1005,
                "timestamp": Immutable.Map {
                  "value": "2020-04-09 23:57:36.941",
                  "formattedValue": "2020-04-09 23:57",
                },
                "eventTimestamp": 2020-04-09T23:57:36.941Z,
                "entity": Immutable.Map {
                  "value": Immutable.List [
                    "xlsx assay",
                    233,
                  ],
                  "urlType": "assayRun",
                  "displayValue": "XLSX Assay",
                },
                "entitySeparator": undefined,
                "metadata": Immutable.List [
                  Immutable.Map {
                    "field": "Assay",
                    "value": Immutable.Map {
                      "value": "xlsx assay",
                      "urlType": "assays",
                      "displayValue": "XLSX Assay",
                    },
                  },
                  Immutable.Map {
                    "field": "Assay ID",
                    "value": Immutable.Map {
                      "value": Immutable.List [
                        "xlsx assay",
                        233,
                      ],
                      "urlType": "assayRun",
                      "displayValue": "XLSX Assay_2019-10-16_11-54-56",
                    },
                  },
                  Immutable.Map {
                    "field": "Completed By",
                    "value": Immutable.Map {
                      "value": 1005,
                      "urlType": "user",
                      "displayValue": "Vader",
                    },
                  },
                  Immutable.Map {
                    "field": "Date",
                    "value": Immutable.Map {
                      "value": "2020-04-09 23:57:36.941",
                      "formattedValue": "2020-04-09 23:57",
                    },
                  },
                ],
                "oldData": undefined,
                "newData": undefined,
                "userComment": undefined,
              },
              Immutable.Record {
                "rowId": 550,
                "eventType": "workflow",
                "subEventType": undefined,
                "summary": "Added to job",
                "user": Immutable.Map {
                  "value": 1038,
                  "urlType": "user",
                  "displayValue": "Test Lab User",
                },
                "eventUserId": 1038,
                "timestamp": Immutable.Map {
                  "value": "2020-04-10 02:57:36.941",
                  "formattedValue": "2020-04-10 02:57",
                },
                "eventTimestamp": 2020-04-10T02:57:36.941Z,
                "entity": Immutable.Map {
                  "value": 689,
                  "urlType": "workflow",
                  "displayValue": "job-4",
                },
                "entitySeparator": undefined,
                "metadata": Immutable.List [
                  Immutable.Map {
                    "field": "Job Name",
                    "value": Immutable.Map {
                      "value": 689,
                      "urlType": "workflow",
                      "displayValue": "job-4",
                    },
                  },
                  Immutable.Map {
                    "field": "Job Owner",
                    "value": Immutable.Map {
                      "value": 1038,
                      "urlType": "user",
                      "displayValue": "Test Lab User",
                    },
                  },
                  Immutable.Map {
                    "field": "Job Status",
                    "value": "In Progress",
                  },
                ],
                "oldData": undefined,
                "newData": undefined,
                "userComment": undefined,
              },
            ]
          }
          onEventSelection={[MockFunction]}
          selectedEntityConnectionInfo={
            [
              {
                "firstEvent": Immutable.Record {
                  "rowId": 544,
                  "eventType": "workflow",
                  "subEventType": undefined,
                  "summary": "Added to job",
                  "user": Immutable.Map {
                    "value": 1005,
                    "urlType": "user",
                    "displayValue": "Vader",
                  },
                  "eventUserId": 1005,
                  "timestamp": Immutable.Map {
                    "value": "2020-04-04 22:57:36.941",
                    "formattedValue": "2020-04-04 22:57",
                  },
                  "eventTimestamp": 2020-04-04T22:57:36.941Z,
                  "entity": Immutable.Map {
                    "value": 687,
                    "urlType": "workflow",
                    "displayValue": "job-1",
                  },
                  "entitySeparator": undefined,
                  "metadata": Immutable.List [
                    Immutable.Map {
                      "field": "Job Name",
                      "value": Immutable.Map {
                        "value": 687,
                        "urlType": "workflow",
                        "displayValue": "job-1",
                      },
                    },
                    Immutable.Map {
                      "field": "Job Owner",
                      "value": Immutable.Map {
                        "value": 1005,
                        "urlType": "user",
                        "displayValue": "Vader",
                      },
                    },
                    Immutable.Map {
                      "field": "Job Status",
                      "value": "In Progress",
                    },
                  ],
                  "oldData": undefined,
                  "newData": undefined,
                  "userComment": undefined,
                },
                "isCompleted": true,
                "lastEvent": Immutable.Record {
                  "rowId": 548,
                  "eventType": "workflow",
                  "subEventType": undefined,
                  "summary": "Completed job",
                  "user": Immutable.Map {
                    "value": 1005,
                    "urlType": "user",
                    "displayValue": "Vader",
                  },
                  "eventUserId": 1005,
                  "timestamp": Immutable.Map {
                    "value": "2020-04-09 20:57:36.941",
                    "formattedValue": "2020-04-09 20:57",
                  },
                  "eventTimestamp": 2020-04-09T20:57:36.941Z,
                  "entity": Immutable.Map {
                    "value": 687,
                    "urlType": "workflow",
                    "displayValue": "job-1",
                  },
                  "entitySeparator": undefined,
                  "metadata": Immutable.List [
                    Immutable.Map {
                      "field": "Job Name",
                      "value": Immutable.Map {
                        "value": 687,
                        "urlType": "workflow",
                        "displayValue": "job-1",
                      },
                    },
                    Immutable.Map {
                      "field": "Job Owner",
                      "value": Immutable.Map {
                        "value": 1005,
                        "urlType": "user",
                        "displayValue": "Vader",
                      },
                    },
                    Immutable.Map {
                      "field": "Job Status",
                      "value": "Completed",
                    },
                  ],
                  "oldData": undefined,
                  "newData": undefined,
                  "userComment": undefined,
                },
              },
            ]
          }
          selectedEvent={
            Immutable.Record {
              "rowId": 548,
              "eventType": "workflow",
              "subEventType": undefined,
              "summary": "Completed job",
              "user": Immutable.Map {
                "value": 1005,
                "urlType": "user",
                "displayValue": "Vader",
              },
              "eventUserId": 1005,
              "timestamp": Immutable.Map {
                "value": "2020-04-09 20:57:36.941",
                "formattedValue": "2020-04-09 20:57",
              },
              "eventTimestamp": 2020-04-09T20:57:36.941Z,
              "entity": Immutable.Map {
                "value": 687,
                "urlType": "workflow",
                "displayValue": "job-1",
              },
              "entitySeparator": undefined,
              "metadata": Immutable.List [
                Immutable.Map {
                  "field": "Job Name",
                  "value": Immutable.Map {
                    "value": 687,
                    "urlType": "workflow",
                    "displayValue": "job-1",
                  },
                },
                Immutable.Map {
                  "field": "Job Owner",
                  "value": Immutable.Map {
                    "value": 1005,
                    "urlType": "user",
                    "displayValue": "Vader",
                  },
                },
                Immutable.Map {
                  "field": "Job Status",
                  "value": "Completed",
                },
              ],
              "oldData": undefined,
              "newData": undefined,
              "userComment": undefined,
            }
          }
          showRecentFirst={false}
        />
      </Col>
    </Row>
  </PanelBody>
</ForwardRef>
`;

exports[`<SampleEventListing/> With selected job that is not completed and has no related job events 1`] = `
<ForwardRef>
  <PanelBody
    bsClass="panel"
    collapsible={false}
  >
    <div>
      <Row
        bsClass="row"
        componentClass="div"
      >
        <Col
          bsClass="col"
          className="font-large timeline-title"
          componentClass="div"
          xs={7}
        >
          Event Timeline for S-20200404-1
        </Col>
        <Col
          bsClass="col"
          componentClass="div"
          xs={5}
        >
          <span
            className="pull-right"
          >
            <DropdownButton
              className="button-right-spacing"
              id="job-tasks-comments-sort-btn"
              title="Show Oldest first"
            >
              <MenuItem
                active={true}
                bsClass="dropdown"
                disabled={false}
                divider={false}
                header={false}
                key="oldest"
                onClick={[Function]}
              >
                Oldest first
              </MenuItem>
              <MenuItem
                active={false}
                bsClass="dropdown"
                disabled={false}
                divider={false}
                header={false}
                key="recent"
                onClick={[Function]}
              >
                Recent first
              </MenuItem>
            </DropdownButton>
            <Tip
              caption="Export"
              trigger={
                [
                  "focus",
                  "hover",
                ]
              }
            >
              <Button
                active={false}
                block={false}
                bsClass="btn"
                bsStyle="default"
                disabled={false}
                onClick={[Function]}
              >
                <i
                  className="fa fa-download"
                />
              </Button>
            </Tip>
          </span>
        </Col>
      </Row>
      <hr />
    </div>
    <div>
      <ExpandableFilterToggle
        filterExpanded={false}
        hasFilter={false}
        panelCls="show-hide-filter-toggle"
        resetFilter={[Function]}
        toggleFilterPanel={[Function]}
      />
      <hr />
    </div>
    <Row
      bsClass="row"
      componentClass="div"
    >
      <Col
        bsClass="col"
        className="timeline-container"
        componentClass="div"
        lg={12}
      >
        <TimelineView
          events={
            [
              Immutable.Record {
                "rowId": 462022,
                "eventType": "samples",
                "subEventType": undefined,
                "summary": "Sample Registered",
                "user": Immutable.Map {
                  "value": 1005,
                  "urlType": "user",
                  "displayValue": "Vader",
                },
                "eventUserId": 1005,
                "timestamp": Immutable.Map {
                  "value": "2020-04-04 21:57:36.941",
                  "formattedValue": "2020-04-04 21:57",
                },
                "eventTimestamp": 2020-04-04T21:57:36.941Z,
                "entity": undefined,
                "entitySeparator": undefined,
                "metadata": undefined,
                "oldData": Immutable.Map {},
                "newData": Immutable.Map {
                  "ModifiedBy": "1005",
                  "LSID": "urn:lsid:labkey.com:Sample.101.test2:S-20200404-1",
                  "_rowNumber": "1",
                  "Created": "2020-04-04T21:56:54.637-07:00",
                  "Modified": "2020-04-04T21:56:54.637-07:00",
                  "genId": "7",
                  "Name": "S-20200404-1",
                  "Folder": "fac9522f-d271-1037-ab94-32fda5aa448a",
                  "MaterialInputs/Test": "abc",
                  "RowId": "86873",
                  "cpasType": "urn:lsid:labkey.com:SampleSet.Folder-101:test2",
                  "Description": "des",
                  "CreatedBy": "1005",
                },
                "userComment": undefined,
              },
              Immutable.Record {
                "rowId": 544,
                "eventType": "workflow",
                "subEventType": undefined,
                "summary": "Added to job",
                "user": Immutable.Map {
                  "value": 1005,
                  "urlType": "user",
                  "displayValue": "Vader",
                },
                "eventUserId": 1005,
                "timestamp": Immutable.Map {
                  "value": "2020-04-04 22:57:36.941",
                  "formattedValue": "2020-04-04 22:57",
                },
                "eventTimestamp": 2020-04-04T22:57:36.941Z,
                "entity": Immutable.Map {
                  "value": 687,
                  "urlType": "workflow",
                  "displayValue": "job-1",
                },
                "entitySeparator": undefined,
                "metadata": Immutable.List [
                  Immutable.Map {
                    "field": "Job Name",
                    "value": Immutable.Map {
                      "value": 687,
                      "urlType": "workflow",
                      "displayValue": "job-1",
                    },
                  },
                  Immutable.Map {
                    "field": "Job Owner",
                    "value": Immutable.Map {
                      "value": 1005,
                      "urlType": "user",
                      "displayValue": "Vader",
                    },
                  },
                  Immutable.Map {
                    "field": "Job Status",
                    "value": "In Progress",
                  },
                ],
                "oldData": undefined,
                "newData": undefined,
                "userComment": undefined,
              },
              Immutable.Record {
                "rowId": 462023,
                "eventType": "samples",
                "subEventType": undefined,
                "summary": "Sample updated",
                "user": Immutable.Map {
                  "value": 1005,
                  "urlType": "user",
                  "displayValue": "Vader",
                },
                "eventUserId": 1005,
                "timestamp": Immutable.Map {
                  "value": "2020-04-05 21:57:36.941",
                  "formattedValue": "2020-04-05 21:57",
                },
                "eventTimestamp": 2020-04-05T21:57:36.941Z,
                "entity": undefined,
                "entitySeparator": undefined,
                "metadata": undefined,
                "oldData": Immutable.Map {
                  "description": "des",
                  "modified": "2020-04-05T21:56:54.584-07:00",
                },
                "newData": Immutable.Map {
                  "description": "desc",
                  "modified": "2020-04-05T21:57:36.915-07:00",
                },
                "userComment": undefined,
              },
              Immutable.Record {
                "rowId": 1548,
                "eventType": "assays",
                "subEventType": undefined,
                "summary": "Assay Data Uploaded",
                "user": Immutable.Map {
                  "value": 1005,
                  "urlType": "user",
                  "displayValue": "Vader",
                },
                "eventUserId": 1005,
                "timestamp": Immutable.Map {
                  "value": "2020-04-08 22:57:36.941",
                  "formattedValue": "2020-04-08 22:57",
                },
                "eventTimestamp": 2020-04-08T22:57:36.941Z,
                "entity": Immutable.Map {
                  "value": "xlsx assay",
                  "urlType": "assays",
                  "displayValue": "XLSX Assay",
                },
                "entitySeparator": undefined,
                "metadata": Immutable.List [
                  Immutable.Map {
                    "field": "Assay",
                    "value": Immutable.Map {
                      "value": "xlsx assay",
                      "urlType": "assays",
                      "displayValue": "XLSX Assay",
                    },
                  },
                  Immutable.Map {
                    "field": "Completed By",
                    "value": Immutable.Map {
                      "value": 1005,
                      "urlType": "user",
                      "displayValue": "Vader",
                    },
                  },
                  Immutable.Map {
                    "field": "Date",
                    "value": Immutable.Map {
                      "value": "2020-04-08 21:57:36.941",
                      "formattedValue": "2020-04-08 21:57",
                    },
                  },
                ],
                "oldData": undefined,
                "newData": undefined,
                "userComment": undefined,
              },
              Immutable.Record {
                "rowId": 546,
                "eventType": "workflow",
                "subEventType": undefined,
                "summary": "Added to job",
                "user": Immutable.Map {
                  "value": 1038,
                  "urlType": "user",
                  "displayValue": "Test Lab User",
                },
                "eventUserId": 1038,
                "timestamp": Immutable.Map {
                  "value": "2020-04-09 18:57:36.941",
                  "formattedValue": "2020-04-09 18:57",
                },
                "eventTimestamp": 2020-04-09T18:57:36.941Z,
                "entity": Immutable.Map {
                  "value": 688,
                  "urlType": "workflow",
                  "displayValue": "job-3",
                },
                "entitySeparator": undefined,
                "metadata": Immutable.List [
                  Immutable.Map {
                    "field": "Job Name",
                    "value": Immutable.Map {
                      "value": 688,
                      "urlType": "workflow",
                      "displayValue": "job-3",
                    },
                  },
                  Immutable.Map {
                    "field": "Job Owner",
                    "value": Immutable.Map {
                      "value": 1038,
                      "urlType": "user",
                      "displayValue": "Test Lab User",
                    },
                  },
                  Immutable.Map {
                    "field": "Job Status",
                    "value": "In Progress",
                  },
                ],
                "oldData": undefined,
                "newData": undefined,
                "userComment": undefined,
              },
              Immutable.Record {
                "rowId": 547,
                "eventType": "workflow",
                "subEventType": undefined,
                "summary": "Removed from job",
                "user": Immutable.Map {
                  "value": 1038,
                  "urlType": "user",
                  "displayValue": "Test Lab User",
                },
                "eventUserId": 1038,
                "timestamp": Immutable.Map {
                  "value": "2020-04-09 19:57:36.941",
                  "formattedValue": "2020-04-09 19:57",
                },
                "eventTimestamp": 2020-04-09T19:57:36.941Z,
                "entity": Immutable.Map {
                  "value": 688,
                  "urlType": "workflow",
                  "displayValue": "job-3",
                },
                "entitySeparator": undefined,
                "metadata": Immutable.List [
                  Immutable.Map {
                    "field": "Job Name",
                    "value": Immutable.Map {
                      "value": 688,
                      "urlType": "workflow",
                      "displayValue": "job-3",
                    },
                  },
                  Immutable.Map {
                    "field": "Job Owner",
                    "value": Immutable.Map {
                      "value": 1038,
                      "urlType": "user",
                      "displayValue": "Test Lab User",
                    },
                  },
                  Immutable.Map {
                    "field": "Job Status",
                    "value": "In Progress",
                  },
                ],
                "oldData": undefined,
                "newData": undefined,
                "userComment": undefined,
              },
              Immutable.Record {
                "rowId": 548,
                "eventType": "workflow",
                "subEventType": undefined,
                "summary": "Completed job",
                "user": Immutable.Map {
                  "value": 1005,
                  "urlType": "user",
                  "displayValue": "Vader",
                },
                "eventUserId": 1005,
                "timestamp": Immutable.Map {
                  "value": "2020-04-09 20:57:36.941",
                  "formattedValue": "2020-04-09 20:57",
                },
                "eventTimestamp": 2020-04-09T20:57:36.941Z,
                "entity": Immutable.Map {
                  "value": 687,
                  "urlType": "workflow",
                  "displayValue": "job-1",
                },
                "entitySeparator": undefined,
                "metadata": Immutable.List [
                  Immutable.Map {
                    "field": "Job Name",
                    "value": Immutable.Map {
                      "value": 687,
                      "urlType": "workflow",
                      "displayValue": "job-1",
                    },
                  },
                  Immutable.Map {
                    "field": "Job Owner",
                    "value": Immutable.Map {
                      "value": 1005,
                      "urlType": "user",
                      "displayValue": "Vader",
                    },
                  },
                  Immutable.Map {
                    "field": "Job Status",
                    "value": "Completed",
                  },
                ],
                "oldData": undefined,
                "newData": undefined,
                "userComment": undefined,
              },
              Immutable.Record {
                "rowId": 1549,
                "eventType": "assays",
                "subEventType": undefined,
                "summary": "Assay Data Re-Import Run",
                "user": Immutable.Map {
                  "value": 1005,
                  "urlType": "user",
                  "displayValue": "Vader",
                },
                "eventUserId": 1005,
                "timestamp": Immutable.Map {
                  "value": "2020-04-09 23:57:36.941",
                  "formattedValue": "2020-04-09 23:57",
                },
                "eventTimestamp": 2020-04-09T23:57:36.941Z,
                "entity": Immutable.Map {
                  "value": Immutable.List [
                    "xlsx assay",
                    233,
                  ],
                  "urlType": "assayRun",
                  "displayValue": "XLSX Assay",
                },
                "entitySeparator": undefined,
                "metadata": Immutable.List [
                  Immutable.Map {
                    "field": "Assay",
                    "value": Immutable.Map {
                      "value": "xlsx assay",
                      "urlType": "assays",
                      "displayValue": "XLSX Assay",
                    },
                  },
                  Immutable.Map {
                    "field": "Assay ID",
                    "value": Immutable.Map {
                      "value": Immutable.List [
                        "xlsx assay",
                        233,
                      ],
                      "urlType": "assayRun",
                      "displayValue": "XLSX Assay_2019-10-16_11-54-56",
                    },
                  },
                  Immutable.Map {
                    "field": "Completed By",
                    "value": Immutable.Map {
                      "value": 1005,
                      "urlType": "user",
                      "displayValue": "Vader",
                    },
                  },
                  Immutable.Map {
                    "field": "Date",
                    "value": Immutable.Map {
                      "value": "2020-04-09 23:57:36.941",
                      "formattedValue": "2020-04-09 23:57",
                    },
                  },
                ],
                "oldData": undefined,
                "newData": undefined,
                "userComment": undefined,
              },
              Immutable.Record {
                "rowId": 550,
                "eventType": "workflow",
                "subEventType": undefined,
                "summary": "Added to job",
                "user": Immutable.Map {
                  "value": 1038,
                  "urlType": "user",
                  "displayValue": "Test Lab User",
                },
                "eventUserId": 1038,
                "timestamp": Immutable.Map {
                  "value": "2020-04-10 02:57:36.941",
                  "formattedValue": "2020-04-10 02:57",
                },
                "eventTimestamp": 2020-04-10T02:57:36.941Z,
                "entity": Immutable.Map {
                  "value": 689,
                  "urlType": "workflow",
                  "displayValue": "job-4",
                },
                "entitySeparator": undefined,
                "metadata": Immutable.List [
                  Immutable.Map {
                    "field": "Job Name",
                    "value": Immutable.Map {
                      "value": 689,
                      "urlType": "workflow",
                      "displayValue": "job-4",
                    },
                  },
                  Immutable.Map {
                    "field": "Job Owner",
                    "value": Immutable.Map {
                      "value": 1038,
                      "urlType": "user",
                      "displayValue": "Test Lab User",
                    },
                  },
                  Immutable.Map {
                    "field": "Job Status",
                    "value": "In Progress",
                  },
                ],
                "oldData": undefined,
                "newData": undefined,
                "userComment": undefined,
              },
            ]
          }
          onEventSelection={[MockFunction]}
          selectedEntityConnectionInfo={
            [
              {
                "firstEvent": Immutable.Record {
                  "rowId": 550,
                  "eventType": "workflow",
                  "subEventType": undefined,
                  "summary": "Added to job",
                  "user": Immutable.Map {
                    "value": 1038,
                    "urlType": "user",
                    "displayValue": "Test Lab User",
                  },
                  "eventUserId": 1038,
                  "timestamp": Immutable.Map {
                    "value": "2020-04-10 02:57:36.941",
                    "formattedValue": "2020-04-10 02:57",
                  },
                  "eventTimestamp": 2020-04-10T02:57:36.941Z,
                  "entity": Immutable.Map {
                    "value": 689,
                    "urlType": "workflow",
                    "displayValue": "job-4",
                  },
                  "entitySeparator": undefined,
                  "metadata": Immutable.List [
                    Immutable.Map {
                      "field": "Job Name",
                      "value": Immutable.Map {
                        "value": 689,
                        "urlType": "workflow",
                        "displayValue": "job-4",
                      },
                    },
                    Immutable.Map {
                      "field": "Job Owner",
                      "value": Immutable.Map {
                        "value": 1038,
                        "urlType": "user",
                        "displayValue": "Test Lab User",
                      },
                    },
                    Immutable.Map {
                      "field": "Job Status",
                      "value": "In Progress",
                    },
                  ],
                  "oldData": undefined,
                  "newData": undefined,
                  "userComment": undefined,
                },
                "isCompleted": false,
                "lastEvent": undefined,
              },
            ]
          }
          selectedEvent={
            Immutable.Record {
              "rowId": 550,
              "eventType": "workflow",
              "subEventType": undefined,
              "summary": "Added to job",
              "user": Immutable.Map {
                "value": 1038,
                "urlType": "user",
                "displayValue": "Test Lab User",
              },
              "eventUserId": 1038,
              "timestamp": Immutable.Map {
                "value": "2020-04-10 02:57:36.941",
                "formattedValue": "2020-04-10 02:57",
              },
              "eventTimestamp": 2020-04-10T02:57:36.941Z,
              "entity": Immutable.Map {
                "value": 689,
                "urlType": "workflow",
                "displayValue": "job-4",
              },
              "entitySeparator": undefined,
              "metadata": Immutable.List [
                Immutable.Map {
                  "field": "Job Name",
                  "value": Immutable.Map {
                    "value": 689,
                    "urlType": "workflow",
                    "displayValue": "job-4",
                  },
                },
                Immutable.Map {
                  "field": "Job Owner",
                  "value": Immutable.Map {
                    "value": 1038,
                    "urlType": "user",
                    "displayValue": "Test Lab User",
                  },
                },
                Immutable.Map {
                  "field": "Job Status",
                  "value": "In Progress",
                },
              ],
              "oldData": undefined,
              "newData": undefined,
              "userComment": undefined,
            }
          }
          showRecentFirst={false}
        />
      </Col>
    </Row>
  </PanelBody>
</ForwardRef>
`;

exports[`<SampleEventListing/> With selected job that is not completed but has related job events 1`] = `
<ForwardRef>
  <PanelBody
    bsClass="panel"
    collapsible={false}
  >
    <div>
      <Row
        bsClass="row"
        componentClass="div"
      >
        <Col
          bsClass="col"
          className="font-large timeline-title"
          componentClass="div"
          xs={7}
        >
          Event Timeline for S-20200404-1
        </Col>
        <Col
          bsClass="col"
          componentClass="div"
          xs={5}
        >
          <span
            className="pull-right"
          >
            <DropdownButton
              className="button-right-spacing"
              id="job-tasks-comments-sort-btn"
              title="Show Oldest first"
            >
              <MenuItem
                active={true}
                bsClass="dropdown"
                disabled={false}
                divider={false}
                header={false}
                key="oldest"
                onClick={[Function]}
              >
                Oldest first
              </MenuItem>
              <MenuItem
                active={false}
                bsClass="dropdown"
                disabled={false}
                divider={false}
                header={false}
                key="recent"
                onClick={[Function]}
              >
                Recent first
              </MenuItem>
            </DropdownButton>
            <Tip
              caption="Export"
              trigger={
                [
                  "focus",
                  "hover",
                ]
              }
            >
              <Button
                active={false}
                block={false}
                bsClass="btn"
                bsStyle="default"
                disabled={false}
                onClick={[Function]}
              >
                <i
                  className="fa fa-download"
                />
              </Button>
            </Tip>
          </span>
        </Col>
      </Row>
      <hr />
    </div>
    <div>
      <ExpandableFilterToggle
        filterExpanded={false}
        hasFilter={false}
        panelCls="show-hide-filter-toggle"
        resetFilter={[Function]}
        toggleFilterPanel={[Function]}
      />
      <hr />
    </div>
    <Row
      bsClass="row"
      componentClass="div"
    >
      <Col
        bsClass="col"
        className="timeline-container"
        componentClass="div"
        lg={12}
      >
        <TimelineView
          events={
            [
              Immutable.Record {
                "rowId": 462022,
                "eventType": "samples",
                "subEventType": undefined,
                "summary": "Sample Registered",
                "user": Immutable.Map {
                  "value": 1005,
                  "urlType": "user",
                  "displayValue": "Vader",
                },
                "eventUserId": 1005,
                "timestamp": Immutable.Map {
                  "value": "2020-04-04 21:57:36.941",
                  "formattedValue": "2020-04-04 21:57",
                },
                "eventTimestamp": 2020-04-04T21:57:36.941Z,
                "entity": undefined,
                "entitySeparator": undefined,
                "metadata": undefined,
                "oldData": Immutable.Map {},
                "newData": Immutable.Map {
                  "ModifiedBy": "1005",
                  "LSID": "urn:lsid:labkey.com:Sample.101.test2:S-20200404-1",
                  "_rowNumber": "1",
                  "Created": "2020-04-04T21:56:54.637-07:00",
                  "Modified": "2020-04-04T21:56:54.637-07:00",
                  "genId": "7",
                  "Name": "S-20200404-1",
                  "Folder": "fac9522f-d271-1037-ab94-32fda5aa448a",
                  "MaterialInputs/Test": "abc",
                  "RowId": "86873",
                  "cpasType": "urn:lsid:labkey.com:SampleSet.Folder-101:test2",
                  "Description": "des",
                  "CreatedBy": "1005",
                },
                "userComment": undefined,
              },
              Immutable.Record {
                "rowId": 544,
                "eventType": "workflow",
                "subEventType": undefined,
                "summary": "Added to job",
                "user": Immutable.Map {
                  "value": 1005,
                  "urlType": "user",
                  "displayValue": "Vader",
                },
                "eventUserId": 1005,
                "timestamp": Immutable.Map {
                  "value": "2020-04-04 22:57:36.941",
                  "formattedValue": "2020-04-04 22:57",
                },
                "eventTimestamp": 2020-04-04T22:57:36.941Z,
                "entity": Immutable.Map {
                  "value": 687,
                  "urlType": "workflow",
                  "displayValue": "job-1",
                },
                "entitySeparator": undefined,
                "metadata": Immutable.List [
                  Immutable.Map {
                    "field": "Job Name",
                    "value": Immutable.Map {
                      "value": 687,
                      "urlType": "workflow",
                      "displayValue": "job-1",
                    },
                  },
                  Immutable.Map {
                    "field": "Job Owner",
                    "value": Immutable.Map {
                      "value": 1005,
                      "urlType": "user",
                      "displayValue": "Vader",
                    },
                  },
                  Immutable.Map {
                    "field": "Job Status",
                    "value": "In Progress",
                  },
                ],
                "oldData": undefined,
                "newData": undefined,
                "userComment": undefined,
              },
              Immutable.Record {
                "rowId": 462023,
                "eventType": "samples",
                "subEventType": undefined,
                "summary": "Sample updated",
                "user": Immutable.Map {
                  "value": 1005,
                  "urlType": "user",
                  "displayValue": "Vader",
                },
                "eventUserId": 1005,
                "timestamp": Immutable.Map {
                  "value": "2020-04-05 21:57:36.941",
                  "formattedValue": "2020-04-05 21:57",
                },
                "eventTimestamp": 2020-04-05T21:57:36.941Z,
                "entity": undefined,
                "entitySeparator": undefined,
                "metadata": undefined,
                "oldData": Immutable.Map {
                  "description": "des",
                  "modified": "2020-04-05T21:56:54.584-07:00",
                },
                "newData": Immutable.Map {
                  "description": "desc",
                  "modified": "2020-04-05T21:57:36.915-07:00",
                },
                "userComment": undefined,
              },
              Immutable.Record {
                "rowId": 1548,
                "eventType": "assays",
                "subEventType": undefined,
                "summary": "Assay Data Uploaded",
                "user": Immutable.Map {
                  "value": 1005,
                  "urlType": "user",
                  "displayValue": "Vader",
                },
                "eventUserId": 1005,
                "timestamp": Immutable.Map {
                  "value": "2020-04-08 22:57:36.941",
                  "formattedValue": "2020-04-08 22:57",
                },
                "eventTimestamp": 2020-04-08T22:57:36.941Z,
                "entity": Immutable.Map {
                  "value": "xlsx assay",
                  "urlType": "assays",
                  "displayValue": "XLSX Assay",
                },
                "entitySeparator": undefined,
                "metadata": Immutable.List [
                  Immutable.Map {
                    "field": "Assay",
                    "value": Immutable.Map {
                      "value": "xlsx assay",
                      "urlType": "assays",
                      "displayValue": "XLSX Assay",
                    },
                  },
                  Immutable.Map {
                    "field": "Completed By",
                    "value": Immutable.Map {
                      "value": 1005,
                      "urlType": "user",
                      "displayValue": "Vader",
                    },
                  },
                  Immutable.Map {
                    "field": "Date",
                    "value": Immutable.Map {
                      "value": "2020-04-08 21:57:36.941",
                      "formattedValue": "2020-04-08 21:57",
                    },
                  },
                ],
                "oldData": undefined,
                "newData": undefined,
                "userComment": undefined,
              },
              Immutable.Record {
                "rowId": 546,
                "eventType": "workflow",
                "subEventType": undefined,
                "summary": "Added to job",
                "user": Immutable.Map {
                  "value": 1038,
                  "urlType": "user",
                  "displayValue": "Test Lab User",
                },
                "eventUserId": 1038,
                "timestamp": Immutable.Map {
                  "value": "2020-04-09 18:57:36.941",
                  "formattedValue": "2020-04-09 18:57",
                },
                "eventTimestamp": 2020-04-09T18:57:36.941Z,
                "entity": Immutable.Map {
                  "value": 688,
                  "urlType": "workflow",
                  "displayValue": "job-3",
                },
                "entitySeparator": undefined,
                "metadata": Immutable.List [
                  Immutable.Map {
                    "field": "Job Name",
                    "value": Immutable.Map {
                      "value": 688,
                      "urlType": "workflow",
                      "displayValue": "job-3",
                    },
                  },
                  Immutable.Map {
                    "field": "Job Owner",
                    "value": Immutable.Map {
                      "value": 1038,
                      "urlType": "user",
                      "displayValue": "Test Lab User",
                    },
                  },
                  Immutable.Map {
                    "field": "Job Status",
                    "value": "In Progress",
                  },
                ],
                "oldData": undefined,
                "newData": undefined,
                "userComment": undefined,
              },
              Immutable.Record {
                "rowId": 547,
                "eventType": "workflow",
                "subEventType": undefined,
                "summary": "Removed from job",
                "user": Immutable.Map {
                  "value": 1038,
                  "urlType": "user",
                  "displayValue": "Test Lab User",
                },
                "eventUserId": 1038,
                "timestamp": Immutable.Map {
                  "value": "2020-04-09 19:57:36.941",
                  "formattedValue": "2020-04-09 19:57",
                },
                "eventTimestamp": 2020-04-09T19:57:36.941Z,
                "entity": Immutable.Map {
                  "value": 688,
                  "urlType": "workflow",
                  "displayValue": "job-3",
                },
                "entitySeparator": undefined,
                "metadata": Immutable.List [
                  Immutable.Map {
                    "field": "Job Name",
                    "value": Immutable.Map {
                      "value": 688,
                      "urlType": "workflow",
                      "displayValue": "job-3",
                    },
                  },
                  Immutable.Map {
                    "field": "Job Owner",
                    "value": Immutable.Map {
                      "value": 1038,
                      "urlType": "user",
                      "displayValue": "Test Lab User",
                    },
                  },
                  Immutable.Map {
                    "field": "Job Status",
                    "value": "In Progress",
                  },
                ],
                "oldData": undefined,
                "newData": undefined,
                "userComment": undefined,
              },
              Immutable.Record {
                "rowId": 548,
                "eventType": "workflow",
                "subEventType": undefined,
                "summary": "Completed job",
                "user": Immutable.Map {
                  "value": 1005,
                  "urlType": "user",
                  "displayValue": "Vader",
                },
                "eventUserId": 1005,
                "timestamp": Immutable.Map {
                  "value": "2020-04-09 20:57:36.941",
                  "formattedValue": "2020-04-09 20:57",
                },
                "eventTimestamp": 2020-04-09T20:57:36.941Z,
                "entity": Immutable.Map {
                  "value": 687,
                  "urlType": "workflow",
                  "displayValue": "job-1",
                },
                "entitySeparator": undefined,
                "metadata": Immutable.List [
                  Immutable.Map {
                    "field": "Job Name",
                    "value": Immutable.Map {
                      "value": 687,
                      "urlType": "workflow",
                      "displayValue": "job-1",
                    },
                  },
                  Immutable.Map {
                    "field": "Job Owner",
                    "value": Immutable.Map {
                      "value": 1005,
                      "urlType": "user",
                      "displayValue": "Vader",
                    },
                  },
                  Immutable.Map {
                    "field": "Job Status",
                    "value": "Completed",
                  },
                ],
                "oldData": undefined,
                "newData": undefined,
                "userComment": undefined,
              },
              Immutable.Record {
                "rowId": 1549,
                "eventType": "assays",
                "subEventType": undefined,
                "summary": "Assay Data Re-Import Run",
                "user": Immutable.Map {
                  "value": 1005,
                  "urlType": "user",
                  "displayValue": "Vader",
                },
                "eventUserId": 1005,
                "timestamp": Immutable.Map {
                  "value": "2020-04-09 23:57:36.941",
                  "formattedValue": "2020-04-09 23:57",
                },
                "eventTimestamp": 2020-04-09T23:57:36.941Z,
                "entity": Immutable.Map {
                  "value": Immutable.List [
                    "xlsx assay",
                    233,
                  ],
                  "urlType": "assayRun",
                  "displayValue": "XLSX Assay",
                },
                "entitySeparator": undefined,
                "metadata": Immutable.List [
                  Immutable.Map {
                    "field": "Assay",
                    "value": Immutable.Map {
                      "value": "xlsx assay",
                      "urlType": "assays",
                      "displayValue": "XLSX Assay",
                    },
                  },
                  Immutable.Map {
                    "field": "Assay ID",
                    "value": Immutable.Map {
                      "value": Immutable.List [
                        "xlsx assay",
                        233,
                      ],
                      "urlType": "assayRun",
                      "displayValue": "XLSX Assay_2019-10-16_11-54-56",
                    },
                  },
                  Immutable.Map {
                    "field": "Completed By",
                    "value": Immutable.Map {
                      "value": 1005,
                      "urlType": "user",
                      "displayValue": "Vader",
                    },
                  },
                  Immutable.Map {
                    "field": "Date",
                    "value": Immutable.Map {
                      "value": "2020-04-09 23:57:36.941",
                      "formattedValue": "2020-04-09 23:57",
                    },
                  },
                ],
                "oldData": undefined,
                "newData": undefined,
                "userComment": undefined,
              },
              Immutable.Record {
                "rowId": 550,
                "eventType": "workflow",
                "subEventType": undefined,
                "summary": "Added to job",
                "user": Immutable.Map {
                  "value": 1038,
                  "urlType": "user",
                  "displayValue": "Test Lab User",
                },
                "eventUserId": 1038,
                "timestamp": Immutable.Map {
                  "value": "2020-04-10 02:57:36.941",
                  "formattedValue": "2020-04-10 02:57",
                },
                "eventTimestamp": 2020-04-10T02:57:36.941Z,
                "entity": Immutable.Map {
                  "value": 689,
                  "urlType": "workflow",
                  "displayValue": "job-4",
                },
                "entitySeparator": undefined,
                "metadata": Immutable.List [
                  Immutable.Map {
                    "field": "Job Name",
                    "value": Immutable.Map {
                      "value": 689,
                      "urlType": "workflow",
                      "displayValue": "job-4",
                    },
                  },
                  Immutable.Map {
                    "field": "Job Owner",
                    "value": Immutable.Map {
                      "value": 1038,
                      "urlType": "user",
                      "displayValue": "Test Lab User",
                    },
                  },
                  Immutable.Map {
                    "field": "Job Status",
                    "value": "In Progress",
                  },
                ],
                "oldData": undefined,
                "newData": undefined,
                "userComment": undefined,
              },
            ]
          }
          onEventSelection={[MockFunction]}
          selectedEntityConnectionInfo={
            [
              {
                "firstEvent": Immutable.Record {
                  "rowId": 546,
                  "eventType": "workflow",
                  "subEventType": undefined,
                  "summary": "Added to job",
                  "user": Immutable.Map {
                    "value": 1038,
                    "urlType": "user",
                    "displayValue": "Test Lab User",
                  },
                  "eventUserId": 1038,
                  "timestamp": Immutable.Map {
                    "value": "2020-04-09 18:57:36.941",
                    "formattedValue": "2020-04-09 18:57",
                  },
                  "eventTimestamp": 2020-04-09T18:57:36.941Z,
                  "entity": Immutable.Map {
                    "value": 688,
                    "urlType": "workflow",
                    "displayValue": "job-3",
                  },
                  "entitySeparator": undefined,
                  "metadata": Immutable.List [
                    Immutable.Map {
                      "field": "Job Name",
                      "value": Immutable.Map {
                        "value": 688,
                        "urlType": "workflow",
                        "displayValue": "job-3",
                      },
                    },
                    Immutable.Map {
                      "field": "Job Owner",
                      "value": Immutable.Map {
                        "value": 1038,
                        "urlType": "user",
                        "displayValue": "Test Lab User",
                      },
                    },
                    Immutable.Map {
                      "field": "Job Status",
                      "value": "In Progress",
                    },
                  ],
                  "oldData": undefined,
                  "newData": undefined,
                  "userComment": undefined,
                },
                "isCompleted": false,
                "lastEvent": Immutable.Record {
                  "rowId": 547,
                  "eventType": "workflow",
                  "subEventType": undefined,
                  "summary": "Removed from job",
                  "user": Immutable.Map {
                    "value": 1038,
                    "urlType": "user",
                    "displayValue": "Test Lab User",
                  },
                  "eventUserId": 1038,
                  "timestamp": Immutable.Map {
                    "value": "2020-04-09 19:57:36.941",
                    "formattedValue": "2020-04-09 19:57",
                  },
                  "eventTimestamp": 2020-04-09T19:57:36.941Z,
                  "entity": Immutable.Map {
                    "value": 688,
                    "urlType": "workflow",
                    "displayValue": "job-3",
                  },
                  "entitySeparator": undefined,
                  "metadata": Immutable.List [
                    Immutable.Map {
                      "field": "Job Name",
                      "value": Immutable.Map {
                        "value": 688,
                        "urlType": "workflow",
                        "displayValue": "job-3",
                      },
                    },
                    Immutable.Map {
                      "field": "Job Owner",
                      "value": Immutable.Map {
                        "value": 1038,
                        "urlType": "user",
                        "displayValue": "Test Lab User",
                      },
                    },
                    Immutable.Map {
                      "field": "Job Status",
                      "value": "In Progress",
                    },
                  ],
                  "oldData": undefined,
                  "newData": undefined,
                  "userComment": undefined,
                },
              },
            ]
          }
          selectedEvent={
            Immutable.Record {
              "rowId": 546,
              "eventType": "workflow",
              "subEventType": undefined,
              "summary": "Added to job",
              "user": Immutable.Map {
                "value": 1038,
                "urlType": "user",
                "displayValue": "Test Lab User",
              },
              "eventUserId": 1038,
              "timestamp": Immutable.Map {
                "value": "2020-04-09 18:57:36.941",
                "formattedValue": "2020-04-09 18:57",
              },
              "eventTimestamp": 2020-04-09T18:57:36.941Z,
              "entity": Immutable.Map {
                "value": 688,
                "urlType": "workflow",
                "displayValue": "job-3",
              },
              "entitySeparator": undefined,
              "metadata": Immutable.List [
                Immutable.Map {
                  "field": "Job Name",
                  "value": Immutable.Map {
                    "value": 688,
                    "urlType": "workflow",
                    "displayValue": "job-3",
                  },
                },
                Immutable.Map {
                  "field": "Job Owner",
                  "value": Immutable.Map {
                    "value": 1038,
                    "urlType": "user",
                    "displayValue": "Test Lab User",
                  },
                },
                Immutable.Map {
                  "field": "Job Status",
                  "value": "In Progress",
                },
              ],
              "oldData": undefined,
              "newData": undefined,
              "userComment": undefined,
            }
          }
          showRecentFirst={false}
        />
      </Col>
    </Row>
  </PanelBody>
</ForwardRef>
`;

exports[`<SampleEventListing/> With selected sample registration event 1`] = `
<ForwardRef>
  <PanelBody
    bsClass="panel"
    collapsible={false}
  >
    <div>
      <Row
        bsClass="row"
        componentClass="div"
      >
        <Col
          bsClass="col"
          className="font-large timeline-title"
          componentClass="div"
          xs={7}
        >
          Event Timeline for S-20200404-1
        </Col>
        <Col
          bsClass="col"
          componentClass="div"
          xs={5}
        >
          <span
            className="pull-right"
          >
            <DropdownButton
              className="button-right-spacing"
              id="job-tasks-comments-sort-btn"
              title="Show Oldest first"
            >
              <MenuItem
                active={true}
                bsClass="dropdown"
                disabled={false}
                divider={false}
                header={false}
                key="oldest"
                onClick={[Function]}
              >
                Oldest first
              </MenuItem>
              <MenuItem
                active={false}
                bsClass="dropdown"
                disabled={false}
                divider={false}
                header={false}
                key="recent"
                onClick={[Function]}
              >
                Recent first
              </MenuItem>
            </DropdownButton>
            <Tip
              caption="Export"
              trigger={
                [
                  "focus",
                  "hover",
                ]
              }
            >
              <Button
                active={false}
                block={false}
                bsClass="btn"
                bsStyle="default"
                disabled={false}
                onClick={[Function]}
              >
                <i
                  className="fa fa-download"
                />
              </Button>
            </Tip>
          </span>
        </Col>
      </Row>
      <hr />
    </div>
    <div>
      <ExpandableFilterToggle
        filterExpanded={false}
        hasFilter={false}
        panelCls="show-hide-filter-toggle"
        resetFilter={[Function]}
        toggleFilterPanel={[Function]}
      />
      <hr />
    </div>
    <Row
      bsClass="row"
      componentClass="div"
    >
      <Col
        bsClass="col"
        className="timeline-container"
        componentClass="div"
        lg={12}
      >
        <TimelineView
          events={
            [
              Immutable.Record {
                "rowId": 462022,
                "eventType": "samples",
                "subEventType": undefined,
                "summary": "Sample Registered",
                "user": Immutable.Map {
                  "value": 1005,
                  "urlType": "user",
                  "displayValue": "Vader",
                },
                "eventUserId": 1005,
                "timestamp": Immutable.Map {
                  "value": "2020-04-04 21:57:36.941",
                  "formattedValue": "2020-04-04 21:57",
                },
                "eventTimestamp": 2020-04-04T21:57:36.941Z,
                "entity": undefined,
                "entitySeparator": undefined,
                "metadata": undefined,
                "oldData": Immutable.Map {},
                "newData": Immutable.Map {
                  "ModifiedBy": "1005",
                  "LSID": "urn:lsid:labkey.com:Sample.101.test2:S-20200404-1",
                  "_rowNumber": "1",
                  "Created": "2020-04-04T21:56:54.637-07:00",
                  "Modified": "2020-04-04T21:56:54.637-07:00",
                  "genId": "7",
                  "Name": "S-20200404-1",
                  "Folder": "fac9522f-d271-1037-ab94-32fda5aa448a",
                  "MaterialInputs/Test": "abc",
                  "RowId": "86873",
                  "cpasType": "urn:lsid:labkey.com:SampleSet.Folder-101:test2",
                  "Description": "des",
                  "CreatedBy": "1005",
                },
                "userComment": undefined,
              },
              Immutable.Record {
                "rowId": 544,
                "eventType": "workflow",
                "subEventType": undefined,
                "summary": "Added to job",
                "user": Immutable.Map {
                  "value": 1005,
                  "urlType": "user",
                  "displayValue": "Vader",
                },
                "eventUserId": 1005,
                "timestamp": Immutable.Map {
                  "value": "2020-04-04 22:57:36.941",
                  "formattedValue": "2020-04-04 22:57",
                },
                "eventTimestamp": 2020-04-04T22:57:36.941Z,
                "entity": Immutable.Map {
                  "value": 687,
                  "urlType": "workflow",
                  "displayValue": "job-1",
                },
                "entitySeparator": undefined,
                "metadata": Immutable.List [
                  Immutable.Map {
                    "field": "Job Name",
                    "value": Immutable.Map {
                      "value": 687,
                      "urlType": "workflow",
                      "displayValue": "job-1",
                    },
                  },
                  Immutable.Map {
                    "field": "Job Owner",
                    "value": Immutable.Map {
                      "value": 1005,
                      "urlType": "user",
                      "displayValue": "Vader",
                    },
                  },
                  Immutable.Map {
                    "field": "Job Status",
                    "value": "In Progress",
                  },
                ],
                "oldData": undefined,
                "newData": undefined,
                "userComment": undefined,
              },
              Immutable.Record {
                "rowId": 462023,
                "eventType": "samples",
                "subEventType": undefined,
                "summary": "Sample updated",
                "user": Immutable.Map {
                  "value": 1005,
                  "urlType": "user",
                  "displayValue": "Vader",
                },
                "eventUserId": 1005,
                "timestamp": Immutable.Map {
                  "value": "2020-04-05 21:57:36.941",
                  "formattedValue": "2020-04-05 21:57",
                },
                "eventTimestamp": 2020-04-05T21:57:36.941Z,
                "entity": undefined,
                "entitySeparator": undefined,
                "metadata": undefined,
                "oldData": Immutable.Map {
                  "description": "des",
                  "modified": "2020-04-05T21:56:54.584-07:00",
                },
                "newData": Immutable.Map {
                  "description": "desc",
                  "modified": "2020-04-05T21:57:36.915-07:00",
                },
                "userComment": undefined,
              },
              Immutable.Record {
                "rowId": 1548,
                "eventType": "assays",
                "subEventType": undefined,
                "summary": "Assay Data Uploaded",
                "user": Immutable.Map {
                  "value": 1005,
                  "urlType": "user",
                  "displayValue": "Vader",
                },
                "eventUserId": 1005,
                "timestamp": Immutable.Map {
                  "value": "2020-04-08 22:57:36.941",
                  "formattedValue": "2020-04-08 22:57",
                },
                "eventTimestamp": 2020-04-08T22:57:36.941Z,
                "entity": Immutable.Map {
                  "value": "xlsx assay",
                  "urlType": "assays",
                  "displayValue": "XLSX Assay",
                },
                "entitySeparator": undefined,
                "metadata": Immutable.List [
                  Immutable.Map {
                    "field": "Assay",
                    "value": Immutable.Map {
                      "value": "xlsx assay",
                      "urlType": "assays",
                      "displayValue": "XLSX Assay",
                    },
                  },
                  Immutable.Map {
                    "field": "Completed By",
                    "value": Immutable.Map {
                      "value": 1005,
                      "urlType": "user",
                      "displayValue": "Vader",
                    },
                  },
                  Immutable.Map {
                    "field": "Date",
                    "value": Immutable.Map {
                      "value": "2020-04-08 21:57:36.941",
                      "formattedValue": "2020-04-08 21:57",
                    },
                  },
                ],
                "oldData": undefined,
                "newData": undefined,
                "userComment": undefined,
              },
              Immutable.Record {
                "rowId": 546,
                "eventType": "workflow",
                "subEventType": undefined,
                "summary": "Added to job",
                "user": Immutable.Map {
                  "value": 1038,
                  "urlType": "user",
                  "displayValue": "Test Lab User",
                },
                "eventUserId": 1038,
                "timestamp": Immutable.Map {
                  "value": "2020-04-09 18:57:36.941",
                  "formattedValue": "2020-04-09 18:57",
                },
                "eventTimestamp": 2020-04-09T18:57:36.941Z,
                "entity": Immutable.Map {
                  "value": 688,
                  "urlType": "workflow",
                  "displayValue": "job-3",
                },
                "entitySeparator": undefined,
                "metadata": Immutable.List [
                  Immutable.Map {
                    "field": "Job Name",
                    "value": Immutable.Map {
                      "value": 688,
                      "urlType": "workflow",
                      "displayValue": "job-3",
                    },
                  },
                  Immutable.Map {
                    "field": "Job Owner",
                    "value": Immutable.Map {
                      "value": 1038,
                      "urlType": "user",
                      "displayValue": "Test Lab User",
                    },
                  },
                  Immutable.Map {
                    "field": "Job Status",
                    "value": "In Progress",
                  },
                ],
                "oldData": undefined,
                "newData": undefined,
                "userComment": undefined,
              },
              Immutable.Record {
                "rowId": 547,
                "eventType": "workflow",
                "subEventType": undefined,
                "summary": "Removed from job",
                "user": Immutable.Map {
                  "value": 1038,
                  "urlType": "user",
                  "displayValue": "Test Lab User",
                },
                "eventUserId": 1038,
                "timestamp": Immutable.Map {
                  "value": "2020-04-09 19:57:36.941",
                  "formattedValue": "2020-04-09 19:57",
                },
                "eventTimestamp": 2020-04-09T19:57:36.941Z,
                "entity": Immutable.Map {
                  "value": 688,
                  "urlType": "workflow",
                  "displayValue": "job-3",
                },
                "entitySeparator": undefined,
                "metadata": Immutable.List [
                  Immutable.Map {
                    "field": "Job Name",
                    "value": Immutable.Map {
                      "value": 688,
                      "urlType": "workflow",
                      "displayValue": "job-3",
                    },
                  },
                  Immutable.Map {
                    "field": "Job Owner",
                    "value": Immutable.Map {
                      "value": 1038,
                      "urlType": "user",
                      "displayValue": "Test Lab User",
                    },
                  },
                  Immutable.Map {
                    "field": "Job Status",
                    "value": "In Progress",
                  },
                ],
                "oldData": undefined,
                "newData": undefined,
                "userComment": undefined,
              },
              Immutable.Record {
                "rowId": 548,
                "eventType": "workflow",
                "subEventType": undefined,
                "summary": "Completed job",
                "user": Immutable.Map {
                  "value": 1005,
                  "urlType": "user",
                  "displayValue": "Vader",
                },
                "eventUserId": 1005,
                "timestamp": Immutable.Map {
                  "value": "2020-04-09 20:57:36.941",
                  "formattedValue": "2020-04-09 20:57",
                },
                "eventTimestamp": 2020-04-09T20:57:36.941Z,
                "entity": Immutable.Map {
                  "value": 687,
                  "urlType": "workflow",
                  "displayValue": "job-1",
                },
                "entitySeparator": undefined,
                "metadata": Immutable.List [
                  Immutable.Map {
                    "field": "Job Name",
                    "value": Immutable.Map {
                      "value": 687,
                      "urlType": "workflow",
                      "displayValue": "job-1",
                    },
                  },
                  Immutable.Map {
                    "field": "Job Owner",
                    "value": Immutable.Map {
                      "value": 1005,
                      "urlType": "user",
                      "displayValue": "Vader",
                    },
                  },
                  Immutable.Map {
                    "field": "Job Status",
                    "value": "Completed",
                  },
                ],
                "oldData": undefined,
                "newData": undefined,
                "userComment": undefined,
              },
              Immutable.Record {
                "rowId": 1549,
                "eventType": "assays",
                "subEventType": undefined,
                "summary": "Assay Data Re-Import Run",
                "user": Immutable.Map {
                  "value": 1005,
                  "urlType": "user",
                  "displayValue": "Vader",
                },
                "eventUserId": 1005,
                "timestamp": Immutable.Map {
                  "value": "2020-04-09 23:57:36.941",
                  "formattedValue": "2020-04-09 23:57",
                },
                "eventTimestamp": 2020-04-09T23:57:36.941Z,
                "entity": Immutable.Map {
                  "value": Immutable.List [
                    "xlsx assay",
                    233,
                  ],
                  "urlType": "assayRun",
                  "displayValue": "XLSX Assay",
                },
                "entitySeparator": undefined,
                "metadata": Immutable.List [
                  Immutable.Map {
                    "field": "Assay",
                    "value": Immutable.Map {
                      "value": "xlsx assay",
                      "urlType": "assays",
                      "displayValue": "XLSX Assay",
                    },
                  },
                  Immutable.Map {
                    "field": "Assay ID",
                    "value": Immutable.Map {
                      "value": Immutable.List [
                        "xlsx assay",
                        233,
                      ],
                      "urlType": "assayRun",
                      "displayValue": "XLSX Assay_2019-10-16_11-54-56",
                    },
                  },
                  Immutable.Map {
                    "field": "Completed By",
                    "value": Immutable.Map {
                      "value": 1005,
                      "urlType": "user",
                      "displayValue": "Vader",
                    },
                  },
                  Immutable.Map {
                    "field": "Date",
                    "value": Immutable.Map {
                      "value": "2020-04-09 23:57:36.941",
                      "formattedValue": "2020-04-09 23:57",
                    },
                  },
                ],
                "oldData": undefined,
                "newData": undefined,
                "userComment": undefined,
              },
              Immutable.Record {
                "rowId": 550,
                "eventType": "workflow",
                "subEventType": undefined,
                "summary": "Added to job",
                "user": Immutable.Map {
                  "value": 1038,
                  "urlType": "user",
                  "displayValue": "Test Lab User",
                },
                "eventUserId": 1038,
                "timestamp": Immutable.Map {
                  "value": "2020-04-10 02:57:36.941",
                  "formattedValue": "2020-04-10 02:57",
                },
                "eventTimestamp": 2020-04-10T02:57:36.941Z,
                "entity": Immutable.Map {
                  "value": 689,
                  "urlType": "workflow",
                  "displayValue": "job-4",
                },
                "entitySeparator": undefined,
                "metadata": Immutable.List [
                  Immutable.Map {
                    "field": "Job Name",
                    "value": Immutable.Map {
                      "value": 689,
                      "urlType": "workflow",
                      "displayValue": "job-4",
                    },
                  },
                  Immutable.Map {
                    "field": "Job Owner",
                    "value": Immutable.Map {
                      "value": 1038,
                      "urlType": "user",
                      "displayValue": "Test Lab User",
                    },
                  },
                  Immutable.Map {
                    "field": "Job Status",
                    "value": "In Progress",
                  },
                ],
                "oldData": undefined,
                "newData": undefined,
                "userComment": undefined,
              },
            ]
          }
          onEventSelection={[MockFunction]}
          selectedEntityConnectionInfo={null}
          selectedEvent={
            Immutable.Record {
              "rowId": 462022,
              "eventType": "samples",
              "subEventType": undefined,
              "summary": "Sample Registered",
              "user": Immutable.Map {
                "value": 1005,
                "urlType": "user",
                "displayValue": "Vader",
              },
              "eventUserId": 1005,
              "timestamp": Immutable.Map {
                "value": "2020-04-04 21:57:36.941",
                "formattedValue": "2020-04-04 21:57",
              },
              "eventTimestamp": 2020-04-04T21:57:36.941Z,
              "entity": undefined,
              "entitySeparator": undefined,
              "metadata": undefined,
              "oldData": Immutable.Map {},
              "newData": Immutable.Map {
                "ModifiedBy": "1005",
                "LSID": "urn:lsid:labkey.com:Sample.101.test2:S-20200404-1",
                "_rowNumber": "1",
                "Created": "2020-04-04T21:56:54.637-07:00",
                "Modified": "2020-04-04T21:56:54.637-07:00",
                "genId": "7",
                "Name": "S-20200404-1",
                "Folder": "fac9522f-d271-1037-ab94-32fda5aa448a",
                "MaterialInputs/Test": "abc",
                "RowId": "86873",
                "cpasType": "urn:lsid:labkey.com:SampleSet.Folder-101:test2",
                "Description": "des",
                "CreatedBy": "1005",
              },
              "userComment": undefined,
            }
          }
          showRecentFirst={false}
        />
      </Col>
    </Row>
  </PanelBody>
</ForwardRef>
`;

exports[`<SampleEventListing/> With selected sample update event 1`] = `
<ForwardRef>
  <PanelBody
    bsClass="panel"
    collapsible={false}
  >
    <div>
      <Row
        bsClass="row"
        componentClass="div"
      >
        <Col
          bsClass="col"
          className="font-large timeline-title"
          componentClass="div"
          xs={7}
        >
          Event Timeline for S-20200404-1
        </Col>
        <Col
          bsClass="col"
          componentClass="div"
          xs={5}
        >
          <span
            className="pull-right"
          >
            <DropdownButton
              className="button-right-spacing"
              id="job-tasks-comments-sort-btn"
              title="Show Oldest first"
            >
              <MenuItem
                active={true}
                bsClass="dropdown"
                disabled={false}
                divider={false}
                header={false}
                key="oldest"
                onClick={[Function]}
              >
                Oldest first
              </MenuItem>
              <MenuItem
                active={false}
                bsClass="dropdown"
                disabled={false}
                divider={false}
                header={false}
                key="recent"
                onClick={[Function]}
              >
                Recent first
              </MenuItem>
            </DropdownButton>
            <Tip
              caption="Export"
              trigger={
                [
                  "focus",
                  "hover",
                ]
              }
            >
              <Button
                active={false}
                block={false}
                bsClass="btn"
                bsStyle="default"
                disabled={false}
                onClick={[Function]}
              >
                <i
                  className="fa fa-download"
                />
              </Button>
            </Tip>
          </span>
        </Col>
      </Row>
      <hr />
    </div>
    <div>
      <ExpandableFilterToggle
        filterExpanded={false}
        hasFilter={false}
        panelCls="show-hide-filter-toggle"
        resetFilter={[Function]}
        toggleFilterPanel={[Function]}
      />
      <hr />
    </div>
    <Row
      bsClass="row"
      componentClass="div"
    >
      <Col
        bsClass="col"
        className="timeline-container"
        componentClass="div"
        lg={12}
      >
        <TimelineView
          events={
            [
              Immutable.Record {
                "rowId": 462022,
                "eventType": "samples",
                "subEventType": undefined,
                "summary": "Sample Registered",
                "user": Immutable.Map {
                  "value": 1005,
                  "urlType": "user",
                  "displayValue": "Vader",
                },
                "eventUserId": 1005,
                "timestamp": Immutable.Map {
                  "value": "2020-04-04 21:57:36.941",
                  "formattedValue": "2020-04-04 21:57",
                },
                "eventTimestamp": 2020-04-04T21:57:36.941Z,
                "entity": undefined,
                "entitySeparator": undefined,
                "metadata": undefined,
                "oldData": Immutable.Map {},
                "newData": Immutable.Map {
                  "ModifiedBy": "1005",
                  "LSID": "urn:lsid:labkey.com:Sample.101.test2:S-20200404-1",
                  "_rowNumber": "1",
                  "Created": "2020-04-04T21:56:54.637-07:00",
                  "Modified": "2020-04-04T21:56:54.637-07:00",
                  "genId": "7",
                  "Name": "S-20200404-1",
                  "Folder": "fac9522f-d271-1037-ab94-32fda5aa448a",
                  "MaterialInputs/Test": "abc",
                  "RowId": "86873",
                  "cpasType": "urn:lsid:labkey.com:SampleSet.Folder-101:test2",
                  "Description": "des",
                  "CreatedBy": "1005",
                },
                "userComment": undefined,
              },
              Immutable.Record {
                "rowId": 544,
                "eventType": "workflow",
                "subEventType": undefined,
                "summary": "Added to job",
                "user": Immutable.Map {
                  "value": 1005,
                  "urlType": "user",
                  "displayValue": "Vader",
                },
                "eventUserId": 1005,
                "timestamp": Immutable.Map {
                  "value": "2020-04-04 22:57:36.941",
                  "formattedValue": "2020-04-04 22:57",
                },
                "eventTimestamp": 2020-04-04T22:57:36.941Z,
                "entity": Immutable.Map {
                  "value": 687,
                  "urlType": "workflow",
                  "displayValue": "job-1",
                },
                "entitySeparator": undefined,
                "metadata": Immutable.List [
                  Immutable.Map {
                    "field": "Job Name",
                    "value": Immutable.Map {
                      "value": 687,
                      "urlType": "workflow",
                      "displayValue": "job-1",
                    },
                  },
                  Immutable.Map {
                    "field": "Job Owner",
                    "value": Immutable.Map {
                      "value": 1005,
                      "urlType": "user",
                      "displayValue": "Vader",
                    },
                  },
                  Immutable.Map {
                    "field": "Job Status",
                    "value": "In Progress",
                  },
                ],
                "oldData": undefined,
                "newData": undefined,
                "userComment": undefined,
              },
              Immutable.Record {
                "rowId": 462023,
                "eventType": "samples",
                "subEventType": undefined,
                "summary": "Sample updated",
                "user": Immutable.Map {
                  "value": 1005,
                  "urlType": "user",
                  "displayValue": "Vader",
                },
                "eventUserId": 1005,
                "timestamp": Immutable.Map {
                  "value": "2020-04-05 21:57:36.941",
                  "formattedValue": "2020-04-05 21:57",
                },
                "eventTimestamp": 2020-04-05T21:57:36.941Z,
                "entity": undefined,
                "entitySeparator": undefined,
                "metadata": undefined,
                "oldData": Immutable.Map {
                  "description": "des",
                  "modified": "2020-04-05T21:56:54.584-07:00",
                },
                "newData": Immutable.Map {
                  "description": "desc",
                  "modified": "2020-04-05T21:57:36.915-07:00",
                },
                "userComment": undefined,
              },
              Immutable.Record {
                "rowId": 1548,
                "eventType": "assays",
                "subEventType": undefined,
                "summary": "Assay Data Uploaded",
                "user": Immutable.Map {
                  "value": 1005,
                  "urlType": "user",
                  "displayValue": "Vader",
                },
                "eventUserId": 1005,
                "timestamp": Immutable.Map {
                  "value": "2020-04-08 22:57:36.941",
                  "formattedValue": "2020-04-08 22:57",
                },
                "eventTimestamp": 2020-04-08T22:57:36.941Z,
                "entity": Immutable.Map {
                  "value": "xlsx assay",
                  "urlType": "assays",
                  "displayValue": "XLSX Assay",
                },
                "entitySeparator": undefined,
                "metadata": Immutable.List [
                  Immutable.Map {
                    "field": "Assay",
                    "value": Immutable.Map {
                      "value": "xlsx assay",
                      "urlType": "assays",
                      "displayValue": "XLSX Assay",
                    },
                  },
                  Immutable.Map {
                    "field": "Completed By",
                    "value": Immutable.Map {
                      "value": 1005,
                      "urlType": "user",
                      "displayValue": "Vader",
                    },
                  },
                  Immutable.Map {
                    "field": "Date",
                    "value": Immutable.Map {
                      "value": "2020-04-08 21:57:36.941",
                      "formattedValue": "2020-04-08 21:57",
                    },
                  },
                ],
                "oldData": undefined,
                "newData": undefined,
                "userComment": undefined,
              },
              Immutable.Record {
                "rowId": 546,
                "eventType": "workflow",
                "subEventType": undefined,
                "summary": "Added to job",
                "user": Immutable.Map {
                  "value": 1038,
                  "urlType": "user",
                  "displayValue": "Test Lab User",
                },
                "eventUserId": 1038,
                "timestamp": Immutable.Map {
                  "value": "2020-04-09 18:57:36.941",
                  "formattedValue": "2020-04-09 18:57",
                },
                "eventTimestamp": 2020-04-09T18:57:36.941Z,
                "entity": Immutable.Map {
                  "value": 688,
                  "urlType": "workflow",
                  "displayValue": "job-3",
                },
                "entitySeparator": undefined,
                "metadata": Immutable.List [
                  Immutable.Map {
                    "field": "Job Name",
                    "value": Immutable.Map {
                      "value": 688,
                      "urlType": "workflow",
                      "displayValue": "job-3",
                    },
                  },
                  Immutable.Map {
                    "field": "Job Owner",
                    "value": Immutable.Map {
                      "value": 1038,
                      "urlType": "user",
                      "displayValue": "Test Lab User",
                    },
                  },
                  Immutable.Map {
                    "field": "Job Status",
                    "value": "In Progress",
                  },
                ],
                "oldData": undefined,
                "newData": undefined,
                "userComment": undefined,
              },
              Immutable.Record {
                "rowId": 547,
                "eventType": "workflow",
                "subEventType": undefined,
                "summary": "Removed from job",
                "user": Immutable.Map {
                  "value": 1038,
                  "urlType": "user",
                  "displayValue": "Test Lab User",
                },
                "eventUserId": 1038,
                "timestamp": Immutable.Map {
                  "value": "2020-04-09 19:57:36.941",
                  "formattedValue": "2020-04-09 19:57",
                },
                "eventTimestamp": 2020-04-09T19:57:36.941Z,
                "entity": Immutable.Map {
                  "value": 688,
                  "urlType": "workflow",
                  "displayValue": "job-3",
                },
                "entitySeparator": undefined,
                "metadata": Immutable.List [
                  Immutable.Map {
                    "field": "Job Name",
                    "value": Immutable.Map {
                      "value": 688,
                      "urlType": "workflow",
                      "displayValue": "job-3",
                    },
                  },
                  Immutable.Map {
                    "field": "Job Owner",
                    "value": Immutable.Map {
                      "value": 1038,
                      "urlType": "user",
                      "displayValue": "Test Lab User",
                    },
                  },
                  Immutable.Map {
                    "field": "Job Status",
                    "value": "In Progress",
                  },
                ],
                "oldData": undefined,
                "newData": undefined,
                "userComment": undefined,
              },
              Immutable.Record {
                "rowId": 548,
                "eventType": "workflow",
                "subEventType": undefined,
                "summary": "Completed job",
                "user": Immutable.Map {
                  "value": 1005,
                  "urlType": "user",
                  "displayValue": "Vader",
                },
                "eventUserId": 1005,
                "timestamp": Immutable.Map {
                  "value": "2020-04-09 20:57:36.941",
                  "formattedValue": "2020-04-09 20:57",
                },
                "eventTimestamp": 2020-04-09T20:57:36.941Z,
                "entity": Immutable.Map {
                  "value": 687,
                  "urlType": "workflow",
                  "displayValue": "job-1",
                },
                "entitySeparator": undefined,
                "metadata": Immutable.List [
                  Immutable.Map {
                    "field": "Job Name",
                    "value": Immutable.Map {
                      "value": 687,
                      "urlType": "workflow",
                      "displayValue": "job-1",
                    },
                  },
                  Immutable.Map {
                    "field": "Job Owner",
                    "value": Immutable.Map {
                      "value": 1005,
                      "urlType": "user",
                      "displayValue": "Vader",
                    },
                  },
                  Immutable.Map {
                    "field": "Job Status",
                    "value": "Completed",
                  },
                ],
                "oldData": undefined,
                "newData": undefined,
                "userComment": undefined,
              },
              Immutable.Record {
                "rowId": 1549,
                "eventType": "assays",
                "subEventType": undefined,
                "summary": "Assay Data Re-Import Run",
                "user": Immutable.Map {
                  "value": 1005,
                  "urlType": "user",
                  "displayValue": "Vader",
                },
                "eventUserId": 1005,
                "timestamp": Immutable.Map {
                  "value": "2020-04-09 23:57:36.941",
                  "formattedValue": "2020-04-09 23:57",
                },
                "eventTimestamp": 2020-04-09T23:57:36.941Z,
                "entity": Immutable.Map {
                  "value": Immutable.List [
                    "xlsx assay",
                    233,
                  ],
                  "urlType": "assayRun",
                  "displayValue": "XLSX Assay",
                },
                "entitySeparator": undefined,
                "metadata": Immutable.List [
                  Immutable.Map {
                    "field": "Assay",
                    "value": Immutable.Map {
                      "value": "xlsx assay",
                      "urlType": "assays",
                      "displayValue": "XLSX Assay",
                    },
                  },
                  Immutable.Map {
                    "field": "Assay ID",
                    "value": Immutable.Map {
                      "value": Immutable.List [
                        "xlsx assay",
                        233,
                      ],
                      "urlType": "assayRun",
                      "displayValue": "XLSX Assay_2019-10-16_11-54-56",
                    },
                  },
                  Immutable.Map {
                    "field": "Completed By",
                    "value": Immutable.Map {
                      "value": 1005,
                      "urlType": "user",
                      "displayValue": "Vader",
                    },
                  },
                  Immutable.Map {
                    "field": "Date",
                    "value": Immutable.Map {
                      "value": "2020-04-09 23:57:36.941",
                      "formattedValue": "2020-04-09 23:57",
                    },
                  },
                ],
                "oldData": undefined,
                "newData": undefined,
                "userComment": undefined,
              },
              Immutable.Record {
                "rowId": 550,
                "eventType": "workflow",
                "subEventType": undefined,
                "summary": "Added to job",
                "user": Immutable.Map {
                  "value": 1038,
                  "urlType": "user",
                  "displayValue": "Test Lab User",
                },
                "eventUserId": 1038,
                "timestamp": Immutable.Map {
                  "value": "2020-04-10 02:57:36.941",
                  "formattedValue": "2020-04-10 02:57",
                },
                "eventTimestamp": 2020-04-10T02:57:36.941Z,
                "entity": Immutable.Map {
                  "value": 689,
                  "urlType": "workflow",
                  "displayValue": "job-4",
                },
                "entitySeparator": undefined,
                "metadata": Immutable.List [
                  Immutable.Map {
                    "field": "Job Name",
                    "value": Immutable.Map {
                      "value": 689,
                      "urlType": "workflow",
                      "displayValue": "job-4",
                    },
                  },
                  Immutable.Map {
                    "field": "Job Owner",
                    "value": Immutable.Map {
                      "value": 1038,
                      "urlType": "user",
                      "displayValue": "Test Lab User",
                    },
                  },
                  Immutable.Map {
                    "field": "Job Status",
                    "value": "In Progress",
                  },
                ],
                "oldData": undefined,
                "newData": undefined,
                "userComment": undefined,
              },
            ]
          }
          onEventSelection={[MockFunction]}
          selectedEntityConnectionInfo={null}
          selectedEvent={
            Immutable.Record {
              "rowId": 462023,
              "eventType": "samples",
              "subEventType": undefined,
              "summary": "Sample updated",
              "user": Immutable.Map {
                "value": 1005,
                "urlType": "user",
                "displayValue": "Vader",
              },
              "eventUserId": 1005,
              "timestamp": Immutable.Map {
                "value": "2020-04-05 21:57:36.941",
                "formattedValue": "2020-04-05 21:57",
              },
              "eventTimestamp": 2020-04-05T21:57:36.941Z,
              "entity": undefined,
              "entitySeparator": undefined,
              "metadata": undefined,
              "oldData": Immutable.Map {
                "description": "des",
                "modified": "2020-04-05T21:56:54.584-07:00",
              },
              "newData": Immutable.Map {
                "description": "desc",
                "modified": "2020-04-05T21:57:36.915-07:00",
              },
              "userComment": undefined,
            }
          }
          showRecentFirst={false}
        />
      </Col>
    </Row>
  </PanelBody>
</ForwardRef>
`;

exports[`<SampleEventListing/> Without selected event 1`] = `
<ForwardRef>
  <PanelBody
    bsClass="panel"
    collapsible={false}
  >
    <div>
      <Row
        bsClass="row"
        componentClass="div"
      >
        <Col
          bsClass="col"
          className="font-large timeline-title"
          componentClass="div"
          xs={7}
        >
          Event Timeline for S-20200404-1
        </Col>
        <Col
          bsClass="col"
          componentClass="div"
          xs={5}
        >
          <span
            className="pull-right"
          >
            <DropdownButton
              className="button-right-spacing"
              id="job-tasks-comments-sort-btn"
              title="Show Oldest first"
            >
              <MenuItem
                active={true}
                bsClass="dropdown"
                disabled={false}
                divider={false}
                header={false}
                key="oldest"
                onClick={[Function]}
              >
                Oldest first
              </MenuItem>
              <MenuItem
                active={false}
                bsClass="dropdown"
                disabled={false}
                divider={false}
                header={false}
                key="recent"
                onClick={[Function]}
              >
                Recent first
              </MenuItem>
            </DropdownButton>
            <Tip
              caption="Export"
              trigger={
                [
                  "focus",
                  "hover",
                ]
              }
            >
              <Button
                active={false}
                block={false}
                bsClass="btn"
                bsStyle="default"
                disabled={false}
                onClick={[Function]}
              >
                <i
                  className="fa fa-download"
                />
              </Button>
            </Tip>
          </span>
        </Col>
      </Row>
      <hr />
    </div>
    <div>
      <ExpandableFilterToggle
        filterExpanded={false}
        hasFilter={false}
        panelCls="show-hide-filter-toggle"
        resetFilter={[Function]}
        toggleFilterPanel={[Function]}
      />
      <hr />
    </div>
    <Row
      bsClass="row"
      componentClass="div"
    >
      <Col
        bsClass="col"
        className="timeline-container"
        componentClass="div"
        lg={12}
      >
        <TimelineView
          events={
            [
              Immutable.Record {
                "rowId": 462022,
                "eventType": "samples",
                "subEventType": undefined,
                "summary": "Sample Registered",
                "user": Immutable.Map {
                  "value": 1005,
                  "urlType": "user",
                  "displayValue": "Vader",
                },
                "eventUserId": 1005,
                "timestamp": Immutable.Map {
                  "value": "2020-04-04 21:57:36.941",
                  "formattedValue": "2020-04-04 21:57",
                },
                "eventTimestamp": 2020-04-04T21:57:36.941Z,
                "entity": undefined,
                "entitySeparator": undefined,
                "metadata": undefined,
                "oldData": Immutable.Map {},
                "newData": Immutable.Map {
                  "ModifiedBy": "1005",
                  "LSID": "urn:lsid:labkey.com:Sample.101.test2:S-20200404-1",
                  "_rowNumber": "1",
                  "Created": "2020-04-04T21:56:54.637-07:00",
                  "Modified": "2020-04-04T21:56:54.637-07:00",
                  "genId": "7",
                  "Name": "S-20200404-1",
                  "Folder": "fac9522f-d271-1037-ab94-32fda5aa448a",
                  "MaterialInputs/Test": "abc",
                  "RowId": "86873",
                  "cpasType": "urn:lsid:labkey.com:SampleSet.Folder-101:test2",
                  "Description": "des",
                  "CreatedBy": "1005",
                },
                "userComment": undefined,
              },
              Immutable.Record {
                "rowId": 544,
                "eventType": "workflow",
                "subEventType": undefined,
                "summary": "Added to job",
                "user": Immutable.Map {
                  "value": 1005,
                  "urlType": "user",
                  "displayValue": "Vader",
                },
                "eventUserId": 1005,
                "timestamp": Immutable.Map {
                  "value": "2020-04-04 22:57:36.941",
                  "formattedValue": "2020-04-04 22:57",
                },
                "eventTimestamp": 2020-04-04T22:57:36.941Z,
                "entity": Immutable.Map {
                  "value": 687,
                  "urlType": "workflow",
                  "displayValue": "job-1",
                },
                "entitySeparator": undefined,
                "metadata": Immutable.List [
                  Immutable.Map {
                    "field": "Job Name",
                    "value": Immutable.Map {
                      "value": 687,
                      "urlType": "workflow",
                      "displayValue": "job-1",
                    },
                  },
                  Immutable.Map {
                    "field": "Job Owner",
                    "value": Immutable.Map {
                      "value": 1005,
                      "urlType": "user",
                      "displayValue": "Vader",
                    },
                  },
                  Immutable.Map {
                    "field": "Job Status",
                    "value": "In Progress",
                  },
                ],
                "oldData": undefined,
                "newData": undefined,
                "userComment": undefined,
              },
              Immutable.Record {
                "rowId": 462023,
                "eventType": "samples",
                "subEventType": undefined,
                "summary": "Sample updated",
                "user": Immutable.Map {
                  "value": 1005,
                  "urlType": "user",
                  "displayValue": "Vader",
                },
                "eventUserId": 1005,
                "timestamp": Immutable.Map {
                  "value": "2020-04-05 21:57:36.941",
                  "formattedValue": "2020-04-05 21:57",
                },
                "eventTimestamp": 2020-04-05T21:57:36.941Z,
                "entity": undefined,
                "entitySeparator": undefined,
                "metadata": undefined,
                "oldData": Immutable.Map {
                  "description": "des",
                  "modified": "2020-04-05T21:56:54.584-07:00",
                },
                "newData": Immutable.Map {
                  "description": "desc",
                  "modified": "2020-04-05T21:57:36.915-07:00",
                },
                "userComment": undefined,
              },
              Immutable.Record {
                "rowId": 1548,
                "eventType": "assays",
                "subEventType": undefined,
                "summary": "Assay Data Uploaded",
                "user": Immutable.Map {
                  "value": 1005,
                  "urlType": "user",
                  "displayValue": "Vader",
                },
                "eventUserId": 1005,
                "timestamp": Immutable.Map {
                  "value": "2020-04-08 22:57:36.941",
                  "formattedValue": "2020-04-08 22:57",
                },
                "eventTimestamp": 2020-04-08T22:57:36.941Z,
                "entity": Immutable.Map {
                  "value": "xlsx assay",
                  "urlType": "assays",
                  "displayValue": "XLSX Assay",
                },
                "entitySeparator": undefined,
                "metadata": Immutable.List [
                  Immutable.Map {
                    "field": "Assay",
                    "value": Immutable.Map {
                      "value": "xlsx assay",
                      "urlType": "assays",
                      "displayValue": "XLSX Assay",
                    },
                  },
                  Immutable.Map {
                    "field": "Completed By",
                    "value": Immutable.Map {
                      "value": 1005,
                      "urlType": "user",
                      "displayValue": "Vader",
                    },
                  },
                  Immutable.Map {
                    "field": "Date",
                    "value": Immutable.Map {
                      "value": "2020-04-08 21:57:36.941",
                      "formattedValue": "2020-04-08 21:57",
                    },
                  },
                ],
                "oldData": undefined,
                "newData": undefined,
                "userComment": undefined,
              },
              Immutable.Record {
                "rowId": 546,
                "eventType": "workflow",
                "subEventType": undefined,
                "summary": "Added to job",
                "user": Immutable.Map {
                  "value": 1038,
                  "urlType": "user",
                  "displayValue": "Test Lab User",
                },
                "eventUserId": 1038,
                "timestamp": Immutable.Map {
                  "value": "2020-04-09 18:57:36.941",
                  "formattedValue": "2020-04-09 18:57",
                },
                "eventTimestamp": 2020-04-09T18:57:36.941Z,
                "entity": Immutable.Map {
                  "value": 688,
                  "urlType": "workflow",
                  "displayValue": "job-3",
                },
                "entitySeparator": undefined,
                "metadata": Immutable.List [
                  Immutable.Map {
                    "field": "Job Name",
                    "value": Immutable.Map {
                      "value": 688,
                      "urlType": "workflow",
                      "displayValue": "job-3",
                    },
                  },
                  Immutable.Map {
                    "field": "Job Owner",
                    "value": Immutable.Map {
                      "value": 1038,
                      "urlType": "user",
                      "displayValue": "Test Lab User",
                    },
                  },
                  Immutable.Map {
                    "field": "Job Status",
                    "value": "In Progress",
                  },
                ],
                "oldData": undefined,
                "newData": undefined,
                "userComment": undefined,
              },
              Immutable.Record {
                "rowId": 547,
                "eventType": "workflow",
                "subEventType": undefined,
                "summary": "Removed from job",
                "user": Immutable.Map {
                  "value": 1038,
                  "urlType": "user",
                  "displayValue": "Test Lab User",
                },
                "eventUserId": 1038,
                "timestamp": Immutable.Map {
                  "value": "2020-04-09 19:57:36.941",
                  "formattedValue": "2020-04-09 19:57",
                },
                "eventTimestamp": 2020-04-09T19:57:36.941Z,
                "entity": Immutable.Map {
                  "value": 688,
                  "urlType": "workflow",
                  "displayValue": "job-3",
                },
                "entitySeparator": undefined,
                "metadata": Immutable.List [
                  Immutable.Map {
                    "field": "Job Name",
                    "value": Immutable.Map {
                      "value": 688,
                      "urlType": "workflow",
                      "displayValue": "job-3",
                    },
                  },
                  Immutable.Map {
                    "field": "Job Owner",
                    "value": Immutable.Map {
                      "value": 1038,
                      "urlType": "user",
                      "displayValue": "Test Lab User",
                    },
                  },
                  Immutable.Map {
                    "field": "Job Status",
                    "value": "In Progress",
                  },
                ],
                "oldData": undefined,
                "newData": undefined,
                "userComment": undefined,
              },
              Immutable.Record {
                "rowId": 548,
                "eventType": "workflow",
                "subEventType": undefined,
                "summary": "Completed job",
                "user": Immutable.Map {
                  "value": 1005,
                  "urlType": "user",
                  "displayValue": "Vader",
                },
                "eventUserId": 1005,
                "timestamp": Immutable.Map {
                  "value": "2020-04-09 20:57:36.941",
                  "formattedValue": "2020-04-09 20:57",
                },
                "eventTimestamp": 2020-04-09T20:57:36.941Z,
                "entity": Immutable.Map {
                  "value": 687,
                  "urlType": "workflow",
                  "displayValue": "job-1",
                },
                "entitySeparator": undefined,
                "metadata": Immutable.List [
                  Immutable.Map {
                    "field": "Job Name",
                    "value": Immutable.Map {
                      "value": 687,
                      "urlType": "workflow",
                      "displayValue": "job-1",
                    },
                  },
                  Immutable.Map {
                    "field": "Job Owner",
                    "value": Immutable.Map {
                      "value": 1005,
                      "urlType": "user",
                      "displayValue": "Vader",
                    },
                  },
                  Immutable.Map {
                    "field": "Job Status",
                    "value": "Completed",
                  },
                ],
                "oldData": undefined,
                "newData": undefined,
                "userComment": undefined,
              },
              Immutable.Record {
                "rowId": 1549,
                "eventType": "assays",
                "subEventType": undefined,
                "summary": "Assay Data Re-Import Run",
                "user": Immutable.Map {
                  "value": 1005,
                  "urlType": "user",
                  "displayValue": "Vader",
                },
                "eventUserId": 1005,
                "timestamp": Immutable.Map {
                  "value": "2020-04-09 23:57:36.941",
                  "formattedValue": "2020-04-09 23:57",
                },
                "eventTimestamp": 2020-04-09T23:57:36.941Z,
                "entity": Immutable.Map {
                  "value": Immutable.List [
                    "xlsx assay",
                    233,
                  ],
                  "urlType": "assayRun",
                  "displayValue": "XLSX Assay",
                },
                "entitySeparator": undefined,
                "metadata": Immutable.List [
                  Immutable.Map {
                    "field": "Assay",
                    "value": Immutable.Map {
                      "value": "xlsx assay",
                      "urlType": "assays",
                      "displayValue": "XLSX Assay",
                    },
                  },
                  Immutable.Map {
                    "field": "Assay ID",
                    "value": Immutable.Map {
                      "value": Immutable.List [
                        "xlsx assay",
                        233,
                      ],
                      "urlType": "assayRun",
                      "displayValue": "XLSX Assay_2019-10-16_11-54-56",
                    },
                  },
                  Immutable.Map {
                    "field": "Completed By",
                    "value": Immutable.Map {
                      "value": 1005,
                      "urlType": "user",
                      "displayValue": "Vader",
                    },
                  },
                  Immutable.Map {
                    "field": "Date",
                    "value": Immutable.Map {
                      "value": "2020-04-09 23:57:36.941",
                      "formattedValue": "2020-04-09 23:57",
                    },
                  },
                ],
                "oldData": undefined,
                "newData": undefined,
                "userComment": undefined,
              },
              Immutable.Record {
                "rowId": 550,
                "eventType": "workflow",
                "subEventType": undefined,
                "summary": "Added to job",
                "user": Immutable.Map {
                  "value": 1038,
                  "urlType": "user",
                  "displayValue": "Test Lab User",
                },
                "eventUserId": 1038,
                "timestamp": Immutable.Map {
                  "value": "2020-04-10 02:57:36.941",
                  "formattedValue": "2020-04-10 02:57",
                },
                "eventTimestamp": 2020-04-10T02:57:36.941Z,
                "entity": Immutable.Map {
                  "value": 689,
                  "urlType": "workflow",
                  "displayValue": "job-4",
                },
                "entitySeparator": undefined,
                "metadata": Immutable.List [
                  Immutable.Map {
                    "field": "Job Name",
                    "value": Immutable.Map {
                      "value": 689,
                      "urlType": "workflow",
                      "displayValue": "job-4",
                    },
                  },
                  Immutable.Map {
                    "field": "Job Owner",
                    "value": Immutable.Map {
                      "value": 1038,
                      "urlType": "user",
                      "displayValue": "Test Lab User",
                    },
                  },
                  Immutable.Map {
                    "field": "Job Status",
                    "value": "In Progress",
                  },
                ],
                "oldData": undefined,
                "newData": undefined,
                "userComment": undefined,
              },
            ]
          }
          onEventSelection={[MockFunction]}
          selectedEntityConnectionInfo={null}
          showRecentFirst={false}
        />
      </Col>
    </Row>
  </PanelBody>
</ForwardRef>
`;

exports[`<SampleEventListing/> Without view user link perm 1`] = `
<ForwardRef>
  <PanelBody
    bsClass="panel"
    collapsible={false}
  >
    <div>
      <Row
        bsClass="row"
        componentClass="div"
      >
        <Col
          bsClass="col"
          className="font-large timeline-title"
          componentClass="div"
          xs={7}
        >
          Event Timeline for S-20200404-1
        </Col>
        <Col
          bsClass="col"
          componentClass="div"
          xs={5}
        >
          <span
            className="pull-right"
          >
            <DropdownButton
              className="button-right-spacing"
              id="job-tasks-comments-sort-btn"
              title="Show Oldest first"
            >
              <MenuItem
                active={true}
                bsClass="dropdown"
                disabled={false}
                divider={false}
                header={false}
                key="oldest"
                onClick={[Function]}
              >
                Oldest first
              </MenuItem>
              <MenuItem
                active={false}
                bsClass="dropdown"
                disabled={false}
                divider={false}
                header={false}
                key="recent"
                onClick={[Function]}
              >
                Recent first
              </MenuItem>
            </DropdownButton>
            <Tip
              caption="Export"
              trigger={
                [
                  "focus",
                  "hover",
                ]
              }
            >
              <Button
                active={false}
                block={false}
                bsClass="btn"
                bsStyle="default"
                disabled={false}
                onClick={[Function]}
              >
                <i
                  className="fa fa-download"
                />
              </Button>
            </Tip>
          </span>
        </Col>
      </Row>
      <hr />
    </div>
    <div>
      <ExpandableFilterToggle
        filterExpanded={false}
        hasFilter={false}
        panelCls="show-hide-filter-toggle"
        resetFilter={[Function]}
        toggleFilterPanel={[Function]}
      />
      <hr />
    </div>
    <Row
      bsClass="row"
      componentClass="div"
    >
      <Col
        bsClass="col"
        className="timeline-container"
        componentClass="div"
        lg={12}
      >
        <TimelineView
          events={
            [
              Immutable.Record {
                "rowId": 462022,
                "eventType": "samples",
                "subEventType": undefined,
                "summary": "Sample Registered",
                "user": Immutable.Map {
                  "value": 1005,
                  "urlType": "user",
                  "displayValue": "Vader",
                },
                "eventUserId": 1005,
                "timestamp": Immutable.Map {
                  "value": "2020-04-04 21:57:36.941",
                  "formattedValue": "2020-04-04 21:57",
                },
                "eventTimestamp": 2020-04-04T21:57:36.941Z,
                "entity": undefined,
                "entitySeparator": undefined,
                "metadata": undefined,
                "oldData": Immutable.Map {},
                "newData": Immutable.Map {
                  "ModifiedBy": "1005",
                  "LSID": "urn:lsid:labkey.com:Sample.101.test2:S-20200404-1",
                  "_rowNumber": "1",
                  "Created": "2020-04-04T21:56:54.637-07:00",
                  "Modified": "2020-04-04T21:56:54.637-07:00",
                  "genId": "7",
                  "Name": "S-20200404-1",
                  "Folder": "fac9522f-d271-1037-ab94-32fda5aa448a",
                  "MaterialInputs/Test": "abc",
                  "RowId": "86873",
                  "cpasType": "urn:lsid:labkey.com:SampleSet.Folder-101:test2",
                  "Description": "des",
                  "CreatedBy": "1005",
                },
                "userComment": undefined,
              },
              Immutable.Record {
                "rowId": 544,
                "eventType": "workflow",
                "subEventType": undefined,
                "summary": "Added to job",
                "user": Immutable.Map {
                  "value": 1005,
                  "urlType": "user",
                  "displayValue": "Vader",
                },
                "eventUserId": 1005,
                "timestamp": Immutable.Map {
                  "value": "2020-04-04 22:57:36.941",
                  "formattedValue": "2020-04-04 22:57",
                },
                "eventTimestamp": 2020-04-04T22:57:36.941Z,
                "entity": Immutable.Map {
                  "value": 687,
                  "urlType": "workflow",
                  "displayValue": "job-1",
                },
                "entitySeparator": undefined,
                "metadata": Immutable.List [
                  Immutable.Map {
                    "field": "Job Name",
                    "value": Immutable.Map {
                      "value": 687,
                      "urlType": "workflow",
                      "displayValue": "job-1",
                    },
                  },
                  Immutable.Map {
                    "field": "Job Owner",
                    "value": Immutable.Map {
                      "value": 1005,
                      "urlType": "user",
                      "displayValue": "Vader",
                    },
                  },
                  Immutable.Map {
                    "field": "Job Status",
                    "value": "In Progress",
                  },
                ],
                "oldData": undefined,
                "newData": undefined,
                "userComment": undefined,
              },
              Immutable.Record {
                "rowId": 462023,
                "eventType": "samples",
                "subEventType": undefined,
                "summary": "Sample updated",
                "user": Immutable.Map {
                  "value": 1005,
                  "urlType": "user",
                  "displayValue": "Vader",
                },
                "eventUserId": 1005,
                "timestamp": Immutable.Map {
                  "value": "2020-04-05 21:57:36.941",
                  "formattedValue": "2020-04-05 21:57",
                },
                "eventTimestamp": 2020-04-05T21:57:36.941Z,
                "entity": undefined,
                "entitySeparator": undefined,
                "metadata": undefined,
                "oldData": Immutable.Map {
                  "description": "des",
                  "modified": "2020-04-05T21:56:54.584-07:00",
                },
                "newData": Immutable.Map {
                  "description": "desc",
                  "modified": "2020-04-05T21:57:36.915-07:00",
                },
                "userComment": undefined,
              },
              Immutable.Record {
                "rowId": 1548,
                "eventType": "assays",
                "subEventType": undefined,
                "summary": "Assay Data Uploaded",
                "user": Immutable.Map {
                  "value": 1005,
                  "urlType": "user",
                  "displayValue": "Vader",
                },
                "eventUserId": 1005,
                "timestamp": Immutable.Map {
                  "value": "2020-04-08 22:57:36.941",
                  "formattedValue": "2020-04-08 22:57",
                },
                "eventTimestamp": 2020-04-08T22:57:36.941Z,
                "entity": Immutable.Map {
                  "value": "xlsx assay",
                  "urlType": "assays",
                  "displayValue": "XLSX Assay",
                },
                "entitySeparator": undefined,
                "metadata": Immutable.List [
                  Immutable.Map {
                    "field": "Assay",
                    "value": Immutable.Map {
                      "value": "xlsx assay",
                      "urlType": "assays",
                      "displayValue": "XLSX Assay",
                    },
                  },
                  Immutable.Map {
                    "field": "Completed By",
                    "value": Immutable.Map {
                      "value": 1005,
                      "urlType": "user",
                      "displayValue": "Vader",
                    },
                  },
                  Immutable.Map {
                    "field": "Date",
                    "value": Immutable.Map {
                      "value": "2020-04-08 21:57:36.941",
                      "formattedValue": "2020-04-08 21:57",
                    },
                  },
                ],
                "oldData": undefined,
                "newData": undefined,
                "userComment": undefined,
              },
              Immutable.Record {
                "rowId": 546,
                "eventType": "workflow",
                "subEventType": undefined,
                "summary": "Added to job",
                "user": Immutable.Map {
                  "value": 1038,
                  "urlType": "user",
                  "displayValue": "Test Lab User",
                },
                "eventUserId": 1038,
                "timestamp": Immutable.Map {
                  "value": "2020-04-09 18:57:36.941",
                  "formattedValue": "2020-04-09 18:57",
                },
                "eventTimestamp": 2020-04-09T18:57:36.941Z,
                "entity": Immutable.Map {
                  "value": 688,
                  "urlType": "workflow",
                  "displayValue": "job-3",
                },
                "entitySeparator": undefined,
                "metadata": Immutable.List [
                  Immutable.Map {
                    "field": "Job Name",
                    "value": Immutable.Map {
                      "value": 688,
                      "urlType": "workflow",
                      "displayValue": "job-3",
                    },
                  },
                  Immutable.Map {
                    "field": "Job Owner",
                    "value": Immutable.Map {
                      "value": 1038,
                      "urlType": "user",
                      "displayValue": "Test Lab User",
                    },
                  },
                  Immutable.Map {
                    "field": "Job Status",
                    "value": "In Progress",
                  },
                ],
                "oldData": undefined,
                "newData": undefined,
                "userComment": undefined,
              },
              Immutable.Record {
                "rowId": 547,
                "eventType": "workflow",
                "subEventType": undefined,
                "summary": "Removed from job",
                "user": Immutable.Map {
                  "value": 1038,
                  "urlType": "user",
                  "displayValue": "Test Lab User",
                },
                "eventUserId": 1038,
                "timestamp": Immutable.Map {
                  "value": "2020-04-09 19:57:36.941",
                  "formattedValue": "2020-04-09 19:57",
                },
                "eventTimestamp": 2020-04-09T19:57:36.941Z,
                "entity": Immutable.Map {
                  "value": 688,
                  "urlType": "workflow",
                  "displayValue": "job-3",
                },
                "entitySeparator": undefined,
                "metadata": Immutable.List [
                  Immutable.Map {
                    "field": "Job Name",
                    "value": Immutable.Map {
                      "value": 688,
                      "urlType": "workflow",
                      "displayValue": "job-3",
                    },
                  },
                  Immutable.Map {
                    "field": "Job Owner",
                    "value": Immutable.Map {
                      "value": 1038,
                      "urlType": "user",
                      "displayValue": "Test Lab User",
                    },
                  },
                  Immutable.Map {
                    "field": "Job Status",
                    "value": "In Progress",
                  },
                ],
                "oldData": undefined,
                "newData": undefined,
                "userComment": undefined,
              },
              Immutable.Record {
                "rowId": 548,
                "eventType": "workflow",
                "subEventType": undefined,
                "summary": "Completed job",
                "user": Immutable.Map {
                  "value": 1005,
                  "urlType": "user",
                  "displayValue": "Vader",
                },
                "eventUserId": 1005,
                "timestamp": Immutable.Map {
                  "value": "2020-04-09 20:57:36.941",
                  "formattedValue": "2020-04-09 20:57",
                },
                "eventTimestamp": 2020-04-09T20:57:36.941Z,
                "entity": Immutable.Map {
                  "value": 687,
                  "urlType": "workflow",
                  "displayValue": "job-1",
                },
                "entitySeparator": undefined,
                "metadata": Immutable.List [
                  Immutable.Map {
                    "field": "Job Name",
                    "value": Immutable.Map {
                      "value": 687,
                      "urlType": "workflow",
                      "displayValue": "job-1",
                    },
                  },
                  Immutable.Map {
                    "field": "Job Owner",
                    "value": Immutable.Map {
                      "value": 1005,
                      "urlType": "user",
                      "displayValue": "Vader",
                    },
                  },
                  Immutable.Map {
                    "field": "Job Status",
                    "value": "Completed",
                  },
                ],
                "oldData": undefined,
                "newData": undefined,
                "userComment": undefined,
              },
              Immutable.Record {
                "rowId": 1549,
                "eventType": "assays",
                "subEventType": undefined,
                "summary": "Assay Data Re-Import Run",
                "user": Immutable.Map {
                  "value": 1005,
                  "urlType": "user",
                  "displayValue": "Vader",
                },
                "eventUserId": 1005,
                "timestamp": Immutable.Map {
                  "value": "2020-04-09 23:57:36.941",
                  "formattedValue": "2020-04-09 23:57",
                },
                "eventTimestamp": 2020-04-09T23:57:36.941Z,
                "entity": Immutable.Map {
                  "value": Immutable.List [
                    "xlsx assay",
                    233,
                  ],
                  "urlType": "assayRun",
                  "displayValue": "XLSX Assay",
                },
                "entitySeparator": undefined,
                "metadata": Immutable.List [
                  Immutable.Map {
                    "field": "Assay",
                    "value": Immutable.Map {
                      "value": "xlsx assay",
                      "urlType": "assays",
                      "displayValue": "XLSX Assay",
                    },
                  },
                  Immutable.Map {
                    "field": "Assay ID",
                    "value": Immutable.Map {
                      "value": Immutable.List [
                        "xlsx assay",
                        233,
                      ],
                      "urlType": "assayRun",
                      "displayValue": "XLSX Assay_2019-10-16_11-54-56",
                    },
                  },
                  Immutable.Map {
                    "field": "Completed By",
                    "value": Immutable.Map {
                      "value": 1005,
                      "urlType": "user",
                      "displayValue": "Vader",
                    },
                  },
                  Immutable.Map {
                    "field": "Date",
                    "value": Immutable.Map {
                      "value": "2020-04-09 23:57:36.941",
                      "formattedValue": "2020-04-09 23:57",
                    },
                  },
                ],
                "oldData": undefined,
                "newData": undefined,
                "userComment": undefined,
              },
              Immutable.Record {
                "rowId": 550,
                "eventType": "workflow",
                "subEventType": undefined,
                "summary": "Added to job",
                "user": Immutable.Map {
                  "value": 1038,
                  "urlType": "user",
                  "displayValue": "Test Lab User",
                },
                "eventUserId": 1038,
                "timestamp": Immutable.Map {
                  "value": "2020-04-10 02:57:36.941",
                  "formattedValue": "2020-04-10 02:57",
                },
                "eventTimestamp": 2020-04-10T02:57:36.941Z,
                "entity": Immutable.Map {
                  "value": 689,
                  "urlType": "workflow",
                  "displayValue": "job-4",
                },
                "entitySeparator": undefined,
                "metadata": Immutable.List [
                  Immutable.Map {
                    "field": "Job Name",
                    "value": Immutable.Map {
                      "value": 689,
                      "urlType": "workflow",
                      "displayValue": "job-4",
                    },
                  },
                  Immutable.Map {
                    "field": "Job Owner",
                    "value": Immutable.Map {
                      "value": 1038,
                      "urlType": "user",
                      "displayValue": "Test Lab User",
                    },
                  },
                  Immutable.Map {
                    "field": "Job Status",
                    "value": "In Progress",
                  },
                ],
                "oldData": undefined,
                "newData": undefined,
                "userComment": undefined,
              },
            ]
          }
          onEventSelection={[MockFunction]}
          selectedEntityConnectionInfo={null}
          showRecentFirst={false}
        />
      </Col>
    </Row>
  </PanelBody>
</ForwardRef>
`;
