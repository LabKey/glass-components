// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`BooleanFieldOptions Boolean data type 1`] = `
<BooleanFieldOptions
  domainIndex={1}
  format="Yes;No;Blank"
  index={1}
  label="Boolean Field Options"
  lockType="NotLocked"
  onChange={[MockFunction]}
>
  <div>
    <Row
      bsClass="row"
      componentClass="div"
    >
      <div
        className="row"
      >
        <Col
          bsClass="col"
          componentClass="div"
          xs={12}
        >
          <div
            className="col-xs-12"
          >
            <SectionHeading
              title="Boolean Field Options"
            >
              <div
                className="domain-field-section-heading"
              >
                Boolean Field Options
              </div>
            </SectionHeading>
          </div>
        </Col>
      </div>
    </Row>
    <Row
      bsClass="row"
      componentClass="div"
    >
      <div
        className="row"
      >
        <Col
          bsClass="col"
          componentClass="div"
          xs={12}
        >
          <div
            className="col-xs-12"
          >
            <div
              className="domain-field-label"
            >
              <DomainFieldLabel
                helpTipBody={
                  <div>
                    Use boolean formatting to specify the text to show when a value is true and false. Text can optionally be shown for null values.
                    <br />
                    <br />
                    For example, "Yes;No;Blank" would output "Yes" if the value is true, "No" if false, and "Blank" for a null value.
                  </div>
                }
                label="Format for Boolean Values"
              >
                Format for Boolean 
                <span
                  className="domain-no-wrap"
                >
                  Values
                  <Component
                    customStyle={{}}
                    id="tooltip"
                    size="1x"
                    title="Format for Boolean Values"
                  >
                    <span
                      className="label-help-target"
                      onMouseOut={[Function]}
                      onMouseOver={[Function]}
                    >
                      <FontAwesomeIcon
                        beat={false}
                        beatFade={false}
                        border={false}
                        bounce={false}
                        className="label-help-icon"
                        fade={false}
                        fixedWidth={false}
                        flip={false}
                        icon={
                          {
                            "icon": [
                              512,
                              512,
                              [],
                              "f059",
                              "M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z",
                            ],
                            "iconName": "question-circle",
                            "prefix": "fas",
                          }
                        }
                        inverse={false}
                        listItem={false}
                        mask={null}
                        maskId={null}
                        pull={null}
                        pulse={false}
                        rotation={null}
                        shake={false}
                        size="1x"
                        spin={false}
                        spinPulse={false}
                        spinReverse={false}
                        style={{}}
                        swapOpacity={false}
                        symbol={false}
                        title=""
                        titleId={null}
                        transform={null}
                      >
                        <svg
                          aria-hidden="true"
                          className="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                          data-icon="question-circle"
                          data-prefix="fas"
                          focusable="false"
                          role="img"
                          style={{}}
                          viewBox="0 0 512 512"
                          xmlns="http://www.w3.org/2000/svg"
                        >
                          <path
                            d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                            fill="currentColor"
                            style={{}}
                          />
                        </svg>
                      </FontAwesomeIcon>
                      <Overlay
                        animation={[Function]}
                        placement="right"
                        rootClose={false}
                        show={false}
                        target={
                          <span
                            class="label-help-target"
                          >
                            <svg
                              aria-hidden="true"
                              class="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                              data-icon="question-circle"
                              data-prefix="fas"
                              focusable="false"
                              role="img"
                              viewBox="0 0 512 512"
                              xmlns="http://www.w3.org/2000/svg"
                            >
                              <path
                                d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                fill="currentColor"
                              />
                            </svg>
                          </span>
                        }
                      >
                        <Overlay
                          placement="right"
                          rootClose={false}
                          show={false}
                          target={
                            <span
                              class="label-help-target"
                            >
                              <svg
                                aria-hidden="true"
                                class="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                                data-icon="question-circle"
                                data-prefix="fas"
                                focusable="false"
                                role="img"
                                viewBox="0 0 512 512"
                                xmlns="http://www.w3.org/2000/svg"
                              >
                                <path
                                  d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                  fill="currentColor"
                                />
                              </svg>
                            </span>
                          }
                          transition={[Function]}
                        />
                      </Overlay>
                    </span>
                  </Component>
                </span>
              </DomainFieldLabel>
            </div>
          </div>
        </Col>
      </div>
    </Row>
    <Row
      bsClass="row"
      componentClass="div"
    >
      <div
        className="row"
      >
        <Col
          bsClass="col"
          componentClass="div"
          xs={3}
        >
          <div
            className="col-xs-3"
          >
            <FormControl
              bsClass="form-control"
              componentClass="input"
              disabled={false}
              id="domainpropertiesrow-format-1-1"
              name="domainpropertiesrow-scale"
              onChange={[Function]}
              type="text"
              value="Yes;No;Blank"
            >
              <input
                className="form-control"
                disabled={false}
                id="domainpropertiesrow-format-1-1"
                name="domainpropertiesrow-scale"
                onChange={[Function]}
                type="text"
                value="Yes;No;Blank"
              />
            </FormControl>
          </div>
        </Col>
      </div>
    </Row>
  </div>
</BooleanFieldOptions>
`;
