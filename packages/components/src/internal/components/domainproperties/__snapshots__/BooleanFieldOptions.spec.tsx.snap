// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`BooleanFieldOptions Boolean data type 1`] = `
<BooleanFieldOptions
  domainIndex={1}
  format="Yes;No;Blank"
  index={1}
  label="Boolean Field Options"
  lockType="NotLocked"
  onChange={[MockFunction]}
>
  <div>
    <Row
      bsClass="row"
      componentClass="div"
    >
      <div
        className="row"
      >
        <Col
          bsClass="col"
          componentClass="div"
          xs={12}
        >
          <div
            className="col-xs-12"
          >
            <SectionHeading
              title="Boolean Field Options"
            >
              <div
                className="domain-field-section-heading"
              >
                Boolean Field Options
              </div>
            </SectionHeading>
          </div>
        </Col>
      </div>
    </Row>
    <Row
      bsClass="row"
      componentClass="div"
    >
      <div
        className="row"
      >
        <Col
          bsClass="col"
          componentClass="div"
          xs={12}
        >
          <div
            className="col-xs-12"
          >
            <div
              className="domain-field-label"
            >
              <DomainFieldLabel
                helpTipBody={
                  <div>
                    Use boolean formatting to specify the text to show when a value is true and false. Text can optionally be shown for null values.
                    <br />
                    <br />
                    For example, "Yes;No;Blank" would output "Yes" if the value is true, "No" if false, and "Blank" for a null value.
                  </div>
                }
                label="Format for Boolean Values"
              >
                Format for Boolean 
                <span
                  className="domain-no-wrap"
                >
                  Values
                  <Component
                    id="tooltip"
                    title="Format for Boolean Values"
                  >
                    <span
                      className="label-help-target"
                      onMouseOut={[Function]}
                      onMouseOver={[Function]}
                    >
                      <span
                        className="label-help-icon fa fa-question-circle"
                      />
                      <Overlay
                        animation={[Function]}
                        placement="right"
                        rootClose={false}
                        show={false}
                        target={
                          <span
                            class="label-help-target"
                          >
                            <span
                              class="label-help-icon fa fa-question-circle"
                            />
                          </span>
                        }
                      >
                        <Overlay
                          placement="right"
                          rootClose={false}
                          show={false}
                          target={
                            <span
                              class="label-help-target"
                            >
                              <span
                                class="label-help-icon fa fa-question-circle"
                              />
                            </span>
                          }
                          transition={[Function]}
                        />
                      </Overlay>
                    </span>
                  </Component>
                </span>
              </DomainFieldLabel>
            </div>
          </div>
        </Col>
      </div>
    </Row>
    <Row
      bsClass="row"
      componentClass="div"
    >
      <div
        className="row"
      >
        <Col
          bsClass="col"
          componentClass="div"
          xs={3}
        >
          <div
            className="col-xs-3"
          >
            <FormControl
              bsClass="form-control"
              componentClass="input"
              disabled={false}
              id="domainpropertiesrow-format-1-1"
              name="domainpropertiesrow-scale"
              onChange={[Function]}
              type="text"
              value="Yes;No;Blank"
            >
              <input
                className="form-control"
                disabled={false}
                id="domainpropertiesrow-format-1-1"
                name="domainpropertiesrow-scale"
                onChange={[Function]}
                type="text"
                value="Yes;No;Blank"
              />
            </FormControl>
          </div>
        </Col>
      </div>
    </Row>
  </div>
</BooleanFieldOptions>
`;
