// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`DateTimeFieldOptions Date Time data type 1`] = `
<DateTimeFieldOptions
  domainIndex={1}
  excludeFromShifting={true}
  format="MM/dd/yyyy hh:mm"
  index={1}
  label="Date and Time Field Options"
  lockType="NotLocked"
  onChange={[MockFunction]}
>
  <div>
    <Row
      bsClass="row"
      componentClass="div"
    >
      <div
        className="row"
      >
        <Col
          bsClass="col"
          componentClass="div"
          xs={12}
        >
          <div
            className="col-xs-12"
          >
            <SectionHeading
              title="Date and Time Field Options"
            >
              <div
                className="domain-field-section-heading"
              >
                Date and Time Field Options
              </div>
            </SectionHeading>
          </div>
        </Col>
      </div>
    </Row>
    <Row
      bsClass="row"
      componentClass="div"
    >
      <div
        className="row"
      >
        <Col
          bsClass="col"
          componentClass="div"
          xs={3}
        >
          <div
            className="col-xs-3"
          >
            <div
              className="domain-field-label"
            >
              <DomainFieldLabel
                helpTipBody={
                  <React.Fragment>
                    <p>
                      To control how a date or time value is displayed, provide a string format compatible with the Java
                       
                      <Memo
                        urlSuffix="java/text/SimpleDateFormat.html"
                      >
                        SimpleDateFormat
                      </Memo>
                       class.
                    </p>
                    <p>
                      Learn more about using 
                      <HelpLink
                        topic="dateFormats#date"
                      >
                        Date and Time formats
                      </HelpLink>
                       in LabKey.
                    </p>
                  </React.Fragment>
                }
                label="Format for Dates"
              >
                Format for 
                <span
                  className="domain-no-wrap"
                >
                  Dates
                  <LabelHelpTip
                    title="Format for Dates"
                  >
                    <OverlayTrigger
                      id="tooltip"
                      overlay={
                        <Popover
                          id="tooltip"
                          title="Format for Dates"
                        >
                          <React.Fragment>
                            <p>
                              To control how a date or time value is displayed, provide a string format compatible with the Java
                               
                              <Memo
                                urlSuffix="java/text/SimpleDateFormat.html"
                              >
                                SimpleDateFormat
                              </Memo>
                               class.
                            </p>
                            <p>
                              Learn more about using 
                              <HelpLink
                                topic="dateFormats#date"
                              >
                                Date and Time formats
                              </HelpLink>
                               in LabKey.
                            </p>
                          </React.Fragment>
                        </Popover>
                      }
                    >
                      <div
                        className="overlay-trigger"
                        onClick={[Function]}
                        onMouseEnter={[Function]}
                        onMouseLeave={[Function]}
                      >
                        <span
                          className="label-help-target"
                        >
                          <span
                            className="label-help-icon fa fa-question-circle"
                          />
                        </span>
                      </div>
                    </OverlayTrigger>
                  </LabelHelpTip>
                </span>
              </DomainFieldLabel>
            </div>
          </div>
        </Col>
        <Col
          bsClass="col"
          componentClass="div"
          xs={9}
        >
          <div
            className="col-xs-9"
          />
        </Col>
      </div>
    </Row>
    <Row
      bsClass="row"
      componentClass="div"
    >
      <div
        className="row"
      >
        <Col
          bsClass="col"
          componentClass="div"
          xs={3}
        >
          <div
            className="col-xs-3"
          >
            <FormControl
              bsClass="form-control"
              componentClass="input"
              disabled={false}
              id="domainpropertiesrow-format-1-1"
              name="domainpropertiesrow-format"
              onChange={[Function]}
              type="text"
              value="MM/dd/yyyy hh:mm"
            >
              <input
                className="form-control"
                disabled={false}
                id="domainpropertiesrow-format-1-1"
                name="domainpropertiesrow-format"
                onChange={[Function]}
                type="text"
                value="MM/dd/yyyy hh:mm"
              />
            </FormControl>
          </div>
        </Col>
        <Col
          bsClass="col"
          componentClass="div"
          xs={9}
        >
          <div
            className="col-xs-9"
          />
        </Col>
      </div>
    </Row>
  </div>
</DateTimeFieldOptions>
`;
