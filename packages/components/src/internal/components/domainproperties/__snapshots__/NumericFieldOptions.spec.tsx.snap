// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`NumericFieldOptions Numeric data type 1`] = `
<NumericFieldOptions
  defaultScale="LOG"
  domainIndex={1}
  format="#.##"
  index={1}
  label="Numeric Field Options"
  lockType="NotLocked"
  onChange={[MockFunction]}
>
  <div>
    <div
      className="row"
    >
      <div
        className="col-xs-12"
      >
        <SectionHeading
          title="Numeric Field Options"
        >
          <div
            className="domain-field-section-heading"
          >
            Numeric Field Options
          </div>
        </SectionHeading>
      </div>
    </div>
    <div
      className="row"
    >
      <div
        className="col-xs-3"
      >
        <div
          className="domain-field-label"
        >
          <DomainFieldLabel
            helpTipBody={
              <React.Fragment>
                <p>
                  To control how a number value is displayed, provide a string format compatible with the Java
                   
                  <Memo
                    urlSuffix="java/text/DecimalFormat.html"
                  >
                    DecimalFormat
                  </Memo>
                   class.
                </p>
                <p>
                  Learn more about using 
                  <HelpLink
                    topic="dateFormats#number"
                  >
                    Number formats
                  </HelpLink>
                   in LabKey.
                </p>
              </React.Fragment>
            }
            label="Format for Numbers"
          >
            Format for 
            <span
              className="domain-no-wrap"
            >
              Numbers
              <LabelHelpTip
                title="Format for Numbers"
              >
                <OverlayTrigger
                  id="label-help-tip0"
                  overlay={
                    <Popover
                      id="label-help-tip-popover"
                      title="Format for Numbers"
                    >
                      <React.Fragment>
                        <p>
                          To control how a number value is displayed, provide a string format compatible with the Java
                           
                          <Memo
                            urlSuffix="java/text/DecimalFormat.html"
                          >
                            DecimalFormat
                          </Memo>
                           class.
                        </p>
                        <p>
                          Learn more about using 
                          <HelpLink
                            topic="dateFormats#number"
                          >
                            Number formats
                          </HelpLink>
                           in LabKey.
                        </p>
                      </React.Fragment>
                    </Popover>
                  }
                >
                  <div
                    className="overlay-trigger"
                    onClick={[Function]}
                    onMouseEnter={[Function]}
                    onMouseLeave={[Function]}
                  >
                    <span
                      className="label-help-target"
                    >
                      <span
                        className="label-help-icon fa fa-question-circle"
                      />
                    </span>
                  </div>
                </OverlayTrigger>
              </LabelHelpTip>
            </span>
          </DomainFieldLabel>
        </div>
      </div>
      <div
        className="col-xs-2"
      >
        <div
          className="domain-field-label"
        >
          Default Scale Type
        </div>
      </div>
    </div>
    <div
      className="row"
    >
      <div
        className="col-xs-3"
      >
        <input
          className="form-control"
          disabled={false}
          id="domainpropertiesrow-format-1-1"
          name="domainpropertiesrow-format"
          onChange={[Function]}
          type="text"
          value="#.##"
        />
      </div>
      <div
        className="col-xs-2"
      >
        <select
          className="form-control"
          disabled={false}
          id="domainpropertiesrow-defaultScale-1-1"
          name="domainpropertiesrow-defaultScale"
          onChange={[Function]}
          value="LOG"
        >
          <option
            key="domainpropertiesrow-defaultScaleoption-LINEAR-1-1"
            value="LINEAR"
          >
            Linear
          </option>
          <option
            key="domainpropertiesrow-defaultScaleoption-LOG-1-1"
            value="LOG"
          >
            Log
          </option>
        </select>
      </div>
    </div>
    <Memo()
      defaultScale="LOG"
      domainIndex={1}
      format="#.##"
      index={1}
      label="Numeric Field Options"
      lockType="NotLocked"
      onChange={[MockFunction]}
    />
  </div>
</NumericFieldOptions>
`;
