// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`TextFieldOptions Text data type 1`] = `
<TextFieldOptions
  domainIndex={1}
  index={1}
  label="Text Field Options"
  lockType="NotLocked"
  onChange={[MockFunction]}
  scale={200}
>
  <div>
    <div
      className="row"
    >
      <div
        className="col-xs-12"
      >
        <SectionHeading
          title="Text Field Options"
        >
          <div
            className="domain-field-section-heading"
          >
            Text Field Options
          </div>
        </SectionHeading>
      </div>
    </div>
    <div
      className="row"
    >
      <div
        className="col-xs-12"
      >
        <div
          className="domain-field-label"
        >
          <DomainFieldLabel
            helpTipBody={
              <React.Fragment>
                <p>
                  Sets the maximum character count for a text field.
                </p>
                <p>
                  Anything over 4,000 characters will use the 'Unlimited' designation.
                </p>
              </React.Fragment>
            }
            label="Maximum Text Length"
          >
            Maximum Text 
            <span
              className="domain-no-wrap"
            >
              Length
              <LabelHelpTip
                title="Maximum Text Length"
              >
                <OverlayTrigger
                  id="label-help-tip2"
                  overlay={
                    <Popover
                      id="label-help-tip-popover"
                      title="Maximum Text Length"
                    >
                      <React.Fragment>
                        <p>
                          Sets the maximum character count for a text field.
                        </p>
                        <p>
                          Anything over 4,000 characters will use the 'Unlimited' designation.
                        </p>
                      </React.Fragment>
                    </Popover>
                  }
                >
                  <div
                    className="overlay-trigger"
                    onClick={[Function]}
                    onMouseEnter={[Function]}
                    onMouseLeave={[Function]}
                  >
                    <span
                      className="label-help-target"
                    >
                      <span
                        className="label-help-icon fa fa-question-circle"
                      />
                    </span>
                  </div>
                </OverlayTrigger>
              </LabelHelpTip>
            </span>
          </DomainFieldLabel>
        </div>
      </div>
    </div>
    <div
      className="row"
    >
      <div
        className="col-xs-12 domain-text-options-col"
      >
        <input
          checked={false}
          className="form-control domain-text-options-radio1 domain-field-float-left"
          disabled={false}
          id="domainpropertiesrow-maxLength-1-1"
          onChange={[Function]}
          type="radio"
          value="maxLength"
        />
        <div>
          Unlimited
        </div>
      </div>
    </div>
    <div
      className="row"
    >
      <div
        className="col-xs-12"
      >
        <input
          checked={true}
          className="form-control domain-text-options-radio2 domain-field-float-left"
          id="domainpropertiesrow-customLength-1-1"
          onChange={[Function]}
          type="radio"
          value="customLength"
        />
        <span
          className="domain-text-options-length domain-field-float-left"
        >
          No longer than 
          <input
            className="form-control domain-text-length-field"
            disabled={false}
            id="domainpropertiesrow-scale-1-1"
            name="domainpropertiesrow-scale"
            onChange={[Function]}
            type="number"
            value={200}
          />
           characters
        </span>
      </div>
    </div>
    <Memo()
      domainIndex={1}
      index={1}
      label="Text Field Options"
      lockType="NotLocked"
      onChange={[MockFunction]}
      scale={200}
    />
  </div>
</TextFieldOptions>
`;
