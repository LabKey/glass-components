// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`AssayDesignerPanels appPropertiesOnly for new assay 1`] = `
<ComponentWithBaseDomainDesigner
  appPropertiesOnly={true}
  domainFormDisplayOptions={
    {
      "hideStudyPropertyTypes": true,
    }
  }
  initModel={
    Immutable.Record {
      "allowBackgroundUpload": false,
      "allowEditableResults": false,
      "allowQCStates": false,
      "allowTransformationScript": false,
      "allowPlateMetadata": false,
      "autoCopyTargetContainer": undefined,
      "autoCopyTargetContainerId": undefined,
      "autoLinkCategory": undefined,
      "availableDetectionMethods": undefined,
      "availableMetadataInputFormats": undefined,
      "availablePlateTemplates": undefined,
      "backgroundUpload": false,
      "description": undefined,
      "domains": Immutable.List [
        Immutable.Record {
          "name": "Batch Fields",
          "container": undefined,
          "description": undefined,
          "domainURI": undefined,
          "domainId": null,
          "allowFileLinkProperties": false,
          "allowAttachmentProperties": false,
          "allowFlagProperties": true,
          "allowSampleSubjectProperties": true,
          "allowTextChoiceProperties": true,
          "allowTimepointProperties": false,
          "showDefaultValueSettings": false,
          "defaultDefaultValueType": undefined,
          "defaultValueOptions": Immutable.List [],
          "fields": Immutable.List [],
          "indices": Immutable.List [],
          "domainException": undefined,
          "mandatoryFieldNames": Immutable.List [],
          "reservedFieldNames": Immutable.List [],
          "newDesignFields": undefined,
          "instructions": undefined,
          "domainKindName": undefined,
          "schemaName": undefined,
          "queryName": undefined,
        },
        Immutable.Record {
          "name": "Run Fields",
          "container": undefined,
          "description": undefined,
          "domainURI": undefined,
          "domainId": null,
          "allowFileLinkProperties": false,
          "allowAttachmentProperties": false,
          "allowFlagProperties": true,
          "allowSampleSubjectProperties": true,
          "allowTextChoiceProperties": true,
          "allowTimepointProperties": false,
          "showDefaultValueSettings": false,
          "defaultDefaultValueType": undefined,
          "defaultValueOptions": Immutable.List [],
          "fields": Immutable.List [],
          "indices": Immutable.List [],
          "domainException": undefined,
          "mandatoryFieldNames": Immutable.List [],
          "reservedFieldNames": Immutable.List [],
          "newDesignFields": undefined,
          "instructions": undefined,
          "domainKindName": undefined,
          "schemaName": undefined,
          "queryName": undefined,
        },
        Immutable.Record {
          "name": "Data Fields",
          "container": undefined,
          "description": undefined,
          "domainURI": undefined,
          "domainId": null,
          "allowFileLinkProperties": false,
          "allowAttachmentProperties": false,
          "allowFlagProperties": true,
          "allowSampleSubjectProperties": true,
          "allowTextChoiceProperties": true,
          "allowTimepointProperties": false,
          "showDefaultValueSettings": false,
          "defaultDefaultValueType": undefined,
          "defaultValueOptions": Immutable.List [],
          "fields": Immutable.List [],
          "indices": Immutable.List [],
          "domainException": undefined,
          "mandatoryFieldNames": Immutable.List [],
          "reservedFieldNames": Immutable.List [],
          "newDesignFields": undefined,
          "instructions": undefined,
          "domainKindName": undefined,
          "schemaName": undefined,
          "queryName": undefined,
        },
      ],
      "editableResults": false,
      "editableRuns": false,
      "exception": undefined,
      "metadataInputFormatHelp": undefined,
      "moduleTransformScripts": undefined,
      "name": undefined,
      "plateMetadata": undefined,
      "protocolId": undefined,
      "protocolParameters": undefined,
      "protocolTransformScripts": undefined,
      "providerName": "General",
      "saveScriptFiles": false,
      "selectedDetectionMethod": undefined,
      "selectedMetadataInputFormat": undefined,
      "selectedPlateTemplate": undefined,
      "status": "Active",
      "qcEnabled": undefined,
    }
  }
  onCancel={[MockFunction]}
  onComplete={[MockFunction]}
  testMode={true}
>
  <AssayDesignerPanelsImpl
    appPropertiesOnly={true}
    currentPanelIndex={0}
    domainFormDisplayOptions={
      {
        "hideStudyPropertyTypes": true,
      }
    }
    firstState={true}
    initModel={
      Immutable.Record {
        "allowBackgroundUpload": false,
        "allowEditableResults": false,
        "allowQCStates": false,
        "allowTransformationScript": false,
        "allowPlateMetadata": false,
        "autoCopyTargetContainer": undefined,
        "autoCopyTargetContainerId": undefined,
        "autoLinkCategory": undefined,
        "availableDetectionMethods": undefined,
        "availableMetadataInputFormats": undefined,
        "availablePlateTemplates": undefined,
        "backgroundUpload": false,
        "description": undefined,
        "domains": Immutable.List [
          Immutable.Record {
            "name": "Batch Fields",
            "container": undefined,
            "description": undefined,
            "domainURI": undefined,
            "domainId": null,
            "allowFileLinkProperties": false,
            "allowAttachmentProperties": false,
            "allowFlagProperties": true,
            "allowSampleSubjectProperties": true,
            "allowTextChoiceProperties": true,
            "allowTimepointProperties": false,
            "showDefaultValueSettings": false,
            "defaultDefaultValueType": undefined,
            "defaultValueOptions": Immutable.List [],
            "fields": Immutable.List [],
            "indices": Immutable.List [],
            "domainException": undefined,
            "mandatoryFieldNames": Immutable.List [],
            "reservedFieldNames": Immutable.List [],
            "newDesignFields": undefined,
            "instructions": undefined,
            "domainKindName": undefined,
            "schemaName": undefined,
            "queryName": undefined,
          },
          Immutable.Record {
            "name": "Run Fields",
            "container": undefined,
            "description": undefined,
            "domainURI": undefined,
            "domainId": null,
            "allowFileLinkProperties": false,
            "allowAttachmentProperties": false,
            "allowFlagProperties": true,
            "allowSampleSubjectProperties": true,
            "allowTextChoiceProperties": true,
            "allowTimepointProperties": false,
            "showDefaultValueSettings": false,
            "defaultDefaultValueType": undefined,
            "defaultValueOptions": Immutable.List [],
            "fields": Immutable.List [],
            "indices": Immutable.List [],
            "domainException": undefined,
            "mandatoryFieldNames": Immutable.List [],
            "reservedFieldNames": Immutable.List [],
            "newDesignFields": undefined,
            "instructions": undefined,
            "domainKindName": undefined,
            "schemaName": undefined,
            "queryName": undefined,
          },
          Immutable.Record {
            "name": "Data Fields",
            "container": undefined,
            "description": undefined,
            "domainURI": undefined,
            "domainId": null,
            "allowFileLinkProperties": false,
            "allowAttachmentProperties": false,
            "allowFlagProperties": true,
            "allowSampleSubjectProperties": true,
            "allowTextChoiceProperties": true,
            "allowTimepointProperties": false,
            "showDefaultValueSettings": false,
            "defaultDefaultValueType": undefined,
            "defaultValueOptions": Immutable.List [],
            "fields": Immutable.List [],
            "indices": Immutable.List [],
            "domainException": undefined,
            "mandatoryFieldNames": Immutable.List [],
            "reservedFieldNames": Immutable.List [],
            "newDesignFields": undefined,
            "instructions": undefined,
            "domainKindName": undefined,
            "schemaName": undefined,
            "queryName": undefined,
          },
        ],
        "editableResults": false,
        "editableRuns": false,
        "exception": undefined,
        "metadataInputFormatHelp": undefined,
        "moduleTransformScripts": undefined,
        "name": undefined,
        "plateMetadata": undefined,
        "protocolId": undefined,
        "protocolParameters": undefined,
        "protocolTransformScripts": undefined,
        "providerName": "General",
        "saveScriptFiles": false,
        "selectedDetectionMethod": undefined,
        "selectedMetadataInputFormat": undefined,
        "selectedPlateTemplate": undefined,
        "status": "Active",
        "qcEnabled": undefined,
      }
    }
    onCancel={[MockFunction]}
    onComplete={[MockFunction]}
    onFinish={[Function]}
    onTogglePanel={[Function]}
    setSubmitting={[Function]}
    submitting={false}
    testMode={true}
    visitedPanels={Immutable.List []}
  >
    <BaseDomainDesigner
      domains={
        Immutable.List [
          Immutable.Record {
            "name": "Batch Fields",
            "container": undefined,
            "description": undefined,
            "domainURI": undefined,
            "domainId": null,
            "allowFileLinkProperties": false,
            "allowAttachmentProperties": false,
            "allowFlagProperties": true,
            "allowSampleSubjectProperties": true,
            "allowTextChoiceProperties": true,
            "allowTimepointProperties": false,
            "showDefaultValueSettings": false,
            "defaultDefaultValueType": undefined,
            "defaultValueOptions": Immutable.List [],
            "fields": Immutable.List [],
            "indices": Immutable.List [],
            "domainException": undefined,
            "mandatoryFieldNames": Immutable.List [],
            "reservedFieldNames": Immutable.List [],
            "newDesignFields": undefined,
            "instructions": undefined,
            "domainKindName": undefined,
            "schemaName": undefined,
            "queryName": undefined,
          },
          Immutable.Record {
            "name": "Run Fields",
            "container": undefined,
            "description": undefined,
            "domainURI": undefined,
            "domainId": null,
            "allowFileLinkProperties": false,
            "allowAttachmentProperties": false,
            "allowFlagProperties": true,
            "allowSampleSubjectProperties": true,
            "allowTextChoiceProperties": true,
            "allowTimepointProperties": false,
            "showDefaultValueSettings": false,
            "defaultDefaultValueType": undefined,
            "defaultValueOptions": Immutable.List [],
            "fields": Immutable.List [],
            "indices": Immutable.List [],
            "domainException": undefined,
            "mandatoryFieldNames": Immutable.List [],
            "reservedFieldNames": Immutable.List [],
            "newDesignFields": undefined,
            "instructions": undefined,
            "domainKindName": undefined,
            "schemaName": undefined,
            "queryName": undefined,
          },
          Immutable.Record {
            "name": "Data Fields",
            "container": undefined,
            "description": undefined,
            "domainURI": undefined,
            "domainId": null,
            "allowFileLinkProperties": false,
            "allowAttachmentProperties": false,
            "allowFlagProperties": true,
            "allowSampleSubjectProperties": true,
            "allowTextChoiceProperties": true,
            "allowTimepointProperties": false,
            "showDefaultValueSettings": false,
            "defaultDefaultValueType": undefined,
            "defaultValueOptions": Immutable.List [],
            "fields": Immutable.List [],
            "indices": Immutable.List [],
            "domainException": undefined,
            "mandatoryFieldNames": Immutable.List [],
            "reservedFieldNames": Immutable.List [],
            "newDesignFields": undefined,
            "instructions": undefined,
            "domainKindName": undefined,
            "schemaName": undefined,
            "queryName": undefined,
          },
        ]
      }
      hasValidProperties={false}
      onCancel={[MockFunction]}
      onFinish={[Function]}
      saveBtnText="Save"
      submitting={false}
      visitedPanels={Immutable.List []}
    >
      <ComponentWithDomainPropertiesPanelCollapse
        appPropertiesOnly={true}
        controlledCollapse={true}
        hideStudyProperties={true}
        initCollapsed={false}
        model={
          Immutable.Record {
            "allowBackgroundUpload": false,
            "allowEditableResults": false,
            "allowQCStates": false,
            "allowTransformationScript": false,
            "allowPlateMetadata": false,
            "autoCopyTargetContainer": undefined,
            "autoCopyTargetContainerId": undefined,
            "autoLinkCategory": undefined,
            "availableDetectionMethods": undefined,
            "availableMetadataInputFormats": undefined,
            "availablePlateTemplates": undefined,
            "backgroundUpload": false,
            "description": undefined,
            "domains": Immutable.List [
              Immutable.Record {
                "name": "Batch Fields",
                "container": undefined,
                "description": undefined,
                "domainURI": undefined,
                "domainId": null,
                "allowFileLinkProperties": false,
                "allowAttachmentProperties": false,
                "allowFlagProperties": true,
                "allowSampleSubjectProperties": true,
                "allowTextChoiceProperties": true,
                "allowTimepointProperties": false,
                "showDefaultValueSettings": false,
                "defaultDefaultValueType": undefined,
                "defaultValueOptions": Immutable.List [],
                "fields": Immutable.List [],
                "indices": Immutable.List [],
                "domainException": undefined,
                "mandatoryFieldNames": Immutable.List [],
                "reservedFieldNames": Immutable.List [],
                "newDesignFields": undefined,
                "instructions": undefined,
                "domainKindName": undefined,
                "schemaName": undefined,
                "queryName": undefined,
              },
              Immutable.Record {
                "name": "Run Fields",
                "container": undefined,
                "description": undefined,
                "domainURI": undefined,
                "domainId": null,
                "allowFileLinkProperties": false,
                "allowAttachmentProperties": false,
                "allowFlagProperties": true,
                "allowSampleSubjectProperties": true,
                "allowTextChoiceProperties": true,
                "allowTimepointProperties": false,
                "showDefaultValueSettings": false,
                "defaultDefaultValueType": undefined,
                "defaultValueOptions": Immutable.List [],
                "fields": Immutable.List [],
                "indices": Immutable.List [],
                "domainException": undefined,
                "mandatoryFieldNames": Immutable.List [],
                "reservedFieldNames": Immutable.List [],
                "newDesignFields": undefined,
                "instructions": undefined,
                "domainKindName": undefined,
                "schemaName": undefined,
                "queryName": undefined,
              },
              Immutable.Record {
                "name": "Data Fields",
                "container": undefined,
                "description": undefined,
                "domainURI": undefined,
                "domainId": null,
                "allowFileLinkProperties": false,
                "allowAttachmentProperties": false,
                "allowFlagProperties": true,
                "allowSampleSubjectProperties": true,
                "allowTextChoiceProperties": true,
                "allowTimepointProperties": false,
                "showDefaultValueSettings": false,
                "defaultDefaultValueType": undefined,
                "defaultValueOptions": Immutable.List [],
                "fields": Immutable.List [],
                "indices": Immutable.List [],
                "domainException": undefined,
                "mandatoryFieldNames": Immutable.List [],
                "reservedFieldNames": Immutable.List [],
                "newDesignFields": undefined,
                "instructions": undefined,
                "domainKindName": undefined,
                "schemaName": undefined,
                "queryName": undefined,
              },
            ],
            "editableResults": false,
            "editableRuns": false,
            "exception": undefined,
            "metadataInputFormatHelp": undefined,
            "moduleTransformScripts": undefined,
            "name": undefined,
            "plateMetadata": undefined,
            "protocolId": undefined,
            "protocolParameters": undefined,
            "protocolTransformScripts": undefined,
            "providerName": "General",
            "saveScriptFiles": false,
            "selectedDetectionMethod": undefined,
            "selectedMetadataInputFormat": undefined,
            "selectedPlateTemplate": undefined,
            "status": "Active",
            "qcEnabled": undefined,
          }
        }
        onChange={[Function]}
        onToggle={[Function]}
        panelStatus="NONE"
        validate={false}
      >
        <Component
          appPropertiesOnly={true}
          asPanel={true}
          collapsed={false}
          controlledCollapse={true}
          helpTopic="defineAssaySchema"
          hideStudyProperties={true}
          model={
            Immutable.Record {
              "allowBackgroundUpload": false,
              "allowEditableResults": false,
              "allowQCStates": false,
              "allowTransformationScript": false,
              "allowPlateMetadata": false,
              "autoCopyTargetContainer": undefined,
              "autoCopyTargetContainerId": undefined,
              "autoLinkCategory": undefined,
              "availableDetectionMethods": undefined,
              "availableMetadataInputFormats": undefined,
              "availablePlateTemplates": undefined,
              "backgroundUpload": false,
              "description": undefined,
              "domains": Immutable.List [
                Immutable.Record {
                  "name": "Batch Fields",
                  "container": undefined,
                  "description": undefined,
                  "domainURI": undefined,
                  "domainId": null,
                  "allowFileLinkProperties": false,
                  "allowAttachmentProperties": false,
                  "allowFlagProperties": true,
                  "allowSampleSubjectProperties": true,
                  "allowTextChoiceProperties": true,
                  "allowTimepointProperties": false,
                  "showDefaultValueSettings": false,
                  "defaultDefaultValueType": undefined,
                  "defaultValueOptions": Immutable.List [],
                  "fields": Immutable.List [],
                  "indices": Immutable.List [],
                  "domainException": undefined,
                  "mandatoryFieldNames": Immutable.List [],
                  "reservedFieldNames": Immutable.List [],
                  "newDesignFields": undefined,
                  "instructions": undefined,
                  "domainKindName": undefined,
                  "schemaName": undefined,
                  "queryName": undefined,
                },
                Immutable.Record {
                  "name": "Run Fields",
                  "container": undefined,
                  "description": undefined,
                  "domainURI": undefined,
                  "domainId": null,
                  "allowFileLinkProperties": false,
                  "allowAttachmentProperties": false,
                  "allowFlagProperties": true,
                  "allowSampleSubjectProperties": true,
                  "allowTextChoiceProperties": true,
                  "allowTimepointProperties": false,
                  "showDefaultValueSettings": false,
                  "defaultDefaultValueType": undefined,
                  "defaultValueOptions": Immutable.List [],
                  "fields": Immutable.List [],
                  "indices": Immutable.List [],
                  "domainException": undefined,
                  "mandatoryFieldNames": Immutable.List [],
                  "reservedFieldNames": Immutable.List [],
                  "newDesignFields": undefined,
                  "instructions": undefined,
                  "domainKindName": undefined,
                  "schemaName": undefined,
                  "queryName": undefined,
                },
                Immutable.Record {
                  "name": "Data Fields",
                  "container": undefined,
                  "description": undefined,
                  "domainURI": undefined,
                  "domainId": null,
                  "allowFileLinkProperties": false,
                  "allowAttachmentProperties": false,
                  "allowFlagProperties": true,
                  "allowSampleSubjectProperties": true,
                  "allowTextChoiceProperties": true,
                  "allowTimepointProperties": false,
                  "showDefaultValueSettings": false,
                  "defaultDefaultValueType": undefined,
                  "defaultValueOptions": Immutable.List [],
                  "fields": Immutable.List [],
                  "indices": Immutable.List [],
                  "domainException": undefined,
                  "mandatoryFieldNames": Immutable.List [],
                  "reservedFieldNames": Immutable.List [],
                  "newDesignFields": undefined,
                  "instructions": undefined,
                  "domainKindName": undefined,
                  "schemaName": undefined,
                  "queryName": undefined,
                },
              ],
              "editableResults": false,
              "editableRuns": false,
              "exception": undefined,
              "metadataInputFormatHelp": undefined,
              "moduleTransformScripts": undefined,
              "name": undefined,
              "plateMetadata": undefined,
              "protocolId": undefined,
              "protocolParameters": undefined,
              "protocolTransformScripts": undefined,
              "providerName": "General",
              "saveScriptFiles": false,
              "selectedDetectionMethod": undefined,
              "selectedMetadataInputFormat": undefined,
              "selectedPlateTemplate": undefined,
              "status": "Active",
              "qcEnabled": undefined,
            }
          }
          onChange={[Function]}
          panelStatus="NONE"
          togglePanel={[Function]}
          validate={false}
        >
          <BasePropertiesPanel
            appPropertiesOnly={true}
            asPanel={true}
            collapsed={false}
            controlledCollapse={true}
            headerId="assay-properties-hdr"
            helpTopic="defineAssaySchema"
            hideStudyProperties={true}
            isValid={true}
            model={
              Immutable.Record {
                "allowBackgroundUpload": false,
                "allowEditableResults": false,
                "allowQCStates": false,
                "allowTransformationScript": false,
                "allowPlateMetadata": false,
                "autoCopyTargetContainer": undefined,
                "autoCopyTargetContainerId": undefined,
                "autoLinkCategory": undefined,
                "availableDetectionMethods": undefined,
                "availableMetadataInputFormats": undefined,
                "availablePlateTemplates": undefined,
                "backgroundUpload": false,
                "description": undefined,
                "domains": Immutable.List [
                  Immutable.Record {
                    "name": "Batch Fields",
                    "container": undefined,
                    "description": undefined,
                    "domainURI": undefined,
                    "domainId": null,
                    "allowFileLinkProperties": false,
                    "allowAttachmentProperties": false,
                    "allowFlagProperties": true,
                    "allowSampleSubjectProperties": true,
                    "allowTextChoiceProperties": true,
                    "allowTimepointProperties": false,
                    "showDefaultValueSettings": false,
                    "defaultDefaultValueType": undefined,
                    "defaultValueOptions": Immutable.List [],
                    "fields": Immutable.List [],
                    "indices": Immutable.List [],
                    "domainException": undefined,
                    "mandatoryFieldNames": Immutable.List [],
                    "reservedFieldNames": Immutable.List [],
                    "newDesignFields": undefined,
                    "instructions": undefined,
                    "domainKindName": undefined,
                    "schemaName": undefined,
                    "queryName": undefined,
                  },
                  Immutable.Record {
                    "name": "Run Fields",
                    "container": undefined,
                    "description": undefined,
                    "domainURI": undefined,
                    "domainId": null,
                    "allowFileLinkProperties": false,
                    "allowAttachmentProperties": false,
                    "allowFlagProperties": true,
                    "allowSampleSubjectProperties": true,
                    "allowTextChoiceProperties": true,
                    "allowTimepointProperties": false,
                    "showDefaultValueSettings": false,
                    "defaultDefaultValueType": undefined,
                    "defaultValueOptions": Immutable.List [],
                    "fields": Immutable.List [],
                    "indices": Immutable.List [],
                    "domainException": undefined,
                    "mandatoryFieldNames": Immutable.List [],
                    "reservedFieldNames": Immutable.List [],
                    "newDesignFields": undefined,
                    "instructions": undefined,
                    "domainKindName": undefined,
                    "schemaName": undefined,
                    "queryName": undefined,
                  },
                  Immutable.Record {
                    "name": "Data Fields",
                    "container": undefined,
                    "description": undefined,
                    "domainURI": undefined,
                    "domainId": null,
                    "allowFileLinkProperties": false,
                    "allowAttachmentProperties": false,
                    "allowFlagProperties": true,
                    "allowSampleSubjectProperties": true,
                    "allowTextChoiceProperties": true,
                    "allowTimepointProperties": false,
                    "showDefaultValueSettings": false,
                    "defaultDefaultValueType": undefined,
                    "defaultValueOptions": Immutable.List [],
                    "fields": Immutable.List [],
                    "indices": Immutable.List [],
                    "domainException": undefined,
                    "mandatoryFieldNames": Immutable.List [],
                    "reservedFieldNames": Immutable.List [],
                    "newDesignFields": undefined,
                    "instructions": undefined,
                    "domainKindName": undefined,
                    "schemaName": undefined,
                    "queryName": undefined,
                  },
                ],
                "editableResults": false,
                "editableRuns": false,
                "exception": undefined,
                "metadataInputFormatHelp": undefined,
                "moduleTransformScripts": undefined,
                "name": undefined,
                "plateMetadata": undefined,
                "protocolId": undefined,
                "protocolParameters": undefined,
                "protocolTransformScripts": undefined,
                "providerName": "General",
                "saveScriptFiles": false,
                "selectedDetectionMethod": undefined,
                "selectedMetadataInputFormat": undefined,
                "selectedPlateTemplate": undefined,
                "status": "Active",
                "qcEnabled": undefined,
              }
            }
            onChange={[Function]}
            panelStatus="NONE"
            title="Assay Properties"
            togglePanel={[Function]}
            updateValidStatus={[Function]}
            useTheme={false}
            validate={false}
          >
            <ForwardRef
              className="domain-form-panel domain-panel-no-theme"
              expanded={true}
              onToggle={[Function]}
            >
              <Uncontrolled(Panel)
                className="domain-form-panel domain-panel-no-theme"
                expanded={true}
                innerRef={null}
                onToggle={[Function]}
              >
                <Panel
                  bsClass="panel"
                  bsStyle="default"
                  className="domain-form-panel domain-panel-no-theme"
                  expanded={true}
                  onToggle={[Function]}
                >
                  <div
                    className="domain-form-panel domain-panel-no-theme panel panel-default"
                  >
                    <CollapsiblePanelHeader
                      collapsed={false}
                      controlledCollapse={true}
                      iconHelpMsg="Contains errors or is missing required values."
                      id="assay-properties-hdr"
                      isValid={true}
                      panelStatus="NONE"
                      title="Assay Properties"
                      togglePanel={[Function]}
                      useTheme={false}
                    >
                      <PanelHeading
                        bsClass="panel"
                        className="domain-panel-header domain-heading-collapsible domain-panel-header-expanded domain-panel-header-no-theme"
                        componentClass="div"
                        id="assay-properties-hdr"
                        onClick={[Function]}
                      >
                        <div
                          className="domain-panel-header domain-heading-collapsible domain-panel-header-expanded domain-panel-header-no-theme panel-heading"
                          id="assay-properties-hdr"
                          onClick={[Function]}
                        >
                          <span
                            className="domain-panel-title"
                          >
                            Assay Properties
                          </span>
                          <span
                            className="pull-right"
                          >
                            <span
                              className="fa fa-lg fa-minus-square domain-form-collapse-btn"
                            />
                          </span>
                        </div>
                      </PanelHeading>
                    </CollapsiblePanelHeader>
                    <PanelBody
                      bsClass="panel"
                      collapsible={true}
                    >
                      <PanelCollapse
                        bsClass="panel"
                      >
                        <Collapse
                          appear={false}
                          dimension="height"
                          getDimensionValue={[Function]}
                          in={true}
                          mountOnEnter={false}
                          timeout={300}
                          unmountOnExit={false}
                        >
                          <Transition
                            appear={false}
                            aria-expanded={null}
                            enter={true}
                            exit={true}
                            in={true}
                            mountOnEnter={false}
                            onEnter={[Function]}
                            onEntered={[Function]}
                            onEntering={[Function]}
                            onExit={[Function]}
                            onExited={[Function]}
                            onExiting={[Function]}
                            timeout={300}
                            unmountOnExit={false}
                          >
                            <div
                              aria-expanded={null}
                              className="panel-collapse collapse in"
                            >
                              <div
                                className="panel-body"
                              >
                                <HelpTopicURL
                                  helpTopic="defineAssaySchema"
                                  nounPlural="assays"
                                >
                                  <Row
                                    bsClass="row"
                                    componentClass="div"
                                  >
                                    <div
                                      className="row"
                                    >
                                      <Col
                                        bsClass="col"
                                        componentClass="div"
                                        xs={12}
                                      >
                                        <div
                                          className="col-xs-12"
                                        >
                                          <HelpLink
                                            className="domain-field-float-right"
                                            topic="defineAssaySchema"
                                          >
                                            <a
                                              className="domain-field-float-right"
                                              href="https://www.labkey.org/Documentation/wiki-page.view?referrer=inPage&name=defineAssaySchema"
                                              rel="noopener noreferrer"
                                              target="_blank"
                                            >
                                              Learn more about designing assays
                                            </a>
                                          </HelpLink>
                                        </div>
                                      </Col>
                                    </div>
                                  </Row>
                                </HelpTopicURL>
                                <AssayPropertiesForm
                                  appPropertiesOnly={true}
                                  hideStudyProperties={true}
                                  model={
                                    Immutable.Record {
                                      "allowBackgroundUpload": false,
                                      "allowEditableResults": false,
                                      "allowQCStates": false,
                                      "allowTransformationScript": false,
                                      "allowPlateMetadata": false,
                                      "autoCopyTargetContainer": undefined,
                                      "autoCopyTargetContainerId": undefined,
                                      "autoLinkCategory": undefined,
                                      "availableDetectionMethods": undefined,
                                      "availableMetadataInputFormats": undefined,
                                      "availablePlateTemplates": undefined,
                                      "backgroundUpload": false,
                                      "description": undefined,
                                      "domains": Immutable.List [
                                        Immutable.Record {
                                          "name": "Batch Fields",
                                          "container": undefined,
                                          "description": undefined,
                                          "domainURI": undefined,
                                          "domainId": null,
                                          "allowFileLinkProperties": false,
                                          "allowAttachmentProperties": false,
                                          "allowFlagProperties": true,
                                          "allowSampleSubjectProperties": true,
                                          "allowTextChoiceProperties": true,
                                          "allowTimepointProperties": false,
                                          "showDefaultValueSettings": false,
                                          "defaultDefaultValueType": undefined,
                                          "defaultValueOptions": Immutable.List [],
                                          "fields": Immutable.List [],
                                          "indices": Immutable.List [],
                                          "domainException": undefined,
                                          "mandatoryFieldNames": Immutable.List [],
                                          "reservedFieldNames": Immutable.List [],
                                          "newDesignFields": undefined,
                                          "instructions": undefined,
                                          "domainKindName": undefined,
                                          "schemaName": undefined,
                                          "queryName": undefined,
                                        },
                                        Immutable.Record {
                                          "name": "Run Fields",
                                          "container": undefined,
                                          "description": undefined,
                                          "domainURI": undefined,
                                          "domainId": null,
                                          "allowFileLinkProperties": false,
                                          "allowAttachmentProperties": false,
                                          "allowFlagProperties": true,
                                          "allowSampleSubjectProperties": true,
                                          "allowTextChoiceProperties": true,
                                          "allowTimepointProperties": false,
                                          "showDefaultValueSettings": false,
                                          "defaultDefaultValueType": undefined,
                                          "defaultValueOptions": Immutable.List [],
                                          "fields": Immutable.List [],
                                          "indices": Immutable.List [],
                                          "domainException": undefined,
                                          "mandatoryFieldNames": Immutable.List [],
                                          "reservedFieldNames": Immutable.List [],
                                          "newDesignFields": undefined,
                                          "instructions": undefined,
                                          "domainKindName": undefined,
                                          "schemaName": undefined,
                                          "queryName": undefined,
                                        },
                                        Immutable.Record {
                                          "name": "Data Fields",
                                          "container": undefined,
                                          "description": undefined,
                                          "domainURI": undefined,
                                          "domainId": null,
                                          "allowFileLinkProperties": false,
                                          "allowAttachmentProperties": false,
                                          "allowFlagProperties": true,
                                          "allowSampleSubjectProperties": true,
                                          "allowTextChoiceProperties": true,
                                          "allowTimepointProperties": false,
                                          "showDefaultValueSettings": false,
                                          "defaultDefaultValueType": undefined,
                                          "defaultValueOptions": Immutable.List [],
                                          "fields": Immutable.List [],
                                          "indices": Immutable.List [],
                                          "domainException": undefined,
                                          "mandatoryFieldNames": Immutable.List [],
                                          "reservedFieldNames": Immutable.List [],
                                          "newDesignFields": undefined,
                                          "instructions": undefined,
                                          "domainKindName": undefined,
                                          "schemaName": undefined,
                                          "queryName": undefined,
                                        },
                                      ],
                                      "editableResults": false,
                                      "editableRuns": false,
                                      "exception": undefined,
                                      "metadataInputFormatHelp": undefined,
                                      "moduleTransformScripts": undefined,
                                      "name": undefined,
                                      "plateMetadata": undefined,
                                      "protocolId": undefined,
                                      "protocolParameters": undefined,
                                      "protocolTransformScripts": undefined,
                                      "providerName": "General",
                                      "saveScriptFiles": false,
                                      "selectedDetectionMethod": undefined,
                                      "selectedMetadataInputFormat": undefined,
                                      "selectedPlateTemplate": undefined,
                                      "status": "Active",
                                      "qcEnabled": undefined,
                                    }
                                  }
                                  onChange={[Function]}
                                >
                                  <Form
                                    bsClass="form"
                                    componentClass="form"
                                    horizontal={false}
                                    inline={false}
                                  >
                                    <form
                                      className=""
                                    >
                                      <Col
                                        bsClass="col"
                                        componentClass="div"
                                        lg={12}
                                        xs={12}
                                      >
                                        <div
                                          className="col-lg-12 col-xs-12"
                                        >
                                          <div
                                            className="domain-field-padding-bottom"
                                          >
                                            <SectionHeading
                                              title="Basic Properties"
                                            >
                                              <div
                                                className="domain-field-section-heading"
                                              >
                                                Basic Properties
                                              </div>
                                            </SectionHeading>
                                            <NameInput
                                              appPropertiesOnly={true}
                                              model={
                                                Immutable.Record {
                                                  "allowBackgroundUpload": false,
                                                  "allowEditableResults": false,
                                                  "allowQCStates": false,
                                                  "allowTransformationScript": false,
                                                  "allowPlateMetadata": false,
                                                  "autoCopyTargetContainer": undefined,
                                                  "autoCopyTargetContainerId": undefined,
                                                  "autoLinkCategory": undefined,
                                                  "availableDetectionMethods": undefined,
                                                  "availableMetadataInputFormats": undefined,
                                                  "availablePlateTemplates": undefined,
                                                  "backgroundUpload": false,
                                                  "description": undefined,
                                                  "domains": Immutable.List [
                                                    Immutable.Record {
                                                      "name": "Batch Fields",
                                                      "container": undefined,
                                                      "description": undefined,
                                                      "domainURI": undefined,
                                                      "domainId": null,
                                                      "allowFileLinkProperties": false,
                                                      "allowAttachmentProperties": false,
                                                      "allowFlagProperties": true,
                                                      "allowSampleSubjectProperties": true,
                                                      "allowTextChoiceProperties": true,
                                                      "allowTimepointProperties": false,
                                                      "showDefaultValueSettings": false,
                                                      "defaultDefaultValueType": undefined,
                                                      "defaultValueOptions": Immutable.List [],
                                                      "fields": Immutable.List [],
                                                      "indices": Immutable.List [],
                                                      "domainException": undefined,
                                                      "mandatoryFieldNames": Immutable.List [],
                                                      "reservedFieldNames": Immutable.List [],
                                                      "newDesignFields": undefined,
                                                      "instructions": undefined,
                                                      "domainKindName": undefined,
                                                      "schemaName": undefined,
                                                      "queryName": undefined,
                                                    },
                                                    Immutable.Record {
                                                      "name": "Run Fields",
                                                      "container": undefined,
                                                      "description": undefined,
                                                      "domainURI": undefined,
                                                      "domainId": null,
                                                      "allowFileLinkProperties": false,
                                                      "allowAttachmentProperties": false,
                                                      "allowFlagProperties": true,
                                                      "allowSampleSubjectProperties": true,
                                                      "allowTextChoiceProperties": true,
                                                      "allowTimepointProperties": false,
                                                      "showDefaultValueSettings": false,
                                                      "defaultDefaultValueType": undefined,
                                                      "defaultValueOptions": Immutable.List [],
                                                      "fields": Immutable.List [],
                                                      "indices": Immutable.List [],
                                                      "domainException": undefined,
                                                      "mandatoryFieldNames": Immutable.List [],
                                                      "reservedFieldNames": Immutable.List [],
                                                      "newDesignFields": undefined,
                                                      "instructions": undefined,
                                                      "domainKindName": undefined,
                                                      "schemaName": undefined,
                                                      "queryName": undefined,
                                                    },
                                                    Immutable.Record {
                                                      "name": "Data Fields",
                                                      "container": undefined,
                                                      "description": undefined,
                                                      "domainURI": undefined,
                                                      "domainId": null,
                                                      "allowFileLinkProperties": false,
                                                      "allowAttachmentProperties": false,
                                                      "allowFlagProperties": true,
                                                      "allowSampleSubjectProperties": true,
                                                      "allowTextChoiceProperties": true,
                                                      "allowTimepointProperties": false,
                                                      "showDefaultValueSettings": false,
                                                      "defaultDefaultValueType": undefined,
                                                      "defaultValueOptions": Immutable.List [],
                                                      "fields": Immutable.List [],
                                                      "indices": Immutable.List [],
                                                      "domainException": undefined,
                                                      "mandatoryFieldNames": Immutable.List [],
                                                      "reservedFieldNames": Immutable.List [],
                                                      "newDesignFields": undefined,
                                                      "instructions": undefined,
                                                      "domainKindName": undefined,
                                                      "schemaName": undefined,
                                                      "queryName": undefined,
                                                    },
                                                  ],
                                                  "editableResults": false,
                                                  "editableRuns": false,
                                                  "exception": undefined,
                                                  "metadataInputFormatHelp": undefined,
                                                  "moduleTransformScripts": undefined,
                                                  "name": undefined,
                                                  "plateMetadata": undefined,
                                                  "protocolId": undefined,
                                                  "protocolParameters": undefined,
                                                  "protocolTransformScripts": undefined,
                                                  "providerName": "General",
                                                  "saveScriptFiles": false,
                                                  "selectedDetectionMethod": undefined,
                                                  "selectedMetadataInputFormat": undefined,
                                                  "selectedPlateTemplate": undefined,
                                                  "status": "Active",
                                                  "qcEnabled": undefined,
                                                }
                                              }
                                              onChange={[Function]}
                                            >
                                              <Component
                                                appPropertiesOnly={true}
                                                colSize={9}
                                                helpTipBody={
                                                  <p>
                                                    The name for this assay design. Note that this can't be changed after the assay design is created.
                                                  </p>
                                                }
                                                label="Name"
                                                required={true}
                                              >
                                                <Row
                                                  bsClass="row"
                                                  className="margin-top"
                                                  componentClass="div"
                                                >
                                                  <div
                                                    className="margin-top row"
                                                  >
                                                    <Col
                                                      bsClass="col"
                                                      componentClass="div"
                                                      lg={2}
                                                      xs={3}
                                                    >
                                                      <div
                                                        className="col-lg-2 col-xs-3"
                                                      >
                                                        <DomainFieldLabel
                                                          helpTipBody={
                                                            <p>
                                                              The name for this assay design. Note that this can't be changed after the assay design is created.
                                                            </p>
                                                          }
                                                          label="Name"
                                                          required={true}
                                                        >
                                                          <span
                                                            className="domain-no-wrap"
                                                          >
                                                            Name
                                                            <Component
                                                              id="tooltip"
                                                              required={true}
                                                              title="Name"
                                                            >
                                                              <span
                                                                className="label-help-target"
                                                                onMouseOut={[Function]}
                                                                onMouseOver={[Function]}
                                                              >
                                                                <span
                                                                  className="label-help-icon fa fa-question-circle"
                                                                />
                                                                <Overlay
                                                                  animation={[Function]}
                                                                  placement="right"
                                                                  rootClose={false}
                                                                  show={false}
                                                                >
                                                                  <Overlay
                                                                    placement="right"
                                                                    rootClose={false}
                                                                    show={false}
                                                                    transition={[Function]}
                                                                  />
                                                                </Overlay>
                                                              </span>
                                                            </Component>
                                                             *
                                                          </span>
                                                        </DomainFieldLabel>
                                                      </div>
                                                    </Col>
                                                    <Col
                                                      bsClass="col"
                                                      componentClass="div"
                                                      lg={10}
                                                      xs={9}
                                                    >
                                                      <div
                                                        className="col-lg-10 col-xs-9"
                                                      >
                                                        <FormControl
                                                          bsClass="form-control"
                                                          componentClass="input"
                                                          disabled={false}
                                                          id="assay-design-name"
                                                          onChange={[Function]}
                                                          placeholder="Enter a name for this assay"
                                                          type="text"
                                                          value=""
                                                        >
                                                          <input
                                                            className="form-control"
                                                            disabled={false}
                                                            id="assay-design-name"
                                                            onChange={[Function]}
                                                            placeholder="Enter a name for this assay"
                                                            type="text"
                                                            value=""
                                                          />
                                                        </FormControl>
                                                      </div>
                                                    </Col>
                                                  </div>
                                                </Row>
                                              </Component>
                                            </NameInput>
                                            <DescriptionInput
                                              appPropertiesOnly={true}
                                              model={
                                                Immutable.Record {
                                                  "allowBackgroundUpload": false,
                                                  "allowEditableResults": false,
                                                  "allowQCStates": false,
                                                  "allowTransformationScript": false,
                                                  "allowPlateMetadata": false,
                                                  "autoCopyTargetContainer": undefined,
                                                  "autoCopyTargetContainerId": undefined,
                                                  "autoLinkCategory": undefined,
                                                  "availableDetectionMethods": undefined,
                                                  "availableMetadataInputFormats": undefined,
                                                  "availablePlateTemplates": undefined,
                                                  "backgroundUpload": false,
                                                  "description": undefined,
                                                  "domains": Immutable.List [
                                                    Immutable.Record {
                                                      "name": "Batch Fields",
                                                      "container": undefined,
                                                      "description": undefined,
                                                      "domainURI": undefined,
                                                      "domainId": null,
                                                      "allowFileLinkProperties": false,
                                                      "allowAttachmentProperties": false,
                                                      "allowFlagProperties": true,
                                                      "allowSampleSubjectProperties": true,
                                                      "allowTextChoiceProperties": true,
                                                      "allowTimepointProperties": false,
                                                      "showDefaultValueSettings": false,
                                                      "defaultDefaultValueType": undefined,
                                                      "defaultValueOptions": Immutable.List [],
                                                      "fields": Immutable.List [],
                                                      "indices": Immutable.List [],
                                                      "domainException": undefined,
                                                      "mandatoryFieldNames": Immutable.List [],
                                                      "reservedFieldNames": Immutable.List [],
                                                      "newDesignFields": undefined,
                                                      "instructions": undefined,
                                                      "domainKindName": undefined,
                                                      "schemaName": undefined,
                                                      "queryName": undefined,
                                                    },
                                                    Immutable.Record {
                                                      "name": "Run Fields",
                                                      "container": undefined,
                                                      "description": undefined,
                                                      "domainURI": undefined,
                                                      "domainId": null,
                                                      "allowFileLinkProperties": false,
                                                      "allowAttachmentProperties": false,
                                                      "allowFlagProperties": true,
                                                      "allowSampleSubjectProperties": true,
                                                      "allowTextChoiceProperties": true,
                                                      "allowTimepointProperties": false,
                                                      "showDefaultValueSettings": false,
                                                      "defaultDefaultValueType": undefined,
                                                      "defaultValueOptions": Immutable.List [],
                                                      "fields": Immutable.List [],
                                                      "indices": Immutable.List [],
                                                      "domainException": undefined,
                                                      "mandatoryFieldNames": Immutable.List [],
                                                      "reservedFieldNames": Immutable.List [],
                                                      "newDesignFields": undefined,
                                                      "instructions": undefined,
                                                      "domainKindName": undefined,
                                                      "schemaName": undefined,
                                                      "queryName": undefined,
                                                    },
                                                    Immutable.Record {
                                                      "name": "Data Fields",
                                                      "container": undefined,
                                                      "description": undefined,
                                                      "domainURI": undefined,
                                                      "domainId": null,
                                                      "allowFileLinkProperties": false,
                                                      "allowAttachmentProperties": false,
                                                      "allowFlagProperties": true,
                                                      "allowSampleSubjectProperties": true,
                                                      "allowTextChoiceProperties": true,
                                                      "allowTimepointProperties": false,
                                                      "showDefaultValueSettings": false,
                                                      "defaultDefaultValueType": undefined,
                                                      "defaultValueOptions": Immutable.List [],
                                                      "fields": Immutable.List [],
                                                      "indices": Immutable.List [],
                                                      "domainException": undefined,
                                                      "mandatoryFieldNames": Immutable.List [],
                                                      "reservedFieldNames": Immutable.List [],
                                                      "newDesignFields": undefined,
                                                      "instructions": undefined,
                                                      "domainKindName": undefined,
                                                      "schemaName": undefined,
                                                      "queryName": undefined,
                                                    },
                                                  ],
                                                  "editableResults": false,
                                                  "editableRuns": false,
                                                  "exception": undefined,
                                                  "metadataInputFormatHelp": undefined,
                                                  "moduleTransformScripts": undefined,
                                                  "name": undefined,
                                                  "plateMetadata": undefined,
                                                  "protocolId": undefined,
                                                  "protocolParameters": undefined,
                                                  "protocolTransformScripts": undefined,
                                                  "providerName": "General",
                                                  "saveScriptFiles": false,
                                                  "selectedDetectionMethod": undefined,
                                                  "selectedMetadataInputFormat": undefined,
                                                  "selectedPlateTemplate": undefined,
                                                  "status": "Active",
                                                  "qcEnabled": undefined,
                                                }
                                              }
                                              onChange={[Function]}
                                            >
                                              <Component
                                                appPropertiesOnly={true}
                                                colSize={9}
                                                helpTipBody={
                                                  <p>
                                                    A short description for this assay design.
                                                  </p>
                                                }
                                                label="Description"
                                              >
                                                <Row
                                                  bsClass="row"
                                                  className="margin-top"
                                                  componentClass="div"
                                                >
                                                  <div
                                                    className="margin-top row"
                                                  >
                                                    <Col
                                                      bsClass="col"
                                                      componentClass="div"
                                                      lg={2}
                                                      xs={3}
                                                    >
                                                      <div
                                                        className="col-lg-2 col-xs-3"
                                                      >
                                                        <DomainFieldLabel
                                                          helpTipBody={
                                                            <p>
                                                              A short description for this assay design.
                                                            </p>
                                                          }
                                                          label="Description"
                                                        >
                                                          <span
                                                            className="domain-no-wrap"
                                                          >
                                                            Description
                                                            <Component
                                                              id="tooltip"
                                                              title="Description"
                                                            >
                                                              <span
                                                                className="label-help-target"
                                                                onMouseOut={[Function]}
                                                                onMouseOver={[Function]}
                                                              >
                                                                <span
                                                                  className="label-help-icon fa fa-question-circle"
                                                                />
                                                                <Overlay
                                                                  animation={[Function]}
                                                                  placement="right"
                                                                  rootClose={false}
                                                                  show={false}
                                                                >
                                                                  <Overlay
                                                                    placement="right"
                                                                    rootClose={false}
                                                                    show={false}
                                                                    transition={[Function]}
                                                                  />
                                                                </Overlay>
                                                              </span>
                                                            </Component>
                                                          </span>
                                                        </DomainFieldLabel>
                                                      </div>
                                                    </Col>
                                                    <Col
                                                      bsClass="col"
                                                      componentClass="div"
                                                      lg={10}
                                                      xs={9}
                                                    >
                                                      <div
                                                        className="col-lg-10 col-xs-9"
                                                      >
                                                        <textarea
                                                          className="form-control textarea-noresize"
                                                          id="assay-design-description"
                                                          onChange={[Function]}
                                                          value=""
                                                        />
                                                      </div>
                                                    </Col>
                                                  </div>
                                                </Row>
                                              </Component>
                                            </DescriptionInput>
                                          </div>
                                          <div
                                            className="domain-field-padding-bottom"
                                          >
                                            <SectionHeading
                                              title="Editing Settings"
                                            >
                                              <div
                                                className="domain-field-section-heading"
                                              >
                                                Editing Settings
                                              </div>
                                            </SectionHeading>
                                            <EditableRunsInput
                                              appPropertiesOnly={true}
                                              model={
                                                Immutable.Record {
                                                  "allowBackgroundUpload": false,
                                                  "allowEditableResults": false,
                                                  "allowQCStates": false,
                                                  "allowTransformationScript": false,
                                                  "allowPlateMetadata": false,
                                                  "autoCopyTargetContainer": undefined,
                                                  "autoCopyTargetContainerId": undefined,
                                                  "autoLinkCategory": undefined,
                                                  "availableDetectionMethods": undefined,
                                                  "availableMetadataInputFormats": undefined,
                                                  "availablePlateTemplates": undefined,
                                                  "backgroundUpload": false,
                                                  "description": undefined,
                                                  "domains": Immutable.List [
                                                    Immutable.Record {
                                                      "name": "Batch Fields",
                                                      "container": undefined,
                                                      "description": undefined,
                                                      "domainURI": undefined,
                                                      "domainId": null,
                                                      "allowFileLinkProperties": false,
                                                      "allowAttachmentProperties": false,
                                                      "allowFlagProperties": true,
                                                      "allowSampleSubjectProperties": true,
                                                      "allowTextChoiceProperties": true,
                                                      "allowTimepointProperties": false,
                                                      "showDefaultValueSettings": false,
                                                      "defaultDefaultValueType": undefined,
                                                      "defaultValueOptions": Immutable.List [],
                                                      "fields": Immutable.List [],
                                                      "indices": Immutable.List [],
                                                      "domainException": undefined,
                                                      "mandatoryFieldNames": Immutable.List [],
                                                      "reservedFieldNames": Immutable.List [],
                                                      "newDesignFields": undefined,
                                                      "instructions": undefined,
                                                      "domainKindName": undefined,
                                                      "schemaName": undefined,
                                                      "queryName": undefined,
                                                    },
                                                    Immutable.Record {
                                                      "name": "Run Fields",
                                                      "container": undefined,
                                                      "description": undefined,
                                                      "domainURI": undefined,
                                                      "domainId": null,
                                                      "allowFileLinkProperties": false,
                                                      "allowAttachmentProperties": false,
                                                      "allowFlagProperties": true,
                                                      "allowSampleSubjectProperties": true,
                                                      "allowTextChoiceProperties": true,
                                                      "allowTimepointProperties": false,
                                                      "showDefaultValueSettings": false,
                                                      "defaultDefaultValueType": undefined,
                                                      "defaultValueOptions": Immutable.List [],
                                                      "fields": Immutable.List [],
                                                      "indices": Immutable.List [],
                                                      "domainException": undefined,
                                                      "mandatoryFieldNames": Immutable.List [],
                                                      "reservedFieldNames": Immutable.List [],
                                                      "newDesignFields": undefined,
                                                      "instructions": undefined,
                                                      "domainKindName": undefined,
                                                      "schemaName": undefined,
                                                      "queryName": undefined,
                                                    },
                                                    Immutable.Record {
                                                      "name": "Data Fields",
                                                      "container": undefined,
                                                      "description": undefined,
                                                      "domainURI": undefined,
                                                      "domainId": null,
                                                      "allowFileLinkProperties": false,
                                                      "allowAttachmentProperties": false,
                                                      "allowFlagProperties": true,
                                                      "allowSampleSubjectProperties": true,
                                                      "allowTextChoiceProperties": true,
                                                      "allowTimepointProperties": false,
                                                      "showDefaultValueSettings": false,
                                                      "defaultDefaultValueType": undefined,
                                                      "defaultValueOptions": Immutable.List [],
                                                      "fields": Immutable.List [],
                                                      "indices": Immutable.List [],
                                                      "domainException": undefined,
                                                      "mandatoryFieldNames": Immutable.List [],
                                                      "reservedFieldNames": Immutable.List [],
                                                      "newDesignFields": undefined,
                                                      "instructions": undefined,
                                                      "domainKindName": undefined,
                                                      "schemaName": undefined,
                                                      "queryName": undefined,
                                                    },
                                                  ],
                                                  "editableResults": false,
                                                  "editableRuns": false,
                                                  "exception": undefined,
                                                  "metadataInputFormatHelp": undefined,
                                                  "moduleTransformScripts": undefined,
                                                  "name": undefined,
                                                  "plateMetadata": undefined,
                                                  "protocolId": undefined,
                                                  "protocolParameters": undefined,
                                                  "protocolTransformScripts": undefined,
                                                  "providerName": "General",
                                                  "saveScriptFiles": false,
                                                  "selectedDetectionMethod": undefined,
                                                  "selectedMetadataInputFormat": undefined,
                                                  "selectedPlateTemplate": undefined,
                                                  "status": "Active",
                                                  "qcEnabled": undefined,
                                                }
                                              }
                                              onChange={[Function]}
                                            >
                                              <Component
                                                appPropertiesOnly={true}
                                                colSize={9}
                                                helpTipBody={
                                                  <p>
                                                    If enabled, users with sufficient permissions can edit values at the run level after the initial import is complete. These changes will be audited.
                                                  </p>
                                                }
                                                label="Editable Runs"
                                              >
                                                <Row
                                                  bsClass="row"
                                                  className="margin-top"
                                                  componentClass="div"
                                                >
                                                  <div
                                                    className="margin-top row"
                                                  >
                                                    <Col
                                                      bsClass="col"
                                                      componentClass="div"
                                                      lg={2}
                                                      xs={3}
                                                    >
                                                      <div
                                                        className="col-lg-2 col-xs-3"
                                                      >
                                                        <DomainFieldLabel
                                                          helpTipBody={
                                                            <p>
                                                              If enabled, users with sufficient permissions can edit values at the run level after the initial import is complete. These changes will be audited.
                                                            </p>
                                                          }
                                                          label="Editable Runs"
                                                        >
                                                          Editable 
                                                          <span
                                                            className="domain-no-wrap"
                                                          >
                                                            Runs
                                                            <Component
                                                              id="tooltip"
                                                              title="Editable Runs"
                                                            >
                                                              <span
                                                                className="label-help-target"
                                                                onMouseOut={[Function]}
                                                                onMouseOver={[Function]}
                                                              >
                                                                <span
                                                                  className="label-help-icon fa fa-question-circle"
                                                                />
                                                                <Overlay
                                                                  animation={[Function]}
                                                                  placement="right"
                                                                  rootClose={false}
                                                                  show={false}
                                                                >
                                                                  <Overlay
                                                                    placement="right"
                                                                    rootClose={false}
                                                                    show={false}
                                                                    transition={[Function]}
                                                                  />
                                                                </Overlay>
                                                              </span>
                                                            </Component>
                                                          </span>
                                                        </DomainFieldLabel>
                                                      </div>
                                                    </Col>
                                                    <Col
                                                      bsClass="col"
                                                      componentClass="div"
                                                      lg={10}
                                                      xs={9}
                                                    >
                                                      <div
                                                        className="col-lg-10 col-xs-9"
                                                      >
                                                        <input
                                                          checked={false}
                                                          id="assay-design-editableRuns"
                                                          onChange={[Function]}
                                                          type="checkbox"
                                                        />
                                                      </div>
                                                    </Col>
                                                  </div>
                                                </Row>
                                              </Component>
                                            </EditableRunsInput>
                                          </div>
                                        </div>
                                      </Col>
                                    </form>
                                  </Form>
                                </AssayPropertiesForm>
                              </div>
                            </div>
                          </Transition>
                        </Collapse>
                      </PanelCollapse>
                    </PanelBody>
                  </div>
                </Panel>
              </Uncontrolled(Panel)>
            </ForwardRef>
          </BasePropertiesPanel>
        </Component>
      </ComponentWithDomainPropertiesPanelCollapse>
      <DomainForm
        appPropertiesOnly={true}
        controlledCollapse={true}
        domain={
          Immutable.Record {
            "name": "Batch Fields",
            "container": undefined,
            "description": undefined,
            "domainURI": undefined,
            "domainId": null,
            "allowFileLinkProperties": false,
            "allowAttachmentProperties": false,
            "allowFlagProperties": true,
            "allowSampleSubjectProperties": true,
            "allowTextChoiceProperties": true,
            "allowTimepointProperties": false,
            "showDefaultValueSettings": false,
            "defaultDefaultValueType": undefined,
            "defaultValueOptions": Immutable.List [],
            "fields": Immutable.List [],
            "indices": Immutable.List [],
            "domainException": undefined,
            "mandatoryFieldNames": Immutable.List [],
            "reservedFieldNames": Immutable.List [],
            "newDesignFields": undefined,
            "instructions": undefined,
            "domainKindName": undefined,
            "schemaName": undefined,
            "queryName": undefined,
          }
        }
        domainFormDisplayOptions={
          {
            "domainKindDisplayName": "assay design",
            "hideFilePropertyType": undefined,
            "hideInferFromFile": true,
            "hideStudyPropertyTypes": true,
            "textChoiceLockedForDomain": true,
          }
        }
        domainIndex={0}
        helpTopic={null}
        index={0}
        initCollapsed={true}
        key="0"
        modelDomains={
          Immutable.List [
            Immutable.Record {
              "name": "Batch Fields",
              "container": undefined,
              "description": undefined,
              "domainURI": undefined,
              "domainId": null,
              "allowFileLinkProperties": false,
              "allowAttachmentProperties": false,
              "allowFlagProperties": true,
              "allowSampleSubjectProperties": true,
              "allowTextChoiceProperties": true,
              "allowTimepointProperties": false,
              "showDefaultValueSettings": false,
              "defaultDefaultValueType": undefined,
              "defaultValueOptions": Immutable.List [],
              "fields": Immutable.List [],
              "indices": Immutable.List [],
              "domainException": undefined,
              "mandatoryFieldNames": Immutable.List [],
              "reservedFieldNames": Immutable.List [],
              "newDesignFields": undefined,
              "instructions": undefined,
              "domainKindName": undefined,
              "schemaName": undefined,
              "queryName": undefined,
            },
            Immutable.Record {
              "name": "Run Fields",
              "container": undefined,
              "description": undefined,
              "domainURI": undefined,
              "domainId": null,
              "allowFileLinkProperties": false,
              "allowAttachmentProperties": false,
              "allowFlagProperties": true,
              "allowSampleSubjectProperties": true,
              "allowTextChoiceProperties": true,
              "allowTimepointProperties": false,
              "showDefaultValueSettings": false,
              "defaultDefaultValueType": undefined,
              "defaultValueOptions": Immutable.List [],
              "fields": Immutable.List [],
              "indices": Immutable.List [],
              "domainException": undefined,
              "mandatoryFieldNames": Immutable.List [],
              "reservedFieldNames": Immutable.List [],
              "newDesignFields": undefined,
              "instructions": undefined,
              "domainKindName": undefined,
              "schemaName": undefined,
              "queryName": undefined,
            },
            Immutable.Record {
              "name": "Data Fields",
              "container": undefined,
              "description": undefined,
              "domainURI": undefined,
              "domainId": null,
              "allowFileLinkProperties": false,
              "allowAttachmentProperties": false,
              "allowFlagProperties": true,
              "allowSampleSubjectProperties": true,
              "allowTextChoiceProperties": true,
              "allowTimepointProperties": false,
              "showDefaultValueSettings": false,
              "defaultDefaultValueType": undefined,
              "defaultValueOptions": Immutable.List [],
              "fields": Immutable.List [],
              "indices": Immutable.List [],
              "domainException": undefined,
              "mandatoryFieldNames": Immutable.List [],
              "reservedFieldNames": Immutable.List [],
              "newDesignFields": undefined,
              "instructions": undefined,
              "domainKindName": undefined,
              "schemaName": undefined,
              "queryName": undefined,
            },
          ]
        }
        onChange={[Function]}
        onToggle={[Function]}
        panelStatus="TODO"
        testMode={true}
        validate={false}
      >
        <LookupProvider>
          <DomainFormImpl
            appPropertiesOnly={true}
            controlledCollapse={true}
            domain={
              Immutable.Record {
                "name": "Batch Fields",
                "container": undefined,
                "description": undefined,
                "domainURI": undefined,
                "domainId": null,
                "allowFileLinkProperties": false,
                "allowAttachmentProperties": false,
                "allowFlagProperties": true,
                "allowSampleSubjectProperties": true,
                "allowTextChoiceProperties": true,
                "allowTimepointProperties": false,
                "showDefaultValueSettings": false,
                "defaultDefaultValueType": undefined,
                "defaultValueOptions": Immutable.List [],
                "fields": Immutable.List [],
                "indices": Immutable.List [],
                "domainException": undefined,
                "mandatoryFieldNames": Immutable.List [],
                "reservedFieldNames": Immutable.List [],
                "newDesignFields": undefined,
                "instructions": undefined,
                "domainKindName": undefined,
                "schemaName": undefined,
                "queryName": undefined,
              }
            }
            domainFormDisplayOptions={
              {
                "domainKindDisplayName": "assay design",
                "hideFilePropertyType": undefined,
                "hideInferFromFile": true,
                "hideStudyPropertyTypes": true,
                "textChoiceLockedForDomain": true,
              }
            }
            domainIndex={0}
            helpNoun="field designer"
            helpTopic={null}
            index={0}
            initCollapsed={true}
            isNew={false}
            modelDomains={
              Immutable.List [
                Immutable.Record {
                  "name": "Batch Fields",
                  "container": undefined,
                  "description": undefined,
                  "domainURI": undefined,
                  "domainId": null,
                  "allowFileLinkProperties": false,
                  "allowAttachmentProperties": false,
                  "allowFlagProperties": true,
                  "allowSampleSubjectProperties": true,
                  "allowTextChoiceProperties": true,
                  "allowTimepointProperties": false,
                  "showDefaultValueSettings": false,
                  "defaultDefaultValueType": undefined,
                  "defaultValueOptions": Immutable.List [],
                  "fields": Immutable.List [],
                  "indices": Immutable.List [],
                  "domainException": undefined,
                  "mandatoryFieldNames": Immutable.List [],
                  "reservedFieldNames": Immutable.List [],
                  "newDesignFields": undefined,
                  "instructions": undefined,
                  "domainKindName": undefined,
                  "schemaName": undefined,
                  "queryName": undefined,
                },
                Immutable.Record {
                  "name": "Run Fields",
                  "container": undefined,
                  "description": undefined,
                  "domainURI": undefined,
                  "domainId": null,
                  "allowFileLinkProperties": false,
                  "allowAttachmentProperties": false,
                  "allowFlagProperties": true,
                  "allowSampleSubjectProperties": true,
                  "allowTextChoiceProperties": true,
                  "allowTimepointProperties": false,
                  "showDefaultValueSettings": false,
                  "defaultDefaultValueType": undefined,
                  "defaultValueOptions": Immutable.List [],
                  "fields": Immutable.List [],
                  "indices": Immutable.List [],
                  "domainException": undefined,
                  "mandatoryFieldNames": Immutable.List [],
                  "reservedFieldNames": Immutable.List [],
                  "newDesignFields": undefined,
                  "instructions": undefined,
                  "domainKindName": undefined,
                  "schemaName": undefined,
                  "queryName": undefined,
                },
                Immutable.Record {
                  "name": "Data Fields",
                  "container": undefined,
                  "description": undefined,
                  "domainURI": undefined,
                  "domainId": null,
                  "allowFileLinkProperties": false,
                  "allowAttachmentProperties": false,
                  "allowFlagProperties": true,
                  "allowSampleSubjectProperties": true,
                  "allowTextChoiceProperties": true,
                  "allowTimepointProperties": false,
                  "showDefaultValueSettings": false,
                  "defaultDefaultValueType": undefined,
                  "defaultValueOptions": Immutable.List [],
                  "fields": Immutable.List [],
                  "indices": Immutable.List [],
                  "domainException": undefined,
                  "mandatoryFieldNames": Immutable.List [],
                  "reservedFieldNames": Immutable.List [],
                  "newDesignFields": undefined,
                  "instructions": undefined,
                  "domainKindName": undefined,
                  "schemaName": undefined,
                  "queryName": undefined,
                },
              ]
            }
            onChange={[Function]}
            onToggle={[Function]}
            panelStatus="TODO"
            showHeader={true}
            successBsStyle="success"
            testMode={true}
            validate={false}
          >
            <ForwardRef
              className="domain-form-panel"
              expanded={false}
              onToggle={[Function]}
            >
              <Uncontrolled(Panel)
                className="domain-form-panel"
                expanded={false}
                innerRef={null}
                onToggle={[Function]}
              >
                <Panel
                  bsClass="panel"
                  bsStyle="default"
                  className="domain-form-panel"
                  expanded={false}
                  onToggle={[Function]}
                >
                  <div
                    className="domain-form-panel panel panel-default"
                  >
                    <CollapsiblePanelHeader
                      collapsed={true}
                      controlledCollapse={true}
                      id="domainpropertiesrow-Batch-Fields-hdr"
                      isValid={true}
                      panelStatus="TODO"
                      title="Batch Fields"
                      togglePanel={[Function]}
                    >
                      <PanelHeading
                        bsClass="panel"
                        className="domain-panel-header domain-heading-collapsible domain-panel-header-collapsed"
                        componentClass="div"
                        id="domainpropertiesrow-Batch-Fields-hdr"
                        onClick={[Function]}
                      >
                        <div
                          className="domain-panel-header domain-heading-collapsible domain-panel-header-collapsed panel-heading"
                          id="domainpropertiesrow-Batch-Fields-hdr"
                          onClick={[Function]}
                        >
                          <Component
                            iconComponent={
                              <span
                                className="domain-panel-status-icon domain-panel-status-icon-blue"
                              >
                                <span
                                  className="fa fa-exclamation-circle"
                                />
                              </span>
                            }
                            id="tooltip"
                            placement="top"
                            title="Batch Fields"
                          >
                            <span
                              className="label-help-target"
                              onMouseOut={[Function]}
                              onMouseOver={[Function]}
                            >
                              <span
                                className="domain-panel-status-icon domain-panel-status-icon-blue"
                              >
                                <span
                                  className="fa fa-exclamation-circle"
                                />
                              </span>
                              <Overlay
                                animation={[Function]}
                                placement="top"
                                rootClose={false}
                                show={false}
                              >
                                <Overlay
                                  placement="top"
                                  rootClose={false}
                                  show={false}
                                  transition={[Function]}
                                />
                              </Overlay>
                            </span>
                          </Component>
                          <span
                            className="domain-panel-title"
                          >
                            Batch Fields
                          </span>
                          <span
                            className="pull-right"
                          >
                            <span
                              className="fa fa-lg fa-plus-square domain-form-expand-btn"
                            />
                          </span>
                          <Component
                            id="tooltip"
                            placement="top"
                            title="Batch Fields"
                          >
                            <span
                              className="label-help-target"
                              onMouseOut={[Function]}
                              onMouseOver={[Function]}
                            >
                              <span
                                className="label-help-icon fa fa-question-circle"
                              />
                              <Overlay
                                animation={[Function]}
                                placement="top"
                                rootClose={false}
                                show={false}
                              >
                                <Overlay
                                  placement="top"
                                  rootClose={false}
                                  show={false}
                                  transition={[Function]}
                                />
                              </Overlay>
                            </span>
                          </Component>
                        </div>
                      </PanelHeading>
                    </CollapsiblePanelHeader>
                    <PanelBody
                      bsClass="panel"
                      className=""
                      collapsible={true}
                    >
                      <PanelCollapse
                        bsClass="panel"
                      >
                        <Collapse
                          appear={false}
                          dimension="height"
                          getDimensionValue={[Function]}
                          in={false}
                          mountOnEnter={false}
                          timeout={300}
                          unmountOnExit={false}
                        >
                          <Transition
                            appear={false}
                            aria-expanded={null}
                            enter={true}
                            exit={true}
                            in={false}
                            mountOnEnter={false}
                            onEnter={[Function]}
                            onEntered={[Function]}
                            onEntering={[Function]}
                            onExit={[Function]}
                            onExited={[Function]}
                            onExiting={[Function]}
                            timeout={300}
                            unmountOnExit={false}
                          >
                            <div
                              aria-expanded={null}
                              className="panel-collapse collapse"
                            >
                              <div
                                className="panel-body"
                              >
                                <Row
                                  bsClass="row"
                                  className=""
                                  componentClass="div"
                                >
                                  <div
                                    className="row"
                                  >
                                    <Col
                                      bsClass="col"
                                      componentClass="div"
                                      xs={12}
                                    >
                                      <div
                                        className="col-xs-12"
                                      />
                                    </Col>
                                  </div>
                                </Row>
                                <FileAttachmentForm
                                  acceptedFormats=".json"
                                  allowDirectories={false}
                                  allowMultiple={false}
                                  cancelText="Cancel"
                                  compact={false}
                                  fileSpecificCallback={
                                    Immutable.Map {
                                      ".json": [Function],
                                    }
                                  }
                                  index={0}
                                  label="Import fields from file"
                                  labelLong="Select file or drag and drop here."
                                  onFileRemoval={[Function]}
                                  previewGridProps={false}
                                  showAcceptedFormats={true}
                                  showButtons={false}
                                  showLabel={true}
                                  showProgressBar={false}
                                  submitText="Upload"
                                >
                                  <span
                                    className="translator--toggle__wizard"
                                  >
                                    <FormSection
                                      iconSpacer={false}
                                      label="Import fields from file"
                                      showLabel={true}
                                    >
                                      <div
                                        className="row"
                                      >
                                        <div
                                          className="col-sm-12"
                                        >
                                          <label
                                            className="control-label text-left"
                                          >
                                            <strong>
                                              Import fields from file
                                            </strong>
                                          </label>
                                        </div>
                                      </div>
                                      <div
                                        className="row"
                                      >
                                        <div
                                          className="col-sm-12"
                                        >
                                          <div
                                            className="wizard-row--container"
                                          >
                                            <div
                                              className=""
                                            >
                                              <FileAttachmentContainer
                                                acceptedFormats=".json"
                                                allowDirectories={false}
                                                allowMultiple={false}
                                                compact={false}
                                                handleChange={[Function]}
                                                handleRemoval={[Function]}
                                                index={0}
                                                labelLong="Select file or drag and drop here."
                                              >
                                                <div
                                                  className="file-upload--container block"
                                                >
                                                  <label
                                                    className="file-upload--label"
                                                    htmlFor="fileUpload0"
                                                    onDragEnter={[Function]}
                                                    onDragLeave={[Function]}
                                                    onDragOver={[Function]}
                                                    onDrop={[Function]}
                                                  >
                                                    <i
                                                      aria-hidden="true"
                                                      className="fa fa-cloud-upload fa-2x cloud-logo"
                                                    />
                                                    Select file or drag and drop here.
                                                  </label>
                                                  <input
                                                    accept=".json"
                                                    className="file-upload--input"
                                                    id="fileUpload0"
                                                    multiple={false}
                                                    name="fileUpload0"
                                                    onChange={[Function]}
                                                    type="file"
                                                  />
                                                </div>
                                              </FileAttachmentContainer>
                                            </div>
                                          </div>
                                        </div>
                                      </div>
                                    </FormSection>
                                  </span>
                                  <div
                                    className="row"
                                  >
                                    <div
                                      className="col-md-9"
                                    >
                                      <div
                                        className="file-form-formats"
                                      >
                                        <strong>
                                          Supported formats include: 
                                        </strong>
                                        .json
                                      </div>
                                    </div>
                                    <div
                                      className="col-md-3"
                                    >
                                      <div
                                        className="pull-right"
                                      />
                                    </div>
                                  </div>
                                </FileAttachmentForm>
                                <div
                                  className="margin-top domain-form-manual-section"
                                >
                                  <p>
                                    Or
                                  </p>
                                  <ActionButton
                                    buttonClass="domain-form-manual-btn"
                                    containerClass="form-group"
                                    helperTitle="More Info"
                                    onClick={[Function]}
                                  >
                                    <div
                                      className="form-group"
                                    >
                                      <div
                                        className="domain-form-manual-btn"
                                      >
                                        <span
                                          className="container--action-button btn btn-default"
                                          onClick={[Function]}
                                        >
                                          Manually Define Fields
                                        </span>
                                      </div>
                                    </div>
                                  </ActionButton>
                                </div>
                              </div>
                            </div>
                          </Transition>
                        </Collapse>
                      </PanelCollapse>
                    </PanelBody>
                  </div>
                </Panel>
              </Uncontrolled(Panel)>
            </ForwardRef>
          </DomainFormImpl>
        </LookupProvider>
      </DomainForm>
      <DomainForm
        appPropertiesOnly={true}
        controlledCollapse={true}
        domain={
          Immutable.Record {
            "name": "Run Fields",
            "container": undefined,
            "description": undefined,
            "domainURI": undefined,
            "domainId": null,
            "allowFileLinkProperties": false,
            "allowAttachmentProperties": false,
            "allowFlagProperties": true,
            "allowSampleSubjectProperties": true,
            "allowTextChoiceProperties": true,
            "allowTimepointProperties": false,
            "showDefaultValueSettings": false,
            "defaultDefaultValueType": undefined,
            "defaultValueOptions": Immutable.List [],
            "fields": Immutable.List [],
            "indices": Immutable.List [],
            "domainException": undefined,
            "mandatoryFieldNames": Immutable.List [],
            "reservedFieldNames": Immutable.List [],
            "newDesignFields": undefined,
            "instructions": undefined,
            "domainKindName": undefined,
            "schemaName": undefined,
            "queryName": undefined,
          }
        }
        domainFormDisplayOptions={
          {
            "domainKindDisplayName": "assay design",
            "hideFilePropertyType": undefined,
            "hideInferFromFile": true,
            "hideStudyPropertyTypes": true,
            "textChoiceLockedForDomain": true,
          }
        }
        domainIndex={1}
        helpTopic={null}
        index={1}
        initCollapsed={true}
        key="1"
        modelDomains={
          Immutable.List [
            Immutable.Record {
              "name": "Batch Fields",
              "container": undefined,
              "description": undefined,
              "domainURI": undefined,
              "domainId": null,
              "allowFileLinkProperties": false,
              "allowAttachmentProperties": false,
              "allowFlagProperties": true,
              "allowSampleSubjectProperties": true,
              "allowTextChoiceProperties": true,
              "allowTimepointProperties": false,
              "showDefaultValueSettings": false,
              "defaultDefaultValueType": undefined,
              "defaultValueOptions": Immutable.List [],
              "fields": Immutable.List [],
              "indices": Immutable.List [],
              "domainException": undefined,
              "mandatoryFieldNames": Immutable.List [],
              "reservedFieldNames": Immutable.List [],
              "newDesignFields": undefined,
              "instructions": undefined,
              "domainKindName": undefined,
              "schemaName": undefined,
              "queryName": undefined,
            },
            Immutable.Record {
              "name": "Run Fields",
              "container": undefined,
              "description": undefined,
              "domainURI": undefined,
              "domainId": null,
              "allowFileLinkProperties": false,
              "allowAttachmentProperties": false,
              "allowFlagProperties": true,
              "allowSampleSubjectProperties": true,
              "allowTextChoiceProperties": true,
              "allowTimepointProperties": false,
              "showDefaultValueSettings": false,
              "defaultDefaultValueType": undefined,
              "defaultValueOptions": Immutable.List [],
              "fields": Immutable.List [],
              "indices": Immutable.List [],
              "domainException": undefined,
              "mandatoryFieldNames": Immutable.List [],
              "reservedFieldNames": Immutable.List [],
              "newDesignFields": undefined,
              "instructions": undefined,
              "domainKindName": undefined,
              "schemaName": undefined,
              "queryName": undefined,
            },
            Immutable.Record {
              "name": "Data Fields",
              "container": undefined,
              "description": undefined,
              "domainURI": undefined,
              "domainId": null,
              "allowFileLinkProperties": false,
              "allowAttachmentProperties": false,
              "allowFlagProperties": true,
              "allowSampleSubjectProperties": true,
              "allowTextChoiceProperties": true,
              "allowTimepointProperties": false,
              "showDefaultValueSettings": false,
              "defaultDefaultValueType": undefined,
              "defaultValueOptions": Immutable.List [],
              "fields": Immutable.List [],
              "indices": Immutable.List [],
              "domainException": undefined,
              "mandatoryFieldNames": Immutable.List [],
              "reservedFieldNames": Immutable.List [],
              "newDesignFields": undefined,
              "instructions": undefined,
              "domainKindName": undefined,
              "schemaName": undefined,
              "queryName": undefined,
            },
          ]
        }
        onChange={[Function]}
        onToggle={[Function]}
        panelStatus="TODO"
        testMode={true}
        validate={false}
      >
        <LookupProvider>
          <DomainFormImpl
            appPropertiesOnly={true}
            controlledCollapse={true}
            domain={
              Immutable.Record {
                "name": "Run Fields",
                "container": undefined,
                "description": undefined,
                "domainURI": undefined,
                "domainId": null,
                "allowFileLinkProperties": false,
                "allowAttachmentProperties": false,
                "allowFlagProperties": true,
                "allowSampleSubjectProperties": true,
                "allowTextChoiceProperties": true,
                "allowTimepointProperties": false,
                "showDefaultValueSettings": false,
                "defaultDefaultValueType": undefined,
                "defaultValueOptions": Immutable.List [],
                "fields": Immutable.List [],
                "indices": Immutable.List [],
                "domainException": undefined,
                "mandatoryFieldNames": Immutable.List [],
                "reservedFieldNames": Immutable.List [],
                "newDesignFields": undefined,
                "instructions": undefined,
                "domainKindName": undefined,
                "schemaName": undefined,
                "queryName": undefined,
              }
            }
            domainFormDisplayOptions={
              {
                "domainKindDisplayName": "assay design",
                "hideFilePropertyType": undefined,
                "hideInferFromFile": true,
                "hideStudyPropertyTypes": true,
                "textChoiceLockedForDomain": true,
              }
            }
            domainIndex={1}
            helpNoun="field designer"
            helpTopic={null}
            index={1}
            initCollapsed={true}
            isNew={false}
            modelDomains={
              Immutable.List [
                Immutable.Record {
                  "name": "Batch Fields",
                  "container": undefined,
                  "description": undefined,
                  "domainURI": undefined,
                  "domainId": null,
                  "allowFileLinkProperties": false,
                  "allowAttachmentProperties": false,
                  "allowFlagProperties": true,
                  "allowSampleSubjectProperties": true,
                  "allowTextChoiceProperties": true,
                  "allowTimepointProperties": false,
                  "showDefaultValueSettings": false,
                  "defaultDefaultValueType": undefined,
                  "defaultValueOptions": Immutable.List [],
                  "fields": Immutable.List [],
                  "indices": Immutable.List [],
                  "domainException": undefined,
                  "mandatoryFieldNames": Immutable.List [],
                  "reservedFieldNames": Immutable.List [],
                  "newDesignFields": undefined,
                  "instructions": undefined,
                  "domainKindName": undefined,
                  "schemaName": undefined,
                  "queryName": undefined,
                },
                Immutable.Record {
                  "name": "Run Fields",
                  "container": undefined,
                  "description": undefined,
                  "domainURI": undefined,
                  "domainId": null,
                  "allowFileLinkProperties": false,
                  "allowAttachmentProperties": false,
                  "allowFlagProperties": true,
                  "allowSampleSubjectProperties": true,
                  "allowTextChoiceProperties": true,
                  "allowTimepointProperties": false,
                  "showDefaultValueSettings": false,
                  "defaultDefaultValueType": undefined,
                  "defaultValueOptions": Immutable.List [],
                  "fields": Immutable.List [],
                  "indices": Immutable.List [],
                  "domainException": undefined,
                  "mandatoryFieldNames": Immutable.List [],
                  "reservedFieldNames": Immutable.List [],
                  "newDesignFields": undefined,
                  "instructions": undefined,
                  "domainKindName": undefined,
                  "schemaName": undefined,
                  "queryName": undefined,
                },
                Immutable.Record {
                  "name": "Data Fields",
                  "container": undefined,
                  "description": undefined,
                  "domainURI": undefined,
                  "domainId": null,
                  "allowFileLinkProperties": false,
                  "allowAttachmentProperties": false,
                  "allowFlagProperties": true,
                  "allowSampleSubjectProperties": true,
                  "allowTextChoiceProperties": true,
                  "allowTimepointProperties": false,
                  "showDefaultValueSettings": false,
                  "defaultDefaultValueType": undefined,
                  "defaultValueOptions": Immutable.List [],
                  "fields": Immutable.List [],
                  "indices": Immutable.List [],
                  "domainException": undefined,
                  "mandatoryFieldNames": Immutable.List [],
                  "reservedFieldNames": Immutable.List [],
                  "newDesignFields": undefined,
                  "instructions": undefined,
                  "domainKindName": undefined,
                  "schemaName": undefined,
                  "queryName": undefined,
                },
              ]
            }
            onChange={[Function]}
            onToggle={[Function]}
            panelStatus="TODO"
            showHeader={true}
            successBsStyle="success"
            testMode={true}
            validate={false}
          >
            <ForwardRef
              className="domain-form-panel"
              expanded={false}
              onToggle={[Function]}
            >
              <Uncontrolled(Panel)
                className="domain-form-panel"
                expanded={false}
                innerRef={null}
                onToggle={[Function]}
              >
                <Panel
                  bsClass="panel"
                  bsStyle="default"
                  className="domain-form-panel"
                  expanded={false}
                  onToggle={[Function]}
                >
                  <div
                    className="domain-form-panel panel panel-default"
                  >
                    <CollapsiblePanelHeader
                      collapsed={true}
                      controlledCollapse={true}
                      id="domainpropertiesrow-Run-Fields-hdr"
                      isValid={true}
                      panelStatus="TODO"
                      title="Run Fields"
                      togglePanel={[Function]}
                    >
                      <PanelHeading
                        bsClass="panel"
                        className="domain-panel-header domain-heading-collapsible domain-panel-header-collapsed"
                        componentClass="div"
                        id="domainpropertiesrow-Run-Fields-hdr"
                        onClick={[Function]}
                      >
                        <div
                          className="domain-panel-header domain-heading-collapsible domain-panel-header-collapsed panel-heading"
                          id="domainpropertiesrow-Run-Fields-hdr"
                          onClick={[Function]}
                        >
                          <Component
                            iconComponent={
                              <span
                                className="domain-panel-status-icon domain-panel-status-icon-blue"
                              >
                                <span
                                  className="fa fa-exclamation-circle"
                                />
                              </span>
                            }
                            id="tooltip"
                            placement="top"
                            title="Run Fields"
                          >
                            <span
                              className="label-help-target"
                              onMouseOut={[Function]}
                              onMouseOver={[Function]}
                            >
                              <span
                                className="domain-panel-status-icon domain-panel-status-icon-blue"
                              >
                                <span
                                  className="fa fa-exclamation-circle"
                                />
                              </span>
                              <Overlay
                                animation={[Function]}
                                placement="top"
                                rootClose={false}
                                show={false}
                              >
                                <Overlay
                                  placement="top"
                                  rootClose={false}
                                  show={false}
                                  transition={[Function]}
                                />
                              </Overlay>
                            </span>
                          </Component>
                          <span
                            className="domain-panel-title"
                          >
                            Run Fields
                          </span>
                          <span
                            className="pull-right"
                          >
                            <span
                              className="fa fa-lg fa-plus-square domain-form-expand-btn"
                            />
                          </span>
                          <Component
                            id="tooltip"
                            placement="top"
                            title="Run Fields"
                          >
                            <span
                              className="label-help-target"
                              onMouseOut={[Function]}
                              onMouseOver={[Function]}
                            >
                              <span
                                className="label-help-icon fa fa-question-circle"
                              />
                              <Overlay
                                animation={[Function]}
                                placement="top"
                                rootClose={false}
                                show={false}
                              >
                                <Overlay
                                  placement="top"
                                  rootClose={false}
                                  show={false}
                                  transition={[Function]}
                                />
                              </Overlay>
                            </span>
                          </Component>
                        </div>
                      </PanelHeading>
                    </CollapsiblePanelHeader>
                    <PanelBody
                      bsClass="panel"
                      className=""
                      collapsible={true}
                    >
                      <PanelCollapse
                        bsClass="panel"
                      >
                        <Collapse
                          appear={false}
                          dimension="height"
                          getDimensionValue={[Function]}
                          in={false}
                          mountOnEnter={false}
                          timeout={300}
                          unmountOnExit={false}
                        >
                          <Transition
                            appear={false}
                            aria-expanded={null}
                            enter={true}
                            exit={true}
                            in={false}
                            mountOnEnter={false}
                            onEnter={[Function]}
                            onEntered={[Function]}
                            onEntering={[Function]}
                            onExit={[Function]}
                            onExited={[Function]}
                            onExiting={[Function]}
                            timeout={300}
                            unmountOnExit={false}
                          >
                            <div
                              aria-expanded={null}
                              className="panel-collapse collapse"
                            >
                              <div
                                className="panel-body"
                              >
                                <Row
                                  bsClass="row"
                                  className=""
                                  componentClass="div"
                                >
                                  <div
                                    className="row"
                                  >
                                    <Col
                                      bsClass="col"
                                      componentClass="div"
                                      xs={12}
                                    >
                                      <div
                                        className="col-xs-12"
                                      />
                                    </Col>
                                  </div>
                                </Row>
                                <FileAttachmentForm
                                  acceptedFormats=".json"
                                  allowDirectories={false}
                                  allowMultiple={false}
                                  cancelText="Cancel"
                                  compact={false}
                                  fileSpecificCallback={
                                    Immutable.Map {
                                      ".json": [Function],
                                    }
                                  }
                                  index={1}
                                  label="Import fields from file"
                                  labelLong="Select file or drag and drop here."
                                  onFileRemoval={[Function]}
                                  previewGridProps={false}
                                  showAcceptedFormats={true}
                                  showButtons={false}
                                  showLabel={true}
                                  showProgressBar={false}
                                  submitText="Upload"
                                >
                                  <span
                                    className="translator--toggle__wizard"
                                  >
                                    <FormSection
                                      iconSpacer={false}
                                      label="Import fields from file"
                                      showLabel={true}
                                    >
                                      <div
                                        className="row"
                                      >
                                        <div
                                          className="col-sm-12"
                                        >
                                          <label
                                            className="control-label text-left"
                                          >
                                            <strong>
                                              Import fields from file
                                            </strong>
                                          </label>
                                        </div>
                                      </div>
                                      <div
                                        className="row"
                                      >
                                        <div
                                          className="col-sm-12"
                                        >
                                          <div
                                            className="wizard-row--container"
                                          >
                                            <div
                                              className=""
                                            >
                                              <FileAttachmentContainer
                                                acceptedFormats=".json"
                                                allowDirectories={false}
                                                allowMultiple={false}
                                                compact={false}
                                                handleChange={[Function]}
                                                handleRemoval={[Function]}
                                                index={1}
                                                labelLong="Select file or drag and drop here."
                                              >
                                                <div
                                                  className="file-upload--container block"
                                                >
                                                  <label
                                                    className="file-upload--label"
                                                    htmlFor="fileUpload1"
                                                    onDragEnter={[Function]}
                                                    onDragLeave={[Function]}
                                                    onDragOver={[Function]}
                                                    onDrop={[Function]}
                                                  >
                                                    <i
                                                      aria-hidden="true"
                                                      className="fa fa-cloud-upload fa-2x cloud-logo"
                                                    />
                                                    Select file or drag and drop here.
                                                  </label>
                                                  <input
                                                    accept=".json"
                                                    className="file-upload--input"
                                                    id="fileUpload1"
                                                    multiple={false}
                                                    name="fileUpload1"
                                                    onChange={[Function]}
                                                    type="file"
                                                  />
                                                </div>
                                              </FileAttachmentContainer>
                                            </div>
                                          </div>
                                        </div>
                                      </div>
                                    </FormSection>
                                  </span>
                                  <div
                                    className="row"
                                  >
                                    <div
                                      className="col-md-9"
                                    >
                                      <div
                                        className="file-form-formats"
                                      >
                                        <strong>
                                          Supported formats include: 
                                        </strong>
                                        .json
                                      </div>
                                    </div>
                                    <div
                                      className="col-md-3"
                                    >
                                      <div
                                        className="pull-right"
                                      />
                                    </div>
                                  </div>
                                </FileAttachmentForm>
                                <div
                                  className="margin-top domain-form-manual-section"
                                >
                                  <p>
                                    Or
                                  </p>
                                  <ActionButton
                                    buttonClass="domain-form-manual-btn"
                                    containerClass="form-group"
                                    helperTitle="More Info"
                                    onClick={[Function]}
                                  >
                                    <div
                                      className="form-group"
                                    >
                                      <div
                                        className="domain-form-manual-btn"
                                      >
                                        <span
                                          className="container--action-button btn btn-default"
                                          onClick={[Function]}
                                        >
                                          Manually Define Fields
                                        </span>
                                      </div>
                                    </div>
                                  </ActionButton>
                                </div>
                              </div>
                            </div>
                          </Transition>
                        </Collapse>
                      </PanelCollapse>
                    </PanelBody>
                  </div>
                </Panel>
              </Uncontrolled(Panel)>
            </ForwardRef>
          </DomainFormImpl>
        </LookupProvider>
      </DomainForm>
      <DomainForm
        appPropertiesOnly={true}
        controlledCollapse={true}
        domain={
          Immutable.Record {
            "name": "Data Fields",
            "container": undefined,
            "description": undefined,
            "domainURI": undefined,
            "domainId": null,
            "allowFileLinkProperties": false,
            "allowAttachmentProperties": false,
            "allowFlagProperties": true,
            "allowSampleSubjectProperties": true,
            "allowTextChoiceProperties": true,
            "allowTimepointProperties": false,
            "showDefaultValueSettings": false,
            "defaultDefaultValueType": undefined,
            "defaultValueOptions": Immutable.List [],
            "fields": Immutable.List [],
            "indices": Immutable.List [],
            "domainException": undefined,
            "mandatoryFieldNames": Immutable.List [],
            "reservedFieldNames": Immutable.List [],
            "newDesignFields": undefined,
            "instructions": undefined,
            "domainKindName": undefined,
            "schemaName": undefined,
            "queryName": undefined,
          }
        }
        domainFormDisplayOptions={
          {
            "domainKindDisplayName": "assay design",
            "hideFilePropertyType": undefined,
            "hideInferFromFile": false,
            "hideStudyPropertyTypes": true,
            "textChoiceLockedForDomain": true,
          }
        }
        domainIndex={2}
        helpTopic={null}
        index={2}
        initCollapsed={true}
        key="2"
        modelDomains={
          Immutable.List [
            Immutable.Record {
              "name": "Batch Fields",
              "container": undefined,
              "description": undefined,
              "domainURI": undefined,
              "domainId": null,
              "allowFileLinkProperties": false,
              "allowAttachmentProperties": false,
              "allowFlagProperties": true,
              "allowSampleSubjectProperties": true,
              "allowTextChoiceProperties": true,
              "allowTimepointProperties": false,
              "showDefaultValueSettings": false,
              "defaultDefaultValueType": undefined,
              "defaultValueOptions": Immutable.List [],
              "fields": Immutable.List [],
              "indices": Immutable.List [],
              "domainException": undefined,
              "mandatoryFieldNames": Immutable.List [],
              "reservedFieldNames": Immutable.List [],
              "newDesignFields": undefined,
              "instructions": undefined,
              "domainKindName": undefined,
              "schemaName": undefined,
              "queryName": undefined,
            },
            Immutable.Record {
              "name": "Run Fields",
              "container": undefined,
              "description": undefined,
              "domainURI": undefined,
              "domainId": null,
              "allowFileLinkProperties": false,
              "allowAttachmentProperties": false,
              "allowFlagProperties": true,
              "allowSampleSubjectProperties": true,
              "allowTextChoiceProperties": true,
              "allowTimepointProperties": false,
              "showDefaultValueSettings": false,
              "defaultDefaultValueType": undefined,
              "defaultValueOptions": Immutable.List [],
              "fields": Immutable.List [],
              "indices": Immutable.List [],
              "domainException": undefined,
              "mandatoryFieldNames": Immutable.List [],
              "reservedFieldNames": Immutable.List [],
              "newDesignFields": undefined,
              "instructions": undefined,
              "domainKindName": undefined,
              "schemaName": undefined,
              "queryName": undefined,
            },
            Immutable.Record {
              "name": "Data Fields",
              "container": undefined,
              "description": undefined,
              "domainURI": undefined,
              "domainId": null,
              "allowFileLinkProperties": false,
              "allowAttachmentProperties": false,
              "allowFlagProperties": true,
              "allowSampleSubjectProperties": true,
              "allowTextChoiceProperties": true,
              "allowTimepointProperties": false,
              "showDefaultValueSettings": false,
              "defaultDefaultValueType": undefined,
              "defaultValueOptions": Immutable.List [],
              "fields": Immutable.List [],
              "indices": Immutable.List [],
              "domainException": undefined,
              "mandatoryFieldNames": Immutable.List [],
              "reservedFieldNames": Immutable.List [],
              "newDesignFields": undefined,
              "instructions": undefined,
              "domainKindName": undefined,
              "schemaName": undefined,
              "queryName": undefined,
            },
          ]
        }
        onChange={[Function]}
        onToggle={[Function]}
        panelStatus="TODO"
        testMode={true}
        validate={false}
      >
        <LookupProvider>
          <DomainFormImpl
            appPropertiesOnly={true}
            controlledCollapse={true}
            domain={
              Immutable.Record {
                "name": "Data Fields",
                "container": undefined,
                "description": undefined,
                "domainURI": undefined,
                "domainId": null,
                "allowFileLinkProperties": false,
                "allowAttachmentProperties": false,
                "allowFlagProperties": true,
                "allowSampleSubjectProperties": true,
                "allowTextChoiceProperties": true,
                "allowTimepointProperties": false,
                "showDefaultValueSettings": false,
                "defaultDefaultValueType": undefined,
                "defaultValueOptions": Immutable.List [],
                "fields": Immutable.List [],
                "indices": Immutable.List [],
                "domainException": undefined,
                "mandatoryFieldNames": Immutable.List [],
                "reservedFieldNames": Immutable.List [],
                "newDesignFields": undefined,
                "instructions": undefined,
                "domainKindName": undefined,
                "schemaName": undefined,
                "queryName": undefined,
              }
            }
            domainFormDisplayOptions={
              {
                "domainKindDisplayName": "assay design",
                "hideFilePropertyType": undefined,
                "hideInferFromFile": false,
                "hideStudyPropertyTypes": true,
                "textChoiceLockedForDomain": true,
              }
            }
            domainIndex={2}
            helpNoun="field designer"
            helpTopic={null}
            index={2}
            initCollapsed={true}
            isNew={false}
            modelDomains={
              Immutable.List [
                Immutable.Record {
                  "name": "Batch Fields",
                  "container": undefined,
                  "description": undefined,
                  "domainURI": undefined,
                  "domainId": null,
                  "allowFileLinkProperties": false,
                  "allowAttachmentProperties": false,
                  "allowFlagProperties": true,
                  "allowSampleSubjectProperties": true,
                  "allowTextChoiceProperties": true,
                  "allowTimepointProperties": false,
                  "showDefaultValueSettings": false,
                  "defaultDefaultValueType": undefined,
                  "defaultValueOptions": Immutable.List [],
                  "fields": Immutable.List [],
                  "indices": Immutable.List [],
                  "domainException": undefined,
                  "mandatoryFieldNames": Immutable.List [],
                  "reservedFieldNames": Immutable.List [],
                  "newDesignFields": undefined,
                  "instructions": undefined,
                  "domainKindName": undefined,
                  "schemaName": undefined,
                  "queryName": undefined,
                },
                Immutable.Record {
                  "name": "Run Fields",
                  "container": undefined,
                  "description": undefined,
                  "domainURI": undefined,
                  "domainId": null,
                  "allowFileLinkProperties": false,
                  "allowAttachmentProperties": false,
                  "allowFlagProperties": true,
                  "allowSampleSubjectProperties": true,
                  "allowTextChoiceProperties": true,
                  "allowTimepointProperties": false,
                  "showDefaultValueSettings": false,
                  "defaultDefaultValueType": undefined,
                  "defaultValueOptions": Immutable.List [],
                  "fields": Immutable.List [],
                  "indices": Immutable.List [],
                  "domainException": undefined,
                  "mandatoryFieldNames": Immutable.List [],
                  "reservedFieldNames": Immutable.List [],
                  "newDesignFields": undefined,
                  "instructions": undefined,
                  "domainKindName": undefined,
                  "schemaName": undefined,
                  "queryName": undefined,
                },
                Immutable.Record {
                  "name": "Data Fields",
                  "container": undefined,
                  "description": undefined,
                  "domainURI": undefined,
                  "domainId": null,
                  "allowFileLinkProperties": false,
                  "allowAttachmentProperties": false,
                  "allowFlagProperties": true,
                  "allowSampleSubjectProperties": true,
                  "allowTextChoiceProperties": true,
                  "allowTimepointProperties": false,
                  "showDefaultValueSettings": false,
                  "defaultDefaultValueType": undefined,
                  "defaultValueOptions": Immutable.List [],
                  "fields": Immutable.List [],
                  "indices": Immutable.List [],
                  "domainException": undefined,
                  "mandatoryFieldNames": Immutable.List [],
                  "reservedFieldNames": Immutable.List [],
                  "newDesignFields": undefined,
                  "instructions": undefined,
                  "domainKindName": undefined,
                  "schemaName": undefined,
                  "queryName": undefined,
                },
              ]
            }
            onChange={[Function]}
            onToggle={[Function]}
            panelStatus="TODO"
            showHeader={true}
            successBsStyle="success"
            testMode={true}
            validate={false}
          >
            <ForwardRef
              className="domain-form-panel"
              expanded={false}
              onToggle={[Function]}
            >
              <Uncontrolled(Panel)
                className="domain-form-panel"
                expanded={false}
                innerRef={null}
                onToggle={[Function]}
              >
                <Panel
                  bsClass="panel"
                  bsStyle="default"
                  className="domain-form-panel"
                  expanded={false}
                  onToggle={[Function]}
                >
                  <div
                    className="domain-form-panel panel panel-default"
                  >
                    <CollapsiblePanelHeader
                      collapsed={true}
                      controlledCollapse={true}
                      id="domainpropertiesrow-Data-Fields-hdr"
                      isValid={true}
                      panelStatus="TODO"
                      title="Results Fields"
                      togglePanel={[Function]}
                    >
                      <PanelHeading
                        bsClass="panel"
                        className="domain-panel-header domain-heading-collapsible domain-panel-header-collapsed"
                        componentClass="div"
                        id="domainpropertiesrow-Data-Fields-hdr"
                        onClick={[Function]}
                      >
                        <div
                          className="domain-panel-header domain-heading-collapsible domain-panel-header-collapsed panel-heading"
                          id="domainpropertiesrow-Data-Fields-hdr"
                          onClick={[Function]}
                        >
                          <Component
                            iconComponent={
                              <span
                                className="domain-panel-status-icon domain-panel-status-icon-blue"
                              >
                                <span
                                  className="fa fa-exclamation-circle"
                                />
                              </span>
                            }
                            id="tooltip"
                            placement="top"
                            title="Results Fields"
                          >
                            <span
                              className="label-help-target"
                              onMouseOut={[Function]}
                              onMouseOver={[Function]}
                            >
                              <span
                                className="domain-panel-status-icon domain-panel-status-icon-blue"
                              >
                                <span
                                  className="fa fa-exclamation-circle"
                                />
                              </span>
                              <Overlay
                                animation={[Function]}
                                placement="top"
                                rootClose={false}
                                show={false}
                              >
                                <Overlay
                                  placement="top"
                                  rootClose={false}
                                  show={false}
                                  transition={[Function]}
                                />
                              </Overlay>
                            </span>
                          </Component>
                          <span
                            className="domain-panel-title"
                          >
                            Results Fields
                          </span>
                          <span
                            className="pull-right"
                          >
                            <span
                              className="fa fa-lg fa-plus-square domain-form-expand-btn"
                            />
                          </span>
                          <Component
                            id="tooltip"
                            placement="top"
                            title="Results Fields"
                          >
                            <span
                              className="label-help-target"
                              onMouseOut={[Function]}
                              onMouseOver={[Function]}
                            >
                              <span
                                className="label-help-icon fa fa-question-circle"
                              />
                              <Overlay
                                animation={[Function]}
                                placement="top"
                                rootClose={false}
                                show={false}
                              >
                                <Overlay
                                  placement="top"
                                  rootClose={false}
                                  show={false}
                                  transition={[Function]}
                                />
                              </Overlay>
                            </span>
                          </Component>
                        </div>
                      </PanelHeading>
                    </CollapsiblePanelHeader>
                    <PanelBody
                      bsClass="panel"
                      className=""
                      collapsible={true}
                    >
                      <PanelCollapse
                        bsClass="panel"
                      >
                        <Collapse
                          appear={false}
                          dimension="height"
                          getDimensionValue={[Function]}
                          in={false}
                          mountOnEnter={false}
                          timeout={300}
                          unmountOnExit={false}
                        >
                          <Transition
                            appear={false}
                            aria-expanded={null}
                            enter={true}
                            exit={true}
                            in={false}
                            mountOnEnter={false}
                            onEnter={[Function]}
                            onEntered={[Function]}
                            onEntering={[Function]}
                            onExit={[Function]}
                            onExited={[Function]}
                            onExiting={[Function]}
                            timeout={300}
                            unmountOnExit={false}
                          >
                            <div
                              aria-expanded={null}
                              className="panel-collapse collapse"
                            >
                              <div
                                className="panel-body"
                              >
                                <Row
                                  bsClass="row"
                                  className=""
                                  componentClass="div"
                                >
                                  <div
                                    className="row"
                                  >
                                    <Col
                                      bsClass="col"
                                      componentClass="div"
                                      xs={12}
                                    >
                                      <div
                                        className="col-xs-12"
                                      />
                                    </Col>
                                  </div>
                                </Row>
                                <FileAttachmentForm
                                  acceptedFormats=".csv, .tsv, .txt, .xls, .xlsx, .json"
                                  allowDirectories={false}
                                  allowMultiple={false}
                                  cancelText="Cancel"
                                  compact={false}
                                  fileSpecificCallback={
                                    Immutable.Map {
                                      ".json": [Function],
                                    }
                                  }
                                  index={2}
                                  label="Import or infer fields from file"
                                  labelLong="Select file or drag and drop here."
                                  onFileRemoval={[Function]}
                                  previewGridProps={
                                    {
                                      "domainKindName": undefined,
                                      "onPreviewLoad": [Function],
                                      "previewCount": 3,
                                      "skipPreviewGrid": true,
                                    }
                                  }
                                  showAcceptedFormats={true}
                                  showButtons={false}
                                  showLabel={true}
                                  showProgressBar={false}
                                  submitText="Upload"
                                >
                                  <span
                                    className="translator--toggle__wizard"
                                  >
                                    <FormSection
                                      iconSpacer={false}
                                      label="Import or infer fields from file"
                                      showLabel={true}
                                    >
                                      <div
                                        className="row"
                                      >
                                        <div
                                          className="col-sm-12"
                                        >
                                          <label
                                            className="control-label text-left"
                                          >
                                            <strong>
                                              Import or infer fields from file
                                            </strong>
                                          </label>
                                        </div>
                                      </div>
                                      <div
                                        className="row"
                                      >
                                        <div
                                          className="col-sm-12"
                                        >
                                          <div
                                            className="wizard-row--container"
                                          >
                                            <div
                                              className=""
                                            >
                                              <FileAttachmentContainer
                                                acceptedFormats=".csv, .tsv, .txt, .xls, .xlsx, .json"
                                                allowDirectories={false}
                                                allowMultiple={false}
                                                compact={false}
                                                handleChange={[Function]}
                                                handleRemoval={[Function]}
                                                index={2}
                                                labelLong="Select file or drag and drop here."
                                              >
                                                <div
                                                  className="file-upload--container block"
                                                >
                                                  <label
                                                    className="file-upload--label"
                                                    htmlFor="fileUpload2"
                                                    onDragEnter={[Function]}
                                                    onDragLeave={[Function]}
                                                    onDragOver={[Function]}
                                                    onDrop={[Function]}
                                                  >
                                                    <i
                                                      aria-hidden="true"
                                                      className="fa fa-cloud-upload fa-2x cloud-logo"
                                                    />
                                                    Select file or drag and drop here.
                                                  </label>
                                                  <input
                                                    accept=".csv, .tsv, .txt, .xls, .xlsx, .json"
                                                    className="file-upload--input"
                                                    id="fileUpload2"
                                                    multiple={false}
                                                    name="fileUpload2"
                                                    onChange={[Function]}
                                                    type="file"
                                                  />
                                                </div>
                                              </FileAttachmentContainer>
                                            </div>
                                          </div>
                                        </div>
                                      </div>
                                    </FormSection>
                                  </span>
                                  <div
                                    className="row"
                                  >
                                    <div
                                      className="col-md-9"
                                    >
                                      <div
                                        className="file-form-formats"
                                      >
                                        <strong>
                                          Supported formats include: 
                                        </strong>
                                        .csv, .tsv, .txt, .xls, .xlsx, .json
                                      </div>
                                    </div>
                                    <div
                                      className="col-md-3"
                                    >
                                      <div
                                        className="pull-right"
                                      />
                                    </div>
                                  </div>
                                </FileAttachmentForm>
                                <div
                                  className="margin-top domain-form-manual-section"
                                >
                                  <p>
                                    Or
                                  </p>
                                  <ActionButton
                                    buttonClass="domain-form-manual-btn"
                                    containerClass="form-group"
                                    helperTitle="More Info"
                                    onClick={[Function]}
                                  >
                                    <div
                                      className="form-group"
                                    >
                                      <div
                                        className="domain-form-manual-btn"
                                      >
                                        <span
                                          className="container--action-button btn btn-default"
                                          onClick={[Function]}
                                        >
                                          Manually Define Fields
                                        </span>
                                      </div>
                                    </div>
                                  </ActionButton>
                                </div>
                              </div>
                            </div>
                          </Transition>
                        </Collapse>
                      </PanelCollapse>
                    </PanelBody>
                  </div>
                </Panel>
              </Uncontrolled(Panel)>
            </ForwardRef>
          </DomainFormImpl>
        </LookupProvider>
      </DomainForm>
      <div
        className="domain-form-panel domain-designer-buttons"
      >
        <Button
          active={false}
          block={false}
          bsClass="btn"
          bsStyle="default"
          disabled={false}
          onClick={[MockFunction]}
        >
          <button
            className="btn btn-default"
            disabled={false}
            onClick={[MockFunction]}
            type="button"
          >
            Cancel
          </button>
        </Button>
        <Button
          active={false}
          block={false}
          bsClass="btn"
          bsStyle="success"
          className="pull-right"
          disabled={false}
          onClick={[Function]}
        >
          <button
            className="pull-right btn btn-success"
            disabled={false}
            onClick={[Function]}
            type="button"
          >
            Save
          </button>
        </Button>
      </div>
    </BaseDomainDesigner>
  </AssayDesignerPanelsImpl>
</ComponentWithBaseDomainDesigner>
`;

exports[`AssayDesignerPanels appPropertiesOnly with initModel 1`] = `
<ComponentWithBaseDomainDesigner
  appPropertiesOnly={true}
  domainFormDisplayOptions={
    {
      "hideStudyPropertyTypes": true,
    }
  }
  initModel={
    Immutable.Record {
      "allowBackgroundUpload": true,
      "allowEditableResults": true,
      "allowQCStates": false,
      "allowTransformationScript": false,
      "allowPlateMetadata": false,
      "autoCopyTargetContainer": undefined,
      "autoCopyTargetContainerId": undefined,
      "autoLinkCategory": undefined,
      "availableDetectionMethods": undefined,
      "availableMetadataInputFormats": undefined,
      "availablePlateTemplates": undefined,
      "backgroundUpload": true,
      "description": "My assay protocol for you all to use.",
      "domains": Immutable.List [
        Immutable.Record {
          "name": "Batch Fields",
          "container": undefined,
          "description": undefined,
          "domainURI": undefined,
          "domainId": null,
          "allowFileLinkProperties": false,
          "allowAttachmentProperties": false,
          "allowFlagProperties": true,
          "allowSampleSubjectProperties": true,
          "allowTextChoiceProperties": true,
          "allowTimepointProperties": false,
          "showDefaultValueSettings": false,
          "defaultDefaultValueType": undefined,
          "defaultValueOptions": Immutable.List [],
          "fields": Immutable.List [],
          "indices": Immutable.List [],
          "domainException": undefined,
          "mandatoryFieldNames": Immutable.List [],
          "reservedFieldNames": Immutable.List [],
          "newDesignFields": undefined,
          "instructions": undefined,
          "domainKindName": undefined,
          "schemaName": undefined,
          "queryName": undefined,
        },
        Immutable.Record {
          "name": "Sample Fields",
          "container": undefined,
          "description": undefined,
          "domainURI": undefined,
          "domainId": null,
          "allowFileLinkProperties": false,
          "allowAttachmentProperties": false,
          "allowFlagProperties": true,
          "allowSampleSubjectProperties": true,
          "allowTextChoiceProperties": true,
          "allowTimepointProperties": false,
          "showDefaultValueSettings": false,
          "defaultDefaultValueType": undefined,
          "defaultValueOptions": Immutable.List [],
          "fields": Immutable.List [
            Immutable.Record {
              "conceptURI": undefined,
              "conditionalFormats": Immutable.List [],
              "defaultScale": undefined,
              "defaultValueType": undefined,
              "defaultValue": undefined,
              "defaultDisplayValue": undefined,
              "description": undefined,
              "dimension": undefined,
              "excludeFromShifting": false,
              "format": undefined,
              "hidden": false,
              "importAliases": undefined,
              "label": undefined,
              "lookupContainer": undefined,
              "lookupQuery": undefined,
              "lookupSchema": undefined,
              "lookupValidator": undefined,
              "measure": undefined,
              "mvEnabled": false,
              "name": "field1",
              "PHI": undefined,
              "propertyId": undefined,
              "propertyURI": undefined,
              "propertyValidators": Immutable.List [],
              "rangeValidators": Immutable.List [],
              "rangeURI": "xsd:string",
              "regexValidators": Immutable.List [],
              "textChoiceValidator": undefined,
              "recommendedVariable": false,
              "required": false,
              "scale": 4000,
              "URL": undefined,
              "shownInDetailsView": true,
              "shownInInsertView": true,
              "shownInUpdateView": true,
              "visible": true,
              "dataType": Immutable.Record {
                "conceptURI": undefined,
                "display": "Text",
                "name": "string",
                "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                "alternateRangeURI": "xsd:string",
                "shortDisplay": "String",
                "lookupSchema": undefined,
                "lookupQuery": undefined,
              },
              "lookupQueryValue": undefined,
              "lookupType": Immutable.Record {
                "conceptURI": undefined,
                "display": "Lookup",
                "name": "lookup",
                "rangeURI": "xsd:string",
                "alternateRangeURI": undefined,
                "shortDisplay": undefined,
                "lookupSchema": undefined,
                "lookupQuery": undefined,
              },
              "original": {
                "conceptURI": undefined,
                "dataType": Immutable.Record {
                  "conceptURI": undefined,
                  "display": "Text",
                  "name": "string",
                  "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                  "alternateRangeURI": "xsd:string",
                  "shortDisplay": "String",
                  "lookupSchema": undefined,
                  "lookupQuery": undefined,
                },
                "name": "field1",
                "rangeURI": undefined,
              },
              "updatedField": false,
              "isPrimaryKey": false,
              "lockType": "NotLocked",
              "wrappedColumnName": undefined,
              "disablePhiLevel": false,
              "lockExistingField": false,
              "sourceOntology": undefined,
              "conceptSubtree": undefined,
              "conceptLabelColumn": undefined,
              "conceptImportColumn": undefined,
              "principalConceptCode": undefined,
              "derivationDataScope": undefined,
              "selected": false,
              "scannable": false,
            },
            Immutable.Record {
              "conceptURI": undefined,
              "conditionalFormats": Immutable.List [],
              "defaultScale": undefined,
              "defaultValueType": undefined,
              "defaultValue": undefined,
              "defaultDisplayValue": undefined,
              "description": undefined,
              "dimension": undefined,
              "excludeFromShifting": false,
              "format": undefined,
              "hidden": false,
              "importAliases": undefined,
              "label": undefined,
              "lookupContainer": undefined,
              "lookupQuery": undefined,
              "lookupSchema": undefined,
              "lookupValidator": undefined,
              "measure": undefined,
              "mvEnabled": false,
              "name": "field2",
              "PHI": undefined,
              "propertyId": undefined,
              "propertyURI": undefined,
              "propertyValidators": Immutable.List [],
              "rangeValidators": Immutable.List [],
              "rangeURI": "xsd:int",
              "regexValidators": Immutable.List [],
              "textChoiceValidator": undefined,
              "recommendedVariable": false,
              "required": false,
              "scale": 4000,
              "URL": undefined,
              "shownInDetailsView": true,
              "shownInInsertView": true,
              "shownInUpdateView": true,
              "visible": true,
              "dataType": Immutable.Record {
                "conceptURI": undefined,
                "display": "Integer",
                "name": "int",
                "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                "alternateRangeURI": "xsd:int",
                "shortDisplay": undefined,
                "lookupSchema": undefined,
                "lookupQuery": undefined,
              },
              "lookupQueryValue": undefined,
              "lookupType": Immutable.Record {
                "conceptURI": undefined,
                "display": "Lookup",
                "name": "lookup",
                "rangeURI": "xsd:int",
                "alternateRangeURI": undefined,
                "shortDisplay": undefined,
                "lookupSchema": undefined,
                "lookupQuery": undefined,
              },
              "original": {
                "conceptURI": undefined,
                "dataType": Immutable.Record {
                  "conceptURI": undefined,
                  "display": "Integer",
                  "name": "int",
                  "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                  "alternateRangeURI": "xsd:int",
                  "shortDisplay": undefined,
                  "lookupSchema": undefined,
                  "lookupQuery": undefined,
                },
                "name": "field2",
                "rangeURI": undefined,
              },
              "updatedField": false,
              "isPrimaryKey": false,
              "lockType": "NotLocked",
              "wrappedColumnName": undefined,
              "disablePhiLevel": false,
              "lockExistingField": false,
              "sourceOntology": undefined,
              "conceptSubtree": undefined,
              "conceptLabelColumn": undefined,
              "conceptImportColumn": undefined,
              "principalConceptCode": undefined,
              "derivationDataScope": undefined,
              "selected": false,
              "scannable": false,
            },
            Immutable.Record {
              "conceptURI": undefined,
              "conditionalFormats": Immutable.List [],
              "defaultScale": undefined,
              "defaultValueType": undefined,
              "defaultValue": undefined,
              "defaultDisplayValue": undefined,
              "description": undefined,
              "dimension": undefined,
              "excludeFromShifting": false,
              "format": undefined,
              "hidden": false,
              "importAliases": undefined,
              "label": undefined,
              "lookupContainer": undefined,
              "lookupQuery": undefined,
              "lookupSchema": undefined,
              "lookupValidator": undefined,
              "measure": undefined,
              "mvEnabled": false,
              "name": "field3",
              "PHI": undefined,
              "propertyId": undefined,
              "propertyURI": undefined,
              "propertyValidators": Immutable.List [],
              "rangeValidators": Immutable.List [],
              "rangeURI": "xsd:dateTime",
              "regexValidators": Immutable.List [],
              "textChoiceValidator": undefined,
              "recommendedVariable": false,
              "required": false,
              "scale": 4000,
              "URL": undefined,
              "shownInDetailsView": true,
              "shownInInsertView": true,
              "shownInUpdateView": true,
              "visible": true,
              "dataType": Immutable.Record {
                "conceptURI": undefined,
                "display": "Date Time",
                "name": "dateTime",
                "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                "alternateRangeURI": "xsd:dateTime",
                "shortDisplay": undefined,
                "lookupSchema": undefined,
                "lookupQuery": undefined,
              },
              "lookupQueryValue": undefined,
              "lookupType": Immutable.Record {
                "conceptURI": undefined,
                "display": "Lookup",
                "name": "lookup",
                "rangeURI": "xsd:dateTime",
                "alternateRangeURI": undefined,
                "shortDisplay": undefined,
                "lookupSchema": undefined,
                "lookupQuery": undefined,
              },
              "original": {
                "conceptURI": undefined,
                "dataType": Immutable.Record {
                  "conceptURI": undefined,
                  "display": "Date Time",
                  "name": "dateTime",
                  "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                  "alternateRangeURI": "xsd:dateTime",
                  "shortDisplay": undefined,
                  "lookupSchema": undefined,
                  "lookupQuery": undefined,
                },
                "name": "field3",
                "rangeURI": undefined,
              },
              "updatedField": false,
              "isPrimaryKey": false,
              "lockType": "NotLocked",
              "wrappedColumnName": undefined,
              "disablePhiLevel": false,
              "lockExistingField": false,
              "sourceOntology": undefined,
              "conceptSubtree": undefined,
              "conceptLabelColumn": undefined,
              "conceptImportColumn": undefined,
              "principalConceptCode": undefined,
              "derivationDataScope": undefined,
              "selected": false,
              "scannable": false,
            },
          ],
          "indices": Immutable.List [],
          "domainException": undefined,
          "mandatoryFieldNames": Immutable.List [],
          "reservedFieldNames": Immutable.List [],
          "newDesignFields": undefined,
          "instructions": undefined,
          "domainKindName": undefined,
          "schemaName": undefined,
          "queryName": undefined,
        },
      ],
      "editableResults": true,
      "editableRuns": true,
      "exception": undefined,
      "metadataInputFormatHelp": undefined,
      "moduleTransformScripts": undefined,
      "name": "Test Assay Protocol",
      "plateMetadata": undefined,
      "protocolId": 1,
      "protocolParameters": undefined,
      "protocolTransformScripts": undefined,
      "providerName": undefined,
      "saveScriptFiles": false,
      "selectedDetectionMethod": undefined,
      "selectedMetadataInputFormat": undefined,
      "selectedPlateTemplate": undefined,
      "status": "Active",
      "qcEnabled": undefined,
    }
  }
  onCancel={[MockFunction]}
  onComplete={[MockFunction]}
  testMode={true}
>
  <AssayDesignerPanelsImpl
    appPropertiesOnly={true}
    currentPanelIndex={0}
    domainFormDisplayOptions={
      {
        "hideStudyPropertyTypes": true,
      }
    }
    firstState={true}
    initModel={
      Immutable.Record {
        "allowBackgroundUpload": true,
        "allowEditableResults": true,
        "allowQCStates": false,
        "allowTransformationScript": false,
        "allowPlateMetadata": false,
        "autoCopyTargetContainer": undefined,
        "autoCopyTargetContainerId": undefined,
        "autoLinkCategory": undefined,
        "availableDetectionMethods": undefined,
        "availableMetadataInputFormats": undefined,
        "availablePlateTemplates": undefined,
        "backgroundUpload": true,
        "description": "My assay protocol for you all to use.",
        "domains": Immutable.List [
          Immutable.Record {
            "name": "Batch Fields",
            "container": undefined,
            "description": undefined,
            "domainURI": undefined,
            "domainId": null,
            "allowFileLinkProperties": false,
            "allowAttachmentProperties": false,
            "allowFlagProperties": true,
            "allowSampleSubjectProperties": true,
            "allowTextChoiceProperties": true,
            "allowTimepointProperties": false,
            "showDefaultValueSettings": false,
            "defaultDefaultValueType": undefined,
            "defaultValueOptions": Immutable.List [],
            "fields": Immutable.List [],
            "indices": Immutable.List [],
            "domainException": undefined,
            "mandatoryFieldNames": Immutable.List [],
            "reservedFieldNames": Immutable.List [],
            "newDesignFields": undefined,
            "instructions": undefined,
            "domainKindName": undefined,
            "schemaName": undefined,
            "queryName": undefined,
          },
          Immutable.Record {
            "name": "Sample Fields",
            "container": undefined,
            "description": undefined,
            "domainURI": undefined,
            "domainId": null,
            "allowFileLinkProperties": false,
            "allowAttachmentProperties": false,
            "allowFlagProperties": true,
            "allowSampleSubjectProperties": true,
            "allowTextChoiceProperties": true,
            "allowTimepointProperties": false,
            "showDefaultValueSettings": false,
            "defaultDefaultValueType": undefined,
            "defaultValueOptions": Immutable.List [],
            "fields": Immutable.List [
              Immutable.Record {
                "conceptURI": undefined,
                "conditionalFormats": Immutable.List [],
                "defaultScale": undefined,
                "defaultValueType": undefined,
                "defaultValue": undefined,
                "defaultDisplayValue": undefined,
                "description": undefined,
                "dimension": undefined,
                "excludeFromShifting": false,
                "format": undefined,
                "hidden": false,
                "importAliases": undefined,
                "label": undefined,
                "lookupContainer": undefined,
                "lookupQuery": undefined,
                "lookupSchema": undefined,
                "lookupValidator": undefined,
                "measure": undefined,
                "mvEnabled": false,
                "name": "field1",
                "PHI": undefined,
                "propertyId": undefined,
                "propertyURI": undefined,
                "propertyValidators": Immutable.List [],
                "rangeValidators": Immutable.List [],
                "rangeURI": "xsd:string",
                "regexValidators": Immutable.List [],
                "textChoiceValidator": undefined,
                "recommendedVariable": false,
                "required": false,
                "scale": 4000,
                "URL": undefined,
                "shownInDetailsView": true,
                "shownInInsertView": true,
                "shownInUpdateView": true,
                "visible": true,
                "dataType": Immutable.Record {
                  "conceptURI": undefined,
                  "display": "Text",
                  "name": "string",
                  "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                  "alternateRangeURI": "xsd:string",
                  "shortDisplay": "String",
                  "lookupSchema": undefined,
                  "lookupQuery": undefined,
                },
                "lookupQueryValue": undefined,
                "lookupType": Immutable.Record {
                  "conceptURI": undefined,
                  "display": "Lookup",
                  "name": "lookup",
                  "rangeURI": "xsd:string",
                  "alternateRangeURI": undefined,
                  "shortDisplay": undefined,
                  "lookupSchema": undefined,
                  "lookupQuery": undefined,
                },
                "original": {
                  "conceptURI": undefined,
                  "dataType": Immutable.Record {
                    "conceptURI": undefined,
                    "display": "Text",
                    "name": "string",
                    "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                    "alternateRangeURI": "xsd:string",
                    "shortDisplay": "String",
                    "lookupSchema": undefined,
                    "lookupQuery": undefined,
                  },
                  "name": "field1",
                  "rangeURI": undefined,
                },
                "updatedField": false,
                "isPrimaryKey": false,
                "lockType": "NotLocked",
                "wrappedColumnName": undefined,
                "disablePhiLevel": false,
                "lockExistingField": false,
                "sourceOntology": undefined,
                "conceptSubtree": undefined,
                "conceptLabelColumn": undefined,
                "conceptImportColumn": undefined,
                "principalConceptCode": undefined,
                "derivationDataScope": undefined,
                "selected": false,
                "scannable": false,
              },
              Immutable.Record {
                "conceptURI": undefined,
                "conditionalFormats": Immutable.List [],
                "defaultScale": undefined,
                "defaultValueType": undefined,
                "defaultValue": undefined,
                "defaultDisplayValue": undefined,
                "description": undefined,
                "dimension": undefined,
                "excludeFromShifting": false,
                "format": undefined,
                "hidden": false,
                "importAliases": undefined,
                "label": undefined,
                "lookupContainer": undefined,
                "lookupQuery": undefined,
                "lookupSchema": undefined,
                "lookupValidator": undefined,
                "measure": undefined,
                "mvEnabled": false,
                "name": "field2",
                "PHI": undefined,
                "propertyId": undefined,
                "propertyURI": undefined,
                "propertyValidators": Immutable.List [],
                "rangeValidators": Immutable.List [],
                "rangeURI": "xsd:int",
                "regexValidators": Immutable.List [],
                "textChoiceValidator": undefined,
                "recommendedVariable": false,
                "required": false,
                "scale": 4000,
                "URL": undefined,
                "shownInDetailsView": true,
                "shownInInsertView": true,
                "shownInUpdateView": true,
                "visible": true,
                "dataType": Immutable.Record {
                  "conceptURI": undefined,
                  "display": "Integer",
                  "name": "int",
                  "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                  "alternateRangeURI": "xsd:int",
                  "shortDisplay": undefined,
                  "lookupSchema": undefined,
                  "lookupQuery": undefined,
                },
                "lookupQueryValue": undefined,
                "lookupType": Immutable.Record {
                  "conceptURI": undefined,
                  "display": "Lookup",
                  "name": "lookup",
                  "rangeURI": "xsd:int",
                  "alternateRangeURI": undefined,
                  "shortDisplay": undefined,
                  "lookupSchema": undefined,
                  "lookupQuery": undefined,
                },
                "original": {
                  "conceptURI": undefined,
                  "dataType": Immutable.Record {
                    "conceptURI": undefined,
                    "display": "Integer",
                    "name": "int",
                    "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                    "alternateRangeURI": "xsd:int",
                    "shortDisplay": undefined,
                    "lookupSchema": undefined,
                    "lookupQuery": undefined,
                  },
                  "name": "field2",
                  "rangeURI": undefined,
                },
                "updatedField": false,
                "isPrimaryKey": false,
                "lockType": "NotLocked",
                "wrappedColumnName": undefined,
                "disablePhiLevel": false,
                "lockExistingField": false,
                "sourceOntology": undefined,
                "conceptSubtree": undefined,
                "conceptLabelColumn": undefined,
                "conceptImportColumn": undefined,
                "principalConceptCode": undefined,
                "derivationDataScope": undefined,
                "selected": false,
                "scannable": false,
              },
              Immutable.Record {
                "conceptURI": undefined,
                "conditionalFormats": Immutable.List [],
                "defaultScale": undefined,
                "defaultValueType": undefined,
                "defaultValue": undefined,
                "defaultDisplayValue": undefined,
                "description": undefined,
                "dimension": undefined,
                "excludeFromShifting": false,
                "format": undefined,
                "hidden": false,
                "importAliases": undefined,
                "label": undefined,
                "lookupContainer": undefined,
                "lookupQuery": undefined,
                "lookupSchema": undefined,
                "lookupValidator": undefined,
                "measure": undefined,
                "mvEnabled": false,
                "name": "field3",
                "PHI": undefined,
                "propertyId": undefined,
                "propertyURI": undefined,
                "propertyValidators": Immutable.List [],
                "rangeValidators": Immutable.List [],
                "rangeURI": "xsd:dateTime",
                "regexValidators": Immutable.List [],
                "textChoiceValidator": undefined,
                "recommendedVariable": false,
                "required": false,
                "scale": 4000,
                "URL": undefined,
                "shownInDetailsView": true,
                "shownInInsertView": true,
                "shownInUpdateView": true,
                "visible": true,
                "dataType": Immutable.Record {
                  "conceptURI": undefined,
                  "display": "Date Time",
                  "name": "dateTime",
                  "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                  "alternateRangeURI": "xsd:dateTime",
                  "shortDisplay": undefined,
                  "lookupSchema": undefined,
                  "lookupQuery": undefined,
                },
                "lookupQueryValue": undefined,
                "lookupType": Immutable.Record {
                  "conceptURI": undefined,
                  "display": "Lookup",
                  "name": "lookup",
                  "rangeURI": "xsd:dateTime",
                  "alternateRangeURI": undefined,
                  "shortDisplay": undefined,
                  "lookupSchema": undefined,
                  "lookupQuery": undefined,
                },
                "original": {
                  "conceptURI": undefined,
                  "dataType": Immutable.Record {
                    "conceptURI": undefined,
                    "display": "Date Time",
                    "name": "dateTime",
                    "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                    "alternateRangeURI": "xsd:dateTime",
                    "shortDisplay": undefined,
                    "lookupSchema": undefined,
                    "lookupQuery": undefined,
                  },
                  "name": "field3",
                  "rangeURI": undefined,
                },
                "updatedField": false,
                "isPrimaryKey": false,
                "lockType": "NotLocked",
                "wrappedColumnName": undefined,
                "disablePhiLevel": false,
                "lockExistingField": false,
                "sourceOntology": undefined,
                "conceptSubtree": undefined,
                "conceptLabelColumn": undefined,
                "conceptImportColumn": undefined,
                "principalConceptCode": undefined,
                "derivationDataScope": undefined,
                "selected": false,
                "scannable": false,
              },
            ],
            "indices": Immutable.List [],
            "domainException": undefined,
            "mandatoryFieldNames": Immutable.List [],
            "reservedFieldNames": Immutable.List [],
            "newDesignFields": undefined,
            "instructions": undefined,
            "domainKindName": undefined,
            "schemaName": undefined,
            "queryName": undefined,
          },
        ],
        "editableResults": true,
        "editableRuns": true,
        "exception": undefined,
        "metadataInputFormatHelp": undefined,
        "moduleTransformScripts": undefined,
        "name": "Test Assay Protocol",
        "plateMetadata": undefined,
        "protocolId": 1,
        "protocolParameters": undefined,
        "protocolTransformScripts": undefined,
        "providerName": undefined,
        "saveScriptFiles": false,
        "selectedDetectionMethod": undefined,
        "selectedMetadataInputFormat": undefined,
        "selectedPlateTemplate": undefined,
        "status": "Active",
        "qcEnabled": undefined,
      }
    }
    onCancel={[MockFunction]}
    onComplete={[MockFunction]}
    onFinish={[Function]}
    onTogglePanel={[Function]}
    setSubmitting={[Function]}
    submitting={false}
    testMode={true}
    visitedPanels={Immutable.List []}
  >
    <BaseDomainDesigner
      domains={
        Immutable.List [
          Immutable.Record {
            "name": "Batch Fields",
            "container": undefined,
            "description": undefined,
            "domainURI": undefined,
            "domainId": null,
            "allowFileLinkProperties": false,
            "allowAttachmentProperties": false,
            "allowFlagProperties": true,
            "allowSampleSubjectProperties": true,
            "allowTextChoiceProperties": true,
            "allowTimepointProperties": false,
            "showDefaultValueSettings": false,
            "defaultDefaultValueType": undefined,
            "defaultValueOptions": Immutable.List [],
            "fields": Immutable.List [],
            "indices": Immutable.List [],
            "domainException": undefined,
            "mandatoryFieldNames": Immutable.List [],
            "reservedFieldNames": Immutable.List [],
            "newDesignFields": undefined,
            "instructions": undefined,
            "domainKindName": undefined,
            "schemaName": undefined,
            "queryName": undefined,
          },
          Immutable.Record {
            "name": "Sample Fields",
            "container": undefined,
            "description": undefined,
            "domainURI": undefined,
            "domainId": null,
            "allowFileLinkProperties": false,
            "allowAttachmentProperties": false,
            "allowFlagProperties": true,
            "allowSampleSubjectProperties": true,
            "allowTextChoiceProperties": true,
            "allowTimepointProperties": false,
            "showDefaultValueSettings": false,
            "defaultDefaultValueType": undefined,
            "defaultValueOptions": Immutable.List [],
            "fields": Immutable.List [
              Immutable.Record {
                "conceptURI": undefined,
                "conditionalFormats": Immutable.List [],
                "defaultScale": undefined,
                "defaultValueType": undefined,
                "defaultValue": undefined,
                "defaultDisplayValue": undefined,
                "description": undefined,
                "dimension": undefined,
                "excludeFromShifting": false,
                "format": undefined,
                "hidden": false,
                "importAliases": undefined,
                "label": undefined,
                "lookupContainer": undefined,
                "lookupQuery": undefined,
                "lookupSchema": undefined,
                "lookupValidator": undefined,
                "measure": undefined,
                "mvEnabled": false,
                "name": "field1",
                "PHI": undefined,
                "propertyId": undefined,
                "propertyURI": undefined,
                "propertyValidators": Immutable.List [],
                "rangeValidators": Immutable.List [],
                "rangeURI": "xsd:string",
                "regexValidators": Immutable.List [],
                "textChoiceValidator": undefined,
                "recommendedVariable": false,
                "required": false,
                "scale": 4000,
                "URL": undefined,
                "shownInDetailsView": true,
                "shownInInsertView": true,
                "shownInUpdateView": true,
                "visible": true,
                "dataType": Immutable.Record {
                  "conceptURI": undefined,
                  "display": "Text",
                  "name": "string",
                  "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                  "alternateRangeURI": "xsd:string",
                  "shortDisplay": "String",
                  "lookupSchema": undefined,
                  "lookupQuery": undefined,
                },
                "lookupQueryValue": undefined,
                "lookupType": Immutable.Record {
                  "conceptURI": undefined,
                  "display": "Lookup",
                  "name": "lookup",
                  "rangeURI": "xsd:string",
                  "alternateRangeURI": undefined,
                  "shortDisplay": undefined,
                  "lookupSchema": undefined,
                  "lookupQuery": undefined,
                },
                "original": {
                  "conceptURI": undefined,
                  "dataType": Immutable.Record {
                    "conceptURI": undefined,
                    "display": "Text",
                    "name": "string",
                    "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                    "alternateRangeURI": "xsd:string",
                    "shortDisplay": "String",
                    "lookupSchema": undefined,
                    "lookupQuery": undefined,
                  },
                  "name": "field1",
                  "rangeURI": undefined,
                },
                "updatedField": false,
                "isPrimaryKey": false,
                "lockType": "NotLocked",
                "wrappedColumnName": undefined,
                "disablePhiLevel": false,
                "lockExistingField": false,
                "sourceOntology": undefined,
                "conceptSubtree": undefined,
                "conceptLabelColumn": undefined,
                "conceptImportColumn": undefined,
                "principalConceptCode": undefined,
                "derivationDataScope": undefined,
                "selected": false,
                "scannable": false,
              },
              Immutable.Record {
                "conceptURI": undefined,
                "conditionalFormats": Immutable.List [],
                "defaultScale": undefined,
                "defaultValueType": undefined,
                "defaultValue": undefined,
                "defaultDisplayValue": undefined,
                "description": undefined,
                "dimension": undefined,
                "excludeFromShifting": false,
                "format": undefined,
                "hidden": false,
                "importAliases": undefined,
                "label": undefined,
                "lookupContainer": undefined,
                "lookupQuery": undefined,
                "lookupSchema": undefined,
                "lookupValidator": undefined,
                "measure": undefined,
                "mvEnabled": false,
                "name": "field2",
                "PHI": undefined,
                "propertyId": undefined,
                "propertyURI": undefined,
                "propertyValidators": Immutable.List [],
                "rangeValidators": Immutable.List [],
                "rangeURI": "xsd:int",
                "regexValidators": Immutable.List [],
                "textChoiceValidator": undefined,
                "recommendedVariable": false,
                "required": false,
                "scale": 4000,
                "URL": undefined,
                "shownInDetailsView": true,
                "shownInInsertView": true,
                "shownInUpdateView": true,
                "visible": true,
                "dataType": Immutable.Record {
                  "conceptURI": undefined,
                  "display": "Integer",
                  "name": "int",
                  "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                  "alternateRangeURI": "xsd:int",
                  "shortDisplay": undefined,
                  "lookupSchema": undefined,
                  "lookupQuery": undefined,
                },
                "lookupQueryValue": undefined,
                "lookupType": Immutable.Record {
                  "conceptURI": undefined,
                  "display": "Lookup",
                  "name": "lookup",
                  "rangeURI": "xsd:int",
                  "alternateRangeURI": undefined,
                  "shortDisplay": undefined,
                  "lookupSchema": undefined,
                  "lookupQuery": undefined,
                },
                "original": {
                  "conceptURI": undefined,
                  "dataType": Immutable.Record {
                    "conceptURI": undefined,
                    "display": "Integer",
                    "name": "int",
                    "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                    "alternateRangeURI": "xsd:int",
                    "shortDisplay": undefined,
                    "lookupSchema": undefined,
                    "lookupQuery": undefined,
                  },
                  "name": "field2",
                  "rangeURI": undefined,
                },
                "updatedField": false,
                "isPrimaryKey": false,
                "lockType": "NotLocked",
                "wrappedColumnName": undefined,
                "disablePhiLevel": false,
                "lockExistingField": false,
                "sourceOntology": undefined,
                "conceptSubtree": undefined,
                "conceptLabelColumn": undefined,
                "conceptImportColumn": undefined,
                "principalConceptCode": undefined,
                "derivationDataScope": undefined,
                "selected": false,
                "scannable": false,
              },
              Immutable.Record {
                "conceptURI": undefined,
                "conditionalFormats": Immutable.List [],
                "defaultScale": undefined,
                "defaultValueType": undefined,
                "defaultValue": undefined,
                "defaultDisplayValue": undefined,
                "description": undefined,
                "dimension": undefined,
                "excludeFromShifting": false,
                "format": undefined,
                "hidden": false,
                "importAliases": undefined,
                "label": undefined,
                "lookupContainer": undefined,
                "lookupQuery": undefined,
                "lookupSchema": undefined,
                "lookupValidator": undefined,
                "measure": undefined,
                "mvEnabled": false,
                "name": "field3",
                "PHI": undefined,
                "propertyId": undefined,
                "propertyURI": undefined,
                "propertyValidators": Immutable.List [],
                "rangeValidators": Immutable.List [],
                "rangeURI": "xsd:dateTime",
                "regexValidators": Immutable.List [],
                "textChoiceValidator": undefined,
                "recommendedVariable": false,
                "required": false,
                "scale": 4000,
                "URL": undefined,
                "shownInDetailsView": true,
                "shownInInsertView": true,
                "shownInUpdateView": true,
                "visible": true,
                "dataType": Immutable.Record {
                  "conceptURI": undefined,
                  "display": "Date Time",
                  "name": "dateTime",
                  "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                  "alternateRangeURI": "xsd:dateTime",
                  "shortDisplay": undefined,
                  "lookupSchema": undefined,
                  "lookupQuery": undefined,
                },
                "lookupQueryValue": undefined,
                "lookupType": Immutable.Record {
                  "conceptURI": undefined,
                  "display": "Lookup",
                  "name": "lookup",
                  "rangeURI": "xsd:dateTime",
                  "alternateRangeURI": undefined,
                  "shortDisplay": undefined,
                  "lookupSchema": undefined,
                  "lookupQuery": undefined,
                },
                "original": {
                  "conceptURI": undefined,
                  "dataType": Immutable.Record {
                    "conceptURI": undefined,
                    "display": "Date Time",
                    "name": "dateTime",
                    "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                    "alternateRangeURI": "xsd:dateTime",
                    "shortDisplay": undefined,
                    "lookupSchema": undefined,
                    "lookupQuery": undefined,
                  },
                  "name": "field3",
                  "rangeURI": undefined,
                },
                "updatedField": false,
                "isPrimaryKey": false,
                "lockType": "NotLocked",
                "wrappedColumnName": undefined,
                "disablePhiLevel": false,
                "lockExistingField": false,
                "sourceOntology": undefined,
                "conceptSubtree": undefined,
                "conceptLabelColumn": undefined,
                "conceptImportColumn": undefined,
                "principalConceptCode": undefined,
                "derivationDataScope": undefined,
                "selected": false,
                "scannable": false,
              },
            ],
            "indices": Immutable.List [],
            "domainException": undefined,
            "mandatoryFieldNames": Immutable.List [],
            "reservedFieldNames": Immutable.List [],
            "newDesignFields": undefined,
            "instructions": undefined,
            "domainKindName": undefined,
            "schemaName": undefined,
            "queryName": undefined,
          },
        ]
      }
      hasValidProperties={true}
      name="Test Assay Protocol"
      onCancel={[MockFunction]}
      onFinish={[Function]}
      saveBtnText="Save"
      submitting={false}
      visitedPanels={Immutable.List []}
    >
      <ComponentWithDomainPropertiesPanelCollapse
        appPropertiesOnly={true}
        controlledCollapse={true}
        hideStudyProperties={true}
        initCollapsed={false}
        model={
          Immutable.Record {
            "allowBackgroundUpload": true,
            "allowEditableResults": true,
            "allowQCStates": false,
            "allowTransformationScript": false,
            "allowPlateMetadata": false,
            "autoCopyTargetContainer": undefined,
            "autoCopyTargetContainerId": undefined,
            "autoLinkCategory": undefined,
            "availableDetectionMethods": undefined,
            "availableMetadataInputFormats": undefined,
            "availablePlateTemplates": undefined,
            "backgroundUpload": true,
            "description": "My assay protocol for you all to use.",
            "domains": Immutable.List [
              Immutable.Record {
                "name": "Batch Fields",
                "container": undefined,
                "description": undefined,
                "domainURI": undefined,
                "domainId": null,
                "allowFileLinkProperties": false,
                "allowAttachmentProperties": false,
                "allowFlagProperties": true,
                "allowSampleSubjectProperties": true,
                "allowTextChoiceProperties": true,
                "allowTimepointProperties": false,
                "showDefaultValueSettings": false,
                "defaultDefaultValueType": undefined,
                "defaultValueOptions": Immutable.List [],
                "fields": Immutable.List [],
                "indices": Immutable.List [],
                "domainException": undefined,
                "mandatoryFieldNames": Immutable.List [],
                "reservedFieldNames": Immutable.List [],
                "newDesignFields": undefined,
                "instructions": undefined,
                "domainKindName": undefined,
                "schemaName": undefined,
                "queryName": undefined,
              },
              Immutable.Record {
                "name": "Sample Fields",
                "container": undefined,
                "description": undefined,
                "domainURI": undefined,
                "domainId": null,
                "allowFileLinkProperties": false,
                "allowAttachmentProperties": false,
                "allowFlagProperties": true,
                "allowSampleSubjectProperties": true,
                "allowTextChoiceProperties": true,
                "allowTimepointProperties": false,
                "showDefaultValueSettings": false,
                "defaultDefaultValueType": undefined,
                "defaultValueOptions": Immutable.List [],
                "fields": Immutable.List [
                  Immutable.Record {
                    "conceptURI": undefined,
                    "conditionalFormats": Immutable.List [],
                    "defaultScale": undefined,
                    "defaultValueType": undefined,
                    "defaultValue": undefined,
                    "defaultDisplayValue": undefined,
                    "description": undefined,
                    "dimension": undefined,
                    "excludeFromShifting": false,
                    "format": undefined,
                    "hidden": false,
                    "importAliases": undefined,
                    "label": undefined,
                    "lookupContainer": undefined,
                    "lookupQuery": undefined,
                    "lookupSchema": undefined,
                    "lookupValidator": undefined,
                    "measure": undefined,
                    "mvEnabled": false,
                    "name": "field1",
                    "PHI": undefined,
                    "propertyId": undefined,
                    "propertyURI": undefined,
                    "propertyValidators": Immutable.List [],
                    "rangeValidators": Immutable.List [],
                    "rangeURI": "xsd:string",
                    "regexValidators": Immutable.List [],
                    "textChoiceValidator": undefined,
                    "recommendedVariable": false,
                    "required": false,
                    "scale": 4000,
                    "URL": undefined,
                    "shownInDetailsView": true,
                    "shownInInsertView": true,
                    "shownInUpdateView": true,
                    "visible": true,
                    "dataType": Immutable.Record {
                      "conceptURI": undefined,
                      "display": "Text",
                      "name": "string",
                      "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                      "alternateRangeURI": "xsd:string",
                      "shortDisplay": "String",
                      "lookupSchema": undefined,
                      "lookupQuery": undefined,
                    },
                    "lookupQueryValue": undefined,
                    "lookupType": Immutable.Record {
                      "conceptURI": undefined,
                      "display": "Lookup",
                      "name": "lookup",
                      "rangeURI": "xsd:string",
                      "alternateRangeURI": undefined,
                      "shortDisplay": undefined,
                      "lookupSchema": undefined,
                      "lookupQuery": undefined,
                    },
                    "original": {
                      "conceptURI": undefined,
                      "dataType": Immutable.Record {
                        "conceptURI": undefined,
                        "display": "Text",
                        "name": "string",
                        "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                        "alternateRangeURI": "xsd:string",
                        "shortDisplay": "String",
                        "lookupSchema": undefined,
                        "lookupQuery": undefined,
                      },
                      "name": "field1",
                      "rangeURI": undefined,
                    },
                    "updatedField": false,
                    "isPrimaryKey": false,
                    "lockType": "NotLocked",
                    "wrappedColumnName": undefined,
                    "disablePhiLevel": false,
                    "lockExistingField": false,
                    "sourceOntology": undefined,
                    "conceptSubtree": undefined,
                    "conceptLabelColumn": undefined,
                    "conceptImportColumn": undefined,
                    "principalConceptCode": undefined,
                    "derivationDataScope": undefined,
                    "selected": false,
                    "scannable": false,
                  },
                  Immutable.Record {
                    "conceptURI": undefined,
                    "conditionalFormats": Immutable.List [],
                    "defaultScale": undefined,
                    "defaultValueType": undefined,
                    "defaultValue": undefined,
                    "defaultDisplayValue": undefined,
                    "description": undefined,
                    "dimension": undefined,
                    "excludeFromShifting": false,
                    "format": undefined,
                    "hidden": false,
                    "importAliases": undefined,
                    "label": undefined,
                    "lookupContainer": undefined,
                    "lookupQuery": undefined,
                    "lookupSchema": undefined,
                    "lookupValidator": undefined,
                    "measure": undefined,
                    "mvEnabled": false,
                    "name": "field2",
                    "PHI": undefined,
                    "propertyId": undefined,
                    "propertyURI": undefined,
                    "propertyValidators": Immutable.List [],
                    "rangeValidators": Immutable.List [],
                    "rangeURI": "xsd:int",
                    "regexValidators": Immutable.List [],
                    "textChoiceValidator": undefined,
                    "recommendedVariable": false,
                    "required": false,
                    "scale": 4000,
                    "URL": undefined,
                    "shownInDetailsView": true,
                    "shownInInsertView": true,
                    "shownInUpdateView": true,
                    "visible": true,
                    "dataType": Immutable.Record {
                      "conceptURI": undefined,
                      "display": "Integer",
                      "name": "int",
                      "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                      "alternateRangeURI": "xsd:int",
                      "shortDisplay": undefined,
                      "lookupSchema": undefined,
                      "lookupQuery": undefined,
                    },
                    "lookupQueryValue": undefined,
                    "lookupType": Immutable.Record {
                      "conceptURI": undefined,
                      "display": "Lookup",
                      "name": "lookup",
                      "rangeURI": "xsd:int",
                      "alternateRangeURI": undefined,
                      "shortDisplay": undefined,
                      "lookupSchema": undefined,
                      "lookupQuery": undefined,
                    },
                    "original": {
                      "conceptURI": undefined,
                      "dataType": Immutable.Record {
                        "conceptURI": undefined,
                        "display": "Integer",
                        "name": "int",
                        "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                        "alternateRangeURI": "xsd:int",
                        "shortDisplay": undefined,
                        "lookupSchema": undefined,
                        "lookupQuery": undefined,
                      },
                      "name": "field2",
                      "rangeURI": undefined,
                    },
                    "updatedField": false,
                    "isPrimaryKey": false,
                    "lockType": "NotLocked",
                    "wrappedColumnName": undefined,
                    "disablePhiLevel": false,
                    "lockExistingField": false,
                    "sourceOntology": undefined,
                    "conceptSubtree": undefined,
                    "conceptLabelColumn": undefined,
                    "conceptImportColumn": undefined,
                    "principalConceptCode": undefined,
                    "derivationDataScope": undefined,
                    "selected": false,
                    "scannable": false,
                  },
                  Immutable.Record {
                    "conceptURI": undefined,
                    "conditionalFormats": Immutable.List [],
                    "defaultScale": undefined,
                    "defaultValueType": undefined,
                    "defaultValue": undefined,
                    "defaultDisplayValue": undefined,
                    "description": undefined,
                    "dimension": undefined,
                    "excludeFromShifting": false,
                    "format": undefined,
                    "hidden": false,
                    "importAliases": undefined,
                    "label": undefined,
                    "lookupContainer": undefined,
                    "lookupQuery": undefined,
                    "lookupSchema": undefined,
                    "lookupValidator": undefined,
                    "measure": undefined,
                    "mvEnabled": false,
                    "name": "field3",
                    "PHI": undefined,
                    "propertyId": undefined,
                    "propertyURI": undefined,
                    "propertyValidators": Immutable.List [],
                    "rangeValidators": Immutable.List [],
                    "rangeURI": "xsd:dateTime",
                    "regexValidators": Immutable.List [],
                    "textChoiceValidator": undefined,
                    "recommendedVariable": false,
                    "required": false,
                    "scale": 4000,
                    "URL": undefined,
                    "shownInDetailsView": true,
                    "shownInInsertView": true,
                    "shownInUpdateView": true,
                    "visible": true,
                    "dataType": Immutable.Record {
                      "conceptURI": undefined,
                      "display": "Date Time",
                      "name": "dateTime",
                      "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                      "alternateRangeURI": "xsd:dateTime",
                      "shortDisplay": undefined,
                      "lookupSchema": undefined,
                      "lookupQuery": undefined,
                    },
                    "lookupQueryValue": undefined,
                    "lookupType": Immutable.Record {
                      "conceptURI": undefined,
                      "display": "Lookup",
                      "name": "lookup",
                      "rangeURI": "xsd:dateTime",
                      "alternateRangeURI": undefined,
                      "shortDisplay": undefined,
                      "lookupSchema": undefined,
                      "lookupQuery": undefined,
                    },
                    "original": {
                      "conceptURI": undefined,
                      "dataType": Immutable.Record {
                        "conceptURI": undefined,
                        "display": "Date Time",
                        "name": "dateTime",
                        "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                        "alternateRangeURI": "xsd:dateTime",
                        "shortDisplay": undefined,
                        "lookupSchema": undefined,
                        "lookupQuery": undefined,
                      },
                      "name": "field3",
                      "rangeURI": undefined,
                    },
                    "updatedField": false,
                    "isPrimaryKey": false,
                    "lockType": "NotLocked",
                    "wrappedColumnName": undefined,
                    "disablePhiLevel": false,
                    "lockExistingField": false,
                    "sourceOntology": undefined,
                    "conceptSubtree": undefined,
                    "conceptLabelColumn": undefined,
                    "conceptImportColumn": undefined,
                    "principalConceptCode": undefined,
                    "derivationDataScope": undefined,
                    "selected": false,
                    "scannable": false,
                  },
                ],
                "indices": Immutable.List [],
                "domainException": undefined,
                "mandatoryFieldNames": Immutable.List [],
                "reservedFieldNames": Immutable.List [],
                "newDesignFields": undefined,
                "instructions": undefined,
                "domainKindName": undefined,
                "schemaName": undefined,
                "queryName": undefined,
              },
            ],
            "editableResults": true,
            "editableRuns": true,
            "exception": undefined,
            "metadataInputFormatHelp": undefined,
            "moduleTransformScripts": undefined,
            "name": "Test Assay Protocol",
            "plateMetadata": undefined,
            "protocolId": 1,
            "protocolParameters": undefined,
            "protocolTransformScripts": undefined,
            "providerName": undefined,
            "saveScriptFiles": false,
            "selectedDetectionMethod": undefined,
            "selectedMetadataInputFormat": undefined,
            "selectedPlateTemplate": undefined,
            "status": "Active",
            "qcEnabled": undefined,
          }
        }
        onChange={[Function]}
        onToggle={[Function]}
        panelStatus="COMPLETE"
        validate={false}
      >
        <Component
          appPropertiesOnly={true}
          asPanel={true}
          collapsed={false}
          controlledCollapse={true}
          helpTopic="defineAssaySchema"
          hideStudyProperties={true}
          model={
            Immutable.Record {
              "allowBackgroundUpload": true,
              "allowEditableResults": true,
              "allowQCStates": false,
              "allowTransformationScript": false,
              "allowPlateMetadata": false,
              "autoCopyTargetContainer": undefined,
              "autoCopyTargetContainerId": undefined,
              "autoLinkCategory": undefined,
              "availableDetectionMethods": undefined,
              "availableMetadataInputFormats": undefined,
              "availablePlateTemplates": undefined,
              "backgroundUpload": true,
              "description": "My assay protocol for you all to use.",
              "domains": Immutable.List [
                Immutable.Record {
                  "name": "Batch Fields",
                  "container": undefined,
                  "description": undefined,
                  "domainURI": undefined,
                  "domainId": null,
                  "allowFileLinkProperties": false,
                  "allowAttachmentProperties": false,
                  "allowFlagProperties": true,
                  "allowSampleSubjectProperties": true,
                  "allowTextChoiceProperties": true,
                  "allowTimepointProperties": false,
                  "showDefaultValueSettings": false,
                  "defaultDefaultValueType": undefined,
                  "defaultValueOptions": Immutable.List [],
                  "fields": Immutable.List [],
                  "indices": Immutable.List [],
                  "domainException": undefined,
                  "mandatoryFieldNames": Immutable.List [],
                  "reservedFieldNames": Immutable.List [],
                  "newDesignFields": undefined,
                  "instructions": undefined,
                  "domainKindName": undefined,
                  "schemaName": undefined,
                  "queryName": undefined,
                },
                Immutable.Record {
                  "name": "Sample Fields",
                  "container": undefined,
                  "description": undefined,
                  "domainURI": undefined,
                  "domainId": null,
                  "allowFileLinkProperties": false,
                  "allowAttachmentProperties": false,
                  "allowFlagProperties": true,
                  "allowSampleSubjectProperties": true,
                  "allowTextChoiceProperties": true,
                  "allowTimepointProperties": false,
                  "showDefaultValueSettings": false,
                  "defaultDefaultValueType": undefined,
                  "defaultValueOptions": Immutable.List [],
                  "fields": Immutable.List [
                    Immutable.Record {
                      "conceptURI": undefined,
                      "conditionalFormats": Immutable.List [],
                      "defaultScale": undefined,
                      "defaultValueType": undefined,
                      "defaultValue": undefined,
                      "defaultDisplayValue": undefined,
                      "description": undefined,
                      "dimension": undefined,
                      "excludeFromShifting": false,
                      "format": undefined,
                      "hidden": false,
                      "importAliases": undefined,
                      "label": undefined,
                      "lookupContainer": undefined,
                      "lookupQuery": undefined,
                      "lookupSchema": undefined,
                      "lookupValidator": undefined,
                      "measure": undefined,
                      "mvEnabled": false,
                      "name": "field1",
                      "PHI": undefined,
                      "propertyId": undefined,
                      "propertyURI": undefined,
                      "propertyValidators": Immutable.List [],
                      "rangeValidators": Immutable.List [],
                      "rangeURI": "xsd:string",
                      "regexValidators": Immutable.List [],
                      "textChoiceValidator": undefined,
                      "recommendedVariable": false,
                      "required": false,
                      "scale": 4000,
                      "URL": undefined,
                      "shownInDetailsView": true,
                      "shownInInsertView": true,
                      "shownInUpdateView": true,
                      "visible": true,
                      "dataType": Immutable.Record {
                        "conceptURI": undefined,
                        "display": "Text",
                        "name": "string",
                        "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                        "alternateRangeURI": "xsd:string",
                        "shortDisplay": "String",
                        "lookupSchema": undefined,
                        "lookupQuery": undefined,
                      },
                      "lookupQueryValue": undefined,
                      "lookupType": Immutable.Record {
                        "conceptURI": undefined,
                        "display": "Lookup",
                        "name": "lookup",
                        "rangeURI": "xsd:string",
                        "alternateRangeURI": undefined,
                        "shortDisplay": undefined,
                        "lookupSchema": undefined,
                        "lookupQuery": undefined,
                      },
                      "original": {
                        "conceptURI": undefined,
                        "dataType": Immutable.Record {
                          "conceptURI": undefined,
                          "display": "Text",
                          "name": "string",
                          "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                          "alternateRangeURI": "xsd:string",
                          "shortDisplay": "String",
                          "lookupSchema": undefined,
                          "lookupQuery": undefined,
                        },
                        "name": "field1",
                        "rangeURI": undefined,
                      },
                      "updatedField": false,
                      "isPrimaryKey": false,
                      "lockType": "NotLocked",
                      "wrappedColumnName": undefined,
                      "disablePhiLevel": false,
                      "lockExistingField": false,
                      "sourceOntology": undefined,
                      "conceptSubtree": undefined,
                      "conceptLabelColumn": undefined,
                      "conceptImportColumn": undefined,
                      "principalConceptCode": undefined,
                      "derivationDataScope": undefined,
                      "selected": false,
                      "scannable": false,
                    },
                    Immutable.Record {
                      "conceptURI": undefined,
                      "conditionalFormats": Immutable.List [],
                      "defaultScale": undefined,
                      "defaultValueType": undefined,
                      "defaultValue": undefined,
                      "defaultDisplayValue": undefined,
                      "description": undefined,
                      "dimension": undefined,
                      "excludeFromShifting": false,
                      "format": undefined,
                      "hidden": false,
                      "importAliases": undefined,
                      "label": undefined,
                      "lookupContainer": undefined,
                      "lookupQuery": undefined,
                      "lookupSchema": undefined,
                      "lookupValidator": undefined,
                      "measure": undefined,
                      "mvEnabled": false,
                      "name": "field2",
                      "PHI": undefined,
                      "propertyId": undefined,
                      "propertyURI": undefined,
                      "propertyValidators": Immutable.List [],
                      "rangeValidators": Immutable.List [],
                      "rangeURI": "xsd:int",
                      "regexValidators": Immutable.List [],
                      "textChoiceValidator": undefined,
                      "recommendedVariable": false,
                      "required": false,
                      "scale": 4000,
                      "URL": undefined,
                      "shownInDetailsView": true,
                      "shownInInsertView": true,
                      "shownInUpdateView": true,
                      "visible": true,
                      "dataType": Immutable.Record {
                        "conceptURI": undefined,
                        "display": "Integer",
                        "name": "int",
                        "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                        "alternateRangeURI": "xsd:int",
                        "shortDisplay": undefined,
                        "lookupSchema": undefined,
                        "lookupQuery": undefined,
                      },
                      "lookupQueryValue": undefined,
                      "lookupType": Immutable.Record {
                        "conceptURI": undefined,
                        "display": "Lookup",
                        "name": "lookup",
                        "rangeURI": "xsd:int",
                        "alternateRangeURI": undefined,
                        "shortDisplay": undefined,
                        "lookupSchema": undefined,
                        "lookupQuery": undefined,
                      },
                      "original": {
                        "conceptURI": undefined,
                        "dataType": Immutable.Record {
                          "conceptURI": undefined,
                          "display": "Integer",
                          "name": "int",
                          "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                          "alternateRangeURI": "xsd:int",
                          "shortDisplay": undefined,
                          "lookupSchema": undefined,
                          "lookupQuery": undefined,
                        },
                        "name": "field2",
                        "rangeURI": undefined,
                      },
                      "updatedField": false,
                      "isPrimaryKey": false,
                      "lockType": "NotLocked",
                      "wrappedColumnName": undefined,
                      "disablePhiLevel": false,
                      "lockExistingField": false,
                      "sourceOntology": undefined,
                      "conceptSubtree": undefined,
                      "conceptLabelColumn": undefined,
                      "conceptImportColumn": undefined,
                      "principalConceptCode": undefined,
                      "derivationDataScope": undefined,
                      "selected": false,
                      "scannable": false,
                    },
                    Immutable.Record {
                      "conceptURI": undefined,
                      "conditionalFormats": Immutable.List [],
                      "defaultScale": undefined,
                      "defaultValueType": undefined,
                      "defaultValue": undefined,
                      "defaultDisplayValue": undefined,
                      "description": undefined,
                      "dimension": undefined,
                      "excludeFromShifting": false,
                      "format": undefined,
                      "hidden": false,
                      "importAliases": undefined,
                      "label": undefined,
                      "lookupContainer": undefined,
                      "lookupQuery": undefined,
                      "lookupSchema": undefined,
                      "lookupValidator": undefined,
                      "measure": undefined,
                      "mvEnabled": false,
                      "name": "field3",
                      "PHI": undefined,
                      "propertyId": undefined,
                      "propertyURI": undefined,
                      "propertyValidators": Immutable.List [],
                      "rangeValidators": Immutable.List [],
                      "rangeURI": "xsd:dateTime",
                      "regexValidators": Immutable.List [],
                      "textChoiceValidator": undefined,
                      "recommendedVariable": false,
                      "required": false,
                      "scale": 4000,
                      "URL": undefined,
                      "shownInDetailsView": true,
                      "shownInInsertView": true,
                      "shownInUpdateView": true,
                      "visible": true,
                      "dataType": Immutable.Record {
                        "conceptURI": undefined,
                        "display": "Date Time",
                        "name": "dateTime",
                        "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                        "alternateRangeURI": "xsd:dateTime",
                        "shortDisplay": undefined,
                        "lookupSchema": undefined,
                        "lookupQuery": undefined,
                      },
                      "lookupQueryValue": undefined,
                      "lookupType": Immutable.Record {
                        "conceptURI": undefined,
                        "display": "Lookup",
                        "name": "lookup",
                        "rangeURI": "xsd:dateTime",
                        "alternateRangeURI": undefined,
                        "shortDisplay": undefined,
                        "lookupSchema": undefined,
                        "lookupQuery": undefined,
                      },
                      "original": {
                        "conceptURI": undefined,
                        "dataType": Immutable.Record {
                          "conceptURI": undefined,
                          "display": "Date Time",
                          "name": "dateTime",
                          "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                          "alternateRangeURI": "xsd:dateTime",
                          "shortDisplay": undefined,
                          "lookupSchema": undefined,
                          "lookupQuery": undefined,
                        },
                        "name": "field3",
                        "rangeURI": undefined,
                      },
                      "updatedField": false,
                      "isPrimaryKey": false,
                      "lockType": "NotLocked",
                      "wrappedColumnName": undefined,
                      "disablePhiLevel": false,
                      "lockExistingField": false,
                      "sourceOntology": undefined,
                      "conceptSubtree": undefined,
                      "conceptLabelColumn": undefined,
                      "conceptImportColumn": undefined,
                      "principalConceptCode": undefined,
                      "derivationDataScope": undefined,
                      "selected": false,
                      "scannable": false,
                    },
                  ],
                  "indices": Immutable.List [],
                  "domainException": undefined,
                  "mandatoryFieldNames": Immutable.List [],
                  "reservedFieldNames": Immutable.List [],
                  "newDesignFields": undefined,
                  "instructions": undefined,
                  "domainKindName": undefined,
                  "schemaName": undefined,
                  "queryName": undefined,
                },
              ],
              "editableResults": true,
              "editableRuns": true,
              "exception": undefined,
              "metadataInputFormatHelp": undefined,
              "moduleTransformScripts": undefined,
              "name": "Test Assay Protocol",
              "plateMetadata": undefined,
              "protocolId": 1,
              "protocolParameters": undefined,
              "protocolTransformScripts": undefined,
              "providerName": undefined,
              "saveScriptFiles": false,
              "selectedDetectionMethod": undefined,
              "selectedMetadataInputFormat": undefined,
              "selectedPlateTemplate": undefined,
              "status": "Active",
              "qcEnabled": undefined,
            }
          }
          onChange={[Function]}
          panelStatus="COMPLETE"
          togglePanel={[Function]}
          validate={false}
        >
          <BasePropertiesPanel
            appPropertiesOnly={true}
            asPanel={true}
            collapsed={false}
            controlledCollapse={true}
            headerId="assay-properties-hdr"
            helpTopic="defineAssaySchema"
            hideStudyProperties={true}
            isValid={true}
            model={
              Immutable.Record {
                "allowBackgroundUpload": true,
                "allowEditableResults": true,
                "allowQCStates": false,
                "allowTransformationScript": false,
                "allowPlateMetadata": false,
                "autoCopyTargetContainer": undefined,
                "autoCopyTargetContainerId": undefined,
                "autoLinkCategory": undefined,
                "availableDetectionMethods": undefined,
                "availableMetadataInputFormats": undefined,
                "availablePlateTemplates": undefined,
                "backgroundUpload": true,
                "description": "My assay protocol for you all to use.",
                "domains": Immutable.List [
                  Immutable.Record {
                    "name": "Batch Fields",
                    "container": undefined,
                    "description": undefined,
                    "domainURI": undefined,
                    "domainId": null,
                    "allowFileLinkProperties": false,
                    "allowAttachmentProperties": false,
                    "allowFlagProperties": true,
                    "allowSampleSubjectProperties": true,
                    "allowTextChoiceProperties": true,
                    "allowTimepointProperties": false,
                    "showDefaultValueSettings": false,
                    "defaultDefaultValueType": undefined,
                    "defaultValueOptions": Immutable.List [],
                    "fields": Immutable.List [],
                    "indices": Immutable.List [],
                    "domainException": undefined,
                    "mandatoryFieldNames": Immutable.List [],
                    "reservedFieldNames": Immutable.List [],
                    "newDesignFields": undefined,
                    "instructions": undefined,
                    "domainKindName": undefined,
                    "schemaName": undefined,
                    "queryName": undefined,
                  },
                  Immutable.Record {
                    "name": "Sample Fields",
                    "container": undefined,
                    "description": undefined,
                    "domainURI": undefined,
                    "domainId": null,
                    "allowFileLinkProperties": false,
                    "allowAttachmentProperties": false,
                    "allowFlagProperties": true,
                    "allowSampleSubjectProperties": true,
                    "allowTextChoiceProperties": true,
                    "allowTimepointProperties": false,
                    "showDefaultValueSettings": false,
                    "defaultDefaultValueType": undefined,
                    "defaultValueOptions": Immutable.List [],
                    "fields": Immutable.List [
                      Immutable.Record {
                        "conceptURI": undefined,
                        "conditionalFormats": Immutable.List [],
                        "defaultScale": undefined,
                        "defaultValueType": undefined,
                        "defaultValue": undefined,
                        "defaultDisplayValue": undefined,
                        "description": undefined,
                        "dimension": undefined,
                        "excludeFromShifting": false,
                        "format": undefined,
                        "hidden": false,
                        "importAliases": undefined,
                        "label": undefined,
                        "lookupContainer": undefined,
                        "lookupQuery": undefined,
                        "lookupSchema": undefined,
                        "lookupValidator": undefined,
                        "measure": undefined,
                        "mvEnabled": false,
                        "name": "field1",
                        "PHI": undefined,
                        "propertyId": undefined,
                        "propertyURI": undefined,
                        "propertyValidators": Immutable.List [],
                        "rangeValidators": Immutable.List [],
                        "rangeURI": "xsd:string",
                        "regexValidators": Immutable.List [],
                        "textChoiceValidator": undefined,
                        "recommendedVariable": false,
                        "required": false,
                        "scale": 4000,
                        "URL": undefined,
                        "shownInDetailsView": true,
                        "shownInInsertView": true,
                        "shownInUpdateView": true,
                        "visible": true,
                        "dataType": Immutable.Record {
                          "conceptURI": undefined,
                          "display": "Text",
                          "name": "string",
                          "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                          "alternateRangeURI": "xsd:string",
                          "shortDisplay": "String",
                          "lookupSchema": undefined,
                          "lookupQuery": undefined,
                        },
                        "lookupQueryValue": undefined,
                        "lookupType": Immutable.Record {
                          "conceptURI": undefined,
                          "display": "Lookup",
                          "name": "lookup",
                          "rangeURI": "xsd:string",
                          "alternateRangeURI": undefined,
                          "shortDisplay": undefined,
                          "lookupSchema": undefined,
                          "lookupQuery": undefined,
                        },
                        "original": {
                          "conceptURI": undefined,
                          "dataType": Immutable.Record {
                            "conceptURI": undefined,
                            "display": "Text",
                            "name": "string",
                            "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                            "alternateRangeURI": "xsd:string",
                            "shortDisplay": "String",
                            "lookupSchema": undefined,
                            "lookupQuery": undefined,
                          },
                          "name": "field1",
                          "rangeURI": undefined,
                        },
                        "updatedField": false,
                        "isPrimaryKey": false,
                        "lockType": "NotLocked",
                        "wrappedColumnName": undefined,
                        "disablePhiLevel": false,
                        "lockExistingField": false,
                        "sourceOntology": undefined,
                        "conceptSubtree": undefined,
                        "conceptLabelColumn": undefined,
                        "conceptImportColumn": undefined,
                        "principalConceptCode": undefined,
                        "derivationDataScope": undefined,
                        "selected": false,
                        "scannable": false,
                      },
                      Immutable.Record {
                        "conceptURI": undefined,
                        "conditionalFormats": Immutable.List [],
                        "defaultScale": undefined,
                        "defaultValueType": undefined,
                        "defaultValue": undefined,
                        "defaultDisplayValue": undefined,
                        "description": undefined,
                        "dimension": undefined,
                        "excludeFromShifting": false,
                        "format": undefined,
                        "hidden": false,
                        "importAliases": undefined,
                        "label": undefined,
                        "lookupContainer": undefined,
                        "lookupQuery": undefined,
                        "lookupSchema": undefined,
                        "lookupValidator": undefined,
                        "measure": undefined,
                        "mvEnabled": false,
                        "name": "field2",
                        "PHI": undefined,
                        "propertyId": undefined,
                        "propertyURI": undefined,
                        "propertyValidators": Immutable.List [],
                        "rangeValidators": Immutable.List [],
                        "rangeURI": "xsd:int",
                        "regexValidators": Immutable.List [],
                        "textChoiceValidator": undefined,
                        "recommendedVariable": false,
                        "required": false,
                        "scale": 4000,
                        "URL": undefined,
                        "shownInDetailsView": true,
                        "shownInInsertView": true,
                        "shownInUpdateView": true,
                        "visible": true,
                        "dataType": Immutable.Record {
                          "conceptURI": undefined,
                          "display": "Integer",
                          "name": "int",
                          "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                          "alternateRangeURI": "xsd:int",
                          "shortDisplay": undefined,
                          "lookupSchema": undefined,
                          "lookupQuery": undefined,
                        },
                        "lookupQueryValue": undefined,
                        "lookupType": Immutable.Record {
                          "conceptURI": undefined,
                          "display": "Lookup",
                          "name": "lookup",
                          "rangeURI": "xsd:int",
                          "alternateRangeURI": undefined,
                          "shortDisplay": undefined,
                          "lookupSchema": undefined,
                          "lookupQuery": undefined,
                        },
                        "original": {
                          "conceptURI": undefined,
                          "dataType": Immutable.Record {
                            "conceptURI": undefined,
                            "display": "Integer",
                            "name": "int",
                            "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                            "alternateRangeURI": "xsd:int",
                            "shortDisplay": undefined,
                            "lookupSchema": undefined,
                            "lookupQuery": undefined,
                          },
                          "name": "field2",
                          "rangeURI": undefined,
                        },
                        "updatedField": false,
                        "isPrimaryKey": false,
                        "lockType": "NotLocked",
                        "wrappedColumnName": undefined,
                        "disablePhiLevel": false,
                        "lockExistingField": false,
                        "sourceOntology": undefined,
                        "conceptSubtree": undefined,
                        "conceptLabelColumn": undefined,
                        "conceptImportColumn": undefined,
                        "principalConceptCode": undefined,
                        "derivationDataScope": undefined,
                        "selected": false,
                        "scannable": false,
                      },
                      Immutable.Record {
                        "conceptURI": undefined,
                        "conditionalFormats": Immutable.List [],
                        "defaultScale": undefined,
                        "defaultValueType": undefined,
                        "defaultValue": undefined,
                        "defaultDisplayValue": undefined,
                        "description": undefined,
                        "dimension": undefined,
                        "excludeFromShifting": false,
                        "format": undefined,
                        "hidden": false,
                        "importAliases": undefined,
                        "label": undefined,
                        "lookupContainer": undefined,
                        "lookupQuery": undefined,
                        "lookupSchema": undefined,
                        "lookupValidator": undefined,
                        "measure": undefined,
                        "mvEnabled": false,
                        "name": "field3",
                        "PHI": undefined,
                        "propertyId": undefined,
                        "propertyURI": undefined,
                        "propertyValidators": Immutable.List [],
                        "rangeValidators": Immutable.List [],
                        "rangeURI": "xsd:dateTime",
                        "regexValidators": Immutable.List [],
                        "textChoiceValidator": undefined,
                        "recommendedVariable": false,
                        "required": false,
                        "scale": 4000,
                        "URL": undefined,
                        "shownInDetailsView": true,
                        "shownInInsertView": true,
                        "shownInUpdateView": true,
                        "visible": true,
                        "dataType": Immutable.Record {
                          "conceptURI": undefined,
                          "display": "Date Time",
                          "name": "dateTime",
                          "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                          "alternateRangeURI": "xsd:dateTime",
                          "shortDisplay": undefined,
                          "lookupSchema": undefined,
                          "lookupQuery": undefined,
                        },
                        "lookupQueryValue": undefined,
                        "lookupType": Immutable.Record {
                          "conceptURI": undefined,
                          "display": "Lookup",
                          "name": "lookup",
                          "rangeURI": "xsd:dateTime",
                          "alternateRangeURI": undefined,
                          "shortDisplay": undefined,
                          "lookupSchema": undefined,
                          "lookupQuery": undefined,
                        },
                        "original": {
                          "conceptURI": undefined,
                          "dataType": Immutable.Record {
                            "conceptURI": undefined,
                            "display": "Date Time",
                            "name": "dateTime",
                            "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                            "alternateRangeURI": "xsd:dateTime",
                            "shortDisplay": undefined,
                            "lookupSchema": undefined,
                            "lookupQuery": undefined,
                          },
                          "name": "field3",
                          "rangeURI": undefined,
                        },
                        "updatedField": false,
                        "isPrimaryKey": false,
                        "lockType": "NotLocked",
                        "wrappedColumnName": undefined,
                        "disablePhiLevel": false,
                        "lockExistingField": false,
                        "sourceOntology": undefined,
                        "conceptSubtree": undefined,
                        "conceptLabelColumn": undefined,
                        "conceptImportColumn": undefined,
                        "principalConceptCode": undefined,
                        "derivationDataScope": undefined,
                        "selected": false,
                        "scannable": false,
                      },
                    ],
                    "indices": Immutable.List [],
                    "domainException": undefined,
                    "mandatoryFieldNames": Immutable.List [],
                    "reservedFieldNames": Immutable.List [],
                    "newDesignFields": undefined,
                    "instructions": undefined,
                    "domainKindName": undefined,
                    "schemaName": undefined,
                    "queryName": undefined,
                  },
                ],
                "editableResults": true,
                "editableRuns": true,
                "exception": undefined,
                "metadataInputFormatHelp": undefined,
                "moduleTransformScripts": undefined,
                "name": "Test Assay Protocol",
                "plateMetadata": undefined,
                "protocolId": 1,
                "protocolParameters": undefined,
                "protocolTransformScripts": undefined,
                "providerName": undefined,
                "saveScriptFiles": false,
                "selectedDetectionMethod": undefined,
                "selectedMetadataInputFormat": undefined,
                "selectedPlateTemplate": undefined,
                "status": "Active",
                "qcEnabled": undefined,
              }
            }
            onChange={[Function]}
            panelStatus="COMPLETE"
            title="Assay Properties"
            togglePanel={[Function]}
            updateValidStatus={[Function]}
            useTheme={false}
            validate={false}
          >
            <ForwardRef
              className="domain-form-panel domain-panel-no-theme"
              expanded={true}
              onToggle={[Function]}
            >
              <Uncontrolled(Panel)
                className="domain-form-panel domain-panel-no-theme"
                expanded={true}
                innerRef={null}
                onToggle={[Function]}
              >
                <Panel
                  bsClass="panel"
                  bsStyle="default"
                  className="domain-form-panel domain-panel-no-theme"
                  expanded={true}
                  onToggle={[Function]}
                >
                  <div
                    className="domain-form-panel domain-panel-no-theme panel panel-default"
                  >
                    <CollapsiblePanelHeader
                      collapsed={false}
                      controlledCollapse={true}
                      iconHelpMsg="Contains errors or is missing required values."
                      id="assay-properties-hdr"
                      isValid={true}
                      panelStatus="COMPLETE"
                      title="Assay Properties"
                      togglePanel={[Function]}
                      useTheme={false}
                    >
                      <PanelHeading
                        bsClass="panel"
                        className="domain-panel-header domain-heading-collapsible domain-panel-header-expanded domain-panel-header-no-theme"
                        componentClass="div"
                        id="assay-properties-hdr"
                        onClick={[Function]}
                      >
                        <div
                          className="domain-panel-header domain-heading-collapsible domain-panel-header-expanded domain-panel-header-no-theme panel-heading"
                          id="assay-properties-hdr"
                          onClick={[Function]}
                        >
                          <span
                            className="domain-panel-status-icon"
                          >
                            <span
                              className="fa fa-check-circle"
                            />
                          </span>
                          <span
                            className="domain-panel-title"
                          >
                            Assay Properties
                          </span>
                          <span
                            className="pull-right"
                          >
                            <span
                              className="fa fa-lg fa-minus-square domain-form-collapse-btn"
                            />
                          </span>
                        </div>
                      </PanelHeading>
                    </CollapsiblePanelHeader>
                    <PanelBody
                      bsClass="panel"
                      collapsible={true}
                    >
                      <PanelCollapse
                        bsClass="panel"
                      >
                        <Collapse
                          appear={false}
                          dimension="height"
                          getDimensionValue={[Function]}
                          in={true}
                          mountOnEnter={false}
                          timeout={300}
                          unmountOnExit={false}
                        >
                          <Transition
                            appear={false}
                            aria-expanded={null}
                            enter={true}
                            exit={true}
                            in={true}
                            mountOnEnter={false}
                            onEnter={[Function]}
                            onEntered={[Function]}
                            onEntering={[Function]}
                            onExit={[Function]}
                            onExited={[Function]}
                            onExiting={[Function]}
                            timeout={300}
                            unmountOnExit={false}
                          >
                            <div
                              aria-expanded={null}
                              className="panel-collapse collapse in"
                            >
                              <div
                                className="panel-body"
                              >
                                <HelpTopicURL
                                  helpTopic="defineAssaySchema"
                                  nounPlural="assays"
                                >
                                  <Row
                                    bsClass="row"
                                    componentClass="div"
                                  >
                                    <div
                                      className="row"
                                    >
                                      <Col
                                        bsClass="col"
                                        componentClass="div"
                                        xs={12}
                                      >
                                        <div
                                          className="col-xs-12"
                                        >
                                          <HelpLink
                                            className="domain-field-float-right"
                                            topic="defineAssaySchema"
                                          >
                                            <a
                                              className="domain-field-float-right"
                                              href="https://www.labkey.org/Documentation/wiki-page.view?referrer=inPage&name=defineAssaySchema"
                                              rel="noopener noreferrer"
                                              target="_blank"
                                            >
                                              Learn more about designing assays
                                            </a>
                                          </HelpLink>
                                        </div>
                                      </Col>
                                    </div>
                                  </Row>
                                </HelpTopicURL>
                                <AssayPropertiesForm
                                  appPropertiesOnly={true}
                                  hideStudyProperties={true}
                                  model={
                                    Immutable.Record {
                                      "allowBackgroundUpload": true,
                                      "allowEditableResults": true,
                                      "allowQCStates": false,
                                      "allowTransformationScript": false,
                                      "allowPlateMetadata": false,
                                      "autoCopyTargetContainer": undefined,
                                      "autoCopyTargetContainerId": undefined,
                                      "autoLinkCategory": undefined,
                                      "availableDetectionMethods": undefined,
                                      "availableMetadataInputFormats": undefined,
                                      "availablePlateTemplates": undefined,
                                      "backgroundUpload": true,
                                      "description": "My assay protocol for you all to use.",
                                      "domains": Immutable.List [
                                        Immutable.Record {
                                          "name": "Batch Fields",
                                          "container": undefined,
                                          "description": undefined,
                                          "domainURI": undefined,
                                          "domainId": null,
                                          "allowFileLinkProperties": false,
                                          "allowAttachmentProperties": false,
                                          "allowFlagProperties": true,
                                          "allowSampleSubjectProperties": true,
                                          "allowTextChoiceProperties": true,
                                          "allowTimepointProperties": false,
                                          "showDefaultValueSettings": false,
                                          "defaultDefaultValueType": undefined,
                                          "defaultValueOptions": Immutable.List [],
                                          "fields": Immutable.List [],
                                          "indices": Immutable.List [],
                                          "domainException": undefined,
                                          "mandatoryFieldNames": Immutable.List [],
                                          "reservedFieldNames": Immutable.List [],
                                          "newDesignFields": undefined,
                                          "instructions": undefined,
                                          "domainKindName": undefined,
                                          "schemaName": undefined,
                                          "queryName": undefined,
                                        },
                                        Immutable.Record {
                                          "name": "Sample Fields",
                                          "container": undefined,
                                          "description": undefined,
                                          "domainURI": undefined,
                                          "domainId": null,
                                          "allowFileLinkProperties": false,
                                          "allowAttachmentProperties": false,
                                          "allowFlagProperties": true,
                                          "allowSampleSubjectProperties": true,
                                          "allowTextChoiceProperties": true,
                                          "allowTimepointProperties": false,
                                          "showDefaultValueSettings": false,
                                          "defaultDefaultValueType": undefined,
                                          "defaultValueOptions": Immutable.List [],
                                          "fields": Immutable.List [
                                            Immutable.Record {
                                              "conceptURI": undefined,
                                              "conditionalFormats": Immutable.List [],
                                              "defaultScale": undefined,
                                              "defaultValueType": undefined,
                                              "defaultValue": undefined,
                                              "defaultDisplayValue": undefined,
                                              "description": undefined,
                                              "dimension": undefined,
                                              "excludeFromShifting": false,
                                              "format": undefined,
                                              "hidden": false,
                                              "importAliases": undefined,
                                              "label": undefined,
                                              "lookupContainer": undefined,
                                              "lookupQuery": undefined,
                                              "lookupSchema": undefined,
                                              "lookupValidator": undefined,
                                              "measure": undefined,
                                              "mvEnabled": false,
                                              "name": "field1",
                                              "PHI": undefined,
                                              "propertyId": undefined,
                                              "propertyURI": undefined,
                                              "propertyValidators": Immutable.List [],
                                              "rangeValidators": Immutable.List [],
                                              "rangeURI": "xsd:string",
                                              "regexValidators": Immutable.List [],
                                              "textChoiceValidator": undefined,
                                              "recommendedVariable": false,
                                              "required": false,
                                              "scale": 4000,
                                              "URL": undefined,
                                              "shownInDetailsView": true,
                                              "shownInInsertView": true,
                                              "shownInUpdateView": true,
                                              "visible": true,
                                              "dataType": Immutable.Record {
                                                "conceptURI": undefined,
                                                "display": "Text",
                                                "name": "string",
                                                "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                "alternateRangeURI": "xsd:string",
                                                "shortDisplay": "String",
                                                "lookupSchema": undefined,
                                                "lookupQuery": undefined,
                                              },
                                              "lookupQueryValue": undefined,
                                              "lookupType": Immutable.Record {
                                                "conceptURI": undefined,
                                                "display": "Lookup",
                                                "name": "lookup",
                                                "rangeURI": "xsd:string",
                                                "alternateRangeURI": undefined,
                                                "shortDisplay": undefined,
                                                "lookupSchema": undefined,
                                                "lookupQuery": undefined,
                                              },
                                              "original": {
                                                "conceptURI": undefined,
                                                "dataType": Immutable.Record {
                                                  "conceptURI": undefined,
                                                  "display": "Text",
                                                  "name": "string",
                                                  "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                  "alternateRangeURI": "xsd:string",
                                                  "shortDisplay": "String",
                                                  "lookupSchema": undefined,
                                                  "lookupQuery": undefined,
                                                },
                                                "name": "field1",
                                                "rangeURI": undefined,
                                              },
                                              "updatedField": false,
                                              "isPrimaryKey": false,
                                              "lockType": "NotLocked",
                                              "wrappedColumnName": undefined,
                                              "disablePhiLevel": false,
                                              "lockExistingField": false,
                                              "sourceOntology": undefined,
                                              "conceptSubtree": undefined,
                                              "conceptLabelColumn": undefined,
                                              "conceptImportColumn": undefined,
                                              "principalConceptCode": undefined,
                                              "derivationDataScope": undefined,
                                              "selected": false,
                                              "scannable": false,
                                            },
                                            Immutable.Record {
                                              "conceptURI": undefined,
                                              "conditionalFormats": Immutable.List [],
                                              "defaultScale": undefined,
                                              "defaultValueType": undefined,
                                              "defaultValue": undefined,
                                              "defaultDisplayValue": undefined,
                                              "description": undefined,
                                              "dimension": undefined,
                                              "excludeFromShifting": false,
                                              "format": undefined,
                                              "hidden": false,
                                              "importAliases": undefined,
                                              "label": undefined,
                                              "lookupContainer": undefined,
                                              "lookupQuery": undefined,
                                              "lookupSchema": undefined,
                                              "lookupValidator": undefined,
                                              "measure": undefined,
                                              "mvEnabled": false,
                                              "name": "field2",
                                              "PHI": undefined,
                                              "propertyId": undefined,
                                              "propertyURI": undefined,
                                              "propertyValidators": Immutable.List [],
                                              "rangeValidators": Immutable.List [],
                                              "rangeURI": "xsd:int",
                                              "regexValidators": Immutable.List [],
                                              "textChoiceValidator": undefined,
                                              "recommendedVariable": false,
                                              "required": false,
                                              "scale": 4000,
                                              "URL": undefined,
                                              "shownInDetailsView": true,
                                              "shownInInsertView": true,
                                              "shownInUpdateView": true,
                                              "visible": true,
                                              "dataType": Immutable.Record {
                                                "conceptURI": undefined,
                                                "display": "Integer",
                                                "name": "int",
                                                "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                                "alternateRangeURI": "xsd:int",
                                                "shortDisplay": undefined,
                                                "lookupSchema": undefined,
                                                "lookupQuery": undefined,
                                              },
                                              "lookupQueryValue": undefined,
                                              "lookupType": Immutable.Record {
                                                "conceptURI": undefined,
                                                "display": "Lookup",
                                                "name": "lookup",
                                                "rangeURI": "xsd:int",
                                                "alternateRangeURI": undefined,
                                                "shortDisplay": undefined,
                                                "lookupSchema": undefined,
                                                "lookupQuery": undefined,
                                              },
                                              "original": {
                                                "conceptURI": undefined,
                                                "dataType": Immutable.Record {
                                                  "conceptURI": undefined,
                                                  "display": "Integer",
                                                  "name": "int",
                                                  "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                                  "alternateRangeURI": "xsd:int",
                                                  "shortDisplay": undefined,
                                                  "lookupSchema": undefined,
                                                  "lookupQuery": undefined,
                                                },
                                                "name": "field2",
                                                "rangeURI": undefined,
                                              },
                                              "updatedField": false,
                                              "isPrimaryKey": false,
                                              "lockType": "NotLocked",
                                              "wrappedColumnName": undefined,
                                              "disablePhiLevel": false,
                                              "lockExistingField": false,
                                              "sourceOntology": undefined,
                                              "conceptSubtree": undefined,
                                              "conceptLabelColumn": undefined,
                                              "conceptImportColumn": undefined,
                                              "principalConceptCode": undefined,
                                              "derivationDataScope": undefined,
                                              "selected": false,
                                              "scannable": false,
                                            },
                                            Immutable.Record {
                                              "conceptURI": undefined,
                                              "conditionalFormats": Immutable.List [],
                                              "defaultScale": undefined,
                                              "defaultValueType": undefined,
                                              "defaultValue": undefined,
                                              "defaultDisplayValue": undefined,
                                              "description": undefined,
                                              "dimension": undefined,
                                              "excludeFromShifting": false,
                                              "format": undefined,
                                              "hidden": false,
                                              "importAliases": undefined,
                                              "label": undefined,
                                              "lookupContainer": undefined,
                                              "lookupQuery": undefined,
                                              "lookupSchema": undefined,
                                              "lookupValidator": undefined,
                                              "measure": undefined,
                                              "mvEnabled": false,
                                              "name": "field3",
                                              "PHI": undefined,
                                              "propertyId": undefined,
                                              "propertyURI": undefined,
                                              "propertyValidators": Immutable.List [],
                                              "rangeValidators": Immutable.List [],
                                              "rangeURI": "xsd:dateTime",
                                              "regexValidators": Immutable.List [],
                                              "textChoiceValidator": undefined,
                                              "recommendedVariable": false,
                                              "required": false,
                                              "scale": 4000,
                                              "URL": undefined,
                                              "shownInDetailsView": true,
                                              "shownInInsertView": true,
                                              "shownInUpdateView": true,
                                              "visible": true,
                                              "dataType": Immutable.Record {
                                                "conceptURI": undefined,
                                                "display": "Date Time",
                                                "name": "dateTime",
                                                "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                                                "alternateRangeURI": "xsd:dateTime",
                                                "shortDisplay": undefined,
                                                "lookupSchema": undefined,
                                                "lookupQuery": undefined,
                                              },
                                              "lookupQueryValue": undefined,
                                              "lookupType": Immutable.Record {
                                                "conceptURI": undefined,
                                                "display": "Lookup",
                                                "name": "lookup",
                                                "rangeURI": "xsd:dateTime",
                                                "alternateRangeURI": undefined,
                                                "shortDisplay": undefined,
                                                "lookupSchema": undefined,
                                                "lookupQuery": undefined,
                                              },
                                              "original": {
                                                "conceptURI": undefined,
                                                "dataType": Immutable.Record {
                                                  "conceptURI": undefined,
                                                  "display": "Date Time",
                                                  "name": "dateTime",
                                                  "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                                                  "alternateRangeURI": "xsd:dateTime",
                                                  "shortDisplay": undefined,
                                                  "lookupSchema": undefined,
                                                  "lookupQuery": undefined,
                                                },
                                                "name": "field3",
                                                "rangeURI": undefined,
                                              },
                                              "updatedField": false,
                                              "isPrimaryKey": false,
                                              "lockType": "NotLocked",
                                              "wrappedColumnName": undefined,
                                              "disablePhiLevel": false,
                                              "lockExistingField": false,
                                              "sourceOntology": undefined,
                                              "conceptSubtree": undefined,
                                              "conceptLabelColumn": undefined,
                                              "conceptImportColumn": undefined,
                                              "principalConceptCode": undefined,
                                              "derivationDataScope": undefined,
                                              "selected": false,
                                              "scannable": false,
                                            },
                                          ],
                                          "indices": Immutable.List [],
                                          "domainException": undefined,
                                          "mandatoryFieldNames": Immutable.List [],
                                          "reservedFieldNames": Immutable.List [],
                                          "newDesignFields": undefined,
                                          "instructions": undefined,
                                          "domainKindName": undefined,
                                          "schemaName": undefined,
                                          "queryName": undefined,
                                        },
                                      ],
                                      "editableResults": true,
                                      "editableRuns": true,
                                      "exception": undefined,
                                      "metadataInputFormatHelp": undefined,
                                      "moduleTransformScripts": undefined,
                                      "name": "Test Assay Protocol",
                                      "plateMetadata": undefined,
                                      "protocolId": 1,
                                      "protocolParameters": undefined,
                                      "protocolTransformScripts": undefined,
                                      "providerName": undefined,
                                      "saveScriptFiles": false,
                                      "selectedDetectionMethod": undefined,
                                      "selectedMetadataInputFormat": undefined,
                                      "selectedPlateTemplate": undefined,
                                      "status": "Active",
                                      "qcEnabled": undefined,
                                    }
                                  }
                                  onChange={[Function]}
                                >
                                  <Form
                                    bsClass="form"
                                    componentClass="form"
                                    horizontal={false}
                                    inline={false}
                                  >
                                    <form
                                      className=""
                                    >
                                      <Col
                                        bsClass="col"
                                        componentClass="div"
                                        lg={12}
                                        xs={12}
                                      >
                                        <div
                                          className="col-lg-12 col-xs-12"
                                        >
                                          <div
                                            className="domain-field-padding-bottom"
                                          >
                                            <SectionHeading
                                              title="Basic Properties"
                                            >
                                              <div
                                                className="domain-field-section-heading"
                                              >
                                                Basic Properties
                                              </div>
                                            </SectionHeading>
                                            <NameInput
                                              appPropertiesOnly={true}
                                              model={
                                                Immutable.Record {
                                                  "allowBackgroundUpload": true,
                                                  "allowEditableResults": true,
                                                  "allowQCStates": false,
                                                  "allowTransformationScript": false,
                                                  "allowPlateMetadata": false,
                                                  "autoCopyTargetContainer": undefined,
                                                  "autoCopyTargetContainerId": undefined,
                                                  "autoLinkCategory": undefined,
                                                  "availableDetectionMethods": undefined,
                                                  "availableMetadataInputFormats": undefined,
                                                  "availablePlateTemplates": undefined,
                                                  "backgroundUpload": true,
                                                  "description": "My assay protocol for you all to use.",
                                                  "domains": Immutable.List [
                                                    Immutable.Record {
                                                      "name": "Batch Fields",
                                                      "container": undefined,
                                                      "description": undefined,
                                                      "domainURI": undefined,
                                                      "domainId": null,
                                                      "allowFileLinkProperties": false,
                                                      "allowAttachmentProperties": false,
                                                      "allowFlagProperties": true,
                                                      "allowSampleSubjectProperties": true,
                                                      "allowTextChoiceProperties": true,
                                                      "allowTimepointProperties": false,
                                                      "showDefaultValueSettings": false,
                                                      "defaultDefaultValueType": undefined,
                                                      "defaultValueOptions": Immutable.List [],
                                                      "fields": Immutable.List [],
                                                      "indices": Immutable.List [],
                                                      "domainException": undefined,
                                                      "mandatoryFieldNames": Immutable.List [],
                                                      "reservedFieldNames": Immutable.List [],
                                                      "newDesignFields": undefined,
                                                      "instructions": undefined,
                                                      "domainKindName": undefined,
                                                      "schemaName": undefined,
                                                      "queryName": undefined,
                                                    },
                                                    Immutable.Record {
                                                      "name": "Sample Fields",
                                                      "container": undefined,
                                                      "description": undefined,
                                                      "domainURI": undefined,
                                                      "domainId": null,
                                                      "allowFileLinkProperties": false,
                                                      "allowAttachmentProperties": false,
                                                      "allowFlagProperties": true,
                                                      "allowSampleSubjectProperties": true,
                                                      "allowTextChoiceProperties": true,
                                                      "allowTimepointProperties": false,
                                                      "showDefaultValueSettings": false,
                                                      "defaultDefaultValueType": undefined,
                                                      "defaultValueOptions": Immutable.List [],
                                                      "fields": Immutable.List [
                                                        Immutable.Record {
                                                          "conceptURI": undefined,
                                                          "conditionalFormats": Immutable.List [],
                                                          "defaultScale": undefined,
                                                          "defaultValueType": undefined,
                                                          "defaultValue": undefined,
                                                          "defaultDisplayValue": undefined,
                                                          "description": undefined,
                                                          "dimension": undefined,
                                                          "excludeFromShifting": false,
                                                          "format": undefined,
                                                          "hidden": false,
                                                          "importAliases": undefined,
                                                          "label": undefined,
                                                          "lookupContainer": undefined,
                                                          "lookupQuery": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupValidator": undefined,
                                                          "measure": undefined,
                                                          "mvEnabled": false,
                                                          "name": "field1",
                                                          "PHI": undefined,
                                                          "propertyId": undefined,
                                                          "propertyURI": undefined,
                                                          "propertyValidators": Immutable.List [],
                                                          "rangeValidators": Immutable.List [],
                                                          "rangeURI": "xsd:string",
                                                          "regexValidators": Immutable.List [],
                                                          "textChoiceValidator": undefined,
                                                          "recommendedVariable": false,
                                                          "required": false,
                                                          "scale": 4000,
                                                          "URL": undefined,
                                                          "shownInDetailsView": true,
                                                          "shownInInsertView": true,
                                                          "shownInUpdateView": true,
                                                          "visible": true,
                                                          "dataType": Immutable.Record {
                                                            "conceptURI": undefined,
                                                            "display": "Text",
                                                            "name": "string",
                                                            "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                            "alternateRangeURI": "xsd:string",
                                                            "shortDisplay": "String",
                                                            "lookupSchema": undefined,
                                                            "lookupQuery": undefined,
                                                          },
                                                          "lookupQueryValue": undefined,
                                                          "lookupType": Immutable.Record {
                                                            "conceptURI": undefined,
                                                            "display": "Lookup",
                                                            "name": "lookup",
                                                            "rangeURI": "xsd:string",
                                                            "alternateRangeURI": undefined,
                                                            "shortDisplay": undefined,
                                                            "lookupSchema": undefined,
                                                            "lookupQuery": undefined,
                                                          },
                                                          "original": {
                                                            "conceptURI": undefined,
                                                            "dataType": Immutable.Record {
                                                              "conceptURI": undefined,
                                                              "display": "Text",
                                                              "name": "string",
                                                              "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                              "alternateRangeURI": "xsd:string",
                                                              "shortDisplay": "String",
                                                              "lookupSchema": undefined,
                                                              "lookupQuery": undefined,
                                                            },
                                                            "name": "field1",
                                                            "rangeURI": undefined,
                                                          },
                                                          "updatedField": false,
                                                          "isPrimaryKey": false,
                                                          "lockType": "NotLocked",
                                                          "wrappedColumnName": undefined,
                                                          "disablePhiLevel": false,
                                                          "lockExistingField": false,
                                                          "sourceOntology": undefined,
                                                          "conceptSubtree": undefined,
                                                          "conceptLabelColumn": undefined,
                                                          "conceptImportColumn": undefined,
                                                          "principalConceptCode": undefined,
                                                          "derivationDataScope": undefined,
                                                          "selected": false,
                                                          "scannable": false,
                                                        },
                                                        Immutable.Record {
                                                          "conceptURI": undefined,
                                                          "conditionalFormats": Immutable.List [],
                                                          "defaultScale": undefined,
                                                          "defaultValueType": undefined,
                                                          "defaultValue": undefined,
                                                          "defaultDisplayValue": undefined,
                                                          "description": undefined,
                                                          "dimension": undefined,
                                                          "excludeFromShifting": false,
                                                          "format": undefined,
                                                          "hidden": false,
                                                          "importAliases": undefined,
                                                          "label": undefined,
                                                          "lookupContainer": undefined,
                                                          "lookupQuery": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupValidator": undefined,
                                                          "measure": undefined,
                                                          "mvEnabled": false,
                                                          "name": "field2",
                                                          "PHI": undefined,
                                                          "propertyId": undefined,
                                                          "propertyURI": undefined,
                                                          "propertyValidators": Immutable.List [],
                                                          "rangeValidators": Immutable.List [],
                                                          "rangeURI": "xsd:int",
                                                          "regexValidators": Immutable.List [],
                                                          "textChoiceValidator": undefined,
                                                          "recommendedVariable": false,
                                                          "required": false,
                                                          "scale": 4000,
                                                          "URL": undefined,
                                                          "shownInDetailsView": true,
                                                          "shownInInsertView": true,
                                                          "shownInUpdateView": true,
                                                          "visible": true,
                                                          "dataType": Immutable.Record {
                                                            "conceptURI": undefined,
                                                            "display": "Integer",
                                                            "name": "int",
                                                            "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                                            "alternateRangeURI": "xsd:int",
                                                            "shortDisplay": undefined,
                                                            "lookupSchema": undefined,
                                                            "lookupQuery": undefined,
                                                          },
                                                          "lookupQueryValue": undefined,
                                                          "lookupType": Immutable.Record {
                                                            "conceptURI": undefined,
                                                            "display": "Lookup",
                                                            "name": "lookup",
                                                            "rangeURI": "xsd:int",
                                                            "alternateRangeURI": undefined,
                                                            "shortDisplay": undefined,
                                                            "lookupSchema": undefined,
                                                            "lookupQuery": undefined,
                                                          },
                                                          "original": {
                                                            "conceptURI": undefined,
                                                            "dataType": Immutable.Record {
                                                              "conceptURI": undefined,
                                                              "display": "Integer",
                                                              "name": "int",
                                                              "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                                              "alternateRangeURI": "xsd:int",
                                                              "shortDisplay": undefined,
                                                              "lookupSchema": undefined,
                                                              "lookupQuery": undefined,
                                                            },
                                                            "name": "field2",
                                                            "rangeURI": undefined,
                                                          },
                                                          "updatedField": false,
                                                          "isPrimaryKey": false,
                                                          "lockType": "NotLocked",
                                                          "wrappedColumnName": undefined,
                                                          "disablePhiLevel": false,
                                                          "lockExistingField": false,
                                                          "sourceOntology": undefined,
                                                          "conceptSubtree": undefined,
                                                          "conceptLabelColumn": undefined,
                                                          "conceptImportColumn": undefined,
                                                          "principalConceptCode": undefined,
                                                          "derivationDataScope": undefined,
                                                          "selected": false,
                                                          "scannable": false,
                                                        },
                                                        Immutable.Record {
                                                          "conceptURI": undefined,
                                                          "conditionalFormats": Immutable.List [],
                                                          "defaultScale": undefined,
                                                          "defaultValueType": undefined,
                                                          "defaultValue": undefined,
                                                          "defaultDisplayValue": undefined,
                                                          "description": undefined,
                                                          "dimension": undefined,
                                                          "excludeFromShifting": false,
                                                          "format": undefined,
                                                          "hidden": false,
                                                          "importAliases": undefined,
                                                          "label": undefined,
                                                          "lookupContainer": undefined,
                                                          "lookupQuery": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupValidator": undefined,
                                                          "measure": undefined,
                                                          "mvEnabled": false,
                                                          "name": "field3",
                                                          "PHI": undefined,
                                                          "propertyId": undefined,
                                                          "propertyURI": undefined,
                                                          "propertyValidators": Immutable.List [],
                                                          "rangeValidators": Immutable.List [],
                                                          "rangeURI": "xsd:dateTime",
                                                          "regexValidators": Immutable.List [],
                                                          "textChoiceValidator": undefined,
                                                          "recommendedVariable": false,
                                                          "required": false,
                                                          "scale": 4000,
                                                          "URL": undefined,
                                                          "shownInDetailsView": true,
                                                          "shownInInsertView": true,
                                                          "shownInUpdateView": true,
                                                          "visible": true,
                                                          "dataType": Immutable.Record {
                                                            "conceptURI": undefined,
                                                            "display": "Date Time",
                                                            "name": "dateTime",
                                                            "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                                                            "alternateRangeURI": "xsd:dateTime",
                                                            "shortDisplay": undefined,
                                                            "lookupSchema": undefined,
                                                            "lookupQuery": undefined,
                                                          },
                                                          "lookupQueryValue": undefined,
                                                          "lookupType": Immutable.Record {
                                                            "conceptURI": undefined,
                                                            "display": "Lookup",
                                                            "name": "lookup",
                                                            "rangeURI": "xsd:dateTime",
                                                            "alternateRangeURI": undefined,
                                                            "shortDisplay": undefined,
                                                            "lookupSchema": undefined,
                                                            "lookupQuery": undefined,
                                                          },
                                                          "original": {
                                                            "conceptURI": undefined,
                                                            "dataType": Immutable.Record {
                                                              "conceptURI": undefined,
                                                              "display": "Date Time",
                                                              "name": "dateTime",
                                                              "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                                                              "alternateRangeURI": "xsd:dateTime",
                                                              "shortDisplay": undefined,
                                                              "lookupSchema": undefined,
                                                              "lookupQuery": undefined,
                                                            },
                                                            "name": "field3",
                                                            "rangeURI": undefined,
                                                          },
                                                          "updatedField": false,
                                                          "isPrimaryKey": false,
                                                          "lockType": "NotLocked",
                                                          "wrappedColumnName": undefined,
                                                          "disablePhiLevel": false,
                                                          "lockExistingField": false,
                                                          "sourceOntology": undefined,
                                                          "conceptSubtree": undefined,
                                                          "conceptLabelColumn": undefined,
                                                          "conceptImportColumn": undefined,
                                                          "principalConceptCode": undefined,
                                                          "derivationDataScope": undefined,
                                                          "selected": false,
                                                          "scannable": false,
                                                        },
                                                      ],
                                                      "indices": Immutable.List [],
                                                      "domainException": undefined,
                                                      "mandatoryFieldNames": Immutable.List [],
                                                      "reservedFieldNames": Immutable.List [],
                                                      "newDesignFields": undefined,
                                                      "instructions": undefined,
                                                      "domainKindName": undefined,
                                                      "schemaName": undefined,
                                                      "queryName": undefined,
                                                    },
                                                  ],
                                                  "editableResults": true,
                                                  "editableRuns": true,
                                                  "exception": undefined,
                                                  "metadataInputFormatHelp": undefined,
                                                  "moduleTransformScripts": undefined,
                                                  "name": "Test Assay Protocol",
                                                  "plateMetadata": undefined,
                                                  "protocolId": 1,
                                                  "protocolParameters": undefined,
                                                  "protocolTransformScripts": undefined,
                                                  "providerName": undefined,
                                                  "saveScriptFiles": false,
                                                  "selectedDetectionMethod": undefined,
                                                  "selectedMetadataInputFormat": undefined,
                                                  "selectedPlateTemplate": undefined,
                                                  "status": "Active",
                                                  "qcEnabled": undefined,
                                                }
                                              }
                                              onChange={[Function]}
                                            >
                                              <Component
                                                appPropertiesOnly={true}
                                                colSize={9}
                                                helpTipBody={
                                                  <p>
                                                    The name for this assay design. Note that this can't be changed after the assay design is created.
                                                  </p>
                                                }
                                                label="Name"
                                                required={true}
                                              >
                                                <Row
                                                  bsClass="row"
                                                  className="margin-top"
                                                  componentClass="div"
                                                >
                                                  <div
                                                    className="margin-top row"
                                                  >
                                                    <Col
                                                      bsClass="col"
                                                      componentClass="div"
                                                      lg={2}
                                                      xs={3}
                                                    >
                                                      <div
                                                        className="col-lg-2 col-xs-3"
                                                      >
                                                        <DomainFieldLabel
                                                          helpTipBody={
                                                            <p>
                                                              The name for this assay design. Note that this can't be changed after the assay design is created.
                                                            </p>
                                                          }
                                                          label="Name"
                                                          required={true}
                                                        >
                                                          <span
                                                            className="domain-no-wrap"
                                                          >
                                                            Name
                                                            <Component
                                                              id="tooltip"
                                                              required={true}
                                                              title="Name"
                                                            >
                                                              <span
                                                                className="label-help-target"
                                                                onMouseOut={[Function]}
                                                                onMouseOver={[Function]}
                                                              >
                                                                <span
                                                                  className="label-help-icon fa fa-question-circle"
                                                                />
                                                                <Overlay
                                                                  animation={[Function]}
                                                                  placement="right"
                                                                  rootClose={false}
                                                                  show={false}
                                                                >
                                                                  <Overlay
                                                                    placement="right"
                                                                    rootClose={false}
                                                                    show={false}
                                                                    transition={[Function]}
                                                                  />
                                                                </Overlay>
                                                              </span>
                                                            </Component>
                                                             *
                                                          </span>
                                                        </DomainFieldLabel>
                                                      </div>
                                                    </Col>
                                                    <Col
                                                      bsClass="col"
                                                      componentClass="div"
                                                      lg={10}
                                                      xs={9}
                                                    >
                                                      <div
                                                        className="col-lg-10 col-xs-9"
                                                      >
                                                        <FormControl
                                                          bsClass="form-control"
                                                          componentClass="input"
                                                          disabled={true}
                                                          id="assay-design-name"
                                                          onChange={[Function]}
                                                          placeholder="Enter a name for this assay"
                                                          type="text"
                                                          value="Test Assay Protocol"
                                                        >
                                                          <input
                                                            className="form-control"
                                                            disabled={true}
                                                            id="assay-design-name"
                                                            onChange={[Function]}
                                                            placeholder="Enter a name for this assay"
                                                            type="text"
                                                            value="Test Assay Protocol"
                                                          />
                                                        </FormControl>
                                                      </div>
                                                    </Col>
                                                  </div>
                                                </Row>
                                              </Component>
                                            </NameInput>
                                            <DescriptionInput
                                              appPropertiesOnly={true}
                                              model={
                                                Immutable.Record {
                                                  "allowBackgroundUpload": true,
                                                  "allowEditableResults": true,
                                                  "allowQCStates": false,
                                                  "allowTransformationScript": false,
                                                  "allowPlateMetadata": false,
                                                  "autoCopyTargetContainer": undefined,
                                                  "autoCopyTargetContainerId": undefined,
                                                  "autoLinkCategory": undefined,
                                                  "availableDetectionMethods": undefined,
                                                  "availableMetadataInputFormats": undefined,
                                                  "availablePlateTemplates": undefined,
                                                  "backgroundUpload": true,
                                                  "description": "My assay protocol for you all to use.",
                                                  "domains": Immutable.List [
                                                    Immutable.Record {
                                                      "name": "Batch Fields",
                                                      "container": undefined,
                                                      "description": undefined,
                                                      "domainURI": undefined,
                                                      "domainId": null,
                                                      "allowFileLinkProperties": false,
                                                      "allowAttachmentProperties": false,
                                                      "allowFlagProperties": true,
                                                      "allowSampleSubjectProperties": true,
                                                      "allowTextChoiceProperties": true,
                                                      "allowTimepointProperties": false,
                                                      "showDefaultValueSettings": false,
                                                      "defaultDefaultValueType": undefined,
                                                      "defaultValueOptions": Immutable.List [],
                                                      "fields": Immutable.List [],
                                                      "indices": Immutable.List [],
                                                      "domainException": undefined,
                                                      "mandatoryFieldNames": Immutable.List [],
                                                      "reservedFieldNames": Immutable.List [],
                                                      "newDesignFields": undefined,
                                                      "instructions": undefined,
                                                      "domainKindName": undefined,
                                                      "schemaName": undefined,
                                                      "queryName": undefined,
                                                    },
                                                    Immutable.Record {
                                                      "name": "Sample Fields",
                                                      "container": undefined,
                                                      "description": undefined,
                                                      "domainURI": undefined,
                                                      "domainId": null,
                                                      "allowFileLinkProperties": false,
                                                      "allowAttachmentProperties": false,
                                                      "allowFlagProperties": true,
                                                      "allowSampleSubjectProperties": true,
                                                      "allowTextChoiceProperties": true,
                                                      "allowTimepointProperties": false,
                                                      "showDefaultValueSettings": false,
                                                      "defaultDefaultValueType": undefined,
                                                      "defaultValueOptions": Immutable.List [],
                                                      "fields": Immutable.List [
                                                        Immutable.Record {
                                                          "conceptURI": undefined,
                                                          "conditionalFormats": Immutable.List [],
                                                          "defaultScale": undefined,
                                                          "defaultValueType": undefined,
                                                          "defaultValue": undefined,
                                                          "defaultDisplayValue": undefined,
                                                          "description": undefined,
                                                          "dimension": undefined,
                                                          "excludeFromShifting": false,
                                                          "format": undefined,
                                                          "hidden": false,
                                                          "importAliases": undefined,
                                                          "label": undefined,
                                                          "lookupContainer": undefined,
                                                          "lookupQuery": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupValidator": undefined,
                                                          "measure": undefined,
                                                          "mvEnabled": false,
                                                          "name": "field1",
                                                          "PHI": undefined,
                                                          "propertyId": undefined,
                                                          "propertyURI": undefined,
                                                          "propertyValidators": Immutable.List [],
                                                          "rangeValidators": Immutable.List [],
                                                          "rangeURI": "xsd:string",
                                                          "regexValidators": Immutable.List [],
                                                          "textChoiceValidator": undefined,
                                                          "recommendedVariable": false,
                                                          "required": false,
                                                          "scale": 4000,
                                                          "URL": undefined,
                                                          "shownInDetailsView": true,
                                                          "shownInInsertView": true,
                                                          "shownInUpdateView": true,
                                                          "visible": true,
                                                          "dataType": Immutable.Record {
                                                            "conceptURI": undefined,
                                                            "display": "Text",
                                                            "name": "string",
                                                            "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                            "alternateRangeURI": "xsd:string",
                                                            "shortDisplay": "String",
                                                            "lookupSchema": undefined,
                                                            "lookupQuery": undefined,
                                                          },
                                                          "lookupQueryValue": undefined,
                                                          "lookupType": Immutable.Record {
                                                            "conceptURI": undefined,
                                                            "display": "Lookup",
                                                            "name": "lookup",
                                                            "rangeURI": "xsd:string",
                                                            "alternateRangeURI": undefined,
                                                            "shortDisplay": undefined,
                                                            "lookupSchema": undefined,
                                                            "lookupQuery": undefined,
                                                          },
                                                          "original": {
                                                            "conceptURI": undefined,
                                                            "dataType": Immutable.Record {
                                                              "conceptURI": undefined,
                                                              "display": "Text",
                                                              "name": "string",
                                                              "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                              "alternateRangeURI": "xsd:string",
                                                              "shortDisplay": "String",
                                                              "lookupSchema": undefined,
                                                              "lookupQuery": undefined,
                                                            },
                                                            "name": "field1",
                                                            "rangeURI": undefined,
                                                          },
                                                          "updatedField": false,
                                                          "isPrimaryKey": false,
                                                          "lockType": "NotLocked",
                                                          "wrappedColumnName": undefined,
                                                          "disablePhiLevel": false,
                                                          "lockExistingField": false,
                                                          "sourceOntology": undefined,
                                                          "conceptSubtree": undefined,
                                                          "conceptLabelColumn": undefined,
                                                          "conceptImportColumn": undefined,
                                                          "principalConceptCode": undefined,
                                                          "derivationDataScope": undefined,
                                                          "selected": false,
                                                          "scannable": false,
                                                        },
                                                        Immutable.Record {
                                                          "conceptURI": undefined,
                                                          "conditionalFormats": Immutable.List [],
                                                          "defaultScale": undefined,
                                                          "defaultValueType": undefined,
                                                          "defaultValue": undefined,
                                                          "defaultDisplayValue": undefined,
                                                          "description": undefined,
                                                          "dimension": undefined,
                                                          "excludeFromShifting": false,
                                                          "format": undefined,
                                                          "hidden": false,
                                                          "importAliases": undefined,
                                                          "label": undefined,
                                                          "lookupContainer": undefined,
                                                          "lookupQuery": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupValidator": undefined,
                                                          "measure": undefined,
                                                          "mvEnabled": false,
                                                          "name": "field2",
                                                          "PHI": undefined,
                                                          "propertyId": undefined,
                                                          "propertyURI": undefined,
                                                          "propertyValidators": Immutable.List [],
                                                          "rangeValidators": Immutable.List [],
                                                          "rangeURI": "xsd:int",
                                                          "regexValidators": Immutable.List [],
                                                          "textChoiceValidator": undefined,
                                                          "recommendedVariable": false,
                                                          "required": false,
                                                          "scale": 4000,
                                                          "URL": undefined,
                                                          "shownInDetailsView": true,
                                                          "shownInInsertView": true,
                                                          "shownInUpdateView": true,
                                                          "visible": true,
                                                          "dataType": Immutable.Record {
                                                            "conceptURI": undefined,
                                                            "display": "Integer",
                                                            "name": "int",
                                                            "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                                            "alternateRangeURI": "xsd:int",
                                                            "shortDisplay": undefined,
                                                            "lookupSchema": undefined,
                                                            "lookupQuery": undefined,
                                                          },
                                                          "lookupQueryValue": undefined,
                                                          "lookupType": Immutable.Record {
                                                            "conceptURI": undefined,
                                                            "display": "Lookup",
                                                            "name": "lookup",
                                                            "rangeURI": "xsd:int",
                                                            "alternateRangeURI": undefined,
                                                            "shortDisplay": undefined,
                                                            "lookupSchema": undefined,
                                                            "lookupQuery": undefined,
                                                          },
                                                          "original": {
                                                            "conceptURI": undefined,
                                                            "dataType": Immutable.Record {
                                                              "conceptURI": undefined,
                                                              "display": "Integer",
                                                              "name": "int",
                                                              "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                                              "alternateRangeURI": "xsd:int",
                                                              "shortDisplay": undefined,
                                                              "lookupSchema": undefined,
                                                              "lookupQuery": undefined,
                                                            },
                                                            "name": "field2",
                                                            "rangeURI": undefined,
                                                          },
                                                          "updatedField": false,
                                                          "isPrimaryKey": false,
                                                          "lockType": "NotLocked",
                                                          "wrappedColumnName": undefined,
                                                          "disablePhiLevel": false,
                                                          "lockExistingField": false,
                                                          "sourceOntology": undefined,
                                                          "conceptSubtree": undefined,
                                                          "conceptLabelColumn": undefined,
                                                          "conceptImportColumn": undefined,
                                                          "principalConceptCode": undefined,
                                                          "derivationDataScope": undefined,
                                                          "selected": false,
                                                          "scannable": false,
                                                        },
                                                        Immutable.Record {
                                                          "conceptURI": undefined,
                                                          "conditionalFormats": Immutable.List [],
                                                          "defaultScale": undefined,
                                                          "defaultValueType": undefined,
                                                          "defaultValue": undefined,
                                                          "defaultDisplayValue": undefined,
                                                          "description": undefined,
                                                          "dimension": undefined,
                                                          "excludeFromShifting": false,
                                                          "format": undefined,
                                                          "hidden": false,
                                                          "importAliases": undefined,
                                                          "label": undefined,
                                                          "lookupContainer": undefined,
                                                          "lookupQuery": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupValidator": undefined,
                                                          "measure": undefined,
                                                          "mvEnabled": false,
                                                          "name": "field3",
                                                          "PHI": undefined,
                                                          "propertyId": undefined,
                                                          "propertyURI": undefined,
                                                          "propertyValidators": Immutable.List [],
                                                          "rangeValidators": Immutable.List [],
                                                          "rangeURI": "xsd:dateTime",
                                                          "regexValidators": Immutable.List [],
                                                          "textChoiceValidator": undefined,
                                                          "recommendedVariable": false,
                                                          "required": false,
                                                          "scale": 4000,
                                                          "URL": undefined,
                                                          "shownInDetailsView": true,
                                                          "shownInInsertView": true,
                                                          "shownInUpdateView": true,
                                                          "visible": true,
                                                          "dataType": Immutable.Record {
                                                            "conceptURI": undefined,
                                                            "display": "Date Time",
                                                            "name": "dateTime",
                                                            "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                                                            "alternateRangeURI": "xsd:dateTime",
                                                            "shortDisplay": undefined,
                                                            "lookupSchema": undefined,
                                                            "lookupQuery": undefined,
                                                          },
                                                          "lookupQueryValue": undefined,
                                                          "lookupType": Immutable.Record {
                                                            "conceptURI": undefined,
                                                            "display": "Lookup",
                                                            "name": "lookup",
                                                            "rangeURI": "xsd:dateTime",
                                                            "alternateRangeURI": undefined,
                                                            "shortDisplay": undefined,
                                                            "lookupSchema": undefined,
                                                            "lookupQuery": undefined,
                                                          },
                                                          "original": {
                                                            "conceptURI": undefined,
                                                            "dataType": Immutable.Record {
                                                              "conceptURI": undefined,
                                                              "display": "Date Time",
                                                              "name": "dateTime",
                                                              "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                                                              "alternateRangeURI": "xsd:dateTime",
                                                              "shortDisplay": undefined,
                                                              "lookupSchema": undefined,
                                                              "lookupQuery": undefined,
                                                            },
                                                            "name": "field3",
                                                            "rangeURI": undefined,
                                                          },
                                                          "updatedField": false,
                                                          "isPrimaryKey": false,
                                                          "lockType": "NotLocked",
                                                          "wrappedColumnName": undefined,
                                                          "disablePhiLevel": false,
                                                          "lockExistingField": false,
                                                          "sourceOntology": undefined,
                                                          "conceptSubtree": undefined,
                                                          "conceptLabelColumn": undefined,
                                                          "conceptImportColumn": undefined,
                                                          "principalConceptCode": undefined,
                                                          "derivationDataScope": undefined,
                                                          "selected": false,
                                                          "scannable": false,
                                                        },
                                                      ],
                                                      "indices": Immutable.List [],
                                                      "domainException": undefined,
                                                      "mandatoryFieldNames": Immutable.List [],
                                                      "reservedFieldNames": Immutable.List [],
                                                      "newDesignFields": undefined,
                                                      "instructions": undefined,
                                                      "domainKindName": undefined,
                                                      "schemaName": undefined,
                                                      "queryName": undefined,
                                                    },
                                                  ],
                                                  "editableResults": true,
                                                  "editableRuns": true,
                                                  "exception": undefined,
                                                  "metadataInputFormatHelp": undefined,
                                                  "moduleTransformScripts": undefined,
                                                  "name": "Test Assay Protocol",
                                                  "plateMetadata": undefined,
                                                  "protocolId": 1,
                                                  "protocolParameters": undefined,
                                                  "protocolTransformScripts": undefined,
                                                  "providerName": undefined,
                                                  "saveScriptFiles": false,
                                                  "selectedDetectionMethod": undefined,
                                                  "selectedMetadataInputFormat": undefined,
                                                  "selectedPlateTemplate": undefined,
                                                  "status": "Active",
                                                  "qcEnabled": undefined,
                                                }
                                              }
                                              onChange={[Function]}
                                            >
                                              <Component
                                                appPropertiesOnly={true}
                                                colSize={9}
                                                helpTipBody={
                                                  <p>
                                                    A short description for this assay design.
                                                  </p>
                                                }
                                                label="Description"
                                              >
                                                <Row
                                                  bsClass="row"
                                                  className="margin-top"
                                                  componentClass="div"
                                                >
                                                  <div
                                                    className="margin-top row"
                                                  >
                                                    <Col
                                                      bsClass="col"
                                                      componentClass="div"
                                                      lg={2}
                                                      xs={3}
                                                    >
                                                      <div
                                                        className="col-lg-2 col-xs-3"
                                                      >
                                                        <DomainFieldLabel
                                                          helpTipBody={
                                                            <p>
                                                              A short description for this assay design.
                                                            </p>
                                                          }
                                                          label="Description"
                                                        >
                                                          <span
                                                            className="domain-no-wrap"
                                                          >
                                                            Description
                                                            <Component
                                                              id="tooltip"
                                                              title="Description"
                                                            >
                                                              <span
                                                                className="label-help-target"
                                                                onMouseOut={[Function]}
                                                                onMouseOver={[Function]}
                                                              >
                                                                <span
                                                                  className="label-help-icon fa fa-question-circle"
                                                                />
                                                                <Overlay
                                                                  animation={[Function]}
                                                                  placement="right"
                                                                  rootClose={false}
                                                                  show={false}
                                                                >
                                                                  <Overlay
                                                                    placement="right"
                                                                    rootClose={false}
                                                                    show={false}
                                                                    transition={[Function]}
                                                                  />
                                                                </Overlay>
                                                              </span>
                                                            </Component>
                                                          </span>
                                                        </DomainFieldLabel>
                                                      </div>
                                                    </Col>
                                                    <Col
                                                      bsClass="col"
                                                      componentClass="div"
                                                      lg={10}
                                                      xs={9}
                                                    >
                                                      <div
                                                        className="col-lg-10 col-xs-9"
                                                      >
                                                        <textarea
                                                          className="form-control textarea-noresize"
                                                          id="assay-design-description"
                                                          onChange={[Function]}
                                                          value="My assay protocol for you all to use."
                                                        />
                                                      </div>
                                                    </Col>
                                                  </div>
                                                </Row>
                                              </Component>
                                            </DescriptionInput>
                                          </div>
                                          <div
                                            className="domain-field-padding-bottom"
                                          >
                                            <SectionHeading
                                              title="Editing Settings"
                                            >
                                              <div
                                                className="domain-field-section-heading"
                                              >
                                                Editing Settings
                                              </div>
                                            </SectionHeading>
                                            <EditableRunsInput
                                              appPropertiesOnly={true}
                                              model={
                                                Immutable.Record {
                                                  "allowBackgroundUpload": true,
                                                  "allowEditableResults": true,
                                                  "allowQCStates": false,
                                                  "allowTransformationScript": false,
                                                  "allowPlateMetadata": false,
                                                  "autoCopyTargetContainer": undefined,
                                                  "autoCopyTargetContainerId": undefined,
                                                  "autoLinkCategory": undefined,
                                                  "availableDetectionMethods": undefined,
                                                  "availableMetadataInputFormats": undefined,
                                                  "availablePlateTemplates": undefined,
                                                  "backgroundUpload": true,
                                                  "description": "My assay protocol for you all to use.",
                                                  "domains": Immutable.List [
                                                    Immutable.Record {
                                                      "name": "Batch Fields",
                                                      "container": undefined,
                                                      "description": undefined,
                                                      "domainURI": undefined,
                                                      "domainId": null,
                                                      "allowFileLinkProperties": false,
                                                      "allowAttachmentProperties": false,
                                                      "allowFlagProperties": true,
                                                      "allowSampleSubjectProperties": true,
                                                      "allowTextChoiceProperties": true,
                                                      "allowTimepointProperties": false,
                                                      "showDefaultValueSettings": false,
                                                      "defaultDefaultValueType": undefined,
                                                      "defaultValueOptions": Immutable.List [],
                                                      "fields": Immutable.List [],
                                                      "indices": Immutable.List [],
                                                      "domainException": undefined,
                                                      "mandatoryFieldNames": Immutable.List [],
                                                      "reservedFieldNames": Immutable.List [],
                                                      "newDesignFields": undefined,
                                                      "instructions": undefined,
                                                      "domainKindName": undefined,
                                                      "schemaName": undefined,
                                                      "queryName": undefined,
                                                    },
                                                    Immutable.Record {
                                                      "name": "Sample Fields",
                                                      "container": undefined,
                                                      "description": undefined,
                                                      "domainURI": undefined,
                                                      "domainId": null,
                                                      "allowFileLinkProperties": false,
                                                      "allowAttachmentProperties": false,
                                                      "allowFlagProperties": true,
                                                      "allowSampleSubjectProperties": true,
                                                      "allowTextChoiceProperties": true,
                                                      "allowTimepointProperties": false,
                                                      "showDefaultValueSettings": false,
                                                      "defaultDefaultValueType": undefined,
                                                      "defaultValueOptions": Immutable.List [],
                                                      "fields": Immutable.List [
                                                        Immutable.Record {
                                                          "conceptURI": undefined,
                                                          "conditionalFormats": Immutable.List [],
                                                          "defaultScale": undefined,
                                                          "defaultValueType": undefined,
                                                          "defaultValue": undefined,
                                                          "defaultDisplayValue": undefined,
                                                          "description": undefined,
                                                          "dimension": undefined,
                                                          "excludeFromShifting": false,
                                                          "format": undefined,
                                                          "hidden": false,
                                                          "importAliases": undefined,
                                                          "label": undefined,
                                                          "lookupContainer": undefined,
                                                          "lookupQuery": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupValidator": undefined,
                                                          "measure": undefined,
                                                          "mvEnabled": false,
                                                          "name": "field1",
                                                          "PHI": undefined,
                                                          "propertyId": undefined,
                                                          "propertyURI": undefined,
                                                          "propertyValidators": Immutable.List [],
                                                          "rangeValidators": Immutable.List [],
                                                          "rangeURI": "xsd:string",
                                                          "regexValidators": Immutable.List [],
                                                          "textChoiceValidator": undefined,
                                                          "recommendedVariable": false,
                                                          "required": false,
                                                          "scale": 4000,
                                                          "URL": undefined,
                                                          "shownInDetailsView": true,
                                                          "shownInInsertView": true,
                                                          "shownInUpdateView": true,
                                                          "visible": true,
                                                          "dataType": Immutable.Record {
                                                            "conceptURI": undefined,
                                                            "display": "Text",
                                                            "name": "string",
                                                            "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                            "alternateRangeURI": "xsd:string",
                                                            "shortDisplay": "String",
                                                            "lookupSchema": undefined,
                                                            "lookupQuery": undefined,
                                                          },
                                                          "lookupQueryValue": undefined,
                                                          "lookupType": Immutable.Record {
                                                            "conceptURI": undefined,
                                                            "display": "Lookup",
                                                            "name": "lookup",
                                                            "rangeURI": "xsd:string",
                                                            "alternateRangeURI": undefined,
                                                            "shortDisplay": undefined,
                                                            "lookupSchema": undefined,
                                                            "lookupQuery": undefined,
                                                          },
                                                          "original": {
                                                            "conceptURI": undefined,
                                                            "dataType": Immutable.Record {
                                                              "conceptURI": undefined,
                                                              "display": "Text",
                                                              "name": "string",
                                                              "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                              "alternateRangeURI": "xsd:string",
                                                              "shortDisplay": "String",
                                                              "lookupSchema": undefined,
                                                              "lookupQuery": undefined,
                                                            },
                                                            "name": "field1",
                                                            "rangeURI": undefined,
                                                          },
                                                          "updatedField": false,
                                                          "isPrimaryKey": false,
                                                          "lockType": "NotLocked",
                                                          "wrappedColumnName": undefined,
                                                          "disablePhiLevel": false,
                                                          "lockExistingField": false,
                                                          "sourceOntology": undefined,
                                                          "conceptSubtree": undefined,
                                                          "conceptLabelColumn": undefined,
                                                          "conceptImportColumn": undefined,
                                                          "principalConceptCode": undefined,
                                                          "derivationDataScope": undefined,
                                                          "selected": false,
                                                          "scannable": false,
                                                        },
                                                        Immutable.Record {
                                                          "conceptURI": undefined,
                                                          "conditionalFormats": Immutable.List [],
                                                          "defaultScale": undefined,
                                                          "defaultValueType": undefined,
                                                          "defaultValue": undefined,
                                                          "defaultDisplayValue": undefined,
                                                          "description": undefined,
                                                          "dimension": undefined,
                                                          "excludeFromShifting": false,
                                                          "format": undefined,
                                                          "hidden": false,
                                                          "importAliases": undefined,
                                                          "label": undefined,
                                                          "lookupContainer": undefined,
                                                          "lookupQuery": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupValidator": undefined,
                                                          "measure": undefined,
                                                          "mvEnabled": false,
                                                          "name": "field2",
                                                          "PHI": undefined,
                                                          "propertyId": undefined,
                                                          "propertyURI": undefined,
                                                          "propertyValidators": Immutable.List [],
                                                          "rangeValidators": Immutable.List [],
                                                          "rangeURI": "xsd:int",
                                                          "regexValidators": Immutable.List [],
                                                          "textChoiceValidator": undefined,
                                                          "recommendedVariable": false,
                                                          "required": false,
                                                          "scale": 4000,
                                                          "URL": undefined,
                                                          "shownInDetailsView": true,
                                                          "shownInInsertView": true,
                                                          "shownInUpdateView": true,
                                                          "visible": true,
                                                          "dataType": Immutable.Record {
                                                            "conceptURI": undefined,
                                                            "display": "Integer",
                                                            "name": "int",
                                                            "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                                            "alternateRangeURI": "xsd:int",
                                                            "shortDisplay": undefined,
                                                            "lookupSchema": undefined,
                                                            "lookupQuery": undefined,
                                                          },
                                                          "lookupQueryValue": undefined,
                                                          "lookupType": Immutable.Record {
                                                            "conceptURI": undefined,
                                                            "display": "Lookup",
                                                            "name": "lookup",
                                                            "rangeURI": "xsd:int",
                                                            "alternateRangeURI": undefined,
                                                            "shortDisplay": undefined,
                                                            "lookupSchema": undefined,
                                                            "lookupQuery": undefined,
                                                          },
                                                          "original": {
                                                            "conceptURI": undefined,
                                                            "dataType": Immutable.Record {
                                                              "conceptURI": undefined,
                                                              "display": "Integer",
                                                              "name": "int",
                                                              "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                                              "alternateRangeURI": "xsd:int",
                                                              "shortDisplay": undefined,
                                                              "lookupSchema": undefined,
                                                              "lookupQuery": undefined,
                                                            },
                                                            "name": "field2",
                                                            "rangeURI": undefined,
                                                          },
                                                          "updatedField": false,
                                                          "isPrimaryKey": false,
                                                          "lockType": "NotLocked",
                                                          "wrappedColumnName": undefined,
                                                          "disablePhiLevel": false,
                                                          "lockExistingField": false,
                                                          "sourceOntology": undefined,
                                                          "conceptSubtree": undefined,
                                                          "conceptLabelColumn": undefined,
                                                          "conceptImportColumn": undefined,
                                                          "principalConceptCode": undefined,
                                                          "derivationDataScope": undefined,
                                                          "selected": false,
                                                          "scannable": false,
                                                        },
                                                        Immutable.Record {
                                                          "conceptURI": undefined,
                                                          "conditionalFormats": Immutable.List [],
                                                          "defaultScale": undefined,
                                                          "defaultValueType": undefined,
                                                          "defaultValue": undefined,
                                                          "defaultDisplayValue": undefined,
                                                          "description": undefined,
                                                          "dimension": undefined,
                                                          "excludeFromShifting": false,
                                                          "format": undefined,
                                                          "hidden": false,
                                                          "importAliases": undefined,
                                                          "label": undefined,
                                                          "lookupContainer": undefined,
                                                          "lookupQuery": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupValidator": undefined,
                                                          "measure": undefined,
                                                          "mvEnabled": false,
                                                          "name": "field3",
                                                          "PHI": undefined,
                                                          "propertyId": undefined,
                                                          "propertyURI": undefined,
                                                          "propertyValidators": Immutable.List [],
                                                          "rangeValidators": Immutable.List [],
                                                          "rangeURI": "xsd:dateTime",
                                                          "regexValidators": Immutable.List [],
                                                          "textChoiceValidator": undefined,
                                                          "recommendedVariable": false,
                                                          "required": false,
                                                          "scale": 4000,
                                                          "URL": undefined,
                                                          "shownInDetailsView": true,
                                                          "shownInInsertView": true,
                                                          "shownInUpdateView": true,
                                                          "visible": true,
                                                          "dataType": Immutable.Record {
                                                            "conceptURI": undefined,
                                                            "display": "Date Time",
                                                            "name": "dateTime",
                                                            "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                                                            "alternateRangeURI": "xsd:dateTime",
                                                            "shortDisplay": undefined,
                                                            "lookupSchema": undefined,
                                                            "lookupQuery": undefined,
                                                          },
                                                          "lookupQueryValue": undefined,
                                                          "lookupType": Immutable.Record {
                                                            "conceptURI": undefined,
                                                            "display": "Lookup",
                                                            "name": "lookup",
                                                            "rangeURI": "xsd:dateTime",
                                                            "alternateRangeURI": undefined,
                                                            "shortDisplay": undefined,
                                                            "lookupSchema": undefined,
                                                            "lookupQuery": undefined,
                                                          },
                                                          "original": {
                                                            "conceptURI": undefined,
                                                            "dataType": Immutable.Record {
                                                              "conceptURI": undefined,
                                                              "display": "Date Time",
                                                              "name": "dateTime",
                                                              "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                                                              "alternateRangeURI": "xsd:dateTime",
                                                              "shortDisplay": undefined,
                                                              "lookupSchema": undefined,
                                                              "lookupQuery": undefined,
                                                            },
                                                            "name": "field3",
                                                            "rangeURI": undefined,
                                                          },
                                                          "updatedField": false,
                                                          "isPrimaryKey": false,
                                                          "lockType": "NotLocked",
                                                          "wrappedColumnName": undefined,
                                                          "disablePhiLevel": false,
                                                          "lockExistingField": false,
                                                          "sourceOntology": undefined,
                                                          "conceptSubtree": undefined,
                                                          "conceptLabelColumn": undefined,
                                                          "conceptImportColumn": undefined,
                                                          "principalConceptCode": undefined,
                                                          "derivationDataScope": undefined,
                                                          "selected": false,
                                                          "scannable": false,
                                                        },
                                                      ],
                                                      "indices": Immutable.List [],
                                                      "domainException": undefined,
                                                      "mandatoryFieldNames": Immutable.List [],
                                                      "reservedFieldNames": Immutable.List [],
                                                      "newDesignFields": undefined,
                                                      "instructions": undefined,
                                                      "domainKindName": undefined,
                                                      "schemaName": undefined,
                                                      "queryName": undefined,
                                                    },
                                                  ],
                                                  "editableResults": true,
                                                  "editableRuns": true,
                                                  "exception": undefined,
                                                  "metadataInputFormatHelp": undefined,
                                                  "moduleTransformScripts": undefined,
                                                  "name": "Test Assay Protocol",
                                                  "plateMetadata": undefined,
                                                  "protocolId": 1,
                                                  "protocolParameters": undefined,
                                                  "protocolTransformScripts": undefined,
                                                  "providerName": undefined,
                                                  "saveScriptFiles": false,
                                                  "selectedDetectionMethod": undefined,
                                                  "selectedMetadataInputFormat": undefined,
                                                  "selectedPlateTemplate": undefined,
                                                  "status": "Active",
                                                  "qcEnabled": undefined,
                                                }
                                              }
                                              onChange={[Function]}
                                            >
                                              <Component
                                                appPropertiesOnly={true}
                                                colSize={9}
                                                helpTipBody={
                                                  <p>
                                                    If enabled, users with sufficient permissions can edit values at the run level after the initial import is complete. These changes will be audited.
                                                  </p>
                                                }
                                                label="Editable Runs"
                                              >
                                                <Row
                                                  bsClass="row"
                                                  className="margin-top"
                                                  componentClass="div"
                                                >
                                                  <div
                                                    className="margin-top row"
                                                  >
                                                    <Col
                                                      bsClass="col"
                                                      componentClass="div"
                                                      lg={2}
                                                      xs={3}
                                                    >
                                                      <div
                                                        className="col-lg-2 col-xs-3"
                                                      >
                                                        <DomainFieldLabel
                                                          helpTipBody={
                                                            <p>
                                                              If enabled, users with sufficient permissions can edit values at the run level after the initial import is complete. These changes will be audited.
                                                            </p>
                                                          }
                                                          label="Editable Runs"
                                                        >
                                                          Editable 
                                                          <span
                                                            className="domain-no-wrap"
                                                          >
                                                            Runs
                                                            <Component
                                                              id="tooltip"
                                                              title="Editable Runs"
                                                            >
                                                              <span
                                                                className="label-help-target"
                                                                onMouseOut={[Function]}
                                                                onMouseOver={[Function]}
                                                              >
                                                                <span
                                                                  className="label-help-icon fa fa-question-circle"
                                                                />
                                                                <Overlay
                                                                  animation={[Function]}
                                                                  placement="right"
                                                                  rootClose={false}
                                                                  show={false}
                                                                >
                                                                  <Overlay
                                                                    placement="right"
                                                                    rootClose={false}
                                                                    show={false}
                                                                    transition={[Function]}
                                                                  />
                                                                </Overlay>
                                                              </span>
                                                            </Component>
                                                          </span>
                                                        </DomainFieldLabel>
                                                      </div>
                                                    </Col>
                                                    <Col
                                                      bsClass="col"
                                                      componentClass="div"
                                                      lg={10}
                                                      xs={9}
                                                    >
                                                      <div
                                                        className="col-lg-10 col-xs-9"
                                                      >
                                                        <input
                                                          checked={true}
                                                          id="assay-design-editableRuns"
                                                          onChange={[Function]}
                                                          type="checkbox"
                                                        />
                                                      </div>
                                                    </Col>
                                                  </div>
                                                </Row>
                                              </Component>
                                            </EditableRunsInput>
                                            <EditableResultsInput
                                              appPropertiesOnly={true}
                                              model={
                                                Immutable.Record {
                                                  "allowBackgroundUpload": true,
                                                  "allowEditableResults": true,
                                                  "allowQCStates": false,
                                                  "allowTransformationScript": false,
                                                  "allowPlateMetadata": false,
                                                  "autoCopyTargetContainer": undefined,
                                                  "autoCopyTargetContainerId": undefined,
                                                  "autoLinkCategory": undefined,
                                                  "availableDetectionMethods": undefined,
                                                  "availableMetadataInputFormats": undefined,
                                                  "availablePlateTemplates": undefined,
                                                  "backgroundUpload": true,
                                                  "description": "My assay protocol for you all to use.",
                                                  "domains": Immutable.List [
                                                    Immutable.Record {
                                                      "name": "Batch Fields",
                                                      "container": undefined,
                                                      "description": undefined,
                                                      "domainURI": undefined,
                                                      "domainId": null,
                                                      "allowFileLinkProperties": false,
                                                      "allowAttachmentProperties": false,
                                                      "allowFlagProperties": true,
                                                      "allowSampleSubjectProperties": true,
                                                      "allowTextChoiceProperties": true,
                                                      "allowTimepointProperties": false,
                                                      "showDefaultValueSettings": false,
                                                      "defaultDefaultValueType": undefined,
                                                      "defaultValueOptions": Immutable.List [],
                                                      "fields": Immutable.List [],
                                                      "indices": Immutable.List [],
                                                      "domainException": undefined,
                                                      "mandatoryFieldNames": Immutable.List [],
                                                      "reservedFieldNames": Immutable.List [],
                                                      "newDesignFields": undefined,
                                                      "instructions": undefined,
                                                      "domainKindName": undefined,
                                                      "schemaName": undefined,
                                                      "queryName": undefined,
                                                    },
                                                    Immutable.Record {
                                                      "name": "Sample Fields",
                                                      "container": undefined,
                                                      "description": undefined,
                                                      "domainURI": undefined,
                                                      "domainId": null,
                                                      "allowFileLinkProperties": false,
                                                      "allowAttachmentProperties": false,
                                                      "allowFlagProperties": true,
                                                      "allowSampleSubjectProperties": true,
                                                      "allowTextChoiceProperties": true,
                                                      "allowTimepointProperties": false,
                                                      "showDefaultValueSettings": false,
                                                      "defaultDefaultValueType": undefined,
                                                      "defaultValueOptions": Immutable.List [],
                                                      "fields": Immutable.List [
                                                        Immutable.Record {
                                                          "conceptURI": undefined,
                                                          "conditionalFormats": Immutable.List [],
                                                          "defaultScale": undefined,
                                                          "defaultValueType": undefined,
                                                          "defaultValue": undefined,
                                                          "defaultDisplayValue": undefined,
                                                          "description": undefined,
                                                          "dimension": undefined,
                                                          "excludeFromShifting": false,
                                                          "format": undefined,
                                                          "hidden": false,
                                                          "importAliases": undefined,
                                                          "label": undefined,
                                                          "lookupContainer": undefined,
                                                          "lookupQuery": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupValidator": undefined,
                                                          "measure": undefined,
                                                          "mvEnabled": false,
                                                          "name": "field1",
                                                          "PHI": undefined,
                                                          "propertyId": undefined,
                                                          "propertyURI": undefined,
                                                          "propertyValidators": Immutable.List [],
                                                          "rangeValidators": Immutable.List [],
                                                          "rangeURI": "xsd:string",
                                                          "regexValidators": Immutable.List [],
                                                          "textChoiceValidator": undefined,
                                                          "recommendedVariable": false,
                                                          "required": false,
                                                          "scale": 4000,
                                                          "URL": undefined,
                                                          "shownInDetailsView": true,
                                                          "shownInInsertView": true,
                                                          "shownInUpdateView": true,
                                                          "visible": true,
                                                          "dataType": Immutable.Record {
                                                            "conceptURI": undefined,
                                                            "display": "Text",
                                                            "name": "string",
                                                            "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                            "alternateRangeURI": "xsd:string",
                                                            "shortDisplay": "String",
                                                            "lookupSchema": undefined,
                                                            "lookupQuery": undefined,
                                                          },
                                                          "lookupQueryValue": undefined,
                                                          "lookupType": Immutable.Record {
                                                            "conceptURI": undefined,
                                                            "display": "Lookup",
                                                            "name": "lookup",
                                                            "rangeURI": "xsd:string",
                                                            "alternateRangeURI": undefined,
                                                            "shortDisplay": undefined,
                                                            "lookupSchema": undefined,
                                                            "lookupQuery": undefined,
                                                          },
                                                          "original": {
                                                            "conceptURI": undefined,
                                                            "dataType": Immutable.Record {
                                                              "conceptURI": undefined,
                                                              "display": "Text",
                                                              "name": "string",
                                                              "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                              "alternateRangeURI": "xsd:string",
                                                              "shortDisplay": "String",
                                                              "lookupSchema": undefined,
                                                              "lookupQuery": undefined,
                                                            },
                                                            "name": "field1",
                                                            "rangeURI": undefined,
                                                          },
                                                          "updatedField": false,
                                                          "isPrimaryKey": false,
                                                          "lockType": "NotLocked",
                                                          "wrappedColumnName": undefined,
                                                          "disablePhiLevel": false,
                                                          "lockExistingField": false,
                                                          "sourceOntology": undefined,
                                                          "conceptSubtree": undefined,
                                                          "conceptLabelColumn": undefined,
                                                          "conceptImportColumn": undefined,
                                                          "principalConceptCode": undefined,
                                                          "derivationDataScope": undefined,
                                                          "selected": false,
                                                          "scannable": false,
                                                        },
                                                        Immutable.Record {
                                                          "conceptURI": undefined,
                                                          "conditionalFormats": Immutable.List [],
                                                          "defaultScale": undefined,
                                                          "defaultValueType": undefined,
                                                          "defaultValue": undefined,
                                                          "defaultDisplayValue": undefined,
                                                          "description": undefined,
                                                          "dimension": undefined,
                                                          "excludeFromShifting": false,
                                                          "format": undefined,
                                                          "hidden": false,
                                                          "importAliases": undefined,
                                                          "label": undefined,
                                                          "lookupContainer": undefined,
                                                          "lookupQuery": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupValidator": undefined,
                                                          "measure": undefined,
                                                          "mvEnabled": false,
                                                          "name": "field2",
                                                          "PHI": undefined,
                                                          "propertyId": undefined,
                                                          "propertyURI": undefined,
                                                          "propertyValidators": Immutable.List [],
                                                          "rangeValidators": Immutable.List [],
                                                          "rangeURI": "xsd:int",
                                                          "regexValidators": Immutable.List [],
                                                          "textChoiceValidator": undefined,
                                                          "recommendedVariable": false,
                                                          "required": false,
                                                          "scale": 4000,
                                                          "URL": undefined,
                                                          "shownInDetailsView": true,
                                                          "shownInInsertView": true,
                                                          "shownInUpdateView": true,
                                                          "visible": true,
                                                          "dataType": Immutable.Record {
                                                            "conceptURI": undefined,
                                                            "display": "Integer",
                                                            "name": "int",
                                                            "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                                            "alternateRangeURI": "xsd:int",
                                                            "shortDisplay": undefined,
                                                            "lookupSchema": undefined,
                                                            "lookupQuery": undefined,
                                                          },
                                                          "lookupQueryValue": undefined,
                                                          "lookupType": Immutable.Record {
                                                            "conceptURI": undefined,
                                                            "display": "Lookup",
                                                            "name": "lookup",
                                                            "rangeURI": "xsd:int",
                                                            "alternateRangeURI": undefined,
                                                            "shortDisplay": undefined,
                                                            "lookupSchema": undefined,
                                                            "lookupQuery": undefined,
                                                          },
                                                          "original": {
                                                            "conceptURI": undefined,
                                                            "dataType": Immutable.Record {
                                                              "conceptURI": undefined,
                                                              "display": "Integer",
                                                              "name": "int",
                                                              "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                                              "alternateRangeURI": "xsd:int",
                                                              "shortDisplay": undefined,
                                                              "lookupSchema": undefined,
                                                              "lookupQuery": undefined,
                                                            },
                                                            "name": "field2",
                                                            "rangeURI": undefined,
                                                          },
                                                          "updatedField": false,
                                                          "isPrimaryKey": false,
                                                          "lockType": "NotLocked",
                                                          "wrappedColumnName": undefined,
                                                          "disablePhiLevel": false,
                                                          "lockExistingField": false,
                                                          "sourceOntology": undefined,
                                                          "conceptSubtree": undefined,
                                                          "conceptLabelColumn": undefined,
                                                          "conceptImportColumn": undefined,
                                                          "principalConceptCode": undefined,
                                                          "derivationDataScope": undefined,
                                                          "selected": false,
                                                          "scannable": false,
                                                        },
                                                        Immutable.Record {
                                                          "conceptURI": undefined,
                                                          "conditionalFormats": Immutable.List [],
                                                          "defaultScale": undefined,
                                                          "defaultValueType": undefined,
                                                          "defaultValue": undefined,
                                                          "defaultDisplayValue": undefined,
                                                          "description": undefined,
                                                          "dimension": undefined,
                                                          "excludeFromShifting": false,
                                                          "format": undefined,
                                                          "hidden": false,
                                                          "importAliases": undefined,
                                                          "label": undefined,
                                                          "lookupContainer": undefined,
                                                          "lookupQuery": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupValidator": undefined,
                                                          "measure": undefined,
                                                          "mvEnabled": false,
                                                          "name": "field3",
                                                          "PHI": undefined,
                                                          "propertyId": undefined,
                                                          "propertyURI": undefined,
                                                          "propertyValidators": Immutable.List [],
                                                          "rangeValidators": Immutable.List [],
                                                          "rangeURI": "xsd:dateTime",
                                                          "regexValidators": Immutable.List [],
                                                          "textChoiceValidator": undefined,
                                                          "recommendedVariable": false,
                                                          "required": false,
                                                          "scale": 4000,
                                                          "URL": undefined,
                                                          "shownInDetailsView": true,
                                                          "shownInInsertView": true,
                                                          "shownInUpdateView": true,
                                                          "visible": true,
                                                          "dataType": Immutable.Record {
                                                            "conceptURI": undefined,
                                                            "display": "Date Time",
                                                            "name": "dateTime",
                                                            "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                                                            "alternateRangeURI": "xsd:dateTime",
                                                            "shortDisplay": undefined,
                                                            "lookupSchema": undefined,
                                                            "lookupQuery": undefined,
                                                          },
                                                          "lookupQueryValue": undefined,
                                                          "lookupType": Immutable.Record {
                                                            "conceptURI": undefined,
                                                            "display": "Lookup",
                                                            "name": "lookup",
                                                            "rangeURI": "xsd:dateTime",
                                                            "alternateRangeURI": undefined,
                                                            "shortDisplay": undefined,
                                                            "lookupSchema": undefined,
                                                            "lookupQuery": undefined,
                                                          },
                                                          "original": {
                                                            "conceptURI": undefined,
                                                            "dataType": Immutable.Record {
                                                              "conceptURI": undefined,
                                                              "display": "Date Time",
                                                              "name": "dateTime",
                                                              "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                                                              "alternateRangeURI": "xsd:dateTime",
                                                              "shortDisplay": undefined,
                                                              "lookupSchema": undefined,
                                                              "lookupQuery": undefined,
                                                            },
                                                            "name": "field3",
                                                            "rangeURI": undefined,
                                                          },
                                                          "updatedField": false,
                                                          "isPrimaryKey": false,
                                                          "lockType": "NotLocked",
                                                          "wrappedColumnName": undefined,
                                                          "disablePhiLevel": false,
                                                          "lockExistingField": false,
                                                          "sourceOntology": undefined,
                                                          "conceptSubtree": undefined,
                                                          "conceptLabelColumn": undefined,
                                                          "conceptImportColumn": undefined,
                                                          "principalConceptCode": undefined,
                                                          "derivationDataScope": undefined,
                                                          "selected": false,
                                                          "scannable": false,
                                                        },
                                                      ],
                                                      "indices": Immutable.List [],
                                                      "domainException": undefined,
                                                      "mandatoryFieldNames": Immutable.List [],
                                                      "reservedFieldNames": Immutable.List [],
                                                      "newDesignFields": undefined,
                                                      "instructions": undefined,
                                                      "domainKindName": undefined,
                                                      "schemaName": undefined,
                                                      "queryName": undefined,
                                                    },
                                                  ],
                                                  "editableResults": true,
                                                  "editableRuns": true,
                                                  "exception": undefined,
                                                  "metadataInputFormatHelp": undefined,
                                                  "moduleTransformScripts": undefined,
                                                  "name": "Test Assay Protocol",
                                                  "plateMetadata": undefined,
                                                  "protocolId": 1,
                                                  "protocolParameters": undefined,
                                                  "protocolTransformScripts": undefined,
                                                  "providerName": undefined,
                                                  "saveScriptFiles": false,
                                                  "selectedDetectionMethod": undefined,
                                                  "selectedMetadataInputFormat": undefined,
                                                  "selectedPlateTemplate": undefined,
                                                  "status": "Active",
                                                  "qcEnabled": undefined,
                                                }
                                              }
                                              onChange={[Function]}
                                            >
                                              <Component
                                                appPropertiesOnly={true}
                                                colSize={9}
                                                helpTipBody={
                                                  <p>
                                                    If enabled, users with sufficient permissions can edit and delete at the individual results row level after the initial import is complete. New result rows cannot be added to existing runs. These changes will be audited.
                                                  </p>
                                                }
                                                label="Editable Results"
                                              >
                                                <Row
                                                  bsClass="row"
                                                  className="margin-top"
                                                  componentClass="div"
                                                >
                                                  <div
                                                    className="margin-top row"
                                                  >
                                                    <Col
                                                      bsClass="col"
                                                      componentClass="div"
                                                      lg={2}
                                                      xs={3}
                                                    >
                                                      <div
                                                        className="col-lg-2 col-xs-3"
                                                      >
                                                        <DomainFieldLabel
                                                          helpTipBody={
                                                            <p>
                                                              If enabled, users with sufficient permissions can edit and delete at the individual results row level after the initial import is complete. New result rows cannot be added to existing runs. These changes will be audited.
                                                            </p>
                                                          }
                                                          label="Editable Results"
                                                        >
                                                          Editable 
                                                          <span
                                                            className="domain-no-wrap"
                                                          >
                                                            Results
                                                            <Component
                                                              id="tooltip"
                                                              title="Editable Results"
                                                            >
                                                              <span
                                                                className="label-help-target"
                                                                onMouseOut={[Function]}
                                                                onMouseOver={[Function]}
                                                              >
                                                                <span
                                                                  className="label-help-icon fa fa-question-circle"
                                                                />
                                                                <Overlay
                                                                  animation={[Function]}
                                                                  placement="right"
                                                                  rootClose={false}
                                                                  show={false}
                                                                >
                                                                  <Overlay
                                                                    placement="right"
                                                                    rootClose={false}
                                                                    show={false}
                                                                    transition={[Function]}
                                                                  />
                                                                </Overlay>
                                                              </span>
                                                            </Component>
                                                          </span>
                                                        </DomainFieldLabel>
                                                      </div>
                                                    </Col>
                                                    <Col
                                                      bsClass="col"
                                                      componentClass="div"
                                                      lg={10}
                                                      xs={9}
                                                    >
                                                      <div
                                                        className="col-lg-10 col-xs-9"
                                                      >
                                                        <input
                                                          checked={true}
                                                          id="assay-design-editableResults"
                                                          onChange={[Function]}
                                                          type="checkbox"
                                                        />
                                                      </div>
                                                    </Col>
                                                  </div>
                                                </Row>
                                              </Component>
                                            </EditableResultsInput>
                                          </div>
                                        </div>
                                      </Col>
                                    </form>
                                  </Form>
                                </AssayPropertiesForm>
                              </div>
                            </div>
                          </Transition>
                        </Collapse>
                      </PanelCollapse>
                    </PanelBody>
                  </div>
                </Panel>
              </Uncontrolled(Panel)>
            </ForwardRef>
          </BasePropertiesPanel>
        </Component>
      </ComponentWithDomainPropertiesPanelCollapse>
      <DomainForm
        appPropertiesOnly={true}
        controlledCollapse={true}
        domain={
          Immutable.Record {
            "name": "Batch Fields",
            "container": undefined,
            "description": undefined,
            "domainURI": undefined,
            "domainId": null,
            "allowFileLinkProperties": false,
            "allowAttachmentProperties": false,
            "allowFlagProperties": true,
            "allowSampleSubjectProperties": true,
            "allowTextChoiceProperties": true,
            "allowTimepointProperties": false,
            "showDefaultValueSettings": false,
            "defaultDefaultValueType": undefined,
            "defaultValueOptions": Immutable.List [],
            "fields": Immutable.List [],
            "indices": Immutable.List [],
            "domainException": undefined,
            "mandatoryFieldNames": Immutable.List [],
            "reservedFieldNames": Immutable.List [],
            "newDesignFields": undefined,
            "instructions": undefined,
            "domainKindName": undefined,
            "schemaName": undefined,
            "queryName": undefined,
          }
        }
        domainFormDisplayOptions={
          {
            "domainKindDisplayName": "assay design",
            "hideFilePropertyType": undefined,
            "hideInferFromFile": true,
            "hideStudyPropertyTypes": true,
            "textChoiceLockedForDomain": true,
          }
        }
        domainIndex={0}
        headerPrefix="Test Assay Protocol"
        helpTopic={null}
        index={0}
        initCollapsed={true}
        key="0"
        modelDomains={
          Immutable.List [
            Immutable.Record {
              "name": "Batch Fields",
              "container": undefined,
              "description": undefined,
              "domainURI": undefined,
              "domainId": null,
              "allowFileLinkProperties": false,
              "allowAttachmentProperties": false,
              "allowFlagProperties": true,
              "allowSampleSubjectProperties": true,
              "allowTextChoiceProperties": true,
              "allowTimepointProperties": false,
              "showDefaultValueSettings": false,
              "defaultDefaultValueType": undefined,
              "defaultValueOptions": Immutable.List [],
              "fields": Immutable.List [],
              "indices": Immutable.List [],
              "domainException": undefined,
              "mandatoryFieldNames": Immutable.List [],
              "reservedFieldNames": Immutable.List [],
              "newDesignFields": undefined,
              "instructions": undefined,
              "domainKindName": undefined,
              "schemaName": undefined,
              "queryName": undefined,
            },
            Immutable.Record {
              "name": "Sample Fields",
              "container": undefined,
              "description": undefined,
              "domainURI": undefined,
              "domainId": null,
              "allowFileLinkProperties": false,
              "allowAttachmentProperties": false,
              "allowFlagProperties": true,
              "allowSampleSubjectProperties": true,
              "allowTextChoiceProperties": true,
              "allowTimepointProperties": false,
              "showDefaultValueSettings": false,
              "defaultDefaultValueType": undefined,
              "defaultValueOptions": Immutable.List [],
              "fields": Immutable.List [
                Immutable.Record {
                  "conceptURI": undefined,
                  "conditionalFormats": Immutable.List [],
                  "defaultScale": undefined,
                  "defaultValueType": undefined,
                  "defaultValue": undefined,
                  "defaultDisplayValue": undefined,
                  "description": undefined,
                  "dimension": undefined,
                  "excludeFromShifting": false,
                  "format": undefined,
                  "hidden": false,
                  "importAliases": undefined,
                  "label": undefined,
                  "lookupContainer": undefined,
                  "lookupQuery": undefined,
                  "lookupSchema": undefined,
                  "lookupValidator": undefined,
                  "measure": undefined,
                  "mvEnabled": false,
                  "name": "field1",
                  "PHI": undefined,
                  "propertyId": undefined,
                  "propertyURI": undefined,
                  "propertyValidators": Immutable.List [],
                  "rangeValidators": Immutable.List [],
                  "rangeURI": "xsd:string",
                  "regexValidators": Immutable.List [],
                  "textChoiceValidator": undefined,
                  "recommendedVariable": false,
                  "required": false,
                  "scale": 4000,
                  "URL": undefined,
                  "shownInDetailsView": true,
                  "shownInInsertView": true,
                  "shownInUpdateView": true,
                  "visible": true,
                  "dataType": Immutable.Record {
                    "conceptURI": undefined,
                    "display": "Text",
                    "name": "string",
                    "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                    "alternateRangeURI": "xsd:string",
                    "shortDisplay": "String",
                    "lookupSchema": undefined,
                    "lookupQuery": undefined,
                  },
                  "lookupQueryValue": undefined,
                  "lookupType": Immutable.Record {
                    "conceptURI": undefined,
                    "display": "Lookup",
                    "name": "lookup",
                    "rangeURI": "xsd:string",
                    "alternateRangeURI": undefined,
                    "shortDisplay": undefined,
                    "lookupSchema": undefined,
                    "lookupQuery": undefined,
                  },
                  "original": {
                    "conceptURI": undefined,
                    "dataType": Immutable.Record {
                      "conceptURI": undefined,
                      "display": "Text",
                      "name": "string",
                      "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                      "alternateRangeURI": "xsd:string",
                      "shortDisplay": "String",
                      "lookupSchema": undefined,
                      "lookupQuery": undefined,
                    },
                    "name": "field1",
                    "rangeURI": undefined,
                  },
                  "updatedField": false,
                  "isPrimaryKey": false,
                  "lockType": "NotLocked",
                  "wrappedColumnName": undefined,
                  "disablePhiLevel": false,
                  "lockExistingField": false,
                  "sourceOntology": undefined,
                  "conceptSubtree": undefined,
                  "conceptLabelColumn": undefined,
                  "conceptImportColumn": undefined,
                  "principalConceptCode": undefined,
                  "derivationDataScope": undefined,
                  "selected": false,
                  "scannable": false,
                },
                Immutable.Record {
                  "conceptURI": undefined,
                  "conditionalFormats": Immutable.List [],
                  "defaultScale": undefined,
                  "defaultValueType": undefined,
                  "defaultValue": undefined,
                  "defaultDisplayValue": undefined,
                  "description": undefined,
                  "dimension": undefined,
                  "excludeFromShifting": false,
                  "format": undefined,
                  "hidden": false,
                  "importAliases": undefined,
                  "label": undefined,
                  "lookupContainer": undefined,
                  "lookupQuery": undefined,
                  "lookupSchema": undefined,
                  "lookupValidator": undefined,
                  "measure": undefined,
                  "mvEnabled": false,
                  "name": "field2",
                  "PHI": undefined,
                  "propertyId": undefined,
                  "propertyURI": undefined,
                  "propertyValidators": Immutable.List [],
                  "rangeValidators": Immutable.List [],
                  "rangeURI": "xsd:int",
                  "regexValidators": Immutable.List [],
                  "textChoiceValidator": undefined,
                  "recommendedVariable": false,
                  "required": false,
                  "scale": 4000,
                  "URL": undefined,
                  "shownInDetailsView": true,
                  "shownInInsertView": true,
                  "shownInUpdateView": true,
                  "visible": true,
                  "dataType": Immutable.Record {
                    "conceptURI": undefined,
                    "display": "Integer",
                    "name": "int",
                    "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                    "alternateRangeURI": "xsd:int",
                    "shortDisplay": undefined,
                    "lookupSchema": undefined,
                    "lookupQuery": undefined,
                  },
                  "lookupQueryValue": undefined,
                  "lookupType": Immutable.Record {
                    "conceptURI": undefined,
                    "display": "Lookup",
                    "name": "lookup",
                    "rangeURI": "xsd:int",
                    "alternateRangeURI": undefined,
                    "shortDisplay": undefined,
                    "lookupSchema": undefined,
                    "lookupQuery": undefined,
                  },
                  "original": {
                    "conceptURI": undefined,
                    "dataType": Immutable.Record {
                      "conceptURI": undefined,
                      "display": "Integer",
                      "name": "int",
                      "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                      "alternateRangeURI": "xsd:int",
                      "shortDisplay": undefined,
                      "lookupSchema": undefined,
                      "lookupQuery": undefined,
                    },
                    "name": "field2",
                    "rangeURI": undefined,
                  },
                  "updatedField": false,
                  "isPrimaryKey": false,
                  "lockType": "NotLocked",
                  "wrappedColumnName": undefined,
                  "disablePhiLevel": false,
                  "lockExistingField": false,
                  "sourceOntology": undefined,
                  "conceptSubtree": undefined,
                  "conceptLabelColumn": undefined,
                  "conceptImportColumn": undefined,
                  "principalConceptCode": undefined,
                  "derivationDataScope": undefined,
                  "selected": false,
                  "scannable": false,
                },
                Immutable.Record {
                  "conceptURI": undefined,
                  "conditionalFormats": Immutable.List [],
                  "defaultScale": undefined,
                  "defaultValueType": undefined,
                  "defaultValue": undefined,
                  "defaultDisplayValue": undefined,
                  "description": undefined,
                  "dimension": undefined,
                  "excludeFromShifting": false,
                  "format": undefined,
                  "hidden": false,
                  "importAliases": undefined,
                  "label": undefined,
                  "lookupContainer": undefined,
                  "lookupQuery": undefined,
                  "lookupSchema": undefined,
                  "lookupValidator": undefined,
                  "measure": undefined,
                  "mvEnabled": false,
                  "name": "field3",
                  "PHI": undefined,
                  "propertyId": undefined,
                  "propertyURI": undefined,
                  "propertyValidators": Immutable.List [],
                  "rangeValidators": Immutable.List [],
                  "rangeURI": "xsd:dateTime",
                  "regexValidators": Immutable.List [],
                  "textChoiceValidator": undefined,
                  "recommendedVariable": false,
                  "required": false,
                  "scale": 4000,
                  "URL": undefined,
                  "shownInDetailsView": true,
                  "shownInInsertView": true,
                  "shownInUpdateView": true,
                  "visible": true,
                  "dataType": Immutable.Record {
                    "conceptURI": undefined,
                    "display": "Date Time",
                    "name": "dateTime",
                    "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                    "alternateRangeURI": "xsd:dateTime",
                    "shortDisplay": undefined,
                    "lookupSchema": undefined,
                    "lookupQuery": undefined,
                  },
                  "lookupQueryValue": undefined,
                  "lookupType": Immutable.Record {
                    "conceptURI": undefined,
                    "display": "Lookup",
                    "name": "lookup",
                    "rangeURI": "xsd:dateTime",
                    "alternateRangeURI": undefined,
                    "shortDisplay": undefined,
                    "lookupSchema": undefined,
                    "lookupQuery": undefined,
                  },
                  "original": {
                    "conceptURI": undefined,
                    "dataType": Immutable.Record {
                      "conceptURI": undefined,
                      "display": "Date Time",
                      "name": "dateTime",
                      "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                      "alternateRangeURI": "xsd:dateTime",
                      "shortDisplay": undefined,
                      "lookupSchema": undefined,
                      "lookupQuery": undefined,
                    },
                    "name": "field3",
                    "rangeURI": undefined,
                  },
                  "updatedField": false,
                  "isPrimaryKey": false,
                  "lockType": "NotLocked",
                  "wrappedColumnName": undefined,
                  "disablePhiLevel": false,
                  "lockExistingField": false,
                  "sourceOntology": undefined,
                  "conceptSubtree": undefined,
                  "conceptLabelColumn": undefined,
                  "conceptImportColumn": undefined,
                  "principalConceptCode": undefined,
                  "derivationDataScope": undefined,
                  "selected": false,
                  "scannable": false,
                },
              ],
              "indices": Immutable.List [],
              "domainException": undefined,
              "mandatoryFieldNames": Immutable.List [],
              "reservedFieldNames": Immutable.List [],
              "newDesignFields": undefined,
              "instructions": undefined,
              "domainKindName": undefined,
              "schemaName": undefined,
              "queryName": undefined,
            },
          ]
        }
        onChange={[Function]}
        onToggle={[Function]}
        panelStatus="COMPLETE"
        testMode={true}
        validate={false}
      >
        <LookupProvider>
          <DomainFormImpl
            appPropertiesOnly={true}
            controlledCollapse={true}
            domain={
              Immutable.Record {
                "name": "Batch Fields",
                "container": undefined,
                "description": undefined,
                "domainURI": undefined,
                "domainId": null,
                "allowFileLinkProperties": false,
                "allowAttachmentProperties": false,
                "allowFlagProperties": true,
                "allowSampleSubjectProperties": true,
                "allowTextChoiceProperties": true,
                "allowTimepointProperties": false,
                "showDefaultValueSettings": false,
                "defaultDefaultValueType": undefined,
                "defaultValueOptions": Immutable.List [],
                "fields": Immutable.List [],
                "indices": Immutable.List [],
                "domainException": undefined,
                "mandatoryFieldNames": Immutable.List [],
                "reservedFieldNames": Immutable.List [],
                "newDesignFields": undefined,
                "instructions": undefined,
                "domainKindName": undefined,
                "schemaName": undefined,
                "queryName": undefined,
              }
            }
            domainFormDisplayOptions={
              {
                "domainKindDisplayName": "assay design",
                "hideFilePropertyType": undefined,
                "hideInferFromFile": true,
                "hideStudyPropertyTypes": true,
                "textChoiceLockedForDomain": true,
              }
            }
            domainIndex={0}
            headerPrefix="Test Assay Protocol"
            helpNoun="field designer"
            helpTopic={null}
            index={0}
            initCollapsed={true}
            isNew={false}
            modelDomains={
              Immutable.List [
                Immutable.Record {
                  "name": "Batch Fields",
                  "container": undefined,
                  "description": undefined,
                  "domainURI": undefined,
                  "domainId": null,
                  "allowFileLinkProperties": false,
                  "allowAttachmentProperties": false,
                  "allowFlagProperties": true,
                  "allowSampleSubjectProperties": true,
                  "allowTextChoiceProperties": true,
                  "allowTimepointProperties": false,
                  "showDefaultValueSettings": false,
                  "defaultDefaultValueType": undefined,
                  "defaultValueOptions": Immutable.List [],
                  "fields": Immutable.List [],
                  "indices": Immutable.List [],
                  "domainException": undefined,
                  "mandatoryFieldNames": Immutable.List [],
                  "reservedFieldNames": Immutable.List [],
                  "newDesignFields": undefined,
                  "instructions": undefined,
                  "domainKindName": undefined,
                  "schemaName": undefined,
                  "queryName": undefined,
                },
                Immutable.Record {
                  "name": "Sample Fields",
                  "container": undefined,
                  "description": undefined,
                  "domainURI": undefined,
                  "domainId": null,
                  "allowFileLinkProperties": false,
                  "allowAttachmentProperties": false,
                  "allowFlagProperties": true,
                  "allowSampleSubjectProperties": true,
                  "allowTextChoiceProperties": true,
                  "allowTimepointProperties": false,
                  "showDefaultValueSettings": false,
                  "defaultDefaultValueType": undefined,
                  "defaultValueOptions": Immutable.List [],
                  "fields": Immutable.List [
                    Immutable.Record {
                      "conceptURI": undefined,
                      "conditionalFormats": Immutable.List [],
                      "defaultScale": undefined,
                      "defaultValueType": undefined,
                      "defaultValue": undefined,
                      "defaultDisplayValue": undefined,
                      "description": undefined,
                      "dimension": undefined,
                      "excludeFromShifting": false,
                      "format": undefined,
                      "hidden": false,
                      "importAliases": undefined,
                      "label": undefined,
                      "lookupContainer": undefined,
                      "lookupQuery": undefined,
                      "lookupSchema": undefined,
                      "lookupValidator": undefined,
                      "measure": undefined,
                      "mvEnabled": false,
                      "name": "field1",
                      "PHI": undefined,
                      "propertyId": undefined,
                      "propertyURI": undefined,
                      "propertyValidators": Immutable.List [],
                      "rangeValidators": Immutable.List [],
                      "rangeURI": "xsd:string",
                      "regexValidators": Immutable.List [],
                      "textChoiceValidator": undefined,
                      "recommendedVariable": false,
                      "required": false,
                      "scale": 4000,
                      "URL": undefined,
                      "shownInDetailsView": true,
                      "shownInInsertView": true,
                      "shownInUpdateView": true,
                      "visible": true,
                      "dataType": Immutable.Record {
                        "conceptURI": undefined,
                        "display": "Text",
                        "name": "string",
                        "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                        "alternateRangeURI": "xsd:string",
                        "shortDisplay": "String",
                        "lookupSchema": undefined,
                        "lookupQuery": undefined,
                      },
                      "lookupQueryValue": undefined,
                      "lookupType": Immutable.Record {
                        "conceptURI": undefined,
                        "display": "Lookup",
                        "name": "lookup",
                        "rangeURI": "xsd:string",
                        "alternateRangeURI": undefined,
                        "shortDisplay": undefined,
                        "lookupSchema": undefined,
                        "lookupQuery": undefined,
                      },
                      "original": {
                        "conceptURI": undefined,
                        "dataType": Immutable.Record {
                          "conceptURI": undefined,
                          "display": "Text",
                          "name": "string",
                          "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                          "alternateRangeURI": "xsd:string",
                          "shortDisplay": "String",
                          "lookupSchema": undefined,
                          "lookupQuery": undefined,
                        },
                        "name": "field1",
                        "rangeURI": undefined,
                      },
                      "updatedField": false,
                      "isPrimaryKey": false,
                      "lockType": "NotLocked",
                      "wrappedColumnName": undefined,
                      "disablePhiLevel": false,
                      "lockExistingField": false,
                      "sourceOntology": undefined,
                      "conceptSubtree": undefined,
                      "conceptLabelColumn": undefined,
                      "conceptImportColumn": undefined,
                      "principalConceptCode": undefined,
                      "derivationDataScope": undefined,
                      "selected": false,
                      "scannable": false,
                    },
                    Immutable.Record {
                      "conceptURI": undefined,
                      "conditionalFormats": Immutable.List [],
                      "defaultScale": undefined,
                      "defaultValueType": undefined,
                      "defaultValue": undefined,
                      "defaultDisplayValue": undefined,
                      "description": undefined,
                      "dimension": undefined,
                      "excludeFromShifting": false,
                      "format": undefined,
                      "hidden": false,
                      "importAliases": undefined,
                      "label": undefined,
                      "lookupContainer": undefined,
                      "lookupQuery": undefined,
                      "lookupSchema": undefined,
                      "lookupValidator": undefined,
                      "measure": undefined,
                      "mvEnabled": false,
                      "name": "field2",
                      "PHI": undefined,
                      "propertyId": undefined,
                      "propertyURI": undefined,
                      "propertyValidators": Immutable.List [],
                      "rangeValidators": Immutable.List [],
                      "rangeURI": "xsd:int",
                      "regexValidators": Immutable.List [],
                      "textChoiceValidator": undefined,
                      "recommendedVariable": false,
                      "required": false,
                      "scale": 4000,
                      "URL": undefined,
                      "shownInDetailsView": true,
                      "shownInInsertView": true,
                      "shownInUpdateView": true,
                      "visible": true,
                      "dataType": Immutable.Record {
                        "conceptURI": undefined,
                        "display": "Integer",
                        "name": "int",
                        "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                        "alternateRangeURI": "xsd:int",
                        "shortDisplay": undefined,
                        "lookupSchema": undefined,
                        "lookupQuery": undefined,
                      },
                      "lookupQueryValue": undefined,
                      "lookupType": Immutable.Record {
                        "conceptURI": undefined,
                        "display": "Lookup",
                        "name": "lookup",
                        "rangeURI": "xsd:int",
                        "alternateRangeURI": undefined,
                        "shortDisplay": undefined,
                        "lookupSchema": undefined,
                        "lookupQuery": undefined,
                      },
                      "original": {
                        "conceptURI": undefined,
                        "dataType": Immutable.Record {
                          "conceptURI": undefined,
                          "display": "Integer",
                          "name": "int",
                          "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                          "alternateRangeURI": "xsd:int",
                          "shortDisplay": undefined,
                          "lookupSchema": undefined,
                          "lookupQuery": undefined,
                        },
                        "name": "field2",
                        "rangeURI": undefined,
                      },
                      "updatedField": false,
                      "isPrimaryKey": false,
                      "lockType": "NotLocked",
                      "wrappedColumnName": undefined,
                      "disablePhiLevel": false,
                      "lockExistingField": false,
                      "sourceOntology": undefined,
                      "conceptSubtree": undefined,
                      "conceptLabelColumn": undefined,
                      "conceptImportColumn": undefined,
                      "principalConceptCode": undefined,
                      "derivationDataScope": undefined,
                      "selected": false,
                      "scannable": false,
                    },
                    Immutable.Record {
                      "conceptURI": undefined,
                      "conditionalFormats": Immutable.List [],
                      "defaultScale": undefined,
                      "defaultValueType": undefined,
                      "defaultValue": undefined,
                      "defaultDisplayValue": undefined,
                      "description": undefined,
                      "dimension": undefined,
                      "excludeFromShifting": false,
                      "format": undefined,
                      "hidden": false,
                      "importAliases": undefined,
                      "label": undefined,
                      "lookupContainer": undefined,
                      "lookupQuery": undefined,
                      "lookupSchema": undefined,
                      "lookupValidator": undefined,
                      "measure": undefined,
                      "mvEnabled": false,
                      "name": "field3",
                      "PHI": undefined,
                      "propertyId": undefined,
                      "propertyURI": undefined,
                      "propertyValidators": Immutable.List [],
                      "rangeValidators": Immutable.List [],
                      "rangeURI": "xsd:dateTime",
                      "regexValidators": Immutable.List [],
                      "textChoiceValidator": undefined,
                      "recommendedVariable": false,
                      "required": false,
                      "scale": 4000,
                      "URL": undefined,
                      "shownInDetailsView": true,
                      "shownInInsertView": true,
                      "shownInUpdateView": true,
                      "visible": true,
                      "dataType": Immutable.Record {
                        "conceptURI": undefined,
                        "display": "Date Time",
                        "name": "dateTime",
                        "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                        "alternateRangeURI": "xsd:dateTime",
                        "shortDisplay": undefined,
                        "lookupSchema": undefined,
                        "lookupQuery": undefined,
                      },
                      "lookupQueryValue": undefined,
                      "lookupType": Immutable.Record {
                        "conceptURI": undefined,
                        "display": "Lookup",
                        "name": "lookup",
                        "rangeURI": "xsd:dateTime",
                        "alternateRangeURI": undefined,
                        "shortDisplay": undefined,
                        "lookupSchema": undefined,
                        "lookupQuery": undefined,
                      },
                      "original": {
                        "conceptURI": undefined,
                        "dataType": Immutable.Record {
                          "conceptURI": undefined,
                          "display": "Date Time",
                          "name": "dateTime",
                          "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                          "alternateRangeURI": "xsd:dateTime",
                          "shortDisplay": undefined,
                          "lookupSchema": undefined,
                          "lookupQuery": undefined,
                        },
                        "name": "field3",
                        "rangeURI": undefined,
                      },
                      "updatedField": false,
                      "isPrimaryKey": false,
                      "lockType": "NotLocked",
                      "wrappedColumnName": undefined,
                      "disablePhiLevel": false,
                      "lockExistingField": false,
                      "sourceOntology": undefined,
                      "conceptSubtree": undefined,
                      "conceptLabelColumn": undefined,
                      "conceptImportColumn": undefined,
                      "principalConceptCode": undefined,
                      "derivationDataScope": undefined,
                      "selected": false,
                      "scannable": false,
                    },
                  ],
                  "indices": Immutable.List [],
                  "domainException": undefined,
                  "mandatoryFieldNames": Immutable.List [],
                  "reservedFieldNames": Immutable.List [],
                  "newDesignFields": undefined,
                  "instructions": undefined,
                  "domainKindName": undefined,
                  "schemaName": undefined,
                  "queryName": undefined,
                },
              ]
            }
            onChange={[Function]}
            onToggle={[Function]}
            panelStatus="COMPLETE"
            showHeader={true}
            successBsStyle="success"
            testMode={true}
            validate={false}
          >
            <ForwardRef
              className="domain-form-panel"
              expanded={false}
              onToggle={[Function]}
            >
              <Uncontrolled(Panel)
                className="domain-form-panel"
                expanded={false}
                innerRef={null}
                onToggle={[Function]}
              >
                <Panel
                  bsClass="panel"
                  bsStyle="default"
                  className="domain-form-panel"
                  expanded={false}
                  onToggle={[Function]}
                >
                  <div
                    className="domain-form-panel panel panel-default"
                  >
                    <CollapsiblePanelHeader
                      collapsed={true}
                      controlledCollapse={true}
                      id="domainpropertiesrow-Batch-Fields-hdr"
                      isValid={true}
                      panelStatus="COMPLETE"
                      title="Batch Fields"
                      togglePanel={[Function]}
                    >
                      <PanelHeading
                        bsClass="panel"
                        className="domain-panel-header domain-heading-collapsible domain-panel-header-collapsed"
                        componentClass="div"
                        id="domainpropertiesrow-Batch-Fields-hdr"
                        onClick={[Function]}
                      >
                        <div
                          className="domain-panel-header domain-heading-collapsible domain-panel-header-collapsed panel-heading"
                          id="domainpropertiesrow-Batch-Fields-hdr"
                          onClick={[Function]}
                        >
                          <span
                            className="domain-panel-status-icon domain-panel-status-icon-green"
                          >
                            <span
                              className="fa fa-check-circle"
                            />
                          </span>
                          <span
                            className="domain-panel-title"
                          >
                            Batch Fields
                          </span>
                          <span
                            className="pull-right"
                          >
                            <span
                              className="fa fa-lg fa-plus-square domain-form-expand-btn"
                            />
                          </span>
                          <Component
                            id="tooltip"
                            placement="top"
                            title="Batch Fields"
                          >
                            <span
                              className="label-help-target"
                              onMouseOut={[Function]}
                              onMouseOver={[Function]}
                            >
                              <span
                                className="label-help-icon fa fa-question-circle"
                              />
                              <Overlay
                                animation={[Function]}
                                placement="top"
                                rootClose={false}
                                show={false}
                              >
                                <Overlay
                                  placement="top"
                                  rootClose={false}
                                  show={false}
                                  transition={[Function]}
                                />
                              </Overlay>
                            </span>
                          </Component>
                        </div>
                      </PanelHeading>
                    </CollapsiblePanelHeader>
                    <PanelBody
                      bsClass="panel"
                      className=""
                      collapsible={true}
                    >
                      <PanelCollapse
                        bsClass="panel"
                      >
                        <Collapse
                          appear={false}
                          dimension="height"
                          getDimensionValue={[Function]}
                          in={false}
                          mountOnEnter={false}
                          timeout={300}
                          unmountOnExit={false}
                        >
                          <Transition
                            appear={false}
                            aria-expanded={null}
                            enter={true}
                            exit={true}
                            in={false}
                            mountOnEnter={false}
                            onEnter={[Function]}
                            onEntered={[Function]}
                            onEntering={[Function]}
                            onExit={[Function]}
                            onExited={[Function]}
                            onExiting={[Function]}
                            timeout={300}
                            unmountOnExit={false}
                          >
                            <div
                              aria-expanded={null}
                              className="panel-collapse collapse"
                            >
                              <div
                                className="panel-body"
                              >
                                <Row
                                  bsClass="row"
                                  className=""
                                  componentClass="div"
                                >
                                  <div
                                    className="row"
                                  >
                                    <Col
                                      bsClass="col"
                                      componentClass="div"
                                      xs={12}
                                    >
                                      <div
                                        className="col-xs-12"
                                      />
                                    </Col>
                                  </div>
                                </Row>
                                <FileAttachmentForm
                                  acceptedFormats=".json"
                                  allowDirectories={false}
                                  allowMultiple={false}
                                  cancelText="Cancel"
                                  compact={false}
                                  fileSpecificCallback={
                                    Immutable.Map {
                                      ".json": [Function],
                                    }
                                  }
                                  index={0}
                                  label="Import fields from file"
                                  labelLong="Select file or drag and drop here."
                                  onFileRemoval={[Function]}
                                  previewGridProps={false}
                                  showAcceptedFormats={true}
                                  showButtons={false}
                                  showLabel={true}
                                  showProgressBar={false}
                                  submitText="Upload"
                                >
                                  <span
                                    className="translator--toggle__wizard"
                                  >
                                    <FormSection
                                      iconSpacer={false}
                                      label="Import fields from file"
                                      showLabel={true}
                                    >
                                      <div
                                        className="row"
                                      >
                                        <div
                                          className="col-sm-12"
                                        >
                                          <label
                                            className="control-label text-left"
                                          >
                                            <strong>
                                              Import fields from file
                                            </strong>
                                          </label>
                                        </div>
                                      </div>
                                      <div
                                        className="row"
                                      >
                                        <div
                                          className="col-sm-12"
                                        >
                                          <div
                                            className="wizard-row--container"
                                          >
                                            <div
                                              className=""
                                            >
                                              <FileAttachmentContainer
                                                acceptedFormats=".json"
                                                allowDirectories={false}
                                                allowMultiple={false}
                                                compact={false}
                                                handleChange={[Function]}
                                                handleRemoval={[Function]}
                                                index={0}
                                                labelLong="Select file or drag and drop here."
                                              >
                                                <div
                                                  className="file-upload--container block"
                                                >
                                                  <label
                                                    className="file-upload--label"
                                                    htmlFor="fileUpload0"
                                                    onDragEnter={[Function]}
                                                    onDragLeave={[Function]}
                                                    onDragOver={[Function]}
                                                    onDrop={[Function]}
                                                  >
                                                    <i
                                                      aria-hidden="true"
                                                      className="fa fa-cloud-upload fa-2x cloud-logo"
                                                    />
                                                    Select file or drag and drop here.
                                                  </label>
                                                  <input
                                                    accept=".json"
                                                    className="file-upload--input"
                                                    id="fileUpload0"
                                                    multiple={false}
                                                    name="fileUpload0"
                                                    onChange={[Function]}
                                                    type="file"
                                                  />
                                                </div>
                                              </FileAttachmentContainer>
                                            </div>
                                          </div>
                                        </div>
                                      </div>
                                    </FormSection>
                                  </span>
                                  <div
                                    className="row"
                                  >
                                    <div
                                      className="col-md-9"
                                    >
                                      <div
                                        className="file-form-formats"
                                      >
                                        <strong>
                                          Supported formats include: 
                                        </strong>
                                        .json
                                      </div>
                                    </div>
                                    <div
                                      className="col-md-3"
                                    >
                                      <div
                                        className="pull-right"
                                      />
                                    </div>
                                  </div>
                                </FileAttachmentForm>
                                <div
                                  className="margin-top domain-form-manual-section"
                                >
                                  <p>
                                    Or
                                  </p>
                                  <ActionButton
                                    buttonClass="domain-form-manual-btn"
                                    containerClass="form-group"
                                    helperTitle="More Info"
                                    onClick={[Function]}
                                  >
                                    <div
                                      className="form-group"
                                    >
                                      <div
                                        className="domain-form-manual-btn"
                                      >
                                        <span
                                          className="container--action-button btn btn-default"
                                          onClick={[Function]}
                                        >
                                          Manually Define Fields
                                        </span>
                                      </div>
                                    </div>
                                  </ActionButton>
                                </div>
                              </div>
                            </div>
                          </Transition>
                        </Collapse>
                      </PanelCollapse>
                    </PanelBody>
                  </div>
                </Panel>
              </Uncontrolled(Panel)>
            </ForwardRef>
          </DomainFormImpl>
        </LookupProvider>
      </DomainForm>
      <DomainForm
        appPropertiesOnly={true}
        controlledCollapse={true}
        domain={
          Immutable.Record {
            "name": "Sample Fields",
            "container": undefined,
            "description": undefined,
            "domainURI": undefined,
            "domainId": null,
            "allowFileLinkProperties": false,
            "allowAttachmentProperties": false,
            "allowFlagProperties": true,
            "allowSampleSubjectProperties": true,
            "allowTextChoiceProperties": true,
            "allowTimepointProperties": false,
            "showDefaultValueSettings": false,
            "defaultDefaultValueType": undefined,
            "defaultValueOptions": Immutable.List [],
            "fields": Immutable.List [
              Immutable.Record {
                "conceptURI": undefined,
                "conditionalFormats": Immutable.List [],
                "defaultScale": undefined,
                "defaultValueType": undefined,
                "defaultValue": undefined,
                "defaultDisplayValue": undefined,
                "description": undefined,
                "dimension": undefined,
                "excludeFromShifting": false,
                "format": undefined,
                "hidden": false,
                "importAliases": undefined,
                "label": undefined,
                "lookupContainer": undefined,
                "lookupQuery": undefined,
                "lookupSchema": undefined,
                "lookupValidator": undefined,
                "measure": undefined,
                "mvEnabled": false,
                "name": "field1",
                "PHI": undefined,
                "propertyId": undefined,
                "propertyURI": undefined,
                "propertyValidators": Immutable.List [],
                "rangeValidators": Immutable.List [],
                "rangeURI": "xsd:string",
                "regexValidators": Immutable.List [],
                "textChoiceValidator": undefined,
                "recommendedVariable": false,
                "required": false,
                "scale": 4000,
                "URL": undefined,
                "shownInDetailsView": true,
                "shownInInsertView": true,
                "shownInUpdateView": true,
                "visible": true,
                "dataType": Immutable.Record {
                  "conceptURI": undefined,
                  "display": "Text",
                  "name": "string",
                  "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                  "alternateRangeURI": "xsd:string",
                  "shortDisplay": "String",
                  "lookupSchema": undefined,
                  "lookupQuery": undefined,
                },
                "lookupQueryValue": undefined,
                "lookupType": Immutable.Record {
                  "conceptURI": undefined,
                  "display": "Lookup",
                  "name": "lookup",
                  "rangeURI": "xsd:string",
                  "alternateRangeURI": undefined,
                  "shortDisplay": undefined,
                  "lookupSchema": undefined,
                  "lookupQuery": undefined,
                },
                "original": {
                  "conceptURI": undefined,
                  "dataType": Immutable.Record {
                    "conceptURI": undefined,
                    "display": "Text",
                    "name": "string",
                    "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                    "alternateRangeURI": "xsd:string",
                    "shortDisplay": "String",
                    "lookupSchema": undefined,
                    "lookupQuery": undefined,
                  },
                  "name": "field1",
                  "rangeURI": undefined,
                },
                "updatedField": false,
                "isPrimaryKey": false,
                "lockType": "NotLocked",
                "wrappedColumnName": undefined,
                "disablePhiLevel": false,
                "lockExistingField": false,
                "sourceOntology": undefined,
                "conceptSubtree": undefined,
                "conceptLabelColumn": undefined,
                "conceptImportColumn": undefined,
                "principalConceptCode": undefined,
                "derivationDataScope": undefined,
                "selected": false,
                "scannable": false,
              },
              Immutable.Record {
                "conceptURI": undefined,
                "conditionalFormats": Immutable.List [],
                "defaultScale": undefined,
                "defaultValueType": undefined,
                "defaultValue": undefined,
                "defaultDisplayValue": undefined,
                "description": undefined,
                "dimension": undefined,
                "excludeFromShifting": false,
                "format": undefined,
                "hidden": false,
                "importAliases": undefined,
                "label": undefined,
                "lookupContainer": undefined,
                "lookupQuery": undefined,
                "lookupSchema": undefined,
                "lookupValidator": undefined,
                "measure": undefined,
                "mvEnabled": false,
                "name": "field2",
                "PHI": undefined,
                "propertyId": undefined,
                "propertyURI": undefined,
                "propertyValidators": Immutable.List [],
                "rangeValidators": Immutable.List [],
                "rangeURI": "xsd:int",
                "regexValidators": Immutable.List [],
                "textChoiceValidator": undefined,
                "recommendedVariable": false,
                "required": false,
                "scale": 4000,
                "URL": undefined,
                "shownInDetailsView": true,
                "shownInInsertView": true,
                "shownInUpdateView": true,
                "visible": true,
                "dataType": Immutable.Record {
                  "conceptURI": undefined,
                  "display": "Integer",
                  "name": "int",
                  "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                  "alternateRangeURI": "xsd:int",
                  "shortDisplay": undefined,
                  "lookupSchema": undefined,
                  "lookupQuery": undefined,
                },
                "lookupQueryValue": undefined,
                "lookupType": Immutable.Record {
                  "conceptURI": undefined,
                  "display": "Lookup",
                  "name": "lookup",
                  "rangeURI": "xsd:int",
                  "alternateRangeURI": undefined,
                  "shortDisplay": undefined,
                  "lookupSchema": undefined,
                  "lookupQuery": undefined,
                },
                "original": {
                  "conceptURI": undefined,
                  "dataType": Immutable.Record {
                    "conceptURI": undefined,
                    "display": "Integer",
                    "name": "int",
                    "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                    "alternateRangeURI": "xsd:int",
                    "shortDisplay": undefined,
                    "lookupSchema": undefined,
                    "lookupQuery": undefined,
                  },
                  "name": "field2",
                  "rangeURI": undefined,
                },
                "updatedField": false,
                "isPrimaryKey": false,
                "lockType": "NotLocked",
                "wrappedColumnName": undefined,
                "disablePhiLevel": false,
                "lockExistingField": false,
                "sourceOntology": undefined,
                "conceptSubtree": undefined,
                "conceptLabelColumn": undefined,
                "conceptImportColumn": undefined,
                "principalConceptCode": undefined,
                "derivationDataScope": undefined,
                "selected": false,
                "scannable": false,
              },
              Immutable.Record {
                "conceptURI": undefined,
                "conditionalFormats": Immutable.List [],
                "defaultScale": undefined,
                "defaultValueType": undefined,
                "defaultValue": undefined,
                "defaultDisplayValue": undefined,
                "description": undefined,
                "dimension": undefined,
                "excludeFromShifting": false,
                "format": undefined,
                "hidden": false,
                "importAliases": undefined,
                "label": undefined,
                "lookupContainer": undefined,
                "lookupQuery": undefined,
                "lookupSchema": undefined,
                "lookupValidator": undefined,
                "measure": undefined,
                "mvEnabled": false,
                "name": "field3",
                "PHI": undefined,
                "propertyId": undefined,
                "propertyURI": undefined,
                "propertyValidators": Immutable.List [],
                "rangeValidators": Immutable.List [],
                "rangeURI": "xsd:dateTime",
                "regexValidators": Immutable.List [],
                "textChoiceValidator": undefined,
                "recommendedVariable": false,
                "required": false,
                "scale": 4000,
                "URL": undefined,
                "shownInDetailsView": true,
                "shownInInsertView": true,
                "shownInUpdateView": true,
                "visible": true,
                "dataType": Immutable.Record {
                  "conceptURI": undefined,
                  "display": "Date Time",
                  "name": "dateTime",
                  "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                  "alternateRangeURI": "xsd:dateTime",
                  "shortDisplay": undefined,
                  "lookupSchema": undefined,
                  "lookupQuery": undefined,
                },
                "lookupQueryValue": undefined,
                "lookupType": Immutable.Record {
                  "conceptURI": undefined,
                  "display": "Lookup",
                  "name": "lookup",
                  "rangeURI": "xsd:dateTime",
                  "alternateRangeURI": undefined,
                  "shortDisplay": undefined,
                  "lookupSchema": undefined,
                  "lookupQuery": undefined,
                },
                "original": {
                  "conceptURI": undefined,
                  "dataType": Immutable.Record {
                    "conceptURI": undefined,
                    "display": "Date Time",
                    "name": "dateTime",
                    "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                    "alternateRangeURI": "xsd:dateTime",
                    "shortDisplay": undefined,
                    "lookupSchema": undefined,
                    "lookupQuery": undefined,
                  },
                  "name": "field3",
                  "rangeURI": undefined,
                },
                "updatedField": false,
                "isPrimaryKey": false,
                "lockType": "NotLocked",
                "wrappedColumnName": undefined,
                "disablePhiLevel": false,
                "lockExistingField": false,
                "sourceOntology": undefined,
                "conceptSubtree": undefined,
                "conceptLabelColumn": undefined,
                "conceptImportColumn": undefined,
                "principalConceptCode": undefined,
                "derivationDataScope": undefined,
                "selected": false,
                "scannable": false,
              },
            ],
            "indices": Immutable.List [],
            "domainException": undefined,
            "mandatoryFieldNames": Immutable.List [],
            "reservedFieldNames": Immutable.List [],
            "newDesignFields": undefined,
            "instructions": undefined,
            "domainKindName": undefined,
            "schemaName": undefined,
            "queryName": undefined,
          }
        }
        domainFormDisplayOptions={
          {
            "domainKindDisplayName": "assay design",
            "hideFilePropertyType": undefined,
            "hideInferFromFile": true,
            "hideStudyPropertyTypes": true,
            "textChoiceLockedForDomain": true,
          }
        }
        domainIndex={1}
        headerPrefix="Test Assay Protocol"
        helpTopic={null}
        index={1}
        initCollapsed={true}
        key="1"
        modelDomains={
          Immutable.List [
            Immutable.Record {
              "name": "Batch Fields",
              "container": undefined,
              "description": undefined,
              "domainURI": undefined,
              "domainId": null,
              "allowFileLinkProperties": false,
              "allowAttachmentProperties": false,
              "allowFlagProperties": true,
              "allowSampleSubjectProperties": true,
              "allowTextChoiceProperties": true,
              "allowTimepointProperties": false,
              "showDefaultValueSettings": false,
              "defaultDefaultValueType": undefined,
              "defaultValueOptions": Immutable.List [],
              "fields": Immutable.List [],
              "indices": Immutable.List [],
              "domainException": undefined,
              "mandatoryFieldNames": Immutable.List [],
              "reservedFieldNames": Immutable.List [],
              "newDesignFields": undefined,
              "instructions": undefined,
              "domainKindName": undefined,
              "schemaName": undefined,
              "queryName": undefined,
            },
            Immutable.Record {
              "name": "Sample Fields",
              "container": undefined,
              "description": undefined,
              "domainURI": undefined,
              "domainId": null,
              "allowFileLinkProperties": false,
              "allowAttachmentProperties": false,
              "allowFlagProperties": true,
              "allowSampleSubjectProperties": true,
              "allowTextChoiceProperties": true,
              "allowTimepointProperties": false,
              "showDefaultValueSettings": false,
              "defaultDefaultValueType": undefined,
              "defaultValueOptions": Immutable.List [],
              "fields": Immutable.List [
                Immutable.Record {
                  "conceptURI": undefined,
                  "conditionalFormats": Immutable.List [],
                  "defaultScale": undefined,
                  "defaultValueType": undefined,
                  "defaultValue": undefined,
                  "defaultDisplayValue": undefined,
                  "description": undefined,
                  "dimension": undefined,
                  "excludeFromShifting": false,
                  "format": undefined,
                  "hidden": false,
                  "importAliases": undefined,
                  "label": undefined,
                  "lookupContainer": undefined,
                  "lookupQuery": undefined,
                  "lookupSchema": undefined,
                  "lookupValidator": undefined,
                  "measure": undefined,
                  "mvEnabled": false,
                  "name": "field1",
                  "PHI": undefined,
                  "propertyId": undefined,
                  "propertyURI": undefined,
                  "propertyValidators": Immutable.List [],
                  "rangeValidators": Immutable.List [],
                  "rangeURI": "xsd:string",
                  "regexValidators": Immutable.List [],
                  "textChoiceValidator": undefined,
                  "recommendedVariable": false,
                  "required": false,
                  "scale": 4000,
                  "URL": undefined,
                  "shownInDetailsView": true,
                  "shownInInsertView": true,
                  "shownInUpdateView": true,
                  "visible": true,
                  "dataType": Immutable.Record {
                    "conceptURI": undefined,
                    "display": "Text",
                    "name": "string",
                    "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                    "alternateRangeURI": "xsd:string",
                    "shortDisplay": "String",
                    "lookupSchema": undefined,
                    "lookupQuery": undefined,
                  },
                  "lookupQueryValue": undefined,
                  "lookupType": Immutable.Record {
                    "conceptURI": undefined,
                    "display": "Lookup",
                    "name": "lookup",
                    "rangeURI": "xsd:string",
                    "alternateRangeURI": undefined,
                    "shortDisplay": undefined,
                    "lookupSchema": undefined,
                    "lookupQuery": undefined,
                  },
                  "original": {
                    "conceptURI": undefined,
                    "dataType": Immutable.Record {
                      "conceptURI": undefined,
                      "display": "Text",
                      "name": "string",
                      "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                      "alternateRangeURI": "xsd:string",
                      "shortDisplay": "String",
                      "lookupSchema": undefined,
                      "lookupQuery": undefined,
                    },
                    "name": "field1",
                    "rangeURI": undefined,
                  },
                  "updatedField": false,
                  "isPrimaryKey": false,
                  "lockType": "NotLocked",
                  "wrappedColumnName": undefined,
                  "disablePhiLevel": false,
                  "lockExistingField": false,
                  "sourceOntology": undefined,
                  "conceptSubtree": undefined,
                  "conceptLabelColumn": undefined,
                  "conceptImportColumn": undefined,
                  "principalConceptCode": undefined,
                  "derivationDataScope": undefined,
                  "selected": false,
                  "scannable": false,
                },
                Immutable.Record {
                  "conceptURI": undefined,
                  "conditionalFormats": Immutable.List [],
                  "defaultScale": undefined,
                  "defaultValueType": undefined,
                  "defaultValue": undefined,
                  "defaultDisplayValue": undefined,
                  "description": undefined,
                  "dimension": undefined,
                  "excludeFromShifting": false,
                  "format": undefined,
                  "hidden": false,
                  "importAliases": undefined,
                  "label": undefined,
                  "lookupContainer": undefined,
                  "lookupQuery": undefined,
                  "lookupSchema": undefined,
                  "lookupValidator": undefined,
                  "measure": undefined,
                  "mvEnabled": false,
                  "name": "field2",
                  "PHI": undefined,
                  "propertyId": undefined,
                  "propertyURI": undefined,
                  "propertyValidators": Immutable.List [],
                  "rangeValidators": Immutable.List [],
                  "rangeURI": "xsd:int",
                  "regexValidators": Immutable.List [],
                  "textChoiceValidator": undefined,
                  "recommendedVariable": false,
                  "required": false,
                  "scale": 4000,
                  "URL": undefined,
                  "shownInDetailsView": true,
                  "shownInInsertView": true,
                  "shownInUpdateView": true,
                  "visible": true,
                  "dataType": Immutable.Record {
                    "conceptURI": undefined,
                    "display": "Integer",
                    "name": "int",
                    "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                    "alternateRangeURI": "xsd:int",
                    "shortDisplay": undefined,
                    "lookupSchema": undefined,
                    "lookupQuery": undefined,
                  },
                  "lookupQueryValue": undefined,
                  "lookupType": Immutable.Record {
                    "conceptURI": undefined,
                    "display": "Lookup",
                    "name": "lookup",
                    "rangeURI": "xsd:int",
                    "alternateRangeURI": undefined,
                    "shortDisplay": undefined,
                    "lookupSchema": undefined,
                    "lookupQuery": undefined,
                  },
                  "original": {
                    "conceptURI": undefined,
                    "dataType": Immutable.Record {
                      "conceptURI": undefined,
                      "display": "Integer",
                      "name": "int",
                      "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                      "alternateRangeURI": "xsd:int",
                      "shortDisplay": undefined,
                      "lookupSchema": undefined,
                      "lookupQuery": undefined,
                    },
                    "name": "field2",
                    "rangeURI": undefined,
                  },
                  "updatedField": false,
                  "isPrimaryKey": false,
                  "lockType": "NotLocked",
                  "wrappedColumnName": undefined,
                  "disablePhiLevel": false,
                  "lockExistingField": false,
                  "sourceOntology": undefined,
                  "conceptSubtree": undefined,
                  "conceptLabelColumn": undefined,
                  "conceptImportColumn": undefined,
                  "principalConceptCode": undefined,
                  "derivationDataScope": undefined,
                  "selected": false,
                  "scannable": false,
                },
                Immutable.Record {
                  "conceptURI": undefined,
                  "conditionalFormats": Immutable.List [],
                  "defaultScale": undefined,
                  "defaultValueType": undefined,
                  "defaultValue": undefined,
                  "defaultDisplayValue": undefined,
                  "description": undefined,
                  "dimension": undefined,
                  "excludeFromShifting": false,
                  "format": undefined,
                  "hidden": false,
                  "importAliases": undefined,
                  "label": undefined,
                  "lookupContainer": undefined,
                  "lookupQuery": undefined,
                  "lookupSchema": undefined,
                  "lookupValidator": undefined,
                  "measure": undefined,
                  "mvEnabled": false,
                  "name": "field3",
                  "PHI": undefined,
                  "propertyId": undefined,
                  "propertyURI": undefined,
                  "propertyValidators": Immutable.List [],
                  "rangeValidators": Immutable.List [],
                  "rangeURI": "xsd:dateTime",
                  "regexValidators": Immutable.List [],
                  "textChoiceValidator": undefined,
                  "recommendedVariable": false,
                  "required": false,
                  "scale": 4000,
                  "URL": undefined,
                  "shownInDetailsView": true,
                  "shownInInsertView": true,
                  "shownInUpdateView": true,
                  "visible": true,
                  "dataType": Immutable.Record {
                    "conceptURI": undefined,
                    "display": "Date Time",
                    "name": "dateTime",
                    "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                    "alternateRangeURI": "xsd:dateTime",
                    "shortDisplay": undefined,
                    "lookupSchema": undefined,
                    "lookupQuery": undefined,
                  },
                  "lookupQueryValue": undefined,
                  "lookupType": Immutable.Record {
                    "conceptURI": undefined,
                    "display": "Lookup",
                    "name": "lookup",
                    "rangeURI": "xsd:dateTime",
                    "alternateRangeURI": undefined,
                    "shortDisplay": undefined,
                    "lookupSchema": undefined,
                    "lookupQuery": undefined,
                  },
                  "original": {
                    "conceptURI": undefined,
                    "dataType": Immutable.Record {
                      "conceptURI": undefined,
                      "display": "Date Time",
                      "name": "dateTime",
                      "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                      "alternateRangeURI": "xsd:dateTime",
                      "shortDisplay": undefined,
                      "lookupSchema": undefined,
                      "lookupQuery": undefined,
                    },
                    "name": "field3",
                    "rangeURI": undefined,
                  },
                  "updatedField": false,
                  "isPrimaryKey": false,
                  "lockType": "NotLocked",
                  "wrappedColumnName": undefined,
                  "disablePhiLevel": false,
                  "lockExistingField": false,
                  "sourceOntology": undefined,
                  "conceptSubtree": undefined,
                  "conceptLabelColumn": undefined,
                  "conceptImportColumn": undefined,
                  "principalConceptCode": undefined,
                  "derivationDataScope": undefined,
                  "selected": false,
                  "scannable": false,
                },
              ],
              "indices": Immutable.List [],
              "domainException": undefined,
              "mandatoryFieldNames": Immutable.List [],
              "reservedFieldNames": Immutable.List [],
              "newDesignFields": undefined,
              "instructions": undefined,
              "domainKindName": undefined,
              "schemaName": undefined,
              "queryName": undefined,
            },
          ]
        }
        onChange={[Function]}
        onToggle={[Function]}
        panelStatus="COMPLETE"
        testMode={true}
        validate={false}
      >
        <LookupProvider>
          <DomainFormImpl
            appPropertiesOnly={true}
            controlledCollapse={true}
            domain={
              Immutable.Record {
                "name": "Sample Fields",
                "container": undefined,
                "description": undefined,
                "domainURI": undefined,
                "domainId": null,
                "allowFileLinkProperties": false,
                "allowAttachmentProperties": false,
                "allowFlagProperties": true,
                "allowSampleSubjectProperties": true,
                "allowTextChoiceProperties": true,
                "allowTimepointProperties": false,
                "showDefaultValueSettings": false,
                "defaultDefaultValueType": undefined,
                "defaultValueOptions": Immutable.List [],
                "fields": Immutable.List [
                  Immutable.Record {
                    "conceptURI": undefined,
                    "conditionalFormats": Immutable.List [],
                    "defaultScale": undefined,
                    "defaultValueType": undefined,
                    "defaultValue": undefined,
                    "defaultDisplayValue": undefined,
                    "description": undefined,
                    "dimension": undefined,
                    "excludeFromShifting": false,
                    "format": undefined,
                    "hidden": false,
                    "importAliases": undefined,
                    "label": undefined,
                    "lookupContainer": undefined,
                    "lookupQuery": undefined,
                    "lookupSchema": undefined,
                    "lookupValidator": undefined,
                    "measure": undefined,
                    "mvEnabled": false,
                    "name": "field1",
                    "PHI": undefined,
                    "propertyId": undefined,
                    "propertyURI": undefined,
                    "propertyValidators": Immutable.List [],
                    "rangeValidators": Immutable.List [],
                    "rangeURI": "xsd:string",
                    "regexValidators": Immutable.List [],
                    "textChoiceValidator": undefined,
                    "recommendedVariable": false,
                    "required": false,
                    "scale": 4000,
                    "URL": undefined,
                    "shownInDetailsView": true,
                    "shownInInsertView": true,
                    "shownInUpdateView": true,
                    "visible": true,
                    "dataType": Immutable.Record {
                      "conceptURI": undefined,
                      "display": "Text",
                      "name": "string",
                      "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                      "alternateRangeURI": "xsd:string",
                      "shortDisplay": "String",
                      "lookupSchema": undefined,
                      "lookupQuery": undefined,
                    },
                    "lookupQueryValue": undefined,
                    "lookupType": Immutable.Record {
                      "conceptURI": undefined,
                      "display": "Lookup",
                      "name": "lookup",
                      "rangeURI": "xsd:string",
                      "alternateRangeURI": undefined,
                      "shortDisplay": undefined,
                      "lookupSchema": undefined,
                      "lookupQuery": undefined,
                    },
                    "original": {
                      "conceptURI": undefined,
                      "dataType": Immutable.Record {
                        "conceptURI": undefined,
                        "display": "Text",
                        "name": "string",
                        "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                        "alternateRangeURI": "xsd:string",
                        "shortDisplay": "String",
                        "lookupSchema": undefined,
                        "lookupQuery": undefined,
                      },
                      "name": "field1",
                      "rangeURI": undefined,
                    },
                    "updatedField": false,
                    "isPrimaryKey": false,
                    "lockType": "NotLocked",
                    "wrappedColumnName": undefined,
                    "disablePhiLevel": false,
                    "lockExistingField": false,
                    "sourceOntology": undefined,
                    "conceptSubtree": undefined,
                    "conceptLabelColumn": undefined,
                    "conceptImportColumn": undefined,
                    "principalConceptCode": undefined,
                    "derivationDataScope": undefined,
                    "selected": false,
                    "scannable": false,
                  },
                  Immutable.Record {
                    "conceptURI": undefined,
                    "conditionalFormats": Immutable.List [],
                    "defaultScale": undefined,
                    "defaultValueType": undefined,
                    "defaultValue": undefined,
                    "defaultDisplayValue": undefined,
                    "description": undefined,
                    "dimension": undefined,
                    "excludeFromShifting": false,
                    "format": undefined,
                    "hidden": false,
                    "importAliases": undefined,
                    "label": undefined,
                    "lookupContainer": undefined,
                    "lookupQuery": undefined,
                    "lookupSchema": undefined,
                    "lookupValidator": undefined,
                    "measure": undefined,
                    "mvEnabled": false,
                    "name": "field2",
                    "PHI": undefined,
                    "propertyId": undefined,
                    "propertyURI": undefined,
                    "propertyValidators": Immutable.List [],
                    "rangeValidators": Immutable.List [],
                    "rangeURI": "xsd:int",
                    "regexValidators": Immutable.List [],
                    "textChoiceValidator": undefined,
                    "recommendedVariable": false,
                    "required": false,
                    "scale": 4000,
                    "URL": undefined,
                    "shownInDetailsView": true,
                    "shownInInsertView": true,
                    "shownInUpdateView": true,
                    "visible": true,
                    "dataType": Immutable.Record {
                      "conceptURI": undefined,
                      "display": "Integer",
                      "name": "int",
                      "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                      "alternateRangeURI": "xsd:int",
                      "shortDisplay": undefined,
                      "lookupSchema": undefined,
                      "lookupQuery": undefined,
                    },
                    "lookupQueryValue": undefined,
                    "lookupType": Immutable.Record {
                      "conceptURI": undefined,
                      "display": "Lookup",
                      "name": "lookup",
                      "rangeURI": "xsd:int",
                      "alternateRangeURI": undefined,
                      "shortDisplay": undefined,
                      "lookupSchema": undefined,
                      "lookupQuery": undefined,
                    },
                    "original": {
                      "conceptURI": undefined,
                      "dataType": Immutable.Record {
                        "conceptURI": undefined,
                        "display": "Integer",
                        "name": "int",
                        "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                        "alternateRangeURI": "xsd:int",
                        "shortDisplay": undefined,
                        "lookupSchema": undefined,
                        "lookupQuery": undefined,
                      },
                      "name": "field2",
                      "rangeURI": undefined,
                    },
                    "updatedField": false,
                    "isPrimaryKey": false,
                    "lockType": "NotLocked",
                    "wrappedColumnName": undefined,
                    "disablePhiLevel": false,
                    "lockExistingField": false,
                    "sourceOntology": undefined,
                    "conceptSubtree": undefined,
                    "conceptLabelColumn": undefined,
                    "conceptImportColumn": undefined,
                    "principalConceptCode": undefined,
                    "derivationDataScope": undefined,
                    "selected": false,
                    "scannable": false,
                  },
                  Immutable.Record {
                    "conceptURI": undefined,
                    "conditionalFormats": Immutable.List [],
                    "defaultScale": undefined,
                    "defaultValueType": undefined,
                    "defaultValue": undefined,
                    "defaultDisplayValue": undefined,
                    "description": undefined,
                    "dimension": undefined,
                    "excludeFromShifting": false,
                    "format": undefined,
                    "hidden": false,
                    "importAliases": undefined,
                    "label": undefined,
                    "lookupContainer": undefined,
                    "lookupQuery": undefined,
                    "lookupSchema": undefined,
                    "lookupValidator": undefined,
                    "measure": undefined,
                    "mvEnabled": false,
                    "name": "field3",
                    "PHI": undefined,
                    "propertyId": undefined,
                    "propertyURI": undefined,
                    "propertyValidators": Immutable.List [],
                    "rangeValidators": Immutable.List [],
                    "rangeURI": "xsd:dateTime",
                    "regexValidators": Immutable.List [],
                    "textChoiceValidator": undefined,
                    "recommendedVariable": false,
                    "required": false,
                    "scale": 4000,
                    "URL": undefined,
                    "shownInDetailsView": true,
                    "shownInInsertView": true,
                    "shownInUpdateView": true,
                    "visible": true,
                    "dataType": Immutable.Record {
                      "conceptURI": undefined,
                      "display": "Date Time",
                      "name": "dateTime",
                      "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                      "alternateRangeURI": "xsd:dateTime",
                      "shortDisplay": undefined,
                      "lookupSchema": undefined,
                      "lookupQuery": undefined,
                    },
                    "lookupQueryValue": undefined,
                    "lookupType": Immutable.Record {
                      "conceptURI": undefined,
                      "display": "Lookup",
                      "name": "lookup",
                      "rangeURI": "xsd:dateTime",
                      "alternateRangeURI": undefined,
                      "shortDisplay": undefined,
                      "lookupSchema": undefined,
                      "lookupQuery": undefined,
                    },
                    "original": {
                      "conceptURI": undefined,
                      "dataType": Immutable.Record {
                        "conceptURI": undefined,
                        "display": "Date Time",
                        "name": "dateTime",
                        "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                        "alternateRangeURI": "xsd:dateTime",
                        "shortDisplay": undefined,
                        "lookupSchema": undefined,
                        "lookupQuery": undefined,
                      },
                      "name": "field3",
                      "rangeURI": undefined,
                    },
                    "updatedField": false,
                    "isPrimaryKey": false,
                    "lockType": "NotLocked",
                    "wrappedColumnName": undefined,
                    "disablePhiLevel": false,
                    "lockExistingField": false,
                    "sourceOntology": undefined,
                    "conceptSubtree": undefined,
                    "conceptLabelColumn": undefined,
                    "conceptImportColumn": undefined,
                    "principalConceptCode": undefined,
                    "derivationDataScope": undefined,
                    "selected": false,
                    "scannable": false,
                  },
                ],
                "indices": Immutable.List [],
                "domainException": undefined,
                "mandatoryFieldNames": Immutable.List [],
                "reservedFieldNames": Immutable.List [],
                "newDesignFields": undefined,
                "instructions": undefined,
                "domainKindName": undefined,
                "schemaName": undefined,
                "queryName": undefined,
              }
            }
            domainFormDisplayOptions={
              {
                "domainKindDisplayName": "assay design",
                "hideFilePropertyType": undefined,
                "hideInferFromFile": true,
                "hideStudyPropertyTypes": true,
                "textChoiceLockedForDomain": true,
              }
            }
            domainIndex={1}
            headerPrefix="Test Assay Protocol"
            helpNoun="field designer"
            helpTopic={null}
            index={1}
            initCollapsed={true}
            isNew={false}
            modelDomains={
              Immutable.List [
                Immutable.Record {
                  "name": "Batch Fields",
                  "container": undefined,
                  "description": undefined,
                  "domainURI": undefined,
                  "domainId": null,
                  "allowFileLinkProperties": false,
                  "allowAttachmentProperties": false,
                  "allowFlagProperties": true,
                  "allowSampleSubjectProperties": true,
                  "allowTextChoiceProperties": true,
                  "allowTimepointProperties": false,
                  "showDefaultValueSettings": false,
                  "defaultDefaultValueType": undefined,
                  "defaultValueOptions": Immutable.List [],
                  "fields": Immutable.List [],
                  "indices": Immutable.List [],
                  "domainException": undefined,
                  "mandatoryFieldNames": Immutable.List [],
                  "reservedFieldNames": Immutable.List [],
                  "newDesignFields": undefined,
                  "instructions": undefined,
                  "domainKindName": undefined,
                  "schemaName": undefined,
                  "queryName": undefined,
                },
                Immutable.Record {
                  "name": "Sample Fields",
                  "container": undefined,
                  "description": undefined,
                  "domainURI": undefined,
                  "domainId": null,
                  "allowFileLinkProperties": false,
                  "allowAttachmentProperties": false,
                  "allowFlagProperties": true,
                  "allowSampleSubjectProperties": true,
                  "allowTextChoiceProperties": true,
                  "allowTimepointProperties": false,
                  "showDefaultValueSettings": false,
                  "defaultDefaultValueType": undefined,
                  "defaultValueOptions": Immutable.List [],
                  "fields": Immutable.List [
                    Immutable.Record {
                      "conceptURI": undefined,
                      "conditionalFormats": Immutable.List [],
                      "defaultScale": undefined,
                      "defaultValueType": undefined,
                      "defaultValue": undefined,
                      "defaultDisplayValue": undefined,
                      "description": undefined,
                      "dimension": undefined,
                      "excludeFromShifting": false,
                      "format": undefined,
                      "hidden": false,
                      "importAliases": undefined,
                      "label": undefined,
                      "lookupContainer": undefined,
                      "lookupQuery": undefined,
                      "lookupSchema": undefined,
                      "lookupValidator": undefined,
                      "measure": undefined,
                      "mvEnabled": false,
                      "name": "field1",
                      "PHI": undefined,
                      "propertyId": undefined,
                      "propertyURI": undefined,
                      "propertyValidators": Immutable.List [],
                      "rangeValidators": Immutable.List [],
                      "rangeURI": "xsd:string",
                      "regexValidators": Immutable.List [],
                      "textChoiceValidator": undefined,
                      "recommendedVariable": false,
                      "required": false,
                      "scale": 4000,
                      "URL": undefined,
                      "shownInDetailsView": true,
                      "shownInInsertView": true,
                      "shownInUpdateView": true,
                      "visible": true,
                      "dataType": Immutable.Record {
                        "conceptURI": undefined,
                        "display": "Text",
                        "name": "string",
                        "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                        "alternateRangeURI": "xsd:string",
                        "shortDisplay": "String",
                        "lookupSchema": undefined,
                        "lookupQuery": undefined,
                      },
                      "lookupQueryValue": undefined,
                      "lookupType": Immutable.Record {
                        "conceptURI": undefined,
                        "display": "Lookup",
                        "name": "lookup",
                        "rangeURI": "xsd:string",
                        "alternateRangeURI": undefined,
                        "shortDisplay": undefined,
                        "lookupSchema": undefined,
                        "lookupQuery": undefined,
                      },
                      "original": {
                        "conceptURI": undefined,
                        "dataType": Immutable.Record {
                          "conceptURI": undefined,
                          "display": "Text",
                          "name": "string",
                          "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                          "alternateRangeURI": "xsd:string",
                          "shortDisplay": "String",
                          "lookupSchema": undefined,
                          "lookupQuery": undefined,
                        },
                        "name": "field1",
                        "rangeURI": undefined,
                      },
                      "updatedField": false,
                      "isPrimaryKey": false,
                      "lockType": "NotLocked",
                      "wrappedColumnName": undefined,
                      "disablePhiLevel": false,
                      "lockExistingField": false,
                      "sourceOntology": undefined,
                      "conceptSubtree": undefined,
                      "conceptLabelColumn": undefined,
                      "conceptImportColumn": undefined,
                      "principalConceptCode": undefined,
                      "derivationDataScope": undefined,
                      "selected": false,
                      "scannable": false,
                    },
                    Immutable.Record {
                      "conceptURI": undefined,
                      "conditionalFormats": Immutable.List [],
                      "defaultScale": undefined,
                      "defaultValueType": undefined,
                      "defaultValue": undefined,
                      "defaultDisplayValue": undefined,
                      "description": undefined,
                      "dimension": undefined,
                      "excludeFromShifting": false,
                      "format": undefined,
                      "hidden": false,
                      "importAliases": undefined,
                      "label": undefined,
                      "lookupContainer": undefined,
                      "lookupQuery": undefined,
                      "lookupSchema": undefined,
                      "lookupValidator": undefined,
                      "measure": undefined,
                      "mvEnabled": false,
                      "name": "field2",
                      "PHI": undefined,
                      "propertyId": undefined,
                      "propertyURI": undefined,
                      "propertyValidators": Immutable.List [],
                      "rangeValidators": Immutable.List [],
                      "rangeURI": "xsd:int",
                      "regexValidators": Immutable.List [],
                      "textChoiceValidator": undefined,
                      "recommendedVariable": false,
                      "required": false,
                      "scale": 4000,
                      "URL": undefined,
                      "shownInDetailsView": true,
                      "shownInInsertView": true,
                      "shownInUpdateView": true,
                      "visible": true,
                      "dataType": Immutable.Record {
                        "conceptURI": undefined,
                        "display": "Integer",
                        "name": "int",
                        "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                        "alternateRangeURI": "xsd:int",
                        "shortDisplay": undefined,
                        "lookupSchema": undefined,
                        "lookupQuery": undefined,
                      },
                      "lookupQueryValue": undefined,
                      "lookupType": Immutable.Record {
                        "conceptURI": undefined,
                        "display": "Lookup",
                        "name": "lookup",
                        "rangeURI": "xsd:int",
                        "alternateRangeURI": undefined,
                        "shortDisplay": undefined,
                        "lookupSchema": undefined,
                        "lookupQuery": undefined,
                      },
                      "original": {
                        "conceptURI": undefined,
                        "dataType": Immutable.Record {
                          "conceptURI": undefined,
                          "display": "Integer",
                          "name": "int",
                          "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                          "alternateRangeURI": "xsd:int",
                          "shortDisplay": undefined,
                          "lookupSchema": undefined,
                          "lookupQuery": undefined,
                        },
                        "name": "field2",
                        "rangeURI": undefined,
                      },
                      "updatedField": false,
                      "isPrimaryKey": false,
                      "lockType": "NotLocked",
                      "wrappedColumnName": undefined,
                      "disablePhiLevel": false,
                      "lockExistingField": false,
                      "sourceOntology": undefined,
                      "conceptSubtree": undefined,
                      "conceptLabelColumn": undefined,
                      "conceptImportColumn": undefined,
                      "principalConceptCode": undefined,
                      "derivationDataScope": undefined,
                      "selected": false,
                      "scannable": false,
                    },
                    Immutable.Record {
                      "conceptURI": undefined,
                      "conditionalFormats": Immutable.List [],
                      "defaultScale": undefined,
                      "defaultValueType": undefined,
                      "defaultValue": undefined,
                      "defaultDisplayValue": undefined,
                      "description": undefined,
                      "dimension": undefined,
                      "excludeFromShifting": false,
                      "format": undefined,
                      "hidden": false,
                      "importAliases": undefined,
                      "label": undefined,
                      "lookupContainer": undefined,
                      "lookupQuery": undefined,
                      "lookupSchema": undefined,
                      "lookupValidator": undefined,
                      "measure": undefined,
                      "mvEnabled": false,
                      "name": "field3",
                      "PHI": undefined,
                      "propertyId": undefined,
                      "propertyURI": undefined,
                      "propertyValidators": Immutable.List [],
                      "rangeValidators": Immutable.List [],
                      "rangeURI": "xsd:dateTime",
                      "regexValidators": Immutable.List [],
                      "textChoiceValidator": undefined,
                      "recommendedVariable": false,
                      "required": false,
                      "scale": 4000,
                      "URL": undefined,
                      "shownInDetailsView": true,
                      "shownInInsertView": true,
                      "shownInUpdateView": true,
                      "visible": true,
                      "dataType": Immutable.Record {
                        "conceptURI": undefined,
                        "display": "Date Time",
                        "name": "dateTime",
                        "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                        "alternateRangeURI": "xsd:dateTime",
                        "shortDisplay": undefined,
                        "lookupSchema": undefined,
                        "lookupQuery": undefined,
                      },
                      "lookupQueryValue": undefined,
                      "lookupType": Immutable.Record {
                        "conceptURI": undefined,
                        "display": "Lookup",
                        "name": "lookup",
                        "rangeURI": "xsd:dateTime",
                        "alternateRangeURI": undefined,
                        "shortDisplay": undefined,
                        "lookupSchema": undefined,
                        "lookupQuery": undefined,
                      },
                      "original": {
                        "conceptURI": undefined,
                        "dataType": Immutable.Record {
                          "conceptURI": undefined,
                          "display": "Date Time",
                          "name": "dateTime",
                          "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                          "alternateRangeURI": "xsd:dateTime",
                          "shortDisplay": undefined,
                          "lookupSchema": undefined,
                          "lookupQuery": undefined,
                        },
                        "name": "field3",
                        "rangeURI": undefined,
                      },
                      "updatedField": false,
                      "isPrimaryKey": false,
                      "lockType": "NotLocked",
                      "wrappedColumnName": undefined,
                      "disablePhiLevel": false,
                      "lockExistingField": false,
                      "sourceOntology": undefined,
                      "conceptSubtree": undefined,
                      "conceptLabelColumn": undefined,
                      "conceptImportColumn": undefined,
                      "principalConceptCode": undefined,
                      "derivationDataScope": undefined,
                      "selected": false,
                      "scannable": false,
                    },
                  ],
                  "indices": Immutable.List [],
                  "domainException": undefined,
                  "mandatoryFieldNames": Immutable.List [],
                  "reservedFieldNames": Immutable.List [],
                  "newDesignFields": undefined,
                  "instructions": undefined,
                  "domainKindName": undefined,
                  "schemaName": undefined,
                  "queryName": undefined,
                },
              ]
            }
            onChange={[Function]}
            onToggle={[Function]}
            panelStatus="COMPLETE"
            showHeader={true}
            successBsStyle="success"
            testMode={true}
            validate={false}
          >
            <ForwardRef
              className="domain-form-panel"
              expanded={false}
              onToggle={[Function]}
            >
              <Uncontrolled(Panel)
                className="domain-form-panel"
                expanded={false}
                innerRef={null}
                onToggle={[Function]}
              >
                <Panel
                  bsClass="panel"
                  bsStyle="default"
                  className="domain-form-panel"
                  expanded={false}
                  onToggle={[Function]}
                >
                  <div
                    className="domain-form-panel panel panel-default"
                  >
                    <CollapsiblePanelHeader
                      collapsed={true}
                      controlledCollapse={true}
                      headerDetails="3 Fields Defined"
                      id="domainpropertiesrow-Sample-Fields-hdr"
                      isValid={true}
                      panelStatus="COMPLETE"
                      title="Sample Fields"
                      togglePanel={[Function]}
                    >
                      <PanelHeading
                        bsClass="panel"
                        className="domain-panel-header domain-heading-collapsible domain-panel-header-collapsed"
                        componentClass="div"
                        id="domainpropertiesrow-Sample-Fields-hdr"
                        onClick={[Function]}
                      >
                        <div
                          className="domain-panel-header domain-heading-collapsible domain-panel-header-collapsed panel-heading"
                          id="domainpropertiesrow-Sample-Fields-hdr"
                          onClick={[Function]}
                        >
                          <span
                            className="domain-panel-status-icon domain-panel-status-icon-green"
                          >
                            <span
                              className="fa fa-check-circle"
                            />
                          </span>
                          <span
                            className="domain-panel-title"
                          >
                            Sample Fields
                          </span>
                          <span
                            className="pull-right"
                          >
                            <span
                              className="fa fa-lg fa-plus-square domain-form-expand-btn"
                            />
                          </span>
                          <Component
                            id="tooltip"
                            placement="top"
                            title="Sample Fields"
                          >
                            <span
                              className="label-help-target"
                              onMouseOut={[Function]}
                              onMouseOver={[Function]}
                            >
                              <span
                                className="label-help-icon fa fa-question-circle"
                              />
                              <Overlay
                                animation={[Function]}
                                placement="top"
                                rootClose={false}
                                show={false}
                              >
                                <Overlay
                                  placement="top"
                                  rootClose={false}
                                  show={false}
                                  transition={[Function]}
                                />
                              </Overlay>
                            </span>
                          </Component>
                          <span
                            className="domain-panel-header-fields-defined"
                          >
                            3 Fields Defined
                          </span>
                        </div>
                      </PanelHeading>
                    </CollapsiblePanelHeader>
                    <PanelBody
                      bsClass="panel"
                      className="domain-field-top-noBuffer"
                      collapsible={true}
                    >
                      <PanelCollapse
                        bsClass="panel"
                      >
                        <Collapse
                          appear={false}
                          dimension="height"
                          getDimensionValue={[Function]}
                          in={false}
                          mountOnEnter={false}
                          timeout={300}
                          unmountOnExit={false}
                        >
                          <Transition
                            appear={false}
                            aria-expanded={null}
                            enter={true}
                            exit={true}
                            in={false}
                            mountOnEnter={false}
                            onEnter={[Function]}
                            onEntered={[Function]}
                            onEntering={[Function]}
                            onExit={[Function]}
                            onExited={[Function]}
                            onExiting={[Function]}
                            timeout={300}
                            unmountOnExit={false}
                          >
                            <div
                              aria-expanded={null}
                              className="panel-collapse collapse"
                            >
                              <div
                                className="domain-field-top-noBuffer panel-body"
                              >
                                <Row
                                  bsClass="row"
                                  className="domain-field-toolbar"
                                  componentClass="div"
                                >
                                  <div
                                    className="domain-field-toolbar row"
                                  >
                                    <Col
                                      bsClass="col"
                                      componentClass="div"
                                      xs={4}
                                    >
                                      <div
                                        className="col-xs-4"
                                      >
                                        <AddEntityButton
                                          buttonClass="domain-toolbar-add-btn"
                                          containerClass="container--toolbar-button"
                                          entity="Field"
                                          onClick={[Function]}
                                        >
                                          <ActionButton
                                            buttonClass="domain-toolbar-add-btn"
                                            containerClass="container--toolbar-button"
                                            helperTitle="More Info"
                                            onClick={[Function]}
                                          >
                                            <div
                                              className="container--toolbar-button"
                                            >
                                              <div
                                                className="domain-toolbar-add-btn"
                                              >
                                                <span
                                                  className="container--action-button btn btn-default"
                                                  onClick={[Function]}
                                                >
                                                  <i
                                                    className="fa fa-plus-circle container--addition-icon"
                                                  />
                                                   Add 
                                                  Field
                                                </span>
                                              </div>
                                            </div>
                                          </ActionButton>
                                        </AddEntityButton>
                                        <ActionButton
                                          buttonClass="domain-toolbar-delete-btn"
                                          containerClass="container--toolbar-button"
                                          disabled={true}
                                          helperTitle="More Info"
                                          onClick={[Function]}
                                        >
                                          <div
                                            className="container--toolbar-button"
                                          >
                                            <div
                                              className="domain-toolbar-delete-btn"
                                            >
                                              <span
                                                className="container--action-button btn btn-default disabled"
                                              >
                                                <i
                                                  className="fa fa-trash domain-toolbar-export-btn-icon"
                                                />
                                                 Delete
                                              </span>
                                            </div>
                                          </div>
                                        </ActionButton>
                                        <ActionButton
                                          buttonClass="domain-toolbar-export-btn"
                                          containerClass="container--toolbar-button"
                                          disabled={false}
                                          helperTitle="More Info"
                                          onClick={[Function]}
                                        >
                                          <div
                                            className="container--toolbar-button"
                                          >
                                            <div
                                              className="domain-toolbar-export-btn"
                                            >
                                              <span
                                                className="container--action-button btn btn-default"
                                                onClick={[Function]}
                                              >
                                                <i
                                                  className="fa fa-download domain-toolbar-export-btn-icon"
                                                />
                                                 Export
                                              </span>
                                            </div>
                                          </div>
                                        </ActionButton>
                                      </div>
                                    </Col>
                                    <Col
                                      bsClass="col"
                                      componentClass="div"
                                      xs={8}
                                    >
                                      <div
                                        className="col-xs-8"
                                      >
                                        <div
                                          className="pull-right domain-field-toolbar-right-aligned"
                                        >
                                          <FormControl
                                            bsClass="form-control"
                                            className="domain-search-input"
                                            componentClass="input"
                                            id="domain-search-name-1"
                                            onChange={[Function]}
                                            placeholder="Search Fields"
                                            type="text"
                                          >
                                            <input
                                              className="domain-search-input form-control"
                                              id="domain-search-name-1"
                                              onChange={[Function]}
                                              placeholder="Search Fields"
                                              type="text"
                                            />
                                          </FormControl>
                                        </div>
                                      </div>
                                    </Col>
                                  </div>
                                </Row>
                                <Row
                                  bsClass="row"
                                  className=""
                                  componentClass="div"
                                >
                                  <div
                                    className="row"
                                  >
                                    <Col
                                      bsClass="col"
                                      componentClass="div"
                                      xs={12}
                                    >
                                      <div
                                        className="col-xs-12"
                                      />
                                    </Col>
                                  </div>
                                </Row>
                                <DragDropContext
                                  onBeforeDragStart={[Function]}
                                  onDragEnd={[Function]}
                                >
                                  <ErrorBoundary>
                                    <App
                                      contextId="2"
                                      dragHandleUsageInstructions="
  Press space bar to start a drag.
  When dragging you can use the arrow keys to move the item around and escape to cancel.
  Some screen readers may require you to be in focus mode or to use your pass through key
"
                                      onBeforeDragStart={[Function]}
                                      onDragEnd={[Function]}
                                      setCallbacks={[Function]}
                                    >
                                      <Provider
                                        context={
                                          {
                                            "$$typeof": Symbol(react.context),
                                            "Consumer": {
                                              "$$typeof": Symbol(react.context),
                                              "_calculateChangedBits": null,
                                              "_context": [Circular],
                                            },
                                            "Provider": {
                                              "$$typeof": Symbol(react.provider),
                                              "_context": [Circular],
                                            },
                                            "_calculateChangedBits": null,
                                            "_currentRenderer": {},
                                            "_currentRenderer2": null,
                                            "_currentValue": null,
                                            "_currentValue2": null,
                                            "_threadCount": 0,
                                          }
                                        }
                                        store={
                                          {
                                            "@@observable": [Function],
                                            "dispatch": [Function],
                                            "getState": [Function],
                                            "replaceReducer": [Function],
                                            "subscribe": [Function],
                                          }
                                        }
                                      >
                                        <div
                                          className="domain-field-row domain-row-border-default domain-floating-hdr"
                                        >
                                          <Alert
                                            bsStyle="info"
                                          />
                                          <Row
                                            bsClass="row"
                                            componentClass="div"
                                          >
                                            <div
                                              className="row"
                                            >
                                              <div
                                                className="domain-field-header"
                                              >
                                                0
                                                 
                                                fields
                                                 selected
                                                <Button
                                                  active={false}
                                                  block={false}
                                                  bsClass="btn"
                                                  bsStyle="default"
                                                  className="domain-panel-header-clear-all"
                                                  disabled={true}
                                                  onClick={[Function]}
                                                >
                                                  <button
                                                    className="domain-panel-header-clear-all btn btn-default"
                                                    disabled={true}
                                                    onClick={[Function]}
                                                    type="button"
                                                  >
                                                    Clear
                                                  </button>
                                                </Button>
                                              </div>
                                            </div>
                                          </Row>
                                          <Row
                                            bsClass="row"
                                            className="domain-row-container"
                                            componentClass="div"
                                          >
                                            <div
                                              className="domain-row-container row"
                                            >
                                              <div
                                                className="domain-row-handle"
                                              />
                                              <div
                                                className="domain-row-action-section"
                                              >
                                                <Checkbox
                                                  bsClass="checkbox"
                                                  checked={false}
                                                  className="domain-field-check-icon"
                                                  disabled={false}
                                                  id="domain-select-all-checkbox"
                                                  inline={false}
                                                  name="domain-select-all-checkbox"
                                                  onChange={[Function]}
                                                  title=""
                                                >
                                                  <div
                                                    className="domain-field-check-icon checkbox"
                                                  >
                                                    <label
                                                      title=""
                                                    >
                                                      <input
                                                        checked={false}
                                                        disabled={false}
                                                        id="domain-select-all-checkbox"
                                                        name="domain-select-all-checkbox"
                                                        onChange={[Function]}
                                                        type="checkbox"
                                                      />
                                                    </label>
                                                  </div>
                                                </Checkbox>
                                              </div>
                                              <div>
                                                <Col
                                                  bsClass="col"
                                                  className="domain-row-base-fields"
                                                  componentClass="div"
                                                  xs={6}
                                                >
                                                  <div
                                                    className="domain-row-base-fields col-xs-6"
                                                  >
                                                    <Col
                                                      bsClass="col"
                                                      componentClass="div"
                                                      xs={6}
                                                    >
                                                      <div
                                                        className="col-xs-6"
                                                      >
                                                        <b>
                                                          Name *
                                                        </b>
                                                      </div>
                                                    </Col>
                                                    <Col
                                                      bsClass="col"
                                                      componentClass="div"
                                                      xs={4}
                                                    >
                                                      <div
                                                        className="col-xs-4"
                                                      >
                                                        <b>
                                                          Data Type *
                                                        </b>
                                                      </div>
                                                    </Col>
                                                    <Col
                                                      bsClass="col"
                                                      componentClass="div"
                                                      xs={2}
                                                    >
                                                      <div
                                                        className="col-xs-2"
                                                      >
                                                        <b>
                                                          Required
                                                        </b>
                                                      </div>
                                                    </Col>
                                                  </div>
                                                </Col>
                                                <Col
                                                  bsClass="col"
                                                  componentClass="div"
                                                  xs={6}
                                                >
                                                  <div
                                                    className="col-xs-6"
                                                  >
                                                    <b>
                                                      Details
                                                    </b>
                                                  </div>
                                                </Col>
                                              </div>
                                            </div>
                                          </Row>
                                        </div>
                                        <Connect(Droppable)
                                          direction="vertical"
                                          droppableId="domain-form-droppable"
                                          getContainerForClone={[Function]}
                                          ignoreContainerClipping={false}
                                          isCombineEnabled={false}
                                          isDropDisabled={false}
                                          mode="standard"
                                          renderClone={null}
                                          type="DEFAULT"
                                        >
                                          <Droppable
                                            direction="vertical"
                                            droppableId="domain-form-droppable"
                                            getContainerForClone={[Function]}
                                            ignoreContainerClipping={false}
                                            isCombineEnabled={false}
                                            isDropDisabled={false}
                                            mode="standard"
                                            placeholder={null}
                                            renderClone={null}
                                            shouldAnimatePlaceholder={false}
                                            snapshot={
                                              {
                                                "draggingFromThisWith": null,
                                                "draggingOverWith": null,
                                                "isDraggingOver": false,
                                                "isUsingPlaceholder": false,
                                              }
                                            }
                                            type="DEFAULT"
                                            updateViewportMaxScroll={[Function]}
                                            useClone={null}
                                          >
                                            <div
                                              data-rbd-droppable-context-id="2"
                                              data-rbd-droppable-id="domain-form-droppable"
                                            >
                                              <Form
                                                bsClass="form"
                                                className="domain-form"
                                                componentClass="form"
                                                horizontal={false}
                                                inline={false}
                                              >
                                                <form
                                                  className="domain-form"
                                                >
                                                  <DomainRow
                                                    appPropertiesOnly={true}
                                                    availableTypes={
                                                      Immutable.List [
                                                        Immutable.Record {
                                                          "conceptURI": undefined,
                                                          "display": "Text",
                                                          "name": "string",
                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                          "alternateRangeURI": "xsd:string",
                                                          "shortDisplay": "String",
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                        Immutable.Record {
                                                          "conceptURI": undefined,
                                                          "display": "Multi-Line Text",
                                                          "name": "multiLine",
                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#multiLine",
                                                          "alternateRangeURI": undefined,
                                                          "shortDisplay": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                        Immutable.Record {
                                                          "conceptURI": undefined,
                                                          "display": "Boolean",
                                                          "name": "boolean",
                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#boolean",
                                                          "alternateRangeURI": "xsd:boolean",
                                                          "shortDisplay": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                        Immutable.Record {
                                                          "conceptURI": undefined,
                                                          "display": "Integer",
                                                          "name": "int",
                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                                          "alternateRangeURI": "xsd:int",
                                                          "shortDisplay": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                        Immutable.Record {
                                                          "conceptURI": undefined,
                                                          "display": "Decimal (floating point)",
                                                          "name": "double",
                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#double",
                                                          "alternateRangeURI": "xsd:double",
                                                          "shortDisplay": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                        Immutable.Record {
                                                          "conceptURI": undefined,
                                                          "display": "Date Time",
                                                          "name": "dateTime",
                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                                                          "alternateRangeURI": "xsd:dateTime",
                                                          "shortDisplay": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                        Immutable.Record {
                                                          "conceptURI": "http://www.labkey.org/exp/xml#flag",
                                                          "display": "Flag",
                                                          "name": "flag",
                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                          "alternateRangeURI": undefined,
                                                          "shortDisplay": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                        Immutable.Record {
                                                          "conceptURI": undefined,
                                                          "display": "User",
                                                          "name": "users",
                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                                          "alternateRangeURI": undefined,
                                                          "shortDisplay": undefined,
                                                          "lookupSchema": "core",
                                                          "lookupQuery": "users",
                                                        },
                                                        Immutable.Record {
                                                          "conceptURI": "http://cpas.labkey.com/Study#ParticipantId",
                                                          "display": "Subject/Participant",
                                                          "name": "ParticipantId",
                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                          "alternateRangeURI": undefined,
                                                          "shortDisplay": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                        Immutable.Record {
                                                          "conceptURI": undefined,
                                                          "display": "Lookup",
                                                          "name": "lookup",
                                                          "rangeURI": undefined,
                                                          "alternateRangeURI": undefined,
                                                          "shortDisplay": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                        Immutable.Record {
                                                          "conceptURI": "http://www.labkey.org/exp/xml#sample",
                                                          "display": "Sample",
                                                          "name": "sample",
                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                                          "alternateRangeURI": undefined,
                                                          "shortDisplay": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                        Immutable.Record {
                                                          "conceptURI": "http://www.labkey.org/types#textChoice",
                                                          "display": "Text Choice",
                                                          "name": "textChoice",
                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                          "alternateRangeURI": undefined,
                                                          "shortDisplay": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                      ]
                                                    }
                                                    defaultValueOptions={Immutable.List []}
                                                    domainFormDisplayOptions={
                                                      {
                                                        "domainKindDisplayName": "assay design",
                                                        "hideFilePropertyType": undefined,
                                                        "hideInferFromFile": true,
                                                        "hideStudyPropertyTypes": true,
                                                        "textChoiceLockedForDomain": true,
                                                      }
                                                    }
                                                    domainId={null}
                                                    domainIndex={1}
                                                    dragging={false}
                                                    expandTransition={300}
                                                    expanded={false}
                                                    field={
                                                      Immutable.Record {
                                                        "conceptURI": undefined,
                                                        "conditionalFormats": Immutable.List [],
                                                        "defaultScale": undefined,
                                                        "defaultValueType": undefined,
                                                        "defaultValue": undefined,
                                                        "defaultDisplayValue": undefined,
                                                        "description": undefined,
                                                        "dimension": undefined,
                                                        "excludeFromShifting": false,
                                                        "format": undefined,
                                                        "hidden": false,
                                                        "importAliases": undefined,
                                                        "label": undefined,
                                                        "lookupContainer": undefined,
                                                        "lookupQuery": undefined,
                                                        "lookupSchema": undefined,
                                                        "lookupValidator": undefined,
                                                        "measure": undefined,
                                                        "mvEnabled": false,
                                                        "name": "field1",
                                                        "PHI": undefined,
                                                        "propertyId": undefined,
                                                        "propertyURI": undefined,
                                                        "propertyValidators": Immutable.List [],
                                                        "rangeValidators": Immutable.List [],
                                                        "rangeURI": "xsd:string",
                                                        "regexValidators": Immutable.List [],
                                                        "textChoiceValidator": undefined,
                                                        "recommendedVariable": false,
                                                        "required": false,
                                                        "scale": 4000,
                                                        "URL": undefined,
                                                        "shownInDetailsView": true,
                                                        "shownInInsertView": true,
                                                        "shownInUpdateView": true,
                                                        "visible": true,
                                                        "dataType": Immutable.Record {
                                                          "conceptURI": undefined,
                                                          "display": "Text",
                                                          "name": "string",
                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                          "alternateRangeURI": "xsd:string",
                                                          "shortDisplay": "String",
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                        "lookupQueryValue": undefined,
                                                        "lookupType": Immutable.Record {
                                                          "conceptURI": undefined,
                                                          "display": "Lookup",
                                                          "name": "lookup",
                                                          "rangeURI": "xsd:string",
                                                          "alternateRangeURI": undefined,
                                                          "shortDisplay": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                        "original": {
                                                          "conceptURI": undefined,
                                                          "dataType": Immutable.Record {
                                                            "conceptURI": undefined,
                                                            "display": "Text",
                                                            "name": "string",
                                                            "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                            "alternateRangeURI": "xsd:string",
                                                            "shortDisplay": "String",
                                                            "lookupSchema": undefined,
                                                            "lookupQuery": undefined,
                                                          },
                                                          "name": "field1",
                                                          "rangeURI": undefined,
                                                        },
                                                        "updatedField": false,
                                                        "isPrimaryKey": false,
                                                        "lockType": "NotLocked",
                                                        "wrappedColumnName": undefined,
                                                        "disablePhiLevel": false,
                                                        "lockExistingField": false,
                                                        "sourceOntology": undefined,
                                                        "conceptSubtree": undefined,
                                                        "conceptLabelColumn": undefined,
                                                        "conceptImportColumn": undefined,
                                                        "principalConceptCode": undefined,
                                                        "derivationDataScope": undefined,
                                                        "selected": false,
                                                        "scannable": false,
                                                      }
                                                    }
                                                    fieldDetailsInfo={{}}
                                                    getDomainFields={[Function]}
                                                    helpNoun="field designer"
                                                    index={0}
                                                    key="domain-row-key-0"
                                                    maxPhiLevel="Restricted"
                                                    onChange={[Function]}
                                                    onDelete={[Function]}
                                                    onExpand={[Function]}
                                                    showDefaultValueSettings={false}
                                                    successBsStyle="success"
                                                  >
                                                    <PublicDraggable
                                                      draggableId="domainpropertiesrow-domaindrag-1-0"
                                                      index={0}
                                                    >
                                                      <PrivateDraggable
                                                        canDragInteractiveElements={false}
                                                        draggableId="domainpropertiesrow-domaindrag-1-0"
                                                        index={0}
                                                        isClone={false}
                                                        isEnabled={true}
                                                        shouldRespectForcePress={false}
                                                      >
                                                        <Connect(Draggable)
                                                          canDragInteractiveElements={false}
                                                          draggableId="domainpropertiesrow-domaindrag-1-0"
                                                          index={0}
                                                          isClone={false}
                                                          isEnabled={true}
                                                          shouldRespectForcePress={false}
                                                        >
                                                          <Draggable
                                                            canDragInteractiveElements={false}
                                                            draggableId="domainpropertiesrow-domaindrag-1-0"
                                                            dropAnimationFinished={[Function]}
                                                            index={0}
                                                            isClone={false}
                                                            isEnabled={true}
                                                            mapped={
                                                              {
                                                                "combineTargetFor": null,
                                                                "offset": {
                                                                  "x": 0,
                                                                  "y": 0,
                                                                },
                                                                "shouldAnimateDisplacement": true,
                                                                "snapshot": {
                                                                  "combineTargetFor": null,
                                                                  "combineWith": null,
                                                                  "draggingOver": null,
                                                                  "dropAnimation": null,
                                                                  "isClone": false,
                                                                  "isDragging": false,
                                                                  "isDropAnimating": false,
                                                                  "mode": null,
                                                                },
                                                                "type": "SECONDARY",
                                                              }
                                                            }
                                                            shouldRespectForcePress={false}
                                                          >
                                                            <div
                                                              className="domain-field-row domain-row-border-default"
                                                              data-rbd-draggable-context-id="2"
                                                              data-rbd-draggable-id="domainpropertiesrow-domaindrag-1-0"
                                                              onTransitionEnd={null}
                                                              style={
                                                                {
                                                                  "transform": null,
                                                                  "transition": null,
                                                                }
                                                              }
                                                              tabIndex={0}
                                                            >
                                                              <Row
                                                                bsClass="row"
                                                                className="domain-row-container"
                                                                componentClass="div"
                                                                key="domainpropertiesrow-domainrow-1-0"
                                                              >
                                                                <div
                                                                  className="domain-row-container row"
                                                                >
                                                                  <AdvancedSettings
                                                                    defaultValueOptions={Immutable.List []}
                                                                    domainFormDisplayOptions={
                                                                      {
                                                                        "domainKindDisplayName": "assay design",
                                                                        "hideFilePropertyType": undefined,
                                                                        "hideInferFromFile": true,
                                                                        "hideStudyPropertyTypes": true,
                                                                        "textChoiceLockedForDomain": true,
                                                                      }
                                                                    }
                                                                    domainId={null}
                                                                    domainIndex={1}
                                                                    field={
                                                                      Immutable.Record {
                                                                        "conceptURI": undefined,
                                                                        "conditionalFormats": Immutable.List [],
                                                                        "defaultScale": undefined,
                                                                        "defaultValueType": undefined,
                                                                        "defaultValue": undefined,
                                                                        "defaultDisplayValue": undefined,
                                                                        "description": undefined,
                                                                        "dimension": undefined,
                                                                        "excludeFromShifting": false,
                                                                        "format": undefined,
                                                                        "hidden": false,
                                                                        "importAliases": undefined,
                                                                        "label": undefined,
                                                                        "lookupContainer": undefined,
                                                                        "lookupQuery": undefined,
                                                                        "lookupSchema": undefined,
                                                                        "lookupValidator": undefined,
                                                                        "measure": undefined,
                                                                        "mvEnabled": false,
                                                                        "name": "field1",
                                                                        "PHI": undefined,
                                                                        "propertyId": undefined,
                                                                        "propertyURI": undefined,
                                                                        "propertyValidators": Immutable.List [],
                                                                        "rangeValidators": Immutable.List [],
                                                                        "rangeURI": "xsd:string",
                                                                        "regexValidators": Immutable.List [],
                                                                        "textChoiceValidator": undefined,
                                                                        "recommendedVariable": false,
                                                                        "required": false,
                                                                        "scale": 4000,
                                                                        "URL": undefined,
                                                                        "shownInDetailsView": true,
                                                                        "shownInInsertView": true,
                                                                        "shownInUpdateView": true,
                                                                        "visible": true,
                                                                        "dataType": Immutable.Record {
                                                                          "conceptURI": undefined,
                                                                          "display": "Text",
                                                                          "name": "string",
                                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                                          "alternateRangeURI": "xsd:string",
                                                                          "shortDisplay": "String",
                                                                          "lookupSchema": undefined,
                                                                          "lookupQuery": undefined,
                                                                        },
                                                                        "lookupQueryValue": undefined,
                                                                        "lookupType": Immutable.Record {
                                                                          "conceptURI": undefined,
                                                                          "display": "Lookup",
                                                                          "name": "lookup",
                                                                          "rangeURI": "xsd:string",
                                                                          "alternateRangeURI": undefined,
                                                                          "shortDisplay": undefined,
                                                                          "lookupSchema": undefined,
                                                                          "lookupQuery": undefined,
                                                                        },
                                                                        "original": {
                                                                          "conceptURI": undefined,
                                                                          "dataType": Immutable.Record {
                                                                            "conceptURI": undefined,
                                                                            "display": "Text",
                                                                            "name": "string",
                                                                            "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                                            "alternateRangeURI": "xsd:string",
                                                                            "shortDisplay": "String",
                                                                            "lookupSchema": undefined,
                                                                            "lookupQuery": undefined,
                                                                          },
                                                                          "name": "field1",
                                                                          "rangeURI": undefined,
                                                                        },
                                                                        "updatedField": false,
                                                                        "isPrimaryKey": false,
                                                                        "lockType": "NotLocked",
                                                                        "wrappedColumnName": undefined,
                                                                        "disablePhiLevel": false,
                                                                        "lockExistingField": false,
                                                                        "sourceOntology": undefined,
                                                                        "conceptSubtree": undefined,
                                                                        "conceptLabelColumn": undefined,
                                                                        "conceptImportColumn": undefined,
                                                                        "principalConceptCode": undefined,
                                                                        "derivationDataScope": undefined,
                                                                        "selected": false,
                                                                        "scannable": false,
                                                                      }
                                                                    }
                                                                    helpNoun="field designer"
                                                                    index={0}
                                                                    label="field1"
                                                                    maxPhiLevel="Restricted"
                                                                    onApply={[Function]}
                                                                    onHide={[Function]}
                                                                    show={false}
                                                                    showDefaultValueSettings={false}
                                                                    successBsStyle="success"
                                                                  >
                                                                    <Modal
                                                                      animation={true}
                                                                      autoFocus={true}
                                                                      backdrop={true}
                                                                      bsClass="modal"
                                                                      dialogComponentClass={[Function]}
                                                                      enforceFocus={true}
                                                                      keyboard={true}
                                                                      manager={
                                                                        ModalManager {
                                                                          "add": [Function],
                                                                          "containers": [],
                                                                          "data": [],
                                                                          "handleContainerOverflow": true,
                                                                          "hideSiblingNodes": true,
                                                                          "isTopModal": [Function],
                                                                          "modals": [],
                                                                          "remove": [Function],
                                                                        }
                                                                      }
                                                                      onEnter={[Function]}
                                                                      onHide={[Function]}
                                                                      renderBackdrop={[Function]}
                                                                      restoreFocus={true}
                                                                      show={false}
                                                                    >
                                                                      <Modal
                                                                        autoFocus={true}
                                                                        backdrop={true}
                                                                        backdropClassName="modal-backdrop"
                                                                        backdropTransition={[Function]}
                                                                        containerClassName="modal-open"
                                                                        enforceFocus={true}
                                                                        keyboard={true}
                                                                        manager={
                                                                          ModalManager {
                                                                            "add": [Function],
                                                                            "containers": [],
                                                                            "data": [],
                                                                            "handleContainerOverflow": true,
                                                                            "hideSiblingNodes": true,
                                                                            "isTopModal": [Function],
                                                                            "modals": [],
                                                                            "remove": [Function],
                                                                          }
                                                                        }
                                                                        onEnter={[Function]}
                                                                        onEntering={[Function]}
                                                                        onExited={[Function]}
                                                                        onHide={[Function]}
                                                                        onMouseUp={[Function]}
                                                                        renderBackdrop={[Function]}
                                                                        restoreFocus={true}
                                                                        show={false}
                                                                        transition={[Function]}
                                                                      />
                                                                    </Modal>
                                                                  </AdvancedSettings>
                                                                  <div
                                                                    aria-describedby="rbd-hidden-text-2-hidden-text-10"
                                                                    className="domain-row-handle"
                                                                    data-rbd-drag-handle-context-id="2"
                                                                    data-rbd-drag-handle-draggable-id="domainpropertiesrow-domaindrag-1-0"
                                                                    draggable={false}
                                                                    onDragStart={[Function]}
                                                                    role="button"
                                                                    tabIndex={0}
                                                                  >
                                                                    <DragDropHandle>
                                                                      <div
                                                                        className="drag-drop-handle"
                                                                      >
                                                                        <span
                                                                          className="fa fa-ellipsis-v"
                                                                        />
                                                                        <span
                                                                          className="fa fa-ellipsis-v"
                                                                        />
                                                                      </div>
                                                                    </DragDropHandle>
                                                                  </div>
                                                                  <div
                                                                    className="domain-row-action-section"
                                                                  >
                                                                    <Checkbox
                                                                      bsClass="checkbox"
                                                                      checked={false}
                                                                      className="domain-field-check-icon"
                                                                      disabled={false}
                                                                      id="domainpropertiesrow-selected-1-0"
                                                                      inline={false}
                                                                      name="domainpropertiesrow-selected"
                                                                      onChange={[Function]}
                                                                      title=""
                                                                    >
                                                                      <div
                                                                        className="domain-field-check-icon checkbox"
                                                                      >
                                                                        <label
                                                                          title=""
                                                                        >
                                                                          <input
                                                                            checked={false}
                                                                            disabled={false}
                                                                            id="domainpropertiesrow-selected-1-0"
                                                                            name="domainpropertiesrow-selected"
                                                                            onChange={[Function]}
                                                                            type="checkbox"
                                                                          />
                                                                        </label>
                                                                      </div>
                                                                    </Checkbox>
                                                                    <FieldExpansionToggle
                                                                      cls="domain-field-expand-icon"
                                                                      collapsedTitle="Show additional field properties"
                                                                      expanded={false}
                                                                      expandedTitle="Hide additional field properties"
                                                                      id="domainpropertiesrow-expand-1-0"
                                                                      onClick={[Function]}
                                                                    >
                                                                      <div
                                                                        className="field-icon domain-field-expand-icon"
                                                                        id="domainpropertiesrow-expand-1-0"
                                                                        onClick={[Function]}
                                                                        title="Show additional field properties"
                                                                      >
                                                                        <span
                                                                          className="fa fa-lg fa-plus-square"
                                                                        />
                                                                      </div>
                                                                    </FieldExpansionToggle>
                                                                  </div>
                                                                  <div
                                                                    className="domain-row-main"
                                                                  >
                                                                    <Col
                                                                      bsClass="col"
                                                                      className="domain-row-base-fields domain-row-base-fields-position"
                                                                      componentClass="div"
                                                                      xs={6}
                                                                    >
                                                                      <div
                                                                        className="domain-row-base-fields domain-row-base-fields-position col-xs-6"
                                                                      >
                                                                        <div
                                                                          id="domainpropertiesrow-row-1-0"
                                                                        >
                                                                          <Col
                                                                            bsClass="col"
                                                                            componentClass="div"
                                                                            xs={6}
                                                                          >
                                                                            <div
                                                                              className="col-xs-6"
                                                                            >
                                                                              <FormControl
                                                                                bsClass="form-control"
                                                                                componentClass="input"
                                                                                disabled={false}
                                                                                id="domainpropertiesrow-name-1-0"
                                                                                name="domainpropertiesrow-name"
                                                                                onChange={[Function]}
                                                                                type="text"
                                                                                value="field1"
                                                                              >
                                                                                <input
                                                                                  className="form-control"
                                                                                  disabled={false}
                                                                                  id="domainpropertiesrow-name-1-0"
                                                                                  name="domainpropertiesrow-name"
                                                                                  onChange={[Function]}
                                                                                  type="text"
                                                                                  value="field1"
                                                                                />
                                                                              </FormControl>
                                                                            </div>
                                                                          </Col>
                                                                          <Col
                                                                            bsClass="col"
                                                                            componentClass="div"
                                                                            xs={4}
                                                                          >
                                                                            <div
                                                                              className="col-xs-4"
                                                                            >
                                                                              <FormControl
                                                                                bsClass="form-control"
                                                                                componentClass="select"
                                                                                disabled={false}
                                                                                id="domainpropertiesrow-type-1-0"
                                                                                name="domainpropertiesrow-type"
                                                                                onChange={[Function]}
                                                                                value="string"
                                                                              >
                                                                                <select
                                                                                  className="form-control"
                                                                                  disabled={false}
                                                                                  id="domainpropertiesrow-type-1-0"
                                                                                  name="domainpropertiesrow-type"
                                                                                  onChange={[Function]}
                                                                                  value="string"
                                                                                >
                                                                                  <option
                                                                                    key="boolean"
                                                                                    value="boolean"
                                                                                  >
                                                                                    Boolean
                                                                                  </option>
                                                                                  <option
                                                                                    key="dateTime"
                                                                                    value="dateTime"
                                                                                  >
                                                                                    Date Time
                                                                                  </option>
                                                                                  <option
                                                                                    key="double"
                                                                                    value="double"
                                                                                  >
                                                                                    Decimal (floating point)
                                                                                  </option>
                                                                                  <option
                                                                                    key="int"
                                                                                    value="int"
                                                                                  >
                                                                                    Integer
                                                                                  </option>
                                                                                  <option
                                                                                    key="multiLine"
                                                                                    value="multiLine"
                                                                                  >
                                                                                    Multi-Line Text
                                                                                  </option>
                                                                                  <option
                                                                                    key="sample"
                                                                                    value="sample"
                                                                                  >
                                                                                    Sample
                                                                                  </option>
                                                                                  <option
                                                                                    key="string"
                                                                                    value="string"
                                                                                  >
                                                                                    Text
                                                                                  </option>
                                                                                  <option
                                                                                    key="textChoice"
                                                                                    value="textChoice"
                                                                                  >
                                                                                    Text Choice
                                                                                  </option>
                                                                                  <option
                                                                                    key="users"
                                                                                    value="users"
                                                                                  >
                                                                                    User
                                                                                  </option>
                                                                                </select>
                                                                              </FormControl>
                                                                            </div>
                                                                          </Col>
                                                                          <Col
                                                                            bsClass="col"
                                                                            componentClass="div"
                                                                            xs={2}
                                                                          >
                                                                            <div
                                                                              className="col-xs-2"
                                                                            >
                                                                              <div
                                                                                className="domain-field-checkbox-container"
                                                                              >
                                                                                <Checkbox
                                                                                  bsClass="checkbox"
                                                                                  checked={false}
                                                                                  className="domain-field-checkbox"
                                                                                  disabled={false}
                                                                                  id="domainpropertiesrow-required-1-0"
                                                                                  inline={false}
                                                                                  name="domainpropertiesrow-required"
                                                                                  onChange={[Function]}
                                                                                  title=""
                                                                                >
                                                                                  <div
                                                                                    className="domain-field-checkbox checkbox"
                                                                                  >
                                                                                    <label
                                                                                      title=""
                                                                                    >
                                                                                      <input
                                                                                        checked={false}
                                                                                        disabled={false}
                                                                                        id="domainpropertiesrow-required-1-0"
                                                                                        name="domainpropertiesrow-required"
                                                                                        onChange={[Function]}
                                                                                        type="checkbox"
                                                                                      />
                                                                                    </label>
                                                                                  </div>
                                                                                </Checkbox>
                                                                              </div>
                                                                            </div>
                                                                          </Col>
                                                                        </div>
                                                                      </div>
                                                                    </Col>
                                                                    <Col
                                                                      bsClass="col"
                                                                      className="domain-row-details-container"
                                                                      componentClass="div"
                                                                      xs={6}
                                                                    >
                                                                      <div
                                                                        className="domain-row-details-container col-xs-6"
                                                                      >
                                                                        <div
                                                                          className="domain-field-details"
                                                                          id="domainpropertiesrow-details-1-0"
                                                                        >
                                                                          New Field
                                                                        </div>
                                                                        <div
                                                                          className="domain-field-buttons"
                                                                        >
                                                                          <Memo()
                                                                            iconCls="domain-field-delete-icon"
                                                                            id="domainpropertiesrow-delete-1-0"
                                                                            onDelete={[Function]}
                                                                            title="Remove field"
                                                                          >
                                                                            <span
                                                                              className="field-icon"
                                                                              id="domainpropertiesrow-delete-1-0"
                                                                              onClick={[Function]}
                                                                              title="Remove field"
                                                                            >
                                                                              <span
                                                                                className="fa fa-times-circle domain-field-delete-icon"
                                                                              />
                                                                            </span>
                                                                          </Memo()>
                                                                        </div>
                                                                      </div>
                                                                    </Col>
                                                                  </div>
                                                                </div>
                                                              </Row>
                                                              <Collapse
                                                                appear={false}
                                                                dimension="height"
                                                                getDimensionValue={[Function]}
                                                                in={false}
                                                                mountOnEnter={false}
                                                                onExited={[Function]}
                                                                onExiting={[Function]}
                                                                timeout={300}
                                                                unmountOnExit={false}
                                                              >
                                                                <Transition
                                                                  appear={false}
                                                                  aria-expanded={null}
                                                                  enter={true}
                                                                  exit={true}
                                                                  in={false}
                                                                  mountOnEnter={false}
                                                                  onEnter={[Function]}
                                                                  onEntered={[Function]}
                                                                  onEntering={[Function]}
                                                                  onExit={[Function]}
                                                                  onExited={[Function]}
                                                                  onExiting={[Function]}
                                                                  timeout={300}
                                                                  unmountOnExit={false}
                                                                >
                                                                  <div
                                                                    aria-expanded={null}
                                                                    className="collapse"
                                                                  >
                                                                    <DomainRowExpandedOptions
                                                                      appPropertiesOnly={true}
                                                                      domainFormDisplayOptions={
                                                                        {
                                                                          "domainKindDisplayName": "assay design",
                                                                          "hideFilePropertyType": undefined,
                                                                          "hideInferFromFile": true,
                                                                          "hideStudyPropertyTypes": true,
                                                                          "textChoiceLockedForDomain": true,
                                                                        }
                                                                      }
                                                                      domainIndex={1}
                                                                      field={
                                                                        Immutable.Record {
                                                                          "conceptURI": undefined,
                                                                          "conditionalFormats": Immutable.List [],
                                                                          "defaultScale": undefined,
                                                                          "defaultValueType": undefined,
                                                                          "defaultValue": undefined,
                                                                          "defaultDisplayValue": undefined,
                                                                          "description": undefined,
                                                                          "dimension": undefined,
                                                                          "excludeFromShifting": false,
                                                                          "format": undefined,
                                                                          "hidden": false,
                                                                          "importAliases": undefined,
                                                                          "label": undefined,
                                                                          "lookupContainer": undefined,
                                                                          "lookupQuery": undefined,
                                                                          "lookupSchema": undefined,
                                                                          "lookupValidator": undefined,
                                                                          "measure": undefined,
                                                                          "mvEnabled": false,
                                                                          "name": "field1",
                                                                          "PHI": undefined,
                                                                          "propertyId": undefined,
                                                                          "propertyURI": undefined,
                                                                          "propertyValidators": Immutable.List [],
                                                                          "rangeValidators": Immutable.List [],
                                                                          "rangeURI": "xsd:string",
                                                                          "regexValidators": Immutable.List [],
                                                                          "textChoiceValidator": undefined,
                                                                          "recommendedVariable": false,
                                                                          "required": false,
                                                                          "scale": 4000,
                                                                          "URL": undefined,
                                                                          "shownInDetailsView": true,
                                                                          "shownInInsertView": true,
                                                                          "shownInUpdateView": true,
                                                                          "visible": true,
                                                                          "dataType": Immutable.Record {
                                                                            "conceptURI": undefined,
                                                                            "display": "Text",
                                                                            "name": "string",
                                                                            "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                                            "alternateRangeURI": "xsd:string",
                                                                            "shortDisplay": "String",
                                                                            "lookupSchema": undefined,
                                                                            "lookupQuery": undefined,
                                                                          },
                                                                          "lookupQueryValue": undefined,
                                                                          "lookupType": Immutable.Record {
                                                                            "conceptURI": undefined,
                                                                            "display": "Lookup",
                                                                            "name": "lookup",
                                                                            "rangeURI": "xsd:string",
                                                                            "alternateRangeURI": undefined,
                                                                            "shortDisplay": undefined,
                                                                            "lookupSchema": undefined,
                                                                            "lookupQuery": undefined,
                                                                          },
                                                                          "original": {
                                                                            "conceptURI": undefined,
                                                                            "dataType": Immutable.Record {
                                                                              "conceptURI": undefined,
                                                                              "display": "Text",
                                                                              "name": "string",
                                                                              "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                                              "alternateRangeURI": "xsd:string",
                                                                              "shortDisplay": "String",
                                                                              "lookupSchema": undefined,
                                                                              "lookupQuery": undefined,
                                                                            },
                                                                            "name": "field1",
                                                                            "rangeURI": undefined,
                                                                          },
                                                                          "updatedField": false,
                                                                          "isPrimaryKey": false,
                                                                          "lockType": "NotLocked",
                                                                          "wrappedColumnName": undefined,
                                                                          "disablePhiLevel": false,
                                                                          "lockExistingField": false,
                                                                          "sourceOntology": undefined,
                                                                          "conceptSubtree": undefined,
                                                                          "conceptLabelColumn": undefined,
                                                                          "conceptImportColumn": undefined,
                                                                          "principalConceptCode": undefined,
                                                                          "derivationDataScope": undefined,
                                                                          "selected": false,
                                                                          "scannable": false,
                                                                        }
                                                                      }
                                                                      getDomainFields={[Function]}
                                                                      index={0}
                                                                      onChange={[Function]}
                                                                      onMultiChange={[Function]}
                                                                      showingModal={[Function]}
                                                                      successBsStyle="success"
                                                                    >
                                                                      <div
                                                                        className="domain-row-container"
                                                                      >
                                                                        <div
                                                                          className="domain-row-container-expand-spacer"
                                                                        />
                                                                        <div
                                                                          className="domain-row-container-expanded"
                                                                        >
                                                                          <Col
                                                                            bsClass="col"
                                                                            componentClass="div"
                                                                            xs={12}
                                                                          >
                                                                            <div
                                                                              className="col-xs-12"
                                                                            >
                                                                              <TextFieldOptions
                                                                                appPropertiesOnly={true}
                                                                                domainIndex={1}
                                                                                index={0}
                                                                                label="Text Options"
                                                                                lockType="NotLocked"
                                                                                onChange={[Function]}
                                                                                scale={4000}
                                                                                scannable={false}
                                                                              >
                                                                                <div>
                                                                                  <Row
                                                                                    bsClass="row"
                                                                                    componentClass="div"
                                                                                  >
                                                                                    <div
                                                                                      className="row"
                                                                                    >
                                                                                      <Col
                                                                                        bsClass="col"
                                                                                        componentClass="div"
                                                                                        xs={12}
                                                                                      >
                                                                                        <div
                                                                                          className="col-xs-12"
                                                                                        >
                                                                                          <SectionHeading
                                                                                            title="Text Options"
                                                                                          >
                                                                                            <div
                                                                                              className="domain-field-section-heading"
                                                                                            >
                                                                                              Text Options
                                                                                            </div>
                                                                                          </SectionHeading>
                                                                                        </div>
                                                                                      </Col>
                                                                                    </div>
                                                                                  </Row>
                                                                                  <Row
                                                                                    bsClass="row"
                                                                                    componentClass="div"
                                                                                  >
                                                                                    <div
                                                                                      className="row"
                                                                                    >
                                                                                      <Col
                                                                                        bsClass="col"
                                                                                        componentClass="div"
                                                                                        xs={12}
                                                                                      >
                                                                                        <div
                                                                                          className="col-xs-12"
                                                                                        >
                                                                                          <div
                                                                                            className="domain-field-label"
                                                                                          >
                                                                                            <DomainFieldLabel
                                                                                              helpTipBody={
                                                                                                <React.Fragment>
                                                                                                  <p>
                                                                                                    Sets the maximum character count for a text field.
                                                                                                  </p>
                                                                                                  <p>
                                                                                                    Anything over 4,000 characters will use the 'Unlimited' designation.
                                                                                                  </p>
                                                                                                </React.Fragment>
                                                                                              }
                                                                                              label="Maximum Text Length"
                                                                                            >
                                                                                              Maximum Text 
                                                                                              <span
                                                                                                className="domain-no-wrap"
                                                                                              >
                                                                                                Length
                                                                                                <Component
                                                                                                  id="tooltip"
                                                                                                  title="Maximum Text Length"
                                                                                                >
                                                                                                  <span
                                                                                                    className="label-help-target"
                                                                                                    onMouseOut={[Function]}
                                                                                                    onMouseOver={[Function]}
                                                                                                  >
                                                                                                    <span
                                                                                                      className="label-help-icon fa fa-question-circle"
                                                                                                    />
                                                                                                    <Overlay
                                                                                                      animation={[Function]}
                                                                                                      placement="right"
                                                                                                      rootClose={false}
                                                                                                      show={false}
                                                                                                      target={
                                                                                                        <span
                                                                                                          class="label-help-target"
                                                                                                        >
                                                                                                          <span
                                                                                                            class="label-help-icon fa fa-question-circle"
                                                                                                          />
                                                                                                        </span>
                                                                                                      }
                                                                                                    >
                                                                                                      <Overlay
                                                                                                        placement="right"
                                                                                                        rootClose={false}
                                                                                                        show={false}
                                                                                                        target={
                                                                                                          <span
                                                                                                            class="label-help-target"
                                                                                                          >
                                                                                                            <span
                                                                                                              class="label-help-icon fa fa-question-circle"
                                                                                                            />
                                                                                                          </span>
                                                                                                        }
                                                                                                        transition={[Function]}
                                                                                                      />
                                                                                                    </Overlay>
                                                                                                  </span>
                                                                                                </Component>
                                                                                              </span>
                                                                                            </DomainFieldLabel>
                                                                                          </div>
                                                                                        </div>
                                                                                      </Col>
                                                                                    </div>
                                                                                  </Row>
                                                                                  <Row
                                                                                    bsClass="row"
                                                                                    componentClass="div"
                                                                                  >
                                                                                    <div
                                                                                      className="row"
                                                                                    >
                                                                                      <Col
                                                                                        bsClass="col"
                                                                                        className="domain-text-options-col"
                                                                                        componentClass="div"
                                                                                        xs={12}
                                                                                      >
                                                                                        <div
                                                                                          className="domain-text-options-col col-xs-12"
                                                                                        >
                                                                                          <FormControl
                                                                                            bsClass="form-control"
                                                                                            checked={false}
                                                                                            className="domain-text-options-radio1 domain-field-float-left"
                                                                                            componentClass="input"
                                                                                            disabled={false}
                                                                                            id="domainpropertiesrow-maxLength-1-0"
                                                                                            onChange={[Function]}
                                                                                            type="radio"
                                                                                            value="maxLength"
                                                                                          >
                                                                                            <input
                                                                                              checked={false}
                                                                                              className="domain-text-options-radio1 domain-field-float-left form-control"
                                                                                              disabled={false}
                                                                                              id="domainpropertiesrow-maxLength-1-0"
                                                                                              onChange={[Function]}
                                                                                              type="radio"
                                                                                              value="maxLength"
                                                                                            />
                                                                                          </FormControl>
                                                                                          <div>
                                                                                            Unlimited
                                                                                          </div>
                                                                                        </div>
                                                                                      </Col>
                                                                                    </div>
                                                                                  </Row>
                                                                                  <Row
                                                                                    bsClass="row"
                                                                                    componentClass="div"
                                                                                  >
                                                                                    <div
                                                                                      className="row"
                                                                                    >
                                                                                      <Col
                                                                                        bsClass="col"
                                                                                        componentClass="div"
                                                                                        xs={12}
                                                                                      >
                                                                                        <div
                                                                                          className="col-xs-12"
                                                                                        >
                                                                                          <FormControl
                                                                                            bsClass="form-control"
                                                                                            checked={true}
                                                                                            className="domain-text-options-radio2 domain-field-float-left"
                                                                                            componentClass="input"
                                                                                            id="domainpropertiesrow-customLength-1-0"
                                                                                            onChange={[Function]}
                                                                                            type="radio"
                                                                                            value="customLength"
                                                                                          >
                                                                                            <input
                                                                                              checked={true}
                                                                                              className="domain-text-options-radio2 domain-field-float-left form-control"
                                                                                              id="domainpropertiesrow-customLength-1-0"
                                                                                              onChange={[Function]}
                                                                                              type="radio"
                                                                                              value="customLength"
                                                                                            />
                                                                                          </FormControl>
                                                                                          <span
                                                                                            className="domain-text-options-length domain-field-float-left"
                                                                                          >
                                                                                            No longer than 
                                                                                            <FormControl
                                                                                              bsClass="form-control"
                                                                                              className="domain-text-length-field"
                                                                                              componentClass="input"
                                                                                              disabled={false}
                                                                                              id="domainpropertiesrow-scale-1-0"
                                                                                              name="domainpropertiesrow-scale"
                                                                                              onChange={[Function]}
                                                                                              type="number"
                                                                                              value={4000}
                                                                                            >
                                                                                              <input
                                                                                                className="domain-text-length-field form-control"
                                                                                                disabled={false}
                                                                                                id="domainpropertiesrow-scale-1-0"
                                                                                                name="domainpropertiesrow-scale"
                                                                                                onChange={[Function]}
                                                                                                type="number"
                                                                                                value={4000}
                                                                                              />
                                                                                            </FormControl>
                                                                                             characters
                                                                                          </span>
                                                                                        </div>
                                                                                      </Col>
                                                                                    </div>
                                                                                  </Row>
                                                                                  <Memo()
                                                                                    appPropertiesOnly={true}
                                                                                    domainIndex={1}
                                                                                    index={0}
                                                                                    label="Text Options"
                                                                                    lockType="NotLocked"
                                                                                    onChange={[Function]}
                                                                                    scale={4000}
                                                                                    scannable={false}
                                                                                  />
                                                                                </div>
                                                                              </TextFieldOptions>
                                                                            </div>
                                                                          </Col>
                                                                          <Col
                                                                            bsClass="col"
                                                                            componentClass="div"
                                                                            xs={12}
                                                                          >
                                                                            <div
                                                                              className="col-xs-12"
                                                                            >
                                                                              <NameAndLinkingOptions
                                                                                appPropertiesOnly={true}
                                                                                domainFormDisplayOptions={
                                                                                  {
                                                                                    "domainKindDisplayName": "assay design",
                                                                                    "hideFilePropertyType": undefined,
                                                                                    "hideInferFromFile": true,
                                                                                    "hideStudyPropertyTypes": true,
                                                                                    "textChoiceLockedForDomain": true,
                                                                                  }
                                                                                }
                                                                                domainIndex={1}
                                                                                field={
                                                                                  Immutable.Record {
                                                                                    "conceptURI": undefined,
                                                                                    "conditionalFormats": Immutable.List [],
                                                                                    "defaultScale": undefined,
                                                                                    "defaultValueType": undefined,
                                                                                    "defaultValue": undefined,
                                                                                    "defaultDisplayValue": undefined,
                                                                                    "description": undefined,
                                                                                    "dimension": undefined,
                                                                                    "excludeFromShifting": false,
                                                                                    "format": undefined,
                                                                                    "hidden": false,
                                                                                    "importAliases": undefined,
                                                                                    "label": undefined,
                                                                                    "lookupContainer": undefined,
                                                                                    "lookupQuery": undefined,
                                                                                    "lookupSchema": undefined,
                                                                                    "lookupValidator": undefined,
                                                                                    "measure": undefined,
                                                                                    "mvEnabled": false,
                                                                                    "name": "field1",
                                                                                    "PHI": undefined,
                                                                                    "propertyId": undefined,
                                                                                    "propertyURI": undefined,
                                                                                    "propertyValidators": Immutable.List [],
                                                                                    "rangeValidators": Immutable.List [],
                                                                                    "rangeURI": "xsd:string",
                                                                                    "regexValidators": Immutable.List [],
                                                                                    "textChoiceValidator": undefined,
                                                                                    "recommendedVariable": false,
                                                                                    "required": false,
                                                                                    "scale": 4000,
                                                                                    "URL": undefined,
                                                                                    "shownInDetailsView": true,
                                                                                    "shownInInsertView": true,
                                                                                    "shownInUpdateView": true,
                                                                                    "visible": true,
                                                                                    "dataType": Immutable.Record {
                                                                                      "conceptURI": undefined,
                                                                                      "display": "Text",
                                                                                      "name": "string",
                                                                                      "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                                                      "alternateRangeURI": "xsd:string",
                                                                                      "shortDisplay": "String",
                                                                                      "lookupSchema": undefined,
                                                                                      "lookupQuery": undefined,
                                                                                    },
                                                                                    "lookupQueryValue": undefined,
                                                                                    "lookupType": Immutable.Record {
                                                                                      "conceptURI": undefined,
                                                                                      "display": "Lookup",
                                                                                      "name": "lookup",
                                                                                      "rangeURI": "xsd:string",
                                                                                      "alternateRangeURI": undefined,
                                                                                      "shortDisplay": undefined,
                                                                                      "lookupSchema": undefined,
                                                                                      "lookupQuery": undefined,
                                                                                    },
                                                                                    "original": {
                                                                                      "conceptURI": undefined,
                                                                                      "dataType": Immutable.Record {
                                                                                        "conceptURI": undefined,
                                                                                        "display": "Text",
                                                                                        "name": "string",
                                                                                        "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                                                        "alternateRangeURI": "xsd:string",
                                                                                        "shortDisplay": "String",
                                                                                        "lookupSchema": undefined,
                                                                                        "lookupQuery": undefined,
                                                                                      },
                                                                                      "name": "field1",
                                                                                      "rangeURI": undefined,
                                                                                    },
                                                                                    "updatedField": false,
                                                                                    "isPrimaryKey": false,
                                                                                    "lockType": "NotLocked",
                                                                                    "wrappedColumnName": undefined,
                                                                                    "disablePhiLevel": false,
                                                                                    "lockExistingField": false,
                                                                                    "sourceOntology": undefined,
                                                                                    "conceptSubtree": undefined,
                                                                                    "conceptLabelColumn": undefined,
                                                                                    "conceptImportColumn": undefined,
                                                                                    "principalConceptCode": undefined,
                                                                                    "derivationDataScope": undefined,
                                                                                    "selected": false,
                                                                                    "scannable": false,
                                                                                  }
                                                                                }
                                                                                index={0}
                                                                                onChange={[Function]}
                                                                              >
                                                                                <div>
                                                                                  <Row
                                                                                    bsClass="row"
                                                                                    componentClass="div"
                                                                                  >
                                                                                    <div
                                                                                      className="row"
                                                                                    >
                                                                                      <Col
                                                                                        bsClass="col"
                                                                                        componentClass="div"
                                                                                        xs={12}
                                                                                      >
                                                                                        <div
                                                                                          className="col-xs-12"
                                                                                        >
                                                                                          <SectionHeading
                                                                                            cls="domain-field-section-hdr"
                                                                                            title="Name and Linking Options"
                                                                                          >
                                                                                            <div
                                                                                              className="domain-field-section-heading domain-field-section-hdr"
                                                                                            >
                                                                                              Name and Linking Options
                                                                                            </div>
                                                                                          </SectionHeading>
                                                                                        </div>
                                                                                      </Col>
                                                                                    </div>
                                                                                  </Row>
                                                                                  <Row
                                                                                    bsClass="row"
                                                                                    componentClass="div"
                                                                                  >
                                                                                    <div
                                                                                      className="row"
                                                                                    >
                                                                                      <Col
                                                                                        bsClass="col"
                                                                                        componentClass="div"
                                                                                        xs={5}
                                                                                      >
                                                                                        <div
                                                                                          className="col-xs-5"
                                                                                        >
                                                                                          <div
                                                                                            className="domain-field-label"
                                                                                          >
                                                                                            Description
                                                                                          </div>
                                                                                          <FormControl
                                                                                            bsClass="form-control"
                                                                                            className="form-control textarea-noresize"
                                                                                            componentClass="textarea"
                                                                                            disabled={false}
                                                                                            id="domainpropertiesrow-description-1-0"
                                                                                            name="domainpropertiesrow-description"
                                                                                            onChange={[Function]}
                                                                                            rows={4}
                                                                                            value=""
                                                                                          >
                                                                                            <textarea
                                                                                              className="form-control textarea-noresize form-control"
                                                                                              disabled={false}
                                                                                              id="domainpropertiesrow-description-1-0"
                                                                                              name="domainpropertiesrow-description"
                                                                                              onChange={[Function]}
                                                                                              rows={4}
                                                                                              value=""
                                                                                            />
                                                                                          </FormControl>
                                                                                        </div>
                                                                                      </Col>
                                                                                      <Col
                                                                                        bsClass="col"
                                                                                        componentClass="div"
                                                                                        xs={3}
                                                                                      >
                                                                                        <div
                                                                                          className="col-xs-3"
                                                                                        >
                                                                                          <div
                                                                                            className="domain-field-label"
                                                                                          >
                                                                                            Label
                                                                                          </div>
                                                                                          <FormControl
                                                                                            bsClass="form-control"
                                                                                            componentClass="input"
                                                                                            disabled={false}
                                                                                            id="domainpropertiesrow-label-1-0"
                                                                                            name="domainpropertiesrow-label"
                                                                                            onChange={[Function]}
                                                                                            type="text"
                                                                                            value=""
                                                                                          >
                                                                                            <input
                                                                                              className="form-control"
                                                                                              disabled={false}
                                                                                              id="domainpropertiesrow-label-1-0"
                                                                                              name="domainpropertiesrow-label"
                                                                                              onChange={[Function]}
                                                                                              type="text"
                                                                                              value=""
                                                                                            />
                                                                                          </FormControl>
                                                                                          <div
                                                                                            className="domain-field-label"
                                                                                          >
                                                                                            <DomainFieldLabel
                                                                                              helpTipBody={
                                                                                                <React.Fragment>
                                                                                                  Define alternate field names to be used when importing from a file.
                                                                                                  <br />
                                                                                                  <br />
                                                                                                  Multiple aliases may be separated by spaces or commas. To define an alias that contains spaces, use double-quotes (") around it.
                                                                                                </React.Fragment>
                                                                                              }
                                                                                              label="Import Aliases"
                                                                                            >
                                                                                              Import 
                                                                                              <span
                                                                                                className="domain-no-wrap"
                                                                                              >
                                                                                                Aliases
                                                                                                <Component
                                                                                                  id="tooltip"
                                                                                                  title="Import Aliases"
                                                                                                >
                                                                                                  <span
                                                                                                    className="label-help-target"
                                                                                                    onMouseOut={[Function]}
                                                                                                    onMouseOver={[Function]}
                                                                                                  >
                                                                                                    <span
                                                                                                      className="label-help-icon fa fa-question-circle"
                                                                                                    />
                                                                                                    <Overlay
                                                                                                      animation={[Function]}
                                                                                                      placement="right"
                                                                                                      rootClose={false}
                                                                                                      show={false}
                                                                                                    >
                                                                                                      <Overlay
                                                                                                        placement="right"
                                                                                                        rootClose={false}
                                                                                                        show={false}
                                                                                                        transition={[Function]}
                                                                                                      />
                                                                                                    </Overlay>
                                                                                                  </span>
                                                                                                </Component>
                                                                                              </span>
                                                                                            </DomainFieldLabel>
                                                                                          </div>
                                                                                          <FormControl
                                                                                            bsClass="form-control"
                                                                                            componentClass="input"
                                                                                            disabled={false}
                                                                                            id="domainpropertiesrow-importAliases-1-0"
                                                                                            name="domainpropertiesrow-importAliases"
                                                                                            onChange={[Function]}
                                                                                            type="text"
                                                                                            value=""
                                                                                          >
                                                                                            <input
                                                                                              className="form-control"
                                                                                              disabled={false}
                                                                                              id="domainpropertiesrow-importAliases-1-0"
                                                                                              name="domainpropertiesrow-importAliases"
                                                                                              onChange={[Function]}
                                                                                              type="text"
                                                                                              value=""
                                                                                            />
                                                                                          </FormControl>
                                                                                        </div>
                                                                                      </Col>
                                                                                      <Col
                                                                                        bsClass="col"
                                                                                        componentClass="div"
                                                                                        xs={4}
                                                                                      >
                                                                                        <div
                                                                                          className="col-xs-4"
                                                                                        >
                                                                                          <div
                                                                                            className="domain-field-label"
                                                                                          >
                                                                                            <DomainFieldLabel
                                                                                              helpTipBody={
                                                                                                <React.Fragment>
                                                                                                  Use this to change the display of the field value within a data grid into a link. Multiple formats are supported, which allows ways to easily substitute and link to other locations in LabKey.
                                                                                                  <br />
                                                                                                  <br />
                                                                                                  Learn more about using 
                                                                                                  <HelpLink
                                                                                                    topic="urlEncoding"
                                                                                                  >
                                                                                                    URL Formatting Options
                                                                                                  </HelpLink>
                                                                                                  .
                                                                                                </React.Fragment>
                                                                                              }
                                                                                              label="URL"
                                                                                            >
                                                                                              <span
                                                                                                className="domain-no-wrap"
                                                                                              >
                                                                                                URL
                                                                                                <Component
                                                                                                  id="tooltip"
                                                                                                  title="URL"
                                                                                                >
                                                                                                  <span
                                                                                                    className="label-help-target"
                                                                                                    onMouseOut={[Function]}
                                                                                                    onMouseOver={[Function]}
                                                                                                  >
                                                                                                    <span
                                                                                                      className="label-help-icon fa fa-question-circle"
                                                                                                    />
                                                                                                    <Overlay
                                                                                                      animation={[Function]}
                                                                                                      placement="right"
                                                                                                      rootClose={false}
                                                                                                      show={false}
                                                                                                    >
                                                                                                      <Overlay
                                                                                                        placement="right"
                                                                                                        rootClose={false}
                                                                                                        show={false}
                                                                                                        transition={[Function]}
                                                                                                      />
                                                                                                    </Overlay>
                                                                                                  </span>
                                                                                                </Component>
                                                                                              </span>
                                                                                            </DomainFieldLabel>
                                                                                          </div>
                                                                                          <FormControl
                                                                                            bsClass="form-control"
                                                                                            componentClass="input"
                                                                                            disabled={false}
                                                                                            id="domainpropertiesrow-URL-1-0"
                                                                                            name="domainpropertiesrow-URL"
                                                                                            onChange={[Function]}
                                                                                            type="text"
                                                                                            value=""
                                                                                          >
                                                                                            <input
                                                                                              className="form-control"
                                                                                              disabled={false}
                                                                                              id="domainpropertiesrow-URL-1-0"
                                                                                              name="domainpropertiesrow-URL"
                                                                                              onChange={[Function]}
                                                                                              type="text"
                                                                                              value=""
                                                                                            />
                                                                                          </FormControl>
                                                                                        </div>
                                                                                      </Col>
                                                                                    </div>
                                                                                  </Row>
                                                                                </div>
                                                                              </NameAndLinkingOptions>
                                                                            </div>
                                                                          </Col>
                                                                          <Col
                                                                            bsClass="col"
                                                                            componentClass="div"
                                                                            xs={12}
                                                                          >
                                                                            <div
                                                                              className="col-xs-12"
                                                                            >
                                                                              <ConditionalFormattingAndValidation
                                                                                domainFormDisplayOptions={
                                                                                  {
                                                                                    "domainKindDisplayName": "assay design",
                                                                                    "hideFilePropertyType": undefined,
                                                                                    "hideInferFromFile": true,
                                                                                    "hideStudyPropertyTypes": true,
                                                                                    "textChoiceLockedForDomain": true,
                                                                                  }
                                                                                }
                                                                                domainIndex={1}
                                                                                field={
                                                                                  Immutable.Record {
                                                                                    "conceptURI": undefined,
                                                                                    "conditionalFormats": Immutable.List [],
                                                                                    "defaultScale": undefined,
                                                                                    "defaultValueType": undefined,
                                                                                    "defaultValue": undefined,
                                                                                    "defaultDisplayValue": undefined,
                                                                                    "description": undefined,
                                                                                    "dimension": undefined,
                                                                                    "excludeFromShifting": false,
                                                                                    "format": undefined,
                                                                                    "hidden": false,
                                                                                    "importAliases": undefined,
                                                                                    "label": undefined,
                                                                                    "lookupContainer": undefined,
                                                                                    "lookupQuery": undefined,
                                                                                    "lookupSchema": undefined,
                                                                                    "lookupValidator": undefined,
                                                                                    "measure": undefined,
                                                                                    "mvEnabled": false,
                                                                                    "name": "field1",
                                                                                    "PHI": undefined,
                                                                                    "propertyId": undefined,
                                                                                    "propertyURI": undefined,
                                                                                    "propertyValidators": Immutable.List [],
                                                                                    "rangeValidators": Immutable.List [],
                                                                                    "rangeURI": "xsd:string",
                                                                                    "regexValidators": Immutable.List [],
                                                                                    "textChoiceValidator": undefined,
                                                                                    "recommendedVariable": false,
                                                                                    "required": false,
                                                                                    "scale": 4000,
                                                                                    "URL": undefined,
                                                                                    "shownInDetailsView": true,
                                                                                    "shownInInsertView": true,
                                                                                    "shownInUpdateView": true,
                                                                                    "visible": true,
                                                                                    "dataType": Immutable.Record {
                                                                                      "conceptURI": undefined,
                                                                                      "display": "Text",
                                                                                      "name": "string",
                                                                                      "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                                                      "alternateRangeURI": "xsd:string",
                                                                                      "shortDisplay": "String",
                                                                                      "lookupSchema": undefined,
                                                                                      "lookupQuery": undefined,
                                                                                    },
                                                                                    "lookupQueryValue": undefined,
                                                                                    "lookupType": Immutable.Record {
                                                                                      "conceptURI": undefined,
                                                                                      "display": "Lookup",
                                                                                      "name": "lookup",
                                                                                      "rangeURI": "xsd:string",
                                                                                      "alternateRangeURI": undefined,
                                                                                      "shortDisplay": undefined,
                                                                                      "lookupSchema": undefined,
                                                                                      "lookupQuery": undefined,
                                                                                    },
                                                                                    "original": {
                                                                                      "conceptURI": undefined,
                                                                                      "dataType": Immutable.Record {
                                                                                        "conceptURI": undefined,
                                                                                        "display": "Text",
                                                                                        "name": "string",
                                                                                        "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                                                        "alternateRangeURI": "xsd:string",
                                                                                        "shortDisplay": "String",
                                                                                        "lookupSchema": undefined,
                                                                                        "lookupQuery": undefined,
                                                                                      },
                                                                                      "name": "field1",
                                                                                      "rangeURI": undefined,
                                                                                    },
                                                                                    "updatedField": false,
                                                                                    "isPrimaryKey": false,
                                                                                    "lockType": "NotLocked",
                                                                                    "wrappedColumnName": undefined,
                                                                                    "disablePhiLevel": false,
                                                                                    "lockExistingField": false,
                                                                                    "sourceOntology": undefined,
                                                                                    "conceptSubtree": undefined,
                                                                                    "conceptLabelColumn": undefined,
                                                                                    "conceptImportColumn": undefined,
                                                                                    "principalConceptCode": undefined,
                                                                                    "derivationDataScope": undefined,
                                                                                    "selected": false,
                                                                                    "scannable": false,
                                                                                  }
                                                                                }
                                                                                index={0}
                                                                                onChange={[Function]}
                                                                                showingModal={[Function]}
                                                                                successBsStyle="success"
                                                                              >
                                                                                <div>
                                                                                  <Row
                                                                                    bsClass="row"
                                                                                    componentClass="div"
                                                                                  >
                                                                                    <div
                                                                                      className="row"
                                                                                    >
                                                                                      <Col
                                                                                        bsClass="col"
                                                                                        componentClass="div"
                                                                                        xs={12}
                                                                                      >
                                                                                        <div
                                                                                          className="col-xs-12"
                                                                                        >
                                                                                          <SectionHeading
                                                                                            cls="domain-field-section-hdr"
                                                                                            title="Conditional Formatting and Validation Options"
                                                                                          >
                                                                                            <div
                                                                                              className="domain-field-section-heading domain-field-section-hdr"
                                                                                            >
                                                                                              Conditional Formatting and Validation Options
                                                                                            </div>
                                                                                          </SectionHeading>
                                                                                        </div>
                                                                                      </Col>
                                                                                    </div>
                                                                                  </Row>
                                                                                  <Row
                                                                                    bsClass="row"
                                                                                    componentClass="div"
                                                                                  >
                                                                                    <div
                                                                                      className="row"
                                                                                    >
                                                                                      <Col
                                                                                        bsClass="col"
                                                                                        componentClass="div"
                                                                                        xs={12}
                                                                                      >
                                                                                        <div
                                                                                          className="col-xs-12"
                                                                                        >
                                                                                          <div
                                                                                            className="domain-validation-group"
                                                                                          >
                                                                                            <div
                                                                                              className="domain-field-label domain-no-wrap"
                                                                                            >
                                                                                              <DomainFieldLabel
                                                                                                helpTipBody={<ConditionalFormatHelpText />}
                                                                                                label="Create Conditional Format Criteria"
                                                                                              >
                                                                                                Create Conditional Format 
                                                                                                <span
                                                                                                  className="domain-no-wrap"
                                                                                                >
                                                                                                  Criteria
                                                                                                  <Component
                                                                                                    id="tooltip"
                                                                                                    title="Create Conditional Format Criteria"
                                                                                                  >
                                                                                                    <span
                                                                                                      className="label-help-target"
                                                                                                      onMouseOut={[Function]}
                                                                                                      onMouseOver={[Function]}
                                                                                                    >
                                                                                                      <span
                                                                                                        className="label-help-icon fa fa-question-circle"
                                                                                                      />
                                                                                                      <Overlay
                                                                                                        animation={[Function]}
                                                                                                        placement="right"
                                                                                                        rootClose={false}
                                                                                                        show={false}
                                                                                                      >
                                                                                                        <Overlay
                                                                                                          placement="right"
                                                                                                          rootClose={false}
                                                                                                          show={false}
                                                                                                          transition={[Function]}
                                                                                                        />
                                                                                                      </Overlay>
                                                                                                    </span>
                                                                                                  </Component>
                                                                                                </span>
                                                                                              </DomainFieldLabel>
                                                                                            </div>
                                                                                            <div>
                                                                                              <Button
                                                                                                active={false}
                                                                                                block={false}
                                                                                                bsClass="btn"
                                                                                                bsStyle="default"
                                                                                                className="domain-validation-button"
                                                                                                disabled={false}
                                                                                                id="domainpropertiesrow-conditionalFormat-1-0"
                                                                                                name="domainpropertiesrow-conditionalFormat"
                                                                                                onClick={[Function]}
                                                                                              >
                                                                                                <button
                                                                                                  className="domain-validation-button btn btn-default"
                                                                                                  disabled={false}
                                                                                                  id="domainpropertiesrow-conditionalFormat-1-0"
                                                                                                  name="domainpropertiesrow-conditionalFormat"
                                                                                                  onClick={[Function]}
                                                                                                  type="button"
                                                                                                >
                                                                                                  Add Format
                                                                                                </button>
                                                                                              </Button>
                                                                                              <span
                                                                                                className="domain-text-label"
                                                                                              >
                                                                                                None Set
                                                                                              </span>
                                                                                            </div>
                                                                                          </div>
                                                                                          <div
                                                                                            className="domain-validation-group"
                                                                                          >
                                                                                            <div
                                                                                              className="domain-field-label domain-no-wrap"
                                                                                            >
                                                                                              <DomainFieldLabel
                                                                                                helpTipBody={<RegexValidatorHelpText />}
                                                                                                label="Create Regular Expression Validator"
                                                                                              >
                                                                                                Create Regular Expression 
                                                                                                <span
                                                                                                  className="domain-no-wrap"
                                                                                                >
                                                                                                  Validator
                                                                                                  <Component
                                                                                                    id="tooltip"
                                                                                                    title="Create Regular Expression Validator"
                                                                                                  >
                                                                                                    <span
                                                                                                      className="label-help-target"
                                                                                                      onMouseOut={[Function]}
                                                                                                      onMouseOver={[Function]}
                                                                                                    >
                                                                                                      <span
                                                                                                        className="label-help-icon fa fa-question-circle"
                                                                                                      />
                                                                                                      <Overlay
                                                                                                        animation={[Function]}
                                                                                                        placement="right"
                                                                                                        rootClose={false}
                                                                                                        show={false}
                                                                                                      >
                                                                                                        <Overlay
                                                                                                          placement="right"
                                                                                                          rootClose={false}
                                                                                                          show={false}
                                                                                                          transition={[Function]}
                                                                                                        />
                                                                                                      </Overlay>
                                                                                                    </span>
                                                                                                  </Component>
                                                                                                </span>
                                                                                              </DomainFieldLabel>
                                                                                            </div>
                                                                                            <div>
                                                                                              <Button
                                                                                                active={false}
                                                                                                block={false}
                                                                                                bsClass="btn"
                                                                                                bsStyle="default"
                                                                                                className="domain-validation-button"
                                                                                                disabled={false}
                                                                                                id="domainpropertiesrow-regexValidator-1-0"
                                                                                                name="domainpropertiesrow-regexValidator"
                                                                                                onClick={[Function]}
                                                                                              >
                                                                                                <button
                                                                                                  className="domain-validation-button btn btn-default"
                                                                                                  disabled={false}
                                                                                                  id="domainpropertiesrow-regexValidator-1-0"
                                                                                                  name="domainpropertiesrow-regexValidator"
                                                                                                  onClick={[Function]}
                                                                                                  type="button"
                                                                                                >
                                                                                                  Add Regex
                                                                                                </button>
                                                                                              </Button>
                                                                                              <span
                                                                                                className="domain-text-label"
                                                                                              >
                                                                                                None Set
                                                                                              </span>
                                                                                            </div>
                                                                                          </div>
                                                                                        </div>
                                                                                      </Col>
                                                                                    </div>
                                                                                  </Row>
                                                                                </div>
                                                                              </ConditionalFormattingAndValidation>
                                                                            </div>
                                                                          </Col>
                                                                        </div>
                                                                      </div>
                                                                    </DomainRowExpandedOptions>
                                                                  </div>
                                                                </Transition>
                                                              </Collapse>
                                                            </div>
                                                          </Draggable>
                                                        </Connect(Draggable)>
                                                      </PrivateDraggable>
                                                    </PublicDraggable>
                                                  </DomainRow>
                                                  <DomainRow
                                                    appPropertiesOnly={true}
                                                    availableTypes={
                                                      Immutable.List [
                                                        Immutable.Record {
                                                          "conceptURI": undefined,
                                                          "display": "Text",
                                                          "name": "string",
                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                          "alternateRangeURI": "xsd:string",
                                                          "shortDisplay": "String",
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                        Immutable.Record {
                                                          "conceptURI": undefined,
                                                          "display": "Multi-Line Text",
                                                          "name": "multiLine",
                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#multiLine",
                                                          "alternateRangeURI": undefined,
                                                          "shortDisplay": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                        Immutable.Record {
                                                          "conceptURI": undefined,
                                                          "display": "Boolean",
                                                          "name": "boolean",
                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#boolean",
                                                          "alternateRangeURI": "xsd:boolean",
                                                          "shortDisplay": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                        Immutable.Record {
                                                          "conceptURI": undefined,
                                                          "display": "Integer",
                                                          "name": "int",
                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                                          "alternateRangeURI": "xsd:int",
                                                          "shortDisplay": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                        Immutable.Record {
                                                          "conceptURI": undefined,
                                                          "display": "Decimal (floating point)",
                                                          "name": "double",
                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#double",
                                                          "alternateRangeURI": "xsd:double",
                                                          "shortDisplay": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                        Immutable.Record {
                                                          "conceptURI": undefined,
                                                          "display": "Date Time",
                                                          "name": "dateTime",
                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                                                          "alternateRangeURI": "xsd:dateTime",
                                                          "shortDisplay": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                        Immutable.Record {
                                                          "conceptURI": "http://www.labkey.org/exp/xml#flag",
                                                          "display": "Flag",
                                                          "name": "flag",
                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                          "alternateRangeURI": undefined,
                                                          "shortDisplay": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                        Immutable.Record {
                                                          "conceptURI": undefined,
                                                          "display": "User",
                                                          "name": "users",
                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                                          "alternateRangeURI": undefined,
                                                          "shortDisplay": undefined,
                                                          "lookupSchema": "core",
                                                          "lookupQuery": "users",
                                                        },
                                                        Immutable.Record {
                                                          "conceptURI": "http://cpas.labkey.com/Study#ParticipantId",
                                                          "display": "Subject/Participant",
                                                          "name": "ParticipantId",
                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                          "alternateRangeURI": undefined,
                                                          "shortDisplay": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                        Immutable.Record {
                                                          "conceptURI": undefined,
                                                          "display": "Lookup",
                                                          "name": "lookup",
                                                          "rangeURI": undefined,
                                                          "alternateRangeURI": undefined,
                                                          "shortDisplay": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                        Immutable.Record {
                                                          "conceptURI": "http://www.labkey.org/exp/xml#sample",
                                                          "display": "Sample",
                                                          "name": "sample",
                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                                          "alternateRangeURI": undefined,
                                                          "shortDisplay": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                        Immutable.Record {
                                                          "conceptURI": "http://www.labkey.org/types#textChoice",
                                                          "display": "Text Choice",
                                                          "name": "textChoice",
                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                          "alternateRangeURI": undefined,
                                                          "shortDisplay": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                      ]
                                                    }
                                                    defaultValueOptions={Immutable.List []}
                                                    domainFormDisplayOptions={
                                                      {
                                                        "domainKindDisplayName": "assay design",
                                                        "hideFilePropertyType": undefined,
                                                        "hideInferFromFile": true,
                                                        "hideStudyPropertyTypes": true,
                                                        "textChoiceLockedForDomain": true,
                                                      }
                                                    }
                                                    domainId={null}
                                                    domainIndex={1}
                                                    dragging={false}
                                                    expandTransition={300}
                                                    expanded={false}
                                                    field={
                                                      Immutable.Record {
                                                        "conceptURI": undefined,
                                                        "conditionalFormats": Immutable.List [],
                                                        "defaultScale": undefined,
                                                        "defaultValueType": undefined,
                                                        "defaultValue": undefined,
                                                        "defaultDisplayValue": undefined,
                                                        "description": undefined,
                                                        "dimension": undefined,
                                                        "excludeFromShifting": false,
                                                        "format": undefined,
                                                        "hidden": false,
                                                        "importAliases": undefined,
                                                        "label": undefined,
                                                        "lookupContainer": undefined,
                                                        "lookupQuery": undefined,
                                                        "lookupSchema": undefined,
                                                        "lookupValidator": undefined,
                                                        "measure": undefined,
                                                        "mvEnabled": false,
                                                        "name": "field2",
                                                        "PHI": undefined,
                                                        "propertyId": undefined,
                                                        "propertyURI": undefined,
                                                        "propertyValidators": Immutable.List [],
                                                        "rangeValidators": Immutable.List [],
                                                        "rangeURI": "xsd:int",
                                                        "regexValidators": Immutable.List [],
                                                        "textChoiceValidator": undefined,
                                                        "recommendedVariable": false,
                                                        "required": false,
                                                        "scale": 4000,
                                                        "URL": undefined,
                                                        "shownInDetailsView": true,
                                                        "shownInInsertView": true,
                                                        "shownInUpdateView": true,
                                                        "visible": true,
                                                        "dataType": Immutable.Record {
                                                          "conceptURI": undefined,
                                                          "display": "Integer",
                                                          "name": "int",
                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                                          "alternateRangeURI": "xsd:int",
                                                          "shortDisplay": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                        "lookupQueryValue": undefined,
                                                        "lookupType": Immutable.Record {
                                                          "conceptURI": undefined,
                                                          "display": "Lookup",
                                                          "name": "lookup",
                                                          "rangeURI": "xsd:int",
                                                          "alternateRangeURI": undefined,
                                                          "shortDisplay": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                        "original": {
                                                          "conceptURI": undefined,
                                                          "dataType": Immutable.Record {
                                                            "conceptURI": undefined,
                                                            "display": "Integer",
                                                            "name": "int",
                                                            "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                                            "alternateRangeURI": "xsd:int",
                                                            "shortDisplay": undefined,
                                                            "lookupSchema": undefined,
                                                            "lookupQuery": undefined,
                                                          },
                                                          "name": "field2",
                                                          "rangeURI": undefined,
                                                        },
                                                        "updatedField": false,
                                                        "isPrimaryKey": false,
                                                        "lockType": "NotLocked",
                                                        "wrappedColumnName": undefined,
                                                        "disablePhiLevel": false,
                                                        "lockExistingField": false,
                                                        "sourceOntology": undefined,
                                                        "conceptSubtree": undefined,
                                                        "conceptLabelColumn": undefined,
                                                        "conceptImportColumn": undefined,
                                                        "principalConceptCode": undefined,
                                                        "derivationDataScope": undefined,
                                                        "selected": false,
                                                        "scannable": false,
                                                      }
                                                    }
                                                    fieldDetailsInfo={{}}
                                                    getDomainFields={[Function]}
                                                    helpNoun="field designer"
                                                    index={1}
                                                    key="domain-row-key-1"
                                                    maxPhiLevel="Restricted"
                                                    onChange={[Function]}
                                                    onDelete={[Function]}
                                                    onExpand={[Function]}
                                                    showDefaultValueSettings={false}
                                                    successBsStyle="success"
                                                  >
                                                    <PublicDraggable
                                                      draggableId="domainpropertiesrow-domaindrag-1-1"
                                                      index={1}
                                                    >
                                                      <PrivateDraggable
                                                        canDragInteractiveElements={false}
                                                        draggableId="domainpropertiesrow-domaindrag-1-1"
                                                        index={1}
                                                        isClone={false}
                                                        isEnabled={true}
                                                        shouldRespectForcePress={false}
                                                      >
                                                        <Connect(Draggable)
                                                          canDragInteractiveElements={false}
                                                          draggableId="domainpropertiesrow-domaindrag-1-1"
                                                          index={1}
                                                          isClone={false}
                                                          isEnabled={true}
                                                          shouldRespectForcePress={false}
                                                        >
                                                          <Draggable
                                                            canDragInteractiveElements={false}
                                                            draggableId="domainpropertiesrow-domaindrag-1-1"
                                                            dropAnimationFinished={[Function]}
                                                            index={1}
                                                            isClone={false}
                                                            isEnabled={true}
                                                            mapped={
                                                              {
                                                                "combineTargetFor": null,
                                                                "offset": {
                                                                  "x": 0,
                                                                  "y": 0,
                                                                },
                                                                "shouldAnimateDisplacement": true,
                                                                "snapshot": {
                                                                  "combineTargetFor": null,
                                                                  "combineWith": null,
                                                                  "draggingOver": null,
                                                                  "dropAnimation": null,
                                                                  "isClone": false,
                                                                  "isDragging": false,
                                                                  "isDropAnimating": false,
                                                                  "mode": null,
                                                                },
                                                                "type": "SECONDARY",
                                                              }
                                                            }
                                                            shouldRespectForcePress={false}
                                                          >
                                                            <div
                                                              className="domain-field-row domain-row-border-default"
                                                              data-rbd-draggable-context-id="2"
                                                              data-rbd-draggable-id="domainpropertiesrow-domaindrag-1-1"
                                                              onTransitionEnd={null}
                                                              style={
                                                                {
                                                                  "transform": null,
                                                                  "transition": null,
                                                                }
                                                              }
                                                              tabIndex={1}
                                                            >
                                                              <Row
                                                                bsClass="row"
                                                                className="domain-row-container"
                                                                componentClass="div"
                                                                key="domainpropertiesrow-domainrow-1-1"
                                                              >
                                                                <div
                                                                  className="domain-row-container row"
                                                                >
                                                                  <AdvancedSettings
                                                                    defaultValueOptions={Immutable.List []}
                                                                    domainFormDisplayOptions={
                                                                      {
                                                                        "domainKindDisplayName": "assay design",
                                                                        "hideFilePropertyType": undefined,
                                                                        "hideInferFromFile": true,
                                                                        "hideStudyPropertyTypes": true,
                                                                        "textChoiceLockedForDomain": true,
                                                                      }
                                                                    }
                                                                    domainId={null}
                                                                    domainIndex={1}
                                                                    field={
                                                                      Immutable.Record {
                                                                        "conceptURI": undefined,
                                                                        "conditionalFormats": Immutable.List [],
                                                                        "defaultScale": undefined,
                                                                        "defaultValueType": undefined,
                                                                        "defaultValue": undefined,
                                                                        "defaultDisplayValue": undefined,
                                                                        "description": undefined,
                                                                        "dimension": undefined,
                                                                        "excludeFromShifting": false,
                                                                        "format": undefined,
                                                                        "hidden": false,
                                                                        "importAliases": undefined,
                                                                        "label": undefined,
                                                                        "lookupContainer": undefined,
                                                                        "lookupQuery": undefined,
                                                                        "lookupSchema": undefined,
                                                                        "lookupValidator": undefined,
                                                                        "measure": undefined,
                                                                        "mvEnabled": false,
                                                                        "name": "field2",
                                                                        "PHI": undefined,
                                                                        "propertyId": undefined,
                                                                        "propertyURI": undefined,
                                                                        "propertyValidators": Immutable.List [],
                                                                        "rangeValidators": Immutable.List [],
                                                                        "rangeURI": "xsd:int",
                                                                        "regexValidators": Immutable.List [],
                                                                        "textChoiceValidator": undefined,
                                                                        "recommendedVariable": false,
                                                                        "required": false,
                                                                        "scale": 4000,
                                                                        "URL": undefined,
                                                                        "shownInDetailsView": true,
                                                                        "shownInInsertView": true,
                                                                        "shownInUpdateView": true,
                                                                        "visible": true,
                                                                        "dataType": Immutable.Record {
                                                                          "conceptURI": undefined,
                                                                          "display": "Integer",
                                                                          "name": "int",
                                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                                                          "alternateRangeURI": "xsd:int",
                                                                          "shortDisplay": undefined,
                                                                          "lookupSchema": undefined,
                                                                          "lookupQuery": undefined,
                                                                        },
                                                                        "lookupQueryValue": undefined,
                                                                        "lookupType": Immutable.Record {
                                                                          "conceptURI": undefined,
                                                                          "display": "Lookup",
                                                                          "name": "lookup",
                                                                          "rangeURI": "xsd:int",
                                                                          "alternateRangeURI": undefined,
                                                                          "shortDisplay": undefined,
                                                                          "lookupSchema": undefined,
                                                                          "lookupQuery": undefined,
                                                                        },
                                                                        "original": {
                                                                          "conceptURI": undefined,
                                                                          "dataType": Immutable.Record {
                                                                            "conceptURI": undefined,
                                                                            "display": "Integer",
                                                                            "name": "int",
                                                                            "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                                                            "alternateRangeURI": "xsd:int",
                                                                            "shortDisplay": undefined,
                                                                            "lookupSchema": undefined,
                                                                            "lookupQuery": undefined,
                                                                          },
                                                                          "name": "field2",
                                                                          "rangeURI": undefined,
                                                                        },
                                                                        "updatedField": false,
                                                                        "isPrimaryKey": false,
                                                                        "lockType": "NotLocked",
                                                                        "wrappedColumnName": undefined,
                                                                        "disablePhiLevel": false,
                                                                        "lockExistingField": false,
                                                                        "sourceOntology": undefined,
                                                                        "conceptSubtree": undefined,
                                                                        "conceptLabelColumn": undefined,
                                                                        "conceptImportColumn": undefined,
                                                                        "principalConceptCode": undefined,
                                                                        "derivationDataScope": undefined,
                                                                        "selected": false,
                                                                        "scannable": false,
                                                                      }
                                                                    }
                                                                    helpNoun="field designer"
                                                                    index={1}
                                                                    label="field2"
                                                                    maxPhiLevel="Restricted"
                                                                    onApply={[Function]}
                                                                    onHide={[Function]}
                                                                    show={false}
                                                                    showDefaultValueSettings={false}
                                                                    successBsStyle="success"
                                                                  >
                                                                    <Modal
                                                                      animation={true}
                                                                      autoFocus={true}
                                                                      backdrop={true}
                                                                      bsClass="modal"
                                                                      dialogComponentClass={[Function]}
                                                                      enforceFocus={true}
                                                                      keyboard={true}
                                                                      manager={
                                                                        ModalManager {
                                                                          "add": [Function],
                                                                          "containers": [],
                                                                          "data": [],
                                                                          "handleContainerOverflow": true,
                                                                          "hideSiblingNodes": true,
                                                                          "isTopModal": [Function],
                                                                          "modals": [],
                                                                          "remove": [Function],
                                                                        }
                                                                      }
                                                                      onEnter={[Function]}
                                                                      onHide={[Function]}
                                                                      renderBackdrop={[Function]}
                                                                      restoreFocus={true}
                                                                      show={false}
                                                                    >
                                                                      <Modal
                                                                        autoFocus={true}
                                                                        backdrop={true}
                                                                        backdropClassName="modal-backdrop"
                                                                        backdropTransition={[Function]}
                                                                        containerClassName="modal-open"
                                                                        enforceFocus={true}
                                                                        keyboard={true}
                                                                        manager={
                                                                          ModalManager {
                                                                            "add": [Function],
                                                                            "containers": [],
                                                                            "data": [],
                                                                            "handleContainerOverflow": true,
                                                                            "hideSiblingNodes": true,
                                                                            "isTopModal": [Function],
                                                                            "modals": [],
                                                                            "remove": [Function],
                                                                          }
                                                                        }
                                                                        onEnter={[Function]}
                                                                        onEntering={[Function]}
                                                                        onExited={[Function]}
                                                                        onHide={[Function]}
                                                                        onMouseUp={[Function]}
                                                                        renderBackdrop={[Function]}
                                                                        restoreFocus={true}
                                                                        show={false}
                                                                        transition={[Function]}
                                                                      />
                                                                    </Modal>
                                                                  </AdvancedSettings>
                                                                  <div
                                                                    aria-describedby="rbd-hidden-text-2-hidden-text-10"
                                                                    className="domain-row-handle"
                                                                    data-rbd-drag-handle-context-id="2"
                                                                    data-rbd-drag-handle-draggable-id="domainpropertiesrow-domaindrag-1-1"
                                                                    draggable={false}
                                                                    onDragStart={[Function]}
                                                                    role="button"
                                                                    tabIndex={0}
                                                                  >
                                                                    <DragDropHandle>
                                                                      <div
                                                                        className="drag-drop-handle"
                                                                      >
                                                                        <span
                                                                          className="fa fa-ellipsis-v"
                                                                        />
                                                                        <span
                                                                          className="fa fa-ellipsis-v"
                                                                        />
                                                                      </div>
                                                                    </DragDropHandle>
                                                                  </div>
                                                                  <div
                                                                    className="domain-row-action-section"
                                                                  >
                                                                    <Checkbox
                                                                      bsClass="checkbox"
                                                                      checked={false}
                                                                      className="domain-field-check-icon"
                                                                      disabled={false}
                                                                      id="domainpropertiesrow-selected-1-1"
                                                                      inline={false}
                                                                      name="domainpropertiesrow-selected"
                                                                      onChange={[Function]}
                                                                      title=""
                                                                    >
                                                                      <div
                                                                        className="domain-field-check-icon checkbox"
                                                                      >
                                                                        <label
                                                                          title=""
                                                                        >
                                                                          <input
                                                                            checked={false}
                                                                            disabled={false}
                                                                            id="domainpropertiesrow-selected-1-1"
                                                                            name="domainpropertiesrow-selected"
                                                                            onChange={[Function]}
                                                                            type="checkbox"
                                                                          />
                                                                        </label>
                                                                      </div>
                                                                    </Checkbox>
                                                                    <FieldExpansionToggle
                                                                      cls="domain-field-expand-icon"
                                                                      collapsedTitle="Show additional field properties"
                                                                      expanded={false}
                                                                      expandedTitle="Hide additional field properties"
                                                                      id="domainpropertiesrow-expand-1-1"
                                                                      onClick={[Function]}
                                                                    >
                                                                      <div
                                                                        className="field-icon domain-field-expand-icon"
                                                                        id="domainpropertiesrow-expand-1-1"
                                                                        onClick={[Function]}
                                                                        title="Show additional field properties"
                                                                      >
                                                                        <span
                                                                          className="fa fa-lg fa-plus-square"
                                                                        />
                                                                      </div>
                                                                    </FieldExpansionToggle>
                                                                  </div>
                                                                  <div
                                                                    className="domain-row-main"
                                                                  >
                                                                    <Col
                                                                      bsClass="col"
                                                                      className="domain-row-base-fields domain-row-base-fields-position"
                                                                      componentClass="div"
                                                                      xs={6}
                                                                    >
                                                                      <div
                                                                        className="domain-row-base-fields domain-row-base-fields-position col-xs-6"
                                                                      >
                                                                        <div
                                                                          id="domainpropertiesrow-row-1-1"
                                                                        >
                                                                          <Col
                                                                            bsClass="col"
                                                                            componentClass="div"
                                                                            xs={6}
                                                                          >
                                                                            <div
                                                                              className="col-xs-6"
                                                                            >
                                                                              <FormControl
                                                                                bsClass="form-control"
                                                                                componentClass="input"
                                                                                disabled={false}
                                                                                id="domainpropertiesrow-name-1-1"
                                                                                name="domainpropertiesrow-name"
                                                                                onChange={[Function]}
                                                                                type="text"
                                                                                value="field2"
                                                                              >
                                                                                <input
                                                                                  className="form-control"
                                                                                  disabled={false}
                                                                                  id="domainpropertiesrow-name-1-1"
                                                                                  name="domainpropertiesrow-name"
                                                                                  onChange={[Function]}
                                                                                  type="text"
                                                                                  value="field2"
                                                                                />
                                                                              </FormControl>
                                                                            </div>
                                                                          </Col>
                                                                          <Col
                                                                            bsClass="col"
                                                                            componentClass="div"
                                                                            xs={4}
                                                                          >
                                                                            <div
                                                                              className="col-xs-4"
                                                                            >
                                                                              <FormControl
                                                                                bsClass="form-control"
                                                                                componentClass="select"
                                                                                disabled={false}
                                                                                id="domainpropertiesrow-type-1-1"
                                                                                name="domainpropertiesrow-type"
                                                                                onChange={[Function]}
                                                                                value="int"
                                                                              >
                                                                                <select
                                                                                  className="form-control"
                                                                                  disabled={false}
                                                                                  id="domainpropertiesrow-type-1-1"
                                                                                  name="domainpropertiesrow-type"
                                                                                  onChange={[Function]}
                                                                                  value="int"
                                                                                >
                                                                                  <option
                                                                                    key="boolean"
                                                                                    value="boolean"
                                                                                  >
                                                                                    Boolean
                                                                                  </option>
                                                                                  <option
                                                                                    key="dateTime"
                                                                                    value="dateTime"
                                                                                  >
                                                                                    Date Time
                                                                                  </option>
                                                                                  <option
                                                                                    key="double"
                                                                                    value="double"
                                                                                  >
                                                                                    Decimal (floating point)
                                                                                  </option>
                                                                                  <option
                                                                                    key="int"
                                                                                    value="int"
                                                                                  >
                                                                                    Integer
                                                                                  </option>
                                                                                  <option
                                                                                    key="multiLine"
                                                                                    value="multiLine"
                                                                                  >
                                                                                    Multi-Line Text
                                                                                  </option>
                                                                                  <option
                                                                                    key="sample"
                                                                                    value="sample"
                                                                                  >
                                                                                    Sample
                                                                                  </option>
                                                                                  <option
                                                                                    key="string"
                                                                                    value="string"
                                                                                  >
                                                                                    Text
                                                                                  </option>
                                                                                  <option
                                                                                    key="textChoice"
                                                                                    value="textChoice"
                                                                                  >
                                                                                    Text Choice
                                                                                  </option>
                                                                                  <option
                                                                                    key="users"
                                                                                    value="users"
                                                                                  >
                                                                                    User
                                                                                  </option>
                                                                                </select>
                                                                              </FormControl>
                                                                            </div>
                                                                          </Col>
                                                                          <Col
                                                                            bsClass="col"
                                                                            componentClass="div"
                                                                            xs={2}
                                                                          >
                                                                            <div
                                                                              className="col-xs-2"
                                                                            >
                                                                              <div
                                                                                className="domain-field-checkbox-container"
                                                                              >
                                                                                <Checkbox
                                                                                  bsClass="checkbox"
                                                                                  checked={false}
                                                                                  className="domain-field-checkbox"
                                                                                  disabled={false}
                                                                                  id="domainpropertiesrow-required-1-1"
                                                                                  inline={false}
                                                                                  name="domainpropertiesrow-required"
                                                                                  onChange={[Function]}
                                                                                  title=""
                                                                                >
                                                                                  <div
                                                                                    className="domain-field-checkbox checkbox"
                                                                                  >
                                                                                    <label
                                                                                      title=""
                                                                                    >
                                                                                      <input
                                                                                        checked={false}
                                                                                        disabled={false}
                                                                                        id="domainpropertiesrow-required-1-1"
                                                                                        name="domainpropertiesrow-required"
                                                                                        onChange={[Function]}
                                                                                        type="checkbox"
                                                                                      />
                                                                                    </label>
                                                                                  </div>
                                                                                </Checkbox>
                                                                              </div>
                                                                            </div>
                                                                          </Col>
                                                                        </div>
                                                                      </div>
                                                                    </Col>
                                                                    <Col
                                                                      bsClass="col"
                                                                      className="domain-row-details-container"
                                                                      componentClass="div"
                                                                      xs={6}
                                                                    >
                                                                      <div
                                                                        className="domain-row-details-container col-xs-6"
                                                                      >
                                                                        <div
                                                                          className="domain-field-details"
                                                                          id="domainpropertiesrow-details-1-1"
                                                                        >
                                                                          New Field
                                                                        </div>
                                                                        <div
                                                                          className="domain-field-buttons"
                                                                        >
                                                                          <Memo()
                                                                            iconCls="domain-field-delete-icon"
                                                                            id="domainpropertiesrow-delete-1-1"
                                                                            onDelete={[Function]}
                                                                            title="Remove field"
                                                                          >
                                                                            <span
                                                                              className="field-icon"
                                                                              id="domainpropertiesrow-delete-1-1"
                                                                              onClick={[Function]}
                                                                              title="Remove field"
                                                                            >
                                                                              <span
                                                                                className="fa fa-times-circle domain-field-delete-icon"
                                                                              />
                                                                            </span>
                                                                          </Memo()>
                                                                        </div>
                                                                      </div>
                                                                    </Col>
                                                                  </div>
                                                                </div>
                                                              </Row>
                                                              <Collapse
                                                                appear={false}
                                                                dimension="height"
                                                                getDimensionValue={[Function]}
                                                                in={false}
                                                                mountOnEnter={false}
                                                                onExited={[Function]}
                                                                onExiting={[Function]}
                                                                timeout={300}
                                                                unmountOnExit={false}
                                                              >
                                                                <Transition
                                                                  appear={false}
                                                                  aria-expanded={null}
                                                                  enter={true}
                                                                  exit={true}
                                                                  in={false}
                                                                  mountOnEnter={false}
                                                                  onEnter={[Function]}
                                                                  onEntered={[Function]}
                                                                  onEntering={[Function]}
                                                                  onExit={[Function]}
                                                                  onExited={[Function]}
                                                                  onExiting={[Function]}
                                                                  timeout={300}
                                                                  unmountOnExit={false}
                                                                >
                                                                  <div
                                                                    aria-expanded={null}
                                                                    className="collapse"
                                                                  >
                                                                    <DomainRowExpandedOptions
                                                                      appPropertiesOnly={true}
                                                                      domainFormDisplayOptions={
                                                                        {
                                                                          "domainKindDisplayName": "assay design",
                                                                          "hideFilePropertyType": undefined,
                                                                          "hideInferFromFile": true,
                                                                          "hideStudyPropertyTypes": true,
                                                                          "textChoiceLockedForDomain": true,
                                                                        }
                                                                      }
                                                                      domainIndex={1}
                                                                      field={
                                                                        Immutable.Record {
                                                                          "conceptURI": undefined,
                                                                          "conditionalFormats": Immutable.List [],
                                                                          "defaultScale": undefined,
                                                                          "defaultValueType": undefined,
                                                                          "defaultValue": undefined,
                                                                          "defaultDisplayValue": undefined,
                                                                          "description": undefined,
                                                                          "dimension": undefined,
                                                                          "excludeFromShifting": false,
                                                                          "format": undefined,
                                                                          "hidden": false,
                                                                          "importAliases": undefined,
                                                                          "label": undefined,
                                                                          "lookupContainer": undefined,
                                                                          "lookupQuery": undefined,
                                                                          "lookupSchema": undefined,
                                                                          "lookupValidator": undefined,
                                                                          "measure": undefined,
                                                                          "mvEnabled": false,
                                                                          "name": "field2",
                                                                          "PHI": undefined,
                                                                          "propertyId": undefined,
                                                                          "propertyURI": undefined,
                                                                          "propertyValidators": Immutable.List [],
                                                                          "rangeValidators": Immutable.List [],
                                                                          "rangeURI": "xsd:int",
                                                                          "regexValidators": Immutable.List [],
                                                                          "textChoiceValidator": undefined,
                                                                          "recommendedVariable": false,
                                                                          "required": false,
                                                                          "scale": 4000,
                                                                          "URL": undefined,
                                                                          "shownInDetailsView": true,
                                                                          "shownInInsertView": true,
                                                                          "shownInUpdateView": true,
                                                                          "visible": true,
                                                                          "dataType": Immutable.Record {
                                                                            "conceptURI": undefined,
                                                                            "display": "Integer",
                                                                            "name": "int",
                                                                            "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                                                            "alternateRangeURI": "xsd:int",
                                                                            "shortDisplay": undefined,
                                                                            "lookupSchema": undefined,
                                                                            "lookupQuery": undefined,
                                                                          },
                                                                          "lookupQueryValue": undefined,
                                                                          "lookupType": Immutable.Record {
                                                                            "conceptURI": undefined,
                                                                            "display": "Lookup",
                                                                            "name": "lookup",
                                                                            "rangeURI": "xsd:int",
                                                                            "alternateRangeURI": undefined,
                                                                            "shortDisplay": undefined,
                                                                            "lookupSchema": undefined,
                                                                            "lookupQuery": undefined,
                                                                          },
                                                                          "original": {
                                                                            "conceptURI": undefined,
                                                                            "dataType": Immutable.Record {
                                                                              "conceptURI": undefined,
                                                                              "display": "Integer",
                                                                              "name": "int",
                                                                              "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                                                              "alternateRangeURI": "xsd:int",
                                                                              "shortDisplay": undefined,
                                                                              "lookupSchema": undefined,
                                                                              "lookupQuery": undefined,
                                                                            },
                                                                            "name": "field2",
                                                                            "rangeURI": undefined,
                                                                          },
                                                                          "updatedField": false,
                                                                          "isPrimaryKey": false,
                                                                          "lockType": "NotLocked",
                                                                          "wrappedColumnName": undefined,
                                                                          "disablePhiLevel": false,
                                                                          "lockExistingField": false,
                                                                          "sourceOntology": undefined,
                                                                          "conceptSubtree": undefined,
                                                                          "conceptLabelColumn": undefined,
                                                                          "conceptImportColumn": undefined,
                                                                          "principalConceptCode": undefined,
                                                                          "derivationDataScope": undefined,
                                                                          "selected": false,
                                                                          "scannable": false,
                                                                        }
                                                                      }
                                                                      getDomainFields={[Function]}
                                                                      index={1}
                                                                      onChange={[Function]}
                                                                      onMultiChange={[Function]}
                                                                      showingModal={[Function]}
                                                                      successBsStyle="success"
                                                                    >
                                                                      <div
                                                                        className="domain-row-container"
                                                                      >
                                                                        <div
                                                                          className="domain-row-container-expand-spacer"
                                                                        />
                                                                        <div
                                                                          className="domain-row-container-expanded"
                                                                        >
                                                                          <Col
                                                                            bsClass="col"
                                                                            componentClass="div"
                                                                            xs={12}
                                                                          >
                                                                            <div
                                                                              className="col-xs-12"
                                                                            >
                                                                              <NumericFieldOptions
                                                                                appPropertiesOnly={true}
                                                                                domainIndex={1}
                                                                                index={1}
                                                                                label="Integer Options"
                                                                                lockType="NotLocked"
                                                                                onChange={[Function]}
                                                                                scannable={false}
                                                                              >
                                                                                <div>
                                                                                  <Row
                                                                                    bsClass="row"
                                                                                    componentClass="div"
                                                                                  >
                                                                                    <div
                                                                                      className="row"
                                                                                    >
                                                                                      <Col
                                                                                        bsClass="col"
                                                                                        componentClass="div"
                                                                                        xs={12}
                                                                                      >
                                                                                        <div
                                                                                          className="col-xs-12"
                                                                                        >
                                                                                          <SectionHeading
                                                                                            title="Integer Options"
                                                                                          >
                                                                                            <div
                                                                                              className="domain-field-section-heading"
                                                                                            >
                                                                                              Integer Options
                                                                                            </div>
                                                                                          </SectionHeading>
                                                                                        </div>
                                                                                      </Col>
                                                                                    </div>
                                                                                  </Row>
                                                                                  <Row
                                                                                    bsClass="row"
                                                                                    componentClass="div"
                                                                                  >
                                                                                    <div
                                                                                      className="row"
                                                                                    >
                                                                                      <Col
                                                                                        bsClass="col"
                                                                                        componentClass="div"
                                                                                        xs={3}
                                                                                      >
                                                                                        <div
                                                                                          className="col-xs-3"
                                                                                        >
                                                                                          <div
                                                                                            className="domain-field-label"
                                                                                          >
                                                                                            <DomainFieldLabel
                                                                                              helpTipBody={
                                                                                                <React.Fragment>
                                                                                                  <p>
                                                                                                    To control how a number value is displayed, provide a string format compatible with the Java
                                                                                                     
                                                                                                    <Memo
                                                                                                      urlSuffix="java/text/DecimalFormat.html"
                                                                                                    >
                                                                                                      DecimalFormat
                                                                                                    </Memo>
                                                                                                     class.
                                                                                                  </p>
                                                                                                  <p>
                                                                                                    Learn more about using 
                                                                                                    <HelpLink
                                                                                                      topic="dateFormats#number"
                                                                                                    >
                                                                                                      Number formats
                                                                                                    </HelpLink>
                                                                                                     in LabKey.
                                                                                                  </p>
                                                                                                </React.Fragment>
                                                                                              }
                                                                                              label="Format for Numbers"
                                                                                            >
                                                                                              Format for 
                                                                                              <span
                                                                                                className="domain-no-wrap"
                                                                                              >
                                                                                                Numbers
                                                                                                <Component
                                                                                                  id="tooltip"
                                                                                                  title="Format for Numbers"
                                                                                                >
                                                                                                  <span
                                                                                                    className="label-help-target"
                                                                                                    onMouseOut={[Function]}
                                                                                                    onMouseOver={[Function]}
                                                                                                  >
                                                                                                    <span
                                                                                                      className="label-help-icon fa fa-question-circle"
                                                                                                    />
                                                                                                    <Overlay
                                                                                                      animation={[Function]}
                                                                                                      placement="right"
                                                                                                      rootClose={false}
                                                                                                      show={false}
                                                                                                    >
                                                                                                      <Overlay
                                                                                                        placement="right"
                                                                                                        rootClose={false}
                                                                                                        show={false}
                                                                                                        transition={[Function]}
                                                                                                      />
                                                                                                    </Overlay>
                                                                                                  </span>
                                                                                                </Component>
                                                                                              </span>
                                                                                            </DomainFieldLabel>
                                                                                          </div>
                                                                                        </div>
                                                                                      </Col>
                                                                                      <Col
                                                                                        bsClass="col"
                                                                                        componentClass="div"
                                                                                        xs={2}
                                                                                      >
                                                                                        <div
                                                                                          className="col-xs-2"
                                                                                        >
                                                                                          <div
                                                                                            className="domain-field-label"
                                                                                          >
                                                                                            Default Scale Type
                                                                                          </div>
                                                                                        </div>
                                                                                      </Col>
                                                                                    </div>
                                                                                  </Row>
                                                                                  <Row
                                                                                    bsClass="row"
                                                                                    componentClass="div"
                                                                                  >
                                                                                    <div
                                                                                      className="row"
                                                                                    >
                                                                                      <Col
                                                                                        bsClass="col"
                                                                                        componentClass="div"
                                                                                        xs={3}
                                                                                      >
                                                                                        <div
                                                                                          className="col-xs-3"
                                                                                        >
                                                                                          <FormControl
                                                                                            bsClass="form-control"
                                                                                            componentClass="input"
                                                                                            disabled={false}
                                                                                            id="domainpropertiesrow-format-1-1"
                                                                                            name="domainpropertiesrow-format"
                                                                                            onChange={[Function]}
                                                                                            type="text"
                                                                                            value=""
                                                                                          >
                                                                                            <input
                                                                                              className="form-control"
                                                                                              disabled={false}
                                                                                              id="domainpropertiesrow-format-1-1"
                                                                                              name="domainpropertiesrow-format"
                                                                                              onChange={[Function]}
                                                                                              type="text"
                                                                                              value=""
                                                                                            />
                                                                                          </FormControl>
                                                                                        </div>
                                                                                      </Col>
                                                                                      <Col
                                                                                        bsClass="col"
                                                                                        componentClass="div"
                                                                                        xs={2}
                                                                                      >
                                                                                        <div
                                                                                          className="col-xs-2"
                                                                                        >
                                                                                          <FormControl
                                                                                            bsClass="form-control"
                                                                                            componentClass="select"
                                                                                            disabled={false}
                                                                                            id="domainpropertiesrow-defaultScale-1-1"
                                                                                            name="domainpropertiesrow-defaultScale"
                                                                                            onChange={[Function]}
                                                                                          >
                                                                                            <select
                                                                                              className="form-control"
                                                                                              disabled={false}
                                                                                              id="domainpropertiesrow-defaultScale-1-1"
                                                                                              name="domainpropertiesrow-defaultScale"
                                                                                              onChange={[Function]}
                                                                                            >
                                                                                              <option
                                                                                                key="domainpropertiesrow-defaultScaleoption-LINEAR-1-1"
                                                                                                value="LINEAR"
                                                                                              >
                                                                                                Linear
                                                                                              </option>
                                                                                              <option
                                                                                                key="domainpropertiesrow-defaultScaleoption-LOG-1-1"
                                                                                                value="LOG"
                                                                                              >
                                                                                                Log
                                                                                              </option>
                                                                                            </select>
                                                                                          </FormControl>
                                                                                        </div>
                                                                                      </Col>
                                                                                    </div>
                                                                                  </Row>
                                                                                  <Memo()
                                                                                    appPropertiesOnly={true}
                                                                                    domainIndex={1}
                                                                                    index={1}
                                                                                    label="Integer Options"
                                                                                    lockType="NotLocked"
                                                                                    onChange={[Function]}
                                                                                    scannable={false}
                                                                                  />
                                                                                </div>
                                                                              </NumericFieldOptions>
                                                                            </div>
                                                                          </Col>
                                                                          <Col
                                                                            bsClass="col"
                                                                            componentClass="div"
                                                                            xs={12}
                                                                          >
                                                                            <div
                                                                              className="col-xs-12"
                                                                            >
                                                                              <NameAndLinkingOptions
                                                                                appPropertiesOnly={true}
                                                                                domainFormDisplayOptions={
                                                                                  {
                                                                                    "domainKindDisplayName": "assay design",
                                                                                    "hideFilePropertyType": undefined,
                                                                                    "hideInferFromFile": true,
                                                                                    "hideStudyPropertyTypes": true,
                                                                                    "textChoiceLockedForDomain": true,
                                                                                  }
                                                                                }
                                                                                domainIndex={1}
                                                                                field={
                                                                                  Immutable.Record {
                                                                                    "conceptURI": undefined,
                                                                                    "conditionalFormats": Immutable.List [],
                                                                                    "defaultScale": undefined,
                                                                                    "defaultValueType": undefined,
                                                                                    "defaultValue": undefined,
                                                                                    "defaultDisplayValue": undefined,
                                                                                    "description": undefined,
                                                                                    "dimension": undefined,
                                                                                    "excludeFromShifting": false,
                                                                                    "format": undefined,
                                                                                    "hidden": false,
                                                                                    "importAliases": undefined,
                                                                                    "label": undefined,
                                                                                    "lookupContainer": undefined,
                                                                                    "lookupQuery": undefined,
                                                                                    "lookupSchema": undefined,
                                                                                    "lookupValidator": undefined,
                                                                                    "measure": undefined,
                                                                                    "mvEnabled": false,
                                                                                    "name": "field2",
                                                                                    "PHI": undefined,
                                                                                    "propertyId": undefined,
                                                                                    "propertyURI": undefined,
                                                                                    "propertyValidators": Immutable.List [],
                                                                                    "rangeValidators": Immutable.List [],
                                                                                    "rangeURI": "xsd:int",
                                                                                    "regexValidators": Immutable.List [],
                                                                                    "textChoiceValidator": undefined,
                                                                                    "recommendedVariable": false,
                                                                                    "required": false,
                                                                                    "scale": 4000,
                                                                                    "URL": undefined,
                                                                                    "shownInDetailsView": true,
                                                                                    "shownInInsertView": true,
                                                                                    "shownInUpdateView": true,
                                                                                    "visible": true,
                                                                                    "dataType": Immutable.Record {
                                                                                      "conceptURI": undefined,
                                                                                      "display": "Integer",
                                                                                      "name": "int",
                                                                                      "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                                                                      "alternateRangeURI": "xsd:int",
                                                                                      "shortDisplay": undefined,
                                                                                      "lookupSchema": undefined,
                                                                                      "lookupQuery": undefined,
                                                                                    },
                                                                                    "lookupQueryValue": undefined,
                                                                                    "lookupType": Immutable.Record {
                                                                                      "conceptURI": undefined,
                                                                                      "display": "Lookup",
                                                                                      "name": "lookup",
                                                                                      "rangeURI": "xsd:int",
                                                                                      "alternateRangeURI": undefined,
                                                                                      "shortDisplay": undefined,
                                                                                      "lookupSchema": undefined,
                                                                                      "lookupQuery": undefined,
                                                                                    },
                                                                                    "original": {
                                                                                      "conceptURI": undefined,
                                                                                      "dataType": Immutable.Record {
                                                                                        "conceptURI": undefined,
                                                                                        "display": "Integer",
                                                                                        "name": "int",
                                                                                        "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                                                                        "alternateRangeURI": "xsd:int",
                                                                                        "shortDisplay": undefined,
                                                                                        "lookupSchema": undefined,
                                                                                        "lookupQuery": undefined,
                                                                                      },
                                                                                      "name": "field2",
                                                                                      "rangeURI": undefined,
                                                                                    },
                                                                                    "updatedField": false,
                                                                                    "isPrimaryKey": false,
                                                                                    "lockType": "NotLocked",
                                                                                    "wrappedColumnName": undefined,
                                                                                    "disablePhiLevel": false,
                                                                                    "lockExistingField": false,
                                                                                    "sourceOntology": undefined,
                                                                                    "conceptSubtree": undefined,
                                                                                    "conceptLabelColumn": undefined,
                                                                                    "conceptImportColumn": undefined,
                                                                                    "principalConceptCode": undefined,
                                                                                    "derivationDataScope": undefined,
                                                                                    "selected": false,
                                                                                    "scannable": false,
                                                                                  }
                                                                                }
                                                                                index={1}
                                                                                onChange={[Function]}
                                                                              >
                                                                                <div>
                                                                                  <Row
                                                                                    bsClass="row"
                                                                                    componentClass="div"
                                                                                  >
                                                                                    <div
                                                                                      className="row"
                                                                                    >
                                                                                      <Col
                                                                                        bsClass="col"
                                                                                        componentClass="div"
                                                                                        xs={12}
                                                                                      >
                                                                                        <div
                                                                                          className="col-xs-12"
                                                                                        >
                                                                                          <SectionHeading
                                                                                            cls="domain-field-section-hdr"
                                                                                            title="Name and Linking Options"
                                                                                          >
                                                                                            <div
                                                                                              className="domain-field-section-heading domain-field-section-hdr"
                                                                                            >
                                                                                              Name and Linking Options
                                                                                            </div>
                                                                                          </SectionHeading>
                                                                                        </div>
                                                                                      </Col>
                                                                                    </div>
                                                                                  </Row>
                                                                                  <Row
                                                                                    bsClass="row"
                                                                                    componentClass="div"
                                                                                  >
                                                                                    <div
                                                                                      className="row"
                                                                                    >
                                                                                      <Col
                                                                                        bsClass="col"
                                                                                        componentClass="div"
                                                                                        xs={5}
                                                                                      >
                                                                                        <div
                                                                                          className="col-xs-5"
                                                                                        >
                                                                                          <div
                                                                                            className="domain-field-label"
                                                                                          >
                                                                                            Description
                                                                                          </div>
                                                                                          <FormControl
                                                                                            bsClass="form-control"
                                                                                            className="form-control textarea-noresize"
                                                                                            componentClass="textarea"
                                                                                            disabled={false}
                                                                                            id="domainpropertiesrow-description-1-1"
                                                                                            name="domainpropertiesrow-description"
                                                                                            onChange={[Function]}
                                                                                            rows={4}
                                                                                            value=""
                                                                                          >
                                                                                            <textarea
                                                                                              className="form-control textarea-noresize form-control"
                                                                                              disabled={false}
                                                                                              id="domainpropertiesrow-description-1-1"
                                                                                              name="domainpropertiesrow-description"
                                                                                              onChange={[Function]}
                                                                                              rows={4}
                                                                                              value=""
                                                                                            />
                                                                                          </FormControl>
                                                                                        </div>
                                                                                      </Col>
                                                                                      <Col
                                                                                        bsClass="col"
                                                                                        componentClass="div"
                                                                                        xs={3}
                                                                                      >
                                                                                        <div
                                                                                          className="col-xs-3"
                                                                                        >
                                                                                          <div
                                                                                            className="domain-field-label"
                                                                                          >
                                                                                            Label
                                                                                          </div>
                                                                                          <FormControl
                                                                                            bsClass="form-control"
                                                                                            componentClass="input"
                                                                                            disabled={false}
                                                                                            id="domainpropertiesrow-label-1-1"
                                                                                            name="domainpropertiesrow-label"
                                                                                            onChange={[Function]}
                                                                                            type="text"
                                                                                            value=""
                                                                                          >
                                                                                            <input
                                                                                              className="form-control"
                                                                                              disabled={false}
                                                                                              id="domainpropertiesrow-label-1-1"
                                                                                              name="domainpropertiesrow-label"
                                                                                              onChange={[Function]}
                                                                                              type="text"
                                                                                              value=""
                                                                                            />
                                                                                          </FormControl>
                                                                                          <div
                                                                                            className="domain-field-label"
                                                                                          >
                                                                                            <DomainFieldLabel
                                                                                              helpTipBody={
                                                                                                <React.Fragment>
                                                                                                  Define alternate field names to be used when importing from a file.
                                                                                                  <br />
                                                                                                  <br />
                                                                                                  Multiple aliases may be separated by spaces or commas. To define an alias that contains spaces, use double-quotes (") around it.
                                                                                                </React.Fragment>
                                                                                              }
                                                                                              label="Import Aliases"
                                                                                            >
                                                                                              Import 
                                                                                              <span
                                                                                                className="domain-no-wrap"
                                                                                              >
                                                                                                Aliases
                                                                                                <Component
                                                                                                  id="tooltip"
                                                                                                  title="Import Aliases"
                                                                                                >
                                                                                                  <span
                                                                                                    className="label-help-target"
                                                                                                    onMouseOut={[Function]}
                                                                                                    onMouseOver={[Function]}
                                                                                                  >
                                                                                                    <span
                                                                                                      className="label-help-icon fa fa-question-circle"
                                                                                                    />
                                                                                                    <Overlay
                                                                                                      animation={[Function]}
                                                                                                      placement="right"
                                                                                                      rootClose={false}
                                                                                                      show={false}
                                                                                                    >
                                                                                                      <Overlay
                                                                                                        placement="right"
                                                                                                        rootClose={false}
                                                                                                        show={false}
                                                                                                        transition={[Function]}
                                                                                                      />
                                                                                                    </Overlay>
                                                                                                  </span>
                                                                                                </Component>
                                                                                              </span>
                                                                                            </DomainFieldLabel>
                                                                                          </div>
                                                                                          <FormControl
                                                                                            bsClass="form-control"
                                                                                            componentClass="input"
                                                                                            disabled={false}
                                                                                            id="domainpropertiesrow-importAliases-1-1"
                                                                                            name="domainpropertiesrow-importAliases"
                                                                                            onChange={[Function]}
                                                                                            type="text"
                                                                                            value=""
                                                                                          >
                                                                                            <input
                                                                                              className="form-control"
                                                                                              disabled={false}
                                                                                              id="domainpropertiesrow-importAliases-1-1"
                                                                                              name="domainpropertiesrow-importAliases"
                                                                                              onChange={[Function]}
                                                                                              type="text"
                                                                                              value=""
                                                                                            />
                                                                                          </FormControl>
                                                                                        </div>
                                                                                      </Col>
                                                                                      <Col
                                                                                        bsClass="col"
                                                                                        componentClass="div"
                                                                                        xs={4}
                                                                                      >
                                                                                        <div
                                                                                          className="col-xs-4"
                                                                                        >
                                                                                          <div
                                                                                            className="domain-field-label"
                                                                                          >
                                                                                            <DomainFieldLabel
                                                                                              helpTipBody={
                                                                                                <React.Fragment>
                                                                                                  Use this to change the display of the field value within a data grid into a link. Multiple formats are supported, which allows ways to easily substitute and link to other locations in LabKey.
                                                                                                  <br />
                                                                                                  <br />
                                                                                                  Learn more about using 
                                                                                                  <HelpLink
                                                                                                    topic="urlEncoding"
                                                                                                  >
                                                                                                    URL Formatting Options
                                                                                                  </HelpLink>
                                                                                                  .
                                                                                                </React.Fragment>
                                                                                              }
                                                                                              label="URL"
                                                                                            >
                                                                                              <span
                                                                                                className="domain-no-wrap"
                                                                                              >
                                                                                                URL
                                                                                                <Component
                                                                                                  id="tooltip"
                                                                                                  title="URL"
                                                                                                >
                                                                                                  <span
                                                                                                    className="label-help-target"
                                                                                                    onMouseOut={[Function]}
                                                                                                    onMouseOver={[Function]}
                                                                                                  >
                                                                                                    <span
                                                                                                      className="label-help-icon fa fa-question-circle"
                                                                                                    />
                                                                                                    <Overlay
                                                                                                      animation={[Function]}
                                                                                                      placement="right"
                                                                                                      rootClose={false}
                                                                                                      show={false}
                                                                                                    >
                                                                                                      <Overlay
                                                                                                        placement="right"
                                                                                                        rootClose={false}
                                                                                                        show={false}
                                                                                                        transition={[Function]}
                                                                                                      />
                                                                                                    </Overlay>
                                                                                                  </span>
                                                                                                </Component>
                                                                                              </span>
                                                                                            </DomainFieldLabel>
                                                                                          </div>
                                                                                          <FormControl
                                                                                            bsClass="form-control"
                                                                                            componentClass="input"
                                                                                            disabled={false}
                                                                                            id="domainpropertiesrow-URL-1-1"
                                                                                            name="domainpropertiesrow-URL"
                                                                                            onChange={[Function]}
                                                                                            type="text"
                                                                                            value=""
                                                                                          >
                                                                                            <input
                                                                                              className="form-control"
                                                                                              disabled={false}
                                                                                              id="domainpropertiesrow-URL-1-1"
                                                                                              name="domainpropertiesrow-URL"
                                                                                              onChange={[Function]}
                                                                                              type="text"
                                                                                              value=""
                                                                                            />
                                                                                          </FormControl>
                                                                                        </div>
                                                                                      </Col>
                                                                                    </div>
                                                                                  </Row>
                                                                                </div>
                                                                              </NameAndLinkingOptions>
                                                                            </div>
                                                                          </Col>
                                                                          <Col
                                                                            bsClass="col"
                                                                            componentClass="div"
                                                                            xs={12}
                                                                          >
                                                                            <div
                                                                              className="col-xs-12"
                                                                            >
                                                                              <ConditionalFormattingAndValidation
                                                                                domainFormDisplayOptions={
                                                                                  {
                                                                                    "domainKindDisplayName": "assay design",
                                                                                    "hideFilePropertyType": undefined,
                                                                                    "hideInferFromFile": true,
                                                                                    "hideStudyPropertyTypes": true,
                                                                                    "textChoiceLockedForDomain": true,
                                                                                  }
                                                                                }
                                                                                domainIndex={1}
                                                                                field={
                                                                                  Immutable.Record {
                                                                                    "conceptURI": undefined,
                                                                                    "conditionalFormats": Immutable.List [],
                                                                                    "defaultScale": undefined,
                                                                                    "defaultValueType": undefined,
                                                                                    "defaultValue": undefined,
                                                                                    "defaultDisplayValue": undefined,
                                                                                    "description": undefined,
                                                                                    "dimension": undefined,
                                                                                    "excludeFromShifting": false,
                                                                                    "format": undefined,
                                                                                    "hidden": false,
                                                                                    "importAliases": undefined,
                                                                                    "label": undefined,
                                                                                    "lookupContainer": undefined,
                                                                                    "lookupQuery": undefined,
                                                                                    "lookupSchema": undefined,
                                                                                    "lookupValidator": undefined,
                                                                                    "measure": undefined,
                                                                                    "mvEnabled": false,
                                                                                    "name": "field2",
                                                                                    "PHI": undefined,
                                                                                    "propertyId": undefined,
                                                                                    "propertyURI": undefined,
                                                                                    "propertyValidators": Immutable.List [],
                                                                                    "rangeValidators": Immutable.List [],
                                                                                    "rangeURI": "xsd:int",
                                                                                    "regexValidators": Immutable.List [],
                                                                                    "textChoiceValidator": undefined,
                                                                                    "recommendedVariable": false,
                                                                                    "required": false,
                                                                                    "scale": 4000,
                                                                                    "URL": undefined,
                                                                                    "shownInDetailsView": true,
                                                                                    "shownInInsertView": true,
                                                                                    "shownInUpdateView": true,
                                                                                    "visible": true,
                                                                                    "dataType": Immutable.Record {
                                                                                      "conceptURI": undefined,
                                                                                      "display": "Integer",
                                                                                      "name": "int",
                                                                                      "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                                                                      "alternateRangeURI": "xsd:int",
                                                                                      "shortDisplay": undefined,
                                                                                      "lookupSchema": undefined,
                                                                                      "lookupQuery": undefined,
                                                                                    },
                                                                                    "lookupQueryValue": undefined,
                                                                                    "lookupType": Immutable.Record {
                                                                                      "conceptURI": undefined,
                                                                                      "display": "Lookup",
                                                                                      "name": "lookup",
                                                                                      "rangeURI": "xsd:int",
                                                                                      "alternateRangeURI": undefined,
                                                                                      "shortDisplay": undefined,
                                                                                      "lookupSchema": undefined,
                                                                                      "lookupQuery": undefined,
                                                                                    },
                                                                                    "original": {
                                                                                      "conceptURI": undefined,
                                                                                      "dataType": Immutable.Record {
                                                                                        "conceptURI": undefined,
                                                                                        "display": "Integer",
                                                                                        "name": "int",
                                                                                        "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                                                                        "alternateRangeURI": "xsd:int",
                                                                                        "shortDisplay": undefined,
                                                                                        "lookupSchema": undefined,
                                                                                        "lookupQuery": undefined,
                                                                                      },
                                                                                      "name": "field2",
                                                                                      "rangeURI": undefined,
                                                                                    },
                                                                                    "updatedField": false,
                                                                                    "isPrimaryKey": false,
                                                                                    "lockType": "NotLocked",
                                                                                    "wrappedColumnName": undefined,
                                                                                    "disablePhiLevel": false,
                                                                                    "lockExistingField": false,
                                                                                    "sourceOntology": undefined,
                                                                                    "conceptSubtree": undefined,
                                                                                    "conceptLabelColumn": undefined,
                                                                                    "conceptImportColumn": undefined,
                                                                                    "principalConceptCode": undefined,
                                                                                    "derivationDataScope": undefined,
                                                                                    "selected": false,
                                                                                    "scannable": false,
                                                                                  }
                                                                                }
                                                                                index={1}
                                                                                onChange={[Function]}
                                                                                showingModal={[Function]}
                                                                                successBsStyle="success"
                                                                              >
                                                                                <div>
                                                                                  <Row
                                                                                    bsClass="row"
                                                                                    componentClass="div"
                                                                                  >
                                                                                    <div
                                                                                      className="row"
                                                                                    >
                                                                                      <Col
                                                                                        bsClass="col"
                                                                                        componentClass="div"
                                                                                        xs={12}
                                                                                      >
                                                                                        <div
                                                                                          className="col-xs-12"
                                                                                        >
                                                                                          <SectionHeading
                                                                                            cls="domain-field-section-hdr"
                                                                                            title="Conditional Formatting and Validation Options"
                                                                                          >
                                                                                            <div
                                                                                              className="domain-field-section-heading domain-field-section-hdr"
                                                                                            >
                                                                                              Conditional Formatting and Validation Options
                                                                                            </div>
                                                                                          </SectionHeading>
                                                                                        </div>
                                                                                      </Col>
                                                                                    </div>
                                                                                  </Row>
                                                                                  <Row
                                                                                    bsClass="row"
                                                                                    componentClass="div"
                                                                                  >
                                                                                    <div
                                                                                      className="row"
                                                                                    >
                                                                                      <Col
                                                                                        bsClass="col"
                                                                                        componentClass="div"
                                                                                        xs={12}
                                                                                      >
                                                                                        <div
                                                                                          className="col-xs-12"
                                                                                        >
                                                                                          <div
                                                                                            className="domain-validation-group"
                                                                                          >
                                                                                            <div
                                                                                              className="domain-field-label domain-no-wrap"
                                                                                            >
                                                                                              <DomainFieldLabel
                                                                                                helpTipBody={<ConditionalFormatHelpText />}
                                                                                                label="Create Conditional Format Criteria"
                                                                                              >
                                                                                                Create Conditional Format 
                                                                                                <span
                                                                                                  className="domain-no-wrap"
                                                                                                >
                                                                                                  Criteria
                                                                                                  <Component
                                                                                                    id="tooltip"
                                                                                                    title="Create Conditional Format Criteria"
                                                                                                  >
                                                                                                    <span
                                                                                                      className="label-help-target"
                                                                                                      onMouseOut={[Function]}
                                                                                                      onMouseOver={[Function]}
                                                                                                    >
                                                                                                      <span
                                                                                                        className="label-help-icon fa fa-question-circle"
                                                                                                      />
                                                                                                      <Overlay
                                                                                                        animation={[Function]}
                                                                                                        placement="right"
                                                                                                        rootClose={false}
                                                                                                        show={false}
                                                                                                      >
                                                                                                        <Overlay
                                                                                                          placement="right"
                                                                                                          rootClose={false}
                                                                                                          show={false}
                                                                                                          transition={[Function]}
                                                                                                        />
                                                                                                      </Overlay>
                                                                                                    </span>
                                                                                                  </Component>
                                                                                                </span>
                                                                                              </DomainFieldLabel>
                                                                                            </div>
                                                                                            <div>
                                                                                              <Button
                                                                                                active={false}
                                                                                                block={false}
                                                                                                bsClass="btn"
                                                                                                bsStyle="default"
                                                                                                className="domain-validation-button"
                                                                                                disabled={false}
                                                                                                id="domainpropertiesrow-conditionalFormat-1-1"
                                                                                                name="domainpropertiesrow-conditionalFormat"
                                                                                                onClick={[Function]}
                                                                                              >
                                                                                                <button
                                                                                                  className="domain-validation-button btn btn-default"
                                                                                                  disabled={false}
                                                                                                  id="domainpropertiesrow-conditionalFormat-1-1"
                                                                                                  name="domainpropertiesrow-conditionalFormat"
                                                                                                  onClick={[Function]}
                                                                                                  type="button"
                                                                                                >
                                                                                                  Add Format
                                                                                                </button>
                                                                                              </Button>
                                                                                              <span
                                                                                                className="domain-text-label"
                                                                                              >
                                                                                                None Set
                                                                                              </span>
                                                                                            </div>
                                                                                          </div>
                                                                                          <div
                                                                                            className=""
                                                                                          >
                                                                                            <div
                                                                                              className="domain-field-label domain-no-wrap"
                                                                                            >
                                                                                              <DomainFieldLabel
                                                                                                helpTipBody={<RangeValidatorHelpText />}
                                                                                                label="Create Range Validator"
                                                                                              >
                                                                                                Create Range 
                                                                                                <span
                                                                                                  className="domain-no-wrap"
                                                                                                >
                                                                                                  Validator
                                                                                                  <Component
                                                                                                    id="tooltip"
                                                                                                    title="Create Range Validator"
                                                                                                  >
                                                                                                    <span
                                                                                                      className="label-help-target"
                                                                                                      onMouseOut={[Function]}
                                                                                                      onMouseOver={[Function]}
                                                                                                    >
                                                                                                      <span
                                                                                                        className="label-help-icon fa fa-question-circle"
                                                                                                      />
                                                                                                      <Overlay
                                                                                                        animation={[Function]}
                                                                                                        placement="right"
                                                                                                        rootClose={false}
                                                                                                        show={false}
                                                                                                      >
                                                                                                        <Overlay
                                                                                                          placement="right"
                                                                                                          rootClose={false}
                                                                                                          show={false}
                                                                                                          transition={[Function]}
                                                                                                        />
                                                                                                      </Overlay>
                                                                                                    </span>
                                                                                                  </Component>
                                                                                                </span>
                                                                                              </DomainFieldLabel>
                                                                                            </div>
                                                                                            <div>
                                                                                              <Button
                                                                                                active={false}
                                                                                                block={false}
                                                                                                bsClass="btn"
                                                                                                bsStyle="default"
                                                                                                className="domain-validation-button"
                                                                                                disabled={false}
                                                                                                id="domainpropertiesrow-rangeValidator-1-1"
                                                                                                name="domainpropertiesrow-rangeValidator"
                                                                                                onClick={[Function]}
                                                                                              >
                                                                                                <button
                                                                                                  className="domain-validation-button btn btn-default"
                                                                                                  disabled={false}
                                                                                                  id="domainpropertiesrow-rangeValidator-1-1"
                                                                                                  name="domainpropertiesrow-rangeValidator"
                                                                                                  onClick={[Function]}
                                                                                                  type="button"
                                                                                                >
                                                                                                  Add Range
                                                                                                </button>
                                                                                              </Button>
                                                                                              <span
                                                                                                className="domain-text-label"
                                                                                              >
                                                                                                None Set
                                                                                              </span>
                                                                                            </div>
                                                                                          </div>
                                                                                        </div>
                                                                                      </Col>
                                                                                    </div>
                                                                                  </Row>
                                                                                </div>
                                                                              </ConditionalFormattingAndValidation>
                                                                            </div>
                                                                          </Col>
                                                                        </div>
                                                                      </div>
                                                                    </DomainRowExpandedOptions>
                                                                  </div>
                                                                </Transition>
                                                              </Collapse>
                                                            </div>
                                                          </Draggable>
                                                        </Connect(Draggable)>
                                                      </PrivateDraggable>
                                                    </PublicDraggable>
                                                  </DomainRow>
                                                  <DomainRow
                                                    appPropertiesOnly={true}
                                                    availableTypes={
                                                      Immutable.List [
                                                        Immutable.Record {
                                                          "conceptURI": undefined,
                                                          "display": "Text",
                                                          "name": "string",
                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                          "alternateRangeURI": "xsd:string",
                                                          "shortDisplay": "String",
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                        Immutable.Record {
                                                          "conceptURI": undefined,
                                                          "display": "Multi-Line Text",
                                                          "name": "multiLine",
                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#multiLine",
                                                          "alternateRangeURI": undefined,
                                                          "shortDisplay": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                        Immutable.Record {
                                                          "conceptURI": undefined,
                                                          "display": "Boolean",
                                                          "name": "boolean",
                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#boolean",
                                                          "alternateRangeURI": "xsd:boolean",
                                                          "shortDisplay": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                        Immutable.Record {
                                                          "conceptURI": undefined,
                                                          "display": "Integer",
                                                          "name": "int",
                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                                          "alternateRangeURI": "xsd:int",
                                                          "shortDisplay": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                        Immutable.Record {
                                                          "conceptURI": undefined,
                                                          "display": "Decimal (floating point)",
                                                          "name": "double",
                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#double",
                                                          "alternateRangeURI": "xsd:double",
                                                          "shortDisplay": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                        Immutable.Record {
                                                          "conceptURI": undefined,
                                                          "display": "Date Time",
                                                          "name": "dateTime",
                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                                                          "alternateRangeURI": "xsd:dateTime",
                                                          "shortDisplay": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                        Immutable.Record {
                                                          "conceptURI": "http://www.labkey.org/exp/xml#flag",
                                                          "display": "Flag",
                                                          "name": "flag",
                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                          "alternateRangeURI": undefined,
                                                          "shortDisplay": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                        Immutable.Record {
                                                          "conceptURI": undefined,
                                                          "display": "User",
                                                          "name": "users",
                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                                          "alternateRangeURI": undefined,
                                                          "shortDisplay": undefined,
                                                          "lookupSchema": "core",
                                                          "lookupQuery": "users",
                                                        },
                                                        Immutable.Record {
                                                          "conceptURI": "http://cpas.labkey.com/Study#ParticipantId",
                                                          "display": "Subject/Participant",
                                                          "name": "ParticipantId",
                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                          "alternateRangeURI": undefined,
                                                          "shortDisplay": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                        Immutable.Record {
                                                          "conceptURI": undefined,
                                                          "display": "Lookup",
                                                          "name": "lookup",
                                                          "rangeURI": undefined,
                                                          "alternateRangeURI": undefined,
                                                          "shortDisplay": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                        Immutable.Record {
                                                          "conceptURI": "http://www.labkey.org/exp/xml#sample",
                                                          "display": "Sample",
                                                          "name": "sample",
                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                                          "alternateRangeURI": undefined,
                                                          "shortDisplay": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                        Immutable.Record {
                                                          "conceptURI": "http://www.labkey.org/types#textChoice",
                                                          "display": "Text Choice",
                                                          "name": "textChoice",
                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                          "alternateRangeURI": undefined,
                                                          "shortDisplay": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                      ]
                                                    }
                                                    defaultValueOptions={Immutable.List []}
                                                    domainFormDisplayOptions={
                                                      {
                                                        "domainKindDisplayName": "assay design",
                                                        "hideFilePropertyType": undefined,
                                                        "hideInferFromFile": true,
                                                        "hideStudyPropertyTypes": true,
                                                        "textChoiceLockedForDomain": true,
                                                      }
                                                    }
                                                    domainId={null}
                                                    domainIndex={1}
                                                    dragging={false}
                                                    expandTransition={300}
                                                    expanded={false}
                                                    field={
                                                      Immutable.Record {
                                                        "conceptURI": undefined,
                                                        "conditionalFormats": Immutable.List [],
                                                        "defaultScale": undefined,
                                                        "defaultValueType": undefined,
                                                        "defaultValue": undefined,
                                                        "defaultDisplayValue": undefined,
                                                        "description": undefined,
                                                        "dimension": undefined,
                                                        "excludeFromShifting": false,
                                                        "format": undefined,
                                                        "hidden": false,
                                                        "importAliases": undefined,
                                                        "label": undefined,
                                                        "lookupContainer": undefined,
                                                        "lookupQuery": undefined,
                                                        "lookupSchema": undefined,
                                                        "lookupValidator": undefined,
                                                        "measure": undefined,
                                                        "mvEnabled": false,
                                                        "name": "field3",
                                                        "PHI": undefined,
                                                        "propertyId": undefined,
                                                        "propertyURI": undefined,
                                                        "propertyValidators": Immutable.List [],
                                                        "rangeValidators": Immutable.List [],
                                                        "rangeURI": "xsd:dateTime",
                                                        "regexValidators": Immutable.List [],
                                                        "textChoiceValidator": undefined,
                                                        "recommendedVariable": false,
                                                        "required": false,
                                                        "scale": 4000,
                                                        "URL": undefined,
                                                        "shownInDetailsView": true,
                                                        "shownInInsertView": true,
                                                        "shownInUpdateView": true,
                                                        "visible": true,
                                                        "dataType": Immutable.Record {
                                                          "conceptURI": undefined,
                                                          "display": "Date Time",
                                                          "name": "dateTime",
                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                                                          "alternateRangeURI": "xsd:dateTime",
                                                          "shortDisplay": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                        "lookupQueryValue": undefined,
                                                        "lookupType": Immutable.Record {
                                                          "conceptURI": undefined,
                                                          "display": "Lookup",
                                                          "name": "lookup",
                                                          "rangeURI": "xsd:dateTime",
                                                          "alternateRangeURI": undefined,
                                                          "shortDisplay": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                        "original": {
                                                          "conceptURI": undefined,
                                                          "dataType": Immutable.Record {
                                                            "conceptURI": undefined,
                                                            "display": "Date Time",
                                                            "name": "dateTime",
                                                            "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                                                            "alternateRangeURI": "xsd:dateTime",
                                                            "shortDisplay": undefined,
                                                            "lookupSchema": undefined,
                                                            "lookupQuery": undefined,
                                                          },
                                                          "name": "field3",
                                                          "rangeURI": undefined,
                                                        },
                                                        "updatedField": false,
                                                        "isPrimaryKey": false,
                                                        "lockType": "NotLocked",
                                                        "wrappedColumnName": undefined,
                                                        "disablePhiLevel": false,
                                                        "lockExistingField": false,
                                                        "sourceOntology": undefined,
                                                        "conceptSubtree": undefined,
                                                        "conceptLabelColumn": undefined,
                                                        "conceptImportColumn": undefined,
                                                        "principalConceptCode": undefined,
                                                        "derivationDataScope": undefined,
                                                        "selected": false,
                                                        "scannable": false,
                                                      }
                                                    }
                                                    fieldDetailsInfo={{}}
                                                    getDomainFields={[Function]}
                                                    helpNoun="field designer"
                                                    index={2}
                                                    key="domain-row-key-2"
                                                    maxPhiLevel="Restricted"
                                                    onChange={[Function]}
                                                    onDelete={[Function]}
                                                    onExpand={[Function]}
                                                    showDefaultValueSettings={false}
                                                    successBsStyle="success"
                                                  >
                                                    <PublicDraggable
                                                      draggableId="domainpropertiesrow-domaindrag-1-2"
                                                      index={2}
                                                    >
                                                      <PrivateDraggable
                                                        canDragInteractiveElements={false}
                                                        draggableId="domainpropertiesrow-domaindrag-1-2"
                                                        index={2}
                                                        isClone={false}
                                                        isEnabled={true}
                                                        shouldRespectForcePress={false}
                                                      >
                                                        <Connect(Draggable)
                                                          canDragInteractiveElements={false}
                                                          draggableId="domainpropertiesrow-domaindrag-1-2"
                                                          index={2}
                                                          isClone={false}
                                                          isEnabled={true}
                                                          shouldRespectForcePress={false}
                                                        >
                                                          <Draggable
                                                            canDragInteractiveElements={false}
                                                            draggableId="domainpropertiesrow-domaindrag-1-2"
                                                            dropAnimationFinished={[Function]}
                                                            index={2}
                                                            isClone={false}
                                                            isEnabled={true}
                                                            mapped={
                                                              {
                                                                "combineTargetFor": null,
                                                                "offset": {
                                                                  "x": 0,
                                                                  "y": 0,
                                                                },
                                                                "shouldAnimateDisplacement": true,
                                                                "snapshot": {
                                                                  "combineTargetFor": null,
                                                                  "combineWith": null,
                                                                  "draggingOver": null,
                                                                  "dropAnimation": null,
                                                                  "isClone": false,
                                                                  "isDragging": false,
                                                                  "isDropAnimating": false,
                                                                  "mode": null,
                                                                },
                                                                "type": "SECONDARY",
                                                              }
                                                            }
                                                            shouldRespectForcePress={false}
                                                          >
                                                            <div
                                                              className="domain-field-row domain-row-border-default"
                                                              data-rbd-draggable-context-id="2"
                                                              data-rbd-draggable-id="domainpropertiesrow-domaindrag-1-2"
                                                              onTransitionEnd={null}
                                                              style={
                                                                {
                                                                  "transform": null,
                                                                  "transition": null,
                                                                }
                                                              }
                                                              tabIndex={2}
                                                            >
                                                              <Row
                                                                bsClass="row"
                                                                className="domain-row-container"
                                                                componentClass="div"
                                                                key="domainpropertiesrow-domainrow-1-2"
                                                              >
                                                                <div
                                                                  className="domain-row-container row"
                                                                >
                                                                  <AdvancedSettings
                                                                    defaultValueOptions={Immutable.List []}
                                                                    domainFormDisplayOptions={
                                                                      {
                                                                        "domainKindDisplayName": "assay design",
                                                                        "hideFilePropertyType": undefined,
                                                                        "hideInferFromFile": true,
                                                                        "hideStudyPropertyTypes": true,
                                                                        "textChoiceLockedForDomain": true,
                                                                      }
                                                                    }
                                                                    domainId={null}
                                                                    domainIndex={1}
                                                                    field={
                                                                      Immutable.Record {
                                                                        "conceptURI": undefined,
                                                                        "conditionalFormats": Immutable.List [],
                                                                        "defaultScale": undefined,
                                                                        "defaultValueType": undefined,
                                                                        "defaultValue": undefined,
                                                                        "defaultDisplayValue": undefined,
                                                                        "description": undefined,
                                                                        "dimension": undefined,
                                                                        "excludeFromShifting": false,
                                                                        "format": undefined,
                                                                        "hidden": false,
                                                                        "importAliases": undefined,
                                                                        "label": undefined,
                                                                        "lookupContainer": undefined,
                                                                        "lookupQuery": undefined,
                                                                        "lookupSchema": undefined,
                                                                        "lookupValidator": undefined,
                                                                        "measure": undefined,
                                                                        "mvEnabled": false,
                                                                        "name": "field3",
                                                                        "PHI": undefined,
                                                                        "propertyId": undefined,
                                                                        "propertyURI": undefined,
                                                                        "propertyValidators": Immutable.List [],
                                                                        "rangeValidators": Immutable.List [],
                                                                        "rangeURI": "xsd:dateTime",
                                                                        "regexValidators": Immutable.List [],
                                                                        "textChoiceValidator": undefined,
                                                                        "recommendedVariable": false,
                                                                        "required": false,
                                                                        "scale": 4000,
                                                                        "URL": undefined,
                                                                        "shownInDetailsView": true,
                                                                        "shownInInsertView": true,
                                                                        "shownInUpdateView": true,
                                                                        "visible": true,
                                                                        "dataType": Immutable.Record {
                                                                          "conceptURI": undefined,
                                                                          "display": "Date Time",
                                                                          "name": "dateTime",
                                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                                                                          "alternateRangeURI": "xsd:dateTime",
                                                                          "shortDisplay": undefined,
                                                                          "lookupSchema": undefined,
                                                                          "lookupQuery": undefined,
                                                                        },
                                                                        "lookupQueryValue": undefined,
                                                                        "lookupType": Immutable.Record {
                                                                          "conceptURI": undefined,
                                                                          "display": "Lookup",
                                                                          "name": "lookup",
                                                                          "rangeURI": "xsd:dateTime",
                                                                          "alternateRangeURI": undefined,
                                                                          "shortDisplay": undefined,
                                                                          "lookupSchema": undefined,
                                                                          "lookupQuery": undefined,
                                                                        },
                                                                        "original": {
                                                                          "conceptURI": undefined,
                                                                          "dataType": Immutable.Record {
                                                                            "conceptURI": undefined,
                                                                            "display": "Date Time",
                                                                            "name": "dateTime",
                                                                            "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                                                                            "alternateRangeURI": "xsd:dateTime",
                                                                            "shortDisplay": undefined,
                                                                            "lookupSchema": undefined,
                                                                            "lookupQuery": undefined,
                                                                          },
                                                                          "name": "field3",
                                                                          "rangeURI": undefined,
                                                                        },
                                                                        "updatedField": false,
                                                                        "isPrimaryKey": false,
                                                                        "lockType": "NotLocked",
                                                                        "wrappedColumnName": undefined,
                                                                        "disablePhiLevel": false,
                                                                        "lockExistingField": false,
                                                                        "sourceOntology": undefined,
                                                                        "conceptSubtree": undefined,
                                                                        "conceptLabelColumn": undefined,
                                                                        "conceptImportColumn": undefined,
                                                                        "principalConceptCode": undefined,
                                                                        "derivationDataScope": undefined,
                                                                        "selected": false,
                                                                        "scannable": false,
                                                                      }
                                                                    }
                                                                    helpNoun="field designer"
                                                                    index={2}
                                                                    label="field3"
                                                                    maxPhiLevel="Restricted"
                                                                    onApply={[Function]}
                                                                    onHide={[Function]}
                                                                    show={false}
                                                                    showDefaultValueSettings={false}
                                                                    successBsStyle="success"
                                                                  >
                                                                    <Modal
                                                                      animation={true}
                                                                      autoFocus={true}
                                                                      backdrop={true}
                                                                      bsClass="modal"
                                                                      dialogComponentClass={[Function]}
                                                                      enforceFocus={true}
                                                                      keyboard={true}
                                                                      manager={
                                                                        ModalManager {
                                                                          "add": [Function],
                                                                          "containers": [],
                                                                          "data": [],
                                                                          "handleContainerOverflow": true,
                                                                          "hideSiblingNodes": true,
                                                                          "isTopModal": [Function],
                                                                          "modals": [],
                                                                          "remove": [Function],
                                                                        }
                                                                      }
                                                                      onEnter={[Function]}
                                                                      onHide={[Function]}
                                                                      renderBackdrop={[Function]}
                                                                      restoreFocus={true}
                                                                      show={false}
                                                                    >
                                                                      <Modal
                                                                        autoFocus={true}
                                                                        backdrop={true}
                                                                        backdropClassName="modal-backdrop"
                                                                        backdropTransition={[Function]}
                                                                        containerClassName="modal-open"
                                                                        enforceFocus={true}
                                                                        keyboard={true}
                                                                        manager={
                                                                          ModalManager {
                                                                            "add": [Function],
                                                                            "containers": [],
                                                                            "data": [],
                                                                            "handleContainerOverflow": true,
                                                                            "hideSiblingNodes": true,
                                                                            "isTopModal": [Function],
                                                                            "modals": [],
                                                                            "remove": [Function],
                                                                          }
                                                                        }
                                                                        onEnter={[Function]}
                                                                        onEntering={[Function]}
                                                                        onExited={[Function]}
                                                                        onHide={[Function]}
                                                                        onMouseUp={[Function]}
                                                                        renderBackdrop={[Function]}
                                                                        restoreFocus={true}
                                                                        show={false}
                                                                        transition={[Function]}
                                                                      />
                                                                    </Modal>
                                                                  </AdvancedSettings>
                                                                  <div
                                                                    aria-describedby="rbd-hidden-text-2-hidden-text-10"
                                                                    className="domain-row-handle"
                                                                    data-rbd-drag-handle-context-id="2"
                                                                    data-rbd-drag-handle-draggable-id="domainpropertiesrow-domaindrag-1-2"
                                                                    draggable={false}
                                                                    onDragStart={[Function]}
                                                                    role="button"
                                                                    tabIndex={0}
                                                                  >
                                                                    <DragDropHandle>
                                                                      <div
                                                                        className="drag-drop-handle"
                                                                      >
                                                                        <span
                                                                          className="fa fa-ellipsis-v"
                                                                        />
                                                                        <span
                                                                          className="fa fa-ellipsis-v"
                                                                        />
                                                                      </div>
                                                                    </DragDropHandle>
                                                                  </div>
                                                                  <div
                                                                    className="domain-row-action-section"
                                                                  >
                                                                    <Checkbox
                                                                      bsClass="checkbox"
                                                                      checked={false}
                                                                      className="domain-field-check-icon"
                                                                      disabled={false}
                                                                      id="domainpropertiesrow-selected-1-2"
                                                                      inline={false}
                                                                      name="domainpropertiesrow-selected"
                                                                      onChange={[Function]}
                                                                      title=""
                                                                    >
                                                                      <div
                                                                        className="domain-field-check-icon checkbox"
                                                                      >
                                                                        <label
                                                                          title=""
                                                                        >
                                                                          <input
                                                                            checked={false}
                                                                            disabled={false}
                                                                            id="domainpropertiesrow-selected-1-2"
                                                                            name="domainpropertiesrow-selected"
                                                                            onChange={[Function]}
                                                                            type="checkbox"
                                                                          />
                                                                        </label>
                                                                      </div>
                                                                    </Checkbox>
                                                                    <FieldExpansionToggle
                                                                      cls="domain-field-expand-icon"
                                                                      collapsedTitle="Show additional field properties"
                                                                      expanded={false}
                                                                      expandedTitle="Hide additional field properties"
                                                                      id="domainpropertiesrow-expand-1-2"
                                                                      onClick={[Function]}
                                                                    >
                                                                      <div
                                                                        className="field-icon domain-field-expand-icon"
                                                                        id="domainpropertiesrow-expand-1-2"
                                                                        onClick={[Function]}
                                                                        title="Show additional field properties"
                                                                      >
                                                                        <span
                                                                          className="fa fa-lg fa-plus-square"
                                                                        />
                                                                      </div>
                                                                    </FieldExpansionToggle>
                                                                  </div>
                                                                  <div
                                                                    className="domain-row-main"
                                                                  >
                                                                    <Col
                                                                      bsClass="col"
                                                                      className="domain-row-base-fields domain-row-base-fields-position"
                                                                      componentClass="div"
                                                                      xs={6}
                                                                    >
                                                                      <div
                                                                        className="domain-row-base-fields domain-row-base-fields-position col-xs-6"
                                                                      >
                                                                        <div
                                                                          id="domainpropertiesrow-row-1-2"
                                                                        >
                                                                          <Col
                                                                            bsClass="col"
                                                                            componentClass="div"
                                                                            xs={6}
                                                                          >
                                                                            <div
                                                                              className="col-xs-6"
                                                                            >
                                                                              <FormControl
                                                                                bsClass="form-control"
                                                                                componentClass="input"
                                                                                disabled={false}
                                                                                id="domainpropertiesrow-name-1-2"
                                                                                name="domainpropertiesrow-name"
                                                                                onChange={[Function]}
                                                                                type="text"
                                                                                value="field3"
                                                                              >
                                                                                <input
                                                                                  className="form-control"
                                                                                  disabled={false}
                                                                                  id="domainpropertiesrow-name-1-2"
                                                                                  name="domainpropertiesrow-name"
                                                                                  onChange={[Function]}
                                                                                  type="text"
                                                                                  value="field3"
                                                                                />
                                                                              </FormControl>
                                                                            </div>
                                                                          </Col>
                                                                          <Col
                                                                            bsClass="col"
                                                                            componentClass="div"
                                                                            xs={4}
                                                                          >
                                                                            <div
                                                                              className="col-xs-4"
                                                                            >
                                                                              <FormControl
                                                                                bsClass="form-control"
                                                                                componentClass="select"
                                                                                disabled={false}
                                                                                id="domainpropertiesrow-type-1-2"
                                                                                name="domainpropertiesrow-type"
                                                                                onChange={[Function]}
                                                                                value="dateTime"
                                                                              >
                                                                                <select
                                                                                  className="form-control"
                                                                                  disabled={false}
                                                                                  id="domainpropertiesrow-type-1-2"
                                                                                  name="domainpropertiesrow-type"
                                                                                  onChange={[Function]}
                                                                                  value="dateTime"
                                                                                >
                                                                                  <option
                                                                                    key="boolean"
                                                                                    value="boolean"
                                                                                  >
                                                                                    Boolean
                                                                                  </option>
                                                                                  <option
                                                                                    key="dateTime"
                                                                                    value="dateTime"
                                                                                  >
                                                                                    Date Time
                                                                                  </option>
                                                                                  <option
                                                                                    key="double"
                                                                                    value="double"
                                                                                  >
                                                                                    Decimal (floating point)
                                                                                  </option>
                                                                                  <option
                                                                                    key="int"
                                                                                    value="int"
                                                                                  >
                                                                                    Integer
                                                                                  </option>
                                                                                  <option
                                                                                    key="multiLine"
                                                                                    value="multiLine"
                                                                                  >
                                                                                    Multi-Line Text
                                                                                  </option>
                                                                                  <option
                                                                                    key="sample"
                                                                                    value="sample"
                                                                                  >
                                                                                    Sample
                                                                                  </option>
                                                                                  <option
                                                                                    key="string"
                                                                                    value="string"
                                                                                  >
                                                                                    Text
                                                                                  </option>
                                                                                  <option
                                                                                    key="textChoice"
                                                                                    value="textChoice"
                                                                                  >
                                                                                    Text Choice
                                                                                  </option>
                                                                                  <option
                                                                                    key="users"
                                                                                    value="users"
                                                                                  >
                                                                                    User
                                                                                  </option>
                                                                                </select>
                                                                              </FormControl>
                                                                            </div>
                                                                          </Col>
                                                                          <Col
                                                                            bsClass="col"
                                                                            componentClass="div"
                                                                            xs={2}
                                                                          >
                                                                            <div
                                                                              className="col-xs-2"
                                                                            >
                                                                              <div
                                                                                className="domain-field-checkbox-container"
                                                                              >
                                                                                <Checkbox
                                                                                  bsClass="checkbox"
                                                                                  checked={false}
                                                                                  className="domain-field-checkbox"
                                                                                  disabled={false}
                                                                                  id="domainpropertiesrow-required-1-2"
                                                                                  inline={false}
                                                                                  name="domainpropertiesrow-required"
                                                                                  onChange={[Function]}
                                                                                  title=""
                                                                                >
                                                                                  <div
                                                                                    className="domain-field-checkbox checkbox"
                                                                                  >
                                                                                    <label
                                                                                      title=""
                                                                                    >
                                                                                      <input
                                                                                        checked={false}
                                                                                        disabled={false}
                                                                                        id="domainpropertiesrow-required-1-2"
                                                                                        name="domainpropertiesrow-required"
                                                                                        onChange={[Function]}
                                                                                        type="checkbox"
                                                                                      />
                                                                                    </label>
                                                                                  </div>
                                                                                </Checkbox>
                                                                              </div>
                                                                            </div>
                                                                          </Col>
                                                                        </div>
                                                                      </div>
                                                                    </Col>
                                                                    <Col
                                                                      bsClass="col"
                                                                      className="domain-row-details-container"
                                                                      componentClass="div"
                                                                      xs={6}
                                                                    >
                                                                      <div
                                                                        className="domain-row-details-container col-xs-6"
                                                                      >
                                                                        <div
                                                                          className="domain-field-details"
                                                                          id="domainpropertiesrow-details-1-2"
                                                                        >
                                                                          New Field
                                                                        </div>
                                                                        <div
                                                                          className="domain-field-buttons"
                                                                        >
                                                                          <Memo()
                                                                            iconCls="domain-field-delete-icon"
                                                                            id="domainpropertiesrow-delete-1-2"
                                                                            onDelete={[Function]}
                                                                            title="Remove field"
                                                                          >
                                                                            <span
                                                                              className="field-icon"
                                                                              id="domainpropertiesrow-delete-1-2"
                                                                              onClick={[Function]}
                                                                              title="Remove field"
                                                                            >
                                                                              <span
                                                                                className="fa fa-times-circle domain-field-delete-icon"
                                                                              />
                                                                            </span>
                                                                          </Memo()>
                                                                        </div>
                                                                      </div>
                                                                    </Col>
                                                                  </div>
                                                                </div>
                                                              </Row>
                                                              <Collapse
                                                                appear={false}
                                                                dimension="height"
                                                                getDimensionValue={[Function]}
                                                                in={false}
                                                                mountOnEnter={false}
                                                                onExited={[Function]}
                                                                onExiting={[Function]}
                                                                timeout={300}
                                                                unmountOnExit={false}
                                                              >
                                                                <Transition
                                                                  appear={false}
                                                                  aria-expanded={null}
                                                                  enter={true}
                                                                  exit={true}
                                                                  in={false}
                                                                  mountOnEnter={false}
                                                                  onEnter={[Function]}
                                                                  onEntered={[Function]}
                                                                  onEntering={[Function]}
                                                                  onExit={[Function]}
                                                                  onExited={[Function]}
                                                                  onExiting={[Function]}
                                                                  timeout={300}
                                                                  unmountOnExit={false}
                                                                >
                                                                  <div
                                                                    aria-expanded={null}
                                                                    className="collapse"
                                                                  >
                                                                    <DomainRowExpandedOptions
                                                                      appPropertiesOnly={true}
                                                                      domainFormDisplayOptions={
                                                                        {
                                                                          "domainKindDisplayName": "assay design",
                                                                          "hideFilePropertyType": undefined,
                                                                          "hideInferFromFile": true,
                                                                          "hideStudyPropertyTypes": true,
                                                                          "textChoiceLockedForDomain": true,
                                                                        }
                                                                      }
                                                                      domainIndex={1}
                                                                      field={
                                                                        Immutable.Record {
                                                                          "conceptURI": undefined,
                                                                          "conditionalFormats": Immutable.List [],
                                                                          "defaultScale": undefined,
                                                                          "defaultValueType": undefined,
                                                                          "defaultValue": undefined,
                                                                          "defaultDisplayValue": undefined,
                                                                          "description": undefined,
                                                                          "dimension": undefined,
                                                                          "excludeFromShifting": false,
                                                                          "format": undefined,
                                                                          "hidden": false,
                                                                          "importAliases": undefined,
                                                                          "label": undefined,
                                                                          "lookupContainer": undefined,
                                                                          "lookupQuery": undefined,
                                                                          "lookupSchema": undefined,
                                                                          "lookupValidator": undefined,
                                                                          "measure": undefined,
                                                                          "mvEnabled": false,
                                                                          "name": "field3",
                                                                          "PHI": undefined,
                                                                          "propertyId": undefined,
                                                                          "propertyURI": undefined,
                                                                          "propertyValidators": Immutable.List [],
                                                                          "rangeValidators": Immutable.List [],
                                                                          "rangeURI": "xsd:dateTime",
                                                                          "regexValidators": Immutable.List [],
                                                                          "textChoiceValidator": undefined,
                                                                          "recommendedVariable": false,
                                                                          "required": false,
                                                                          "scale": 4000,
                                                                          "URL": undefined,
                                                                          "shownInDetailsView": true,
                                                                          "shownInInsertView": true,
                                                                          "shownInUpdateView": true,
                                                                          "visible": true,
                                                                          "dataType": Immutable.Record {
                                                                            "conceptURI": undefined,
                                                                            "display": "Date Time",
                                                                            "name": "dateTime",
                                                                            "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                                                                            "alternateRangeURI": "xsd:dateTime",
                                                                            "shortDisplay": undefined,
                                                                            "lookupSchema": undefined,
                                                                            "lookupQuery": undefined,
                                                                          },
                                                                          "lookupQueryValue": undefined,
                                                                          "lookupType": Immutable.Record {
                                                                            "conceptURI": undefined,
                                                                            "display": "Lookup",
                                                                            "name": "lookup",
                                                                            "rangeURI": "xsd:dateTime",
                                                                            "alternateRangeURI": undefined,
                                                                            "shortDisplay": undefined,
                                                                            "lookupSchema": undefined,
                                                                            "lookupQuery": undefined,
                                                                          },
                                                                          "original": {
                                                                            "conceptURI": undefined,
                                                                            "dataType": Immutable.Record {
                                                                              "conceptURI": undefined,
                                                                              "display": "Date Time",
                                                                              "name": "dateTime",
                                                                              "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                                                                              "alternateRangeURI": "xsd:dateTime",
                                                                              "shortDisplay": undefined,
                                                                              "lookupSchema": undefined,
                                                                              "lookupQuery": undefined,
                                                                            },
                                                                            "name": "field3",
                                                                            "rangeURI": undefined,
                                                                          },
                                                                          "updatedField": false,
                                                                          "isPrimaryKey": false,
                                                                          "lockType": "NotLocked",
                                                                          "wrappedColumnName": undefined,
                                                                          "disablePhiLevel": false,
                                                                          "lockExistingField": false,
                                                                          "sourceOntology": undefined,
                                                                          "conceptSubtree": undefined,
                                                                          "conceptLabelColumn": undefined,
                                                                          "conceptImportColumn": undefined,
                                                                          "principalConceptCode": undefined,
                                                                          "derivationDataScope": undefined,
                                                                          "selected": false,
                                                                          "scannable": false,
                                                                        }
                                                                      }
                                                                      getDomainFields={[Function]}
                                                                      index={2}
                                                                      onChange={[Function]}
                                                                      onMultiChange={[Function]}
                                                                      showingModal={[Function]}
                                                                      successBsStyle="success"
                                                                    >
                                                                      <div
                                                                        className="domain-row-container"
                                                                      >
                                                                        <div
                                                                          className="domain-row-container-expand-spacer"
                                                                        />
                                                                        <div
                                                                          className="domain-row-container-expanded"
                                                                        >
                                                                          <Col
                                                                            bsClass="col"
                                                                            componentClass="div"
                                                                            xs={12}
                                                                          >
                                                                            <div
                                                                              className="col-xs-12"
                                                                            >
                                                                              <DateTimeFieldOptions
                                                                                domainIndex={1}
                                                                                excludeFromShifting={false}
                                                                                index={2}
                                                                                label="Date and Time Options"
                                                                                lockType="NotLocked"
                                                                                onChange={[Function]}
                                                                              >
                                                                                <div>
                                                                                  <Row
                                                                                    bsClass="row"
                                                                                    componentClass="div"
                                                                                  >
                                                                                    <div
                                                                                      className="row"
                                                                                    >
                                                                                      <Col
                                                                                        bsClass="col"
                                                                                        componentClass="div"
                                                                                        xs={12}
                                                                                      >
                                                                                        <div
                                                                                          className="col-xs-12"
                                                                                        >
                                                                                          <SectionHeading
                                                                                            title="Date and Time Options"
                                                                                          >
                                                                                            <div
                                                                                              className="domain-field-section-heading"
                                                                                            >
                                                                                              Date and Time Options
                                                                                            </div>
                                                                                          </SectionHeading>
                                                                                        </div>
                                                                                      </Col>
                                                                                    </div>
                                                                                  </Row>
                                                                                  <Row
                                                                                    bsClass="row"
                                                                                    componentClass="div"
                                                                                  >
                                                                                    <div
                                                                                      className="row"
                                                                                    >
                                                                                      <Col
                                                                                        bsClass="col"
                                                                                        componentClass="div"
                                                                                        xs={3}
                                                                                      >
                                                                                        <div
                                                                                          className="col-xs-3"
                                                                                        >
                                                                                          <div
                                                                                            className="domain-field-label"
                                                                                          >
                                                                                            <DomainFieldLabel
                                                                                              helpTipBody={
                                                                                                <React.Fragment>
                                                                                                  <p>
                                                                                                    To control how a date or time value is displayed, provide a string format compatible with the Java
                                                                                                     
                                                                                                    <Memo
                                                                                                      urlSuffix="java/text/SimpleDateFormat.html"
                                                                                                    >
                                                                                                      SimpleDateFormat
                                                                                                    </Memo>
                                                                                                     class.
                                                                                                  </p>
                                                                                                  <p>
                                                                                                    Learn more about using 
                                                                                                    <HelpLink
                                                                                                      topic="dateFormats#date"
                                                                                                    >
                                                                                                      Date and Time formats
                                                                                                    </HelpLink>
                                                                                                     in LabKey.
                                                                                                  </p>
                                                                                                </React.Fragment>
                                                                                              }
                                                                                              label="Format for Dates"
                                                                                            >
                                                                                              Format for 
                                                                                              <span
                                                                                                className="domain-no-wrap"
                                                                                              >
                                                                                                Dates
                                                                                                <Component
                                                                                                  id="tooltip"
                                                                                                  title="Format for Dates"
                                                                                                >
                                                                                                  <span
                                                                                                    className="label-help-target"
                                                                                                    onMouseOut={[Function]}
                                                                                                    onMouseOver={[Function]}
                                                                                                  >
                                                                                                    <span
                                                                                                      className="label-help-icon fa fa-question-circle"
                                                                                                    />
                                                                                                    <Overlay
                                                                                                      animation={[Function]}
                                                                                                      placement="right"
                                                                                                      rootClose={false}
                                                                                                      show={false}
                                                                                                    >
                                                                                                      <Overlay
                                                                                                        placement="right"
                                                                                                        rootClose={false}
                                                                                                        show={false}
                                                                                                        transition={[Function]}
                                                                                                      />
                                                                                                    </Overlay>
                                                                                                  </span>
                                                                                                </Component>
                                                                                              </span>
                                                                                            </DomainFieldLabel>
                                                                                          </div>
                                                                                        </div>
                                                                                      </Col>
                                                                                      <Col
                                                                                        bsClass="col"
                                                                                        componentClass="div"
                                                                                        xs={9}
                                                                                      >
                                                                                        <div
                                                                                          className="col-xs-9"
                                                                                        />
                                                                                      </Col>
                                                                                    </div>
                                                                                  </Row>
                                                                                  <Row
                                                                                    bsClass="row"
                                                                                    componentClass="div"
                                                                                  >
                                                                                    <div
                                                                                      className="row"
                                                                                    >
                                                                                      <Col
                                                                                        bsClass="col"
                                                                                        componentClass="div"
                                                                                        xs={3}
                                                                                      >
                                                                                        <div
                                                                                          className="col-xs-3"
                                                                                        >
                                                                                          <FormControl
                                                                                            bsClass="form-control"
                                                                                            componentClass="input"
                                                                                            disabled={false}
                                                                                            id="domainpropertiesrow-format-1-2"
                                                                                            name="domainpropertiesrow-format"
                                                                                            onChange={[Function]}
                                                                                            type="text"
                                                                                            value=""
                                                                                          >
                                                                                            <input
                                                                                              className="form-control"
                                                                                              disabled={false}
                                                                                              id="domainpropertiesrow-format-1-2"
                                                                                              name="domainpropertiesrow-format"
                                                                                              onChange={[Function]}
                                                                                              type="text"
                                                                                              value=""
                                                                                            />
                                                                                          </FormControl>
                                                                                        </div>
                                                                                      </Col>
                                                                                      <Col
                                                                                        bsClass="col"
                                                                                        componentClass="div"
                                                                                        xs={9}
                                                                                      >
                                                                                        <div
                                                                                          className="col-xs-9"
                                                                                        />
                                                                                      </Col>
                                                                                    </div>
                                                                                  </Row>
                                                                                </div>
                                                                              </DateTimeFieldOptions>
                                                                            </div>
                                                                          </Col>
                                                                          <Col
                                                                            bsClass="col"
                                                                            componentClass="div"
                                                                            xs={12}
                                                                          >
                                                                            <div
                                                                              className="col-xs-12"
                                                                            >
                                                                              <NameAndLinkingOptions
                                                                                appPropertiesOnly={true}
                                                                                domainFormDisplayOptions={
                                                                                  {
                                                                                    "domainKindDisplayName": "assay design",
                                                                                    "hideFilePropertyType": undefined,
                                                                                    "hideInferFromFile": true,
                                                                                    "hideStudyPropertyTypes": true,
                                                                                    "textChoiceLockedForDomain": true,
                                                                                  }
                                                                                }
                                                                                domainIndex={1}
                                                                                field={
                                                                                  Immutable.Record {
                                                                                    "conceptURI": undefined,
                                                                                    "conditionalFormats": Immutable.List [],
                                                                                    "defaultScale": undefined,
                                                                                    "defaultValueType": undefined,
                                                                                    "defaultValue": undefined,
                                                                                    "defaultDisplayValue": undefined,
                                                                                    "description": undefined,
                                                                                    "dimension": undefined,
                                                                                    "excludeFromShifting": false,
                                                                                    "format": undefined,
                                                                                    "hidden": false,
                                                                                    "importAliases": undefined,
                                                                                    "label": undefined,
                                                                                    "lookupContainer": undefined,
                                                                                    "lookupQuery": undefined,
                                                                                    "lookupSchema": undefined,
                                                                                    "lookupValidator": undefined,
                                                                                    "measure": undefined,
                                                                                    "mvEnabled": false,
                                                                                    "name": "field3",
                                                                                    "PHI": undefined,
                                                                                    "propertyId": undefined,
                                                                                    "propertyURI": undefined,
                                                                                    "propertyValidators": Immutable.List [],
                                                                                    "rangeValidators": Immutable.List [],
                                                                                    "rangeURI": "xsd:dateTime",
                                                                                    "regexValidators": Immutable.List [],
                                                                                    "textChoiceValidator": undefined,
                                                                                    "recommendedVariable": false,
                                                                                    "required": false,
                                                                                    "scale": 4000,
                                                                                    "URL": undefined,
                                                                                    "shownInDetailsView": true,
                                                                                    "shownInInsertView": true,
                                                                                    "shownInUpdateView": true,
                                                                                    "visible": true,
                                                                                    "dataType": Immutable.Record {
                                                                                      "conceptURI": undefined,
                                                                                      "display": "Date Time",
                                                                                      "name": "dateTime",
                                                                                      "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                                                                                      "alternateRangeURI": "xsd:dateTime",
                                                                                      "shortDisplay": undefined,
                                                                                      "lookupSchema": undefined,
                                                                                      "lookupQuery": undefined,
                                                                                    },
                                                                                    "lookupQueryValue": undefined,
                                                                                    "lookupType": Immutable.Record {
                                                                                      "conceptURI": undefined,
                                                                                      "display": "Lookup",
                                                                                      "name": "lookup",
                                                                                      "rangeURI": "xsd:dateTime",
                                                                                      "alternateRangeURI": undefined,
                                                                                      "shortDisplay": undefined,
                                                                                      "lookupSchema": undefined,
                                                                                      "lookupQuery": undefined,
                                                                                    },
                                                                                    "original": {
                                                                                      "conceptURI": undefined,
                                                                                      "dataType": Immutable.Record {
                                                                                        "conceptURI": undefined,
                                                                                        "display": "Date Time",
                                                                                        "name": "dateTime",
                                                                                        "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                                                                                        "alternateRangeURI": "xsd:dateTime",
                                                                                        "shortDisplay": undefined,
                                                                                        "lookupSchema": undefined,
                                                                                        "lookupQuery": undefined,
                                                                                      },
                                                                                      "name": "field3",
                                                                                      "rangeURI": undefined,
                                                                                    },
                                                                                    "updatedField": false,
                                                                                    "isPrimaryKey": false,
                                                                                    "lockType": "NotLocked",
                                                                                    "wrappedColumnName": undefined,
                                                                                    "disablePhiLevel": false,
                                                                                    "lockExistingField": false,
                                                                                    "sourceOntology": undefined,
                                                                                    "conceptSubtree": undefined,
                                                                                    "conceptLabelColumn": undefined,
                                                                                    "conceptImportColumn": undefined,
                                                                                    "principalConceptCode": undefined,
                                                                                    "derivationDataScope": undefined,
                                                                                    "selected": false,
                                                                                    "scannable": false,
                                                                                  }
                                                                                }
                                                                                index={2}
                                                                                onChange={[Function]}
                                                                              >
                                                                                <div>
                                                                                  <Row
                                                                                    bsClass="row"
                                                                                    componentClass="div"
                                                                                  >
                                                                                    <div
                                                                                      className="row"
                                                                                    >
                                                                                      <Col
                                                                                        bsClass="col"
                                                                                        componentClass="div"
                                                                                        xs={12}
                                                                                      >
                                                                                        <div
                                                                                          className="col-xs-12"
                                                                                        >
                                                                                          <SectionHeading
                                                                                            cls="domain-field-section-hdr"
                                                                                            title="Name and Linking Options"
                                                                                          >
                                                                                            <div
                                                                                              className="domain-field-section-heading domain-field-section-hdr"
                                                                                            >
                                                                                              Name and Linking Options
                                                                                            </div>
                                                                                          </SectionHeading>
                                                                                        </div>
                                                                                      </Col>
                                                                                    </div>
                                                                                  </Row>
                                                                                  <Row
                                                                                    bsClass="row"
                                                                                    componentClass="div"
                                                                                  >
                                                                                    <div
                                                                                      className="row"
                                                                                    >
                                                                                      <Col
                                                                                        bsClass="col"
                                                                                        componentClass="div"
                                                                                        xs={5}
                                                                                      >
                                                                                        <div
                                                                                          className="col-xs-5"
                                                                                        >
                                                                                          <div
                                                                                            className="domain-field-label"
                                                                                          >
                                                                                            Description
                                                                                          </div>
                                                                                          <FormControl
                                                                                            bsClass="form-control"
                                                                                            className="form-control textarea-noresize"
                                                                                            componentClass="textarea"
                                                                                            disabled={false}
                                                                                            id="domainpropertiesrow-description-1-2"
                                                                                            name="domainpropertiesrow-description"
                                                                                            onChange={[Function]}
                                                                                            rows={4}
                                                                                            value=""
                                                                                          >
                                                                                            <textarea
                                                                                              className="form-control textarea-noresize form-control"
                                                                                              disabled={false}
                                                                                              id="domainpropertiesrow-description-1-2"
                                                                                              name="domainpropertiesrow-description"
                                                                                              onChange={[Function]}
                                                                                              rows={4}
                                                                                              value=""
                                                                                            />
                                                                                          </FormControl>
                                                                                        </div>
                                                                                      </Col>
                                                                                      <Col
                                                                                        bsClass="col"
                                                                                        componentClass="div"
                                                                                        xs={3}
                                                                                      >
                                                                                        <div
                                                                                          className="col-xs-3"
                                                                                        >
                                                                                          <div
                                                                                            className="domain-field-label"
                                                                                          >
                                                                                            Label
                                                                                          </div>
                                                                                          <FormControl
                                                                                            bsClass="form-control"
                                                                                            componentClass="input"
                                                                                            disabled={false}
                                                                                            id="domainpropertiesrow-label-1-2"
                                                                                            name="domainpropertiesrow-label"
                                                                                            onChange={[Function]}
                                                                                            type="text"
                                                                                            value=""
                                                                                          >
                                                                                            <input
                                                                                              className="form-control"
                                                                                              disabled={false}
                                                                                              id="domainpropertiesrow-label-1-2"
                                                                                              name="domainpropertiesrow-label"
                                                                                              onChange={[Function]}
                                                                                              type="text"
                                                                                              value=""
                                                                                            />
                                                                                          </FormControl>
                                                                                          <div
                                                                                            className="domain-field-label"
                                                                                          >
                                                                                            <DomainFieldLabel
                                                                                              helpTipBody={
                                                                                                <React.Fragment>
                                                                                                  Define alternate field names to be used when importing from a file.
                                                                                                  <br />
                                                                                                  <br />
                                                                                                  Multiple aliases may be separated by spaces or commas. To define an alias that contains spaces, use double-quotes (") around it.
                                                                                                </React.Fragment>
                                                                                              }
                                                                                              label="Import Aliases"
                                                                                            >
                                                                                              Import 
                                                                                              <span
                                                                                                className="domain-no-wrap"
                                                                                              >
                                                                                                Aliases
                                                                                                <Component
                                                                                                  id="tooltip"
                                                                                                  title="Import Aliases"
                                                                                                >
                                                                                                  <span
                                                                                                    className="label-help-target"
                                                                                                    onMouseOut={[Function]}
                                                                                                    onMouseOver={[Function]}
                                                                                                  >
                                                                                                    <span
                                                                                                      className="label-help-icon fa fa-question-circle"
                                                                                                    />
                                                                                                    <Overlay
                                                                                                      animation={[Function]}
                                                                                                      placement="right"
                                                                                                      rootClose={false}
                                                                                                      show={false}
                                                                                                    >
                                                                                                      <Overlay
                                                                                                        placement="right"
                                                                                                        rootClose={false}
                                                                                                        show={false}
                                                                                                        transition={[Function]}
                                                                                                      />
                                                                                                    </Overlay>
                                                                                                  </span>
                                                                                                </Component>
                                                                                              </span>
                                                                                            </DomainFieldLabel>
                                                                                          </div>
                                                                                          <FormControl
                                                                                            bsClass="form-control"
                                                                                            componentClass="input"
                                                                                            disabled={false}
                                                                                            id="domainpropertiesrow-importAliases-1-2"
                                                                                            name="domainpropertiesrow-importAliases"
                                                                                            onChange={[Function]}
                                                                                            type="text"
                                                                                            value=""
                                                                                          >
                                                                                            <input
                                                                                              className="form-control"
                                                                                              disabled={false}
                                                                                              id="domainpropertiesrow-importAliases-1-2"
                                                                                              name="domainpropertiesrow-importAliases"
                                                                                              onChange={[Function]}
                                                                                              type="text"
                                                                                              value=""
                                                                                            />
                                                                                          </FormControl>
                                                                                        </div>
                                                                                      </Col>
                                                                                      <Col
                                                                                        bsClass="col"
                                                                                        componentClass="div"
                                                                                        xs={4}
                                                                                      >
                                                                                        <div
                                                                                          className="col-xs-4"
                                                                                        >
                                                                                          <div
                                                                                            className="domain-field-label"
                                                                                          >
                                                                                            <DomainFieldLabel
                                                                                              helpTipBody={
                                                                                                <React.Fragment>
                                                                                                  Use this to change the display of the field value within a data grid into a link. Multiple formats are supported, which allows ways to easily substitute and link to other locations in LabKey.
                                                                                                  <br />
                                                                                                  <br />
                                                                                                  Learn more about using 
                                                                                                  <HelpLink
                                                                                                    topic="urlEncoding"
                                                                                                  >
                                                                                                    URL Formatting Options
                                                                                                  </HelpLink>
                                                                                                  .
                                                                                                </React.Fragment>
                                                                                              }
                                                                                              label="URL"
                                                                                            >
                                                                                              <span
                                                                                                className="domain-no-wrap"
                                                                                              >
                                                                                                URL
                                                                                                <Component
                                                                                                  id="tooltip"
                                                                                                  title="URL"
                                                                                                >
                                                                                                  <span
                                                                                                    className="label-help-target"
                                                                                                    onMouseOut={[Function]}
                                                                                                    onMouseOver={[Function]}
                                                                                                  >
                                                                                                    <span
                                                                                                      className="label-help-icon fa fa-question-circle"
                                                                                                    />
                                                                                                    <Overlay
                                                                                                      animation={[Function]}
                                                                                                      placement="right"
                                                                                                      rootClose={false}
                                                                                                      show={false}
                                                                                                    >
                                                                                                      <Overlay
                                                                                                        placement="right"
                                                                                                        rootClose={false}
                                                                                                        show={false}
                                                                                                        transition={[Function]}
                                                                                                      />
                                                                                                    </Overlay>
                                                                                                  </span>
                                                                                                </Component>
                                                                                              </span>
                                                                                            </DomainFieldLabel>
                                                                                          </div>
                                                                                          <FormControl
                                                                                            bsClass="form-control"
                                                                                            componentClass="input"
                                                                                            disabled={false}
                                                                                            id="domainpropertiesrow-URL-1-2"
                                                                                            name="domainpropertiesrow-URL"
                                                                                            onChange={[Function]}
                                                                                            type="text"
                                                                                            value=""
                                                                                          >
                                                                                            <input
                                                                                              className="form-control"
                                                                                              disabled={false}
                                                                                              id="domainpropertiesrow-URL-1-2"
                                                                                              name="domainpropertiesrow-URL"
                                                                                              onChange={[Function]}
                                                                                              type="text"
                                                                                              value=""
                                                                                            />
                                                                                          </FormControl>
                                                                                        </div>
                                                                                      </Col>
                                                                                    </div>
                                                                                  </Row>
                                                                                </div>
                                                                              </NameAndLinkingOptions>
                                                                            </div>
                                                                          </Col>
                                                                          <Col
                                                                            bsClass="col"
                                                                            componentClass="div"
                                                                            xs={12}
                                                                          >
                                                                            <div
                                                                              className="col-xs-12"
                                                                            >
                                                                              <ConditionalFormattingAndValidation
                                                                                domainFormDisplayOptions={
                                                                                  {
                                                                                    "domainKindDisplayName": "assay design",
                                                                                    "hideFilePropertyType": undefined,
                                                                                    "hideInferFromFile": true,
                                                                                    "hideStudyPropertyTypes": true,
                                                                                    "textChoiceLockedForDomain": true,
                                                                                  }
                                                                                }
                                                                                domainIndex={1}
                                                                                field={
                                                                                  Immutable.Record {
                                                                                    "conceptURI": undefined,
                                                                                    "conditionalFormats": Immutable.List [],
                                                                                    "defaultScale": undefined,
                                                                                    "defaultValueType": undefined,
                                                                                    "defaultValue": undefined,
                                                                                    "defaultDisplayValue": undefined,
                                                                                    "description": undefined,
                                                                                    "dimension": undefined,
                                                                                    "excludeFromShifting": false,
                                                                                    "format": undefined,
                                                                                    "hidden": false,
                                                                                    "importAliases": undefined,
                                                                                    "label": undefined,
                                                                                    "lookupContainer": undefined,
                                                                                    "lookupQuery": undefined,
                                                                                    "lookupSchema": undefined,
                                                                                    "lookupValidator": undefined,
                                                                                    "measure": undefined,
                                                                                    "mvEnabled": false,
                                                                                    "name": "field3",
                                                                                    "PHI": undefined,
                                                                                    "propertyId": undefined,
                                                                                    "propertyURI": undefined,
                                                                                    "propertyValidators": Immutable.List [],
                                                                                    "rangeValidators": Immutable.List [],
                                                                                    "rangeURI": "xsd:dateTime",
                                                                                    "regexValidators": Immutable.List [],
                                                                                    "textChoiceValidator": undefined,
                                                                                    "recommendedVariable": false,
                                                                                    "required": false,
                                                                                    "scale": 4000,
                                                                                    "URL": undefined,
                                                                                    "shownInDetailsView": true,
                                                                                    "shownInInsertView": true,
                                                                                    "shownInUpdateView": true,
                                                                                    "visible": true,
                                                                                    "dataType": Immutable.Record {
                                                                                      "conceptURI": undefined,
                                                                                      "display": "Date Time",
                                                                                      "name": "dateTime",
                                                                                      "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                                                                                      "alternateRangeURI": "xsd:dateTime",
                                                                                      "shortDisplay": undefined,
                                                                                      "lookupSchema": undefined,
                                                                                      "lookupQuery": undefined,
                                                                                    },
                                                                                    "lookupQueryValue": undefined,
                                                                                    "lookupType": Immutable.Record {
                                                                                      "conceptURI": undefined,
                                                                                      "display": "Lookup",
                                                                                      "name": "lookup",
                                                                                      "rangeURI": "xsd:dateTime",
                                                                                      "alternateRangeURI": undefined,
                                                                                      "shortDisplay": undefined,
                                                                                      "lookupSchema": undefined,
                                                                                      "lookupQuery": undefined,
                                                                                    },
                                                                                    "original": {
                                                                                      "conceptURI": undefined,
                                                                                      "dataType": Immutable.Record {
                                                                                        "conceptURI": undefined,
                                                                                        "display": "Date Time",
                                                                                        "name": "dateTime",
                                                                                        "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                                                                                        "alternateRangeURI": "xsd:dateTime",
                                                                                        "shortDisplay": undefined,
                                                                                        "lookupSchema": undefined,
                                                                                        "lookupQuery": undefined,
                                                                                      },
                                                                                      "name": "field3",
                                                                                      "rangeURI": undefined,
                                                                                    },
                                                                                    "updatedField": false,
                                                                                    "isPrimaryKey": false,
                                                                                    "lockType": "NotLocked",
                                                                                    "wrappedColumnName": undefined,
                                                                                    "disablePhiLevel": false,
                                                                                    "lockExistingField": false,
                                                                                    "sourceOntology": undefined,
                                                                                    "conceptSubtree": undefined,
                                                                                    "conceptLabelColumn": undefined,
                                                                                    "conceptImportColumn": undefined,
                                                                                    "principalConceptCode": undefined,
                                                                                    "derivationDataScope": undefined,
                                                                                    "selected": false,
                                                                                    "scannable": false,
                                                                                  }
                                                                                }
                                                                                index={2}
                                                                                onChange={[Function]}
                                                                                showingModal={[Function]}
                                                                                successBsStyle="success"
                                                                              >
                                                                                <div>
                                                                                  <Row
                                                                                    bsClass="row"
                                                                                    componentClass="div"
                                                                                  >
                                                                                    <div
                                                                                      className="row"
                                                                                    >
                                                                                      <Col
                                                                                        bsClass="col"
                                                                                        componentClass="div"
                                                                                        xs={12}
                                                                                      >
                                                                                        <div
                                                                                          className="col-xs-12"
                                                                                        >
                                                                                          <SectionHeading
                                                                                            cls="domain-field-section-hdr"
                                                                                            title="Conditional Formatting and Validation Options"
                                                                                          >
                                                                                            <div
                                                                                              className="domain-field-section-heading domain-field-section-hdr"
                                                                                            >
                                                                                              Conditional Formatting and Validation Options
                                                                                            </div>
                                                                                          </SectionHeading>
                                                                                        </div>
                                                                                      </Col>
                                                                                    </div>
                                                                                  </Row>
                                                                                  <Row
                                                                                    bsClass="row"
                                                                                    componentClass="div"
                                                                                  >
                                                                                    <div
                                                                                      className="row"
                                                                                    >
                                                                                      <Col
                                                                                        bsClass="col"
                                                                                        componentClass="div"
                                                                                        xs={12}
                                                                                      >
                                                                                        <div
                                                                                          className="col-xs-12"
                                                                                        >
                                                                                          <div
                                                                                            className="domain-validation-group"
                                                                                          >
                                                                                            <div
                                                                                              className="domain-field-label domain-no-wrap"
                                                                                            >
                                                                                              <DomainFieldLabel
                                                                                                helpTipBody={<ConditionalFormatHelpText />}
                                                                                                label="Create Conditional Format Criteria"
                                                                                              >
                                                                                                Create Conditional Format 
                                                                                                <span
                                                                                                  className="domain-no-wrap"
                                                                                                >
                                                                                                  Criteria
                                                                                                  <Component
                                                                                                    id="tooltip"
                                                                                                    title="Create Conditional Format Criteria"
                                                                                                  >
                                                                                                    <span
                                                                                                      className="label-help-target"
                                                                                                      onMouseOut={[Function]}
                                                                                                      onMouseOver={[Function]}
                                                                                                    >
                                                                                                      <span
                                                                                                        className="label-help-icon fa fa-question-circle"
                                                                                                      />
                                                                                                      <Overlay
                                                                                                        animation={[Function]}
                                                                                                        placement="right"
                                                                                                        rootClose={false}
                                                                                                        show={false}
                                                                                                      >
                                                                                                        <Overlay
                                                                                                          placement="right"
                                                                                                          rootClose={false}
                                                                                                          show={false}
                                                                                                          transition={[Function]}
                                                                                                        />
                                                                                                      </Overlay>
                                                                                                    </span>
                                                                                                  </Component>
                                                                                                </span>
                                                                                              </DomainFieldLabel>
                                                                                            </div>
                                                                                            <div>
                                                                                              <Button
                                                                                                active={false}
                                                                                                block={false}
                                                                                                bsClass="btn"
                                                                                                bsStyle="default"
                                                                                                className="domain-validation-button"
                                                                                                disabled={false}
                                                                                                id="domainpropertiesrow-conditionalFormat-1-2"
                                                                                                name="domainpropertiesrow-conditionalFormat"
                                                                                                onClick={[Function]}
                                                                                              >
                                                                                                <button
                                                                                                  className="domain-validation-button btn btn-default"
                                                                                                  disabled={false}
                                                                                                  id="domainpropertiesrow-conditionalFormat-1-2"
                                                                                                  name="domainpropertiesrow-conditionalFormat"
                                                                                                  onClick={[Function]}
                                                                                                  type="button"
                                                                                                >
                                                                                                  Add Format
                                                                                                </button>
                                                                                              </Button>
                                                                                              <span
                                                                                                className="domain-text-label"
                                                                                              >
                                                                                                None Set
                                                                                              </span>
                                                                                            </div>
                                                                                          </div>
                                                                                          <div
                                                                                            className=""
                                                                                          >
                                                                                            <div
                                                                                              className="domain-field-label domain-no-wrap"
                                                                                            >
                                                                                              <DomainFieldLabel
                                                                                                helpTipBody={<RangeValidatorHelpText />}
                                                                                                label="Create Range Validator"
                                                                                              >
                                                                                                Create Range 
                                                                                                <span
                                                                                                  className="domain-no-wrap"
                                                                                                >
                                                                                                  Validator
                                                                                                  <Component
                                                                                                    id="tooltip"
                                                                                                    title="Create Range Validator"
                                                                                                  >
                                                                                                    <span
                                                                                                      className="label-help-target"
                                                                                                      onMouseOut={[Function]}
                                                                                                      onMouseOver={[Function]}
                                                                                                    >
                                                                                                      <span
                                                                                                        className="label-help-icon fa fa-question-circle"
                                                                                                      />
                                                                                                      <Overlay
                                                                                                        animation={[Function]}
                                                                                                        placement="right"
                                                                                                        rootClose={false}
                                                                                                        show={false}
                                                                                                      >
                                                                                                        <Overlay
                                                                                                          placement="right"
                                                                                                          rootClose={false}
                                                                                                          show={false}
                                                                                                          transition={[Function]}
                                                                                                        />
                                                                                                      </Overlay>
                                                                                                    </span>
                                                                                                  </Component>
                                                                                                </span>
                                                                                              </DomainFieldLabel>
                                                                                            </div>
                                                                                            <div>
                                                                                              <Button
                                                                                                active={false}
                                                                                                block={false}
                                                                                                bsClass="btn"
                                                                                                bsStyle="default"
                                                                                                className="domain-validation-button"
                                                                                                disabled={false}
                                                                                                id="domainpropertiesrow-rangeValidator-1-2"
                                                                                                name="domainpropertiesrow-rangeValidator"
                                                                                                onClick={[Function]}
                                                                                              >
                                                                                                <button
                                                                                                  className="domain-validation-button btn btn-default"
                                                                                                  disabled={false}
                                                                                                  id="domainpropertiesrow-rangeValidator-1-2"
                                                                                                  name="domainpropertiesrow-rangeValidator"
                                                                                                  onClick={[Function]}
                                                                                                  type="button"
                                                                                                >
                                                                                                  Add Range
                                                                                                </button>
                                                                                              </Button>
                                                                                              <span
                                                                                                className="domain-text-label"
                                                                                              >
                                                                                                None Set
                                                                                              </span>
                                                                                            </div>
                                                                                          </div>
                                                                                        </div>
                                                                                      </Col>
                                                                                    </div>
                                                                                  </Row>
                                                                                </div>
                                                                              </ConditionalFormattingAndValidation>
                                                                            </div>
                                                                          </Col>
                                                                        </div>
                                                                      </div>
                                                                    </DomainRowExpandedOptions>
                                                                  </div>
                                                                </Transition>
                                                              </Collapse>
                                                            </div>
                                                          </Draggable>
                                                        </Connect(Draggable)>
                                                      </PrivateDraggable>
                                                    </PublicDraggable>
                                                  </DomainRow>
                                                  <AnimateInOut
                                                    on={null}
                                                    shouldAnimate={false}
                                                  />
                                                </form>
                                              </Form>
                                            </div>
                                          </Droppable>
                                        </Connect(Droppable)>
                                      </Provider>
                                    </App>
                                  </ErrorBoundary>
                                </DragDropContext>
                                <Row
                                  bsClass="row"
                                  className="domain-add-field-row"
                                  componentClass="div"
                                >
                                  <div
                                    className="domain-add-field-row row"
                                  >
                                    <Col
                                      bsClass="col"
                                      componentClass="div"
                                      xs={12}
                                    >
                                      <div
                                        className="col-xs-12"
                                      >
                                        <AddEntityButton
                                          buttonClass="domain-form-add-btn"
                                          containerClass="pull-right"
                                          entity="Field"
                                          onClick={[Function]}
                                        >
                                          <ActionButton
                                            buttonClass="domain-form-add-btn"
                                            containerClass="pull-right"
                                            helperTitle="More Info"
                                            onClick={[Function]}
                                          >
                                            <div
                                              className="pull-right"
                                            >
                                              <div
                                                className="domain-form-add-btn"
                                              >
                                                <span
                                                  className="container--action-button btn btn-default"
                                                  onClick={[Function]}
                                                >
                                                  <i
                                                    className="fa fa-plus-circle container--addition-icon"
                                                  />
                                                   Add 
                                                  Field
                                                </span>
                                              </div>
                                            </div>
                                          </ActionButton>
                                        </AddEntityButton>
                                      </div>
                                    </Col>
                                  </div>
                                </Row>
                              </div>
                            </div>
                          </Transition>
                        </Collapse>
                      </PanelCollapse>
                    </PanelBody>
                  </div>
                </Panel>
              </Uncontrolled(Panel)>
            </ForwardRef>
          </DomainFormImpl>
        </LookupProvider>
      </DomainForm>
      <div
        className="domain-form-panel domain-designer-buttons"
      >
        <Button
          active={false}
          block={false}
          bsClass="btn"
          bsStyle="default"
          disabled={false}
          onClick={[MockFunction]}
        >
          <button
            className="btn btn-default"
            disabled={false}
            onClick={[MockFunction]}
            type="button"
          >
            Cancel
          </button>
        </Button>
        <Button
          active={false}
          block={false}
          bsClass="btn"
          bsStyle="success"
          className="pull-right"
          disabled={false}
          onClick={[Function]}
        >
          <button
            className="pull-right btn btn-success"
            disabled={false}
            onClick={[Function]}
            type="button"
          >
            Save
          </button>
        </Button>
      </div>
    </BaseDomainDesigner>
  </AssayDesignerPanelsImpl>
</ComponentWithBaseDomainDesigner>
`;

exports[`AssayDesignerPanels default properties 1`] = `
<ComponentWithBaseDomainDesigner
  domainFormDisplayOptions={
    {
      "hideStudyPropertyTypes": true,
    }
  }
  initModel={
    Immutable.Record {
      "allowBackgroundUpload": false,
      "allowEditableResults": false,
      "allowQCStates": false,
      "allowTransformationScript": false,
      "allowPlateMetadata": false,
      "autoCopyTargetContainer": undefined,
      "autoCopyTargetContainerId": undefined,
      "autoLinkCategory": undefined,
      "availableDetectionMethods": undefined,
      "availableMetadataInputFormats": undefined,
      "availablePlateTemplates": undefined,
      "backgroundUpload": false,
      "description": undefined,
      "domains": Immutable.List [
        Immutable.Record {
          "name": "Batch Fields",
          "container": undefined,
          "description": undefined,
          "domainURI": undefined,
          "domainId": null,
          "allowFileLinkProperties": false,
          "allowAttachmentProperties": false,
          "allowFlagProperties": true,
          "allowSampleSubjectProperties": true,
          "allowTextChoiceProperties": true,
          "allowTimepointProperties": false,
          "showDefaultValueSettings": false,
          "defaultDefaultValueType": undefined,
          "defaultValueOptions": Immutable.List [],
          "fields": Immutable.List [],
          "indices": Immutable.List [],
          "domainException": undefined,
          "mandatoryFieldNames": Immutable.List [],
          "reservedFieldNames": Immutable.List [],
          "newDesignFields": undefined,
          "instructions": undefined,
          "domainKindName": undefined,
          "schemaName": undefined,
          "queryName": undefined,
        },
        Immutable.Record {
          "name": "Run Fields",
          "container": undefined,
          "description": undefined,
          "domainURI": undefined,
          "domainId": null,
          "allowFileLinkProperties": false,
          "allowAttachmentProperties": false,
          "allowFlagProperties": true,
          "allowSampleSubjectProperties": true,
          "allowTextChoiceProperties": true,
          "allowTimepointProperties": false,
          "showDefaultValueSettings": false,
          "defaultDefaultValueType": undefined,
          "defaultValueOptions": Immutable.List [],
          "fields": Immutable.List [],
          "indices": Immutable.List [],
          "domainException": undefined,
          "mandatoryFieldNames": Immutable.List [],
          "reservedFieldNames": Immutable.List [],
          "newDesignFields": undefined,
          "instructions": undefined,
          "domainKindName": undefined,
          "schemaName": undefined,
          "queryName": undefined,
        },
        Immutable.Record {
          "name": "Data Fields",
          "container": undefined,
          "description": undefined,
          "domainURI": undefined,
          "domainId": null,
          "allowFileLinkProperties": false,
          "allowAttachmentProperties": false,
          "allowFlagProperties": true,
          "allowSampleSubjectProperties": true,
          "allowTextChoiceProperties": true,
          "allowTimepointProperties": false,
          "showDefaultValueSettings": false,
          "defaultDefaultValueType": undefined,
          "defaultValueOptions": Immutable.List [],
          "fields": Immutable.List [],
          "indices": Immutable.List [],
          "domainException": undefined,
          "mandatoryFieldNames": Immutable.List [],
          "reservedFieldNames": Immutable.List [],
          "newDesignFields": undefined,
          "instructions": undefined,
          "domainKindName": undefined,
          "schemaName": undefined,
          "queryName": undefined,
        },
      ],
      "editableResults": false,
      "editableRuns": false,
      "exception": undefined,
      "metadataInputFormatHelp": undefined,
      "moduleTransformScripts": undefined,
      "name": undefined,
      "plateMetadata": undefined,
      "protocolId": undefined,
      "protocolParameters": undefined,
      "protocolTransformScripts": undefined,
      "providerName": "General",
      "saveScriptFiles": false,
      "selectedDetectionMethod": undefined,
      "selectedMetadataInputFormat": undefined,
      "selectedPlateTemplate": undefined,
      "status": "Active",
      "qcEnabled": undefined,
    }
  }
  onCancel={[MockFunction]}
  onComplete={[MockFunction]}
  testMode={true}
>
  <AssayDesignerPanelsImpl
    currentPanelIndex={0}
    domainFormDisplayOptions={
      {
        "hideStudyPropertyTypes": true,
      }
    }
    firstState={true}
    initModel={
      Immutable.Record {
        "allowBackgroundUpload": false,
        "allowEditableResults": false,
        "allowQCStates": false,
        "allowTransformationScript": false,
        "allowPlateMetadata": false,
        "autoCopyTargetContainer": undefined,
        "autoCopyTargetContainerId": undefined,
        "autoLinkCategory": undefined,
        "availableDetectionMethods": undefined,
        "availableMetadataInputFormats": undefined,
        "availablePlateTemplates": undefined,
        "backgroundUpload": false,
        "description": undefined,
        "domains": Immutable.List [
          Immutable.Record {
            "name": "Batch Fields",
            "container": undefined,
            "description": undefined,
            "domainURI": undefined,
            "domainId": null,
            "allowFileLinkProperties": false,
            "allowAttachmentProperties": false,
            "allowFlagProperties": true,
            "allowSampleSubjectProperties": true,
            "allowTextChoiceProperties": true,
            "allowTimepointProperties": false,
            "showDefaultValueSettings": false,
            "defaultDefaultValueType": undefined,
            "defaultValueOptions": Immutable.List [],
            "fields": Immutable.List [],
            "indices": Immutable.List [],
            "domainException": undefined,
            "mandatoryFieldNames": Immutable.List [],
            "reservedFieldNames": Immutable.List [],
            "newDesignFields": undefined,
            "instructions": undefined,
            "domainKindName": undefined,
            "schemaName": undefined,
            "queryName": undefined,
          },
          Immutable.Record {
            "name": "Run Fields",
            "container": undefined,
            "description": undefined,
            "domainURI": undefined,
            "domainId": null,
            "allowFileLinkProperties": false,
            "allowAttachmentProperties": false,
            "allowFlagProperties": true,
            "allowSampleSubjectProperties": true,
            "allowTextChoiceProperties": true,
            "allowTimepointProperties": false,
            "showDefaultValueSettings": false,
            "defaultDefaultValueType": undefined,
            "defaultValueOptions": Immutable.List [],
            "fields": Immutable.List [],
            "indices": Immutable.List [],
            "domainException": undefined,
            "mandatoryFieldNames": Immutable.List [],
            "reservedFieldNames": Immutable.List [],
            "newDesignFields": undefined,
            "instructions": undefined,
            "domainKindName": undefined,
            "schemaName": undefined,
            "queryName": undefined,
          },
          Immutable.Record {
            "name": "Data Fields",
            "container": undefined,
            "description": undefined,
            "domainURI": undefined,
            "domainId": null,
            "allowFileLinkProperties": false,
            "allowAttachmentProperties": false,
            "allowFlagProperties": true,
            "allowSampleSubjectProperties": true,
            "allowTextChoiceProperties": true,
            "allowTimepointProperties": false,
            "showDefaultValueSettings": false,
            "defaultDefaultValueType": undefined,
            "defaultValueOptions": Immutable.List [],
            "fields": Immutable.List [],
            "indices": Immutable.List [],
            "domainException": undefined,
            "mandatoryFieldNames": Immutable.List [],
            "reservedFieldNames": Immutable.List [],
            "newDesignFields": undefined,
            "instructions": undefined,
            "domainKindName": undefined,
            "schemaName": undefined,
            "queryName": undefined,
          },
        ],
        "editableResults": false,
        "editableRuns": false,
        "exception": undefined,
        "metadataInputFormatHelp": undefined,
        "moduleTransformScripts": undefined,
        "name": undefined,
        "plateMetadata": undefined,
        "protocolId": undefined,
        "protocolParameters": undefined,
        "protocolTransformScripts": undefined,
        "providerName": "General",
        "saveScriptFiles": false,
        "selectedDetectionMethod": undefined,
        "selectedMetadataInputFormat": undefined,
        "selectedPlateTemplate": undefined,
        "status": "Active",
        "qcEnabled": undefined,
      }
    }
    onCancel={[MockFunction]}
    onComplete={[MockFunction]}
    onFinish={[Function]}
    onTogglePanel={[Function]}
    setSubmitting={[Function]}
    submitting={false}
    testMode={true}
    visitedPanels={Immutable.List []}
  >
    <BaseDomainDesigner
      domains={
        Immutable.List [
          Immutable.Record {
            "name": "Batch Fields",
            "container": undefined,
            "description": undefined,
            "domainURI": undefined,
            "domainId": null,
            "allowFileLinkProperties": false,
            "allowAttachmentProperties": false,
            "allowFlagProperties": true,
            "allowSampleSubjectProperties": true,
            "allowTextChoiceProperties": true,
            "allowTimepointProperties": false,
            "showDefaultValueSettings": false,
            "defaultDefaultValueType": undefined,
            "defaultValueOptions": Immutable.List [],
            "fields": Immutable.List [],
            "indices": Immutable.List [],
            "domainException": undefined,
            "mandatoryFieldNames": Immutable.List [],
            "reservedFieldNames": Immutable.List [],
            "newDesignFields": undefined,
            "instructions": undefined,
            "domainKindName": undefined,
            "schemaName": undefined,
            "queryName": undefined,
          },
          Immutable.Record {
            "name": "Run Fields",
            "container": undefined,
            "description": undefined,
            "domainURI": undefined,
            "domainId": null,
            "allowFileLinkProperties": false,
            "allowAttachmentProperties": false,
            "allowFlagProperties": true,
            "allowSampleSubjectProperties": true,
            "allowTextChoiceProperties": true,
            "allowTimepointProperties": false,
            "showDefaultValueSettings": false,
            "defaultDefaultValueType": undefined,
            "defaultValueOptions": Immutable.List [],
            "fields": Immutable.List [],
            "indices": Immutable.List [],
            "domainException": undefined,
            "mandatoryFieldNames": Immutable.List [],
            "reservedFieldNames": Immutable.List [],
            "newDesignFields": undefined,
            "instructions": undefined,
            "domainKindName": undefined,
            "schemaName": undefined,
            "queryName": undefined,
          },
          Immutable.Record {
            "name": "Data Fields",
            "container": undefined,
            "description": undefined,
            "domainURI": undefined,
            "domainId": null,
            "allowFileLinkProperties": false,
            "allowAttachmentProperties": false,
            "allowFlagProperties": true,
            "allowSampleSubjectProperties": true,
            "allowTextChoiceProperties": true,
            "allowTimepointProperties": false,
            "showDefaultValueSettings": false,
            "defaultDefaultValueType": undefined,
            "defaultValueOptions": Immutable.List [],
            "fields": Immutable.List [],
            "indices": Immutable.List [],
            "domainException": undefined,
            "mandatoryFieldNames": Immutable.List [],
            "reservedFieldNames": Immutable.List [],
            "newDesignFields": undefined,
            "instructions": undefined,
            "domainKindName": undefined,
            "schemaName": undefined,
            "queryName": undefined,
          },
        ]
      }
      hasValidProperties={false}
      onCancel={[MockFunction]}
      onFinish={[Function]}
      saveBtnText="Save"
      submitting={false}
      visitedPanels={Immutable.List []}
    >
      <ComponentWithDomainPropertiesPanelCollapse
        controlledCollapse={true}
        hideStudyProperties={true}
        initCollapsed={false}
        model={
          Immutable.Record {
            "allowBackgroundUpload": false,
            "allowEditableResults": false,
            "allowQCStates": false,
            "allowTransformationScript": false,
            "allowPlateMetadata": false,
            "autoCopyTargetContainer": undefined,
            "autoCopyTargetContainerId": undefined,
            "autoLinkCategory": undefined,
            "availableDetectionMethods": undefined,
            "availableMetadataInputFormats": undefined,
            "availablePlateTemplates": undefined,
            "backgroundUpload": false,
            "description": undefined,
            "domains": Immutable.List [
              Immutable.Record {
                "name": "Batch Fields",
                "container": undefined,
                "description": undefined,
                "domainURI": undefined,
                "domainId": null,
                "allowFileLinkProperties": false,
                "allowAttachmentProperties": false,
                "allowFlagProperties": true,
                "allowSampleSubjectProperties": true,
                "allowTextChoiceProperties": true,
                "allowTimepointProperties": false,
                "showDefaultValueSettings": false,
                "defaultDefaultValueType": undefined,
                "defaultValueOptions": Immutable.List [],
                "fields": Immutable.List [],
                "indices": Immutable.List [],
                "domainException": undefined,
                "mandatoryFieldNames": Immutable.List [],
                "reservedFieldNames": Immutable.List [],
                "newDesignFields": undefined,
                "instructions": undefined,
                "domainKindName": undefined,
                "schemaName": undefined,
                "queryName": undefined,
              },
              Immutable.Record {
                "name": "Run Fields",
                "container": undefined,
                "description": undefined,
                "domainURI": undefined,
                "domainId": null,
                "allowFileLinkProperties": false,
                "allowAttachmentProperties": false,
                "allowFlagProperties": true,
                "allowSampleSubjectProperties": true,
                "allowTextChoiceProperties": true,
                "allowTimepointProperties": false,
                "showDefaultValueSettings": false,
                "defaultDefaultValueType": undefined,
                "defaultValueOptions": Immutable.List [],
                "fields": Immutable.List [],
                "indices": Immutable.List [],
                "domainException": undefined,
                "mandatoryFieldNames": Immutable.List [],
                "reservedFieldNames": Immutable.List [],
                "newDesignFields": undefined,
                "instructions": undefined,
                "domainKindName": undefined,
                "schemaName": undefined,
                "queryName": undefined,
              },
              Immutable.Record {
                "name": "Data Fields",
                "container": undefined,
                "description": undefined,
                "domainURI": undefined,
                "domainId": null,
                "allowFileLinkProperties": false,
                "allowAttachmentProperties": false,
                "allowFlagProperties": true,
                "allowSampleSubjectProperties": true,
                "allowTextChoiceProperties": true,
                "allowTimepointProperties": false,
                "showDefaultValueSettings": false,
                "defaultDefaultValueType": undefined,
                "defaultValueOptions": Immutable.List [],
                "fields": Immutable.List [],
                "indices": Immutable.List [],
                "domainException": undefined,
                "mandatoryFieldNames": Immutable.List [],
                "reservedFieldNames": Immutable.List [],
                "newDesignFields": undefined,
                "instructions": undefined,
                "domainKindName": undefined,
                "schemaName": undefined,
                "queryName": undefined,
              },
            ],
            "editableResults": false,
            "editableRuns": false,
            "exception": undefined,
            "metadataInputFormatHelp": undefined,
            "moduleTransformScripts": undefined,
            "name": undefined,
            "plateMetadata": undefined,
            "protocolId": undefined,
            "protocolParameters": undefined,
            "protocolTransformScripts": undefined,
            "providerName": "General",
            "saveScriptFiles": false,
            "selectedDetectionMethod": undefined,
            "selectedMetadataInputFormat": undefined,
            "selectedPlateTemplate": undefined,
            "status": "Active",
            "qcEnabled": undefined,
          }
        }
        onChange={[Function]}
        onToggle={[Function]}
        panelStatus="NONE"
        validate={false}
      >
        <Component
          appPropertiesOnly={false}
          asPanel={true}
          collapsed={false}
          controlledCollapse={true}
          helpTopic="defineAssaySchema"
          hideStudyProperties={true}
          model={
            Immutable.Record {
              "allowBackgroundUpload": false,
              "allowEditableResults": false,
              "allowQCStates": false,
              "allowTransformationScript": false,
              "allowPlateMetadata": false,
              "autoCopyTargetContainer": undefined,
              "autoCopyTargetContainerId": undefined,
              "autoLinkCategory": undefined,
              "availableDetectionMethods": undefined,
              "availableMetadataInputFormats": undefined,
              "availablePlateTemplates": undefined,
              "backgroundUpload": false,
              "description": undefined,
              "domains": Immutable.List [
                Immutable.Record {
                  "name": "Batch Fields",
                  "container": undefined,
                  "description": undefined,
                  "domainURI": undefined,
                  "domainId": null,
                  "allowFileLinkProperties": false,
                  "allowAttachmentProperties": false,
                  "allowFlagProperties": true,
                  "allowSampleSubjectProperties": true,
                  "allowTextChoiceProperties": true,
                  "allowTimepointProperties": false,
                  "showDefaultValueSettings": false,
                  "defaultDefaultValueType": undefined,
                  "defaultValueOptions": Immutable.List [],
                  "fields": Immutable.List [],
                  "indices": Immutable.List [],
                  "domainException": undefined,
                  "mandatoryFieldNames": Immutable.List [],
                  "reservedFieldNames": Immutable.List [],
                  "newDesignFields": undefined,
                  "instructions": undefined,
                  "domainKindName": undefined,
                  "schemaName": undefined,
                  "queryName": undefined,
                },
                Immutable.Record {
                  "name": "Run Fields",
                  "container": undefined,
                  "description": undefined,
                  "domainURI": undefined,
                  "domainId": null,
                  "allowFileLinkProperties": false,
                  "allowAttachmentProperties": false,
                  "allowFlagProperties": true,
                  "allowSampleSubjectProperties": true,
                  "allowTextChoiceProperties": true,
                  "allowTimepointProperties": false,
                  "showDefaultValueSettings": false,
                  "defaultDefaultValueType": undefined,
                  "defaultValueOptions": Immutable.List [],
                  "fields": Immutable.List [],
                  "indices": Immutable.List [],
                  "domainException": undefined,
                  "mandatoryFieldNames": Immutable.List [],
                  "reservedFieldNames": Immutable.List [],
                  "newDesignFields": undefined,
                  "instructions": undefined,
                  "domainKindName": undefined,
                  "schemaName": undefined,
                  "queryName": undefined,
                },
                Immutable.Record {
                  "name": "Data Fields",
                  "container": undefined,
                  "description": undefined,
                  "domainURI": undefined,
                  "domainId": null,
                  "allowFileLinkProperties": false,
                  "allowAttachmentProperties": false,
                  "allowFlagProperties": true,
                  "allowSampleSubjectProperties": true,
                  "allowTextChoiceProperties": true,
                  "allowTimepointProperties": false,
                  "showDefaultValueSettings": false,
                  "defaultDefaultValueType": undefined,
                  "defaultValueOptions": Immutable.List [],
                  "fields": Immutable.List [],
                  "indices": Immutable.List [],
                  "domainException": undefined,
                  "mandatoryFieldNames": Immutable.List [],
                  "reservedFieldNames": Immutable.List [],
                  "newDesignFields": undefined,
                  "instructions": undefined,
                  "domainKindName": undefined,
                  "schemaName": undefined,
                  "queryName": undefined,
                },
              ],
              "editableResults": false,
              "editableRuns": false,
              "exception": undefined,
              "metadataInputFormatHelp": undefined,
              "moduleTransformScripts": undefined,
              "name": undefined,
              "plateMetadata": undefined,
              "protocolId": undefined,
              "protocolParameters": undefined,
              "protocolTransformScripts": undefined,
              "providerName": "General",
              "saveScriptFiles": false,
              "selectedDetectionMethod": undefined,
              "selectedMetadataInputFormat": undefined,
              "selectedPlateTemplate": undefined,
              "status": "Active",
              "qcEnabled": undefined,
            }
          }
          onChange={[Function]}
          panelStatus="NONE"
          togglePanel={[Function]}
          validate={false}
        >
          <BasePropertiesPanel
            appPropertiesOnly={false}
            asPanel={true}
            collapsed={false}
            controlledCollapse={true}
            headerId="assay-properties-hdr"
            helpTopic="defineAssaySchema"
            hideStudyProperties={true}
            isValid={true}
            model={
              Immutable.Record {
                "allowBackgroundUpload": false,
                "allowEditableResults": false,
                "allowQCStates": false,
                "allowTransformationScript": false,
                "allowPlateMetadata": false,
                "autoCopyTargetContainer": undefined,
                "autoCopyTargetContainerId": undefined,
                "autoLinkCategory": undefined,
                "availableDetectionMethods": undefined,
                "availableMetadataInputFormats": undefined,
                "availablePlateTemplates": undefined,
                "backgroundUpload": false,
                "description": undefined,
                "domains": Immutable.List [
                  Immutable.Record {
                    "name": "Batch Fields",
                    "container": undefined,
                    "description": undefined,
                    "domainURI": undefined,
                    "domainId": null,
                    "allowFileLinkProperties": false,
                    "allowAttachmentProperties": false,
                    "allowFlagProperties": true,
                    "allowSampleSubjectProperties": true,
                    "allowTextChoiceProperties": true,
                    "allowTimepointProperties": false,
                    "showDefaultValueSettings": false,
                    "defaultDefaultValueType": undefined,
                    "defaultValueOptions": Immutable.List [],
                    "fields": Immutable.List [],
                    "indices": Immutable.List [],
                    "domainException": undefined,
                    "mandatoryFieldNames": Immutable.List [],
                    "reservedFieldNames": Immutable.List [],
                    "newDesignFields": undefined,
                    "instructions": undefined,
                    "domainKindName": undefined,
                    "schemaName": undefined,
                    "queryName": undefined,
                  },
                  Immutable.Record {
                    "name": "Run Fields",
                    "container": undefined,
                    "description": undefined,
                    "domainURI": undefined,
                    "domainId": null,
                    "allowFileLinkProperties": false,
                    "allowAttachmentProperties": false,
                    "allowFlagProperties": true,
                    "allowSampleSubjectProperties": true,
                    "allowTextChoiceProperties": true,
                    "allowTimepointProperties": false,
                    "showDefaultValueSettings": false,
                    "defaultDefaultValueType": undefined,
                    "defaultValueOptions": Immutable.List [],
                    "fields": Immutable.List [],
                    "indices": Immutable.List [],
                    "domainException": undefined,
                    "mandatoryFieldNames": Immutable.List [],
                    "reservedFieldNames": Immutable.List [],
                    "newDesignFields": undefined,
                    "instructions": undefined,
                    "domainKindName": undefined,
                    "schemaName": undefined,
                    "queryName": undefined,
                  },
                  Immutable.Record {
                    "name": "Data Fields",
                    "container": undefined,
                    "description": undefined,
                    "domainURI": undefined,
                    "domainId": null,
                    "allowFileLinkProperties": false,
                    "allowAttachmentProperties": false,
                    "allowFlagProperties": true,
                    "allowSampleSubjectProperties": true,
                    "allowTextChoiceProperties": true,
                    "allowTimepointProperties": false,
                    "showDefaultValueSettings": false,
                    "defaultDefaultValueType": undefined,
                    "defaultValueOptions": Immutable.List [],
                    "fields": Immutable.List [],
                    "indices": Immutable.List [],
                    "domainException": undefined,
                    "mandatoryFieldNames": Immutable.List [],
                    "reservedFieldNames": Immutable.List [],
                    "newDesignFields": undefined,
                    "instructions": undefined,
                    "domainKindName": undefined,
                    "schemaName": undefined,
                    "queryName": undefined,
                  },
                ],
                "editableResults": false,
                "editableRuns": false,
                "exception": undefined,
                "metadataInputFormatHelp": undefined,
                "moduleTransformScripts": undefined,
                "name": undefined,
                "plateMetadata": undefined,
                "protocolId": undefined,
                "protocolParameters": undefined,
                "protocolTransformScripts": undefined,
                "providerName": "General",
                "saveScriptFiles": false,
                "selectedDetectionMethod": undefined,
                "selectedMetadataInputFormat": undefined,
                "selectedPlateTemplate": undefined,
                "status": "Active",
                "qcEnabled": undefined,
              }
            }
            onChange={[Function]}
            panelStatus="NONE"
            title="Assay Properties"
            togglePanel={[Function]}
            updateValidStatus={[Function]}
            useTheme={false}
            validate={false}
          >
            <ForwardRef
              className="domain-form-panel domain-panel-no-theme"
              expanded={true}
              onToggle={[Function]}
            >
              <Uncontrolled(Panel)
                className="domain-form-panel domain-panel-no-theme"
                expanded={true}
                innerRef={null}
                onToggle={[Function]}
              >
                <Panel
                  bsClass="panel"
                  bsStyle="default"
                  className="domain-form-panel domain-panel-no-theme"
                  expanded={true}
                  onToggle={[Function]}
                >
                  <div
                    className="domain-form-panel domain-panel-no-theme panel panel-default"
                  >
                    <CollapsiblePanelHeader
                      collapsed={false}
                      controlledCollapse={true}
                      iconHelpMsg="Contains errors or is missing required values."
                      id="assay-properties-hdr"
                      isValid={true}
                      panelStatus="NONE"
                      title="Assay Properties"
                      togglePanel={[Function]}
                      useTheme={false}
                    >
                      <PanelHeading
                        bsClass="panel"
                        className="domain-panel-header domain-heading-collapsible domain-panel-header-expanded domain-panel-header-no-theme"
                        componentClass="div"
                        id="assay-properties-hdr"
                        onClick={[Function]}
                      >
                        <div
                          className="domain-panel-header domain-heading-collapsible domain-panel-header-expanded domain-panel-header-no-theme panel-heading"
                          id="assay-properties-hdr"
                          onClick={[Function]}
                        >
                          <span
                            className="domain-panel-title"
                          >
                            Assay Properties
                          </span>
                          <span
                            className="pull-right"
                          >
                            <span
                              className="fa fa-lg fa-minus-square domain-form-collapse-btn"
                            />
                          </span>
                        </div>
                      </PanelHeading>
                    </CollapsiblePanelHeader>
                    <PanelBody
                      bsClass="panel"
                      collapsible={true}
                    >
                      <PanelCollapse
                        bsClass="panel"
                      >
                        <Collapse
                          appear={false}
                          dimension="height"
                          getDimensionValue={[Function]}
                          in={true}
                          mountOnEnter={false}
                          timeout={300}
                          unmountOnExit={false}
                        >
                          <Transition
                            appear={false}
                            aria-expanded={null}
                            enter={true}
                            exit={true}
                            in={true}
                            mountOnEnter={false}
                            onEnter={[Function]}
                            onEntered={[Function]}
                            onEntering={[Function]}
                            onExit={[Function]}
                            onExited={[Function]}
                            onExiting={[Function]}
                            timeout={300}
                            unmountOnExit={false}
                          >
                            <div
                              aria-expanded={null}
                              className="panel-collapse collapse in"
                            >
                              <div
                                className="panel-body"
                              >
                                <HelpTopicURL
                                  helpTopic="defineAssaySchema"
                                  nounPlural="assays"
                                >
                                  <Row
                                    bsClass="row"
                                    componentClass="div"
                                  >
                                    <div
                                      className="row"
                                    >
                                      <Col
                                        bsClass="col"
                                        componentClass="div"
                                        xs={12}
                                      >
                                        <div
                                          className="col-xs-12"
                                        >
                                          <HelpLink
                                            className="domain-field-float-right"
                                            topic="defineAssaySchema"
                                          >
                                            <a
                                              className="domain-field-float-right"
                                              href="https://www.labkey.org/Documentation/wiki-page.view?referrer=inPage&name=defineAssaySchema"
                                              rel="noopener noreferrer"
                                              target="_blank"
                                            >
                                              Learn more about designing assays
                                            </a>
                                          </HelpLink>
                                        </div>
                                      </Col>
                                    </div>
                                  </Row>
                                </HelpTopicURL>
                                <AssayPropertiesForm
                                  appPropertiesOnly={false}
                                  hideStudyProperties={true}
                                  model={
                                    Immutable.Record {
                                      "allowBackgroundUpload": false,
                                      "allowEditableResults": false,
                                      "allowQCStates": false,
                                      "allowTransformationScript": false,
                                      "allowPlateMetadata": false,
                                      "autoCopyTargetContainer": undefined,
                                      "autoCopyTargetContainerId": undefined,
                                      "autoLinkCategory": undefined,
                                      "availableDetectionMethods": undefined,
                                      "availableMetadataInputFormats": undefined,
                                      "availablePlateTemplates": undefined,
                                      "backgroundUpload": false,
                                      "description": undefined,
                                      "domains": Immutable.List [
                                        Immutable.Record {
                                          "name": "Batch Fields",
                                          "container": undefined,
                                          "description": undefined,
                                          "domainURI": undefined,
                                          "domainId": null,
                                          "allowFileLinkProperties": false,
                                          "allowAttachmentProperties": false,
                                          "allowFlagProperties": true,
                                          "allowSampleSubjectProperties": true,
                                          "allowTextChoiceProperties": true,
                                          "allowTimepointProperties": false,
                                          "showDefaultValueSettings": false,
                                          "defaultDefaultValueType": undefined,
                                          "defaultValueOptions": Immutable.List [],
                                          "fields": Immutable.List [],
                                          "indices": Immutable.List [],
                                          "domainException": undefined,
                                          "mandatoryFieldNames": Immutable.List [],
                                          "reservedFieldNames": Immutable.List [],
                                          "newDesignFields": undefined,
                                          "instructions": undefined,
                                          "domainKindName": undefined,
                                          "schemaName": undefined,
                                          "queryName": undefined,
                                        },
                                        Immutable.Record {
                                          "name": "Run Fields",
                                          "container": undefined,
                                          "description": undefined,
                                          "domainURI": undefined,
                                          "domainId": null,
                                          "allowFileLinkProperties": false,
                                          "allowAttachmentProperties": false,
                                          "allowFlagProperties": true,
                                          "allowSampleSubjectProperties": true,
                                          "allowTextChoiceProperties": true,
                                          "allowTimepointProperties": false,
                                          "showDefaultValueSettings": false,
                                          "defaultDefaultValueType": undefined,
                                          "defaultValueOptions": Immutable.List [],
                                          "fields": Immutable.List [],
                                          "indices": Immutable.List [],
                                          "domainException": undefined,
                                          "mandatoryFieldNames": Immutable.List [],
                                          "reservedFieldNames": Immutable.List [],
                                          "newDesignFields": undefined,
                                          "instructions": undefined,
                                          "domainKindName": undefined,
                                          "schemaName": undefined,
                                          "queryName": undefined,
                                        },
                                        Immutable.Record {
                                          "name": "Data Fields",
                                          "container": undefined,
                                          "description": undefined,
                                          "domainURI": undefined,
                                          "domainId": null,
                                          "allowFileLinkProperties": false,
                                          "allowAttachmentProperties": false,
                                          "allowFlagProperties": true,
                                          "allowSampleSubjectProperties": true,
                                          "allowTextChoiceProperties": true,
                                          "allowTimepointProperties": false,
                                          "showDefaultValueSettings": false,
                                          "defaultDefaultValueType": undefined,
                                          "defaultValueOptions": Immutable.List [],
                                          "fields": Immutable.List [],
                                          "indices": Immutable.List [],
                                          "domainException": undefined,
                                          "mandatoryFieldNames": Immutable.List [],
                                          "reservedFieldNames": Immutable.List [],
                                          "newDesignFields": undefined,
                                          "instructions": undefined,
                                          "domainKindName": undefined,
                                          "schemaName": undefined,
                                          "queryName": undefined,
                                        },
                                      ],
                                      "editableResults": false,
                                      "editableRuns": false,
                                      "exception": undefined,
                                      "metadataInputFormatHelp": undefined,
                                      "moduleTransformScripts": undefined,
                                      "name": undefined,
                                      "plateMetadata": undefined,
                                      "protocolId": undefined,
                                      "protocolParameters": undefined,
                                      "protocolTransformScripts": undefined,
                                      "providerName": "General",
                                      "saveScriptFiles": false,
                                      "selectedDetectionMethod": undefined,
                                      "selectedMetadataInputFormat": undefined,
                                      "selectedPlateTemplate": undefined,
                                      "status": "Active",
                                      "qcEnabled": undefined,
                                    }
                                  }
                                  onChange={[Function]}
                                >
                                  <Form
                                    bsClass="form"
                                    componentClass="form"
                                    horizontal={false}
                                    inline={false}
                                  >
                                    <form
                                      className=""
                                    >
                                      <Col
                                        bsClass="col"
                                        componentClass="div"
                                        lg={6}
                                        xs={12}
                                      >
                                        <div
                                          className="col-lg-6 col-xs-12"
                                        >
                                          <div
                                            className="domain-field-padding-bottom"
                                          >
                                            <SectionHeading
                                              title="Basic Properties"
                                            >
                                              <div
                                                className="domain-field-section-heading"
                                              >
                                                Basic Properties
                                              </div>
                                            </SectionHeading>
                                            <NameInput
                                              appPropertiesOnly={false}
                                              model={
                                                Immutable.Record {
                                                  "allowBackgroundUpload": false,
                                                  "allowEditableResults": false,
                                                  "allowQCStates": false,
                                                  "allowTransformationScript": false,
                                                  "allowPlateMetadata": false,
                                                  "autoCopyTargetContainer": undefined,
                                                  "autoCopyTargetContainerId": undefined,
                                                  "autoLinkCategory": undefined,
                                                  "availableDetectionMethods": undefined,
                                                  "availableMetadataInputFormats": undefined,
                                                  "availablePlateTemplates": undefined,
                                                  "backgroundUpload": false,
                                                  "description": undefined,
                                                  "domains": Immutable.List [
                                                    Immutable.Record {
                                                      "name": "Batch Fields",
                                                      "container": undefined,
                                                      "description": undefined,
                                                      "domainURI": undefined,
                                                      "domainId": null,
                                                      "allowFileLinkProperties": false,
                                                      "allowAttachmentProperties": false,
                                                      "allowFlagProperties": true,
                                                      "allowSampleSubjectProperties": true,
                                                      "allowTextChoiceProperties": true,
                                                      "allowTimepointProperties": false,
                                                      "showDefaultValueSettings": false,
                                                      "defaultDefaultValueType": undefined,
                                                      "defaultValueOptions": Immutable.List [],
                                                      "fields": Immutable.List [],
                                                      "indices": Immutable.List [],
                                                      "domainException": undefined,
                                                      "mandatoryFieldNames": Immutable.List [],
                                                      "reservedFieldNames": Immutable.List [],
                                                      "newDesignFields": undefined,
                                                      "instructions": undefined,
                                                      "domainKindName": undefined,
                                                      "schemaName": undefined,
                                                      "queryName": undefined,
                                                    },
                                                    Immutable.Record {
                                                      "name": "Run Fields",
                                                      "container": undefined,
                                                      "description": undefined,
                                                      "domainURI": undefined,
                                                      "domainId": null,
                                                      "allowFileLinkProperties": false,
                                                      "allowAttachmentProperties": false,
                                                      "allowFlagProperties": true,
                                                      "allowSampleSubjectProperties": true,
                                                      "allowTextChoiceProperties": true,
                                                      "allowTimepointProperties": false,
                                                      "showDefaultValueSettings": false,
                                                      "defaultDefaultValueType": undefined,
                                                      "defaultValueOptions": Immutable.List [],
                                                      "fields": Immutable.List [],
                                                      "indices": Immutable.List [],
                                                      "domainException": undefined,
                                                      "mandatoryFieldNames": Immutable.List [],
                                                      "reservedFieldNames": Immutable.List [],
                                                      "newDesignFields": undefined,
                                                      "instructions": undefined,
                                                      "domainKindName": undefined,
                                                      "schemaName": undefined,
                                                      "queryName": undefined,
                                                    },
                                                    Immutable.Record {
                                                      "name": "Data Fields",
                                                      "container": undefined,
                                                      "description": undefined,
                                                      "domainURI": undefined,
                                                      "domainId": null,
                                                      "allowFileLinkProperties": false,
                                                      "allowAttachmentProperties": false,
                                                      "allowFlagProperties": true,
                                                      "allowSampleSubjectProperties": true,
                                                      "allowTextChoiceProperties": true,
                                                      "allowTimepointProperties": false,
                                                      "showDefaultValueSettings": false,
                                                      "defaultDefaultValueType": undefined,
                                                      "defaultValueOptions": Immutable.List [],
                                                      "fields": Immutable.List [],
                                                      "indices": Immutable.List [],
                                                      "domainException": undefined,
                                                      "mandatoryFieldNames": Immutable.List [],
                                                      "reservedFieldNames": Immutable.List [],
                                                      "newDesignFields": undefined,
                                                      "instructions": undefined,
                                                      "domainKindName": undefined,
                                                      "schemaName": undefined,
                                                      "queryName": undefined,
                                                    },
                                                  ],
                                                  "editableResults": false,
                                                  "editableRuns": false,
                                                  "exception": undefined,
                                                  "metadataInputFormatHelp": undefined,
                                                  "moduleTransformScripts": undefined,
                                                  "name": undefined,
                                                  "plateMetadata": undefined,
                                                  "protocolId": undefined,
                                                  "protocolParameters": undefined,
                                                  "protocolTransformScripts": undefined,
                                                  "providerName": "General",
                                                  "saveScriptFiles": false,
                                                  "selectedDetectionMethod": undefined,
                                                  "selectedMetadataInputFormat": undefined,
                                                  "selectedPlateTemplate": undefined,
                                                  "status": "Active",
                                                  "qcEnabled": undefined,
                                                }
                                              }
                                              onChange={[Function]}
                                            >
                                              <Component
                                                appPropertiesOnly={false}
                                                colSize={9}
                                                helpTipBody={
                                                  <p>
                                                    The name for this assay design. Note that this can't be changed after the assay design is created.
                                                  </p>
                                                }
                                                label="Name"
                                                required={true}
                                              >
                                                <Row
                                                  bsClass="row"
                                                  className="margin-top"
                                                  componentClass="div"
                                                >
                                                  <div
                                                    className="margin-top row"
                                                  >
                                                    <Col
                                                      bsClass="col"
                                                      componentClass="div"
                                                      lg={4}
                                                      xs={3}
                                                    >
                                                      <div
                                                        className="col-lg-4 col-xs-3"
                                                      >
                                                        <DomainFieldLabel
                                                          helpTipBody={
                                                            <p>
                                                              The name for this assay design. Note that this can't be changed after the assay design is created.
                                                            </p>
                                                          }
                                                          label="Name"
                                                          required={true}
                                                        >
                                                          <span
                                                            className="domain-no-wrap"
                                                          >
                                                            Name
                                                            <Component
                                                              id="tooltip"
                                                              required={true}
                                                              title="Name"
                                                            >
                                                              <span
                                                                className="label-help-target"
                                                                onMouseOut={[Function]}
                                                                onMouseOver={[Function]}
                                                              >
                                                                <span
                                                                  className="label-help-icon fa fa-question-circle"
                                                                />
                                                                <Overlay
                                                                  animation={[Function]}
                                                                  placement="right"
                                                                  rootClose={false}
                                                                  show={false}
                                                                >
                                                                  <Overlay
                                                                    placement="right"
                                                                    rootClose={false}
                                                                    show={false}
                                                                    transition={[Function]}
                                                                  />
                                                                </Overlay>
                                                              </span>
                                                            </Component>
                                                             *
                                                          </span>
                                                        </DomainFieldLabel>
                                                      </div>
                                                    </Col>
                                                    <Col
                                                      bsClass="col"
                                                      componentClass="div"
                                                      lg={8}
                                                      xs={9}
                                                    >
                                                      <div
                                                        className="col-lg-8 col-xs-9"
                                                      >
                                                        <FormControl
                                                          bsClass="form-control"
                                                          componentClass="input"
                                                          disabled={false}
                                                          id="assay-design-name"
                                                          onChange={[Function]}
                                                          placeholder="Enter a name for this assay"
                                                          type="text"
                                                          value=""
                                                        >
                                                          <input
                                                            className="form-control"
                                                            disabled={false}
                                                            id="assay-design-name"
                                                            onChange={[Function]}
                                                            placeholder="Enter a name for this assay"
                                                            type="text"
                                                            value=""
                                                          />
                                                        </FormControl>
                                                      </div>
                                                    </Col>
                                                  </div>
                                                </Row>
                                              </Component>
                                            </NameInput>
                                            <DescriptionInput
                                              appPropertiesOnly={false}
                                              model={
                                                Immutable.Record {
                                                  "allowBackgroundUpload": false,
                                                  "allowEditableResults": false,
                                                  "allowQCStates": false,
                                                  "allowTransformationScript": false,
                                                  "allowPlateMetadata": false,
                                                  "autoCopyTargetContainer": undefined,
                                                  "autoCopyTargetContainerId": undefined,
                                                  "autoLinkCategory": undefined,
                                                  "availableDetectionMethods": undefined,
                                                  "availableMetadataInputFormats": undefined,
                                                  "availablePlateTemplates": undefined,
                                                  "backgroundUpload": false,
                                                  "description": undefined,
                                                  "domains": Immutable.List [
                                                    Immutable.Record {
                                                      "name": "Batch Fields",
                                                      "container": undefined,
                                                      "description": undefined,
                                                      "domainURI": undefined,
                                                      "domainId": null,
                                                      "allowFileLinkProperties": false,
                                                      "allowAttachmentProperties": false,
                                                      "allowFlagProperties": true,
                                                      "allowSampleSubjectProperties": true,
                                                      "allowTextChoiceProperties": true,
                                                      "allowTimepointProperties": false,
                                                      "showDefaultValueSettings": false,
                                                      "defaultDefaultValueType": undefined,
                                                      "defaultValueOptions": Immutable.List [],
                                                      "fields": Immutable.List [],
                                                      "indices": Immutable.List [],
                                                      "domainException": undefined,
                                                      "mandatoryFieldNames": Immutable.List [],
                                                      "reservedFieldNames": Immutable.List [],
                                                      "newDesignFields": undefined,
                                                      "instructions": undefined,
                                                      "domainKindName": undefined,
                                                      "schemaName": undefined,
                                                      "queryName": undefined,
                                                    },
                                                    Immutable.Record {
                                                      "name": "Run Fields",
                                                      "container": undefined,
                                                      "description": undefined,
                                                      "domainURI": undefined,
                                                      "domainId": null,
                                                      "allowFileLinkProperties": false,
                                                      "allowAttachmentProperties": false,
                                                      "allowFlagProperties": true,
                                                      "allowSampleSubjectProperties": true,
                                                      "allowTextChoiceProperties": true,
                                                      "allowTimepointProperties": false,
                                                      "showDefaultValueSettings": false,
                                                      "defaultDefaultValueType": undefined,
                                                      "defaultValueOptions": Immutable.List [],
                                                      "fields": Immutable.List [],
                                                      "indices": Immutable.List [],
                                                      "domainException": undefined,
                                                      "mandatoryFieldNames": Immutable.List [],
                                                      "reservedFieldNames": Immutable.List [],
                                                      "newDesignFields": undefined,
                                                      "instructions": undefined,
                                                      "domainKindName": undefined,
                                                      "schemaName": undefined,
                                                      "queryName": undefined,
                                                    },
                                                    Immutable.Record {
                                                      "name": "Data Fields",
                                                      "container": undefined,
                                                      "description": undefined,
                                                      "domainURI": undefined,
                                                      "domainId": null,
                                                      "allowFileLinkProperties": false,
                                                      "allowAttachmentProperties": false,
                                                      "allowFlagProperties": true,
                                                      "allowSampleSubjectProperties": true,
                                                      "allowTextChoiceProperties": true,
                                                      "allowTimepointProperties": false,
                                                      "showDefaultValueSettings": false,
                                                      "defaultDefaultValueType": undefined,
                                                      "defaultValueOptions": Immutable.List [],
                                                      "fields": Immutable.List [],
                                                      "indices": Immutable.List [],
                                                      "domainException": undefined,
                                                      "mandatoryFieldNames": Immutable.List [],
                                                      "reservedFieldNames": Immutable.List [],
                                                      "newDesignFields": undefined,
                                                      "instructions": undefined,
                                                      "domainKindName": undefined,
                                                      "schemaName": undefined,
                                                      "queryName": undefined,
                                                    },
                                                  ],
                                                  "editableResults": false,
                                                  "editableRuns": false,
                                                  "exception": undefined,
                                                  "metadataInputFormatHelp": undefined,
                                                  "moduleTransformScripts": undefined,
                                                  "name": undefined,
                                                  "plateMetadata": undefined,
                                                  "protocolId": undefined,
                                                  "protocolParameters": undefined,
                                                  "protocolTransformScripts": undefined,
                                                  "providerName": "General",
                                                  "saveScriptFiles": false,
                                                  "selectedDetectionMethod": undefined,
                                                  "selectedMetadataInputFormat": undefined,
                                                  "selectedPlateTemplate": undefined,
                                                  "status": "Active",
                                                  "qcEnabled": undefined,
                                                }
                                              }
                                              onChange={[Function]}
                                            >
                                              <Component
                                                appPropertiesOnly={false}
                                                colSize={9}
                                                helpTipBody={
                                                  <p>
                                                    A short description for this assay design.
                                                  </p>
                                                }
                                                label="Description"
                                              >
                                                <Row
                                                  bsClass="row"
                                                  className="margin-top"
                                                  componentClass="div"
                                                >
                                                  <div
                                                    className="margin-top row"
                                                  >
                                                    <Col
                                                      bsClass="col"
                                                      componentClass="div"
                                                      lg={4}
                                                      xs={3}
                                                    >
                                                      <div
                                                        className="col-lg-4 col-xs-3"
                                                      >
                                                        <DomainFieldLabel
                                                          helpTipBody={
                                                            <p>
                                                              A short description for this assay design.
                                                            </p>
                                                          }
                                                          label="Description"
                                                        >
                                                          <span
                                                            className="domain-no-wrap"
                                                          >
                                                            Description
                                                            <Component
                                                              id="tooltip"
                                                              title="Description"
                                                            >
                                                              <span
                                                                className="label-help-target"
                                                                onMouseOut={[Function]}
                                                                onMouseOver={[Function]}
                                                              >
                                                                <span
                                                                  className="label-help-icon fa fa-question-circle"
                                                                />
                                                                <Overlay
                                                                  animation={[Function]}
                                                                  placement="right"
                                                                  rootClose={false}
                                                                  show={false}
                                                                >
                                                                  <Overlay
                                                                    placement="right"
                                                                    rootClose={false}
                                                                    show={false}
                                                                    transition={[Function]}
                                                                  />
                                                                </Overlay>
                                                              </span>
                                                            </Component>
                                                          </span>
                                                        </DomainFieldLabel>
                                                      </div>
                                                    </Col>
                                                    <Col
                                                      bsClass="col"
                                                      componentClass="div"
                                                      lg={8}
                                                      xs={9}
                                                    >
                                                      <div
                                                        className="col-lg-8 col-xs-9"
                                                      >
                                                        <textarea
                                                          className="form-control textarea-noresize"
                                                          id="assay-design-description"
                                                          onChange={[Function]}
                                                          value=""
                                                        />
                                                      </div>
                                                    </Col>
                                                  </div>
                                                </Row>
                                              </Component>
                                            </DescriptionInput>
                                          </div>
                                          <div
                                            className="domain-field-padding-bottom"
                                          >
                                            <SectionHeading
                                              title="Editing Settings"
                                            >
                                              <div
                                                className="domain-field-section-heading"
                                              >
                                                Editing Settings
                                              </div>
                                            </SectionHeading>
                                            <EditableRunsInput
                                              appPropertiesOnly={false}
                                              model={
                                                Immutable.Record {
                                                  "allowBackgroundUpload": false,
                                                  "allowEditableResults": false,
                                                  "allowQCStates": false,
                                                  "allowTransformationScript": false,
                                                  "allowPlateMetadata": false,
                                                  "autoCopyTargetContainer": undefined,
                                                  "autoCopyTargetContainerId": undefined,
                                                  "autoLinkCategory": undefined,
                                                  "availableDetectionMethods": undefined,
                                                  "availableMetadataInputFormats": undefined,
                                                  "availablePlateTemplates": undefined,
                                                  "backgroundUpload": false,
                                                  "description": undefined,
                                                  "domains": Immutable.List [
                                                    Immutable.Record {
                                                      "name": "Batch Fields",
                                                      "container": undefined,
                                                      "description": undefined,
                                                      "domainURI": undefined,
                                                      "domainId": null,
                                                      "allowFileLinkProperties": false,
                                                      "allowAttachmentProperties": false,
                                                      "allowFlagProperties": true,
                                                      "allowSampleSubjectProperties": true,
                                                      "allowTextChoiceProperties": true,
                                                      "allowTimepointProperties": false,
                                                      "showDefaultValueSettings": false,
                                                      "defaultDefaultValueType": undefined,
                                                      "defaultValueOptions": Immutable.List [],
                                                      "fields": Immutable.List [],
                                                      "indices": Immutable.List [],
                                                      "domainException": undefined,
                                                      "mandatoryFieldNames": Immutable.List [],
                                                      "reservedFieldNames": Immutable.List [],
                                                      "newDesignFields": undefined,
                                                      "instructions": undefined,
                                                      "domainKindName": undefined,
                                                      "schemaName": undefined,
                                                      "queryName": undefined,
                                                    },
                                                    Immutable.Record {
                                                      "name": "Run Fields",
                                                      "container": undefined,
                                                      "description": undefined,
                                                      "domainURI": undefined,
                                                      "domainId": null,
                                                      "allowFileLinkProperties": false,
                                                      "allowAttachmentProperties": false,
                                                      "allowFlagProperties": true,
                                                      "allowSampleSubjectProperties": true,
                                                      "allowTextChoiceProperties": true,
                                                      "allowTimepointProperties": false,
                                                      "showDefaultValueSettings": false,
                                                      "defaultDefaultValueType": undefined,
                                                      "defaultValueOptions": Immutable.List [],
                                                      "fields": Immutable.List [],
                                                      "indices": Immutable.List [],
                                                      "domainException": undefined,
                                                      "mandatoryFieldNames": Immutable.List [],
                                                      "reservedFieldNames": Immutable.List [],
                                                      "newDesignFields": undefined,
                                                      "instructions": undefined,
                                                      "domainKindName": undefined,
                                                      "schemaName": undefined,
                                                      "queryName": undefined,
                                                    },
                                                    Immutable.Record {
                                                      "name": "Data Fields",
                                                      "container": undefined,
                                                      "description": undefined,
                                                      "domainURI": undefined,
                                                      "domainId": null,
                                                      "allowFileLinkProperties": false,
                                                      "allowAttachmentProperties": false,
                                                      "allowFlagProperties": true,
                                                      "allowSampleSubjectProperties": true,
                                                      "allowTextChoiceProperties": true,
                                                      "allowTimepointProperties": false,
                                                      "showDefaultValueSettings": false,
                                                      "defaultDefaultValueType": undefined,
                                                      "defaultValueOptions": Immutable.List [],
                                                      "fields": Immutable.List [],
                                                      "indices": Immutable.List [],
                                                      "domainException": undefined,
                                                      "mandatoryFieldNames": Immutable.List [],
                                                      "reservedFieldNames": Immutable.List [],
                                                      "newDesignFields": undefined,
                                                      "instructions": undefined,
                                                      "domainKindName": undefined,
                                                      "schemaName": undefined,
                                                      "queryName": undefined,
                                                    },
                                                  ],
                                                  "editableResults": false,
                                                  "editableRuns": false,
                                                  "exception": undefined,
                                                  "metadataInputFormatHelp": undefined,
                                                  "moduleTransformScripts": undefined,
                                                  "name": undefined,
                                                  "plateMetadata": undefined,
                                                  "protocolId": undefined,
                                                  "protocolParameters": undefined,
                                                  "protocolTransformScripts": undefined,
                                                  "providerName": "General",
                                                  "saveScriptFiles": false,
                                                  "selectedDetectionMethod": undefined,
                                                  "selectedMetadataInputFormat": undefined,
                                                  "selectedPlateTemplate": undefined,
                                                  "status": "Active",
                                                  "qcEnabled": undefined,
                                                }
                                              }
                                              onChange={[Function]}
                                            >
                                              <Component
                                                appPropertiesOnly={false}
                                                colSize={9}
                                                helpTipBody={
                                                  <p>
                                                    If enabled, users with sufficient permissions can edit values at the run level after the initial import is complete. These changes will be audited.
                                                  </p>
                                                }
                                                label="Editable Runs"
                                              >
                                                <Row
                                                  bsClass="row"
                                                  className="margin-top"
                                                  componentClass="div"
                                                >
                                                  <div
                                                    className="margin-top row"
                                                  >
                                                    <Col
                                                      bsClass="col"
                                                      componentClass="div"
                                                      lg={4}
                                                      xs={3}
                                                    >
                                                      <div
                                                        className="col-lg-4 col-xs-3"
                                                      >
                                                        <DomainFieldLabel
                                                          helpTipBody={
                                                            <p>
                                                              If enabled, users with sufficient permissions can edit values at the run level after the initial import is complete. These changes will be audited.
                                                            </p>
                                                          }
                                                          label="Editable Runs"
                                                        >
                                                          Editable 
                                                          <span
                                                            className="domain-no-wrap"
                                                          >
                                                            Runs
                                                            <Component
                                                              id="tooltip"
                                                              title="Editable Runs"
                                                            >
                                                              <span
                                                                className="label-help-target"
                                                                onMouseOut={[Function]}
                                                                onMouseOver={[Function]}
                                                              >
                                                                <span
                                                                  className="label-help-icon fa fa-question-circle"
                                                                />
                                                                <Overlay
                                                                  animation={[Function]}
                                                                  placement="right"
                                                                  rootClose={false}
                                                                  show={false}
                                                                >
                                                                  <Overlay
                                                                    placement="right"
                                                                    rootClose={false}
                                                                    show={false}
                                                                    transition={[Function]}
                                                                  />
                                                                </Overlay>
                                                              </span>
                                                            </Component>
                                                          </span>
                                                        </DomainFieldLabel>
                                                      </div>
                                                    </Col>
                                                    <Col
                                                      bsClass="col"
                                                      componentClass="div"
                                                      lg={8}
                                                      xs={9}
                                                    >
                                                      <div
                                                        className="col-lg-8 col-xs-9"
                                                      >
                                                        <input
                                                          checked={false}
                                                          id="assay-design-editableRuns"
                                                          onChange={[Function]}
                                                          type="checkbox"
                                                        />
                                                      </div>
                                                    </Col>
                                                  </div>
                                                </Row>
                                              </Component>
                                            </EditableRunsInput>
                                          </div>
                                        </div>
                                      </Col>
                                      <Col
                                        bsClass="col"
                                        componentClass="div"
                                        lg={6}
                                        xs={12}
                                      >
                                        <div
                                          className="col-lg-6 col-xs-12"
                                        >
                                          <div
                                            className="domain-field-padding-bottom"
                                          >
                                            <SectionHeading
                                              title="Import Settings"
                                            >
                                              <div
                                                className="domain-field-section-heading"
                                              >
                                                Import Settings
                                              </div>
                                            </SectionHeading>
                                          </div>
                                        </div>
                                      </Col>
                                    </form>
                                  </Form>
                                </AssayPropertiesForm>
                              </div>
                            </div>
                          </Transition>
                        </Collapse>
                      </PanelCollapse>
                    </PanelBody>
                  </div>
                </Panel>
              </Uncontrolled(Panel)>
            </ForwardRef>
          </BasePropertiesPanel>
        </Component>
      </ComponentWithDomainPropertiesPanelCollapse>
      <DomainForm
        controlledCollapse={true}
        domain={
          Immutable.Record {
            "name": "Batch Fields",
            "container": undefined,
            "description": undefined,
            "domainURI": undefined,
            "domainId": null,
            "allowFileLinkProperties": false,
            "allowAttachmentProperties": false,
            "allowFlagProperties": true,
            "allowSampleSubjectProperties": true,
            "allowTextChoiceProperties": true,
            "allowTimepointProperties": false,
            "showDefaultValueSettings": false,
            "defaultDefaultValueType": undefined,
            "defaultValueOptions": Immutable.List [],
            "fields": Immutable.List [],
            "indices": Immutable.List [],
            "domainException": undefined,
            "mandatoryFieldNames": Immutable.List [],
            "reservedFieldNames": Immutable.List [],
            "newDesignFields": undefined,
            "instructions": undefined,
            "domainKindName": undefined,
            "schemaName": undefined,
            "queryName": undefined,
          }
        }
        domainFormDisplayOptions={
          {
            "domainKindDisplayName": "assay design",
            "hideFilePropertyType": undefined,
            "hideInferFromFile": true,
            "hideStudyPropertyTypes": true,
            "textChoiceLockedForDomain": true,
          }
        }
        domainIndex={0}
        helpTopic={null}
        index={0}
        initCollapsed={true}
        key="0"
        modelDomains={
          Immutable.List [
            Immutable.Record {
              "name": "Batch Fields",
              "container": undefined,
              "description": undefined,
              "domainURI": undefined,
              "domainId": null,
              "allowFileLinkProperties": false,
              "allowAttachmentProperties": false,
              "allowFlagProperties": true,
              "allowSampleSubjectProperties": true,
              "allowTextChoiceProperties": true,
              "allowTimepointProperties": false,
              "showDefaultValueSettings": false,
              "defaultDefaultValueType": undefined,
              "defaultValueOptions": Immutable.List [],
              "fields": Immutable.List [],
              "indices": Immutable.List [],
              "domainException": undefined,
              "mandatoryFieldNames": Immutable.List [],
              "reservedFieldNames": Immutable.List [],
              "newDesignFields": undefined,
              "instructions": undefined,
              "domainKindName": undefined,
              "schemaName": undefined,
              "queryName": undefined,
            },
            Immutable.Record {
              "name": "Run Fields",
              "container": undefined,
              "description": undefined,
              "domainURI": undefined,
              "domainId": null,
              "allowFileLinkProperties": false,
              "allowAttachmentProperties": false,
              "allowFlagProperties": true,
              "allowSampleSubjectProperties": true,
              "allowTextChoiceProperties": true,
              "allowTimepointProperties": false,
              "showDefaultValueSettings": false,
              "defaultDefaultValueType": undefined,
              "defaultValueOptions": Immutable.List [],
              "fields": Immutable.List [],
              "indices": Immutable.List [],
              "domainException": undefined,
              "mandatoryFieldNames": Immutable.List [],
              "reservedFieldNames": Immutable.List [],
              "newDesignFields": undefined,
              "instructions": undefined,
              "domainKindName": undefined,
              "schemaName": undefined,
              "queryName": undefined,
            },
            Immutable.Record {
              "name": "Data Fields",
              "container": undefined,
              "description": undefined,
              "domainURI": undefined,
              "domainId": null,
              "allowFileLinkProperties": false,
              "allowAttachmentProperties": false,
              "allowFlagProperties": true,
              "allowSampleSubjectProperties": true,
              "allowTextChoiceProperties": true,
              "allowTimepointProperties": false,
              "showDefaultValueSettings": false,
              "defaultDefaultValueType": undefined,
              "defaultValueOptions": Immutable.List [],
              "fields": Immutable.List [],
              "indices": Immutable.List [],
              "domainException": undefined,
              "mandatoryFieldNames": Immutable.List [],
              "reservedFieldNames": Immutable.List [],
              "newDesignFields": undefined,
              "instructions": undefined,
              "domainKindName": undefined,
              "schemaName": undefined,
              "queryName": undefined,
            },
          ]
        }
        onChange={[Function]}
        onToggle={[Function]}
        panelStatus="TODO"
        testMode={true}
        validate={false}
      >
        <LookupProvider>
          <DomainFormImpl
            appPropertiesOnly={false}
            controlledCollapse={true}
            domain={
              Immutable.Record {
                "name": "Batch Fields",
                "container": undefined,
                "description": undefined,
                "domainURI": undefined,
                "domainId": null,
                "allowFileLinkProperties": false,
                "allowAttachmentProperties": false,
                "allowFlagProperties": true,
                "allowSampleSubjectProperties": true,
                "allowTextChoiceProperties": true,
                "allowTimepointProperties": false,
                "showDefaultValueSettings": false,
                "defaultDefaultValueType": undefined,
                "defaultValueOptions": Immutable.List [],
                "fields": Immutable.List [],
                "indices": Immutable.List [],
                "domainException": undefined,
                "mandatoryFieldNames": Immutable.List [],
                "reservedFieldNames": Immutable.List [],
                "newDesignFields": undefined,
                "instructions": undefined,
                "domainKindName": undefined,
                "schemaName": undefined,
                "queryName": undefined,
              }
            }
            domainFormDisplayOptions={
              {
                "domainKindDisplayName": "assay design",
                "hideFilePropertyType": undefined,
                "hideInferFromFile": true,
                "hideStudyPropertyTypes": true,
                "textChoiceLockedForDomain": true,
              }
            }
            domainIndex={0}
            helpNoun="field designer"
            helpTopic={null}
            index={0}
            initCollapsed={true}
            isNew={false}
            modelDomains={
              Immutable.List [
                Immutable.Record {
                  "name": "Batch Fields",
                  "container": undefined,
                  "description": undefined,
                  "domainURI": undefined,
                  "domainId": null,
                  "allowFileLinkProperties": false,
                  "allowAttachmentProperties": false,
                  "allowFlagProperties": true,
                  "allowSampleSubjectProperties": true,
                  "allowTextChoiceProperties": true,
                  "allowTimepointProperties": false,
                  "showDefaultValueSettings": false,
                  "defaultDefaultValueType": undefined,
                  "defaultValueOptions": Immutable.List [],
                  "fields": Immutable.List [],
                  "indices": Immutable.List [],
                  "domainException": undefined,
                  "mandatoryFieldNames": Immutable.List [],
                  "reservedFieldNames": Immutable.List [],
                  "newDesignFields": undefined,
                  "instructions": undefined,
                  "domainKindName": undefined,
                  "schemaName": undefined,
                  "queryName": undefined,
                },
                Immutable.Record {
                  "name": "Run Fields",
                  "container": undefined,
                  "description": undefined,
                  "domainURI": undefined,
                  "domainId": null,
                  "allowFileLinkProperties": false,
                  "allowAttachmentProperties": false,
                  "allowFlagProperties": true,
                  "allowSampleSubjectProperties": true,
                  "allowTextChoiceProperties": true,
                  "allowTimepointProperties": false,
                  "showDefaultValueSettings": false,
                  "defaultDefaultValueType": undefined,
                  "defaultValueOptions": Immutable.List [],
                  "fields": Immutable.List [],
                  "indices": Immutable.List [],
                  "domainException": undefined,
                  "mandatoryFieldNames": Immutable.List [],
                  "reservedFieldNames": Immutable.List [],
                  "newDesignFields": undefined,
                  "instructions": undefined,
                  "domainKindName": undefined,
                  "schemaName": undefined,
                  "queryName": undefined,
                },
                Immutable.Record {
                  "name": "Data Fields",
                  "container": undefined,
                  "description": undefined,
                  "domainURI": undefined,
                  "domainId": null,
                  "allowFileLinkProperties": false,
                  "allowAttachmentProperties": false,
                  "allowFlagProperties": true,
                  "allowSampleSubjectProperties": true,
                  "allowTextChoiceProperties": true,
                  "allowTimepointProperties": false,
                  "showDefaultValueSettings": false,
                  "defaultDefaultValueType": undefined,
                  "defaultValueOptions": Immutable.List [],
                  "fields": Immutable.List [],
                  "indices": Immutable.List [],
                  "domainException": undefined,
                  "mandatoryFieldNames": Immutable.List [],
                  "reservedFieldNames": Immutable.List [],
                  "newDesignFields": undefined,
                  "instructions": undefined,
                  "domainKindName": undefined,
                  "schemaName": undefined,
                  "queryName": undefined,
                },
              ]
            }
            onChange={[Function]}
            onToggle={[Function]}
            panelStatus="TODO"
            showHeader={true}
            successBsStyle="success"
            testMode={true}
            validate={false}
          >
            <ForwardRef
              className="domain-form-panel"
              expanded={false}
              onToggle={[Function]}
            >
              <Uncontrolled(Panel)
                className="domain-form-panel"
                expanded={false}
                innerRef={null}
                onToggle={[Function]}
              >
                <Panel
                  bsClass="panel"
                  bsStyle="default"
                  className="domain-form-panel"
                  expanded={false}
                  onToggle={[Function]}
                >
                  <div
                    className="domain-form-panel panel panel-default"
                  >
                    <CollapsiblePanelHeader
                      collapsed={true}
                      controlledCollapse={true}
                      id="domainpropertiesrow-Batch-Fields-hdr"
                      isValid={true}
                      panelStatus="TODO"
                      title="Batch Fields"
                      togglePanel={[Function]}
                    >
                      <PanelHeading
                        bsClass="panel"
                        className="domain-panel-header domain-heading-collapsible domain-panel-header-collapsed"
                        componentClass="div"
                        id="domainpropertiesrow-Batch-Fields-hdr"
                        onClick={[Function]}
                      >
                        <div
                          className="domain-panel-header domain-heading-collapsible domain-panel-header-collapsed panel-heading"
                          id="domainpropertiesrow-Batch-Fields-hdr"
                          onClick={[Function]}
                        >
                          <Component
                            iconComponent={
                              <span
                                className="domain-panel-status-icon domain-panel-status-icon-blue"
                              >
                                <span
                                  className="fa fa-exclamation-circle"
                                />
                              </span>
                            }
                            id="tooltip"
                            placement="top"
                            title="Batch Fields"
                          >
                            <span
                              className="label-help-target"
                              onMouseOut={[Function]}
                              onMouseOver={[Function]}
                            >
                              <span
                                className="domain-panel-status-icon domain-panel-status-icon-blue"
                              >
                                <span
                                  className="fa fa-exclamation-circle"
                                />
                              </span>
                              <Overlay
                                animation={[Function]}
                                placement="top"
                                rootClose={false}
                                show={false}
                              >
                                <Overlay
                                  placement="top"
                                  rootClose={false}
                                  show={false}
                                  transition={[Function]}
                                />
                              </Overlay>
                            </span>
                          </Component>
                          <span
                            className="domain-panel-title"
                          >
                            Batch Fields
                          </span>
                          <span
                            className="pull-right"
                          >
                            <span
                              className="fa fa-lg fa-plus-square domain-form-expand-btn"
                            />
                          </span>
                          <Component
                            id="tooltip"
                            placement="top"
                            title="Batch Fields"
                          >
                            <span
                              className="label-help-target"
                              onMouseOut={[Function]}
                              onMouseOver={[Function]}
                            >
                              <span
                                className="label-help-icon fa fa-question-circle"
                              />
                              <Overlay
                                animation={[Function]}
                                placement="top"
                                rootClose={false}
                                show={false}
                              >
                                <Overlay
                                  placement="top"
                                  rootClose={false}
                                  show={false}
                                  transition={[Function]}
                                />
                              </Overlay>
                            </span>
                          </Component>
                        </div>
                      </PanelHeading>
                    </CollapsiblePanelHeader>
                    <PanelBody
                      bsClass="panel"
                      className=""
                      collapsible={true}
                    >
                      <PanelCollapse
                        bsClass="panel"
                      >
                        <Collapse
                          appear={false}
                          dimension="height"
                          getDimensionValue={[Function]}
                          in={false}
                          mountOnEnter={false}
                          timeout={300}
                          unmountOnExit={false}
                        >
                          <Transition
                            appear={false}
                            aria-expanded={null}
                            enter={true}
                            exit={true}
                            in={false}
                            mountOnEnter={false}
                            onEnter={[Function]}
                            onEntered={[Function]}
                            onEntering={[Function]}
                            onExit={[Function]}
                            onExited={[Function]}
                            onExiting={[Function]}
                            timeout={300}
                            unmountOnExit={false}
                          >
                            <div
                              aria-expanded={null}
                              className="panel-collapse collapse"
                            >
                              <div
                                className="panel-body"
                              >
                                <Row
                                  bsClass="row"
                                  className=""
                                  componentClass="div"
                                >
                                  <div
                                    className="row"
                                  >
                                    <Col
                                      bsClass="col"
                                      componentClass="div"
                                      xs={12}
                                    >
                                      <div
                                        className="col-xs-12"
                                      />
                                    </Col>
                                  </div>
                                </Row>
                                <FileAttachmentForm
                                  acceptedFormats=".json"
                                  allowDirectories={false}
                                  allowMultiple={false}
                                  cancelText="Cancel"
                                  compact={false}
                                  fileSpecificCallback={
                                    Immutable.Map {
                                      ".json": [Function],
                                    }
                                  }
                                  index={0}
                                  label="Import fields from file"
                                  labelLong="Select file or drag and drop here."
                                  onFileRemoval={[Function]}
                                  previewGridProps={false}
                                  showAcceptedFormats={true}
                                  showButtons={false}
                                  showLabel={true}
                                  showProgressBar={false}
                                  submitText="Upload"
                                >
                                  <span
                                    className="translator--toggle__wizard"
                                  >
                                    <FormSection
                                      iconSpacer={false}
                                      label="Import fields from file"
                                      showLabel={true}
                                    >
                                      <div
                                        className="row"
                                      >
                                        <div
                                          className="col-sm-12"
                                        >
                                          <label
                                            className="control-label text-left"
                                          >
                                            <strong>
                                              Import fields from file
                                            </strong>
                                          </label>
                                        </div>
                                      </div>
                                      <div
                                        className="row"
                                      >
                                        <div
                                          className="col-sm-12"
                                        >
                                          <div
                                            className="wizard-row--container"
                                          >
                                            <div
                                              className=""
                                            >
                                              <FileAttachmentContainer
                                                acceptedFormats=".json"
                                                allowDirectories={false}
                                                allowMultiple={false}
                                                compact={false}
                                                handleChange={[Function]}
                                                handleRemoval={[Function]}
                                                index={0}
                                                labelLong="Select file or drag and drop here."
                                              >
                                                <div
                                                  className="file-upload--container block"
                                                >
                                                  <label
                                                    className="file-upload--label"
                                                    htmlFor="fileUpload0"
                                                    onDragEnter={[Function]}
                                                    onDragLeave={[Function]}
                                                    onDragOver={[Function]}
                                                    onDrop={[Function]}
                                                  >
                                                    <i
                                                      aria-hidden="true"
                                                      className="fa fa-cloud-upload fa-2x cloud-logo"
                                                    />
                                                    Select file or drag and drop here.
                                                  </label>
                                                  <input
                                                    accept=".json"
                                                    className="file-upload--input"
                                                    id="fileUpload0"
                                                    multiple={false}
                                                    name="fileUpload0"
                                                    onChange={[Function]}
                                                    type="file"
                                                  />
                                                </div>
                                              </FileAttachmentContainer>
                                            </div>
                                          </div>
                                        </div>
                                      </div>
                                    </FormSection>
                                  </span>
                                  <div
                                    className="row"
                                  >
                                    <div
                                      className="col-md-9"
                                    >
                                      <div
                                        className="file-form-formats"
                                      >
                                        <strong>
                                          Supported formats include: 
                                        </strong>
                                        .json
                                      </div>
                                    </div>
                                    <div
                                      className="col-md-3"
                                    >
                                      <div
                                        className="pull-right"
                                      />
                                    </div>
                                  </div>
                                </FileAttachmentForm>
                                <div
                                  className="margin-top domain-form-manual-section"
                                >
                                  <p>
                                    Or
                                  </p>
                                  <ActionButton
                                    buttonClass="domain-form-manual-btn"
                                    containerClass="form-group"
                                    helperTitle="More Info"
                                    onClick={[Function]}
                                  >
                                    <div
                                      className="form-group"
                                    >
                                      <div
                                        className="domain-form-manual-btn"
                                      >
                                        <span
                                          className="container--action-button btn btn-default"
                                          onClick={[Function]}
                                        >
                                          Manually Define Fields
                                        </span>
                                      </div>
                                    </div>
                                  </ActionButton>
                                </div>
                              </div>
                            </div>
                          </Transition>
                        </Collapse>
                      </PanelCollapse>
                    </PanelBody>
                  </div>
                </Panel>
              </Uncontrolled(Panel)>
            </ForwardRef>
          </DomainFormImpl>
        </LookupProvider>
      </DomainForm>
      <DomainForm
        controlledCollapse={true}
        domain={
          Immutable.Record {
            "name": "Run Fields",
            "container": undefined,
            "description": undefined,
            "domainURI": undefined,
            "domainId": null,
            "allowFileLinkProperties": false,
            "allowAttachmentProperties": false,
            "allowFlagProperties": true,
            "allowSampleSubjectProperties": true,
            "allowTextChoiceProperties": true,
            "allowTimepointProperties": false,
            "showDefaultValueSettings": false,
            "defaultDefaultValueType": undefined,
            "defaultValueOptions": Immutable.List [],
            "fields": Immutable.List [],
            "indices": Immutable.List [],
            "domainException": undefined,
            "mandatoryFieldNames": Immutable.List [],
            "reservedFieldNames": Immutable.List [],
            "newDesignFields": undefined,
            "instructions": undefined,
            "domainKindName": undefined,
            "schemaName": undefined,
            "queryName": undefined,
          }
        }
        domainFormDisplayOptions={
          {
            "domainKindDisplayName": "assay design",
            "hideFilePropertyType": undefined,
            "hideInferFromFile": true,
            "hideStudyPropertyTypes": true,
            "textChoiceLockedForDomain": true,
          }
        }
        domainIndex={1}
        helpTopic={null}
        index={1}
        initCollapsed={true}
        key="1"
        modelDomains={
          Immutable.List [
            Immutable.Record {
              "name": "Batch Fields",
              "container": undefined,
              "description": undefined,
              "domainURI": undefined,
              "domainId": null,
              "allowFileLinkProperties": false,
              "allowAttachmentProperties": false,
              "allowFlagProperties": true,
              "allowSampleSubjectProperties": true,
              "allowTextChoiceProperties": true,
              "allowTimepointProperties": false,
              "showDefaultValueSettings": false,
              "defaultDefaultValueType": undefined,
              "defaultValueOptions": Immutable.List [],
              "fields": Immutable.List [],
              "indices": Immutable.List [],
              "domainException": undefined,
              "mandatoryFieldNames": Immutable.List [],
              "reservedFieldNames": Immutable.List [],
              "newDesignFields": undefined,
              "instructions": undefined,
              "domainKindName": undefined,
              "schemaName": undefined,
              "queryName": undefined,
            },
            Immutable.Record {
              "name": "Run Fields",
              "container": undefined,
              "description": undefined,
              "domainURI": undefined,
              "domainId": null,
              "allowFileLinkProperties": false,
              "allowAttachmentProperties": false,
              "allowFlagProperties": true,
              "allowSampleSubjectProperties": true,
              "allowTextChoiceProperties": true,
              "allowTimepointProperties": false,
              "showDefaultValueSettings": false,
              "defaultDefaultValueType": undefined,
              "defaultValueOptions": Immutable.List [],
              "fields": Immutable.List [],
              "indices": Immutable.List [],
              "domainException": undefined,
              "mandatoryFieldNames": Immutable.List [],
              "reservedFieldNames": Immutable.List [],
              "newDesignFields": undefined,
              "instructions": undefined,
              "domainKindName": undefined,
              "schemaName": undefined,
              "queryName": undefined,
            },
            Immutable.Record {
              "name": "Data Fields",
              "container": undefined,
              "description": undefined,
              "domainURI": undefined,
              "domainId": null,
              "allowFileLinkProperties": false,
              "allowAttachmentProperties": false,
              "allowFlagProperties": true,
              "allowSampleSubjectProperties": true,
              "allowTextChoiceProperties": true,
              "allowTimepointProperties": false,
              "showDefaultValueSettings": false,
              "defaultDefaultValueType": undefined,
              "defaultValueOptions": Immutable.List [],
              "fields": Immutable.List [],
              "indices": Immutable.List [],
              "domainException": undefined,
              "mandatoryFieldNames": Immutable.List [],
              "reservedFieldNames": Immutable.List [],
              "newDesignFields": undefined,
              "instructions": undefined,
              "domainKindName": undefined,
              "schemaName": undefined,
              "queryName": undefined,
            },
          ]
        }
        onChange={[Function]}
        onToggle={[Function]}
        panelStatus="TODO"
        testMode={true}
        validate={false}
      >
        <LookupProvider>
          <DomainFormImpl
            appPropertiesOnly={false}
            controlledCollapse={true}
            domain={
              Immutable.Record {
                "name": "Run Fields",
                "container": undefined,
                "description": undefined,
                "domainURI": undefined,
                "domainId": null,
                "allowFileLinkProperties": false,
                "allowAttachmentProperties": false,
                "allowFlagProperties": true,
                "allowSampleSubjectProperties": true,
                "allowTextChoiceProperties": true,
                "allowTimepointProperties": false,
                "showDefaultValueSettings": false,
                "defaultDefaultValueType": undefined,
                "defaultValueOptions": Immutable.List [],
                "fields": Immutable.List [],
                "indices": Immutable.List [],
                "domainException": undefined,
                "mandatoryFieldNames": Immutable.List [],
                "reservedFieldNames": Immutable.List [],
                "newDesignFields": undefined,
                "instructions": undefined,
                "domainKindName": undefined,
                "schemaName": undefined,
                "queryName": undefined,
              }
            }
            domainFormDisplayOptions={
              {
                "domainKindDisplayName": "assay design",
                "hideFilePropertyType": undefined,
                "hideInferFromFile": true,
                "hideStudyPropertyTypes": true,
                "textChoiceLockedForDomain": true,
              }
            }
            domainIndex={1}
            helpNoun="field designer"
            helpTopic={null}
            index={1}
            initCollapsed={true}
            isNew={false}
            modelDomains={
              Immutable.List [
                Immutable.Record {
                  "name": "Batch Fields",
                  "container": undefined,
                  "description": undefined,
                  "domainURI": undefined,
                  "domainId": null,
                  "allowFileLinkProperties": false,
                  "allowAttachmentProperties": false,
                  "allowFlagProperties": true,
                  "allowSampleSubjectProperties": true,
                  "allowTextChoiceProperties": true,
                  "allowTimepointProperties": false,
                  "showDefaultValueSettings": false,
                  "defaultDefaultValueType": undefined,
                  "defaultValueOptions": Immutable.List [],
                  "fields": Immutable.List [],
                  "indices": Immutable.List [],
                  "domainException": undefined,
                  "mandatoryFieldNames": Immutable.List [],
                  "reservedFieldNames": Immutable.List [],
                  "newDesignFields": undefined,
                  "instructions": undefined,
                  "domainKindName": undefined,
                  "schemaName": undefined,
                  "queryName": undefined,
                },
                Immutable.Record {
                  "name": "Run Fields",
                  "container": undefined,
                  "description": undefined,
                  "domainURI": undefined,
                  "domainId": null,
                  "allowFileLinkProperties": false,
                  "allowAttachmentProperties": false,
                  "allowFlagProperties": true,
                  "allowSampleSubjectProperties": true,
                  "allowTextChoiceProperties": true,
                  "allowTimepointProperties": false,
                  "showDefaultValueSettings": false,
                  "defaultDefaultValueType": undefined,
                  "defaultValueOptions": Immutable.List [],
                  "fields": Immutable.List [],
                  "indices": Immutable.List [],
                  "domainException": undefined,
                  "mandatoryFieldNames": Immutable.List [],
                  "reservedFieldNames": Immutable.List [],
                  "newDesignFields": undefined,
                  "instructions": undefined,
                  "domainKindName": undefined,
                  "schemaName": undefined,
                  "queryName": undefined,
                },
                Immutable.Record {
                  "name": "Data Fields",
                  "container": undefined,
                  "description": undefined,
                  "domainURI": undefined,
                  "domainId": null,
                  "allowFileLinkProperties": false,
                  "allowAttachmentProperties": false,
                  "allowFlagProperties": true,
                  "allowSampleSubjectProperties": true,
                  "allowTextChoiceProperties": true,
                  "allowTimepointProperties": false,
                  "showDefaultValueSettings": false,
                  "defaultDefaultValueType": undefined,
                  "defaultValueOptions": Immutable.List [],
                  "fields": Immutable.List [],
                  "indices": Immutable.List [],
                  "domainException": undefined,
                  "mandatoryFieldNames": Immutable.List [],
                  "reservedFieldNames": Immutable.List [],
                  "newDesignFields": undefined,
                  "instructions": undefined,
                  "domainKindName": undefined,
                  "schemaName": undefined,
                  "queryName": undefined,
                },
              ]
            }
            onChange={[Function]}
            onToggle={[Function]}
            panelStatus="TODO"
            showHeader={true}
            successBsStyle="success"
            testMode={true}
            validate={false}
          >
            <ForwardRef
              className="domain-form-panel"
              expanded={false}
              onToggle={[Function]}
            >
              <Uncontrolled(Panel)
                className="domain-form-panel"
                expanded={false}
                innerRef={null}
                onToggle={[Function]}
              >
                <Panel
                  bsClass="panel"
                  bsStyle="default"
                  className="domain-form-panel"
                  expanded={false}
                  onToggle={[Function]}
                >
                  <div
                    className="domain-form-panel panel panel-default"
                  >
                    <CollapsiblePanelHeader
                      collapsed={true}
                      controlledCollapse={true}
                      id="domainpropertiesrow-Run-Fields-hdr"
                      isValid={true}
                      panelStatus="TODO"
                      title="Run Fields"
                      togglePanel={[Function]}
                    >
                      <PanelHeading
                        bsClass="panel"
                        className="domain-panel-header domain-heading-collapsible domain-panel-header-collapsed"
                        componentClass="div"
                        id="domainpropertiesrow-Run-Fields-hdr"
                        onClick={[Function]}
                      >
                        <div
                          className="domain-panel-header domain-heading-collapsible domain-panel-header-collapsed panel-heading"
                          id="domainpropertiesrow-Run-Fields-hdr"
                          onClick={[Function]}
                        >
                          <Component
                            iconComponent={
                              <span
                                className="domain-panel-status-icon domain-panel-status-icon-blue"
                              >
                                <span
                                  className="fa fa-exclamation-circle"
                                />
                              </span>
                            }
                            id="tooltip"
                            placement="top"
                            title="Run Fields"
                          >
                            <span
                              className="label-help-target"
                              onMouseOut={[Function]}
                              onMouseOver={[Function]}
                            >
                              <span
                                className="domain-panel-status-icon domain-panel-status-icon-blue"
                              >
                                <span
                                  className="fa fa-exclamation-circle"
                                />
                              </span>
                              <Overlay
                                animation={[Function]}
                                placement="top"
                                rootClose={false}
                                show={false}
                              >
                                <Overlay
                                  placement="top"
                                  rootClose={false}
                                  show={false}
                                  transition={[Function]}
                                />
                              </Overlay>
                            </span>
                          </Component>
                          <span
                            className="domain-panel-title"
                          >
                            Run Fields
                          </span>
                          <span
                            className="pull-right"
                          >
                            <span
                              className="fa fa-lg fa-plus-square domain-form-expand-btn"
                            />
                          </span>
                          <Component
                            id="tooltip"
                            placement="top"
                            title="Run Fields"
                          >
                            <span
                              className="label-help-target"
                              onMouseOut={[Function]}
                              onMouseOver={[Function]}
                            >
                              <span
                                className="label-help-icon fa fa-question-circle"
                              />
                              <Overlay
                                animation={[Function]}
                                placement="top"
                                rootClose={false}
                                show={false}
                              >
                                <Overlay
                                  placement="top"
                                  rootClose={false}
                                  show={false}
                                  transition={[Function]}
                                />
                              </Overlay>
                            </span>
                          </Component>
                        </div>
                      </PanelHeading>
                    </CollapsiblePanelHeader>
                    <PanelBody
                      bsClass="panel"
                      className=""
                      collapsible={true}
                    >
                      <PanelCollapse
                        bsClass="panel"
                      >
                        <Collapse
                          appear={false}
                          dimension="height"
                          getDimensionValue={[Function]}
                          in={false}
                          mountOnEnter={false}
                          timeout={300}
                          unmountOnExit={false}
                        >
                          <Transition
                            appear={false}
                            aria-expanded={null}
                            enter={true}
                            exit={true}
                            in={false}
                            mountOnEnter={false}
                            onEnter={[Function]}
                            onEntered={[Function]}
                            onEntering={[Function]}
                            onExit={[Function]}
                            onExited={[Function]}
                            onExiting={[Function]}
                            timeout={300}
                            unmountOnExit={false}
                          >
                            <div
                              aria-expanded={null}
                              className="panel-collapse collapse"
                            >
                              <div
                                className="panel-body"
                              >
                                <Row
                                  bsClass="row"
                                  className=""
                                  componentClass="div"
                                >
                                  <div
                                    className="row"
                                  >
                                    <Col
                                      bsClass="col"
                                      componentClass="div"
                                      xs={12}
                                    >
                                      <div
                                        className="col-xs-12"
                                      />
                                    </Col>
                                  </div>
                                </Row>
                                <FileAttachmentForm
                                  acceptedFormats=".json"
                                  allowDirectories={false}
                                  allowMultiple={false}
                                  cancelText="Cancel"
                                  compact={false}
                                  fileSpecificCallback={
                                    Immutable.Map {
                                      ".json": [Function],
                                    }
                                  }
                                  index={1}
                                  label="Import fields from file"
                                  labelLong="Select file or drag and drop here."
                                  onFileRemoval={[Function]}
                                  previewGridProps={false}
                                  showAcceptedFormats={true}
                                  showButtons={false}
                                  showLabel={true}
                                  showProgressBar={false}
                                  submitText="Upload"
                                >
                                  <span
                                    className="translator--toggle__wizard"
                                  >
                                    <FormSection
                                      iconSpacer={false}
                                      label="Import fields from file"
                                      showLabel={true}
                                    >
                                      <div
                                        className="row"
                                      >
                                        <div
                                          className="col-sm-12"
                                        >
                                          <label
                                            className="control-label text-left"
                                          >
                                            <strong>
                                              Import fields from file
                                            </strong>
                                          </label>
                                        </div>
                                      </div>
                                      <div
                                        className="row"
                                      >
                                        <div
                                          className="col-sm-12"
                                        >
                                          <div
                                            className="wizard-row--container"
                                          >
                                            <div
                                              className=""
                                            >
                                              <FileAttachmentContainer
                                                acceptedFormats=".json"
                                                allowDirectories={false}
                                                allowMultiple={false}
                                                compact={false}
                                                handleChange={[Function]}
                                                handleRemoval={[Function]}
                                                index={1}
                                                labelLong="Select file or drag and drop here."
                                              >
                                                <div
                                                  className="file-upload--container block"
                                                >
                                                  <label
                                                    className="file-upload--label"
                                                    htmlFor="fileUpload1"
                                                    onDragEnter={[Function]}
                                                    onDragLeave={[Function]}
                                                    onDragOver={[Function]}
                                                    onDrop={[Function]}
                                                  >
                                                    <i
                                                      aria-hidden="true"
                                                      className="fa fa-cloud-upload fa-2x cloud-logo"
                                                    />
                                                    Select file or drag and drop here.
                                                  </label>
                                                  <input
                                                    accept=".json"
                                                    className="file-upload--input"
                                                    id="fileUpload1"
                                                    multiple={false}
                                                    name="fileUpload1"
                                                    onChange={[Function]}
                                                    type="file"
                                                  />
                                                </div>
                                              </FileAttachmentContainer>
                                            </div>
                                          </div>
                                        </div>
                                      </div>
                                    </FormSection>
                                  </span>
                                  <div
                                    className="row"
                                  >
                                    <div
                                      className="col-md-9"
                                    >
                                      <div
                                        className="file-form-formats"
                                      >
                                        <strong>
                                          Supported formats include: 
                                        </strong>
                                        .json
                                      </div>
                                    </div>
                                    <div
                                      className="col-md-3"
                                    >
                                      <div
                                        className="pull-right"
                                      />
                                    </div>
                                  </div>
                                </FileAttachmentForm>
                                <div
                                  className="margin-top domain-form-manual-section"
                                >
                                  <p>
                                    Or
                                  </p>
                                  <ActionButton
                                    buttonClass="domain-form-manual-btn"
                                    containerClass="form-group"
                                    helperTitle="More Info"
                                    onClick={[Function]}
                                  >
                                    <div
                                      className="form-group"
                                    >
                                      <div
                                        className="domain-form-manual-btn"
                                      >
                                        <span
                                          className="container--action-button btn btn-default"
                                          onClick={[Function]}
                                        >
                                          Manually Define Fields
                                        </span>
                                      </div>
                                    </div>
                                  </ActionButton>
                                </div>
                              </div>
                            </div>
                          </Transition>
                        </Collapse>
                      </PanelCollapse>
                    </PanelBody>
                  </div>
                </Panel>
              </Uncontrolled(Panel)>
            </ForwardRef>
          </DomainFormImpl>
        </LookupProvider>
      </DomainForm>
      <DomainForm
        controlledCollapse={true}
        domain={
          Immutable.Record {
            "name": "Data Fields",
            "container": undefined,
            "description": undefined,
            "domainURI": undefined,
            "domainId": null,
            "allowFileLinkProperties": false,
            "allowAttachmentProperties": false,
            "allowFlagProperties": true,
            "allowSampleSubjectProperties": true,
            "allowTextChoiceProperties": true,
            "allowTimepointProperties": false,
            "showDefaultValueSettings": false,
            "defaultDefaultValueType": undefined,
            "defaultValueOptions": Immutable.List [],
            "fields": Immutable.List [],
            "indices": Immutable.List [],
            "domainException": undefined,
            "mandatoryFieldNames": Immutable.List [],
            "reservedFieldNames": Immutable.List [],
            "newDesignFields": undefined,
            "instructions": undefined,
            "domainKindName": undefined,
            "schemaName": undefined,
            "queryName": undefined,
          }
        }
        domainFormDisplayOptions={
          {
            "domainKindDisplayName": "assay design",
            "hideFilePropertyType": undefined,
            "hideInferFromFile": false,
            "hideStudyPropertyTypes": true,
            "textChoiceLockedForDomain": true,
          }
        }
        domainIndex={2}
        helpTopic={null}
        index={2}
        initCollapsed={true}
        key="2"
        modelDomains={
          Immutable.List [
            Immutable.Record {
              "name": "Batch Fields",
              "container": undefined,
              "description": undefined,
              "domainURI": undefined,
              "domainId": null,
              "allowFileLinkProperties": false,
              "allowAttachmentProperties": false,
              "allowFlagProperties": true,
              "allowSampleSubjectProperties": true,
              "allowTextChoiceProperties": true,
              "allowTimepointProperties": false,
              "showDefaultValueSettings": false,
              "defaultDefaultValueType": undefined,
              "defaultValueOptions": Immutable.List [],
              "fields": Immutable.List [],
              "indices": Immutable.List [],
              "domainException": undefined,
              "mandatoryFieldNames": Immutable.List [],
              "reservedFieldNames": Immutable.List [],
              "newDesignFields": undefined,
              "instructions": undefined,
              "domainKindName": undefined,
              "schemaName": undefined,
              "queryName": undefined,
            },
            Immutable.Record {
              "name": "Run Fields",
              "container": undefined,
              "description": undefined,
              "domainURI": undefined,
              "domainId": null,
              "allowFileLinkProperties": false,
              "allowAttachmentProperties": false,
              "allowFlagProperties": true,
              "allowSampleSubjectProperties": true,
              "allowTextChoiceProperties": true,
              "allowTimepointProperties": false,
              "showDefaultValueSettings": false,
              "defaultDefaultValueType": undefined,
              "defaultValueOptions": Immutable.List [],
              "fields": Immutable.List [],
              "indices": Immutable.List [],
              "domainException": undefined,
              "mandatoryFieldNames": Immutable.List [],
              "reservedFieldNames": Immutable.List [],
              "newDesignFields": undefined,
              "instructions": undefined,
              "domainKindName": undefined,
              "schemaName": undefined,
              "queryName": undefined,
            },
            Immutable.Record {
              "name": "Data Fields",
              "container": undefined,
              "description": undefined,
              "domainURI": undefined,
              "domainId": null,
              "allowFileLinkProperties": false,
              "allowAttachmentProperties": false,
              "allowFlagProperties": true,
              "allowSampleSubjectProperties": true,
              "allowTextChoiceProperties": true,
              "allowTimepointProperties": false,
              "showDefaultValueSettings": false,
              "defaultDefaultValueType": undefined,
              "defaultValueOptions": Immutable.List [],
              "fields": Immutable.List [],
              "indices": Immutable.List [],
              "domainException": undefined,
              "mandatoryFieldNames": Immutable.List [],
              "reservedFieldNames": Immutable.List [],
              "newDesignFields": undefined,
              "instructions": undefined,
              "domainKindName": undefined,
              "schemaName": undefined,
              "queryName": undefined,
            },
          ]
        }
        onChange={[Function]}
        onToggle={[Function]}
        panelStatus="TODO"
        testMode={true}
        validate={false}
      >
        <LookupProvider>
          <DomainFormImpl
            appPropertiesOnly={false}
            controlledCollapse={true}
            domain={
              Immutable.Record {
                "name": "Data Fields",
                "container": undefined,
                "description": undefined,
                "domainURI": undefined,
                "domainId": null,
                "allowFileLinkProperties": false,
                "allowAttachmentProperties": false,
                "allowFlagProperties": true,
                "allowSampleSubjectProperties": true,
                "allowTextChoiceProperties": true,
                "allowTimepointProperties": false,
                "showDefaultValueSettings": false,
                "defaultDefaultValueType": undefined,
                "defaultValueOptions": Immutable.List [],
                "fields": Immutable.List [],
                "indices": Immutable.List [],
                "domainException": undefined,
                "mandatoryFieldNames": Immutable.List [],
                "reservedFieldNames": Immutable.List [],
                "newDesignFields": undefined,
                "instructions": undefined,
                "domainKindName": undefined,
                "schemaName": undefined,
                "queryName": undefined,
              }
            }
            domainFormDisplayOptions={
              {
                "domainKindDisplayName": "assay design",
                "hideFilePropertyType": undefined,
                "hideInferFromFile": false,
                "hideStudyPropertyTypes": true,
                "textChoiceLockedForDomain": true,
              }
            }
            domainIndex={2}
            helpNoun="field designer"
            helpTopic={null}
            index={2}
            initCollapsed={true}
            isNew={false}
            modelDomains={
              Immutable.List [
                Immutable.Record {
                  "name": "Batch Fields",
                  "container": undefined,
                  "description": undefined,
                  "domainURI": undefined,
                  "domainId": null,
                  "allowFileLinkProperties": false,
                  "allowAttachmentProperties": false,
                  "allowFlagProperties": true,
                  "allowSampleSubjectProperties": true,
                  "allowTextChoiceProperties": true,
                  "allowTimepointProperties": false,
                  "showDefaultValueSettings": false,
                  "defaultDefaultValueType": undefined,
                  "defaultValueOptions": Immutable.List [],
                  "fields": Immutable.List [],
                  "indices": Immutable.List [],
                  "domainException": undefined,
                  "mandatoryFieldNames": Immutable.List [],
                  "reservedFieldNames": Immutable.List [],
                  "newDesignFields": undefined,
                  "instructions": undefined,
                  "domainKindName": undefined,
                  "schemaName": undefined,
                  "queryName": undefined,
                },
                Immutable.Record {
                  "name": "Run Fields",
                  "container": undefined,
                  "description": undefined,
                  "domainURI": undefined,
                  "domainId": null,
                  "allowFileLinkProperties": false,
                  "allowAttachmentProperties": false,
                  "allowFlagProperties": true,
                  "allowSampleSubjectProperties": true,
                  "allowTextChoiceProperties": true,
                  "allowTimepointProperties": false,
                  "showDefaultValueSettings": false,
                  "defaultDefaultValueType": undefined,
                  "defaultValueOptions": Immutable.List [],
                  "fields": Immutable.List [],
                  "indices": Immutable.List [],
                  "domainException": undefined,
                  "mandatoryFieldNames": Immutable.List [],
                  "reservedFieldNames": Immutable.List [],
                  "newDesignFields": undefined,
                  "instructions": undefined,
                  "domainKindName": undefined,
                  "schemaName": undefined,
                  "queryName": undefined,
                },
                Immutable.Record {
                  "name": "Data Fields",
                  "container": undefined,
                  "description": undefined,
                  "domainURI": undefined,
                  "domainId": null,
                  "allowFileLinkProperties": false,
                  "allowAttachmentProperties": false,
                  "allowFlagProperties": true,
                  "allowSampleSubjectProperties": true,
                  "allowTextChoiceProperties": true,
                  "allowTimepointProperties": false,
                  "showDefaultValueSettings": false,
                  "defaultDefaultValueType": undefined,
                  "defaultValueOptions": Immutable.List [],
                  "fields": Immutable.List [],
                  "indices": Immutable.List [],
                  "domainException": undefined,
                  "mandatoryFieldNames": Immutable.List [],
                  "reservedFieldNames": Immutable.List [],
                  "newDesignFields": undefined,
                  "instructions": undefined,
                  "domainKindName": undefined,
                  "schemaName": undefined,
                  "queryName": undefined,
                },
              ]
            }
            onChange={[Function]}
            onToggle={[Function]}
            panelStatus="TODO"
            showHeader={true}
            successBsStyle="success"
            testMode={true}
            validate={false}
          >
            <ForwardRef
              className="domain-form-panel"
              expanded={false}
              onToggle={[Function]}
            >
              <Uncontrolled(Panel)
                className="domain-form-panel"
                expanded={false}
                innerRef={null}
                onToggle={[Function]}
              >
                <Panel
                  bsClass="panel"
                  bsStyle="default"
                  className="domain-form-panel"
                  expanded={false}
                  onToggle={[Function]}
                >
                  <div
                    className="domain-form-panel panel panel-default"
                  >
                    <CollapsiblePanelHeader
                      collapsed={true}
                      controlledCollapse={true}
                      id="domainpropertiesrow-Data-Fields-hdr"
                      isValid={true}
                      panelStatus="TODO"
                      title="Results Fields"
                      togglePanel={[Function]}
                    >
                      <PanelHeading
                        bsClass="panel"
                        className="domain-panel-header domain-heading-collapsible domain-panel-header-collapsed"
                        componentClass="div"
                        id="domainpropertiesrow-Data-Fields-hdr"
                        onClick={[Function]}
                      >
                        <div
                          className="domain-panel-header domain-heading-collapsible domain-panel-header-collapsed panel-heading"
                          id="domainpropertiesrow-Data-Fields-hdr"
                          onClick={[Function]}
                        >
                          <Component
                            iconComponent={
                              <span
                                className="domain-panel-status-icon domain-panel-status-icon-blue"
                              >
                                <span
                                  className="fa fa-exclamation-circle"
                                />
                              </span>
                            }
                            id="tooltip"
                            placement="top"
                            title="Results Fields"
                          >
                            <span
                              className="label-help-target"
                              onMouseOut={[Function]}
                              onMouseOver={[Function]}
                            >
                              <span
                                className="domain-panel-status-icon domain-panel-status-icon-blue"
                              >
                                <span
                                  className="fa fa-exclamation-circle"
                                />
                              </span>
                              <Overlay
                                animation={[Function]}
                                placement="top"
                                rootClose={false}
                                show={false}
                              >
                                <Overlay
                                  placement="top"
                                  rootClose={false}
                                  show={false}
                                  transition={[Function]}
                                />
                              </Overlay>
                            </span>
                          </Component>
                          <span
                            className="domain-panel-title"
                          >
                            Results Fields
                          </span>
                          <span
                            className="pull-right"
                          >
                            <span
                              className="fa fa-lg fa-plus-square domain-form-expand-btn"
                            />
                          </span>
                          <Component
                            id="tooltip"
                            placement="top"
                            title="Results Fields"
                          >
                            <span
                              className="label-help-target"
                              onMouseOut={[Function]}
                              onMouseOver={[Function]}
                            >
                              <span
                                className="label-help-icon fa fa-question-circle"
                              />
                              <Overlay
                                animation={[Function]}
                                placement="top"
                                rootClose={false}
                                show={false}
                              >
                                <Overlay
                                  placement="top"
                                  rootClose={false}
                                  show={false}
                                  transition={[Function]}
                                />
                              </Overlay>
                            </span>
                          </Component>
                        </div>
                      </PanelHeading>
                    </CollapsiblePanelHeader>
                    <PanelBody
                      bsClass="panel"
                      className=""
                      collapsible={true}
                    >
                      <PanelCollapse
                        bsClass="panel"
                      >
                        <Collapse
                          appear={false}
                          dimension="height"
                          getDimensionValue={[Function]}
                          in={false}
                          mountOnEnter={false}
                          timeout={300}
                          unmountOnExit={false}
                        >
                          <Transition
                            appear={false}
                            aria-expanded={null}
                            enter={true}
                            exit={true}
                            in={false}
                            mountOnEnter={false}
                            onEnter={[Function]}
                            onEntered={[Function]}
                            onEntering={[Function]}
                            onExit={[Function]}
                            onExited={[Function]}
                            onExiting={[Function]}
                            timeout={300}
                            unmountOnExit={false}
                          >
                            <div
                              aria-expanded={null}
                              className="panel-collapse collapse"
                            >
                              <div
                                className="panel-body"
                              >
                                <Row
                                  bsClass="row"
                                  className=""
                                  componentClass="div"
                                >
                                  <div
                                    className="row"
                                  >
                                    <Col
                                      bsClass="col"
                                      componentClass="div"
                                      xs={12}
                                    >
                                      <div
                                        className="col-xs-12"
                                      />
                                    </Col>
                                  </div>
                                </Row>
                                <FileAttachmentForm
                                  acceptedFormats=".csv, .tsv, .txt, .xls, .xlsx, .json"
                                  allowDirectories={false}
                                  allowMultiple={false}
                                  cancelText="Cancel"
                                  compact={false}
                                  fileSpecificCallback={
                                    Immutable.Map {
                                      ".json": [Function],
                                    }
                                  }
                                  index={2}
                                  label="Import or infer fields from file"
                                  labelLong="Select file or drag and drop here."
                                  onFileRemoval={[Function]}
                                  previewGridProps={
                                    {
                                      "domainKindName": undefined,
                                      "onPreviewLoad": [Function],
                                      "previewCount": 3,
                                      "skipPreviewGrid": true,
                                    }
                                  }
                                  showAcceptedFormats={true}
                                  showButtons={false}
                                  showLabel={true}
                                  showProgressBar={false}
                                  submitText="Upload"
                                >
                                  <span
                                    className="translator--toggle__wizard"
                                  >
                                    <FormSection
                                      iconSpacer={false}
                                      label="Import or infer fields from file"
                                      showLabel={true}
                                    >
                                      <div
                                        className="row"
                                      >
                                        <div
                                          className="col-sm-12"
                                        >
                                          <label
                                            className="control-label text-left"
                                          >
                                            <strong>
                                              Import or infer fields from file
                                            </strong>
                                          </label>
                                        </div>
                                      </div>
                                      <div
                                        className="row"
                                      >
                                        <div
                                          className="col-sm-12"
                                        >
                                          <div
                                            className="wizard-row--container"
                                          >
                                            <div
                                              className=""
                                            >
                                              <FileAttachmentContainer
                                                acceptedFormats=".csv, .tsv, .txt, .xls, .xlsx, .json"
                                                allowDirectories={false}
                                                allowMultiple={false}
                                                compact={false}
                                                handleChange={[Function]}
                                                handleRemoval={[Function]}
                                                index={2}
                                                labelLong="Select file or drag and drop here."
                                              >
                                                <div
                                                  className="file-upload--container block"
                                                >
                                                  <label
                                                    className="file-upload--label"
                                                    htmlFor="fileUpload2"
                                                    onDragEnter={[Function]}
                                                    onDragLeave={[Function]}
                                                    onDragOver={[Function]}
                                                    onDrop={[Function]}
                                                  >
                                                    <i
                                                      aria-hidden="true"
                                                      className="fa fa-cloud-upload fa-2x cloud-logo"
                                                    />
                                                    Select file or drag and drop here.
                                                  </label>
                                                  <input
                                                    accept=".csv, .tsv, .txt, .xls, .xlsx, .json"
                                                    className="file-upload--input"
                                                    id="fileUpload2"
                                                    multiple={false}
                                                    name="fileUpload2"
                                                    onChange={[Function]}
                                                    type="file"
                                                  />
                                                </div>
                                              </FileAttachmentContainer>
                                            </div>
                                          </div>
                                        </div>
                                      </div>
                                    </FormSection>
                                  </span>
                                  <div
                                    className="row"
                                  >
                                    <div
                                      className="col-md-9"
                                    >
                                      <div
                                        className="file-form-formats"
                                      >
                                        <strong>
                                          Supported formats include: 
                                        </strong>
                                        .csv, .tsv, .txt, .xls, .xlsx, .json
                                      </div>
                                    </div>
                                    <div
                                      className="col-md-3"
                                    >
                                      <div
                                        className="pull-right"
                                      />
                                    </div>
                                  </div>
                                </FileAttachmentForm>
                                <div
                                  className="margin-top domain-form-manual-section"
                                >
                                  <p>
                                    Or
                                  </p>
                                  <ActionButton
                                    buttonClass="domain-form-manual-btn"
                                    containerClass="form-group"
                                    helperTitle="More Info"
                                    onClick={[Function]}
                                  >
                                    <div
                                      className="form-group"
                                    >
                                      <div
                                        className="domain-form-manual-btn"
                                      >
                                        <span
                                          className="container--action-button btn btn-default"
                                          onClick={[Function]}
                                        >
                                          Manually Define Fields
                                        </span>
                                      </div>
                                    </div>
                                  </ActionButton>
                                </div>
                              </div>
                            </div>
                          </Transition>
                        </Collapse>
                      </PanelCollapse>
                    </PanelBody>
                  </div>
                </Panel>
              </Uncontrolled(Panel)>
            </ForwardRef>
          </DomainFormImpl>
        </LookupProvider>
      </DomainForm>
      <div
        className="domain-form-panel domain-designer-buttons"
      >
        <Button
          active={false}
          block={false}
          bsClass="btn"
          bsStyle="default"
          disabled={false}
          onClick={[MockFunction]}
        >
          <button
            className="btn btn-default"
            disabled={false}
            onClick={[MockFunction]}
            type="button"
          >
            Cancel
          </button>
        </Button>
        <Button
          active={false}
          block={false}
          bsClass="btn"
          bsStyle="success"
          className="pull-right"
          disabled={false}
          onClick={[Function]}
        >
          <button
            className="pull-right btn btn-success"
            disabled={false}
            onClick={[Function]}
            type="button"
          >
            Save
          </button>
        </Button>
      </div>
    </BaseDomainDesigner>
  </AssayDesignerPanelsImpl>
</ComponentWithBaseDomainDesigner>
`;

exports[`AssayDesignerPanels hideEmptyBatchDomain for new assay 1`] = `
<ComponentWithBaseDomainDesigner
  domainFormDisplayOptions={
    {
      "hideStudyPropertyTypes": true,
    }
  }
  hideEmptyBatchDomain={true}
  initModel={
    Immutable.Record {
      "allowBackgroundUpload": false,
      "allowEditableResults": false,
      "allowQCStates": false,
      "allowTransformationScript": false,
      "allowPlateMetadata": false,
      "autoCopyTargetContainer": undefined,
      "autoCopyTargetContainerId": undefined,
      "autoLinkCategory": undefined,
      "availableDetectionMethods": undefined,
      "availableMetadataInputFormats": undefined,
      "availablePlateTemplates": undefined,
      "backgroundUpload": false,
      "description": undefined,
      "domains": Immutable.List [
        Immutable.Record {
          "name": "Batch Fields",
          "container": undefined,
          "description": undefined,
          "domainURI": undefined,
          "domainId": null,
          "allowFileLinkProperties": false,
          "allowAttachmentProperties": false,
          "allowFlagProperties": true,
          "allowSampleSubjectProperties": true,
          "allowTextChoiceProperties": true,
          "allowTimepointProperties": false,
          "showDefaultValueSettings": false,
          "defaultDefaultValueType": undefined,
          "defaultValueOptions": Immutable.List [],
          "fields": Immutable.List [],
          "indices": Immutable.List [],
          "domainException": undefined,
          "mandatoryFieldNames": Immutable.List [],
          "reservedFieldNames": Immutable.List [],
          "newDesignFields": undefined,
          "instructions": undefined,
          "domainKindName": undefined,
          "schemaName": undefined,
          "queryName": undefined,
        },
        Immutable.Record {
          "name": "Run Fields",
          "container": undefined,
          "description": undefined,
          "domainURI": undefined,
          "domainId": null,
          "allowFileLinkProperties": false,
          "allowAttachmentProperties": false,
          "allowFlagProperties": true,
          "allowSampleSubjectProperties": true,
          "allowTextChoiceProperties": true,
          "allowTimepointProperties": false,
          "showDefaultValueSettings": false,
          "defaultDefaultValueType": undefined,
          "defaultValueOptions": Immutable.List [],
          "fields": Immutable.List [],
          "indices": Immutable.List [],
          "domainException": undefined,
          "mandatoryFieldNames": Immutable.List [],
          "reservedFieldNames": Immutable.List [],
          "newDesignFields": undefined,
          "instructions": undefined,
          "domainKindName": undefined,
          "schemaName": undefined,
          "queryName": undefined,
        },
        Immutable.Record {
          "name": "Data Fields",
          "container": undefined,
          "description": undefined,
          "domainURI": undefined,
          "domainId": null,
          "allowFileLinkProperties": false,
          "allowAttachmentProperties": false,
          "allowFlagProperties": true,
          "allowSampleSubjectProperties": true,
          "allowTextChoiceProperties": true,
          "allowTimepointProperties": false,
          "showDefaultValueSettings": false,
          "defaultDefaultValueType": undefined,
          "defaultValueOptions": Immutable.List [],
          "fields": Immutable.List [],
          "indices": Immutable.List [],
          "domainException": undefined,
          "mandatoryFieldNames": Immutable.List [],
          "reservedFieldNames": Immutable.List [],
          "newDesignFields": undefined,
          "instructions": undefined,
          "domainKindName": undefined,
          "schemaName": undefined,
          "queryName": undefined,
        },
      ],
      "editableResults": false,
      "editableRuns": false,
      "exception": undefined,
      "metadataInputFormatHelp": undefined,
      "moduleTransformScripts": undefined,
      "name": undefined,
      "plateMetadata": undefined,
      "protocolId": undefined,
      "protocolParameters": undefined,
      "protocolTransformScripts": undefined,
      "providerName": "General",
      "saveScriptFiles": false,
      "selectedDetectionMethod": undefined,
      "selectedMetadataInputFormat": undefined,
      "selectedPlateTemplate": undefined,
      "status": "Active",
      "qcEnabled": undefined,
    }
  }
  onCancel={[MockFunction]}
  onComplete={[MockFunction]}
  testMode={true}
>
  <AssayDesignerPanelsImpl
    currentPanelIndex={0}
    domainFormDisplayOptions={
      {
        "hideStudyPropertyTypes": true,
      }
    }
    firstState={true}
    hideEmptyBatchDomain={true}
    initModel={
      Immutable.Record {
        "allowBackgroundUpload": false,
        "allowEditableResults": false,
        "allowQCStates": false,
        "allowTransformationScript": false,
        "allowPlateMetadata": false,
        "autoCopyTargetContainer": undefined,
        "autoCopyTargetContainerId": undefined,
        "autoLinkCategory": undefined,
        "availableDetectionMethods": undefined,
        "availableMetadataInputFormats": undefined,
        "availablePlateTemplates": undefined,
        "backgroundUpload": false,
        "description": undefined,
        "domains": Immutable.List [
          Immutable.Record {
            "name": "Batch Fields",
            "container": undefined,
            "description": undefined,
            "domainURI": undefined,
            "domainId": null,
            "allowFileLinkProperties": false,
            "allowAttachmentProperties": false,
            "allowFlagProperties": true,
            "allowSampleSubjectProperties": true,
            "allowTextChoiceProperties": true,
            "allowTimepointProperties": false,
            "showDefaultValueSettings": false,
            "defaultDefaultValueType": undefined,
            "defaultValueOptions": Immutable.List [],
            "fields": Immutable.List [],
            "indices": Immutable.List [],
            "domainException": undefined,
            "mandatoryFieldNames": Immutable.List [],
            "reservedFieldNames": Immutable.List [],
            "newDesignFields": undefined,
            "instructions": undefined,
            "domainKindName": undefined,
            "schemaName": undefined,
            "queryName": undefined,
          },
          Immutable.Record {
            "name": "Run Fields",
            "container": undefined,
            "description": undefined,
            "domainURI": undefined,
            "domainId": null,
            "allowFileLinkProperties": false,
            "allowAttachmentProperties": false,
            "allowFlagProperties": true,
            "allowSampleSubjectProperties": true,
            "allowTextChoiceProperties": true,
            "allowTimepointProperties": false,
            "showDefaultValueSettings": false,
            "defaultDefaultValueType": undefined,
            "defaultValueOptions": Immutable.List [],
            "fields": Immutable.List [],
            "indices": Immutable.List [],
            "domainException": undefined,
            "mandatoryFieldNames": Immutable.List [],
            "reservedFieldNames": Immutable.List [],
            "newDesignFields": undefined,
            "instructions": undefined,
            "domainKindName": undefined,
            "schemaName": undefined,
            "queryName": undefined,
          },
          Immutable.Record {
            "name": "Data Fields",
            "container": undefined,
            "description": undefined,
            "domainURI": undefined,
            "domainId": null,
            "allowFileLinkProperties": false,
            "allowAttachmentProperties": false,
            "allowFlagProperties": true,
            "allowSampleSubjectProperties": true,
            "allowTextChoiceProperties": true,
            "allowTimepointProperties": false,
            "showDefaultValueSettings": false,
            "defaultDefaultValueType": undefined,
            "defaultValueOptions": Immutable.List [],
            "fields": Immutable.List [],
            "indices": Immutable.List [],
            "domainException": undefined,
            "mandatoryFieldNames": Immutable.List [],
            "reservedFieldNames": Immutable.List [],
            "newDesignFields": undefined,
            "instructions": undefined,
            "domainKindName": undefined,
            "schemaName": undefined,
            "queryName": undefined,
          },
        ],
        "editableResults": false,
        "editableRuns": false,
        "exception": undefined,
        "metadataInputFormatHelp": undefined,
        "moduleTransformScripts": undefined,
        "name": undefined,
        "plateMetadata": undefined,
        "protocolId": undefined,
        "protocolParameters": undefined,
        "protocolTransformScripts": undefined,
        "providerName": "General",
        "saveScriptFiles": false,
        "selectedDetectionMethod": undefined,
        "selectedMetadataInputFormat": undefined,
        "selectedPlateTemplate": undefined,
        "status": "Active",
        "qcEnabled": undefined,
      }
    }
    onCancel={[MockFunction]}
    onComplete={[MockFunction]}
    onFinish={[Function]}
    onTogglePanel={[Function]}
    setSubmitting={[Function]}
    submitting={false}
    testMode={true}
    visitedPanels={Immutable.List []}
  >
    <BaseDomainDesigner
      domains={
        Immutable.List [
          Immutable.Record {
            "name": "Batch Fields",
            "container": undefined,
            "description": undefined,
            "domainURI": undefined,
            "domainId": null,
            "allowFileLinkProperties": false,
            "allowAttachmentProperties": false,
            "allowFlagProperties": true,
            "allowSampleSubjectProperties": true,
            "allowTextChoiceProperties": true,
            "allowTimepointProperties": false,
            "showDefaultValueSettings": false,
            "defaultDefaultValueType": undefined,
            "defaultValueOptions": Immutable.List [],
            "fields": Immutable.List [],
            "indices": Immutable.List [],
            "domainException": undefined,
            "mandatoryFieldNames": Immutable.List [],
            "reservedFieldNames": Immutable.List [],
            "newDesignFields": undefined,
            "instructions": undefined,
            "domainKindName": undefined,
            "schemaName": undefined,
            "queryName": undefined,
          },
          Immutable.Record {
            "name": "Run Fields",
            "container": undefined,
            "description": undefined,
            "domainURI": undefined,
            "domainId": null,
            "allowFileLinkProperties": false,
            "allowAttachmentProperties": false,
            "allowFlagProperties": true,
            "allowSampleSubjectProperties": true,
            "allowTextChoiceProperties": true,
            "allowTimepointProperties": false,
            "showDefaultValueSettings": false,
            "defaultDefaultValueType": undefined,
            "defaultValueOptions": Immutable.List [],
            "fields": Immutable.List [],
            "indices": Immutable.List [],
            "domainException": undefined,
            "mandatoryFieldNames": Immutable.List [],
            "reservedFieldNames": Immutable.List [],
            "newDesignFields": undefined,
            "instructions": undefined,
            "domainKindName": undefined,
            "schemaName": undefined,
            "queryName": undefined,
          },
          Immutable.Record {
            "name": "Data Fields",
            "container": undefined,
            "description": undefined,
            "domainURI": undefined,
            "domainId": null,
            "allowFileLinkProperties": false,
            "allowAttachmentProperties": false,
            "allowFlagProperties": true,
            "allowSampleSubjectProperties": true,
            "allowTextChoiceProperties": true,
            "allowTimepointProperties": false,
            "showDefaultValueSettings": false,
            "defaultDefaultValueType": undefined,
            "defaultValueOptions": Immutable.List [],
            "fields": Immutable.List [],
            "indices": Immutable.List [],
            "domainException": undefined,
            "mandatoryFieldNames": Immutable.List [],
            "reservedFieldNames": Immutable.List [],
            "newDesignFields": undefined,
            "instructions": undefined,
            "domainKindName": undefined,
            "schemaName": undefined,
            "queryName": undefined,
          },
        ]
      }
      hasValidProperties={false}
      onCancel={[MockFunction]}
      onFinish={[Function]}
      saveBtnText="Save"
      submitting={false}
      visitedPanels={Immutable.List []}
    >
      <ComponentWithDomainPropertiesPanelCollapse
        controlledCollapse={true}
        hideStudyProperties={true}
        initCollapsed={false}
        model={
          Immutable.Record {
            "allowBackgroundUpload": false,
            "allowEditableResults": false,
            "allowQCStates": false,
            "allowTransformationScript": false,
            "allowPlateMetadata": false,
            "autoCopyTargetContainer": undefined,
            "autoCopyTargetContainerId": undefined,
            "autoLinkCategory": undefined,
            "availableDetectionMethods": undefined,
            "availableMetadataInputFormats": undefined,
            "availablePlateTemplates": undefined,
            "backgroundUpload": false,
            "description": undefined,
            "domains": Immutable.List [
              Immutable.Record {
                "name": "Batch Fields",
                "container": undefined,
                "description": undefined,
                "domainURI": undefined,
                "domainId": null,
                "allowFileLinkProperties": false,
                "allowAttachmentProperties": false,
                "allowFlagProperties": true,
                "allowSampleSubjectProperties": true,
                "allowTextChoiceProperties": true,
                "allowTimepointProperties": false,
                "showDefaultValueSettings": false,
                "defaultDefaultValueType": undefined,
                "defaultValueOptions": Immutable.List [],
                "fields": Immutable.List [],
                "indices": Immutable.List [],
                "domainException": undefined,
                "mandatoryFieldNames": Immutable.List [],
                "reservedFieldNames": Immutable.List [],
                "newDesignFields": undefined,
                "instructions": undefined,
                "domainKindName": undefined,
                "schemaName": undefined,
                "queryName": undefined,
              },
              Immutable.Record {
                "name": "Run Fields",
                "container": undefined,
                "description": undefined,
                "domainURI": undefined,
                "domainId": null,
                "allowFileLinkProperties": false,
                "allowAttachmentProperties": false,
                "allowFlagProperties": true,
                "allowSampleSubjectProperties": true,
                "allowTextChoiceProperties": true,
                "allowTimepointProperties": false,
                "showDefaultValueSettings": false,
                "defaultDefaultValueType": undefined,
                "defaultValueOptions": Immutable.List [],
                "fields": Immutable.List [],
                "indices": Immutable.List [],
                "domainException": undefined,
                "mandatoryFieldNames": Immutable.List [],
                "reservedFieldNames": Immutable.List [],
                "newDesignFields": undefined,
                "instructions": undefined,
                "domainKindName": undefined,
                "schemaName": undefined,
                "queryName": undefined,
              },
              Immutable.Record {
                "name": "Data Fields",
                "container": undefined,
                "description": undefined,
                "domainURI": undefined,
                "domainId": null,
                "allowFileLinkProperties": false,
                "allowAttachmentProperties": false,
                "allowFlagProperties": true,
                "allowSampleSubjectProperties": true,
                "allowTextChoiceProperties": true,
                "allowTimepointProperties": false,
                "showDefaultValueSettings": false,
                "defaultDefaultValueType": undefined,
                "defaultValueOptions": Immutable.List [],
                "fields": Immutable.List [],
                "indices": Immutable.List [],
                "domainException": undefined,
                "mandatoryFieldNames": Immutable.List [],
                "reservedFieldNames": Immutable.List [],
                "newDesignFields": undefined,
                "instructions": undefined,
                "domainKindName": undefined,
                "schemaName": undefined,
                "queryName": undefined,
              },
            ],
            "editableResults": false,
            "editableRuns": false,
            "exception": undefined,
            "metadataInputFormatHelp": undefined,
            "moduleTransformScripts": undefined,
            "name": undefined,
            "plateMetadata": undefined,
            "protocolId": undefined,
            "protocolParameters": undefined,
            "protocolTransformScripts": undefined,
            "providerName": "General",
            "saveScriptFiles": false,
            "selectedDetectionMethod": undefined,
            "selectedMetadataInputFormat": undefined,
            "selectedPlateTemplate": undefined,
            "status": "Active",
            "qcEnabled": undefined,
          }
        }
        onChange={[Function]}
        onToggle={[Function]}
        panelStatus="NONE"
        validate={false}
      >
        <Component
          appPropertiesOnly={false}
          asPanel={true}
          collapsed={false}
          controlledCollapse={true}
          helpTopic="defineAssaySchema"
          hideStudyProperties={true}
          model={
            Immutable.Record {
              "allowBackgroundUpload": false,
              "allowEditableResults": false,
              "allowQCStates": false,
              "allowTransformationScript": false,
              "allowPlateMetadata": false,
              "autoCopyTargetContainer": undefined,
              "autoCopyTargetContainerId": undefined,
              "autoLinkCategory": undefined,
              "availableDetectionMethods": undefined,
              "availableMetadataInputFormats": undefined,
              "availablePlateTemplates": undefined,
              "backgroundUpload": false,
              "description": undefined,
              "domains": Immutable.List [
                Immutable.Record {
                  "name": "Batch Fields",
                  "container": undefined,
                  "description": undefined,
                  "domainURI": undefined,
                  "domainId": null,
                  "allowFileLinkProperties": false,
                  "allowAttachmentProperties": false,
                  "allowFlagProperties": true,
                  "allowSampleSubjectProperties": true,
                  "allowTextChoiceProperties": true,
                  "allowTimepointProperties": false,
                  "showDefaultValueSettings": false,
                  "defaultDefaultValueType": undefined,
                  "defaultValueOptions": Immutable.List [],
                  "fields": Immutable.List [],
                  "indices": Immutable.List [],
                  "domainException": undefined,
                  "mandatoryFieldNames": Immutable.List [],
                  "reservedFieldNames": Immutable.List [],
                  "newDesignFields": undefined,
                  "instructions": undefined,
                  "domainKindName": undefined,
                  "schemaName": undefined,
                  "queryName": undefined,
                },
                Immutable.Record {
                  "name": "Run Fields",
                  "container": undefined,
                  "description": undefined,
                  "domainURI": undefined,
                  "domainId": null,
                  "allowFileLinkProperties": false,
                  "allowAttachmentProperties": false,
                  "allowFlagProperties": true,
                  "allowSampleSubjectProperties": true,
                  "allowTextChoiceProperties": true,
                  "allowTimepointProperties": false,
                  "showDefaultValueSettings": false,
                  "defaultDefaultValueType": undefined,
                  "defaultValueOptions": Immutable.List [],
                  "fields": Immutable.List [],
                  "indices": Immutable.List [],
                  "domainException": undefined,
                  "mandatoryFieldNames": Immutable.List [],
                  "reservedFieldNames": Immutable.List [],
                  "newDesignFields": undefined,
                  "instructions": undefined,
                  "domainKindName": undefined,
                  "schemaName": undefined,
                  "queryName": undefined,
                },
                Immutable.Record {
                  "name": "Data Fields",
                  "container": undefined,
                  "description": undefined,
                  "domainURI": undefined,
                  "domainId": null,
                  "allowFileLinkProperties": false,
                  "allowAttachmentProperties": false,
                  "allowFlagProperties": true,
                  "allowSampleSubjectProperties": true,
                  "allowTextChoiceProperties": true,
                  "allowTimepointProperties": false,
                  "showDefaultValueSettings": false,
                  "defaultDefaultValueType": undefined,
                  "defaultValueOptions": Immutable.List [],
                  "fields": Immutable.List [],
                  "indices": Immutable.List [],
                  "domainException": undefined,
                  "mandatoryFieldNames": Immutable.List [],
                  "reservedFieldNames": Immutable.List [],
                  "newDesignFields": undefined,
                  "instructions": undefined,
                  "domainKindName": undefined,
                  "schemaName": undefined,
                  "queryName": undefined,
                },
              ],
              "editableResults": false,
              "editableRuns": false,
              "exception": undefined,
              "metadataInputFormatHelp": undefined,
              "moduleTransformScripts": undefined,
              "name": undefined,
              "plateMetadata": undefined,
              "protocolId": undefined,
              "protocolParameters": undefined,
              "protocolTransformScripts": undefined,
              "providerName": "General",
              "saveScriptFiles": false,
              "selectedDetectionMethod": undefined,
              "selectedMetadataInputFormat": undefined,
              "selectedPlateTemplate": undefined,
              "status": "Active",
              "qcEnabled": undefined,
            }
          }
          onChange={[Function]}
          panelStatus="NONE"
          togglePanel={[Function]}
          validate={false}
        >
          <BasePropertiesPanel
            appPropertiesOnly={false}
            asPanel={true}
            collapsed={false}
            controlledCollapse={true}
            headerId="assay-properties-hdr"
            helpTopic="defineAssaySchema"
            hideStudyProperties={true}
            isValid={true}
            model={
              Immutable.Record {
                "allowBackgroundUpload": false,
                "allowEditableResults": false,
                "allowQCStates": false,
                "allowTransformationScript": false,
                "allowPlateMetadata": false,
                "autoCopyTargetContainer": undefined,
                "autoCopyTargetContainerId": undefined,
                "autoLinkCategory": undefined,
                "availableDetectionMethods": undefined,
                "availableMetadataInputFormats": undefined,
                "availablePlateTemplates": undefined,
                "backgroundUpload": false,
                "description": undefined,
                "domains": Immutable.List [
                  Immutable.Record {
                    "name": "Batch Fields",
                    "container": undefined,
                    "description": undefined,
                    "domainURI": undefined,
                    "domainId": null,
                    "allowFileLinkProperties": false,
                    "allowAttachmentProperties": false,
                    "allowFlagProperties": true,
                    "allowSampleSubjectProperties": true,
                    "allowTextChoiceProperties": true,
                    "allowTimepointProperties": false,
                    "showDefaultValueSettings": false,
                    "defaultDefaultValueType": undefined,
                    "defaultValueOptions": Immutable.List [],
                    "fields": Immutable.List [],
                    "indices": Immutable.List [],
                    "domainException": undefined,
                    "mandatoryFieldNames": Immutable.List [],
                    "reservedFieldNames": Immutable.List [],
                    "newDesignFields": undefined,
                    "instructions": undefined,
                    "domainKindName": undefined,
                    "schemaName": undefined,
                    "queryName": undefined,
                  },
                  Immutable.Record {
                    "name": "Run Fields",
                    "container": undefined,
                    "description": undefined,
                    "domainURI": undefined,
                    "domainId": null,
                    "allowFileLinkProperties": false,
                    "allowAttachmentProperties": false,
                    "allowFlagProperties": true,
                    "allowSampleSubjectProperties": true,
                    "allowTextChoiceProperties": true,
                    "allowTimepointProperties": false,
                    "showDefaultValueSettings": false,
                    "defaultDefaultValueType": undefined,
                    "defaultValueOptions": Immutable.List [],
                    "fields": Immutable.List [],
                    "indices": Immutable.List [],
                    "domainException": undefined,
                    "mandatoryFieldNames": Immutable.List [],
                    "reservedFieldNames": Immutable.List [],
                    "newDesignFields": undefined,
                    "instructions": undefined,
                    "domainKindName": undefined,
                    "schemaName": undefined,
                    "queryName": undefined,
                  },
                  Immutable.Record {
                    "name": "Data Fields",
                    "container": undefined,
                    "description": undefined,
                    "domainURI": undefined,
                    "domainId": null,
                    "allowFileLinkProperties": false,
                    "allowAttachmentProperties": false,
                    "allowFlagProperties": true,
                    "allowSampleSubjectProperties": true,
                    "allowTextChoiceProperties": true,
                    "allowTimepointProperties": false,
                    "showDefaultValueSettings": false,
                    "defaultDefaultValueType": undefined,
                    "defaultValueOptions": Immutable.List [],
                    "fields": Immutable.List [],
                    "indices": Immutable.List [],
                    "domainException": undefined,
                    "mandatoryFieldNames": Immutable.List [],
                    "reservedFieldNames": Immutable.List [],
                    "newDesignFields": undefined,
                    "instructions": undefined,
                    "domainKindName": undefined,
                    "schemaName": undefined,
                    "queryName": undefined,
                  },
                ],
                "editableResults": false,
                "editableRuns": false,
                "exception": undefined,
                "metadataInputFormatHelp": undefined,
                "moduleTransformScripts": undefined,
                "name": undefined,
                "plateMetadata": undefined,
                "protocolId": undefined,
                "protocolParameters": undefined,
                "protocolTransformScripts": undefined,
                "providerName": "General",
                "saveScriptFiles": false,
                "selectedDetectionMethod": undefined,
                "selectedMetadataInputFormat": undefined,
                "selectedPlateTemplate": undefined,
                "status": "Active",
                "qcEnabled": undefined,
              }
            }
            onChange={[Function]}
            panelStatus="NONE"
            title="Assay Properties"
            togglePanel={[Function]}
            updateValidStatus={[Function]}
            useTheme={false}
            validate={false}
          >
            <ForwardRef
              className="domain-form-panel domain-panel-no-theme"
              expanded={true}
              onToggle={[Function]}
            >
              <Uncontrolled(Panel)
                className="domain-form-panel domain-panel-no-theme"
                expanded={true}
                innerRef={null}
                onToggle={[Function]}
              >
                <Panel
                  bsClass="panel"
                  bsStyle="default"
                  className="domain-form-panel domain-panel-no-theme"
                  expanded={true}
                  onToggle={[Function]}
                >
                  <div
                    className="domain-form-panel domain-panel-no-theme panel panel-default"
                  >
                    <CollapsiblePanelHeader
                      collapsed={false}
                      controlledCollapse={true}
                      iconHelpMsg="Contains errors or is missing required values."
                      id="assay-properties-hdr"
                      isValid={true}
                      panelStatus="NONE"
                      title="Assay Properties"
                      togglePanel={[Function]}
                      useTheme={false}
                    >
                      <PanelHeading
                        bsClass="panel"
                        className="domain-panel-header domain-heading-collapsible domain-panel-header-expanded domain-panel-header-no-theme"
                        componentClass="div"
                        id="assay-properties-hdr"
                        onClick={[Function]}
                      >
                        <div
                          className="domain-panel-header domain-heading-collapsible domain-panel-header-expanded domain-panel-header-no-theme panel-heading"
                          id="assay-properties-hdr"
                          onClick={[Function]}
                        >
                          <span
                            className="domain-panel-title"
                          >
                            Assay Properties
                          </span>
                          <span
                            className="pull-right"
                          >
                            <span
                              className="fa fa-lg fa-minus-square domain-form-collapse-btn"
                            />
                          </span>
                        </div>
                      </PanelHeading>
                    </CollapsiblePanelHeader>
                    <PanelBody
                      bsClass="panel"
                      collapsible={true}
                    >
                      <PanelCollapse
                        bsClass="panel"
                      >
                        <Collapse
                          appear={false}
                          dimension="height"
                          getDimensionValue={[Function]}
                          in={true}
                          mountOnEnter={false}
                          timeout={300}
                          unmountOnExit={false}
                        >
                          <Transition
                            appear={false}
                            aria-expanded={null}
                            enter={true}
                            exit={true}
                            in={true}
                            mountOnEnter={false}
                            onEnter={[Function]}
                            onEntered={[Function]}
                            onEntering={[Function]}
                            onExit={[Function]}
                            onExited={[Function]}
                            onExiting={[Function]}
                            timeout={300}
                            unmountOnExit={false}
                          >
                            <div
                              aria-expanded={null}
                              className="panel-collapse collapse in"
                            >
                              <div
                                className="panel-body"
                              >
                                <HelpTopicURL
                                  helpTopic="defineAssaySchema"
                                  nounPlural="assays"
                                >
                                  <Row
                                    bsClass="row"
                                    componentClass="div"
                                  >
                                    <div
                                      className="row"
                                    >
                                      <Col
                                        bsClass="col"
                                        componentClass="div"
                                        xs={12}
                                      >
                                        <div
                                          className="col-xs-12"
                                        >
                                          <HelpLink
                                            className="domain-field-float-right"
                                            topic="defineAssaySchema"
                                          >
                                            <a
                                              className="domain-field-float-right"
                                              href="https://www.labkey.org/Documentation/wiki-page.view?referrer=inPage&name=defineAssaySchema"
                                              rel="noopener noreferrer"
                                              target="_blank"
                                            >
                                              Learn more about designing assays
                                            </a>
                                          </HelpLink>
                                        </div>
                                      </Col>
                                    </div>
                                  </Row>
                                </HelpTopicURL>
                                <AssayPropertiesForm
                                  appPropertiesOnly={false}
                                  hideStudyProperties={true}
                                  model={
                                    Immutable.Record {
                                      "allowBackgroundUpload": false,
                                      "allowEditableResults": false,
                                      "allowQCStates": false,
                                      "allowTransformationScript": false,
                                      "allowPlateMetadata": false,
                                      "autoCopyTargetContainer": undefined,
                                      "autoCopyTargetContainerId": undefined,
                                      "autoLinkCategory": undefined,
                                      "availableDetectionMethods": undefined,
                                      "availableMetadataInputFormats": undefined,
                                      "availablePlateTemplates": undefined,
                                      "backgroundUpload": false,
                                      "description": undefined,
                                      "domains": Immutable.List [
                                        Immutable.Record {
                                          "name": "Batch Fields",
                                          "container": undefined,
                                          "description": undefined,
                                          "domainURI": undefined,
                                          "domainId": null,
                                          "allowFileLinkProperties": false,
                                          "allowAttachmentProperties": false,
                                          "allowFlagProperties": true,
                                          "allowSampleSubjectProperties": true,
                                          "allowTextChoiceProperties": true,
                                          "allowTimepointProperties": false,
                                          "showDefaultValueSettings": false,
                                          "defaultDefaultValueType": undefined,
                                          "defaultValueOptions": Immutable.List [],
                                          "fields": Immutable.List [],
                                          "indices": Immutable.List [],
                                          "domainException": undefined,
                                          "mandatoryFieldNames": Immutable.List [],
                                          "reservedFieldNames": Immutable.List [],
                                          "newDesignFields": undefined,
                                          "instructions": undefined,
                                          "domainKindName": undefined,
                                          "schemaName": undefined,
                                          "queryName": undefined,
                                        },
                                        Immutable.Record {
                                          "name": "Run Fields",
                                          "container": undefined,
                                          "description": undefined,
                                          "domainURI": undefined,
                                          "domainId": null,
                                          "allowFileLinkProperties": false,
                                          "allowAttachmentProperties": false,
                                          "allowFlagProperties": true,
                                          "allowSampleSubjectProperties": true,
                                          "allowTextChoiceProperties": true,
                                          "allowTimepointProperties": false,
                                          "showDefaultValueSettings": false,
                                          "defaultDefaultValueType": undefined,
                                          "defaultValueOptions": Immutable.List [],
                                          "fields": Immutable.List [],
                                          "indices": Immutable.List [],
                                          "domainException": undefined,
                                          "mandatoryFieldNames": Immutable.List [],
                                          "reservedFieldNames": Immutable.List [],
                                          "newDesignFields": undefined,
                                          "instructions": undefined,
                                          "domainKindName": undefined,
                                          "schemaName": undefined,
                                          "queryName": undefined,
                                        },
                                        Immutable.Record {
                                          "name": "Data Fields",
                                          "container": undefined,
                                          "description": undefined,
                                          "domainURI": undefined,
                                          "domainId": null,
                                          "allowFileLinkProperties": false,
                                          "allowAttachmentProperties": false,
                                          "allowFlagProperties": true,
                                          "allowSampleSubjectProperties": true,
                                          "allowTextChoiceProperties": true,
                                          "allowTimepointProperties": false,
                                          "showDefaultValueSettings": false,
                                          "defaultDefaultValueType": undefined,
                                          "defaultValueOptions": Immutable.List [],
                                          "fields": Immutable.List [],
                                          "indices": Immutable.List [],
                                          "domainException": undefined,
                                          "mandatoryFieldNames": Immutable.List [],
                                          "reservedFieldNames": Immutable.List [],
                                          "newDesignFields": undefined,
                                          "instructions": undefined,
                                          "domainKindName": undefined,
                                          "schemaName": undefined,
                                          "queryName": undefined,
                                        },
                                      ],
                                      "editableResults": false,
                                      "editableRuns": false,
                                      "exception": undefined,
                                      "metadataInputFormatHelp": undefined,
                                      "moduleTransformScripts": undefined,
                                      "name": undefined,
                                      "plateMetadata": undefined,
                                      "protocolId": undefined,
                                      "protocolParameters": undefined,
                                      "protocolTransformScripts": undefined,
                                      "providerName": "General",
                                      "saveScriptFiles": false,
                                      "selectedDetectionMethod": undefined,
                                      "selectedMetadataInputFormat": undefined,
                                      "selectedPlateTemplate": undefined,
                                      "status": "Active",
                                      "qcEnabled": undefined,
                                    }
                                  }
                                  onChange={[Function]}
                                >
                                  <Form
                                    bsClass="form"
                                    componentClass="form"
                                    horizontal={false}
                                    inline={false}
                                  >
                                    <form
                                      className=""
                                    >
                                      <Col
                                        bsClass="col"
                                        componentClass="div"
                                        lg={6}
                                        xs={12}
                                      >
                                        <div
                                          className="col-lg-6 col-xs-12"
                                        >
                                          <div
                                            className="domain-field-padding-bottom"
                                          >
                                            <SectionHeading
                                              title="Basic Properties"
                                            >
                                              <div
                                                className="domain-field-section-heading"
                                              >
                                                Basic Properties
                                              </div>
                                            </SectionHeading>
                                            <NameInput
                                              appPropertiesOnly={false}
                                              model={
                                                Immutable.Record {
                                                  "allowBackgroundUpload": false,
                                                  "allowEditableResults": false,
                                                  "allowQCStates": false,
                                                  "allowTransformationScript": false,
                                                  "allowPlateMetadata": false,
                                                  "autoCopyTargetContainer": undefined,
                                                  "autoCopyTargetContainerId": undefined,
                                                  "autoLinkCategory": undefined,
                                                  "availableDetectionMethods": undefined,
                                                  "availableMetadataInputFormats": undefined,
                                                  "availablePlateTemplates": undefined,
                                                  "backgroundUpload": false,
                                                  "description": undefined,
                                                  "domains": Immutable.List [
                                                    Immutable.Record {
                                                      "name": "Batch Fields",
                                                      "container": undefined,
                                                      "description": undefined,
                                                      "domainURI": undefined,
                                                      "domainId": null,
                                                      "allowFileLinkProperties": false,
                                                      "allowAttachmentProperties": false,
                                                      "allowFlagProperties": true,
                                                      "allowSampleSubjectProperties": true,
                                                      "allowTextChoiceProperties": true,
                                                      "allowTimepointProperties": false,
                                                      "showDefaultValueSettings": false,
                                                      "defaultDefaultValueType": undefined,
                                                      "defaultValueOptions": Immutable.List [],
                                                      "fields": Immutable.List [],
                                                      "indices": Immutable.List [],
                                                      "domainException": undefined,
                                                      "mandatoryFieldNames": Immutable.List [],
                                                      "reservedFieldNames": Immutable.List [],
                                                      "newDesignFields": undefined,
                                                      "instructions": undefined,
                                                      "domainKindName": undefined,
                                                      "schemaName": undefined,
                                                      "queryName": undefined,
                                                    },
                                                    Immutable.Record {
                                                      "name": "Run Fields",
                                                      "container": undefined,
                                                      "description": undefined,
                                                      "domainURI": undefined,
                                                      "domainId": null,
                                                      "allowFileLinkProperties": false,
                                                      "allowAttachmentProperties": false,
                                                      "allowFlagProperties": true,
                                                      "allowSampleSubjectProperties": true,
                                                      "allowTextChoiceProperties": true,
                                                      "allowTimepointProperties": false,
                                                      "showDefaultValueSettings": false,
                                                      "defaultDefaultValueType": undefined,
                                                      "defaultValueOptions": Immutable.List [],
                                                      "fields": Immutable.List [],
                                                      "indices": Immutable.List [],
                                                      "domainException": undefined,
                                                      "mandatoryFieldNames": Immutable.List [],
                                                      "reservedFieldNames": Immutable.List [],
                                                      "newDesignFields": undefined,
                                                      "instructions": undefined,
                                                      "domainKindName": undefined,
                                                      "schemaName": undefined,
                                                      "queryName": undefined,
                                                    },
                                                    Immutable.Record {
                                                      "name": "Data Fields",
                                                      "container": undefined,
                                                      "description": undefined,
                                                      "domainURI": undefined,
                                                      "domainId": null,
                                                      "allowFileLinkProperties": false,
                                                      "allowAttachmentProperties": false,
                                                      "allowFlagProperties": true,
                                                      "allowSampleSubjectProperties": true,
                                                      "allowTextChoiceProperties": true,
                                                      "allowTimepointProperties": false,
                                                      "showDefaultValueSettings": false,
                                                      "defaultDefaultValueType": undefined,
                                                      "defaultValueOptions": Immutable.List [],
                                                      "fields": Immutable.List [],
                                                      "indices": Immutable.List [],
                                                      "domainException": undefined,
                                                      "mandatoryFieldNames": Immutable.List [],
                                                      "reservedFieldNames": Immutable.List [],
                                                      "newDesignFields": undefined,
                                                      "instructions": undefined,
                                                      "domainKindName": undefined,
                                                      "schemaName": undefined,
                                                      "queryName": undefined,
                                                    },
                                                  ],
                                                  "editableResults": false,
                                                  "editableRuns": false,
                                                  "exception": undefined,
                                                  "metadataInputFormatHelp": undefined,
                                                  "moduleTransformScripts": undefined,
                                                  "name": undefined,
                                                  "plateMetadata": undefined,
                                                  "protocolId": undefined,
                                                  "protocolParameters": undefined,
                                                  "protocolTransformScripts": undefined,
                                                  "providerName": "General",
                                                  "saveScriptFiles": false,
                                                  "selectedDetectionMethod": undefined,
                                                  "selectedMetadataInputFormat": undefined,
                                                  "selectedPlateTemplate": undefined,
                                                  "status": "Active",
                                                  "qcEnabled": undefined,
                                                }
                                              }
                                              onChange={[Function]}
                                            >
                                              <Component
                                                appPropertiesOnly={false}
                                                colSize={9}
                                                helpTipBody={
                                                  <p>
                                                    The name for this assay design. Note that this can't be changed after the assay design is created.
                                                  </p>
                                                }
                                                label="Name"
                                                required={true}
                                              >
                                                <Row
                                                  bsClass="row"
                                                  className="margin-top"
                                                  componentClass="div"
                                                >
                                                  <div
                                                    className="margin-top row"
                                                  >
                                                    <Col
                                                      bsClass="col"
                                                      componentClass="div"
                                                      lg={4}
                                                      xs={3}
                                                    >
                                                      <div
                                                        className="col-lg-4 col-xs-3"
                                                      >
                                                        <DomainFieldLabel
                                                          helpTipBody={
                                                            <p>
                                                              The name for this assay design. Note that this can't be changed after the assay design is created.
                                                            </p>
                                                          }
                                                          label="Name"
                                                          required={true}
                                                        >
                                                          <span
                                                            className="domain-no-wrap"
                                                          >
                                                            Name
                                                            <Component
                                                              id="tooltip"
                                                              required={true}
                                                              title="Name"
                                                            >
                                                              <span
                                                                className="label-help-target"
                                                                onMouseOut={[Function]}
                                                                onMouseOver={[Function]}
                                                              >
                                                                <span
                                                                  className="label-help-icon fa fa-question-circle"
                                                                />
                                                                <Overlay
                                                                  animation={[Function]}
                                                                  placement="right"
                                                                  rootClose={false}
                                                                  show={false}
                                                                >
                                                                  <Overlay
                                                                    placement="right"
                                                                    rootClose={false}
                                                                    show={false}
                                                                    transition={[Function]}
                                                                  />
                                                                </Overlay>
                                                              </span>
                                                            </Component>
                                                             *
                                                          </span>
                                                        </DomainFieldLabel>
                                                      </div>
                                                    </Col>
                                                    <Col
                                                      bsClass="col"
                                                      componentClass="div"
                                                      lg={8}
                                                      xs={9}
                                                    >
                                                      <div
                                                        className="col-lg-8 col-xs-9"
                                                      >
                                                        <FormControl
                                                          bsClass="form-control"
                                                          componentClass="input"
                                                          disabled={false}
                                                          id="assay-design-name"
                                                          onChange={[Function]}
                                                          placeholder="Enter a name for this assay"
                                                          type="text"
                                                          value=""
                                                        >
                                                          <input
                                                            className="form-control"
                                                            disabled={false}
                                                            id="assay-design-name"
                                                            onChange={[Function]}
                                                            placeholder="Enter a name for this assay"
                                                            type="text"
                                                            value=""
                                                          />
                                                        </FormControl>
                                                      </div>
                                                    </Col>
                                                  </div>
                                                </Row>
                                              </Component>
                                            </NameInput>
                                            <DescriptionInput
                                              appPropertiesOnly={false}
                                              model={
                                                Immutable.Record {
                                                  "allowBackgroundUpload": false,
                                                  "allowEditableResults": false,
                                                  "allowQCStates": false,
                                                  "allowTransformationScript": false,
                                                  "allowPlateMetadata": false,
                                                  "autoCopyTargetContainer": undefined,
                                                  "autoCopyTargetContainerId": undefined,
                                                  "autoLinkCategory": undefined,
                                                  "availableDetectionMethods": undefined,
                                                  "availableMetadataInputFormats": undefined,
                                                  "availablePlateTemplates": undefined,
                                                  "backgroundUpload": false,
                                                  "description": undefined,
                                                  "domains": Immutable.List [
                                                    Immutable.Record {
                                                      "name": "Batch Fields",
                                                      "container": undefined,
                                                      "description": undefined,
                                                      "domainURI": undefined,
                                                      "domainId": null,
                                                      "allowFileLinkProperties": false,
                                                      "allowAttachmentProperties": false,
                                                      "allowFlagProperties": true,
                                                      "allowSampleSubjectProperties": true,
                                                      "allowTextChoiceProperties": true,
                                                      "allowTimepointProperties": false,
                                                      "showDefaultValueSettings": false,
                                                      "defaultDefaultValueType": undefined,
                                                      "defaultValueOptions": Immutable.List [],
                                                      "fields": Immutable.List [],
                                                      "indices": Immutable.List [],
                                                      "domainException": undefined,
                                                      "mandatoryFieldNames": Immutable.List [],
                                                      "reservedFieldNames": Immutable.List [],
                                                      "newDesignFields": undefined,
                                                      "instructions": undefined,
                                                      "domainKindName": undefined,
                                                      "schemaName": undefined,
                                                      "queryName": undefined,
                                                    },
                                                    Immutable.Record {
                                                      "name": "Run Fields",
                                                      "container": undefined,
                                                      "description": undefined,
                                                      "domainURI": undefined,
                                                      "domainId": null,
                                                      "allowFileLinkProperties": false,
                                                      "allowAttachmentProperties": false,
                                                      "allowFlagProperties": true,
                                                      "allowSampleSubjectProperties": true,
                                                      "allowTextChoiceProperties": true,
                                                      "allowTimepointProperties": false,
                                                      "showDefaultValueSettings": false,
                                                      "defaultDefaultValueType": undefined,
                                                      "defaultValueOptions": Immutable.List [],
                                                      "fields": Immutable.List [],
                                                      "indices": Immutable.List [],
                                                      "domainException": undefined,
                                                      "mandatoryFieldNames": Immutable.List [],
                                                      "reservedFieldNames": Immutable.List [],
                                                      "newDesignFields": undefined,
                                                      "instructions": undefined,
                                                      "domainKindName": undefined,
                                                      "schemaName": undefined,
                                                      "queryName": undefined,
                                                    },
                                                    Immutable.Record {
                                                      "name": "Data Fields",
                                                      "container": undefined,
                                                      "description": undefined,
                                                      "domainURI": undefined,
                                                      "domainId": null,
                                                      "allowFileLinkProperties": false,
                                                      "allowAttachmentProperties": false,
                                                      "allowFlagProperties": true,
                                                      "allowSampleSubjectProperties": true,
                                                      "allowTextChoiceProperties": true,
                                                      "allowTimepointProperties": false,
                                                      "showDefaultValueSettings": false,
                                                      "defaultDefaultValueType": undefined,
                                                      "defaultValueOptions": Immutable.List [],
                                                      "fields": Immutable.List [],
                                                      "indices": Immutable.List [],
                                                      "domainException": undefined,
                                                      "mandatoryFieldNames": Immutable.List [],
                                                      "reservedFieldNames": Immutable.List [],
                                                      "newDesignFields": undefined,
                                                      "instructions": undefined,
                                                      "domainKindName": undefined,
                                                      "schemaName": undefined,
                                                      "queryName": undefined,
                                                    },
                                                  ],
                                                  "editableResults": false,
                                                  "editableRuns": false,
                                                  "exception": undefined,
                                                  "metadataInputFormatHelp": undefined,
                                                  "moduleTransformScripts": undefined,
                                                  "name": undefined,
                                                  "plateMetadata": undefined,
                                                  "protocolId": undefined,
                                                  "protocolParameters": undefined,
                                                  "protocolTransformScripts": undefined,
                                                  "providerName": "General",
                                                  "saveScriptFiles": false,
                                                  "selectedDetectionMethod": undefined,
                                                  "selectedMetadataInputFormat": undefined,
                                                  "selectedPlateTemplate": undefined,
                                                  "status": "Active",
                                                  "qcEnabled": undefined,
                                                }
                                              }
                                              onChange={[Function]}
                                            >
                                              <Component
                                                appPropertiesOnly={false}
                                                colSize={9}
                                                helpTipBody={
                                                  <p>
                                                    A short description for this assay design.
                                                  </p>
                                                }
                                                label="Description"
                                              >
                                                <Row
                                                  bsClass="row"
                                                  className="margin-top"
                                                  componentClass="div"
                                                >
                                                  <div
                                                    className="margin-top row"
                                                  >
                                                    <Col
                                                      bsClass="col"
                                                      componentClass="div"
                                                      lg={4}
                                                      xs={3}
                                                    >
                                                      <div
                                                        className="col-lg-4 col-xs-3"
                                                      >
                                                        <DomainFieldLabel
                                                          helpTipBody={
                                                            <p>
                                                              A short description for this assay design.
                                                            </p>
                                                          }
                                                          label="Description"
                                                        >
                                                          <span
                                                            className="domain-no-wrap"
                                                          >
                                                            Description
                                                            <Component
                                                              id="tooltip"
                                                              title="Description"
                                                            >
                                                              <span
                                                                className="label-help-target"
                                                                onMouseOut={[Function]}
                                                                onMouseOver={[Function]}
                                                              >
                                                                <span
                                                                  className="label-help-icon fa fa-question-circle"
                                                                />
                                                                <Overlay
                                                                  animation={[Function]}
                                                                  placement="right"
                                                                  rootClose={false}
                                                                  show={false}
                                                                >
                                                                  <Overlay
                                                                    placement="right"
                                                                    rootClose={false}
                                                                    show={false}
                                                                    transition={[Function]}
                                                                  />
                                                                </Overlay>
                                                              </span>
                                                            </Component>
                                                          </span>
                                                        </DomainFieldLabel>
                                                      </div>
                                                    </Col>
                                                    <Col
                                                      bsClass="col"
                                                      componentClass="div"
                                                      lg={8}
                                                      xs={9}
                                                    >
                                                      <div
                                                        className="col-lg-8 col-xs-9"
                                                      >
                                                        <textarea
                                                          className="form-control textarea-noresize"
                                                          id="assay-design-description"
                                                          onChange={[Function]}
                                                          value=""
                                                        />
                                                      </div>
                                                    </Col>
                                                  </div>
                                                </Row>
                                              </Component>
                                            </DescriptionInput>
                                          </div>
                                          <div
                                            className="domain-field-padding-bottom"
                                          >
                                            <SectionHeading
                                              title="Editing Settings"
                                            >
                                              <div
                                                className="domain-field-section-heading"
                                              >
                                                Editing Settings
                                              </div>
                                            </SectionHeading>
                                            <EditableRunsInput
                                              appPropertiesOnly={false}
                                              model={
                                                Immutable.Record {
                                                  "allowBackgroundUpload": false,
                                                  "allowEditableResults": false,
                                                  "allowQCStates": false,
                                                  "allowTransformationScript": false,
                                                  "allowPlateMetadata": false,
                                                  "autoCopyTargetContainer": undefined,
                                                  "autoCopyTargetContainerId": undefined,
                                                  "autoLinkCategory": undefined,
                                                  "availableDetectionMethods": undefined,
                                                  "availableMetadataInputFormats": undefined,
                                                  "availablePlateTemplates": undefined,
                                                  "backgroundUpload": false,
                                                  "description": undefined,
                                                  "domains": Immutable.List [
                                                    Immutable.Record {
                                                      "name": "Batch Fields",
                                                      "container": undefined,
                                                      "description": undefined,
                                                      "domainURI": undefined,
                                                      "domainId": null,
                                                      "allowFileLinkProperties": false,
                                                      "allowAttachmentProperties": false,
                                                      "allowFlagProperties": true,
                                                      "allowSampleSubjectProperties": true,
                                                      "allowTextChoiceProperties": true,
                                                      "allowTimepointProperties": false,
                                                      "showDefaultValueSettings": false,
                                                      "defaultDefaultValueType": undefined,
                                                      "defaultValueOptions": Immutable.List [],
                                                      "fields": Immutable.List [],
                                                      "indices": Immutable.List [],
                                                      "domainException": undefined,
                                                      "mandatoryFieldNames": Immutable.List [],
                                                      "reservedFieldNames": Immutable.List [],
                                                      "newDesignFields": undefined,
                                                      "instructions": undefined,
                                                      "domainKindName": undefined,
                                                      "schemaName": undefined,
                                                      "queryName": undefined,
                                                    },
                                                    Immutable.Record {
                                                      "name": "Run Fields",
                                                      "container": undefined,
                                                      "description": undefined,
                                                      "domainURI": undefined,
                                                      "domainId": null,
                                                      "allowFileLinkProperties": false,
                                                      "allowAttachmentProperties": false,
                                                      "allowFlagProperties": true,
                                                      "allowSampleSubjectProperties": true,
                                                      "allowTextChoiceProperties": true,
                                                      "allowTimepointProperties": false,
                                                      "showDefaultValueSettings": false,
                                                      "defaultDefaultValueType": undefined,
                                                      "defaultValueOptions": Immutable.List [],
                                                      "fields": Immutable.List [],
                                                      "indices": Immutable.List [],
                                                      "domainException": undefined,
                                                      "mandatoryFieldNames": Immutable.List [],
                                                      "reservedFieldNames": Immutable.List [],
                                                      "newDesignFields": undefined,
                                                      "instructions": undefined,
                                                      "domainKindName": undefined,
                                                      "schemaName": undefined,
                                                      "queryName": undefined,
                                                    },
                                                    Immutable.Record {
                                                      "name": "Data Fields",
                                                      "container": undefined,
                                                      "description": undefined,
                                                      "domainURI": undefined,
                                                      "domainId": null,
                                                      "allowFileLinkProperties": false,
                                                      "allowAttachmentProperties": false,
                                                      "allowFlagProperties": true,
                                                      "allowSampleSubjectProperties": true,
                                                      "allowTextChoiceProperties": true,
                                                      "allowTimepointProperties": false,
                                                      "showDefaultValueSettings": false,
                                                      "defaultDefaultValueType": undefined,
                                                      "defaultValueOptions": Immutable.List [],
                                                      "fields": Immutable.List [],
                                                      "indices": Immutable.List [],
                                                      "domainException": undefined,
                                                      "mandatoryFieldNames": Immutable.List [],
                                                      "reservedFieldNames": Immutable.List [],
                                                      "newDesignFields": undefined,
                                                      "instructions": undefined,
                                                      "domainKindName": undefined,
                                                      "schemaName": undefined,
                                                      "queryName": undefined,
                                                    },
                                                  ],
                                                  "editableResults": false,
                                                  "editableRuns": false,
                                                  "exception": undefined,
                                                  "metadataInputFormatHelp": undefined,
                                                  "moduleTransformScripts": undefined,
                                                  "name": undefined,
                                                  "plateMetadata": undefined,
                                                  "protocolId": undefined,
                                                  "protocolParameters": undefined,
                                                  "protocolTransformScripts": undefined,
                                                  "providerName": "General",
                                                  "saveScriptFiles": false,
                                                  "selectedDetectionMethod": undefined,
                                                  "selectedMetadataInputFormat": undefined,
                                                  "selectedPlateTemplate": undefined,
                                                  "status": "Active",
                                                  "qcEnabled": undefined,
                                                }
                                              }
                                              onChange={[Function]}
                                            >
                                              <Component
                                                appPropertiesOnly={false}
                                                colSize={9}
                                                helpTipBody={
                                                  <p>
                                                    If enabled, users with sufficient permissions can edit values at the run level after the initial import is complete. These changes will be audited.
                                                  </p>
                                                }
                                                label="Editable Runs"
                                              >
                                                <Row
                                                  bsClass="row"
                                                  className="margin-top"
                                                  componentClass="div"
                                                >
                                                  <div
                                                    className="margin-top row"
                                                  >
                                                    <Col
                                                      bsClass="col"
                                                      componentClass="div"
                                                      lg={4}
                                                      xs={3}
                                                    >
                                                      <div
                                                        className="col-lg-4 col-xs-3"
                                                      >
                                                        <DomainFieldLabel
                                                          helpTipBody={
                                                            <p>
                                                              If enabled, users with sufficient permissions can edit values at the run level after the initial import is complete. These changes will be audited.
                                                            </p>
                                                          }
                                                          label="Editable Runs"
                                                        >
                                                          Editable 
                                                          <span
                                                            className="domain-no-wrap"
                                                          >
                                                            Runs
                                                            <Component
                                                              id="tooltip"
                                                              title="Editable Runs"
                                                            >
                                                              <span
                                                                className="label-help-target"
                                                                onMouseOut={[Function]}
                                                                onMouseOver={[Function]}
                                                              >
                                                                <span
                                                                  className="label-help-icon fa fa-question-circle"
                                                                />
                                                                <Overlay
                                                                  animation={[Function]}
                                                                  placement="right"
                                                                  rootClose={false}
                                                                  show={false}
                                                                >
                                                                  <Overlay
                                                                    placement="right"
                                                                    rootClose={false}
                                                                    show={false}
                                                                    transition={[Function]}
                                                                  />
                                                                </Overlay>
                                                              </span>
                                                            </Component>
                                                          </span>
                                                        </DomainFieldLabel>
                                                      </div>
                                                    </Col>
                                                    <Col
                                                      bsClass="col"
                                                      componentClass="div"
                                                      lg={8}
                                                      xs={9}
                                                    >
                                                      <div
                                                        className="col-lg-8 col-xs-9"
                                                      >
                                                        <input
                                                          checked={false}
                                                          id="assay-design-editableRuns"
                                                          onChange={[Function]}
                                                          type="checkbox"
                                                        />
                                                      </div>
                                                    </Col>
                                                  </div>
                                                </Row>
                                              </Component>
                                            </EditableRunsInput>
                                          </div>
                                        </div>
                                      </Col>
                                      <Col
                                        bsClass="col"
                                        componentClass="div"
                                        lg={6}
                                        xs={12}
                                      >
                                        <div
                                          className="col-lg-6 col-xs-12"
                                        >
                                          <div
                                            className="domain-field-padding-bottom"
                                          >
                                            <SectionHeading
                                              title="Import Settings"
                                            >
                                              <div
                                                className="domain-field-section-heading"
                                              >
                                                Import Settings
                                              </div>
                                            </SectionHeading>
                                          </div>
                                        </div>
                                      </Col>
                                    </form>
                                  </Form>
                                </AssayPropertiesForm>
                              </div>
                            </div>
                          </Transition>
                        </Collapse>
                      </PanelCollapse>
                    </PanelBody>
                  </div>
                </Panel>
              </Uncontrolled(Panel)>
            </ForwardRef>
          </BasePropertiesPanel>
        </Component>
      </ComponentWithDomainPropertiesPanelCollapse>
      <DomainForm
        controlledCollapse={true}
        domain={
          Immutable.Record {
            "name": "Run Fields",
            "container": undefined,
            "description": undefined,
            "domainURI": undefined,
            "domainId": null,
            "allowFileLinkProperties": false,
            "allowAttachmentProperties": false,
            "allowFlagProperties": true,
            "allowSampleSubjectProperties": true,
            "allowTextChoiceProperties": true,
            "allowTimepointProperties": false,
            "showDefaultValueSettings": false,
            "defaultDefaultValueType": undefined,
            "defaultValueOptions": Immutable.List [],
            "fields": Immutable.List [],
            "indices": Immutable.List [],
            "domainException": undefined,
            "mandatoryFieldNames": Immutable.List [],
            "reservedFieldNames": Immutable.List [],
            "newDesignFields": undefined,
            "instructions": undefined,
            "domainKindName": undefined,
            "schemaName": undefined,
            "queryName": undefined,
          }
        }
        domainFormDisplayOptions={
          {
            "domainKindDisplayName": "assay design",
            "hideFilePropertyType": undefined,
            "hideInferFromFile": true,
            "hideStudyPropertyTypes": true,
            "textChoiceLockedForDomain": true,
          }
        }
        domainIndex={1}
        helpTopic={null}
        index={1}
        initCollapsed={true}
        key="1"
        modelDomains={
          Immutable.List [
            Immutable.Record {
              "name": "Batch Fields",
              "container": undefined,
              "description": undefined,
              "domainURI": undefined,
              "domainId": null,
              "allowFileLinkProperties": false,
              "allowAttachmentProperties": false,
              "allowFlagProperties": true,
              "allowSampleSubjectProperties": true,
              "allowTextChoiceProperties": true,
              "allowTimepointProperties": false,
              "showDefaultValueSettings": false,
              "defaultDefaultValueType": undefined,
              "defaultValueOptions": Immutable.List [],
              "fields": Immutable.List [],
              "indices": Immutable.List [],
              "domainException": undefined,
              "mandatoryFieldNames": Immutable.List [],
              "reservedFieldNames": Immutable.List [],
              "newDesignFields": undefined,
              "instructions": undefined,
              "domainKindName": undefined,
              "schemaName": undefined,
              "queryName": undefined,
            },
            Immutable.Record {
              "name": "Run Fields",
              "container": undefined,
              "description": undefined,
              "domainURI": undefined,
              "domainId": null,
              "allowFileLinkProperties": false,
              "allowAttachmentProperties": false,
              "allowFlagProperties": true,
              "allowSampleSubjectProperties": true,
              "allowTextChoiceProperties": true,
              "allowTimepointProperties": false,
              "showDefaultValueSettings": false,
              "defaultDefaultValueType": undefined,
              "defaultValueOptions": Immutable.List [],
              "fields": Immutable.List [],
              "indices": Immutable.List [],
              "domainException": undefined,
              "mandatoryFieldNames": Immutable.List [],
              "reservedFieldNames": Immutable.List [],
              "newDesignFields": undefined,
              "instructions": undefined,
              "domainKindName": undefined,
              "schemaName": undefined,
              "queryName": undefined,
            },
            Immutable.Record {
              "name": "Data Fields",
              "container": undefined,
              "description": undefined,
              "domainURI": undefined,
              "domainId": null,
              "allowFileLinkProperties": false,
              "allowAttachmentProperties": false,
              "allowFlagProperties": true,
              "allowSampleSubjectProperties": true,
              "allowTextChoiceProperties": true,
              "allowTimepointProperties": false,
              "showDefaultValueSettings": false,
              "defaultDefaultValueType": undefined,
              "defaultValueOptions": Immutable.List [],
              "fields": Immutable.List [],
              "indices": Immutable.List [],
              "domainException": undefined,
              "mandatoryFieldNames": Immutable.List [],
              "reservedFieldNames": Immutable.List [],
              "newDesignFields": undefined,
              "instructions": undefined,
              "domainKindName": undefined,
              "schemaName": undefined,
              "queryName": undefined,
            },
          ]
        }
        onChange={[Function]}
        onToggle={[Function]}
        panelStatus="TODO"
        testMode={true}
        validate={false}
      >
        <LookupProvider>
          <DomainFormImpl
            appPropertiesOnly={false}
            controlledCollapse={true}
            domain={
              Immutable.Record {
                "name": "Run Fields",
                "container": undefined,
                "description": undefined,
                "domainURI": undefined,
                "domainId": null,
                "allowFileLinkProperties": false,
                "allowAttachmentProperties": false,
                "allowFlagProperties": true,
                "allowSampleSubjectProperties": true,
                "allowTextChoiceProperties": true,
                "allowTimepointProperties": false,
                "showDefaultValueSettings": false,
                "defaultDefaultValueType": undefined,
                "defaultValueOptions": Immutable.List [],
                "fields": Immutable.List [],
                "indices": Immutable.List [],
                "domainException": undefined,
                "mandatoryFieldNames": Immutable.List [],
                "reservedFieldNames": Immutable.List [],
                "newDesignFields": undefined,
                "instructions": undefined,
                "domainKindName": undefined,
                "schemaName": undefined,
                "queryName": undefined,
              }
            }
            domainFormDisplayOptions={
              {
                "domainKindDisplayName": "assay design",
                "hideFilePropertyType": undefined,
                "hideInferFromFile": true,
                "hideStudyPropertyTypes": true,
                "textChoiceLockedForDomain": true,
              }
            }
            domainIndex={1}
            helpNoun="field designer"
            helpTopic={null}
            index={1}
            initCollapsed={true}
            isNew={false}
            modelDomains={
              Immutable.List [
                Immutable.Record {
                  "name": "Batch Fields",
                  "container": undefined,
                  "description": undefined,
                  "domainURI": undefined,
                  "domainId": null,
                  "allowFileLinkProperties": false,
                  "allowAttachmentProperties": false,
                  "allowFlagProperties": true,
                  "allowSampleSubjectProperties": true,
                  "allowTextChoiceProperties": true,
                  "allowTimepointProperties": false,
                  "showDefaultValueSettings": false,
                  "defaultDefaultValueType": undefined,
                  "defaultValueOptions": Immutable.List [],
                  "fields": Immutable.List [],
                  "indices": Immutable.List [],
                  "domainException": undefined,
                  "mandatoryFieldNames": Immutable.List [],
                  "reservedFieldNames": Immutable.List [],
                  "newDesignFields": undefined,
                  "instructions": undefined,
                  "domainKindName": undefined,
                  "schemaName": undefined,
                  "queryName": undefined,
                },
                Immutable.Record {
                  "name": "Run Fields",
                  "container": undefined,
                  "description": undefined,
                  "domainURI": undefined,
                  "domainId": null,
                  "allowFileLinkProperties": false,
                  "allowAttachmentProperties": false,
                  "allowFlagProperties": true,
                  "allowSampleSubjectProperties": true,
                  "allowTextChoiceProperties": true,
                  "allowTimepointProperties": false,
                  "showDefaultValueSettings": false,
                  "defaultDefaultValueType": undefined,
                  "defaultValueOptions": Immutable.List [],
                  "fields": Immutable.List [],
                  "indices": Immutable.List [],
                  "domainException": undefined,
                  "mandatoryFieldNames": Immutable.List [],
                  "reservedFieldNames": Immutable.List [],
                  "newDesignFields": undefined,
                  "instructions": undefined,
                  "domainKindName": undefined,
                  "schemaName": undefined,
                  "queryName": undefined,
                },
                Immutable.Record {
                  "name": "Data Fields",
                  "container": undefined,
                  "description": undefined,
                  "domainURI": undefined,
                  "domainId": null,
                  "allowFileLinkProperties": false,
                  "allowAttachmentProperties": false,
                  "allowFlagProperties": true,
                  "allowSampleSubjectProperties": true,
                  "allowTextChoiceProperties": true,
                  "allowTimepointProperties": false,
                  "showDefaultValueSettings": false,
                  "defaultDefaultValueType": undefined,
                  "defaultValueOptions": Immutable.List [],
                  "fields": Immutable.List [],
                  "indices": Immutable.List [],
                  "domainException": undefined,
                  "mandatoryFieldNames": Immutable.List [],
                  "reservedFieldNames": Immutable.List [],
                  "newDesignFields": undefined,
                  "instructions": undefined,
                  "domainKindName": undefined,
                  "schemaName": undefined,
                  "queryName": undefined,
                },
              ]
            }
            onChange={[Function]}
            onToggle={[Function]}
            panelStatus="TODO"
            showHeader={true}
            successBsStyle="success"
            testMode={true}
            validate={false}
          >
            <ForwardRef
              className="domain-form-panel"
              expanded={false}
              onToggle={[Function]}
            >
              <Uncontrolled(Panel)
                className="domain-form-panel"
                expanded={false}
                innerRef={null}
                onToggle={[Function]}
              >
                <Panel
                  bsClass="panel"
                  bsStyle="default"
                  className="domain-form-panel"
                  expanded={false}
                  onToggle={[Function]}
                >
                  <div
                    className="domain-form-panel panel panel-default"
                  >
                    <CollapsiblePanelHeader
                      collapsed={true}
                      controlledCollapse={true}
                      id="domainpropertiesrow-Run-Fields-hdr"
                      isValid={true}
                      panelStatus="TODO"
                      title="Run Fields"
                      togglePanel={[Function]}
                    >
                      <PanelHeading
                        bsClass="panel"
                        className="domain-panel-header domain-heading-collapsible domain-panel-header-collapsed"
                        componentClass="div"
                        id="domainpropertiesrow-Run-Fields-hdr"
                        onClick={[Function]}
                      >
                        <div
                          className="domain-panel-header domain-heading-collapsible domain-panel-header-collapsed panel-heading"
                          id="domainpropertiesrow-Run-Fields-hdr"
                          onClick={[Function]}
                        >
                          <Component
                            iconComponent={
                              <span
                                className="domain-panel-status-icon domain-panel-status-icon-blue"
                              >
                                <span
                                  className="fa fa-exclamation-circle"
                                />
                              </span>
                            }
                            id="tooltip"
                            placement="top"
                            title="Run Fields"
                          >
                            <span
                              className="label-help-target"
                              onMouseOut={[Function]}
                              onMouseOver={[Function]}
                            >
                              <span
                                className="domain-panel-status-icon domain-panel-status-icon-blue"
                              >
                                <span
                                  className="fa fa-exclamation-circle"
                                />
                              </span>
                              <Overlay
                                animation={[Function]}
                                placement="top"
                                rootClose={false}
                                show={false}
                              >
                                <Overlay
                                  placement="top"
                                  rootClose={false}
                                  show={false}
                                  transition={[Function]}
                                />
                              </Overlay>
                            </span>
                          </Component>
                          <span
                            className="domain-panel-title"
                          >
                            Run Fields
                          </span>
                          <span
                            className="pull-right"
                          >
                            <span
                              className="fa fa-lg fa-plus-square domain-form-expand-btn"
                            />
                          </span>
                          <Component
                            id="tooltip"
                            placement="top"
                            title="Run Fields"
                          >
                            <span
                              className="label-help-target"
                              onMouseOut={[Function]}
                              onMouseOver={[Function]}
                            >
                              <span
                                className="label-help-icon fa fa-question-circle"
                              />
                              <Overlay
                                animation={[Function]}
                                placement="top"
                                rootClose={false}
                                show={false}
                              >
                                <Overlay
                                  placement="top"
                                  rootClose={false}
                                  show={false}
                                  transition={[Function]}
                                />
                              </Overlay>
                            </span>
                          </Component>
                        </div>
                      </PanelHeading>
                    </CollapsiblePanelHeader>
                    <PanelBody
                      bsClass="panel"
                      className=""
                      collapsible={true}
                    >
                      <PanelCollapse
                        bsClass="panel"
                      >
                        <Collapse
                          appear={false}
                          dimension="height"
                          getDimensionValue={[Function]}
                          in={false}
                          mountOnEnter={false}
                          timeout={300}
                          unmountOnExit={false}
                        >
                          <Transition
                            appear={false}
                            aria-expanded={null}
                            enter={true}
                            exit={true}
                            in={false}
                            mountOnEnter={false}
                            onEnter={[Function]}
                            onEntered={[Function]}
                            onEntering={[Function]}
                            onExit={[Function]}
                            onExited={[Function]}
                            onExiting={[Function]}
                            timeout={300}
                            unmountOnExit={false}
                          >
                            <div
                              aria-expanded={null}
                              className="panel-collapse collapse"
                            >
                              <div
                                className="panel-body"
                              >
                                <Row
                                  bsClass="row"
                                  className=""
                                  componentClass="div"
                                >
                                  <div
                                    className="row"
                                  >
                                    <Col
                                      bsClass="col"
                                      componentClass="div"
                                      xs={12}
                                    >
                                      <div
                                        className="col-xs-12"
                                      />
                                    </Col>
                                  </div>
                                </Row>
                                <FileAttachmentForm
                                  acceptedFormats=".json"
                                  allowDirectories={false}
                                  allowMultiple={false}
                                  cancelText="Cancel"
                                  compact={false}
                                  fileSpecificCallback={
                                    Immutable.Map {
                                      ".json": [Function],
                                    }
                                  }
                                  index={1}
                                  label="Import fields from file"
                                  labelLong="Select file or drag and drop here."
                                  onFileRemoval={[Function]}
                                  previewGridProps={false}
                                  showAcceptedFormats={true}
                                  showButtons={false}
                                  showLabel={true}
                                  showProgressBar={false}
                                  submitText="Upload"
                                >
                                  <span
                                    className="translator--toggle__wizard"
                                  >
                                    <FormSection
                                      iconSpacer={false}
                                      label="Import fields from file"
                                      showLabel={true}
                                    >
                                      <div
                                        className="row"
                                      >
                                        <div
                                          className="col-sm-12"
                                        >
                                          <label
                                            className="control-label text-left"
                                          >
                                            <strong>
                                              Import fields from file
                                            </strong>
                                          </label>
                                        </div>
                                      </div>
                                      <div
                                        className="row"
                                      >
                                        <div
                                          className="col-sm-12"
                                        >
                                          <div
                                            className="wizard-row--container"
                                          >
                                            <div
                                              className=""
                                            >
                                              <FileAttachmentContainer
                                                acceptedFormats=".json"
                                                allowDirectories={false}
                                                allowMultiple={false}
                                                compact={false}
                                                handleChange={[Function]}
                                                handleRemoval={[Function]}
                                                index={1}
                                                labelLong="Select file or drag and drop here."
                                              >
                                                <div
                                                  className="file-upload--container block"
                                                >
                                                  <label
                                                    className="file-upload--label"
                                                    htmlFor="fileUpload1"
                                                    onDragEnter={[Function]}
                                                    onDragLeave={[Function]}
                                                    onDragOver={[Function]}
                                                    onDrop={[Function]}
                                                  >
                                                    <i
                                                      aria-hidden="true"
                                                      className="fa fa-cloud-upload fa-2x cloud-logo"
                                                    />
                                                    Select file or drag and drop here.
                                                  </label>
                                                  <input
                                                    accept=".json"
                                                    className="file-upload--input"
                                                    id="fileUpload1"
                                                    multiple={false}
                                                    name="fileUpload1"
                                                    onChange={[Function]}
                                                    type="file"
                                                  />
                                                </div>
                                              </FileAttachmentContainer>
                                            </div>
                                          </div>
                                        </div>
                                      </div>
                                    </FormSection>
                                  </span>
                                  <div
                                    className="row"
                                  >
                                    <div
                                      className="col-md-9"
                                    >
                                      <div
                                        className="file-form-formats"
                                      >
                                        <strong>
                                          Supported formats include: 
                                        </strong>
                                        .json
                                      </div>
                                    </div>
                                    <div
                                      className="col-md-3"
                                    >
                                      <div
                                        className="pull-right"
                                      />
                                    </div>
                                  </div>
                                </FileAttachmentForm>
                                <div
                                  className="margin-top domain-form-manual-section"
                                >
                                  <p>
                                    Or
                                  </p>
                                  <ActionButton
                                    buttonClass="domain-form-manual-btn"
                                    containerClass="form-group"
                                    helperTitle="More Info"
                                    onClick={[Function]}
                                  >
                                    <div
                                      className="form-group"
                                    >
                                      <div
                                        className="domain-form-manual-btn"
                                      >
                                        <span
                                          className="container--action-button btn btn-default"
                                          onClick={[Function]}
                                        >
                                          Manually Define Fields
                                        </span>
                                      </div>
                                    </div>
                                  </ActionButton>
                                </div>
                              </div>
                            </div>
                          </Transition>
                        </Collapse>
                      </PanelCollapse>
                    </PanelBody>
                  </div>
                </Panel>
              </Uncontrolled(Panel)>
            </ForwardRef>
          </DomainFormImpl>
        </LookupProvider>
      </DomainForm>
      <DomainForm
        controlledCollapse={true}
        domain={
          Immutable.Record {
            "name": "Data Fields",
            "container": undefined,
            "description": undefined,
            "domainURI": undefined,
            "domainId": null,
            "allowFileLinkProperties": false,
            "allowAttachmentProperties": false,
            "allowFlagProperties": true,
            "allowSampleSubjectProperties": true,
            "allowTextChoiceProperties": true,
            "allowTimepointProperties": false,
            "showDefaultValueSettings": false,
            "defaultDefaultValueType": undefined,
            "defaultValueOptions": Immutable.List [],
            "fields": Immutable.List [],
            "indices": Immutable.List [],
            "domainException": undefined,
            "mandatoryFieldNames": Immutable.List [],
            "reservedFieldNames": Immutable.List [],
            "newDesignFields": undefined,
            "instructions": undefined,
            "domainKindName": undefined,
            "schemaName": undefined,
            "queryName": undefined,
          }
        }
        domainFormDisplayOptions={
          {
            "domainKindDisplayName": "assay design",
            "hideFilePropertyType": undefined,
            "hideInferFromFile": false,
            "hideStudyPropertyTypes": true,
            "textChoiceLockedForDomain": true,
          }
        }
        domainIndex={2}
        helpTopic={null}
        index={2}
        initCollapsed={true}
        key="2"
        modelDomains={
          Immutable.List [
            Immutable.Record {
              "name": "Batch Fields",
              "container": undefined,
              "description": undefined,
              "domainURI": undefined,
              "domainId": null,
              "allowFileLinkProperties": false,
              "allowAttachmentProperties": false,
              "allowFlagProperties": true,
              "allowSampleSubjectProperties": true,
              "allowTextChoiceProperties": true,
              "allowTimepointProperties": false,
              "showDefaultValueSettings": false,
              "defaultDefaultValueType": undefined,
              "defaultValueOptions": Immutable.List [],
              "fields": Immutable.List [],
              "indices": Immutable.List [],
              "domainException": undefined,
              "mandatoryFieldNames": Immutable.List [],
              "reservedFieldNames": Immutable.List [],
              "newDesignFields": undefined,
              "instructions": undefined,
              "domainKindName": undefined,
              "schemaName": undefined,
              "queryName": undefined,
            },
            Immutable.Record {
              "name": "Run Fields",
              "container": undefined,
              "description": undefined,
              "domainURI": undefined,
              "domainId": null,
              "allowFileLinkProperties": false,
              "allowAttachmentProperties": false,
              "allowFlagProperties": true,
              "allowSampleSubjectProperties": true,
              "allowTextChoiceProperties": true,
              "allowTimepointProperties": false,
              "showDefaultValueSettings": false,
              "defaultDefaultValueType": undefined,
              "defaultValueOptions": Immutable.List [],
              "fields": Immutable.List [],
              "indices": Immutable.List [],
              "domainException": undefined,
              "mandatoryFieldNames": Immutable.List [],
              "reservedFieldNames": Immutable.List [],
              "newDesignFields": undefined,
              "instructions": undefined,
              "domainKindName": undefined,
              "schemaName": undefined,
              "queryName": undefined,
            },
            Immutable.Record {
              "name": "Data Fields",
              "container": undefined,
              "description": undefined,
              "domainURI": undefined,
              "domainId": null,
              "allowFileLinkProperties": false,
              "allowAttachmentProperties": false,
              "allowFlagProperties": true,
              "allowSampleSubjectProperties": true,
              "allowTextChoiceProperties": true,
              "allowTimepointProperties": false,
              "showDefaultValueSettings": false,
              "defaultDefaultValueType": undefined,
              "defaultValueOptions": Immutable.List [],
              "fields": Immutable.List [],
              "indices": Immutable.List [],
              "domainException": undefined,
              "mandatoryFieldNames": Immutable.List [],
              "reservedFieldNames": Immutable.List [],
              "newDesignFields": undefined,
              "instructions": undefined,
              "domainKindName": undefined,
              "schemaName": undefined,
              "queryName": undefined,
            },
          ]
        }
        onChange={[Function]}
        onToggle={[Function]}
        panelStatus="TODO"
        testMode={true}
        validate={false}
      >
        <LookupProvider>
          <DomainFormImpl
            appPropertiesOnly={false}
            controlledCollapse={true}
            domain={
              Immutable.Record {
                "name": "Data Fields",
                "container": undefined,
                "description": undefined,
                "domainURI": undefined,
                "domainId": null,
                "allowFileLinkProperties": false,
                "allowAttachmentProperties": false,
                "allowFlagProperties": true,
                "allowSampleSubjectProperties": true,
                "allowTextChoiceProperties": true,
                "allowTimepointProperties": false,
                "showDefaultValueSettings": false,
                "defaultDefaultValueType": undefined,
                "defaultValueOptions": Immutable.List [],
                "fields": Immutable.List [],
                "indices": Immutable.List [],
                "domainException": undefined,
                "mandatoryFieldNames": Immutable.List [],
                "reservedFieldNames": Immutable.List [],
                "newDesignFields": undefined,
                "instructions": undefined,
                "domainKindName": undefined,
                "schemaName": undefined,
                "queryName": undefined,
              }
            }
            domainFormDisplayOptions={
              {
                "domainKindDisplayName": "assay design",
                "hideFilePropertyType": undefined,
                "hideInferFromFile": false,
                "hideStudyPropertyTypes": true,
                "textChoiceLockedForDomain": true,
              }
            }
            domainIndex={2}
            helpNoun="field designer"
            helpTopic={null}
            index={2}
            initCollapsed={true}
            isNew={false}
            modelDomains={
              Immutable.List [
                Immutable.Record {
                  "name": "Batch Fields",
                  "container": undefined,
                  "description": undefined,
                  "domainURI": undefined,
                  "domainId": null,
                  "allowFileLinkProperties": false,
                  "allowAttachmentProperties": false,
                  "allowFlagProperties": true,
                  "allowSampleSubjectProperties": true,
                  "allowTextChoiceProperties": true,
                  "allowTimepointProperties": false,
                  "showDefaultValueSettings": false,
                  "defaultDefaultValueType": undefined,
                  "defaultValueOptions": Immutable.List [],
                  "fields": Immutable.List [],
                  "indices": Immutable.List [],
                  "domainException": undefined,
                  "mandatoryFieldNames": Immutable.List [],
                  "reservedFieldNames": Immutable.List [],
                  "newDesignFields": undefined,
                  "instructions": undefined,
                  "domainKindName": undefined,
                  "schemaName": undefined,
                  "queryName": undefined,
                },
                Immutable.Record {
                  "name": "Run Fields",
                  "container": undefined,
                  "description": undefined,
                  "domainURI": undefined,
                  "domainId": null,
                  "allowFileLinkProperties": false,
                  "allowAttachmentProperties": false,
                  "allowFlagProperties": true,
                  "allowSampleSubjectProperties": true,
                  "allowTextChoiceProperties": true,
                  "allowTimepointProperties": false,
                  "showDefaultValueSettings": false,
                  "defaultDefaultValueType": undefined,
                  "defaultValueOptions": Immutable.List [],
                  "fields": Immutable.List [],
                  "indices": Immutable.List [],
                  "domainException": undefined,
                  "mandatoryFieldNames": Immutable.List [],
                  "reservedFieldNames": Immutable.List [],
                  "newDesignFields": undefined,
                  "instructions": undefined,
                  "domainKindName": undefined,
                  "schemaName": undefined,
                  "queryName": undefined,
                },
                Immutable.Record {
                  "name": "Data Fields",
                  "container": undefined,
                  "description": undefined,
                  "domainURI": undefined,
                  "domainId": null,
                  "allowFileLinkProperties": false,
                  "allowAttachmentProperties": false,
                  "allowFlagProperties": true,
                  "allowSampleSubjectProperties": true,
                  "allowTextChoiceProperties": true,
                  "allowTimepointProperties": false,
                  "showDefaultValueSettings": false,
                  "defaultDefaultValueType": undefined,
                  "defaultValueOptions": Immutable.List [],
                  "fields": Immutable.List [],
                  "indices": Immutable.List [],
                  "domainException": undefined,
                  "mandatoryFieldNames": Immutable.List [],
                  "reservedFieldNames": Immutable.List [],
                  "newDesignFields": undefined,
                  "instructions": undefined,
                  "domainKindName": undefined,
                  "schemaName": undefined,
                  "queryName": undefined,
                },
              ]
            }
            onChange={[Function]}
            onToggle={[Function]}
            panelStatus="TODO"
            showHeader={true}
            successBsStyle="success"
            testMode={true}
            validate={false}
          >
            <ForwardRef
              className="domain-form-panel"
              expanded={false}
              onToggle={[Function]}
            >
              <Uncontrolled(Panel)
                className="domain-form-panel"
                expanded={false}
                innerRef={null}
                onToggle={[Function]}
              >
                <Panel
                  bsClass="panel"
                  bsStyle="default"
                  className="domain-form-panel"
                  expanded={false}
                  onToggle={[Function]}
                >
                  <div
                    className="domain-form-panel panel panel-default"
                  >
                    <CollapsiblePanelHeader
                      collapsed={true}
                      controlledCollapse={true}
                      id="domainpropertiesrow-Data-Fields-hdr"
                      isValid={true}
                      panelStatus="TODO"
                      title="Results Fields"
                      togglePanel={[Function]}
                    >
                      <PanelHeading
                        bsClass="panel"
                        className="domain-panel-header domain-heading-collapsible domain-panel-header-collapsed"
                        componentClass="div"
                        id="domainpropertiesrow-Data-Fields-hdr"
                        onClick={[Function]}
                      >
                        <div
                          className="domain-panel-header domain-heading-collapsible domain-panel-header-collapsed panel-heading"
                          id="domainpropertiesrow-Data-Fields-hdr"
                          onClick={[Function]}
                        >
                          <Component
                            iconComponent={
                              <span
                                className="domain-panel-status-icon domain-panel-status-icon-blue"
                              >
                                <span
                                  className="fa fa-exclamation-circle"
                                />
                              </span>
                            }
                            id="tooltip"
                            placement="top"
                            title="Results Fields"
                          >
                            <span
                              className="label-help-target"
                              onMouseOut={[Function]}
                              onMouseOver={[Function]}
                            >
                              <span
                                className="domain-panel-status-icon domain-panel-status-icon-blue"
                              >
                                <span
                                  className="fa fa-exclamation-circle"
                                />
                              </span>
                              <Overlay
                                animation={[Function]}
                                placement="top"
                                rootClose={false}
                                show={false}
                              >
                                <Overlay
                                  placement="top"
                                  rootClose={false}
                                  show={false}
                                  transition={[Function]}
                                />
                              </Overlay>
                            </span>
                          </Component>
                          <span
                            className="domain-panel-title"
                          >
                            Results Fields
                          </span>
                          <span
                            className="pull-right"
                          >
                            <span
                              className="fa fa-lg fa-plus-square domain-form-expand-btn"
                            />
                          </span>
                          <Component
                            id="tooltip"
                            placement="top"
                            title="Results Fields"
                          >
                            <span
                              className="label-help-target"
                              onMouseOut={[Function]}
                              onMouseOver={[Function]}
                            >
                              <span
                                className="label-help-icon fa fa-question-circle"
                              />
                              <Overlay
                                animation={[Function]}
                                placement="top"
                                rootClose={false}
                                show={false}
                              >
                                <Overlay
                                  placement="top"
                                  rootClose={false}
                                  show={false}
                                  transition={[Function]}
                                />
                              </Overlay>
                            </span>
                          </Component>
                        </div>
                      </PanelHeading>
                    </CollapsiblePanelHeader>
                    <PanelBody
                      bsClass="panel"
                      className=""
                      collapsible={true}
                    >
                      <PanelCollapse
                        bsClass="panel"
                      >
                        <Collapse
                          appear={false}
                          dimension="height"
                          getDimensionValue={[Function]}
                          in={false}
                          mountOnEnter={false}
                          timeout={300}
                          unmountOnExit={false}
                        >
                          <Transition
                            appear={false}
                            aria-expanded={null}
                            enter={true}
                            exit={true}
                            in={false}
                            mountOnEnter={false}
                            onEnter={[Function]}
                            onEntered={[Function]}
                            onEntering={[Function]}
                            onExit={[Function]}
                            onExited={[Function]}
                            onExiting={[Function]}
                            timeout={300}
                            unmountOnExit={false}
                          >
                            <div
                              aria-expanded={null}
                              className="panel-collapse collapse"
                            >
                              <div
                                className="panel-body"
                              >
                                <Row
                                  bsClass="row"
                                  className=""
                                  componentClass="div"
                                >
                                  <div
                                    className="row"
                                  >
                                    <Col
                                      bsClass="col"
                                      componentClass="div"
                                      xs={12}
                                    >
                                      <div
                                        className="col-xs-12"
                                      />
                                    </Col>
                                  </div>
                                </Row>
                                <FileAttachmentForm
                                  acceptedFormats=".csv, .tsv, .txt, .xls, .xlsx, .json"
                                  allowDirectories={false}
                                  allowMultiple={false}
                                  cancelText="Cancel"
                                  compact={false}
                                  fileSpecificCallback={
                                    Immutable.Map {
                                      ".json": [Function],
                                    }
                                  }
                                  index={2}
                                  label="Import or infer fields from file"
                                  labelLong="Select file or drag and drop here."
                                  onFileRemoval={[Function]}
                                  previewGridProps={
                                    {
                                      "domainKindName": undefined,
                                      "onPreviewLoad": [Function],
                                      "previewCount": 3,
                                      "skipPreviewGrid": true,
                                    }
                                  }
                                  showAcceptedFormats={true}
                                  showButtons={false}
                                  showLabel={true}
                                  showProgressBar={false}
                                  submitText="Upload"
                                >
                                  <span
                                    className="translator--toggle__wizard"
                                  >
                                    <FormSection
                                      iconSpacer={false}
                                      label="Import or infer fields from file"
                                      showLabel={true}
                                    >
                                      <div
                                        className="row"
                                      >
                                        <div
                                          className="col-sm-12"
                                        >
                                          <label
                                            className="control-label text-left"
                                          >
                                            <strong>
                                              Import or infer fields from file
                                            </strong>
                                          </label>
                                        </div>
                                      </div>
                                      <div
                                        className="row"
                                      >
                                        <div
                                          className="col-sm-12"
                                        >
                                          <div
                                            className="wizard-row--container"
                                          >
                                            <div
                                              className=""
                                            >
                                              <FileAttachmentContainer
                                                acceptedFormats=".csv, .tsv, .txt, .xls, .xlsx, .json"
                                                allowDirectories={false}
                                                allowMultiple={false}
                                                compact={false}
                                                handleChange={[Function]}
                                                handleRemoval={[Function]}
                                                index={2}
                                                labelLong="Select file or drag and drop here."
                                              >
                                                <div
                                                  className="file-upload--container block"
                                                >
                                                  <label
                                                    className="file-upload--label"
                                                    htmlFor="fileUpload2"
                                                    onDragEnter={[Function]}
                                                    onDragLeave={[Function]}
                                                    onDragOver={[Function]}
                                                    onDrop={[Function]}
                                                  >
                                                    <i
                                                      aria-hidden="true"
                                                      className="fa fa-cloud-upload fa-2x cloud-logo"
                                                    />
                                                    Select file or drag and drop here.
                                                  </label>
                                                  <input
                                                    accept=".csv, .tsv, .txt, .xls, .xlsx, .json"
                                                    className="file-upload--input"
                                                    id="fileUpload2"
                                                    multiple={false}
                                                    name="fileUpload2"
                                                    onChange={[Function]}
                                                    type="file"
                                                  />
                                                </div>
                                              </FileAttachmentContainer>
                                            </div>
                                          </div>
                                        </div>
                                      </div>
                                    </FormSection>
                                  </span>
                                  <div
                                    className="row"
                                  >
                                    <div
                                      className="col-md-9"
                                    >
                                      <div
                                        className="file-form-formats"
                                      >
                                        <strong>
                                          Supported formats include: 
                                        </strong>
                                        .csv, .tsv, .txt, .xls, .xlsx, .json
                                      </div>
                                    </div>
                                    <div
                                      className="col-md-3"
                                    >
                                      <div
                                        className="pull-right"
                                      />
                                    </div>
                                  </div>
                                </FileAttachmentForm>
                                <div
                                  className="margin-top domain-form-manual-section"
                                >
                                  <p>
                                    Or
                                  </p>
                                  <ActionButton
                                    buttonClass="domain-form-manual-btn"
                                    containerClass="form-group"
                                    helperTitle="More Info"
                                    onClick={[Function]}
                                  >
                                    <div
                                      className="form-group"
                                    >
                                      <div
                                        className="domain-form-manual-btn"
                                      >
                                        <span
                                          className="container--action-button btn btn-default"
                                          onClick={[Function]}
                                        >
                                          Manually Define Fields
                                        </span>
                                      </div>
                                    </div>
                                  </ActionButton>
                                </div>
                              </div>
                            </div>
                          </Transition>
                        </Collapse>
                      </PanelCollapse>
                    </PanelBody>
                  </div>
                </Panel>
              </Uncontrolled(Panel)>
            </ForwardRef>
          </DomainFormImpl>
        </LookupProvider>
      </DomainForm>
      <div
        className="domain-form-panel domain-designer-buttons"
      >
        <Button
          active={false}
          block={false}
          bsClass="btn"
          bsStyle="default"
          disabled={false}
          onClick={[MockFunction]}
        >
          <button
            className="btn btn-default"
            disabled={false}
            onClick={[MockFunction]}
            type="button"
          >
            Cancel
          </button>
        </Button>
        <Button
          active={false}
          block={false}
          bsClass="btn"
          bsStyle="success"
          className="pull-right"
          disabled={false}
          onClick={[Function]}
        >
          <button
            className="pull-right btn btn-success"
            disabled={false}
            onClick={[Function]}
            type="button"
          >
            Save
          </button>
        </Button>
      </div>
    </BaseDomainDesigner>
  </AssayDesignerPanelsImpl>
</ComponentWithBaseDomainDesigner>
`;

exports[`AssayDesignerPanels hideEmptyBatchDomain with initModel 1`] = `
<ComponentWithBaseDomainDesigner
  domainFormDisplayOptions={
    {
      "hideStudyPropertyTypes": true,
    }
  }
  hideEmptyBatchDomain={true}
  initModel={
    Immutable.Record {
      "allowBackgroundUpload": true,
      "allowEditableResults": true,
      "allowQCStates": false,
      "allowTransformationScript": false,
      "allowPlateMetadata": false,
      "autoCopyTargetContainer": undefined,
      "autoCopyTargetContainerId": undefined,
      "autoLinkCategory": undefined,
      "availableDetectionMethods": undefined,
      "availableMetadataInputFormats": undefined,
      "availablePlateTemplates": undefined,
      "backgroundUpload": true,
      "description": "My assay protocol for you all to use.",
      "domains": Immutable.List [
        Immutable.Record {
          "name": "Batch Fields",
          "container": undefined,
          "description": undefined,
          "domainURI": undefined,
          "domainId": null,
          "allowFileLinkProperties": false,
          "allowAttachmentProperties": false,
          "allowFlagProperties": true,
          "allowSampleSubjectProperties": true,
          "allowTextChoiceProperties": true,
          "allowTimepointProperties": false,
          "showDefaultValueSettings": false,
          "defaultDefaultValueType": undefined,
          "defaultValueOptions": Immutable.List [],
          "fields": Immutable.List [],
          "indices": Immutable.List [],
          "domainException": undefined,
          "mandatoryFieldNames": Immutable.List [],
          "reservedFieldNames": Immutable.List [],
          "newDesignFields": undefined,
          "instructions": undefined,
          "domainKindName": undefined,
          "schemaName": undefined,
          "queryName": undefined,
        },
        Immutable.Record {
          "name": "Sample Fields",
          "container": undefined,
          "description": undefined,
          "domainURI": undefined,
          "domainId": null,
          "allowFileLinkProperties": false,
          "allowAttachmentProperties": false,
          "allowFlagProperties": true,
          "allowSampleSubjectProperties": true,
          "allowTextChoiceProperties": true,
          "allowTimepointProperties": false,
          "showDefaultValueSettings": false,
          "defaultDefaultValueType": undefined,
          "defaultValueOptions": Immutable.List [],
          "fields": Immutable.List [
            Immutable.Record {
              "conceptURI": undefined,
              "conditionalFormats": Immutable.List [],
              "defaultScale": undefined,
              "defaultValueType": undefined,
              "defaultValue": undefined,
              "defaultDisplayValue": undefined,
              "description": undefined,
              "dimension": undefined,
              "excludeFromShifting": false,
              "format": undefined,
              "hidden": false,
              "importAliases": undefined,
              "label": undefined,
              "lookupContainer": undefined,
              "lookupQuery": undefined,
              "lookupSchema": undefined,
              "lookupValidator": undefined,
              "measure": undefined,
              "mvEnabled": false,
              "name": "field1",
              "PHI": undefined,
              "propertyId": undefined,
              "propertyURI": undefined,
              "propertyValidators": Immutable.List [],
              "rangeValidators": Immutable.List [],
              "rangeURI": "xsd:string",
              "regexValidators": Immutable.List [],
              "textChoiceValidator": undefined,
              "recommendedVariable": false,
              "required": false,
              "scale": 4000,
              "URL": undefined,
              "shownInDetailsView": true,
              "shownInInsertView": true,
              "shownInUpdateView": true,
              "visible": true,
              "dataType": Immutable.Record {
                "conceptURI": undefined,
                "display": "Text",
                "name": "string",
                "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                "alternateRangeURI": "xsd:string",
                "shortDisplay": "String",
                "lookupSchema": undefined,
                "lookupQuery": undefined,
              },
              "lookupQueryValue": undefined,
              "lookupType": Immutable.Record {
                "conceptURI": undefined,
                "display": "Lookup",
                "name": "lookup",
                "rangeURI": "xsd:string",
                "alternateRangeURI": undefined,
                "shortDisplay": undefined,
                "lookupSchema": undefined,
                "lookupQuery": undefined,
              },
              "original": {
                "conceptURI": undefined,
                "dataType": Immutable.Record {
                  "conceptURI": undefined,
                  "display": "Text",
                  "name": "string",
                  "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                  "alternateRangeURI": "xsd:string",
                  "shortDisplay": "String",
                  "lookupSchema": undefined,
                  "lookupQuery": undefined,
                },
                "name": "field1",
                "rangeURI": undefined,
              },
              "updatedField": false,
              "isPrimaryKey": false,
              "lockType": "NotLocked",
              "wrappedColumnName": undefined,
              "disablePhiLevel": false,
              "lockExistingField": false,
              "sourceOntology": undefined,
              "conceptSubtree": undefined,
              "conceptLabelColumn": undefined,
              "conceptImportColumn": undefined,
              "principalConceptCode": undefined,
              "derivationDataScope": undefined,
              "selected": false,
              "scannable": false,
            },
            Immutable.Record {
              "conceptURI": undefined,
              "conditionalFormats": Immutable.List [],
              "defaultScale": undefined,
              "defaultValueType": undefined,
              "defaultValue": undefined,
              "defaultDisplayValue": undefined,
              "description": undefined,
              "dimension": undefined,
              "excludeFromShifting": false,
              "format": undefined,
              "hidden": false,
              "importAliases": undefined,
              "label": undefined,
              "lookupContainer": undefined,
              "lookupQuery": undefined,
              "lookupSchema": undefined,
              "lookupValidator": undefined,
              "measure": undefined,
              "mvEnabled": false,
              "name": "field2",
              "PHI": undefined,
              "propertyId": undefined,
              "propertyURI": undefined,
              "propertyValidators": Immutable.List [],
              "rangeValidators": Immutable.List [],
              "rangeURI": "xsd:int",
              "regexValidators": Immutable.List [],
              "textChoiceValidator": undefined,
              "recommendedVariable": false,
              "required": false,
              "scale": 4000,
              "URL": undefined,
              "shownInDetailsView": true,
              "shownInInsertView": true,
              "shownInUpdateView": true,
              "visible": true,
              "dataType": Immutable.Record {
                "conceptURI": undefined,
                "display": "Integer",
                "name": "int",
                "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                "alternateRangeURI": "xsd:int",
                "shortDisplay": undefined,
                "lookupSchema": undefined,
                "lookupQuery": undefined,
              },
              "lookupQueryValue": undefined,
              "lookupType": Immutable.Record {
                "conceptURI": undefined,
                "display": "Lookup",
                "name": "lookup",
                "rangeURI": "xsd:int",
                "alternateRangeURI": undefined,
                "shortDisplay": undefined,
                "lookupSchema": undefined,
                "lookupQuery": undefined,
              },
              "original": {
                "conceptURI": undefined,
                "dataType": Immutable.Record {
                  "conceptURI": undefined,
                  "display": "Integer",
                  "name": "int",
                  "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                  "alternateRangeURI": "xsd:int",
                  "shortDisplay": undefined,
                  "lookupSchema": undefined,
                  "lookupQuery": undefined,
                },
                "name": "field2",
                "rangeURI": undefined,
              },
              "updatedField": false,
              "isPrimaryKey": false,
              "lockType": "NotLocked",
              "wrappedColumnName": undefined,
              "disablePhiLevel": false,
              "lockExistingField": false,
              "sourceOntology": undefined,
              "conceptSubtree": undefined,
              "conceptLabelColumn": undefined,
              "conceptImportColumn": undefined,
              "principalConceptCode": undefined,
              "derivationDataScope": undefined,
              "selected": false,
              "scannable": false,
            },
            Immutable.Record {
              "conceptURI": undefined,
              "conditionalFormats": Immutable.List [],
              "defaultScale": undefined,
              "defaultValueType": undefined,
              "defaultValue": undefined,
              "defaultDisplayValue": undefined,
              "description": undefined,
              "dimension": undefined,
              "excludeFromShifting": false,
              "format": undefined,
              "hidden": false,
              "importAliases": undefined,
              "label": undefined,
              "lookupContainer": undefined,
              "lookupQuery": undefined,
              "lookupSchema": undefined,
              "lookupValidator": undefined,
              "measure": undefined,
              "mvEnabled": false,
              "name": "field3",
              "PHI": undefined,
              "propertyId": undefined,
              "propertyURI": undefined,
              "propertyValidators": Immutable.List [],
              "rangeValidators": Immutable.List [],
              "rangeURI": "xsd:dateTime",
              "regexValidators": Immutable.List [],
              "textChoiceValidator": undefined,
              "recommendedVariable": false,
              "required": false,
              "scale": 4000,
              "URL": undefined,
              "shownInDetailsView": true,
              "shownInInsertView": true,
              "shownInUpdateView": true,
              "visible": true,
              "dataType": Immutable.Record {
                "conceptURI": undefined,
                "display": "Date Time",
                "name": "dateTime",
                "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                "alternateRangeURI": "xsd:dateTime",
                "shortDisplay": undefined,
                "lookupSchema": undefined,
                "lookupQuery": undefined,
              },
              "lookupQueryValue": undefined,
              "lookupType": Immutable.Record {
                "conceptURI": undefined,
                "display": "Lookup",
                "name": "lookup",
                "rangeURI": "xsd:dateTime",
                "alternateRangeURI": undefined,
                "shortDisplay": undefined,
                "lookupSchema": undefined,
                "lookupQuery": undefined,
              },
              "original": {
                "conceptURI": undefined,
                "dataType": Immutable.Record {
                  "conceptURI": undefined,
                  "display": "Date Time",
                  "name": "dateTime",
                  "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                  "alternateRangeURI": "xsd:dateTime",
                  "shortDisplay": undefined,
                  "lookupSchema": undefined,
                  "lookupQuery": undefined,
                },
                "name": "field3",
                "rangeURI": undefined,
              },
              "updatedField": false,
              "isPrimaryKey": false,
              "lockType": "NotLocked",
              "wrappedColumnName": undefined,
              "disablePhiLevel": false,
              "lockExistingField": false,
              "sourceOntology": undefined,
              "conceptSubtree": undefined,
              "conceptLabelColumn": undefined,
              "conceptImportColumn": undefined,
              "principalConceptCode": undefined,
              "derivationDataScope": undefined,
              "selected": false,
              "scannable": false,
            },
          ],
          "indices": Immutable.List [],
          "domainException": undefined,
          "mandatoryFieldNames": Immutable.List [],
          "reservedFieldNames": Immutable.List [],
          "newDesignFields": undefined,
          "instructions": undefined,
          "domainKindName": undefined,
          "schemaName": undefined,
          "queryName": undefined,
        },
      ],
      "editableResults": true,
      "editableRuns": true,
      "exception": undefined,
      "metadataInputFormatHelp": undefined,
      "moduleTransformScripts": undefined,
      "name": "Test Assay Protocol",
      "plateMetadata": undefined,
      "protocolId": 1,
      "protocolParameters": undefined,
      "protocolTransformScripts": undefined,
      "providerName": undefined,
      "saveScriptFiles": false,
      "selectedDetectionMethod": undefined,
      "selectedMetadataInputFormat": undefined,
      "selectedPlateTemplate": undefined,
      "status": "Active",
      "qcEnabled": undefined,
    }
  }
  onCancel={[MockFunction]}
  onComplete={[MockFunction]}
  testMode={true}
>
  <AssayDesignerPanelsImpl
    currentPanelIndex={0}
    domainFormDisplayOptions={
      {
        "hideStudyPropertyTypes": true,
      }
    }
    firstState={true}
    hideEmptyBatchDomain={true}
    initModel={
      Immutable.Record {
        "allowBackgroundUpload": true,
        "allowEditableResults": true,
        "allowQCStates": false,
        "allowTransformationScript": false,
        "allowPlateMetadata": false,
        "autoCopyTargetContainer": undefined,
        "autoCopyTargetContainerId": undefined,
        "autoLinkCategory": undefined,
        "availableDetectionMethods": undefined,
        "availableMetadataInputFormats": undefined,
        "availablePlateTemplates": undefined,
        "backgroundUpload": true,
        "description": "My assay protocol for you all to use.",
        "domains": Immutable.List [
          Immutable.Record {
            "name": "Batch Fields",
            "container": undefined,
            "description": undefined,
            "domainURI": undefined,
            "domainId": null,
            "allowFileLinkProperties": false,
            "allowAttachmentProperties": false,
            "allowFlagProperties": true,
            "allowSampleSubjectProperties": true,
            "allowTextChoiceProperties": true,
            "allowTimepointProperties": false,
            "showDefaultValueSettings": false,
            "defaultDefaultValueType": undefined,
            "defaultValueOptions": Immutable.List [],
            "fields": Immutable.List [],
            "indices": Immutable.List [],
            "domainException": undefined,
            "mandatoryFieldNames": Immutable.List [],
            "reservedFieldNames": Immutable.List [],
            "newDesignFields": undefined,
            "instructions": undefined,
            "domainKindName": undefined,
            "schemaName": undefined,
            "queryName": undefined,
          },
          Immutable.Record {
            "name": "Sample Fields",
            "container": undefined,
            "description": undefined,
            "domainURI": undefined,
            "domainId": null,
            "allowFileLinkProperties": false,
            "allowAttachmentProperties": false,
            "allowFlagProperties": true,
            "allowSampleSubjectProperties": true,
            "allowTextChoiceProperties": true,
            "allowTimepointProperties": false,
            "showDefaultValueSettings": false,
            "defaultDefaultValueType": undefined,
            "defaultValueOptions": Immutable.List [],
            "fields": Immutable.List [
              Immutable.Record {
                "conceptURI": undefined,
                "conditionalFormats": Immutable.List [],
                "defaultScale": undefined,
                "defaultValueType": undefined,
                "defaultValue": undefined,
                "defaultDisplayValue": undefined,
                "description": undefined,
                "dimension": undefined,
                "excludeFromShifting": false,
                "format": undefined,
                "hidden": false,
                "importAliases": undefined,
                "label": undefined,
                "lookupContainer": undefined,
                "lookupQuery": undefined,
                "lookupSchema": undefined,
                "lookupValidator": undefined,
                "measure": undefined,
                "mvEnabled": false,
                "name": "field1",
                "PHI": undefined,
                "propertyId": undefined,
                "propertyURI": undefined,
                "propertyValidators": Immutable.List [],
                "rangeValidators": Immutable.List [],
                "rangeURI": "xsd:string",
                "regexValidators": Immutable.List [],
                "textChoiceValidator": undefined,
                "recommendedVariable": false,
                "required": false,
                "scale": 4000,
                "URL": undefined,
                "shownInDetailsView": true,
                "shownInInsertView": true,
                "shownInUpdateView": true,
                "visible": true,
                "dataType": Immutable.Record {
                  "conceptURI": undefined,
                  "display": "Text",
                  "name": "string",
                  "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                  "alternateRangeURI": "xsd:string",
                  "shortDisplay": "String",
                  "lookupSchema": undefined,
                  "lookupQuery": undefined,
                },
                "lookupQueryValue": undefined,
                "lookupType": Immutable.Record {
                  "conceptURI": undefined,
                  "display": "Lookup",
                  "name": "lookup",
                  "rangeURI": "xsd:string",
                  "alternateRangeURI": undefined,
                  "shortDisplay": undefined,
                  "lookupSchema": undefined,
                  "lookupQuery": undefined,
                },
                "original": {
                  "conceptURI": undefined,
                  "dataType": Immutable.Record {
                    "conceptURI": undefined,
                    "display": "Text",
                    "name": "string",
                    "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                    "alternateRangeURI": "xsd:string",
                    "shortDisplay": "String",
                    "lookupSchema": undefined,
                    "lookupQuery": undefined,
                  },
                  "name": "field1",
                  "rangeURI": undefined,
                },
                "updatedField": false,
                "isPrimaryKey": false,
                "lockType": "NotLocked",
                "wrappedColumnName": undefined,
                "disablePhiLevel": false,
                "lockExistingField": false,
                "sourceOntology": undefined,
                "conceptSubtree": undefined,
                "conceptLabelColumn": undefined,
                "conceptImportColumn": undefined,
                "principalConceptCode": undefined,
                "derivationDataScope": undefined,
                "selected": false,
                "scannable": false,
              },
              Immutable.Record {
                "conceptURI": undefined,
                "conditionalFormats": Immutable.List [],
                "defaultScale": undefined,
                "defaultValueType": undefined,
                "defaultValue": undefined,
                "defaultDisplayValue": undefined,
                "description": undefined,
                "dimension": undefined,
                "excludeFromShifting": false,
                "format": undefined,
                "hidden": false,
                "importAliases": undefined,
                "label": undefined,
                "lookupContainer": undefined,
                "lookupQuery": undefined,
                "lookupSchema": undefined,
                "lookupValidator": undefined,
                "measure": undefined,
                "mvEnabled": false,
                "name": "field2",
                "PHI": undefined,
                "propertyId": undefined,
                "propertyURI": undefined,
                "propertyValidators": Immutable.List [],
                "rangeValidators": Immutable.List [],
                "rangeURI": "xsd:int",
                "regexValidators": Immutable.List [],
                "textChoiceValidator": undefined,
                "recommendedVariable": false,
                "required": false,
                "scale": 4000,
                "URL": undefined,
                "shownInDetailsView": true,
                "shownInInsertView": true,
                "shownInUpdateView": true,
                "visible": true,
                "dataType": Immutable.Record {
                  "conceptURI": undefined,
                  "display": "Integer",
                  "name": "int",
                  "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                  "alternateRangeURI": "xsd:int",
                  "shortDisplay": undefined,
                  "lookupSchema": undefined,
                  "lookupQuery": undefined,
                },
                "lookupQueryValue": undefined,
                "lookupType": Immutable.Record {
                  "conceptURI": undefined,
                  "display": "Lookup",
                  "name": "lookup",
                  "rangeURI": "xsd:int",
                  "alternateRangeURI": undefined,
                  "shortDisplay": undefined,
                  "lookupSchema": undefined,
                  "lookupQuery": undefined,
                },
                "original": {
                  "conceptURI": undefined,
                  "dataType": Immutable.Record {
                    "conceptURI": undefined,
                    "display": "Integer",
                    "name": "int",
                    "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                    "alternateRangeURI": "xsd:int",
                    "shortDisplay": undefined,
                    "lookupSchema": undefined,
                    "lookupQuery": undefined,
                  },
                  "name": "field2",
                  "rangeURI": undefined,
                },
                "updatedField": false,
                "isPrimaryKey": false,
                "lockType": "NotLocked",
                "wrappedColumnName": undefined,
                "disablePhiLevel": false,
                "lockExistingField": false,
                "sourceOntology": undefined,
                "conceptSubtree": undefined,
                "conceptLabelColumn": undefined,
                "conceptImportColumn": undefined,
                "principalConceptCode": undefined,
                "derivationDataScope": undefined,
                "selected": false,
                "scannable": false,
              },
              Immutable.Record {
                "conceptURI": undefined,
                "conditionalFormats": Immutable.List [],
                "defaultScale": undefined,
                "defaultValueType": undefined,
                "defaultValue": undefined,
                "defaultDisplayValue": undefined,
                "description": undefined,
                "dimension": undefined,
                "excludeFromShifting": false,
                "format": undefined,
                "hidden": false,
                "importAliases": undefined,
                "label": undefined,
                "lookupContainer": undefined,
                "lookupQuery": undefined,
                "lookupSchema": undefined,
                "lookupValidator": undefined,
                "measure": undefined,
                "mvEnabled": false,
                "name": "field3",
                "PHI": undefined,
                "propertyId": undefined,
                "propertyURI": undefined,
                "propertyValidators": Immutable.List [],
                "rangeValidators": Immutable.List [],
                "rangeURI": "xsd:dateTime",
                "regexValidators": Immutable.List [],
                "textChoiceValidator": undefined,
                "recommendedVariable": false,
                "required": false,
                "scale": 4000,
                "URL": undefined,
                "shownInDetailsView": true,
                "shownInInsertView": true,
                "shownInUpdateView": true,
                "visible": true,
                "dataType": Immutable.Record {
                  "conceptURI": undefined,
                  "display": "Date Time",
                  "name": "dateTime",
                  "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                  "alternateRangeURI": "xsd:dateTime",
                  "shortDisplay": undefined,
                  "lookupSchema": undefined,
                  "lookupQuery": undefined,
                },
                "lookupQueryValue": undefined,
                "lookupType": Immutable.Record {
                  "conceptURI": undefined,
                  "display": "Lookup",
                  "name": "lookup",
                  "rangeURI": "xsd:dateTime",
                  "alternateRangeURI": undefined,
                  "shortDisplay": undefined,
                  "lookupSchema": undefined,
                  "lookupQuery": undefined,
                },
                "original": {
                  "conceptURI": undefined,
                  "dataType": Immutable.Record {
                    "conceptURI": undefined,
                    "display": "Date Time",
                    "name": "dateTime",
                    "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                    "alternateRangeURI": "xsd:dateTime",
                    "shortDisplay": undefined,
                    "lookupSchema": undefined,
                    "lookupQuery": undefined,
                  },
                  "name": "field3",
                  "rangeURI": undefined,
                },
                "updatedField": false,
                "isPrimaryKey": false,
                "lockType": "NotLocked",
                "wrappedColumnName": undefined,
                "disablePhiLevel": false,
                "lockExistingField": false,
                "sourceOntology": undefined,
                "conceptSubtree": undefined,
                "conceptLabelColumn": undefined,
                "conceptImportColumn": undefined,
                "principalConceptCode": undefined,
                "derivationDataScope": undefined,
                "selected": false,
                "scannable": false,
              },
            ],
            "indices": Immutable.List [],
            "domainException": undefined,
            "mandatoryFieldNames": Immutable.List [],
            "reservedFieldNames": Immutable.List [],
            "newDesignFields": undefined,
            "instructions": undefined,
            "domainKindName": undefined,
            "schemaName": undefined,
            "queryName": undefined,
          },
        ],
        "editableResults": true,
        "editableRuns": true,
        "exception": undefined,
        "metadataInputFormatHelp": undefined,
        "moduleTransformScripts": undefined,
        "name": "Test Assay Protocol",
        "plateMetadata": undefined,
        "protocolId": 1,
        "protocolParameters": undefined,
        "protocolTransformScripts": undefined,
        "providerName": undefined,
        "saveScriptFiles": false,
        "selectedDetectionMethod": undefined,
        "selectedMetadataInputFormat": undefined,
        "selectedPlateTemplate": undefined,
        "status": "Active",
        "qcEnabled": undefined,
      }
    }
    onCancel={[MockFunction]}
    onComplete={[MockFunction]}
    onFinish={[Function]}
    onTogglePanel={[Function]}
    setSubmitting={[Function]}
    submitting={false}
    testMode={true}
    visitedPanels={Immutable.List []}
  >
    <BaseDomainDesigner
      domains={
        Immutable.List [
          Immutable.Record {
            "name": "Batch Fields",
            "container": undefined,
            "description": undefined,
            "domainURI": undefined,
            "domainId": null,
            "allowFileLinkProperties": false,
            "allowAttachmentProperties": false,
            "allowFlagProperties": true,
            "allowSampleSubjectProperties": true,
            "allowTextChoiceProperties": true,
            "allowTimepointProperties": false,
            "showDefaultValueSettings": false,
            "defaultDefaultValueType": undefined,
            "defaultValueOptions": Immutable.List [],
            "fields": Immutable.List [],
            "indices": Immutable.List [],
            "domainException": undefined,
            "mandatoryFieldNames": Immutable.List [],
            "reservedFieldNames": Immutable.List [],
            "newDesignFields": undefined,
            "instructions": undefined,
            "domainKindName": undefined,
            "schemaName": undefined,
            "queryName": undefined,
          },
          Immutable.Record {
            "name": "Sample Fields",
            "container": undefined,
            "description": undefined,
            "domainURI": undefined,
            "domainId": null,
            "allowFileLinkProperties": false,
            "allowAttachmentProperties": false,
            "allowFlagProperties": true,
            "allowSampleSubjectProperties": true,
            "allowTextChoiceProperties": true,
            "allowTimepointProperties": false,
            "showDefaultValueSettings": false,
            "defaultDefaultValueType": undefined,
            "defaultValueOptions": Immutable.List [],
            "fields": Immutable.List [
              Immutable.Record {
                "conceptURI": undefined,
                "conditionalFormats": Immutable.List [],
                "defaultScale": undefined,
                "defaultValueType": undefined,
                "defaultValue": undefined,
                "defaultDisplayValue": undefined,
                "description": undefined,
                "dimension": undefined,
                "excludeFromShifting": false,
                "format": undefined,
                "hidden": false,
                "importAliases": undefined,
                "label": undefined,
                "lookupContainer": undefined,
                "lookupQuery": undefined,
                "lookupSchema": undefined,
                "lookupValidator": undefined,
                "measure": undefined,
                "mvEnabled": false,
                "name": "field1",
                "PHI": undefined,
                "propertyId": undefined,
                "propertyURI": undefined,
                "propertyValidators": Immutable.List [],
                "rangeValidators": Immutable.List [],
                "rangeURI": "xsd:string",
                "regexValidators": Immutable.List [],
                "textChoiceValidator": undefined,
                "recommendedVariable": false,
                "required": false,
                "scale": 4000,
                "URL": undefined,
                "shownInDetailsView": true,
                "shownInInsertView": true,
                "shownInUpdateView": true,
                "visible": true,
                "dataType": Immutable.Record {
                  "conceptURI": undefined,
                  "display": "Text",
                  "name": "string",
                  "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                  "alternateRangeURI": "xsd:string",
                  "shortDisplay": "String",
                  "lookupSchema": undefined,
                  "lookupQuery": undefined,
                },
                "lookupQueryValue": undefined,
                "lookupType": Immutable.Record {
                  "conceptURI": undefined,
                  "display": "Lookup",
                  "name": "lookup",
                  "rangeURI": "xsd:string",
                  "alternateRangeURI": undefined,
                  "shortDisplay": undefined,
                  "lookupSchema": undefined,
                  "lookupQuery": undefined,
                },
                "original": {
                  "conceptURI": undefined,
                  "dataType": Immutable.Record {
                    "conceptURI": undefined,
                    "display": "Text",
                    "name": "string",
                    "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                    "alternateRangeURI": "xsd:string",
                    "shortDisplay": "String",
                    "lookupSchema": undefined,
                    "lookupQuery": undefined,
                  },
                  "name": "field1",
                  "rangeURI": undefined,
                },
                "updatedField": false,
                "isPrimaryKey": false,
                "lockType": "NotLocked",
                "wrappedColumnName": undefined,
                "disablePhiLevel": false,
                "lockExistingField": false,
                "sourceOntology": undefined,
                "conceptSubtree": undefined,
                "conceptLabelColumn": undefined,
                "conceptImportColumn": undefined,
                "principalConceptCode": undefined,
                "derivationDataScope": undefined,
                "selected": false,
                "scannable": false,
              },
              Immutable.Record {
                "conceptURI": undefined,
                "conditionalFormats": Immutable.List [],
                "defaultScale": undefined,
                "defaultValueType": undefined,
                "defaultValue": undefined,
                "defaultDisplayValue": undefined,
                "description": undefined,
                "dimension": undefined,
                "excludeFromShifting": false,
                "format": undefined,
                "hidden": false,
                "importAliases": undefined,
                "label": undefined,
                "lookupContainer": undefined,
                "lookupQuery": undefined,
                "lookupSchema": undefined,
                "lookupValidator": undefined,
                "measure": undefined,
                "mvEnabled": false,
                "name": "field2",
                "PHI": undefined,
                "propertyId": undefined,
                "propertyURI": undefined,
                "propertyValidators": Immutable.List [],
                "rangeValidators": Immutable.List [],
                "rangeURI": "xsd:int",
                "regexValidators": Immutable.List [],
                "textChoiceValidator": undefined,
                "recommendedVariable": false,
                "required": false,
                "scale": 4000,
                "URL": undefined,
                "shownInDetailsView": true,
                "shownInInsertView": true,
                "shownInUpdateView": true,
                "visible": true,
                "dataType": Immutable.Record {
                  "conceptURI": undefined,
                  "display": "Integer",
                  "name": "int",
                  "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                  "alternateRangeURI": "xsd:int",
                  "shortDisplay": undefined,
                  "lookupSchema": undefined,
                  "lookupQuery": undefined,
                },
                "lookupQueryValue": undefined,
                "lookupType": Immutable.Record {
                  "conceptURI": undefined,
                  "display": "Lookup",
                  "name": "lookup",
                  "rangeURI": "xsd:int",
                  "alternateRangeURI": undefined,
                  "shortDisplay": undefined,
                  "lookupSchema": undefined,
                  "lookupQuery": undefined,
                },
                "original": {
                  "conceptURI": undefined,
                  "dataType": Immutable.Record {
                    "conceptURI": undefined,
                    "display": "Integer",
                    "name": "int",
                    "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                    "alternateRangeURI": "xsd:int",
                    "shortDisplay": undefined,
                    "lookupSchema": undefined,
                    "lookupQuery": undefined,
                  },
                  "name": "field2",
                  "rangeURI": undefined,
                },
                "updatedField": false,
                "isPrimaryKey": false,
                "lockType": "NotLocked",
                "wrappedColumnName": undefined,
                "disablePhiLevel": false,
                "lockExistingField": false,
                "sourceOntology": undefined,
                "conceptSubtree": undefined,
                "conceptLabelColumn": undefined,
                "conceptImportColumn": undefined,
                "principalConceptCode": undefined,
                "derivationDataScope": undefined,
                "selected": false,
                "scannable": false,
              },
              Immutable.Record {
                "conceptURI": undefined,
                "conditionalFormats": Immutable.List [],
                "defaultScale": undefined,
                "defaultValueType": undefined,
                "defaultValue": undefined,
                "defaultDisplayValue": undefined,
                "description": undefined,
                "dimension": undefined,
                "excludeFromShifting": false,
                "format": undefined,
                "hidden": false,
                "importAliases": undefined,
                "label": undefined,
                "lookupContainer": undefined,
                "lookupQuery": undefined,
                "lookupSchema": undefined,
                "lookupValidator": undefined,
                "measure": undefined,
                "mvEnabled": false,
                "name": "field3",
                "PHI": undefined,
                "propertyId": undefined,
                "propertyURI": undefined,
                "propertyValidators": Immutable.List [],
                "rangeValidators": Immutable.List [],
                "rangeURI": "xsd:dateTime",
                "regexValidators": Immutable.List [],
                "textChoiceValidator": undefined,
                "recommendedVariable": false,
                "required": false,
                "scale": 4000,
                "URL": undefined,
                "shownInDetailsView": true,
                "shownInInsertView": true,
                "shownInUpdateView": true,
                "visible": true,
                "dataType": Immutable.Record {
                  "conceptURI": undefined,
                  "display": "Date Time",
                  "name": "dateTime",
                  "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                  "alternateRangeURI": "xsd:dateTime",
                  "shortDisplay": undefined,
                  "lookupSchema": undefined,
                  "lookupQuery": undefined,
                },
                "lookupQueryValue": undefined,
                "lookupType": Immutable.Record {
                  "conceptURI": undefined,
                  "display": "Lookup",
                  "name": "lookup",
                  "rangeURI": "xsd:dateTime",
                  "alternateRangeURI": undefined,
                  "shortDisplay": undefined,
                  "lookupSchema": undefined,
                  "lookupQuery": undefined,
                },
                "original": {
                  "conceptURI": undefined,
                  "dataType": Immutable.Record {
                    "conceptURI": undefined,
                    "display": "Date Time",
                    "name": "dateTime",
                    "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                    "alternateRangeURI": "xsd:dateTime",
                    "shortDisplay": undefined,
                    "lookupSchema": undefined,
                    "lookupQuery": undefined,
                  },
                  "name": "field3",
                  "rangeURI": undefined,
                },
                "updatedField": false,
                "isPrimaryKey": false,
                "lockType": "NotLocked",
                "wrappedColumnName": undefined,
                "disablePhiLevel": false,
                "lockExistingField": false,
                "sourceOntology": undefined,
                "conceptSubtree": undefined,
                "conceptLabelColumn": undefined,
                "conceptImportColumn": undefined,
                "principalConceptCode": undefined,
                "derivationDataScope": undefined,
                "selected": false,
                "scannable": false,
              },
            ],
            "indices": Immutable.List [],
            "domainException": undefined,
            "mandatoryFieldNames": Immutable.List [],
            "reservedFieldNames": Immutable.List [],
            "newDesignFields": undefined,
            "instructions": undefined,
            "domainKindName": undefined,
            "schemaName": undefined,
            "queryName": undefined,
          },
        ]
      }
      hasValidProperties={true}
      name="Test Assay Protocol"
      onCancel={[MockFunction]}
      onFinish={[Function]}
      saveBtnText="Save"
      submitting={false}
      visitedPanels={Immutable.List []}
    >
      <ComponentWithDomainPropertiesPanelCollapse
        controlledCollapse={true}
        hideStudyProperties={true}
        initCollapsed={false}
        model={
          Immutable.Record {
            "allowBackgroundUpload": true,
            "allowEditableResults": true,
            "allowQCStates": false,
            "allowTransformationScript": false,
            "allowPlateMetadata": false,
            "autoCopyTargetContainer": undefined,
            "autoCopyTargetContainerId": undefined,
            "autoLinkCategory": undefined,
            "availableDetectionMethods": undefined,
            "availableMetadataInputFormats": undefined,
            "availablePlateTemplates": undefined,
            "backgroundUpload": true,
            "description": "My assay protocol for you all to use.",
            "domains": Immutable.List [
              Immutable.Record {
                "name": "Batch Fields",
                "container": undefined,
                "description": undefined,
                "domainURI": undefined,
                "domainId": null,
                "allowFileLinkProperties": false,
                "allowAttachmentProperties": false,
                "allowFlagProperties": true,
                "allowSampleSubjectProperties": true,
                "allowTextChoiceProperties": true,
                "allowTimepointProperties": false,
                "showDefaultValueSettings": false,
                "defaultDefaultValueType": undefined,
                "defaultValueOptions": Immutable.List [],
                "fields": Immutable.List [],
                "indices": Immutable.List [],
                "domainException": undefined,
                "mandatoryFieldNames": Immutable.List [],
                "reservedFieldNames": Immutable.List [],
                "newDesignFields": undefined,
                "instructions": undefined,
                "domainKindName": undefined,
                "schemaName": undefined,
                "queryName": undefined,
              },
              Immutable.Record {
                "name": "Sample Fields",
                "container": undefined,
                "description": undefined,
                "domainURI": undefined,
                "domainId": null,
                "allowFileLinkProperties": false,
                "allowAttachmentProperties": false,
                "allowFlagProperties": true,
                "allowSampleSubjectProperties": true,
                "allowTextChoiceProperties": true,
                "allowTimepointProperties": false,
                "showDefaultValueSettings": false,
                "defaultDefaultValueType": undefined,
                "defaultValueOptions": Immutable.List [],
                "fields": Immutable.List [
                  Immutable.Record {
                    "conceptURI": undefined,
                    "conditionalFormats": Immutable.List [],
                    "defaultScale": undefined,
                    "defaultValueType": undefined,
                    "defaultValue": undefined,
                    "defaultDisplayValue": undefined,
                    "description": undefined,
                    "dimension": undefined,
                    "excludeFromShifting": false,
                    "format": undefined,
                    "hidden": false,
                    "importAliases": undefined,
                    "label": undefined,
                    "lookupContainer": undefined,
                    "lookupQuery": undefined,
                    "lookupSchema": undefined,
                    "lookupValidator": undefined,
                    "measure": undefined,
                    "mvEnabled": false,
                    "name": "field1",
                    "PHI": undefined,
                    "propertyId": undefined,
                    "propertyURI": undefined,
                    "propertyValidators": Immutable.List [],
                    "rangeValidators": Immutable.List [],
                    "rangeURI": "xsd:string",
                    "regexValidators": Immutable.List [],
                    "textChoiceValidator": undefined,
                    "recommendedVariable": false,
                    "required": false,
                    "scale": 4000,
                    "URL": undefined,
                    "shownInDetailsView": true,
                    "shownInInsertView": true,
                    "shownInUpdateView": true,
                    "visible": true,
                    "dataType": Immutable.Record {
                      "conceptURI": undefined,
                      "display": "Text",
                      "name": "string",
                      "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                      "alternateRangeURI": "xsd:string",
                      "shortDisplay": "String",
                      "lookupSchema": undefined,
                      "lookupQuery": undefined,
                    },
                    "lookupQueryValue": undefined,
                    "lookupType": Immutable.Record {
                      "conceptURI": undefined,
                      "display": "Lookup",
                      "name": "lookup",
                      "rangeURI": "xsd:string",
                      "alternateRangeURI": undefined,
                      "shortDisplay": undefined,
                      "lookupSchema": undefined,
                      "lookupQuery": undefined,
                    },
                    "original": {
                      "conceptURI": undefined,
                      "dataType": Immutable.Record {
                        "conceptURI": undefined,
                        "display": "Text",
                        "name": "string",
                        "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                        "alternateRangeURI": "xsd:string",
                        "shortDisplay": "String",
                        "lookupSchema": undefined,
                        "lookupQuery": undefined,
                      },
                      "name": "field1",
                      "rangeURI": undefined,
                    },
                    "updatedField": false,
                    "isPrimaryKey": false,
                    "lockType": "NotLocked",
                    "wrappedColumnName": undefined,
                    "disablePhiLevel": false,
                    "lockExistingField": false,
                    "sourceOntology": undefined,
                    "conceptSubtree": undefined,
                    "conceptLabelColumn": undefined,
                    "conceptImportColumn": undefined,
                    "principalConceptCode": undefined,
                    "derivationDataScope": undefined,
                    "selected": false,
                    "scannable": false,
                  },
                  Immutable.Record {
                    "conceptURI": undefined,
                    "conditionalFormats": Immutable.List [],
                    "defaultScale": undefined,
                    "defaultValueType": undefined,
                    "defaultValue": undefined,
                    "defaultDisplayValue": undefined,
                    "description": undefined,
                    "dimension": undefined,
                    "excludeFromShifting": false,
                    "format": undefined,
                    "hidden": false,
                    "importAliases": undefined,
                    "label": undefined,
                    "lookupContainer": undefined,
                    "lookupQuery": undefined,
                    "lookupSchema": undefined,
                    "lookupValidator": undefined,
                    "measure": undefined,
                    "mvEnabled": false,
                    "name": "field2",
                    "PHI": undefined,
                    "propertyId": undefined,
                    "propertyURI": undefined,
                    "propertyValidators": Immutable.List [],
                    "rangeValidators": Immutable.List [],
                    "rangeURI": "xsd:int",
                    "regexValidators": Immutable.List [],
                    "textChoiceValidator": undefined,
                    "recommendedVariable": false,
                    "required": false,
                    "scale": 4000,
                    "URL": undefined,
                    "shownInDetailsView": true,
                    "shownInInsertView": true,
                    "shownInUpdateView": true,
                    "visible": true,
                    "dataType": Immutable.Record {
                      "conceptURI": undefined,
                      "display": "Integer",
                      "name": "int",
                      "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                      "alternateRangeURI": "xsd:int",
                      "shortDisplay": undefined,
                      "lookupSchema": undefined,
                      "lookupQuery": undefined,
                    },
                    "lookupQueryValue": undefined,
                    "lookupType": Immutable.Record {
                      "conceptURI": undefined,
                      "display": "Lookup",
                      "name": "lookup",
                      "rangeURI": "xsd:int",
                      "alternateRangeURI": undefined,
                      "shortDisplay": undefined,
                      "lookupSchema": undefined,
                      "lookupQuery": undefined,
                    },
                    "original": {
                      "conceptURI": undefined,
                      "dataType": Immutable.Record {
                        "conceptURI": undefined,
                        "display": "Integer",
                        "name": "int",
                        "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                        "alternateRangeURI": "xsd:int",
                        "shortDisplay": undefined,
                        "lookupSchema": undefined,
                        "lookupQuery": undefined,
                      },
                      "name": "field2",
                      "rangeURI": undefined,
                    },
                    "updatedField": false,
                    "isPrimaryKey": false,
                    "lockType": "NotLocked",
                    "wrappedColumnName": undefined,
                    "disablePhiLevel": false,
                    "lockExistingField": false,
                    "sourceOntology": undefined,
                    "conceptSubtree": undefined,
                    "conceptLabelColumn": undefined,
                    "conceptImportColumn": undefined,
                    "principalConceptCode": undefined,
                    "derivationDataScope": undefined,
                    "selected": false,
                    "scannable": false,
                  },
                  Immutable.Record {
                    "conceptURI": undefined,
                    "conditionalFormats": Immutable.List [],
                    "defaultScale": undefined,
                    "defaultValueType": undefined,
                    "defaultValue": undefined,
                    "defaultDisplayValue": undefined,
                    "description": undefined,
                    "dimension": undefined,
                    "excludeFromShifting": false,
                    "format": undefined,
                    "hidden": false,
                    "importAliases": undefined,
                    "label": undefined,
                    "lookupContainer": undefined,
                    "lookupQuery": undefined,
                    "lookupSchema": undefined,
                    "lookupValidator": undefined,
                    "measure": undefined,
                    "mvEnabled": false,
                    "name": "field3",
                    "PHI": undefined,
                    "propertyId": undefined,
                    "propertyURI": undefined,
                    "propertyValidators": Immutable.List [],
                    "rangeValidators": Immutable.List [],
                    "rangeURI": "xsd:dateTime",
                    "regexValidators": Immutable.List [],
                    "textChoiceValidator": undefined,
                    "recommendedVariable": false,
                    "required": false,
                    "scale": 4000,
                    "URL": undefined,
                    "shownInDetailsView": true,
                    "shownInInsertView": true,
                    "shownInUpdateView": true,
                    "visible": true,
                    "dataType": Immutable.Record {
                      "conceptURI": undefined,
                      "display": "Date Time",
                      "name": "dateTime",
                      "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                      "alternateRangeURI": "xsd:dateTime",
                      "shortDisplay": undefined,
                      "lookupSchema": undefined,
                      "lookupQuery": undefined,
                    },
                    "lookupQueryValue": undefined,
                    "lookupType": Immutable.Record {
                      "conceptURI": undefined,
                      "display": "Lookup",
                      "name": "lookup",
                      "rangeURI": "xsd:dateTime",
                      "alternateRangeURI": undefined,
                      "shortDisplay": undefined,
                      "lookupSchema": undefined,
                      "lookupQuery": undefined,
                    },
                    "original": {
                      "conceptURI": undefined,
                      "dataType": Immutable.Record {
                        "conceptURI": undefined,
                        "display": "Date Time",
                        "name": "dateTime",
                        "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                        "alternateRangeURI": "xsd:dateTime",
                        "shortDisplay": undefined,
                        "lookupSchema": undefined,
                        "lookupQuery": undefined,
                      },
                      "name": "field3",
                      "rangeURI": undefined,
                    },
                    "updatedField": false,
                    "isPrimaryKey": false,
                    "lockType": "NotLocked",
                    "wrappedColumnName": undefined,
                    "disablePhiLevel": false,
                    "lockExistingField": false,
                    "sourceOntology": undefined,
                    "conceptSubtree": undefined,
                    "conceptLabelColumn": undefined,
                    "conceptImportColumn": undefined,
                    "principalConceptCode": undefined,
                    "derivationDataScope": undefined,
                    "selected": false,
                    "scannable": false,
                  },
                ],
                "indices": Immutable.List [],
                "domainException": undefined,
                "mandatoryFieldNames": Immutable.List [],
                "reservedFieldNames": Immutable.List [],
                "newDesignFields": undefined,
                "instructions": undefined,
                "domainKindName": undefined,
                "schemaName": undefined,
                "queryName": undefined,
              },
            ],
            "editableResults": true,
            "editableRuns": true,
            "exception": undefined,
            "metadataInputFormatHelp": undefined,
            "moduleTransformScripts": undefined,
            "name": "Test Assay Protocol",
            "plateMetadata": undefined,
            "protocolId": 1,
            "protocolParameters": undefined,
            "protocolTransformScripts": undefined,
            "providerName": undefined,
            "saveScriptFiles": false,
            "selectedDetectionMethod": undefined,
            "selectedMetadataInputFormat": undefined,
            "selectedPlateTemplate": undefined,
            "status": "Active",
            "qcEnabled": undefined,
          }
        }
        onChange={[Function]}
        onToggle={[Function]}
        panelStatus="COMPLETE"
        validate={false}
      >
        <Component
          appPropertiesOnly={false}
          asPanel={true}
          collapsed={false}
          controlledCollapse={true}
          helpTopic="defineAssaySchema"
          hideStudyProperties={true}
          model={
            Immutable.Record {
              "allowBackgroundUpload": true,
              "allowEditableResults": true,
              "allowQCStates": false,
              "allowTransformationScript": false,
              "allowPlateMetadata": false,
              "autoCopyTargetContainer": undefined,
              "autoCopyTargetContainerId": undefined,
              "autoLinkCategory": undefined,
              "availableDetectionMethods": undefined,
              "availableMetadataInputFormats": undefined,
              "availablePlateTemplates": undefined,
              "backgroundUpload": true,
              "description": "My assay protocol for you all to use.",
              "domains": Immutable.List [
                Immutable.Record {
                  "name": "Batch Fields",
                  "container": undefined,
                  "description": undefined,
                  "domainURI": undefined,
                  "domainId": null,
                  "allowFileLinkProperties": false,
                  "allowAttachmentProperties": false,
                  "allowFlagProperties": true,
                  "allowSampleSubjectProperties": true,
                  "allowTextChoiceProperties": true,
                  "allowTimepointProperties": false,
                  "showDefaultValueSettings": false,
                  "defaultDefaultValueType": undefined,
                  "defaultValueOptions": Immutable.List [],
                  "fields": Immutable.List [],
                  "indices": Immutable.List [],
                  "domainException": undefined,
                  "mandatoryFieldNames": Immutable.List [],
                  "reservedFieldNames": Immutable.List [],
                  "newDesignFields": undefined,
                  "instructions": undefined,
                  "domainKindName": undefined,
                  "schemaName": undefined,
                  "queryName": undefined,
                },
                Immutable.Record {
                  "name": "Sample Fields",
                  "container": undefined,
                  "description": undefined,
                  "domainURI": undefined,
                  "domainId": null,
                  "allowFileLinkProperties": false,
                  "allowAttachmentProperties": false,
                  "allowFlagProperties": true,
                  "allowSampleSubjectProperties": true,
                  "allowTextChoiceProperties": true,
                  "allowTimepointProperties": false,
                  "showDefaultValueSettings": false,
                  "defaultDefaultValueType": undefined,
                  "defaultValueOptions": Immutable.List [],
                  "fields": Immutable.List [
                    Immutable.Record {
                      "conceptURI": undefined,
                      "conditionalFormats": Immutable.List [],
                      "defaultScale": undefined,
                      "defaultValueType": undefined,
                      "defaultValue": undefined,
                      "defaultDisplayValue": undefined,
                      "description": undefined,
                      "dimension": undefined,
                      "excludeFromShifting": false,
                      "format": undefined,
                      "hidden": false,
                      "importAliases": undefined,
                      "label": undefined,
                      "lookupContainer": undefined,
                      "lookupQuery": undefined,
                      "lookupSchema": undefined,
                      "lookupValidator": undefined,
                      "measure": undefined,
                      "mvEnabled": false,
                      "name": "field1",
                      "PHI": undefined,
                      "propertyId": undefined,
                      "propertyURI": undefined,
                      "propertyValidators": Immutable.List [],
                      "rangeValidators": Immutable.List [],
                      "rangeURI": "xsd:string",
                      "regexValidators": Immutable.List [],
                      "textChoiceValidator": undefined,
                      "recommendedVariable": false,
                      "required": false,
                      "scale": 4000,
                      "URL": undefined,
                      "shownInDetailsView": true,
                      "shownInInsertView": true,
                      "shownInUpdateView": true,
                      "visible": true,
                      "dataType": Immutable.Record {
                        "conceptURI": undefined,
                        "display": "Text",
                        "name": "string",
                        "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                        "alternateRangeURI": "xsd:string",
                        "shortDisplay": "String",
                        "lookupSchema": undefined,
                        "lookupQuery": undefined,
                      },
                      "lookupQueryValue": undefined,
                      "lookupType": Immutable.Record {
                        "conceptURI": undefined,
                        "display": "Lookup",
                        "name": "lookup",
                        "rangeURI": "xsd:string",
                        "alternateRangeURI": undefined,
                        "shortDisplay": undefined,
                        "lookupSchema": undefined,
                        "lookupQuery": undefined,
                      },
                      "original": {
                        "conceptURI": undefined,
                        "dataType": Immutable.Record {
                          "conceptURI": undefined,
                          "display": "Text",
                          "name": "string",
                          "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                          "alternateRangeURI": "xsd:string",
                          "shortDisplay": "String",
                          "lookupSchema": undefined,
                          "lookupQuery": undefined,
                        },
                        "name": "field1",
                        "rangeURI": undefined,
                      },
                      "updatedField": false,
                      "isPrimaryKey": false,
                      "lockType": "NotLocked",
                      "wrappedColumnName": undefined,
                      "disablePhiLevel": false,
                      "lockExistingField": false,
                      "sourceOntology": undefined,
                      "conceptSubtree": undefined,
                      "conceptLabelColumn": undefined,
                      "conceptImportColumn": undefined,
                      "principalConceptCode": undefined,
                      "derivationDataScope": undefined,
                      "selected": false,
                      "scannable": false,
                    },
                    Immutable.Record {
                      "conceptURI": undefined,
                      "conditionalFormats": Immutable.List [],
                      "defaultScale": undefined,
                      "defaultValueType": undefined,
                      "defaultValue": undefined,
                      "defaultDisplayValue": undefined,
                      "description": undefined,
                      "dimension": undefined,
                      "excludeFromShifting": false,
                      "format": undefined,
                      "hidden": false,
                      "importAliases": undefined,
                      "label": undefined,
                      "lookupContainer": undefined,
                      "lookupQuery": undefined,
                      "lookupSchema": undefined,
                      "lookupValidator": undefined,
                      "measure": undefined,
                      "mvEnabled": false,
                      "name": "field2",
                      "PHI": undefined,
                      "propertyId": undefined,
                      "propertyURI": undefined,
                      "propertyValidators": Immutable.List [],
                      "rangeValidators": Immutable.List [],
                      "rangeURI": "xsd:int",
                      "regexValidators": Immutable.List [],
                      "textChoiceValidator": undefined,
                      "recommendedVariable": false,
                      "required": false,
                      "scale": 4000,
                      "URL": undefined,
                      "shownInDetailsView": true,
                      "shownInInsertView": true,
                      "shownInUpdateView": true,
                      "visible": true,
                      "dataType": Immutable.Record {
                        "conceptURI": undefined,
                        "display": "Integer",
                        "name": "int",
                        "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                        "alternateRangeURI": "xsd:int",
                        "shortDisplay": undefined,
                        "lookupSchema": undefined,
                        "lookupQuery": undefined,
                      },
                      "lookupQueryValue": undefined,
                      "lookupType": Immutable.Record {
                        "conceptURI": undefined,
                        "display": "Lookup",
                        "name": "lookup",
                        "rangeURI": "xsd:int",
                        "alternateRangeURI": undefined,
                        "shortDisplay": undefined,
                        "lookupSchema": undefined,
                        "lookupQuery": undefined,
                      },
                      "original": {
                        "conceptURI": undefined,
                        "dataType": Immutable.Record {
                          "conceptURI": undefined,
                          "display": "Integer",
                          "name": "int",
                          "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                          "alternateRangeURI": "xsd:int",
                          "shortDisplay": undefined,
                          "lookupSchema": undefined,
                          "lookupQuery": undefined,
                        },
                        "name": "field2",
                        "rangeURI": undefined,
                      },
                      "updatedField": false,
                      "isPrimaryKey": false,
                      "lockType": "NotLocked",
                      "wrappedColumnName": undefined,
                      "disablePhiLevel": false,
                      "lockExistingField": false,
                      "sourceOntology": undefined,
                      "conceptSubtree": undefined,
                      "conceptLabelColumn": undefined,
                      "conceptImportColumn": undefined,
                      "principalConceptCode": undefined,
                      "derivationDataScope": undefined,
                      "selected": false,
                      "scannable": false,
                    },
                    Immutable.Record {
                      "conceptURI": undefined,
                      "conditionalFormats": Immutable.List [],
                      "defaultScale": undefined,
                      "defaultValueType": undefined,
                      "defaultValue": undefined,
                      "defaultDisplayValue": undefined,
                      "description": undefined,
                      "dimension": undefined,
                      "excludeFromShifting": false,
                      "format": undefined,
                      "hidden": false,
                      "importAliases": undefined,
                      "label": undefined,
                      "lookupContainer": undefined,
                      "lookupQuery": undefined,
                      "lookupSchema": undefined,
                      "lookupValidator": undefined,
                      "measure": undefined,
                      "mvEnabled": false,
                      "name": "field3",
                      "PHI": undefined,
                      "propertyId": undefined,
                      "propertyURI": undefined,
                      "propertyValidators": Immutable.List [],
                      "rangeValidators": Immutable.List [],
                      "rangeURI": "xsd:dateTime",
                      "regexValidators": Immutable.List [],
                      "textChoiceValidator": undefined,
                      "recommendedVariable": false,
                      "required": false,
                      "scale": 4000,
                      "URL": undefined,
                      "shownInDetailsView": true,
                      "shownInInsertView": true,
                      "shownInUpdateView": true,
                      "visible": true,
                      "dataType": Immutable.Record {
                        "conceptURI": undefined,
                        "display": "Date Time",
                        "name": "dateTime",
                        "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                        "alternateRangeURI": "xsd:dateTime",
                        "shortDisplay": undefined,
                        "lookupSchema": undefined,
                        "lookupQuery": undefined,
                      },
                      "lookupQueryValue": undefined,
                      "lookupType": Immutable.Record {
                        "conceptURI": undefined,
                        "display": "Lookup",
                        "name": "lookup",
                        "rangeURI": "xsd:dateTime",
                        "alternateRangeURI": undefined,
                        "shortDisplay": undefined,
                        "lookupSchema": undefined,
                        "lookupQuery": undefined,
                      },
                      "original": {
                        "conceptURI": undefined,
                        "dataType": Immutable.Record {
                          "conceptURI": undefined,
                          "display": "Date Time",
                          "name": "dateTime",
                          "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                          "alternateRangeURI": "xsd:dateTime",
                          "shortDisplay": undefined,
                          "lookupSchema": undefined,
                          "lookupQuery": undefined,
                        },
                        "name": "field3",
                        "rangeURI": undefined,
                      },
                      "updatedField": false,
                      "isPrimaryKey": false,
                      "lockType": "NotLocked",
                      "wrappedColumnName": undefined,
                      "disablePhiLevel": false,
                      "lockExistingField": false,
                      "sourceOntology": undefined,
                      "conceptSubtree": undefined,
                      "conceptLabelColumn": undefined,
                      "conceptImportColumn": undefined,
                      "principalConceptCode": undefined,
                      "derivationDataScope": undefined,
                      "selected": false,
                      "scannable": false,
                    },
                  ],
                  "indices": Immutable.List [],
                  "domainException": undefined,
                  "mandatoryFieldNames": Immutable.List [],
                  "reservedFieldNames": Immutable.List [],
                  "newDesignFields": undefined,
                  "instructions": undefined,
                  "domainKindName": undefined,
                  "schemaName": undefined,
                  "queryName": undefined,
                },
              ],
              "editableResults": true,
              "editableRuns": true,
              "exception": undefined,
              "metadataInputFormatHelp": undefined,
              "moduleTransformScripts": undefined,
              "name": "Test Assay Protocol",
              "plateMetadata": undefined,
              "protocolId": 1,
              "protocolParameters": undefined,
              "protocolTransformScripts": undefined,
              "providerName": undefined,
              "saveScriptFiles": false,
              "selectedDetectionMethod": undefined,
              "selectedMetadataInputFormat": undefined,
              "selectedPlateTemplate": undefined,
              "status": "Active",
              "qcEnabled": undefined,
            }
          }
          onChange={[Function]}
          panelStatus="COMPLETE"
          togglePanel={[Function]}
          validate={false}
        >
          <BasePropertiesPanel
            appPropertiesOnly={false}
            asPanel={true}
            collapsed={false}
            controlledCollapse={true}
            headerId="assay-properties-hdr"
            helpTopic="defineAssaySchema"
            hideStudyProperties={true}
            isValid={true}
            model={
              Immutable.Record {
                "allowBackgroundUpload": true,
                "allowEditableResults": true,
                "allowQCStates": false,
                "allowTransformationScript": false,
                "allowPlateMetadata": false,
                "autoCopyTargetContainer": undefined,
                "autoCopyTargetContainerId": undefined,
                "autoLinkCategory": undefined,
                "availableDetectionMethods": undefined,
                "availableMetadataInputFormats": undefined,
                "availablePlateTemplates": undefined,
                "backgroundUpload": true,
                "description": "My assay protocol for you all to use.",
                "domains": Immutable.List [
                  Immutable.Record {
                    "name": "Batch Fields",
                    "container": undefined,
                    "description": undefined,
                    "domainURI": undefined,
                    "domainId": null,
                    "allowFileLinkProperties": false,
                    "allowAttachmentProperties": false,
                    "allowFlagProperties": true,
                    "allowSampleSubjectProperties": true,
                    "allowTextChoiceProperties": true,
                    "allowTimepointProperties": false,
                    "showDefaultValueSettings": false,
                    "defaultDefaultValueType": undefined,
                    "defaultValueOptions": Immutable.List [],
                    "fields": Immutable.List [],
                    "indices": Immutable.List [],
                    "domainException": undefined,
                    "mandatoryFieldNames": Immutable.List [],
                    "reservedFieldNames": Immutable.List [],
                    "newDesignFields": undefined,
                    "instructions": undefined,
                    "domainKindName": undefined,
                    "schemaName": undefined,
                    "queryName": undefined,
                  },
                  Immutable.Record {
                    "name": "Sample Fields",
                    "container": undefined,
                    "description": undefined,
                    "domainURI": undefined,
                    "domainId": null,
                    "allowFileLinkProperties": false,
                    "allowAttachmentProperties": false,
                    "allowFlagProperties": true,
                    "allowSampleSubjectProperties": true,
                    "allowTextChoiceProperties": true,
                    "allowTimepointProperties": false,
                    "showDefaultValueSettings": false,
                    "defaultDefaultValueType": undefined,
                    "defaultValueOptions": Immutable.List [],
                    "fields": Immutable.List [
                      Immutable.Record {
                        "conceptURI": undefined,
                        "conditionalFormats": Immutable.List [],
                        "defaultScale": undefined,
                        "defaultValueType": undefined,
                        "defaultValue": undefined,
                        "defaultDisplayValue": undefined,
                        "description": undefined,
                        "dimension": undefined,
                        "excludeFromShifting": false,
                        "format": undefined,
                        "hidden": false,
                        "importAliases": undefined,
                        "label": undefined,
                        "lookupContainer": undefined,
                        "lookupQuery": undefined,
                        "lookupSchema": undefined,
                        "lookupValidator": undefined,
                        "measure": undefined,
                        "mvEnabled": false,
                        "name": "field1",
                        "PHI": undefined,
                        "propertyId": undefined,
                        "propertyURI": undefined,
                        "propertyValidators": Immutable.List [],
                        "rangeValidators": Immutable.List [],
                        "rangeURI": "xsd:string",
                        "regexValidators": Immutable.List [],
                        "textChoiceValidator": undefined,
                        "recommendedVariable": false,
                        "required": false,
                        "scale": 4000,
                        "URL": undefined,
                        "shownInDetailsView": true,
                        "shownInInsertView": true,
                        "shownInUpdateView": true,
                        "visible": true,
                        "dataType": Immutable.Record {
                          "conceptURI": undefined,
                          "display": "Text",
                          "name": "string",
                          "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                          "alternateRangeURI": "xsd:string",
                          "shortDisplay": "String",
                          "lookupSchema": undefined,
                          "lookupQuery": undefined,
                        },
                        "lookupQueryValue": undefined,
                        "lookupType": Immutable.Record {
                          "conceptURI": undefined,
                          "display": "Lookup",
                          "name": "lookup",
                          "rangeURI": "xsd:string",
                          "alternateRangeURI": undefined,
                          "shortDisplay": undefined,
                          "lookupSchema": undefined,
                          "lookupQuery": undefined,
                        },
                        "original": {
                          "conceptURI": undefined,
                          "dataType": Immutable.Record {
                            "conceptURI": undefined,
                            "display": "Text",
                            "name": "string",
                            "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                            "alternateRangeURI": "xsd:string",
                            "shortDisplay": "String",
                            "lookupSchema": undefined,
                            "lookupQuery": undefined,
                          },
                          "name": "field1",
                          "rangeURI": undefined,
                        },
                        "updatedField": false,
                        "isPrimaryKey": false,
                        "lockType": "NotLocked",
                        "wrappedColumnName": undefined,
                        "disablePhiLevel": false,
                        "lockExistingField": false,
                        "sourceOntology": undefined,
                        "conceptSubtree": undefined,
                        "conceptLabelColumn": undefined,
                        "conceptImportColumn": undefined,
                        "principalConceptCode": undefined,
                        "derivationDataScope": undefined,
                        "selected": false,
                        "scannable": false,
                      },
                      Immutable.Record {
                        "conceptURI": undefined,
                        "conditionalFormats": Immutable.List [],
                        "defaultScale": undefined,
                        "defaultValueType": undefined,
                        "defaultValue": undefined,
                        "defaultDisplayValue": undefined,
                        "description": undefined,
                        "dimension": undefined,
                        "excludeFromShifting": false,
                        "format": undefined,
                        "hidden": false,
                        "importAliases": undefined,
                        "label": undefined,
                        "lookupContainer": undefined,
                        "lookupQuery": undefined,
                        "lookupSchema": undefined,
                        "lookupValidator": undefined,
                        "measure": undefined,
                        "mvEnabled": false,
                        "name": "field2",
                        "PHI": undefined,
                        "propertyId": undefined,
                        "propertyURI": undefined,
                        "propertyValidators": Immutable.List [],
                        "rangeValidators": Immutable.List [],
                        "rangeURI": "xsd:int",
                        "regexValidators": Immutable.List [],
                        "textChoiceValidator": undefined,
                        "recommendedVariable": false,
                        "required": false,
                        "scale": 4000,
                        "URL": undefined,
                        "shownInDetailsView": true,
                        "shownInInsertView": true,
                        "shownInUpdateView": true,
                        "visible": true,
                        "dataType": Immutable.Record {
                          "conceptURI": undefined,
                          "display": "Integer",
                          "name": "int",
                          "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                          "alternateRangeURI": "xsd:int",
                          "shortDisplay": undefined,
                          "lookupSchema": undefined,
                          "lookupQuery": undefined,
                        },
                        "lookupQueryValue": undefined,
                        "lookupType": Immutable.Record {
                          "conceptURI": undefined,
                          "display": "Lookup",
                          "name": "lookup",
                          "rangeURI": "xsd:int",
                          "alternateRangeURI": undefined,
                          "shortDisplay": undefined,
                          "lookupSchema": undefined,
                          "lookupQuery": undefined,
                        },
                        "original": {
                          "conceptURI": undefined,
                          "dataType": Immutable.Record {
                            "conceptURI": undefined,
                            "display": "Integer",
                            "name": "int",
                            "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                            "alternateRangeURI": "xsd:int",
                            "shortDisplay": undefined,
                            "lookupSchema": undefined,
                            "lookupQuery": undefined,
                          },
                          "name": "field2",
                          "rangeURI": undefined,
                        },
                        "updatedField": false,
                        "isPrimaryKey": false,
                        "lockType": "NotLocked",
                        "wrappedColumnName": undefined,
                        "disablePhiLevel": false,
                        "lockExistingField": false,
                        "sourceOntology": undefined,
                        "conceptSubtree": undefined,
                        "conceptLabelColumn": undefined,
                        "conceptImportColumn": undefined,
                        "principalConceptCode": undefined,
                        "derivationDataScope": undefined,
                        "selected": false,
                        "scannable": false,
                      },
                      Immutable.Record {
                        "conceptURI": undefined,
                        "conditionalFormats": Immutable.List [],
                        "defaultScale": undefined,
                        "defaultValueType": undefined,
                        "defaultValue": undefined,
                        "defaultDisplayValue": undefined,
                        "description": undefined,
                        "dimension": undefined,
                        "excludeFromShifting": false,
                        "format": undefined,
                        "hidden": false,
                        "importAliases": undefined,
                        "label": undefined,
                        "lookupContainer": undefined,
                        "lookupQuery": undefined,
                        "lookupSchema": undefined,
                        "lookupValidator": undefined,
                        "measure": undefined,
                        "mvEnabled": false,
                        "name": "field3",
                        "PHI": undefined,
                        "propertyId": undefined,
                        "propertyURI": undefined,
                        "propertyValidators": Immutable.List [],
                        "rangeValidators": Immutable.List [],
                        "rangeURI": "xsd:dateTime",
                        "regexValidators": Immutable.List [],
                        "textChoiceValidator": undefined,
                        "recommendedVariable": false,
                        "required": false,
                        "scale": 4000,
                        "URL": undefined,
                        "shownInDetailsView": true,
                        "shownInInsertView": true,
                        "shownInUpdateView": true,
                        "visible": true,
                        "dataType": Immutable.Record {
                          "conceptURI": undefined,
                          "display": "Date Time",
                          "name": "dateTime",
                          "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                          "alternateRangeURI": "xsd:dateTime",
                          "shortDisplay": undefined,
                          "lookupSchema": undefined,
                          "lookupQuery": undefined,
                        },
                        "lookupQueryValue": undefined,
                        "lookupType": Immutable.Record {
                          "conceptURI": undefined,
                          "display": "Lookup",
                          "name": "lookup",
                          "rangeURI": "xsd:dateTime",
                          "alternateRangeURI": undefined,
                          "shortDisplay": undefined,
                          "lookupSchema": undefined,
                          "lookupQuery": undefined,
                        },
                        "original": {
                          "conceptURI": undefined,
                          "dataType": Immutable.Record {
                            "conceptURI": undefined,
                            "display": "Date Time",
                            "name": "dateTime",
                            "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                            "alternateRangeURI": "xsd:dateTime",
                            "shortDisplay": undefined,
                            "lookupSchema": undefined,
                            "lookupQuery": undefined,
                          },
                          "name": "field3",
                          "rangeURI": undefined,
                        },
                        "updatedField": false,
                        "isPrimaryKey": false,
                        "lockType": "NotLocked",
                        "wrappedColumnName": undefined,
                        "disablePhiLevel": false,
                        "lockExistingField": false,
                        "sourceOntology": undefined,
                        "conceptSubtree": undefined,
                        "conceptLabelColumn": undefined,
                        "conceptImportColumn": undefined,
                        "principalConceptCode": undefined,
                        "derivationDataScope": undefined,
                        "selected": false,
                        "scannable": false,
                      },
                    ],
                    "indices": Immutable.List [],
                    "domainException": undefined,
                    "mandatoryFieldNames": Immutable.List [],
                    "reservedFieldNames": Immutable.List [],
                    "newDesignFields": undefined,
                    "instructions": undefined,
                    "domainKindName": undefined,
                    "schemaName": undefined,
                    "queryName": undefined,
                  },
                ],
                "editableResults": true,
                "editableRuns": true,
                "exception": undefined,
                "metadataInputFormatHelp": undefined,
                "moduleTransformScripts": undefined,
                "name": "Test Assay Protocol",
                "plateMetadata": undefined,
                "protocolId": 1,
                "protocolParameters": undefined,
                "protocolTransformScripts": undefined,
                "providerName": undefined,
                "saveScriptFiles": false,
                "selectedDetectionMethod": undefined,
                "selectedMetadataInputFormat": undefined,
                "selectedPlateTemplate": undefined,
                "status": "Active",
                "qcEnabled": undefined,
              }
            }
            onChange={[Function]}
            panelStatus="COMPLETE"
            title="Assay Properties"
            togglePanel={[Function]}
            updateValidStatus={[Function]}
            useTheme={false}
            validate={false}
          >
            <ForwardRef
              className="domain-form-panel domain-panel-no-theme"
              expanded={true}
              onToggle={[Function]}
            >
              <Uncontrolled(Panel)
                className="domain-form-panel domain-panel-no-theme"
                expanded={true}
                innerRef={null}
                onToggle={[Function]}
              >
                <Panel
                  bsClass="panel"
                  bsStyle="default"
                  className="domain-form-panel domain-panel-no-theme"
                  expanded={true}
                  onToggle={[Function]}
                >
                  <div
                    className="domain-form-panel domain-panel-no-theme panel panel-default"
                  >
                    <CollapsiblePanelHeader
                      collapsed={false}
                      controlledCollapse={true}
                      iconHelpMsg="Contains errors or is missing required values."
                      id="assay-properties-hdr"
                      isValid={true}
                      panelStatus="COMPLETE"
                      title="Assay Properties"
                      togglePanel={[Function]}
                      useTheme={false}
                    >
                      <PanelHeading
                        bsClass="panel"
                        className="domain-panel-header domain-heading-collapsible domain-panel-header-expanded domain-panel-header-no-theme"
                        componentClass="div"
                        id="assay-properties-hdr"
                        onClick={[Function]}
                      >
                        <div
                          className="domain-panel-header domain-heading-collapsible domain-panel-header-expanded domain-panel-header-no-theme panel-heading"
                          id="assay-properties-hdr"
                          onClick={[Function]}
                        >
                          <span
                            className="domain-panel-status-icon"
                          >
                            <span
                              className="fa fa-check-circle"
                            />
                          </span>
                          <span
                            className="domain-panel-title"
                          >
                            Assay Properties
                          </span>
                          <span
                            className="pull-right"
                          >
                            <span
                              className="fa fa-lg fa-minus-square domain-form-collapse-btn"
                            />
                          </span>
                        </div>
                      </PanelHeading>
                    </CollapsiblePanelHeader>
                    <PanelBody
                      bsClass="panel"
                      collapsible={true}
                    >
                      <PanelCollapse
                        bsClass="panel"
                      >
                        <Collapse
                          appear={false}
                          dimension="height"
                          getDimensionValue={[Function]}
                          in={true}
                          mountOnEnter={false}
                          timeout={300}
                          unmountOnExit={false}
                        >
                          <Transition
                            appear={false}
                            aria-expanded={null}
                            enter={true}
                            exit={true}
                            in={true}
                            mountOnEnter={false}
                            onEnter={[Function]}
                            onEntered={[Function]}
                            onEntering={[Function]}
                            onExit={[Function]}
                            onExited={[Function]}
                            onExiting={[Function]}
                            timeout={300}
                            unmountOnExit={false}
                          >
                            <div
                              aria-expanded={null}
                              className="panel-collapse collapse in"
                            >
                              <div
                                className="panel-body"
                              >
                                <HelpTopicURL
                                  helpTopic="defineAssaySchema"
                                  nounPlural="assays"
                                >
                                  <Row
                                    bsClass="row"
                                    componentClass="div"
                                  >
                                    <div
                                      className="row"
                                    >
                                      <Col
                                        bsClass="col"
                                        componentClass="div"
                                        xs={12}
                                      >
                                        <div
                                          className="col-xs-12"
                                        >
                                          <HelpLink
                                            className="domain-field-float-right"
                                            topic="defineAssaySchema"
                                          >
                                            <a
                                              className="domain-field-float-right"
                                              href="https://www.labkey.org/Documentation/wiki-page.view?referrer=inPage&name=defineAssaySchema"
                                              rel="noopener noreferrer"
                                              target="_blank"
                                            >
                                              Learn more about designing assays
                                            </a>
                                          </HelpLink>
                                        </div>
                                      </Col>
                                    </div>
                                  </Row>
                                </HelpTopicURL>
                                <AssayPropertiesForm
                                  appPropertiesOnly={false}
                                  hideStudyProperties={true}
                                  model={
                                    Immutable.Record {
                                      "allowBackgroundUpload": true,
                                      "allowEditableResults": true,
                                      "allowQCStates": false,
                                      "allowTransformationScript": false,
                                      "allowPlateMetadata": false,
                                      "autoCopyTargetContainer": undefined,
                                      "autoCopyTargetContainerId": undefined,
                                      "autoLinkCategory": undefined,
                                      "availableDetectionMethods": undefined,
                                      "availableMetadataInputFormats": undefined,
                                      "availablePlateTemplates": undefined,
                                      "backgroundUpload": true,
                                      "description": "My assay protocol for you all to use.",
                                      "domains": Immutable.List [
                                        Immutable.Record {
                                          "name": "Batch Fields",
                                          "container": undefined,
                                          "description": undefined,
                                          "domainURI": undefined,
                                          "domainId": null,
                                          "allowFileLinkProperties": false,
                                          "allowAttachmentProperties": false,
                                          "allowFlagProperties": true,
                                          "allowSampleSubjectProperties": true,
                                          "allowTextChoiceProperties": true,
                                          "allowTimepointProperties": false,
                                          "showDefaultValueSettings": false,
                                          "defaultDefaultValueType": undefined,
                                          "defaultValueOptions": Immutable.List [],
                                          "fields": Immutable.List [],
                                          "indices": Immutable.List [],
                                          "domainException": undefined,
                                          "mandatoryFieldNames": Immutable.List [],
                                          "reservedFieldNames": Immutable.List [],
                                          "newDesignFields": undefined,
                                          "instructions": undefined,
                                          "domainKindName": undefined,
                                          "schemaName": undefined,
                                          "queryName": undefined,
                                        },
                                        Immutable.Record {
                                          "name": "Sample Fields",
                                          "container": undefined,
                                          "description": undefined,
                                          "domainURI": undefined,
                                          "domainId": null,
                                          "allowFileLinkProperties": false,
                                          "allowAttachmentProperties": false,
                                          "allowFlagProperties": true,
                                          "allowSampleSubjectProperties": true,
                                          "allowTextChoiceProperties": true,
                                          "allowTimepointProperties": false,
                                          "showDefaultValueSettings": false,
                                          "defaultDefaultValueType": undefined,
                                          "defaultValueOptions": Immutable.List [],
                                          "fields": Immutable.List [
                                            Immutable.Record {
                                              "conceptURI": undefined,
                                              "conditionalFormats": Immutable.List [],
                                              "defaultScale": undefined,
                                              "defaultValueType": undefined,
                                              "defaultValue": undefined,
                                              "defaultDisplayValue": undefined,
                                              "description": undefined,
                                              "dimension": undefined,
                                              "excludeFromShifting": false,
                                              "format": undefined,
                                              "hidden": false,
                                              "importAliases": undefined,
                                              "label": undefined,
                                              "lookupContainer": undefined,
                                              "lookupQuery": undefined,
                                              "lookupSchema": undefined,
                                              "lookupValidator": undefined,
                                              "measure": undefined,
                                              "mvEnabled": false,
                                              "name": "field1",
                                              "PHI": undefined,
                                              "propertyId": undefined,
                                              "propertyURI": undefined,
                                              "propertyValidators": Immutable.List [],
                                              "rangeValidators": Immutable.List [],
                                              "rangeURI": "xsd:string",
                                              "regexValidators": Immutable.List [],
                                              "textChoiceValidator": undefined,
                                              "recommendedVariable": false,
                                              "required": false,
                                              "scale": 4000,
                                              "URL": undefined,
                                              "shownInDetailsView": true,
                                              "shownInInsertView": true,
                                              "shownInUpdateView": true,
                                              "visible": true,
                                              "dataType": Immutable.Record {
                                                "conceptURI": undefined,
                                                "display": "Text",
                                                "name": "string",
                                                "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                "alternateRangeURI": "xsd:string",
                                                "shortDisplay": "String",
                                                "lookupSchema": undefined,
                                                "lookupQuery": undefined,
                                              },
                                              "lookupQueryValue": undefined,
                                              "lookupType": Immutable.Record {
                                                "conceptURI": undefined,
                                                "display": "Lookup",
                                                "name": "lookup",
                                                "rangeURI": "xsd:string",
                                                "alternateRangeURI": undefined,
                                                "shortDisplay": undefined,
                                                "lookupSchema": undefined,
                                                "lookupQuery": undefined,
                                              },
                                              "original": {
                                                "conceptURI": undefined,
                                                "dataType": Immutable.Record {
                                                  "conceptURI": undefined,
                                                  "display": "Text",
                                                  "name": "string",
                                                  "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                  "alternateRangeURI": "xsd:string",
                                                  "shortDisplay": "String",
                                                  "lookupSchema": undefined,
                                                  "lookupQuery": undefined,
                                                },
                                                "name": "field1",
                                                "rangeURI": undefined,
                                              },
                                              "updatedField": false,
                                              "isPrimaryKey": false,
                                              "lockType": "NotLocked",
                                              "wrappedColumnName": undefined,
                                              "disablePhiLevel": false,
                                              "lockExistingField": false,
                                              "sourceOntology": undefined,
                                              "conceptSubtree": undefined,
                                              "conceptLabelColumn": undefined,
                                              "conceptImportColumn": undefined,
                                              "principalConceptCode": undefined,
                                              "derivationDataScope": undefined,
                                              "selected": false,
                                              "scannable": false,
                                            },
                                            Immutable.Record {
                                              "conceptURI": undefined,
                                              "conditionalFormats": Immutable.List [],
                                              "defaultScale": undefined,
                                              "defaultValueType": undefined,
                                              "defaultValue": undefined,
                                              "defaultDisplayValue": undefined,
                                              "description": undefined,
                                              "dimension": undefined,
                                              "excludeFromShifting": false,
                                              "format": undefined,
                                              "hidden": false,
                                              "importAliases": undefined,
                                              "label": undefined,
                                              "lookupContainer": undefined,
                                              "lookupQuery": undefined,
                                              "lookupSchema": undefined,
                                              "lookupValidator": undefined,
                                              "measure": undefined,
                                              "mvEnabled": false,
                                              "name": "field2",
                                              "PHI": undefined,
                                              "propertyId": undefined,
                                              "propertyURI": undefined,
                                              "propertyValidators": Immutable.List [],
                                              "rangeValidators": Immutable.List [],
                                              "rangeURI": "xsd:int",
                                              "regexValidators": Immutable.List [],
                                              "textChoiceValidator": undefined,
                                              "recommendedVariable": false,
                                              "required": false,
                                              "scale": 4000,
                                              "URL": undefined,
                                              "shownInDetailsView": true,
                                              "shownInInsertView": true,
                                              "shownInUpdateView": true,
                                              "visible": true,
                                              "dataType": Immutable.Record {
                                                "conceptURI": undefined,
                                                "display": "Integer",
                                                "name": "int",
                                                "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                                "alternateRangeURI": "xsd:int",
                                                "shortDisplay": undefined,
                                                "lookupSchema": undefined,
                                                "lookupQuery": undefined,
                                              },
                                              "lookupQueryValue": undefined,
                                              "lookupType": Immutable.Record {
                                                "conceptURI": undefined,
                                                "display": "Lookup",
                                                "name": "lookup",
                                                "rangeURI": "xsd:int",
                                                "alternateRangeURI": undefined,
                                                "shortDisplay": undefined,
                                                "lookupSchema": undefined,
                                                "lookupQuery": undefined,
                                              },
                                              "original": {
                                                "conceptURI": undefined,
                                                "dataType": Immutable.Record {
                                                  "conceptURI": undefined,
                                                  "display": "Integer",
                                                  "name": "int",
                                                  "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                                  "alternateRangeURI": "xsd:int",
                                                  "shortDisplay": undefined,
                                                  "lookupSchema": undefined,
                                                  "lookupQuery": undefined,
                                                },
                                                "name": "field2",
                                                "rangeURI": undefined,
                                              },
                                              "updatedField": false,
                                              "isPrimaryKey": false,
                                              "lockType": "NotLocked",
                                              "wrappedColumnName": undefined,
                                              "disablePhiLevel": false,
                                              "lockExistingField": false,
                                              "sourceOntology": undefined,
                                              "conceptSubtree": undefined,
                                              "conceptLabelColumn": undefined,
                                              "conceptImportColumn": undefined,
                                              "principalConceptCode": undefined,
                                              "derivationDataScope": undefined,
                                              "selected": false,
                                              "scannable": false,
                                            },
                                            Immutable.Record {
                                              "conceptURI": undefined,
                                              "conditionalFormats": Immutable.List [],
                                              "defaultScale": undefined,
                                              "defaultValueType": undefined,
                                              "defaultValue": undefined,
                                              "defaultDisplayValue": undefined,
                                              "description": undefined,
                                              "dimension": undefined,
                                              "excludeFromShifting": false,
                                              "format": undefined,
                                              "hidden": false,
                                              "importAliases": undefined,
                                              "label": undefined,
                                              "lookupContainer": undefined,
                                              "lookupQuery": undefined,
                                              "lookupSchema": undefined,
                                              "lookupValidator": undefined,
                                              "measure": undefined,
                                              "mvEnabled": false,
                                              "name": "field3",
                                              "PHI": undefined,
                                              "propertyId": undefined,
                                              "propertyURI": undefined,
                                              "propertyValidators": Immutable.List [],
                                              "rangeValidators": Immutable.List [],
                                              "rangeURI": "xsd:dateTime",
                                              "regexValidators": Immutable.List [],
                                              "textChoiceValidator": undefined,
                                              "recommendedVariable": false,
                                              "required": false,
                                              "scale": 4000,
                                              "URL": undefined,
                                              "shownInDetailsView": true,
                                              "shownInInsertView": true,
                                              "shownInUpdateView": true,
                                              "visible": true,
                                              "dataType": Immutable.Record {
                                                "conceptURI": undefined,
                                                "display": "Date Time",
                                                "name": "dateTime",
                                                "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                                                "alternateRangeURI": "xsd:dateTime",
                                                "shortDisplay": undefined,
                                                "lookupSchema": undefined,
                                                "lookupQuery": undefined,
                                              },
                                              "lookupQueryValue": undefined,
                                              "lookupType": Immutable.Record {
                                                "conceptURI": undefined,
                                                "display": "Lookup",
                                                "name": "lookup",
                                                "rangeURI": "xsd:dateTime",
                                                "alternateRangeURI": undefined,
                                                "shortDisplay": undefined,
                                                "lookupSchema": undefined,
                                                "lookupQuery": undefined,
                                              },
                                              "original": {
                                                "conceptURI": undefined,
                                                "dataType": Immutable.Record {
                                                  "conceptURI": undefined,
                                                  "display": "Date Time",
                                                  "name": "dateTime",
                                                  "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                                                  "alternateRangeURI": "xsd:dateTime",
                                                  "shortDisplay": undefined,
                                                  "lookupSchema": undefined,
                                                  "lookupQuery": undefined,
                                                },
                                                "name": "field3",
                                                "rangeURI": undefined,
                                              },
                                              "updatedField": false,
                                              "isPrimaryKey": false,
                                              "lockType": "NotLocked",
                                              "wrappedColumnName": undefined,
                                              "disablePhiLevel": false,
                                              "lockExistingField": false,
                                              "sourceOntology": undefined,
                                              "conceptSubtree": undefined,
                                              "conceptLabelColumn": undefined,
                                              "conceptImportColumn": undefined,
                                              "principalConceptCode": undefined,
                                              "derivationDataScope": undefined,
                                              "selected": false,
                                              "scannable": false,
                                            },
                                          ],
                                          "indices": Immutable.List [],
                                          "domainException": undefined,
                                          "mandatoryFieldNames": Immutable.List [],
                                          "reservedFieldNames": Immutable.List [],
                                          "newDesignFields": undefined,
                                          "instructions": undefined,
                                          "domainKindName": undefined,
                                          "schemaName": undefined,
                                          "queryName": undefined,
                                        },
                                      ],
                                      "editableResults": true,
                                      "editableRuns": true,
                                      "exception": undefined,
                                      "metadataInputFormatHelp": undefined,
                                      "moduleTransformScripts": undefined,
                                      "name": "Test Assay Protocol",
                                      "plateMetadata": undefined,
                                      "protocolId": 1,
                                      "protocolParameters": undefined,
                                      "protocolTransformScripts": undefined,
                                      "providerName": undefined,
                                      "saveScriptFiles": false,
                                      "selectedDetectionMethod": undefined,
                                      "selectedMetadataInputFormat": undefined,
                                      "selectedPlateTemplate": undefined,
                                      "status": "Active",
                                      "qcEnabled": undefined,
                                    }
                                  }
                                  onChange={[Function]}
                                >
                                  <Form
                                    bsClass="form"
                                    componentClass="form"
                                    horizontal={false}
                                    inline={false}
                                  >
                                    <form
                                      className=""
                                    >
                                      <Col
                                        bsClass="col"
                                        componentClass="div"
                                        lg={6}
                                        xs={12}
                                      >
                                        <div
                                          className="col-lg-6 col-xs-12"
                                        >
                                          <div
                                            className="domain-field-padding-bottom"
                                          >
                                            <SectionHeading
                                              title="Basic Properties"
                                            >
                                              <div
                                                className="domain-field-section-heading"
                                              >
                                                Basic Properties
                                              </div>
                                            </SectionHeading>
                                            <NameInput
                                              appPropertiesOnly={false}
                                              model={
                                                Immutable.Record {
                                                  "allowBackgroundUpload": true,
                                                  "allowEditableResults": true,
                                                  "allowQCStates": false,
                                                  "allowTransformationScript": false,
                                                  "allowPlateMetadata": false,
                                                  "autoCopyTargetContainer": undefined,
                                                  "autoCopyTargetContainerId": undefined,
                                                  "autoLinkCategory": undefined,
                                                  "availableDetectionMethods": undefined,
                                                  "availableMetadataInputFormats": undefined,
                                                  "availablePlateTemplates": undefined,
                                                  "backgroundUpload": true,
                                                  "description": "My assay protocol for you all to use.",
                                                  "domains": Immutable.List [
                                                    Immutable.Record {
                                                      "name": "Batch Fields",
                                                      "container": undefined,
                                                      "description": undefined,
                                                      "domainURI": undefined,
                                                      "domainId": null,
                                                      "allowFileLinkProperties": false,
                                                      "allowAttachmentProperties": false,
                                                      "allowFlagProperties": true,
                                                      "allowSampleSubjectProperties": true,
                                                      "allowTextChoiceProperties": true,
                                                      "allowTimepointProperties": false,
                                                      "showDefaultValueSettings": false,
                                                      "defaultDefaultValueType": undefined,
                                                      "defaultValueOptions": Immutable.List [],
                                                      "fields": Immutable.List [],
                                                      "indices": Immutable.List [],
                                                      "domainException": undefined,
                                                      "mandatoryFieldNames": Immutable.List [],
                                                      "reservedFieldNames": Immutable.List [],
                                                      "newDesignFields": undefined,
                                                      "instructions": undefined,
                                                      "domainKindName": undefined,
                                                      "schemaName": undefined,
                                                      "queryName": undefined,
                                                    },
                                                    Immutable.Record {
                                                      "name": "Sample Fields",
                                                      "container": undefined,
                                                      "description": undefined,
                                                      "domainURI": undefined,
                                                      "domainId": null,
                                                      "allowFileLinkProperties": false,
                                                      "allowAttachmentProperties": false,
                                                      "allowFlagProperties": true,
                                                      "allowSampleSubjectProperties": true,
                                                      "allowTextChoiceProperties": true,
                                                      "allowTimepointProperties": false,
                                                      "showDefaultValueSettings": false,
                                                      "defaultDefaultValueType": undefined,
                                                      "defaultValueOptions": Immutable.List [],
                                                      "fields": Immutable.List [
                                                        Immutable.Record {
                                                          "conceptURI": undefined,
                                                          "conditionalFormats": Immutable.List [],
                                                          "defaultScale": undefined,
                                                          "defaultValueType": undefined,
                                                          "defaultValue": undefined,
                                                          "defaultDisplayValue": undefined,
                                                          "description": undefined,
                                                          "dimension": undefined,
                                                          "excludeFromShifting": false,
                                                          "format": undefined,
                                                          "hidden": false,
                                                          "importAliases": undefined,
                                                          "label": undefined,
                                                          "lookupContainer": undefined,
                                                          "lookupQuery": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupValidator": undefined,
                                                          "measure": undefined,
                                                          "mvEnabled": false,
                                                          "name": "field1",
                                                          "PHI": undefined,
                                                          "propertyId": undefined,
                                                          "propertyURI": undefined,
                                                          "propertyValidators": Immutable.List [],
                                                          "rangeValidators": Immutable.List [],
                                                          "rangeURI": "xsd:string",
                                                          "regexValidators": Immutable.List [],
                                                          "textChoiceValidator": undefined,
                                                          "recommendedVariable": false,
                                                          "required": false,
                                                          "scale": 4000,
                                                          "URL": undefined,
                                                          "shownInDetailsView": true,
                                                          "shownInInsertView": true,
                                                          "shownInUpdateView": true,
                                                          "visible": true,
                                                          "dataType": Immutable.Record {
                                                            "conceptURI": undefined,
                                                            "display": "Text",
                                                            "name": "string",
                                                            "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                            "alternateRangeURI": "xsd:string",
                                                            "shortDisplay": "String",
                                                            "lookupSchema": undefined,
                                                            "lookupQuery": undefined,
                                                          },
                                                          "lookupQueryValue": undefined,
                                                          "lookupType": Immutable.Record {
                                                            "conceptURI": undefined,
                                                            "display": "Lookup",
                                                            "name": "lookup",
                                                            "rangeURI": "xsd:string",
                                                            "alternateRangeURI": undefined,
                                                            "shortDisplay": undefined,
                                                            "lookupSchema": undefined,
                                                            "lookupQuery": undefined,
                                                          },
                                                          "original": {
                                                            "conceptURI": undefined,
                                                            "dataType": Immutable.Record {
                                                              "conceptURI": undefined,
                                                              "display": "Text",
                                                              "name": "string",
                                                              "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                              "alternateRangeURI": "xsd:string",
                                                              "shortDisplay": "String",
                                                              "lookupSchema": undefined,
                                                              "lookupQuery": undefined,
                                                            },
                                                            "name": "field1",
                                                            "rangeURI": undefined,
                                                          },
                                                          "updatedField": false,
                                                          "isPrimaryKey": false,
                                                          "lockType": "NotLocked",
                                                          "wrappedColumnName": undefined,
                                                          "disablePhiLevel": false,
                                                          "lockExistingField": false,
                                                          "sourceOntology": undefined,
                                                          "conceptSubtree": undefined,
                                                          "conceptLabelColumn": undefined,
                                                          "conceptImportColumn": undefined,
                                                          "principalConceptCode": undefined,
                                                          "derivationDataScope": undefined,
                                                          "selected": false,
                                                          "scannable": false,
                                                        },
                                                        Immutable.Record {
                                                          "conceptURI": undefined,
                                                          "conditionalFormats": Immutable.List [],
                                                          "defaultScale": undefined,
                                                          "defaultValueType": undefined,
                                                          "defaultValue": undefined,
                                                          "defaultDisplayValue": undefined,
                                                          "description": undefined,
                                                          "dimension": undefined,
                                                          "excludeFromShifting": false,
                                                          "format": undefined,
                                                          "hidden": false,
                                                          "importAliases": undefined,
                                                          "label": undefined,
                                                          "lookupContainer": undefined,
                                                          "lookupQuery": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupValidator": undefined,
                                                          "measure": undefined,
                                                          "mvEnabled": false,
                                                          "name": "field2",
                                                          "PHI": undefined,
                                                          "propertyId": undefined,
                                                          "propertyURI": undefined,
                                                          "propertyValidators": Immutable.List [],
                                                          "rangeValidators": Immutable.List [],
                                                          "rangeURI": "xsd:int",
                                                          "regexValidators": Immutable.List [],
                                                          "textChoiceValidator": undefined,
                                                          "recommendedVariable": false,
                                                          "required": false,
                                                          "scale": 4000,
                                                          "URL": undefined,
                                                          "shownInDetailsView": true,
                                                          "shownInInsertView": true,
                                                          "shownInUpdateView": true,
                                                          "visible": true,
                                                          "dataType": Immutable.Record {
                                                            "conceptURI": undefined,
                                                            "display": "Integer",
                                                            "name": "int",
                                                            "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                                            "alternateRangeURI": "xsd:int",
                                                            "shortDisplay": undefined,
                                                            "lookupSchema": undefined,
                                                            "lookupQuery": undefined,
                                                          },
                                                          "lookupQueryValue": undefined,
                                                          "lookupType": Immutable.Record {
                                                            "conceptURI": undefined,
                                                            "display": "Lookup",
                                                            "name": "lookup",
                                                            "rangeURI": "xsd:int",
                                                            "alternateRangeURI": undefined,
                                                            "shortDisplay": undefined,
                                                            "lookupSchema": undefined,
                                                            "lookupQuery": undefined,
                                                          },
                                                          "original": {
                                                            "conceptURI": undefined,
                                                            "dataType": Immutable.Record {
                                                              "conceptURI": undefined,
                                                              "display": "Integer",
                                                              "name": "int",
                                                              "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                                              "alternateRangeURI": "xsd:int",
                                                              "shortDisplay": undefined,
                                                              "lookupSchema": undefined,
                                                              "lookupQuery": undefined,
                                                            },
                                                            "name": "field2",
                                                            "rangeURI": undefined,
                                                          },
                                                          "updatedField": false,
                                                          "isPrimaryKey": false,
                                                          "lockType": "NotLocked",
                                                          "wrappedColumnName": undefined,
                                                          "disablePhiLevel": false,
                                                          "lockExistingField": false,
                                                          "sourceOntology": undefined,
                                                          "conceptSubtree": undefined,
                                                          "conceptLabelColumn": undefined,
                                                          "conceptImportColumn": undefined,
                                                          "principalConceptCode": undefined,
                                                          "derivationDataScope": undefined,
                                                          "selected": false,
                                                          "scannable": false,
                                                        },
                                                        Immutable.Record {
                                                          "conceptURI": undefined,
                                                          "conditionalFormats": Immutable.List [],
                                                          "defaultScale": undefined,
                                                          "defaultValueType": undefined,
                                                          "defaultValue": undefined,
                                                          "defaultDisplayValue": undefined,
                                                          "description": undefined,
                                                          "dimension": undefined,
                                                          "excludeFromShifting": false,
                                                          "format": undefined,
                                                          "hidden": false,
                                                          "importAliases": undefined,
                                                          "label": undefined,
                                                          "lookupContainer": undefined,
                                                          "lookupQuery": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupValidator": undefined,
                                                          "measure": undefined,
                                                          "mvEnabled": false,
                                                          "name": "field3",
                                                          "PHI": undefined,
                                                          "propertyId": undefined,
                                                          "propertyURI": undefined,
                                                          "propertyValidators": Immutable.List [],
                                                          "rangeValidators": Immutable.List [],
                                                          "rangeURI": "xsd:dateTime",
                                                          "regexValidators": Immutable.List [],
                                                          "textChoiceValidator": undefined,
                                                          "recommendedVariable": false,
                                                          "required": false,
                                                          "scale": 4000,
                                                          "URL": undefined,
                                                          "shownInDetailsView": true,
                                                          "shownInInsertView": true,
                                                          "shownInUpdateView": true,
                                                          "visible": true,
                                                          "dataType": Immutable.Record {
                                                            "conceptURI": undefined,
                                                            "display": "Date Time",
                                                            "name": "dateTime",
                                                            "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                                                            "alternateRangeURI": "xsd:dateTime",
                                                            "shortDisplay": undefined,
                                                            "lookupSchema": undefined,
                                                            "lookupQuery": undefined,
                                                          },
                                                          "lookupQueryValue": undefined,
                                                          "lookupType": Immutable.Record {
                                                            "conceptURI": undefined,
                                                            "display": "Lookup",
                                                            "name": "lookup",
                                                            "rangeURI": "xsd:dateTime",
                                                            "alternateRangeURI": undefined,
                                                            "shortDisplay": undefined,
                                                            "lookupSchema": undefined,
                                                            "lookupQuery": undefined,
                                                          },
                                                          "original": {
                                                            "conceptURI": undefined,
                                                            "dataType": Immutable.Record {
                                                              "conceptURI": undefined,
                                                              "display": "Date Time",
                                                              "name": "dateTime",
                                                              "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                                                              "alternateRangeURI": "xsd:dateTime",
                                                              "shortDisplay": undefined,
                                                              "lookupSchema": undefined,
                                                              "lookupQuery": undefined,
                                                            },
                                                            "name": "field3",
                                                            "rangeURI": undefined,
                                                          },
                                                          "updatedField": false,
                                                          "isPrimaryKey": false,
                                                          "lockType": "NotLocked",
                                                          "wrappedColumnName": undefined,
                                                          "disablePhiLevel": false,
                                                          "lockExistingField": false,
                                                          "sourceOntology": undefined,
                                                          "conceptSubtree": undefined,
                                                          "conceptLabelColumn": undefined,
                                                          "conceptImportColumn": undefined,
                                                          "principalConceptCode": undefined,
                                                          "derivationDataScope": undefined,
                                                          "selected": false,
                                                          "scannable": false,
                                                        },
                                                      ],
                                                      "indices": Immutable.List [],
                                                      "domainException": undefined,
                                                      "mandatoryFieldNames": Immutable.List [],
                                                      "reservedFieldNames": Immutable.List [],
                                                      "newDesignFields": undefined,
                                                      "instructions": undefined,
                                                      "domainKindName": undefined,
                                                      "schemaName": undefined,
                                                      "queryName": undefined,
                                                    },
                                                  ],
                                                  "editableResults": true,
                                                  "editableRuns": true,
                                                  "exception": undefined,
                                                  "metadataInputFormatHelp": undefined,
                                                  "moduleTransformScripts": undefined,
                                                  "name": "Test Assay Protocol",
                                                  "plateMetadata": undefined,
                                                  "protocolId": 1,
                                                  "protocolParameters": undefined,
                                                  "protocolTransformScripts": undefined,
                                                  "providerName": undefined,
                                                  "saveScriptFiles": false,
                                                  "selectedDetectionMethod": undefined,
                                                  "selectedMetadataInputFormat": undefined,
                                                  "selectedPlateTemplate": undefined,
                                                  "status": "Active",
                                                  "qcEnabled": undefined,
                                                }
                                              }
                                              onChange={[Function]}
                                            >
                                              <Component
                                                appPropertiesOnly={false}
                                                colSize={9}
                                                helpTipBody={
                                                  <p>
                                                    The name for this assay design. Note that this can't be changed after the assay design is created.
                                                  </p>
                                                }
                                                label="Name"
                                                required={true}
                                              >
                                                <Row
                                                  bsClass="row"
                                                  className="margin-top"
                                                  componentClass="div"
                                                >
                                                  <div
                                                    className="margin-top row"
                                                  >
                                                    <Col
                                                      bsClass="col"
                                                      componentClass="div"
                                                      lg={4}
                                                      xs={3}
                                                    >
                                                      <div
                                                        className="col-lg-4 col-xs-3"
                                                      >
                                                        <DomainFieldLabel
                                                          helpTipBody={
                                                            <p>
                                                              The name for this assay design. Note that this can't be changed after the assay design is created.
                                                            </p>
                                                          }
                                                          label="Name"
                                                          required={true}
                                                        >
                                                          <span
                                                            className="domain-no-wrap"
                                                          >
                                                            Name
                                                            <Component
                                                              id="tooltip"
                                                              required={true}
                                                              title="Name"
                                                            >
                                                              <span
                                                                className="label-help-target"
                                                                onMouseOut={[Function]}
                                                                onMouseOver={[Function]}
                                                              >
                                                                <span
                                                                  className="label-help-icon fa fa-question-circle"
                                                                />
                                                                <Overlay
                                                                  animation={[Function]}
                                                                  placement="right"
                                                                  rootClose={false}
                                                                  show={false}
                                                                >
                                                                  <Overlay
                                                                    placement="right"
                                                                    rootClose={false}
                                                                    show={false}
                                                                    transition={[Function]}
                                                                  />
                                                                </Overlay>
                                                              </span>
                                                            </Component>
                                                             *
                                                          </span>
                                                        </DomainFieldLabel>
                                                      </div>
                                                    </Col>
                                                    <Col
                                                      bsClass="col"
                                                      componentClass="div"
                                                      lg={8}
                                                      xs={9}
                                                    >
                                                      <div
                                                        className="col-lg-8 col-xs-9"
                                                      >
                                                        <FormControl
                                                          bsClass="form-control"
                                                          componentClass="input"
                                                          disabled={true}
                                                          id="assay-design-name"
                                                          onChange={[Function]}
                                                          placeholder="Enter a name for this assay"
                                                          type="text"
                                                          value="Test Assay Protocol"
                                                        >
                                                          <input
                                                            className="form-control"
                                                            disabled={true}
                                                            id="assay-design-name"
                                                            onChange={[Function]}
                                                            placeholder="Enter a name for this assay"
                                                            type="text"
                                                            value="Test Assay Protocol"
                                                          />
                                                        </FormControl>
                                                      </div>
                                                    </Col>
                                                  </div>
                                                </Row>
                                              </Component>
                                            </NameInput>
                                            <DescriptionInput
                                              appPropertiesOnly={false}
                                              model={
                                                Immutable.Record {
                                                  "allowBackgroundUpload": true,
                                                  "allowEditableResults": true,
                                                  "allowQCStates": false,
                                                  "allowTransformationScript": false,
                                                  "allowPlateMetadata": false,
                                                  "autoCopyTargetContainer": undefined,
                                                  "autoCopyTargetContainerId": undefined,
                                                  "autoLinkCategory": undefined,
                                                  "availableDetectionMethods": undefined,
                                                  "availableMetadataInputFormats": undefined,
                                                  "availablePlateTemplates": undefined,
                                                  "backgroundUpload": true,
                                                  "description": "My assay protocol for you all to use.",
                                                  "domains": Immutable.List [
                                                    Immutable.Record {
                                                      "name": "Batch Fields",
                                                      "container": undefined,
                                                      "description": undefined,
                                                      "domainURI": undefined,
                                                      "domainId": null,
                                                      "allowFileLinkProperties": false,
                                                      "allowAttachmentProperties": false,
                                                      "allowFlagProperties": true,
                                                      "allowSampleSubjectProperties": true,
                                                      "allowTextChoiceProperties": true,
                                                      "allowTimepointProperties": false,
                                                      "showDefaultValueSettings": false,
                                                      "defaultDefaultValueType": undefined,
                                                      "defaultValueOptions": Immutable.List [],
                                                      "fields": Immutable.List [],
                                                      "indices": Immutable.List [],
                                                      "domainException": undefined,
                                                      "mandatoryFieldNames": Immutable.List [],
                                                      "reservedFieldNames": Immutable.List [],
                                                      "newDesignFields": undefined,
                                                      "instructions": undefined,
                                                      "domainKindName": undefined,
                                                      "schemaName": undefined,
                                                      "queryName": undefined,
                                                    },
                                                    Immutable.Record {
                                                      "name": "Sample Fields",
                                                      "container": undefined,
                                                      "description": undefined,
                                                      "domainURI": undefined,
                                                      "domainId": null,
                                                      "allowFileLinkProperties": false,
                                                      "allowAttachmentProperties": false,
                                                      "allowFlagProperties": true,
                                                      "allowSampleSubjectProperties": true,
                                                      "allowTextChoiceProperties": true,
                                                      "allowTimepointProperties": false,
                                                      "showDefaultValueSettings": false,
                                                      "defaultDefaultValueType": undefined,
                                                      "defaultValueOptions": Immutable.List [],
                                                      "fields": Immutable.List [
                                                        Immutable.Record {
                                                          "conceptURI": undefined,
                                                          "conditionalFormats": Immutable.List [],
                                                          "defaultScale": undefined,
                                                          "defaultValueType": undefined,
                                                          "defaultValue": undefined,
                                                          "defaultDisplayValue": undefined,
                                                          "description": undefined,
                                                          "dimension": undefined,
                                                          "excludeFromShifting": false,
                                                          "format": undefined,
                                                          "hidden": false,
                                                          "importAliases": undefined,
                                                          "label": undefined,
                                                          "lookupContainer": undefined,
                                                          "lookupQuery": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupValidator": undefined,
                                                          "measure": undefined,
                                                          "mvEnabled": false,
                                                          "name": "field1",
                                                          "PHI": undefined,
                                                          "propertyId": undefined,
                                                          "propertyURI": undefined,
                                                          "propertyValidators": Immutable.List [],
                                                          "rangeValidators": Immutable.List [],
                                                          "rangeURI": "xsd:string",
                                                          "regexValidators": Immutable.List [],
                                                          "textChoiceValidator": undefined,
                                                          "recommendedVariable": false,
                                                          "required": false,
                                                          "scale": 4000,
                                                          "URL": undefined,
                                                          "shownInDetailsView": true,
                                                          "shownInInsertView": true,
                                                          "shownInUpdateView": true,
                                                          "visible": true,
                                                          "dataType": Immutable.Record {
                                                            "conceptURI": undefined,
                                                            "display": "Text",
                                                            "name": "string",
                                                            "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                            "alternateRangeURI": "xsd:string",
                                                            "shortDisplay": "String",
                                                            "lookupSchema": undefined,
                                                            "lookupQuery": undefined,
                                                          },
                                                          "lookupQueryValue": undefined,
                                                          "lookupType": Immutable.Record {
                                                            "conceptURI": undefined,
                                                            "display": "Lookup",
                                                            "name": "lookup",
                                                            "rangeURI": "xsd:string",
                                                            "alternateRangeURI": undefined,
                                                            "shortDisplay": undefined,
                                                            "lookupSchema": undefined,
                                                            "lookupQuery": undefined,
                                                          },
                                                          "original": {
                                                            "conceptURI": undefined,
                                                            "dataType": Immutable.Record {
                                                              "conceptURI": undefined,
                                                              "display": "Text",
                                                              "name": "string",
                                                              "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                              "alternateRangeURI": "xsd:string",
                                                              "shortDisplay": "String",
                                                              "lookupSchema": undefined,
                                                              "lookupQuery": undefined,
                                                            },
                                                            "name": "field1",
                                                            "rangeURI": undefined,
                                                          },
                                                          "updatedField": false,
                                                          "isPrimaryKey": false,
                                                          "lockType": "NotLocked",
                                                          "wrappedColumnName": undefined,
                                                          "disablePhiLevel": false,
                                                          "lockExistingField": false,
                                                          "sourceOntology": undefined,
                                                          "conceptSubtree": undefined,
                                                          "conceptLabelColumn": undefined,
                                                          "conceptImportColumn": undefined,
                                                          "principalConceptCode": undefined,
                                                          "derivationDataScope": undefined,
                                                          "selected": false,
                                                          "scannable": false,
                                                        },
                                                        Immutable.Record {
                                                          "conceptURI": undefined,
                                                          "conditionalFormats": Immutable.List [],
                                                          "defaultScale": undefined,
                                                          "defaultValueType": undefined,
                                                          "defaultValue": undefined,
                                                          "defaultDisplayValue": undefined,
                                                          "description": undefined,
                                                          "dimension": undefined,
                                                          "excludeFromShifting": false,
                                                          "format": undefined,
                                                          "hidden": false,
                                                          "importAliases": undefined,
                                                          "label": undefined,
                                                          "lookupContainer": undefined,
                                                          "lookupQuery": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupValidator": undefined,
                                                          "measure": undefined,
                                                          "mvEnabled": false,
                                                          "name": "field2",
                                                          "PHI": undefined,
                                                          "propertyId": undefined,
                                                          "propertyURI": undefined,
                                                          "propertyValidators": Immutable.List [],
                                                          "rangeValidators": Immutable.List [],
                                                          "rangeURI": "xsd:int",
                                                          "regexValidators": Immutable.List [],
                                                          "textChoiceValidator": undefined,
                                                          "recommendedVariable": false,
                                                          "required": false,
                                                          "scale": 4000,
                                                          "URL": undefined,
                                                          "shownInDetailsView": true,
                                                          "shownInInsertView": true,
                                                          "shownInUpdateView": true,
                                                          "visible": true,
                                                          "dataType": Immutable.Record {
                                                            "conceptURI": undefined,
                                                            "display": "Integer",
                                                            "name": "int",
                                                            "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                                            "alternateRangeURI": "xsd:int",
                                                            "shortDisplay": undefined,
                                                            "lookupSchema": undefined,
                                                            "lookupQuery": undefined,
                                                          },
                                                          "lookupQueryValue": undefined,
                                                          "lookupType": Immutable.Record {
                                                            "conceptURI": undefined,
                                                            "display": "Lookup",
                                                            "name": "lookup",
                                                            "rangeURI": "xsd:int",
                                                            "alternateRangeURI": undefined,
                                                            "shortDisplay": undefined,
                                                            "lookupSchema": undefined,
                                                            "lookupQuery": undefined,
                                                          },
                                                          "original": {
                                                            "conceptURI": undefined,
                                                            "dataType": Immutable.Record {
                                                              "conceptURI": undefined,
                                                              "display": "Integer",
                                                              "name": "int",
                                                              "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                                              "alternateRangeURI": "xsd:int",
                                                              "shortDisplay": undefined,
                                                              "lookupSchema": undefined,
                                                              "lookupQuery": undefined,
                                                            },
                                                            "name": "field2",
                                                            "rangeURI": undefined,
                                                          },
                                                          "updatedField": false,
                                                          "isPrimaryKey": false,
                                                          "lockType": "NotLocked",
                                                          "wrappedColumnName": undefined,
                                                          "disablePhiLevel": false,
                                                          "lockExistingField": false,
                                                          "sourceOntology": undefined,
                                                          "conceptSubtree": undefined,
                                                          "conceptLabelColumn": undefined,
                                                          "conceptImportColumn": undefined,
                                                          "principalConceptCode": undefined,
                                                          "derivationDataScope": undefined,
                                                          "selected": false,
                                                          "scannable": false,
                                                        },
                                                        Immutable.Record {
                                                          "conceptURI": undefined,
                                                          "conditionalFormats": Immutable.List [],
                                                          "defaultScale": undefined,
                                                          "defaultValueType": undefined,
                                                          "defaultValue": undefined,
                                                          "defaultDisplayValue": undefined,
                                                          "description": undefined,
                                                          "dimension": undefined,
                                                          "excludeFromShifting": false,
                                                          "format": undefined,
                                                          "hidden": false,
                                                          "importAliases": undefined,
                                                          "label": undefined,
                                                          "lookupContainer": undefined,
                                                          "lookupQuery": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupValidator": undefined,
                                                          "measure": undefined,
                                                          "mvEnabled": false,
                                                          "name": "field3",
                                                          "PHI": undefined,
                                                          "propertyId": undefined,
                                                          "propertyURI": undefined,
                                                          "propertyValidators": Immutable.List [],
                                                          "rangeValidators": Immutable.List [],
                                                          "rangeURI": "xsd:dateTime",
                                                          "regexValidators": Immutable.List [],
                                                          "textChoiceValidator": undefined,
                                                          "recommendedVariable": false,
                                                          "required": false,
                                                          "scale": 4000,
                                                          "URL": undefined,
                                                          "shownInDetailsView": true,
                                                          "shownInInsertView": true,
                                                          "shownInUpdateView": true,
                                                          "visible": true,
                                                          "dataType": Immutable.Record {
                                                            "conceptURI": undefined,
                                                            "display": "Date Time",
                                                            "name": "dateTime",
                                                            "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                                                            "alternateRangeURI": "xsd:dateTime",
                                                            "shortDisplay": undefined,
                                                            "lookupSchema": undefined,
                                                            "lookupQuery": undefined,
                                                          },
                                                          "lookupQueryValue": undefined,
                                                          "lookupType": Immutable.Record {
                                                            "conceptURI": undefined,
                                                            "display": "Lookup",
                                                            "name": "lookup",
                                                            "rangeURI": "xsd:dateTime",
                                                            "alternateRangeURI": undefined,
                                                            "shortDisplay": undefined,
                                                            "lookupSchema": undefined,
                                                            "lookupQuery": undefined,
                                                          },
                                                          "original": {
                                                            "conceptURI": undefined,
                                                            "dataType": Immutable.Record {
                                                              "conceptURI": undefined,
                                                              "display": "Date Time",
                                                              "name": "dateTime",
                                                              "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                                                              "alternateRangeURI": "xsd:dateTime",
                                                              "shortDisplay": undefined,
                                                              "lookupSchema": undefined,
                                                              "lookupQuery": undefined,
                                                            },
                                                            "name": "field3",
                                                            "rangeURI": undefined,
                                                          },
                                                          "updatedField": false,
                                                          "isPrimaryKey": false,
                                                          "lockType": "NotLocked",
                                                          "wrappedColumnName": undefined,
                                                          "disablePhiLevel": false,
                                                          "lockExistingField": false,
                                                          "sourceOntology": undefined,
                                                          "conceptSubtree": undefined,
                                                          "conceptLabelColumn": undefined,
                                                          "conceptImportColumn": undefined,
                                                          "principalConceptCode": undefined,
                                                          "derivationDataScope": undefined,
                                                          "selected": false,
                                                          "scannable": false,
                                                        },
                                                      ],
                                                      "indices": Immutable.List [],
                                                      "domainException": undefined,
                                                      "mandatoryFieldNames": Immutable.List [],
                                                      "reservedFieldNames": Immutable.List [],
                                                      "newDesignFields": undefined,
                                                      "instructions": undefined,
                                                      "domainKindName": undefined,
                                                      "schemaName": undefined,
                                                      "queryName": undefined,
                                                    },
                                                  ],
                                                  "editableResults": true,
                                                  "editableRuns": true,
                                                  "exception": undefined,
                                                  "metadataInputFormatHelp": undefined,
                                                  "moduleTransformScripts": undefined,
                                                  "name": "Test Assay Protocol",
                                                  "plateMetadata": undefined,
                                                  "protocolId": 1,
                                                  "protocolParameters": undefined,
                                                  "protocolTransformScripts": undefined,
                                                  "providerName": undefined,
                                                  "saveScriptFiles": false,
                                                  "selectedDetectionMethod": undefined,
                                                  "selectedMetadataInputFormat": undefined,
                                                  "selectedPlateTemplate": undefined,
                                                  "status": "Active",
                                                  "qcEnabled": undefined,
                                                }
                                              }
                                              onChange={[Function]}
                                            >
                                              <Component
                                                appPropertiesOnly={false}
                                                colSize={9}
                                                helpTipBody={
                                                  <p>
                                                    A short description for this assay design.
                                                  </p>
                                                }
                                                label="Description"
                                              >
                                                <Row
                                                  bsClass="row"
                                                  className="margin-top"
                                                  componentClass="div"
                                                >
                                                  <div
                                                    className="margin-top row"
                                                  >
                                                    <Col
                                                      bsClass="col"
                                                      componentClass="div"
                                                      lg={4}
                                                      xs={3}
                                                    >
                                                      <div
                                                        className="col-lg-4 col-xs-3"
                                                      >
                                                        <DomainFieldLabel
                                                          helpTipBody={
                                                            <p>
                                                              A short description for this assay design.
                                                            </p>
                                                          }
                                                          label="Description"
                                                        >
                                                          <span
                                                            className="domain-no-wrap"
                                                          >
                                                            Description
                                                            <Component
                                                              id="tooltip"
                                                              title="Description"
                                                            >
                                                              <span
                                                                className="label-help-target"
                                                                onMouseOut={[Function]}
                                                                onMouseOver={[Function]}
                                                              >
                                                                <span
                                                                  className="label-help-icon fa fa-question-circle"
                                                                />
                                                                <Overlay
                                                                  animation={[Function]}
                                                                  placement="right"
                                                                  rootClose={false}
                                                                  show={false}
                                                                >
                                                                  <Overlay
                                                                    placement="right"
                                                                    rootClose={false}
                                                                    show={false}
                                                                    transition={[Function]}
                                                                  />
                                                                </Overlay>
                                                              </span>
                                                            </Component>
                                                          </span>
                                                        </DomainFieldLabel>
                                                      </div>
                                                    </Col>
                                                    <Col
                                                      bsClass="col"
                                                      componentClass="div"
                                                      lg={8}
                                                      xs={9}
                                                    >
                                                      <div
                                                        className="col-lg-8 col-xs-9"
                                                      >
                                                        <textarea
                                                          className="form-control textarea-noresize"
                                                          id="assay-design-description"
                                                          onChange={[Function]}
                                                          value="My assay protocol for you all to use."
                                                        />
                                                      </div>
                                                    </Col>
                                                  </div>
                                                </Row>
                                              </Component>
                                            </DescriptionInput>
                                          </div>
                                          <div
                                            className="domain-field-padding-bottom"
                                          >
                                            <SectionHeading
                                              title="Editing Settings"
                                            >
                                              <div
                                                className="domain-field-section-heading"
                                              >
                                                Editing Settings
                                              </div>
                                            </SectionHeading>
                                            <EditableRunsInput
                                              appPropertiesOnly={false}
                                              model={
                                                Immutable.Record {
                                                  "allowBackgroundUpload": true,
                                                  "allowEditableResults": true,
                                                  "allowQCStates": false,
                                                  "allowTransformationScript": false,
                                                  "allowPlateMetadata": false,
                                                  "autoCopyTargetContainer": undefined,
                                                  "autoCopyTargetContainerId": undefined,
                                                  "autoLinkCategory": undefined,
                                                  "availableDetectionMethods": undefined,
                                                  "availableMetadataInputFormats": undefined,
                                                  "availablePlateTemplates": undefined,
                                                  "backgroundUpload": true,
                                                  "description": "My assay protocol for you all to use.",
                                                  "domains": Immutable.List [
                                                    Immutable.Record {
                                                      "name": "Batch Fields",
                                                      "container": undefined,
                                                      "description": undefined,
                                                      "domainURI": undefined,
                                                      "domainId": null,
                                                      "allowFileLinkProperties": false,
                                                      "allowAttachmentProperties": false,
                                                      "allowFlagProperties": true,
                                                      "allowSampleSubjectProperties": true,
                                                      "allowTextChoiceProperties": true,
                                                      "allowTimepointProperties": false,
                                                      "showDefaultValueSettings": false,
                                                      "defaultDefaultValueType": undefined,
                                                      "defaultValueOptions": Immutable.List [],
                                                      "fields": Immutable.List [],
                                                      "indices": Immutable.List [],
                                                      "domainException": undefined,
                                                      "mandatoryFieldNames": Immutable.List [],
                                                      "reservedFieldNames": Immutable.List [],
                                                      "newDesignFields": undefined,
                                                      "instructions": undefined,
                                                      "domainKindName": undefined,
                                                      "schemaName": undefined,
                                                      "queryName": undefined,
                                                    },
                                                    Immutable.Record {
                                                      "name": "Sample Fields",
                                                      "container": undefined,
                                                      "description": undefined,
                                                      "domainURI": undefined,
                                                      "domainId": null,
                                                      "allowFileLinkProperties": false,
                                                      "allowAttachmentProperties": false,
                                                      "allowFlagProperties": true,
                                                      "allowSampleSubjectProperties": true,
                                                      "allowTextChoiceProperties": true,
                                                      "allowTimepointProperties": false,
                                                      "showDefaultValueSettings": false,
                                                      "defaultDefaultValueType": undefined,
                                                      "defaultValueOptions": Immutable.List [],
                                                      "fields": Immutable.List [
                                                        Immutable.Record {
                                                          "conceptURI": undefined,
                                                          "conditionalFormats": Immutable.List [],
                                                          "defaultScale": undefined,
                                                          "defaultValueType": undefined,
                                                          "defaultValue": undefined,
                                                          "defaultDisplayValue": undefined,
                                                          "description": undefined,
                                                          "dimension": undefined,
                                                          "excludeFromShifting": false,
                                                          "format": undefined,
                                                          "hidden": false,
                                                          "importAliases": undefined,
                                                          "label": undefined,
                                                          "lookupContainer": undefined,
                                                          "lookupQuery": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupValidator": undefined,
                                                          "measure": undefined,
                                                          "mvEnabled": false,
                                                          "name": "field1",
                                                          "PHI": undefined,
                                                          "propertyId": undefined,
                                                          "propertyURI": undefined,
                                                          "propertyValidators": Immutable.List [],
                                                          "rangeValidators": Immutable.List [],
                                                          "rangeURI": "xsd:string",
                                                          "regexValidators": Immutable.List [],
                                                          "textChoiceValidator": undefined,
                                                          "recommendedVariable": false,
                                                          "required": false,
                                                          "scale": 4000,
                                                          "URL": undefined,
                                                          "shownInDetailsView": true,
                                                          "shownInInsertView": true,
                                                          "shownInUpdateView": true,
                                                          "visible": true,
                                                          "dataType": Immutable.Record {
                                                            "conceptURI": undefined,
                                                            "display": "Text",
                                                            "name": "string",
                                                            "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                            "alternateRangeURI": "xsd:string",
                                                            "shortDisplay": "String",
                                                            "lookupSchema": undefined,
                                                            "lookupQuery": undefined,
                                                          },
                                                          "lookupQueryValue": undefined,
                                                          "lookupType": Immutable.Record {
                                                            "conceptURI": undefined,
                                                            "display": "Lookup",
                                                            "name": "lookup",
                                                            "rangeURI": "xsd:string",
                                                            "alternateRangeURI": undefined,
                                                            "shortDisplay": undefined,
                                                            "lookupSchema": undefined,
                                                            "lookupQuery": undefined,
                                                          },
                                                          "original": {
                                                            "conceptURI": undefined,
                                                            "dataType": Immutable.Record {
                                                              "conceptURI": undefined,
                                                              "display": "Text",
                                                              "name": "string",
                                                              "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                              "alternateRangeURI": "xsd:string",
                                                              "shortDisplay": "String",
                                                              "lookupSchema": undefined,
                                                              "lookupQuery": undefined,
                                                            },
                                                            "name": "field1",
                                                            "rangeURI": undefined,
                                                          },
                                                          "updatedField": false,
                                                          "isPrimaryKey": false,
                                                          "lockType": "NotLocked",
                                                          "wrappedColumnName": undefined,
                                                          "disablePhiLevel": false,
                                                          "lockExistingField": false,
                                                          "sourceOntology": undefined,
                                                          "conceptSubtree": undefined,
                                                          "conceptLabelColumn": undefined,
                                                          "conceptImportColumn": undefined,
                                                          "principalConceptCode": undefined,
                                                          "derivationDataScope": undefined,
                                                          "selected": false,
                                                          "scannable": false,
                                                        },
                                                        Immutable.Record {
                                                          "conceptURI": undefined,
                                                          "conditionalFormats": Immutable.List [],
                                                          "defaultScale": undefined,
                                                          "defaultValueType": undefined,
                                                          "defaultValue": undefined,
                                                          "defaultDisplayValue": undefined,
                                                          "description": undefined,
                                                          "dimension": undefined,
                                                          "excludeFromShifting": false,
                                                          "format": undefined,
                                                          "hidden": false,
                                                          "importAliases": undefined,
                                                          "label": undefined,
                                                          "lookupContainer": undefined,
                                                          "lookupQuery": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupValidator": undefined,
                                                          "measure": undefined,
                                                          "mvEnabled": false,
                                                          "name": "field2",
                                                          "PHI": undefined,
                                                          "propertyId": undefined,
                                                          "propertyURI": undefined,
                                                          "propertyValidators": Immutable.List [],
                                                          "rangeValidators": Immutable.List [],
                                                          "rangeURI": "xsd:int",
                                                          "regexValidators": Immutable.List [],
                                                          "textChoiceValidator": undefined,
                                                          "recommendedVariable": false,
                                                          "required": false,
                                                          "scale": 4000,
                                                          "URL": undefined,
                                                          "shownInDetailsView": true,
                                                          "shownInInsertView": true,
                                                          "shownInUpdateView": true,
                                                          "visible": true,
                                                          "dataType": Immutable.Record {
                                                            "conceptURI": undefined,
                                                            "display": "Integer",
                                                            "name": "int",
                                                            "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                                            "alternateRangeURI": "xsd:int",
                                                            "shortDisplay": undefined,
                                                            "lookupSchema": undefined,
                                                            "lookupQuery": undefined,
                                                          },
                                                          "lookupQueryValue": undefined,
                                                          "lookupType": Immutable.Record {
                                                            "conceptURI": undefined,
                                                            "display": "Lookup",
                                                            "name": "lookup",
                                                            "rangeURI": "xsd:int",
                                                            "alternateRangeURI": undefined,
                                                            "shortDisplay": undefined,
                                                            "lookupSchema": undefined,
                                                            "lookupQuery": undefined,
                                                          },
                                                          "original": {
                                                            "conceptURI": undefined,
                                                            "dataType": Immutable.Record {
                                                              "conceptURI": undefined,
                                                              "display": "Integer",
                                                              "name": "int",
                                                              "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                                              "alternateRangeURI": "xsd:int",
                                                              "shortDisplay": undefined,
                                                              "lookupSchema": undefined,
                                                              "lookupQuery": undefined,
                                                            },
                                                            "name": "field2",
                                                            "rangeURI": undefined,
                                                          },
                                                          "updatedField": false,
                                                          "isPrimaryKey": false,
                                                          "lockType": "NotLocked",
                                                          "wrappedColumnName": undefined,
                                                          "disablePhiLevel": false,
                                                          "lockExistingField": false,
                                                          "sourceOntology": undefined,
                                                          "conceptSubtree": undefined,
                                                          "conceptLabelColumn": undefined,
                                                          "conceptImportColumn": undefined,
                                                          "principalConceptCode": undefined,
                                                          "derivationDataScope": undefined,
                                                          "selected": false,
                                                          "scannable": false,
                                                        },
                                                        Immutable.Record {
                                                          "conceptURI": undefined,
                                                          "conditionalFormats": Immutable.List [],
                                                          "defaultScale": undefined,
                                                          "defaultValueType": undefined,
                                                          "defaultValue": undefined,
                                                          "defaultDisplayValue": undefined,
                                                          "description": undefined,
                                                          "dimension": undefined,
                                                          "excludeFromShifting": false,
                                                          "format": undefined,
                                                          "hidden": false,
                                                          "importAliases": undefined,
                                                          "label": undefined,
                                                          "lookupContainer": undefined,
                                                          "lookupQuery": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupValidator": undefined,
                                                          "measure": undefined,
                                                          "mvEnabled": false,
                                                          "name": "field3",
                                                          "PHI": undefined,
                                                          "propertyId": undefined,
                                                          "propertyURI": undefined,
                                                          "propertyValidators": Immutable.List [],
                                                          "rangeValidators": Immutable.List [],
                                                          "rangeURI": "xsd:dateTime",
                                                          "regexValidators": Immutable.List [],
                                                          "textChoiceValidator": undefined,
                                                          "recommendedVariable": false,
                                                          "required": false,
                                                          "scale": 4000,
                                                          "URL": undefined,
                                                          "shownInDetailsView": true,
                                                          "shownInInsertView": true,
                                                          "shownInUpdateView": true,
                                                          "visible": true,
                                                          "dataType": Immutable.Record {
                                                            "conceptURI": undefined,
                                                            "display": "Date Time",
                                                            "name": "dateTime",
                                                            "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                                                            "alternateRangeURI": "xsd:dateTime",
                                                            "shortDisplay": undefined,
                                                            "lookupSchema": undefined,
                                                            "lookupQuery": undefined,
                                                          },
                                                          "lookupQueryValue": undefined,
                                                          "lookupType": Immutable.Record {
                                                            "conceptURI": undefined,
                                                            "display": "Lookup",
                                                            "name": "lookup",
                                                            "rangeURI": "xsd:dateTime",
                                                            "alternateRangeURI": undefined,
                                                            "shortDisplay": undefined,
                                                            "lookupSchema": undefined,
                                                            "lookupQuery": undefined,
                                                          },
                                                          "original": {
                                                            "conceptURI": undefined,
                                                            "dataType": Immutable.Record {
                                                              "conceptURI": undefined,
                                                              "display": "Date Time",
                                                              "name": "dateTime",
                                                              "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                                                              "alternateRangeURI": "xsd:dateTime",
                                                              "shortDisplay": undefined,
                                                              "lookupSchema": undefined,
                                                              "lookupQuery": undefined,
                                                            },
                                                            "name": "field3",
                                                            "rangeURI": undefined,
                                                          },
                                                          "updatedField": false,
                                                          "isPrimaryKey": false,
                                                          "lockType": "NotLocked",
                                                          "wrappedColumnName": undefined,
                                                          "disablePhiLevel": false,
                                                          "lockExistingField": false,
                                                          "sourceOntology": undefined,
                                                          "conceptSubtree": undefined,
                                                          "conceptLabelColumn": undefined,
                                                          "conceptImportColumn": undefined,
                                                          "principalConceptCode": undefined,
                                                          "derivationDataScope": undefined,
                                                          "selected": false,
                                                          "scannable": false,
                                                        },
                                                      ],
                                                      "indices": Immutable.List [],
                                                      "domainException": undefined,
                                                      "mandatoryFieldNames": Immutable.List [],
                                                      "reservedFieldNames": Immutable.List [],
                                                      "newDesignFields": undefined,
                                                      "instructions": undefined,
                                                      "domainKindName": undefined,
                                                      "schemaName": undefined,
                                                      "queryName": undefined,
                                                    },
                                                  ],
                                                  "editableResults": true,
                                                  "editableRuns": true,
                                                  "exception": undefined,
                                                  "metadataInputFormatHelp": undefined,
                                                  "moduleTransformScripts": undefined,
                                                  "name": "Test Assay Protocol",
                                                  "plateMetadata": undefined,
                                                  "protocolId": 1,
                                                  "protocolParameters": undefined,
                                                  "protocolTransformScripts": undefined,
                                                  "providerName": undefined,
                                                  "saveScriptFiles": false,
                                                  "selectedDetectionMethod": undefined,
                                                  "selectedMetadataInputFormat": undefined,
                                                  "selectedPlateTemplate": undefined,
                                                  "status": "Active",
                                                  "qcEnabled": undefined,
                                                }
                                              }
                                              onChange={[Function]}
                                            >
                                              <Component
                                                appPropertiesOnly={false}
                                                colSize={9}
                                                helpTipBody={
                                                  <p>
                                                    If enabled, users with sufficient permissions can edit values at the run level after the initial import is complete. These changes will be audited.
                                                  </p>
                                                }
                                                label="Editable Runs"
                                              >
                                                <Row
                                                  bsClass="row"
                                                  className="margin-top"
                                                  componentClass="div"
                                                >
                                                  <div
                                                    className="margin-top row"
                                                  >
                                                    <Col
                                                      bsClass="col"
                                                      componentClass="div"
                                                      lg={4}
                                                      xs={3}
                                                    >
                                                      <div
                                                        className="col-lg-4 col-xs-3"
                                                      >
                                                        <DomainFieldLabel
                                                          helpTipBody={
                                                            <p>
                                                              If enabled, users with sufficient permissions can edit values at the run level after the initial import is complete. These changes will be audited.
                                                            </p>
                                                          }
                                                          label="Editable Runs"
                                                        >
                                                          Editable 
                                                          <span
                                                            className="domain-no-wrap"
                                                          >
                                                            Runs
                                                            <Component
                                                              id="tooltip"
                                                              title="Editable Runs"
                                                            >
                                                              <span
                                                                className="label-help-target"
                                                                onMouseOut={[Function]}
                                                                onMouseOver={[Function]}
                                                              >
                                                                <span
                                                                  className="label-help-icon fa fa-question-circle"
                                                                />
                                                                <Overlay
                                                                  animation={[Function]}
                                                                  placement="right"
                                                                  rootClose={false}
                                                                  show={false}
                                                                >
                                                                  <Overlay
                                                                    placement="right"
                                                                    rootClose={false}
                                                                    show={false}
                                                                    transition={[Function]}
                                                                  />
                                                                </Overlay>
                                                              </span>
                                                            </Component>
                                                          </span>
                                                        </DomainFieldLabel>
                                                      </div>
                                                    </Col>
                                                    <Col
                                                      bsClass="col"
                                                      componentClass="div"
                                                      lg={8}
                                                      xs={9}
                                                    >
                                                      <div
                                                        className="col-lg-8 col-xs-9"
                                                      >
                                                        <input
                                                          checked={true}
                                                          id="assay-design-editableRuns"
                                                          onChange={[Function]}
                                                          type="checkbox"
                                                        />
                                                      </div>
                                                    </Col>
                                                  </div>
                                                </Row>
                                              </Component>
                                            </EditableRunsInput>
                                            <EditableResultsInput
                                              appPropertiesOnly={false}
                                              model={
                                                Immutable.Record {
                                                  "allowBackgroundUpload": true,
                                                  "allowEditableResults": true,
                                                  "allowQCStates": false,
                                                  "allowTransformationScript": false,
                                                  "allowPlateMetadata": false,
                                                  "autoCopyTargetContainer": undefined,
                                                  "autoCopyTargetContainerId": undefined,
                                                  "autoLinkCategory": undefined,
                                                  "availableDetectionMethods": undefined,
                                                  "availableMetadataInputFormats": undefined,
                                                  "availablePlateTemplates": undefined,
                                                  "backgroundUpload": true,
                                                  "description": "My assay protocol for you all to use.",
                                                  "domains": Immutable.List [
                                                    Immutable.Record {
                                                      "name": "Batch Fields",
                                                      "container": undefined,
                                                      "description": undefined,
                                                      "domainURI": undefined,
                                                      "domainId": null,
                                                      "allowFileLinkProperties": false,
                                                      "allowAttachmentProperties": false,
                                                      "allowFlagProperties": true,
                                                      "allowSampleSubjectProperties": true,
                                                      "allowTextChoiceProperties": true,
                                                      "allowTimepointProperties": false,
                                                      "showDefaultValueSettings": false,
                                                      "defaultDefaultValueType": undefined,
                                                      "defaultValueOptions": Immutable.List [],
                                                      "fields": Immutable.List [],
                                                      "indices": Immutable.List [],
                                                      "domainException": undefined,
                                                      "mandatoryFieldNames": Immutable.List [],
                                                      "reservedFieldNames": Immutable.List [],
                                                      "newDesignFields": undefined,
                                                      "instructions": undefined,
                                                      "domainKindName": undefined,
                                                      "schemaName": undefined,
                                                      "queryName": undefined,
                                                    },
                                                    Immutable.Record {
                                                      "name": "Sample Fields",
                                                      "container": undefined,
                                                      "description": undefined,
                                                      "domainURI": undefined,
                                                      "domainId": null,
                                                      "allowFileLinkProperties": false,
                                                      "allowAttachmentProperties": false,
                                                      "allowFlagProperties": true,
                                                      "allowSampleSubjectProperties": true,
                                                      "allowTextChoiceProperties": true,
                                                      "allowTimepointProperties": false,
                                                      "showDefaultValueSettings": false,
                                                      "defaultDefaultValueType": undefined,
                                                      "defaultValueOptions": Immutable.List [],
                                                      "fields": Immutable.List [
                                                        Immutable.Record {
                                                          "conceptURI": undefined,
                                                          "conditionalFormats": Immutable.List [],
                                                          "defaultScale": undefined,
                                                          "defaultValueType": undefined,
                                                          "defaultValue": undefined,
                                                          "defaultDisplayValue": undefined,
                                                          "description": undefined,
                                                          "dimension": undefined,
                                                          "excludeFromShifting": false,
                                                          "format": undefined,
                                                          "hidden": false,
                                                          "importAliases": undefined,
                                                          "label": undefined,
                                                          "lookupContainer": undefined,
                                                          "lookupQuery": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupValidator": undefined,
                                                          "measure": undefined,
                                                          "mvEnabled": false,
                                                          "name": "field1",
                                                          "PHI": undefined,
                                                          "propertyId": undefined,
                                                          "propertyURI": undefined,
                                                          "propertyValidators": Immutable.List [],
                                                          "rangeValidators": Immutable.List [],
                                                          "rangeURI": "xsd:string",
                                                          "regexValidators": Immutable.List [],
                                                          "textChoiceValidator": undefined,
                                                          "recommendedVariable": false,
                                                          "required": false,
                                                          "scale": 4000,
                                                          "URL": undefined,
                                                          "shownInDetailsView": true,
                                                          "shownInInsertView": true,
                                                          "shownInUpdateView": true,
                                                          "visible": true,
                                                          "dataType": Immutable.Record {
                                                            "conceptURI": undefined,
                                                            "display": "Text",
                                                            "name": "string",
                                                            "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                            "alternateRangeURI": "xsd:string",
                                                            "shortDisplay": "String",
                                                            "lookupSchema": undefined,
                                                            "lookupQuery": undefined,
                                                          },
                                                          "lookupQueryValue": undefined,
                                                          "lookupType": Immutable.Record {
                                                            "conceptURI": undefined,
                                                            "display": "Lookup",
                                                            "name": "lookup",
                                                            "rangeURI": "xsd:string",
                                                            "alternateRangeURI": undefined,
                                                            "shortDisplay": undefined,
                                                            "lookupSchema": undefined,
                                                            "lookupQuery": undefined,
                                                          },
                                                          "original": {
                                                            "conceptURI": undefined,
                                                            "dataType": Immutable.Record {
                                                              "conceptURI": undefined,
                                                              "display": "Text",
                                                              "name": "string",
                                                              "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                              "alternateRangeURI": "xsd:string",
                                                              "shortDisplay": "String",
                                                              "lookupSchema": undefined,
                                                              "lookupQuery": undefined,
                                                            },
                                                            "name": "field1",
                                                            "rangeURI": undefined,
                                                          },
                                                          "updatedField": false,
                                                          "isPrimaryKey": false,
                                                          "lockType": "NotLocked",
                                                          "wrappedColumnName": undefined,
                                                          "disablePhiLevel": false,
                                                          "lockExistingField": false,
                                                          "sourceOntology": undefined,
                                                          "conceptSubtree": undefined,
                                                          "conceptLabelColumn": undefined,
                                                          "conceptImportColumn": undefined,
                                                          "principalConceptCode": undefined,
                                                          "derivationDataScope": undefined,
                                                          "selected": false,
                                                          "scannable": false,
                                                        },
                                                        Immutable.Record {
                                                          "conceptURI": undefined,
                                                          "conditionalFormats": Immutable.List [],
                                                          "defaultScale": undefined,
                                                          "defaultValueType": undefined,
                                                          "defaultValue": undefined,
                                                          "defaultDisplayValue": undefined,
                                                          "description": undefined,
                                                          "dimension": undefined,
                                                          "excludeFromShifting": false,
                                                          "format": undefined,
                                                          "hidden": false,
                                                          "importAliases": undefined,
                                                          "label": undefined,
                                                          "lookupContainer": undefined,
                                                          "lookupQuery": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupValidator": undefined,
                                                          "measure": undefined,
                                                          "mvEnabled": false,
                                                          "name": "field2",
                                                          "PHI": undefined,
                                                          "propertyId": undefined,
                                                          "propertyURI": undefined,
                                                          "propertyValidators": Immutable.List [],
                                                          "rangeValidators": Immutable.List [],
                                                          "rangeURI": "xsd:int",
                                                          "regexValidators": Immutable.List [],
                                                          "textChoiceValidator": undefined,
                                                          "recommendedVariable": false,
                                                          "required": false,
                                                          "scale": 4000,
                                                          "URL": undefined,
                                                          "shownInDetailsView": true,
                                                          "shownInInsertView": true,
                                                          "shownInUpdateView": true,
                                                          "visible": true,
                                                          "dataType": Immutable.Record {
                                                            "conceptURI": undefined,
                                                            "display": "Integer",
                                                            "name": "int",
                                                            "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                                            "alternateRangeURI": "xsd:int",
                                                            "shortDisplay": undefined,
                                                            "lookupSchema": undefined,
                                                            "lookupQuery": undefined,
                                                          },
                                                          "lookupQueryValue": undefined,
                                                          "lookupType": Immutable.Record {
                                                            "conceptURI": undefined,
                                                            "display": "Lookup",
                                                            "name": "lookup",
                                                            "rangeURI": "xsd:int",
                                                            "alternateRangeURI": undefined,
                                                            "shortDisplay": undefined,
                                                            "lookupSchema": undefined,
                                                            "lookupQuery": undefined,
                                                          },
                                                          "original": {
                                                            "conceptURI": undefined,
                                                            "dataType": Immutable.Record {
                                                              "conceptURI": undefined,
                                                              "display": "Integer",
                                                              "name": "int",
                                                              "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                                              "alternateRangeURI": "xsd:int",
                                                              "shortDisplay": undefined,
                                                              "lookupSchema": undefined,
                                                              "lookupQuery": undefined,
                                                            },
                                                            "name": "field2",
                                                            "rangeURI": undefined,
                                                          },
                                                          "updatedField": false,
                                                          "isPrimaryKey": false,
                                                          "lockType": "NotLocked",
                                                          "wrappedColumnName": undefined,
                                                          "disablePhiLevel": false,
                                                          "lockExistingField": false,
                                                          "sourceOntology": undefined,
                                                          "conceptSubtree": undefined,
                                                          "conceptLabelColumn": undefined,
                                                          "conceptImportColumn": undefined,
                                                          "principalConceptCode": undefined,
                                                          "derivationDataScope": undefined,
                                                          "selected": false,
                                                          "scannable": false,
                                                        },
                                                        Immutable.Record {
                                                          "conceptURI": undefined,
                                                          "conditionalFormats": Immutable.List [],
                                                          "defaultScale": undefined,
                                                          "defaultValueType": undefined,
                                                          "defaultValue": undefined,
                                                          "defaultDisplayValue": undefined,
                                                          "description": undefined,
                                                          "dimension": undefined,
                                                          "excludeFromShifting": false,
                                                          "format": undefined,
                                                          "hidden": false,
                                                          "importAliases": undefined,
                                                          "label": undefined,
                                                          "lookupContainer": undefined,
                                                          "lookupQuery": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupValidator": undefined,
                                                          "measure": undefined,
                                                          "mvEnabled": false,
                                                          "name": "field3",
                                                          "PHI": undefined,
                                                          "propertyId": undefined,
                                                          "propertyURI": undefined,
                                                          "propertyValidators": Immutable.List [],
                                                          "rangeValidators": Immutable.List [],
                                                          "rangeURI": "xsd:dateTime",
                                                          "regexValidators": Immutable.List [],
                                                          "textChoiceValidator": undefined,
                                                          "recommendedVariable": false,
                                                          "required": false,
                                                          "scale": 4000,
                                                          "URL": undefined,
                                                          "shownInDetailsView": true,
                                                          "shownInInsertView": true,
                                                          "shownInUpdateView": true,
                                                          "visible": true,
                                                          "dataType": Immutable.Record {
                                                            "conceptURI": undefined,
                                                            "display": "Date Time",
                                                            "name": "dateTime",
                                                            "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                                                            "alternateRangeURI": "xsd:dateTime",
                                                            "shortDisplay": undefined,
                                                            "lookupSchema": undefined,
                                                            "lookupQuery": undefined,
                                                          },
                                                          "lookupQueryValue": undefined,
                                                          "lookupType": Immutable.Record {
                                                            "conceptURI": undefined,
                                                            "display": "Lookup",
                                                            "name": "lookup",
                                                            "rangeURI": "xsd:dateTime",
                                                            "alternateRangeURI": undefined,
                                                            "shortDisplay": undefined,
                                                            "lookupSchema": undefined,
                                                            "lookupQuery": undefined,
                                                          },
                                                          "original": {
                                                            "conceptURI": undefined,
                                                            "dataType": Immutable.Record {
                                                              "conceptURI": undefined,
                                                              "display": "Date Time",
                                                              "name": "dateTime",
                                                              "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                                                              "alternateRangeURI": "xsd:dateTime",
                                                              "shortDisplay": undefined,
                                                              "lookupSchema": undefined,
                                                              "lookupQuery": undefined,
                                                            },
                                                            "name": "field3",
                                                            "rangeURI": undefined,
                                                          },
                                                          "updatedField": false,
                                                          "isPrimaryKey": false,
                                                          "lockType": "NotLocked",
                                                          "wrappedColumnName": undefined,
                                                          "disablePhiLevel": false,
                                                          "lockExistingField": false,
                                                          "sourceOntology": undefined,
                                                          "conceptSubtree": undefined,
                                                          "conceptLabelColumn": undefined,
                                                          "conceptImportColumn": undefined,
                                                          "principalConceptCode": undefined,
                                                          "derivationDataScope": undefined,
                                                          "selected": false,
                                                          "scannable": false,
                                                        },
                                                      ],
                                                      "indices": Immutable.List [],
                                                      "domainException": undefined,
                                                      "mandatoryFieldNames": Immutable.List [],
                                                      "reservedFieldNames": Immutable.List [],
                                                      "newDesignFields": undefined,
                                                      "instructions": undefined,
                                                      "domainKindName": undefined,
                                                      "schemaName": undefined,
                                                      "queryName": undefined,
                                                    },
                                                  ],
                                                  "editableResults": true,
                                                  "editableRuns": true,
                                                  "exception": undefined,
                                                  "metadataInputFormatHelp": undefined,
                                                  "moduleTransformScripts": undefined,
                                                  "name": "Test Assay Protocol",
                                                  "plateMetadata": undefined,
                                                  "protocolId": 1,
                                                  "protocolParameters": undefined,
                                                  "protocolTransformScripts": undefined,
                                                  "providerName": undefined,
                                                  "saveScriptFiles": false,
                                                  "selectedDetectionMethod": undefined,
                                                  "selectedMetadataInputFormat": undefined,
                                                  "selectedPlateTemplate": undefined,
                                                  "status": "Active",
                                                  "qcEnabled": undefined,
                                                }
                                              }
                                              onChange={[Function]}
                                            >
                                              <Component
                                                appPropertiesOnly={false}
                                                colSize={9}
                                                helpTipBody={
                                                  <p>
                                                    If enabled, users with sufficient permissions can edit and delete at the individual results row level after the initial import is complete. New result rows cannot be added to existing runs. These changes will be audited.
                                                  </p>
                                                }
                                                label="Editable Results"
                                              >
                                                <Row
                                                  bsClass="row"
                                                  className="margin-top"
                                                  componentClass="div"
                                                >
                                                  <div
                                                    className="margin-top row"
                                                  >
                                                    <Col
                                                      bsClass="col"
                                                      componentClass="div"
                                                      lg={4}
                                                      xs={3}
                                                    >
                                                      <div
                                                        className="col-lg-4 col-xs-3"
                                                      >
                                                        <DomainFieldLabel
                                                          helpTipBody={
                                                            <p>
                                                              If enabled, users with sufficient permissions can edit and delete at the individual results row level after the initial import is complete. New result rows cannot be added to existing runs. These changes will be audited.
                                                            </p>
                                                          }
                                                          label="Editable Results"
                                                        >
                                                          Editable 
                                                          <span
                                                            className="domain-no-wrap"
                                                          >
                                                            Results
                                                            <Component
                                                              id="tooltip"
                                                              title="Editable Results"
                                                            >
                                                              <span
                                                                className="label-help-target"
                                                                onMouseOut={[Function]}
                                                                onMouseOver={[Function]}
                                                              >
                                                                <span
                                                                  className="label-help-icon fa fa-question-circle"
                                                                />
                                                                <Overlay
                                                                  animation={[Function]}
                                                                  placement="right"
                                                                  rootClose={false}
                                                                  show={false}
                                                                >
                                                                  <Overlay
                                                                    placement="right"
                                                                    rootClose={false}
                                                                    show={false}
                                                                    transition={[Function]}
                                                                  />
                                                                </Overlay>
                                                              </span>
                                                            </Component>
                                                          </span>
                                                        </DomainFieldLabel>
                                                      </div>
                                                    </Col>
                                                    <Col
                                                      bsClass="col"
                                                      componentClass="div"
                                                      lg={8}
                                                      xs={9}
                                                    >
                                                      <div
                                                        className="col-lg-8 col-xs-9"
                                                      >
                                                        <input
                                                          checked={true}
                                                          id="assay-design-editableResults"
                                                          onChange={[Function]}
                                                          type="checkbox"
                                                        />
                                                      </div>
                                                    </Col>
                                                  </div>
                                                </Row>
                                              </Component>
                                            </EditableResultsInput>
                                          </div>
                                        </div>
                                      </Col>
                                      <Col
                                        bsClass="col"
                                        componentClass="div"
                                        lg={6}
                                        xs={12}
                                      >
                                        <div
                                          className="col-lg-6 col-xs-12"
                                        >
                                          <div
                                            className="domain-field-padding-bottom"
                                          >
                                            <SectionHeading
                                              title="Import Settings"
                                            >
                                              <div
                                                className="domain-field-section-heading"
                                              >
                                                Import Settings
                                              </div>
                                            </SectionHeading>
                                            <BackgroundUploadInput
                                              model={
                                                Immutable.Record {
                                                  "allowBackgroundUpload": true,
                                                  "allowEditableResults": true,
                                                  "allowQCStates": false,
                                                  "allowTransformationScript": false,
                                                  "allowPlateMetadata": false,
                                                  "autoCopyTargetContainer": undefined,
                                                  "autoCopyTargetContainerId": undefined,
                                                  "autoLinkCategory": undefined,
                                                  "availableDetectionMethods": undefined,
                                                  "availableMetadataInputFormats": undefined,
                                                  "availablePlateTemplates": undefined,
                                                  "backgroundUpload": true,
                                                  "description": "My assay protocol for you all to use.",
                                                  "domains": Immutable.List [
                                                    Immutable.Record {
                                                      "name": "Batch Fields",
                                                      "container": undefined,
                                                      "description": undefined,
                                                      "domainURI": undefined,
                                                      "domainId": null,
                                                      "allowFileLinkProperties": false,
                                                      "allowAttachmentProperties": false,
                                                      "allowFlagProperties": true,
                                                      "allowSampleSubjectProperties": true,
                                                      "allowTextChoiceProperties": true,
                                                      "allowTimepointProperties": false,
                                                      "showDefaultValueSettings": false,
                                                      "defaultDefaultValueType": undefined,
                                                      "defaultValueOptions": Immutable.List [],
                                                      "fields": Immutable.List [],
                                                      "indices": Immutable.List [],
                                                      "domainException": undefined,
                                                      "mandatoryFieldNames": Immutable.List [],
                                                      "reservedFieldNames": Immutable.List [],
                                                      "newDesignFields": undefined,
                                                      "instructions": undefined,
                                                      "domainKindName": undefined,
                                                      "schemaName": undefined,
                                                      "queryName": undefined,
                                                    },
                                                    Immutable.Record {
                                                      "name": "Sample Fields",
                                                      "container": undefined,
                                                      "description": undefined,
                                                      "domainURI": undefined,
                                                      "domainId": null,
                                                      "allowFileLinkProperties": false,
                                                      "allowAttachmentProperties": false,
                                                      "allowFlagProperties": true,
                                                      "allowSampleSubjectProperties": true,
                                                      "allowTextChoiceProperties": true,
                                                      "allowTimepointProperties": false,
                                                      "showDefaultValueSettings": false,
                                                      "defaultDefaultValueType": undefined,
                                                      "defaultValueOptions": Immutable.List [],
                                                      "fields": Immutable.List [
                                                        Immutable.Record {
                                                          "conceptURI": undefined,
                                                          "conditionalFormats": Immutable.List [],
                                                          "defaultScale": undefined,
                                                          "defaultValueType": undefined,
                                                          "defaultValue": undefined,
                                                          "defaultDisplayValue": undefined,
                                                          "description": undefined,
                                                          "dimension": undefined,
                                                          "excludeFromShifting": false,
                                                          "format": undefined,
                                                          "hidden": false,
                                                          "importAliases": undefined,
                                                          "label": undefined,
                                                          "lookupContainer": undefined,
                                                          "lookupQuery": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupValidator": undefined,
                                                          "measure": undefined,
                                                          "mvEnabled": false,
                                                          "name": "field1",
                                                          "PHI": undefined,
                                                          "propertyId": undefined,
                                                          "propertyURI": undefined,
                                                          "propertyValidators": Immutable.List [],
                                                          "rangeValidators": Immutable.List [],
                                                          "rangeURI": "xsd:string",
                                                          "regexValidators": Immutable.List [],
                                                          "textChoiceValidator": undefined,
                                                          "recommendedVariable": false,
                                                          "required": false,
                                                          "scale": 4000,
                                                          "URL": undefined,
                                                          "shownInDetailsView": true,
                                                          "shownInInsertView": true,
                                                          "shownInUpdateView": true,
                                                          "visible": true,
                                                          "dataType": Immutable.Record {
                                                            "conceptURI": undefined,
                                                            "display": "Text",
                                                            "name": "string",
                                                            "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                            "alternateRangeURI": "xsd:string",
                                                            "shortDisplay": "String",
                                                            "lookupSchema": undefined,
                                                            "lookupQuery": undefined,
                                                          },
                                                          "lookupQueryValue": undefined,
                                                          "lookupType": Immutable.Record {
                                                            "conceptURI": undefined,
                                                            "display": "Lookup",
                                                            "name": "lookup",
                                                            "rangeURI": "xsd:string",
                                                            "alternateRangeURI": undefined,
                                                            "shortDisplay": undefined,
                                                            "lookupSchema": undefined,
                                                            "lookupQuery": undefined,
                                                          },
                                                          "original": {
                                                            "conceptURI": undefined,
                                                            "dataType": Immutable.Record {
                                                              "conceptURI": undefined,
                                                              "display": "Text",
                                                              "name": "string",
                                                              "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                              "alternateRangeURI": "xsd:string",
                                                              "shortDisplay": "String",
                                                              "lookupSchema": undefined,
                                                              "lookupQuery": undefined,
                                                            },
                                                            "name": "field1",
                                                            "rangeURI": undefined,
                                                          },
                                                          "updatedField": false,
                                                          "isPrimaryKey": false,
                                                          "lockType": "NotLocked",
                                                          "wrappedColumnName": undefined,
                                                          "disablePhiLevel": false,
                                                          "lockExistingField": false,
                                                          "sourceOntology": undefined,
                                                          "conceptSubtree": undefined,
                                                          "conceptLabelColumn": undefined,
                                                          "conceptImportColumn": undefined,
                                                          "principalConceptCode": undefined,
                                                          "derivationDataScope": undefined,
                                                          "selected": false,
                                                          "scannable": false,
                                                        },
                                                        Immutable.Record {
                                                          "conceptURI": undefined,
                                                          "conditionalFormats": Immutable.List [],
                                                          "defaultScale": undefined,
                                                          "defaultValueType": undefined,
                                                          "defaultValue": undefined,
                                                          "defaultDisplayValue": undefined,
                                                          "description": undefined,
                                                          "dimension": undefined,
                                                          "excludeFromShifting": false,
                                                          "format": undefined,
                                                          "hidden": false,
                                                          "importAliases": undefined,
                                                          "label": undefined,
                                                          "lookupContainer": undefined,
                                                          "lookupQuery": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupValidator": undefined,
                                                          "measure": undefined,
                                                          "mvEnabled": false,
                                                          "name": "field2",
                                                          "PHI": undefined,
                                                          "propertyId": undefined,
                                                          "propertyURI": undefined,
                                                          "propertyValidators": Immutable.List [],
                                                          "rangeValidators": Immutable.List [],
                                                          "rangeURI": "xsd:int",
                                                          "regexValidators": Immutable.List [],
                                                          "textChoiceValidator": undefined,
                                                          "recommendedVariable": false,
                                                          "required": false,
                                                          "scale": 4000,
                                                          "URL": undefined,
                                                          "shownInDetailsView": true,
                                                          "shownInInsertView": true,
                                                          "shownInUpdateView": true,
                                                          "visible": true,
                                                          "dataType": Immutable.Record {
                                                            "conceptURI": undefined,
                                                            "display": "Integer",
                                                            "name": "int",
                                                            "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                                            "alternateRangeURI": "xsd:int",
                                                            "shortDisplay": undefined,
                                                            "lookupSchema": undefined,
                                                            "lookupQuery": undefined,
                                                          },
                                                          "lookupQueryValue": undefined,
                                                          "lookupType": Immutable.Record {
                                                            "conceptURI": undefined,
                                                            "display": "Lookup",
                                                            "name": "lookup",
                                                            "rangeURI": "xsd:int",
                                                            "alternateRangeURI": undefined,
                                                            "shortDisplay": undefined,
                                                            "lookupSchema": undefined,
                                                            "lookupQuery": undefined,
                                                          },
                                                          "original": {
                                                            "conceptURI": undefined,
                                                            "dataType": Immutable.Record {
                                                              "conceptURI": undefined,
                                                              "display": "Integer",
                                                              "name": "int",
                                                              "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                                              "alternateRangeURI": "xsd:int",
                                                              "shortDisplay": undefined,
                                                              "lookupSchema": undefined,
                                                              "lookupQuery": undefined,
                                                            },
                                                            "name": "field2",
                                                            "rangeURI": undefined,
                                                          },
                                                          "updatedField": false,
                                                          "isPrimaryKey": false,
                                                          "lockType": "NotLocked",
                                                          "wrappedColumnName": undefined,
                                                          "disablePhiLevel": false,
                                                          "lockExistingField": false,
                                                          "sourceOntology": undefined,
                                                          "conceptSubtree": undefined,
                                                          "conceptLabelColumn": undefined,
                                                          "conceptImportColumn": undefined,
                                                          "principalConceptCode": undefined,
                                                          "derivationDataScope": undefined,
                                                          "selected": false,
                                                          "scannable": false,
                                                        },
                                                        Immutable.Record {
                                                          "conceptURI": undefined,
                                                          "conditionalFormats": Immutable.List [],
                                                          "defaultScale": undefined,
                                                          "defaultValueType": undefined,
                                                          "defaultValue": undefined,
                                                          "defaultDisplayValue": undefined,
                                                          "description": undefined,
                                                          "dimension": undefined,
                                                          "excludeFromShifting": false,
                                                          "format": undefined,
                                                          "hidden": false,
                                                          "importAliases": undefined,
                                                          "label": undefined,
                                                          "lookupContainer": undefined,
                                                          "lookupQuery": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupValidator": undefined,
                                                          "measure": undefined,
                                                          "mvEnabled": false,
                                                          "name": "field3",
                                                          "PHI": undefined,
                                                          "propertyId": undefined,
                                                          "propertyURI": undefined,
                                                          "propertyValidators": Immutable.List [],
                                                          "rangeValidators": Immutable.List [],
                                                          "rangeURI": "xsd:dateTime",
                                                          "regexValidators": Immutable.List [],
                                                          "textChoiceValidator": undefined,
                                                          "recommendedVariable": false,
                                                          "required": false,
                                                          "scale": 4000,
                                                          "URL": undefined,
                                                          "shownInDetailsView": true,
                                                          "shownInInsertView": true,
                                                          "shownInUpdateView": true,
                                                          "visible": true,
                                                          "dataType": Immutable.Record {
                                                            "conceptURI": undefined,
                                                            "display": "Date Time",
                                                            "name": "dateTime",
                                                            "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                                                            "alternateRangeURI": "xsd:dateTime",
                                                            "shortDisplay": undefined,
                                                            "lookupSchema": undefined,
                                                            "lookupQuery": undefined,
                                                          },
                                                          "lookupQueryValue": undefined,
                                                          "lookupType": Immutable.Record {
                                                            "conceptURI": undefined,
                                                            "display": "Lookup",
                                                            "name": "lookup",
                                                            "rangeURI": "xsd:dateTime",
                                                            "alternateRangeURI": undefined,
                                                            "shortDisplay": undefined,
                                                            "lookupSchema": undefined,
                                                            "lookupQuery": undefined,
                                                          },
                                                          "original": {
                                                            "conceptURI": undefined,
                                                            "dataType": Immutable.Record {
                                                              "conceptURI": undefined,
                                                              "display": "Date Time",
                                                              "name": "dateTime",
                                                              "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                                                              "alternateRangeURI": "xsd:dateTime",
                                                              "shortDisplay": undefined,
                                                              "lookupSchema": undefined,
                                                              "lookupQuery": undefined,
                                                            },
                                                            "name": "field3",
                                                            "rangeURI": undefined,
                                                          },
                                                          "updatedField": false,
                                                          "isPrimaryKey": false,
                                                          "lockType": "NotLocked",
                                                          "wrappedColumnName": undefined,
                                                          "disablePhiLevel": false,
                                                          "lockExistingField": false,
                                                          "sourceOntology": undefined,
                                                          "conceptSubtree": undefined,
                                                          "conceptLabelColumn": undefined,
                                                          "conceptImportColumn": undefined,
                                                          "principalConceptCode": undefined,
                                                          "derivationDataScope": undefined,
                                                          "selected": false,
                                                          "scannable": false,
                                                        },
                                                      ],
                                                      "indices": Immutable.List [],
                                                      "domainException": undefined,
                                                      "mandatoryFieldNames": Immutable.List [],
                                                      "reservedFieldNames": Immutable.List [],
                                                      "newDesignFields": undefined,
                                                      "instructions": undefined,
                                                      "domainKindName": undefined,
                                                      "schemaName": undefined,
                                                      "queryName": undefined,
                                                    },
                                                  ],
                                                  "editableResults": true,
                                                  "editableRuns": true,
                                                  "exception": undefined,
                                                  "metadataInputFormatHelp": undefined,
                                                  "moduleTransformScripts": undefined,
                                                  "name": "Test Assay Protocol",
                                                  "plateMetadata": undefined,
                                                  "protocolId": 1,
                                                  "protocolParameters": undefined,
                                                  "protocolTransformScripts": undefined,
                                                  "providerName": undefined,
                                                  "saveScriptFiles": false,
                                                  "selectedDetectionMethod": undefined,
                                                  "selectedMetadataInputFormat": undefined,
                                                  "selectedPlateTemplate": undefined,
                                                  "status": "Active",
                                                  "qcEnabled": undefined,
                                                }
                                              }
                                              onChange={[Function]}
                                            >
                                              <Component
                                                colSize={9}
                                                helpTipBody={
                                                  <p>
                                                    If enabled, assay imports will be processed as jobs in the data pipeline. If there are any errors during the import, they can be viewed from the log file for that job.
                                                  </p>
                                                }
                                                label="Import in Background"
                                              >
                                                <Row
                                                  bsClass="row"
                                                  className="margin-top"
                                                  componentClass="div"
                                                >
                                                  <div
                                                    className="margin-top row"
                                                  >
                                                    <Col
                                                      bsClass="col"
                                                      componentClass="div"
                                                      lg={4}
                                                      xs={3}
                                                    >
                                                      <div
                                                        className="col-lg-4 col-xs-3"
                                                      >
                                                        <DomainFieldLabel
                                                          helpTipBody={
                                                            <p>
                                                              If enabled, assay imports will be processed as jobs in the data pipeline. If there are any errors during the import, they can be viewed from the log file for that job.
                                                            </p>
                                                          }
                                                          label="Import in Background"
                                                        >
                                                          Import in 
                                                          <span
                                                            className="domain-no-wrap"
                                                          >
                                                            Background
                                                            <Component
                                                              id="tooltip"
                                                              title="Import in Background"
                                                            >
                                                              <span
                                                                className="label-help-target"
                                                                onMouseOut={[Function]}
                                                                onMouseOver={[Function]}
                                                              >
                                                                <span
                                                                  className="label-help-icon fa fa-question-circle"
                                                                />
                                                                <Overlay
                                                                  animation={[Function]}
                                                                  placement="right"
                                                                  rootClose={false}
                                                                  show={false}
                                                                >
                                                                  <Overlay
                                                                    placement="right"
                                                                    rootClose={false}
                                                                    show={false}
                                                                    transition={[Function]}
                                                                  />
                                                                </Overlay>
                                                              </span>
                                                            </Component>
                                                          </span>
                                                        </DomainFieldLabel>
                                                      </div>
                                                    </Col>
                                                    <Col
                                                      bsClass="col"
                                                      componentClass="div"
                                                      lg={8}
                                                      xs={9}
                                                    >
                                                      <div
                                                        className="col-lg-8 col-xs-9"
                                                      >
                                                        <input
                                                          checked={true}
                                                          id="assay-design-backgroundUpload"
                                                          onChange={[Function]}
                                                          type="checkbox"
                                                        />
                                                      </div>
                                                    </Col>
                                                  </div>
                                                </Row>
                                              </Component>
                                            </BackgroundUploadInput>
                                          </div>
                                        </div>
                                      </Col>
                                    </form>
                                  </Form>
                                </AssayPropertiesForm>
                              </div>
                            </div>
                          </Transition>
                        </Collapse>
                      </PanelCollapse>
                    </PanelBody>
                  </div>
                </Panel>
              </Uncontrolled(Panel)>
            </ForwardRef>
          </BasePropertiesPanel>
        </Component>
      </ComponentWithDomainPropertiesPanelCollapse>
      <DomainForm
        controlledCollapse={true}
        domain={
          Immutable.Record {
            "name": "Sample Fields",
            "container": undefined,
            "description": undefined,
            "domainURI": undefined,
            "domainId": null,
            "allowFileLinkProperties": false,
            "allowAttachmentProperties": false,
            "allowFlagProperties": true,
            "allowSampleSubjectProperties": true,
            "allowTextChoiceProperties": true,
            "allowTimepointProperties": false,
            "showDefaultValueSettings": false,
            "defaultDefaultValueType": undefined,
            "defaultValueOptions": Immutable.List [],
            "fields": Immutable.List [
              Immutable.Record {
                "conceptURI": undefined,
                "conditionalFormats": Immutable.List [],
                "defaultScale": undefined,
                "defaultValueType": undefined,
                "defaultValue": undefined,
                "defaultDisplayValue": undefined,
                "description": undefined,
                "dimension": undefined,
                "excludeFromShifting": false,
                "format": undefined,
                "hidden": false,
                "importAliases": undefined,
                "label": undefined,
                "lookupContainer": undefined,
                "lookupQuery": undefined,
                "lookupSchema": undefined,
                "lookupValidator": undefined,
                "measure": undefined,
                "mvEnabled": false,
                "name": "field1",
                "PHI": undefined,
                "propertyId": undefined,
                "propertyURI": undefined,
                "propertyValidators": Immutable.List [],
                "rangeValidators": Immutable.List [],
                "rangeURI": "xsd:string",
                "regexValidators": Immutable.List [],
                "textChoiceValidator": undefined,
                "recommendedVariable": false,
                "required": false,
                "scale": 4000,
                "URL": undefined,
                "shownInDetailsView": true,
                "shownInInsertView": true,
                "shownInUpdateView": true,
                "visible": true,
                "dataType": Immutable.Record {
                  "conceptURI": undefined,
                  "display": "Text",
                  "name": "string",
                  "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                  "alternateRangeURI": "xsd:string",
                  "shortDisplay": "String",
                  "lookupSchema": undefined,
                  "lookupQuery": undefined,
                },
                "lookupQueryValue": undefined,
                "lookupType": Immutable.Record {
                  "conceptURI": undefined,
                  "display": "Lookup",
                  "name": "lookup",
                  "rangeURI": "xsd:string",
                  "alternateRangeURI": undefined,
                  "shortDisplay": undefined,
                  "lookupSchema": undefined,
                  "lookupQuery": undefined,
                },
                "original": {
                  "conceptURI": undefined,
                  "dataType": Immutable.Record {
                    "conceptURI": undefined,
                    "display": "Text",
                    "name": "string",
                    "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                    "alternateRangeURI": "xsd:string",
                    "shortDisplay": "String",
                    "lookupSchema": undefined,
                    "lookupQuery": undefined,
                  },
                  "name": "field1",
                  "rangeURI": undefined,
                },
                "updatedField": false,
                "isPrimaryKey": false,
                "lockType": "NotLocked",
                "wrappedColumnName": undefined,
                "disablePhiLevel": false,
                "lockExistingField": false,
                "sourceOntology": undefined,
                "conceptSubtree": undefined,
                "conceptLabelColumn": undefined,
                "conceptImportColumn": undefined,
                "principalConceptCode": undefined,
                "derivationDataScope": undefined,
                "selected": false,
                "scannable": false,
              },
              Immutable.Record {
                "conceptURI": undefined,
                "conditionalFormats": Immutable.List [],
                "defaultScale": undefined,
                "defaultValueType": undefined,
                "defaultValue": undefined,
                "defaultDisplayValue": undefined,
                "description": undefined,
                "dimension": undefined,
                "excludeFromShifting": false,
                "format": undefined,
                "hidden": false,
                "importAliases": undefined,
                "label": undefined,
                "lookupContainer": undefined,
                "lookupQuery": undefined,
                "lookupSchema": undefined,
                "lookupValidator": undefined,
                "measure": undefined,
                "mvEnabled": false,
                "name": "field2",
                "PHI": undefined,
                "propertyId": undefined,
                "propertyURI": undefined,
                "propertyValidators": Immutable.List [],
                "rangeValidators": Immutable.List [],
                "rangeURI": "xsd:int",
                "regexValidators": Immutable.List [],
                "textChoiceValidator": undefined,
                "recommendedVariable": false,
                "required": false,
                "scale": 4000,
                "URL": undefined,
                "shownInDetailsView": true,
                "shownInInsertView": true,
                "shownInUpdateView": true,
                "visible": true,
                "dataType": Immutable.Record {
                  "conceptURI": undefined,
                  "display": "Integer",
                  "name": "int",
                  "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                  "alternateRangeURI": "xsd:int",
                  "shortDisplay": undefined,
                  "lookupSchema": undefined,
                  "lookupQuery": undefined,
                },
                "lookupQueryValue": undefined,
                "lookupType": Immutable.Record {
                  "conceptURI": undefined,
                  "display": "Lookup",
                  "name": "lookup",
                  "rangeURI": "xsd:int",
                  "alternateRangeURI": undefined,
                  "shortDisplay": undefined,
                  "lookupSchema": undefined,
                  "lookupQuery": undefined,
                },
                "original": {
                  "conceptURI": undefined,
                  "dataType": Immutable.Record {
                    "conceptURI": undefined,
                    "display": "Integer",
                    "name": "int",
                    "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                    "alternateRangeURI": "xsd:int",
                    "shortDisplay": undefined,
                    "lookupSchema": undefined,
                    "lookupQuery": undefined,
                  },
                  "name": "field2",
                  "rangeURI": undefined,
                },
                "updatedField": false,
                "isPrimaryKey": false,
                "lockType": "NotLocked",
                "wrappedColumnName": undefined,
                "disablePhiLevel": false,
                "lockExistingField": false,
                "sourceOntology": undefined,
                "conceptSubtree": undefined,
                "conceptLabelColumn": undefined,
                "conceptImportColumn": undefined,
                "principalConceptCode": undefined,
                "derivationDataScope": undefined,
                "selected": false,
                "scannable": false,
              },
              Immutable.Record {
                "conceptURI": undefined,
                "conditionalFormats": Immutable.List [],
                "defaultScale": undefined,
                "defaultValueType": undefined,
                "defaultValue": undefined,
                "defaultDisplayValue": undefined,
                "description": undefined,
                "dimension": undefined,
                "excludeFromShifting": false,
                "format": undefined,
                "hidden": false,
                "importAliases": undefined,
                "label": undefined,
                "lookupContainer": undefined,
                "lookupQuery": undefined,
                "lookupSchema": undefined,
                "lookupValidator": undefined,
                "measure": undefined,
                "mvEnabled": false,
                "name": "field3",
                "PHI": undefined,
                "propertyId": undefined,
                "propertyURI": undefined,
                "propertyValidators": Immutable.List [],
                "rangeValidators": Immutable.List [],
                "rangeURI": "xsd:dateTime",
                "regexValidators": Immutable.List [],
                "textChoiceValidator": undefined,
                "recommendedVariable": false,
                "required": false,
                "scale": 4000,
                "URL": undefined,
                "shownInDetailsView": true,
                "shownInInsertView": true,
                "shownInUpdateView": true,
                "visible": true,
                "dataType": Immutable.Record {
                  "conceptURI": undefined,
                  "display": "Date Time",
                  "name": "dateTime",
                  "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                  "alternateRangeURI": "xsd:dateTime",
                  "shortDisplay": undefined,
                  "lookupSchema": undefined,
                  "lookupQuery": undefined,
                },
                "lookupQueryValue": undefined,
                "lookupType": Immutable.Record {
                  "conceptURI": undefined,
                  "display": "Lookup",
                  "name": "lookup",
                  "rangeURI": "xsd:dateTime",
                  "alternateRangeURI": undefined,
                  "shortDisplay": undefined,
                  "lookupSchema": undefined,
                  "lookupQuery": undefined,
                },
                "original": {
                  "conceptURI": undefined,
                  "dataType": Immutable.Record {
                    "conceptURI": undefined,
                    "display": "Date Time",
                    "name": "dateTime",
                    "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                    "alternateRangeURI": "xsd:dateTime",
                    "shortDisplay": undefined,
                    "lookupSchema": undefined,
                    "lookupQuery": undefined,
                  },
                  "name": "field3",
                  "rangeURI": undefined,
                },
                "updatedField": false,
                "isPrimaryKey": false,
                "lockType": "NotLocked",
                "wrappedColumnName": undefined,
                "disablePhiLevel": false,
                "lockExistingField": false,
                "sourceOntology": undefined,
                "conceptSubtree": undefined,
                "conceptLabelColumn": undefined,
                "conceptImportColumn": undefined,
                "principalConceptCode": undefined,
                "derivationDataScope": undefined,
                "selected": false,
                "scannable": false,
              },
            ],
            "indices": Immutable.List [],
            "domainException": undefined,
            "mandatoryFieldNames": Immutable.List [],
            "reservedFieldNames": Immutable.List [],
            "newDesignFields": undefined,
            "instructions": undefined,
            "domainKindName": undefined,
            "schemaName": undefined,
            "queryName": undefined,
          }
        }
        domainFormDisplayOptions={
          {
            "domainKindDisplayName": "assay design",
            "hideFilePropertyType": undefined,
            "hideInferFromFile": true,
            "hideStudyPropertyTypes": true,
            "textChoiceLockedForDomain": true,
          }
        }
        domainIndex={1}
        headerPrefix="Test Assay Protocol"
        helpTopic={null}
        index={1}
        initCollapsed={true}
        key="1"
        modelDomains={
          Immutable.List [
            Immutable.Record {
              "name": "Batch Fields",
              "container": undefined,
              "description": undefined,
              "domainURI": undefined,
              "domainId": null,
              "allowFileLinkProperties": false,
              "allowAttachmentProperties": false,
              "allowFlagProperties": true,
              "allowSampleSubjectProperties": true,
              "allowTextChoiceProperties": true,
              "allowTimepointProperties": false,
              "showDefaultValueSettings": false,
              "defaultDefaultValueType": undefined,
              "defaultValueOptions": Immutable.List [],
              "fields": Immutable.List [],
              "indices": Immutable.List [],
              "domainException": undefined,
              "mandatoryFieldNames": Immutable.List [],
              "reservedFieldNames": Immutable.List [],
              "newDesignFields": undefined,
              "instructions": undefined,
              "domainKindName": undefined,
              "schemaName": undefined,
              "queryName": undefined,
            },
            Immutable.Record {
              "name": "Sample Fields",
              "container": undefined,
              "description": undefined,
              "domainURI": undefined,
              "domainId": null,
              "allowFileLinkProperties": false,
              "allowAttachmentProperties": false,
              "allowFlagProperties": true,
              "allowSampleSubjectProperties": true,
              "allowTextChoiceProperties": true,
              "allowTimepointProperties": false,
              "showDefaultValueSettings": false,
              "defaultDefaultValueType": undefined,
              "defaultValueOptions": Immutable.List [],
              "fields": Immutable.List [
                Immutable.Record {
                  "conceptURI": undefined,
                  "conditionalFormats": Immutable.List [],
                  "defaultScale": undefined,
                  "defaultValueType": undefined,
                  "defaultValue": undefined,
                  "defaultDisplayValue": undefined,
                  "description": undefined,
                  "dimension": undefined,
                  "excludeFromShifting": false,
                  "format": undefined,
                  "hidden": false,
                  "importAliases": undefined,
                  "label": undefined,
                  "lookupContainer": undefined,
                  "lookupQuery": undefined,
                  "lookupSchema": undefined,
                  "lookupValidator": undefined,
                  "measure": undefined,
                  "mvEnabled": false,
                  "name": "field1",
                  "PHI": undefined,
                  "propertyId": undefined,
                  "propertyURI": undefined,
                  "propertyValidators": Immutable.List [],
                  "rangeValidators": Immutable.List [],
                  "rangeURI": "xsd:string",
                  "regexValidators": Immutable.List [],
                  "textChoiceValidator": undefined,
                  "recommendedVariable": false,
                  "required": false,
                  "scale": 4000,
                  "URL": undefined,
                  "shownInDetailsView": true,
                  "shownInInsertView": true,
                  "shownInUpdateView": true,
                  "visible": true,
                  "dataType": Immutable.Record {
                    "conceptURI": undefined,
                    "display": "Text",
                    "name": "string",
                    "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                    "alternateRangeURI": "xsd:string",
                    "shortDisplay": "String",
                    "lookupSchema": undefined,
                    "lookupQuery": undefined,
                  },
                  "lookupQueryValue": undefined,
                  "lookupType": Immutable.Record {
                    "conceptURI": undefined,
                    "display": "Lookup",
                    "name": "lookup",
                    "rangeURI": "xsd:string",
                    "alternateRangeURI": undefined,
                    "shortDisplay": undefined,
                    "lookupSchema": undefined,
                    "lookupQuery": undefined,
                  },
                  "original": {
                    "conceptURI": undefined,
                    "dataType": Immutable.Record {
                      "conceptURI": undefined,
                      "display": "Text",
                      "name": "string",
                      "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                      "alternateRangeURI": "xsd:string",
                      "shortDisplay": "String",
                      "lookupSchema": undefined,
                      "lookupQuery": undefined,
                    },
                    "name": "field1",
                    "rangeURI": undefined,
                  },
                  "updatedField": false,
                  "isPrimaryKey": false,
                  "lockType": "NotLocked",
                  "wrappedColumnName": undefined,
                  "disablePhiLevel": false,
                  "lockExistingField": false,
                  "sourceOntology": undefined,
                  "conceptSubtree": undefined,
                  "conceptLabelColumn": undefined,
                  "conceptImportColumn": undefined,
                  "principalConceptCode": undefined,
                  "derivationDataScope": undefined,
                  "selected": false,
                  "scannable": false,
                },
                Immutable.Record {
                  "conceptURI": undefined,
                  "conditionalFormats": Immutable.List [],
                  "defaultScale": undefined,
                  "defaultValueType": undefined,
                  "defaultValue": undefined,
                  "defaultDisplayValue": undefined,
                  "description": undefined,
                  "dimension": undefined,
                  "excludeFromShifting": false,
                  "format": undefined,
                  "hidden": false,
                  "importAliases": undefined,
                  "label": undefined,
                  "lookupContainer": undefined,
                  "lookupQuery": undefined,
                  "lookupSchema": undefined,
                  "lookupValidator": undefined,
                  "measure": undefined,
                  "mvEnabled": false,
                  "name": "field2",
                  "PHI": undefined,
                  "propertyId": undefined,
                  "propertyURI": undefined,
                  "propertyValidators": Immutable.List [],
                  "rangeValidators": Immutable.List [],
                  "rangeURI": "xsd:int",
                  "regexValidators": Immutable.List [],
                  "textChoiceValidator": undefined,
                  "recommendedVariable": false,
                  "required": false,
                  "scale": 4000,
                  "URL": undefined,
                  "shownInDetailsView": true,
                  "shownInInsertView": true,
                  "shownInUpdateView": true,
                  "visible": true,
                  "dataType": Immutable.Record {
                    "conceptURI": undefined,
                    "display": "Integer",
                    "name": "int",
                    "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                    "alternateRangeURI": "xsd:int",
                    "shortDisplay": undefined,
                    "lookupSchema": undefined,
                    "lookupQuery": undefined,
                  },
                  "lookupQueryValue": undefined,
                  "lookupType": Immutable.Record {
                    "conceptURI": undefined,
                    "display": "Lookup",
                    "name": "lookup",
                    "rangeURI": "xsd:int",
                    "alternateRangeURI": undefined,
                    "shortDisplay": undefined,
                    "lookupSchema": undefined,
                    "lookupQuery": undefined,
                  },
                  "original": {
                    "conceptURI": undefined,
                    "dataType": Immutable.Record {
                      "conceptURI": undefined,
                      "display": "Integer",
                      "name": "int",
                      "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                      "alternateRangeURI": "xsd:int",
                      "shortDisplay": undefined,
                      "lookupSchema": undefined,
                      "lookupQuery": undefined,
                    },
                    "name": "field2",
                    "rangeURI": undefined,
                  },
                  "updatedField": false,
                  "isPrimaryKey": false,
                  "lockType": "NotLocked",
                  "wrappedColumnName": undefined,
                  "disablePhiLevel": false,
                  "lockExistingField": false,
                  "sourceOntology": undefined,
                  "conceptSubtree": undefined,
                  "conceptLabelColumn": undefined,
                  "conceptImportColumn": undefined,
                  "principalConceptCode": undefined,
                  "derivationDataScope": undefined,
                  "selected": false,
                  "scannable": false,
                },
                Immutable.Record {
                  "conceptURI": undefined,
                  "conditionalFormats": Immutable.List [],
                  "defaultScale": undefined,
                  "defaultValueType": undefined,
                  "defaultValue": undefined,
                  "defaultDisplayValue": undefined,
                  "description": undefined,
                  "dimension": undefined,
                  "excludeFromShifting": false,
                  "format": undefined,
                  "hidden": false,
                  "importAliases": undefined,
                  "label": undefined,
                  "lookupContainer": undefined,
                  "lookupQuery": undefined,
                  "lookupSchema": undefined,
                  "lookupValidator": undefined,
                  "measure": undefined,
                  "mvEnabled": false,
                  "name": "field3",
                  "PHI": undefined,
                  "propertyId": undefined,
                  "propertyURI": undefined,
                  "propertyValidators": Immutable.List [],
                  "rangeValidators": Immutable.List [],
                  "rangeURI": "xsd:dateTime",
                  "regexValidators": Immutable.List [],
                  "textChoiceValidator": undefined,
                  "recommendedVariable": false,
                  "required": false,
                  "scale": 4000,
                  "URL": undefined,
                  "shownInDetailsView": true,
                  "shownInInsertView": true,
                  "shownInUpdateView": true,
                  "visible": true,
                  "dataType": Immutable.Record {
                    "conceptURI": undefined,
                    "display": "Date Time",
                    "name": "dateTime",
                    "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                    "alternateRangeURI": "xsd:dateTime",
                    "shortDisplay": undefined,
                    "lookupSchema": undefined,
                    "lookupQuery": undefined,
                  },
                  "lookupQueryValue": undefined,
                  "lookupType": Immutable.Record {
                    "conceptURI": undefined,
                    "display": "Lookup",
                    "name": "lookup",
                    "rangeURI": "xsd:dateTime",
                    "alternateRangeURI": undefined,
                    "shortDisplay": undefined,
                    "lookupSchema": undefined,
                    "lookupQuery": undefined,
                  },
                  "original": {
                    "conceptURI": undefined,
                    "dataType": Immutable.Record {
                      "conceptURI": undefined,
                      "display": "Date Time",
                      "name": "dateTime",
                      "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                      "alternateRangeURI": "xsd:dateTime",
                      "shortDisplay": undefined,
                      "lookupSchema": undefined,
                      "lookupQuery": undefined,
                    },
                    "name": "field3",
                    "rangeURI": undefined,
                  },
                  "updatedField": false,
                  "isPrimaryKey": false,
                  "lockType": "NotLocked",
                  "wrappedColumnName": undefined,
                  "disablePhiLevel": false,
                  "lockExistingField": false,
                  "sourceOntology": undefined,
                  "conceptSubtree": undefined,
                  "conceptLabelColumn": undefined,
                  "conceptImportColumn": undefined,
                  "principalConceptCode": undefined,
                  "derivationDataScope": undefined,
                  "selected": false,
                  "scannable": false,
                },
              ],
              "indices": Immutable.List [],
              "domainException": undefined,
              "mandatoryFieldNames": Immutable.List [],
              "reservedFieldNames": Immutable.List [],
              "newDesignFields": undefined,
              "instructions": undefined,
              "domainKindName": undefined,
              "schemaName": undefined,
              "queryName": undefined,
            },
          ]
        }
        onChange={[Function]}
        onToggle={[Function]}
        panelStatus="COMPLETE"
        testMode={true}
        validate={false}
      >
        <LookupProvider>
          <DomainFormImpl
            appPropertiesOnly={false}
            controlledCollapse={true}
            domain={
              Immutable.Record {
                "name": "Sample Fields",
                "container": undefined,
                "description": undefined,
                "domainURI": undefined,
                "domainId": null,
                "allowFileLinkProperties": false,
                "allowAttachmentProperties": false,
                "allowFlagProperties": true,
                "allowSampleSubjectProperties": true,
                "allowTextChoiceProperties": true,
                "allowTimepointProperties": false,
                "showDefaultValueSettings": false,
                "defaultDefaultValueType": undefined,
                "defaultValueOptions": Immutable.List [],
                "fields": Immutable.List [
                  Immutable.Record {
                    "conceptURI": undefined,
                    "conditionalFormats": Immutable.List [],
                    "defaultScale": undefined,
                    "defaultValueType": undefined,
                    "defaultValue": undefined,
                    "defaultDisplayValue": undefined,
                    "description": undefined,
                    "dimension": undefined,
                    "excludeFromShifting": false,
                    "format": undefined,
                    "hidden": false,
                    "importAliases": undefined,
                    "label": undefined,
                    "lookupContainer": undefined,
                    "lookupQuery": undefined,
                    "lookupSchema": undefined,
                    "lookupValidator": undefined,
                    "measure": undefined,
                    "mvEnabled": false,
                    "name": "field1",
                    "PHI": undefined,
                    "propertyId": undefined,
                    "propertyURI": undefined,
                    "propertyValidators": Immutable.List [],
                    "rangeValidators": Immutable.List [],
                    "rangeURI": "xsd:string",
                    "regexValidators": Immutable.List [],
                    "textChoiceValidator": undefined,
                    "recommendedVariable": false,
                    "required": false,
                    "scale": 4000,
                    "URL": undefined,
                    "shownInDetailsView": true,
                    "shownInInsertView": true,
                    "shownInUpdateView": true,
                    "visible": true,
                    "dataType": Immutable.Record {
                      "conceptURI": undefined,
                      "display": "Text",
                      "name": "string",
                      "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                      "alternateRangeURI": "xsd:string",
                      "shortDisplay": "String",
                      "lookupSchema": undefined,
                      "lookupQuery": undefined,
                    },
                    "lookupQueryValue": undefined,
                    "lookupType": Immutable.Record {
                      "conceptURI": undefined,
                      "display": "Lookup",
                      "name": "lookup",
                      "rangeURI": "xsd:string",
                      "alternateRangeURI": undefined,
                      "shortDisplay": undefined,
                      "lookupSchema": undefined,
                      "lookupQuery": undefined,
                    },
                    "original": {
                      "conceptURI": undefined,
                      "dataType": Immutable.Record {
                        "conceptURI": undefined,
                        "display": "Text",
                        "name": "string",
                        "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                        "alternateRangeURI": "xsd:string",
                        "shortDisplay": "String",
                        "lookupSchema": undefined,
                        "lookupQuery": undefined,
                      },
                      "name": "field1",
                      "rangeURI": undefined,
                    },
                    "updatedField": false,
                    "isPrimaryKey": false,
                    "lockType": "NotLocked",
                    "wrappedColumnName": undefined,
                    "disablePhiLevel": false,
                    "lockExistingField": false,
                    "sourceOntology": undefined,
                    "conceptSubtree": undefined,
                    "conceptLabelColumn": undefined,
                    "conceptImportColumn": undefined,
                    "principalConceptCode": undefined,
                    "derivationDataScope": undefined,
                    "selected": false,
                    "scannable": false,
                  },
                  Immutable.Record {
                    "conceptURI": undefined,
                    "conditionalFormats": Immutable.List [],
                    "defaultScale": undefined,
                    "defaultValueType": undefined,
                    "defaultValue": undefined,
                    "defaultDisplayValue": undefined,
                    "description": undefined,
                    "dimension": undefined,
                    "excludeFromShifting": false,
                    "format": undefined,
                    "hidden": false,
                    "importAliases": undefined,
                    "label": undefined,
                    "lookupContainer": undefined,
                    "lookupQuery": undefined,
                    "lookupSchema": undefined,
                    "lookupValidator": undefined,
                    "measure": undefined,
                    "mvEnabled": false,
                    "name": "field2",
                    "PHI": undefined,
                    "propertyId": undefined,
                    "propertyURI": undefined,
                    "propertyValidators": Immutable.List [],
                    "rangeValidators": Immutable.List [],
                    "rangeURI": "xsd:int",
                    "regexValidators": Immutable.List [],
                    "textChoiceValidator": undefined,
                    "recommendedVariable": false,
                    "required": false,
                    "scale": 4000,
                    "URL": undefined,
                    "shownInDetailsView": true,
                    "shownInInsertView": true,
                    "shownInUpdateView": true,
                    "visible": true,
                    "dataType": Immutable.Record {
                      "conceptURI": undefined,
                      "display": "Integer",
                      "name": "int",
                      "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                      "alternateRangeURI": "xsd:int",
                      "shortDisplay": undefined,
                      "lookupSchema": undefined,
                      "lookupQuery": undefined,
                    },
                    "lookupQueryValue": undefined,
                    "lookupType": Immutable.Record {
                      "conceptURI": undefined,
                      "display": "Lookup",
                      "name": "lookup",
                      "rangeURI": "xsd:int",
                      "alternateRangeURI": undefined,
                      "shortDisplay": undefined,
                      "lookupSchema": undefined,
                      "lookupQuery": undefined,
                    },
                    "original": {
                      "conceptURI": undefined,
                      "dataType": Immutable.Record {
                        "conceptURI": undefined,
                        "display": "Integer",
                        "name": "int",
                        "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                        "alternateRangeURI": "xsd:int",
                        "shortDisplay": undefined,
                        "lookupSchema": undefined,
                        "lookupQuery": undefined,
                      },
                      "name": "field2",
                      "rangeURI": undefined,
                    },
                    "updatedField": false,
                    "isPrimaryKey": false,
                    "lockType": "NotLocked",
                    "wrappedColumnName": undefined,
                    "disablePhiLevel": false,
                    "lockExistingField": false,
                    "sourceOntology": undefined,
                    "conceptSubtree": undefined,
                    "conceptLabelColumn": undefined,
                    "conceptImportColumn": undefined,
                    "principalConceptCode": undefined,
                    "derivationDataScope": undefined,
                    "selected": false,
                    "scannable": false,
                  },
                  Immutable.Record {
                    "conceptURI": undefined,
                    "conditionalFormats": Immutable.List [],
                    "defaultScale": undefined,
                    "defaultValueType": undefined,
                    "defaultValue": undefined,
                    "defaultDisplayValue": undefined,
                    "description": undefined,
                    "dimension": undefined,
                    "excludeFromShifting": false,
                    "format": undefined,
                    "hidden": false,
                    "importAliases": undefined,
                    "label": undefined,
                    "lookupContainer": undefined,
                    "lookupQuery": undefined,
                    "lookupSchema": undefined,
                    "lookupValidator": undefined,
                    "measure": undefined,
                    "mvEnabled": false,
                    "name": "field3",
                    "PHI": undefined,
                    "propertyId": undefined,
                    "propertyURI": undefined,
                    "propertyValidators": Immutable.List [],
                    "rangeValidators": Immutable.List [],
                    "rangeURI": "xsd:dateTime",
                    "regexValidators": Immutable.List [],
                    "textChoiceValidator": undefined,
                    "recommendedVariable": false,
                    "required": false,
                    "scale": 4000,
                    "URL": undefined,
                    "shownInDetailsView": true,
                    "shownInInsertView": true,
                    "shownInUpdateView": true,
                    "visible": true,
                    "dataType": Immutable.Record {
                      "conceptURI": undefined,
                      "display": "Date Time",
                      "name": "dateTime",
                      "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                      "alternateRangeURI": "xsd:dateTime",
                      "shortDisplay": undefined,
                      "lookupSchema": undefined,
                      "lookupQuery": undefined,
                    },
                    "lookupQueryValue": undefined,
                    "lookupType": Immutable.Record {
                      "conceptURI": undefined,
                      "display": "Lookup",
                      "name": "lookup",
                      "rangeURI": "xsd:dateTime",
                      "alternateRangeURI": undefined,
                      "shortDisplay": undefined,
                      "lookupSchema": undefined,
                      "lookupQuery": undefined,
                    },
                    "original": {
                      "conceptURI": undefined,
                      "dataType": Immutable.Record {
                        "conceptURI": undefined,
                        "display": "Date Time",
                        "name": "dateTime",
                        "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                        "alternateRangeURI": "xsd:dateTime",
                        "shortDisplay": undefined,
                        "lookupSchema": undefined,
                        "lookupQuery": undefined,
                      },
                      "name": "field3",
                      "rangeURI": undefined,
                    },
                    "updatedField": false,
                    "isPrimaryKey": false,
                    "lockType": "NotLocked",
                    "wrappedColumnName": undefined,
                    "disablePhiLevel": false,
                    "lockExistingField": false,
                    "sourceOntology": undefined,
                    "conceptSubtree": undefined,
                    "conceptLabelColumn": undefined,
                    "conceptImportColumn": undefined,
                    "principalConceptCode": undefined,
                    "derivationDataScope": undefined,
                    "selected": false,
                    "scannable": false,
                  },
                ],
                "indices": Immutable.List [],
                "domainException": undefined,
                "mandatoryFieldNames": Immutable.List [],
                "reservedFieldNames": Immutable.List [],
                "newDesignFields": undefined,
                "instructions": undefined,
                "domainKindName": undefined,
                "schemaName": undefined,
                "queryName": undefined,
              }
            }
            domainFormDisplayOptions={
              {
                "domainKindDisplayName": "assay design",
                "hideFilePropertyType": undefined,
                "hideInferFromFile": true,
                "hideStudyPropertyTypes": true,
                "textChoiceLockedForDomain": true,
              }
            }
            domainIndex={1}
            headerPrefix="Test Assay Protocol"
            helpNoun="field designer"
            helpTopic={null}
            index={1}
            initCollapsed={true}
            isNew={false}
            modelDomains={
              Immutable.List [
                Immutable.Record {
                  "name": "Batch Fields",
                  "container": undefined,
                  "description": undefined,
                  "domainURI": undefined,
                  "domainId": null,
                  "allowFileLinkProperties": false,
                  "allowAttachmentProperties": false,
                  "allowFlagProperties": true,
                  "allowSampleSubjectProperties": true,
                  "allowTextChoiceProperties": true,
                  "allowTimepointProperties": false,
                  "showDefaultValueSettings": false,
                  "defaultDefaultValueType": undefined,
                  "defaultValueOptions": Immutable.List [],
                  "fields": Immutable.List [],
                  "indices": Immutable.List [],
                  "domainException": undefined,
                  "mandatoryFieldNames": Immutable.List [],
                  "reservedFieldNames": Immutable.List [],
                  "newDesignFields": undefined,
                  "instructions": undefined,
                  "domainKindName": undefined,
                  "schemaName": undefined,
                  "queryName": undefined,
                },
                Immutable.Record {
                  "name": "Sample Fields",
                  "container": undefined,
                  "description": undefined,
                  "domainURI": undefined,
                  "domainId": null,
                  "allowFileLinkProperties": false,
                  "allowAttachmentProperties": false,
                  "allowFlagProperties": true,
                  "allowSampleSubjectProperties": true,
                  "allowTextChoiceProperties": true,
                  "allowTimepointProperties": false,
                  "showDefaultValueSettings": false,
                  "defaultDefaultValueType": undefined,
                  "defaultValueOptions": Immutable.List [],
                  "fields": Immutable.List [
                    Immutable.Record {
                      "conceptURI": undefined,
                      "conditionalFormats": Immutable.List [],
                      "defaultScale": undefined,
                      "defaultValueType": undefined,
                      "defaultValue": undefined,
                      "defaultDisplayValue": undefined,
                      "description": undefined,
                      "dimension": undefined,
                      "excludeFromShifting": false,
                      "format": undefined,
                      "hidden": false,
                      "importAliases": undefined,
                      "label": undefined,
                      "lookupContainer": undefined,
                      "lookupQuery": undefined,
                      "lookupSchema": undefined,
                      "lookupValidator": undefined,
                      "measure": undefined,
                      "mvEnabled": false,
                      "name": "field1",
                      "PHI": undefined,
                      "propertyId": undefined,
                      "propertyURI": undefined,
                      "propertyValidators": Immutable.List [],
                      "rangeValidators": Immutable.List [],
                      "rangeURI": "xsd:string",
                      "regexValidators": Immutable.List [],
                      "textChoiceValidator": undefined,
                      "recommendedVariable": false,
                      "required": false,
                      "scale": 4000,
                      "URL": undefined,
                      "shownInDetailsView": true,
                      "shownInInsertView": true,
                      "shownInUpdateView": true,
                      "visible": true,
                      "dataType": Immutable.Record {
                        "conceptURI": undefined,
                        "display": "Text",
                        "name": "string",
                        "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                        "alternateRangeURI": "xsd:string",
                        "shortDisplay": "String",
                        "lookupSchema": undefined,
                        "lookupQuery": undefined,
                      },
                      "lookupQueryValue": undefined,
                      "lookupType": Immutable.Record {
                        "conceptURI": undefined,
                        "display": "Lookup",
                        "name": "lookup",
                        "rangeURI": "xsd:string",
                        "alternateRangeURI": undefined,
                        "shortDisplay": undefined,
                        "lookupSchema": undefined,
                        "lookupQuery": undefined,
                      },
                      "original": {
                        "conceptURI": undefined,
                        "dataType": Immutable.Record {
                          "conceptURI": undefined,
                          "display": "Text",
                          "name": "string",
                          "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                          "alternateRangeURI": "xsd:string",
                          "shortDisplay": "String",
                          "lookupSchema": undefined,
                          "lookupQuery": undefined,
                        },
                        "name": "field1",
                        "rangeURI": undefined,
                      },
                      "updatedField": false,
                      "isPrimaryKey": false,
                      "lockType": "NotLocked",
                      "wrappedColumnName": undefined,
                      "disablePhiLevel": false,
                      "lockExistingField": false,
                      "sourceOntology": undefined,
                      "conceptSubtree": undefined,
                      "conceptLabelColumn": undefined,
                      "conceptImportColumn": undefined,
                      "principalConceptCode": undefined,
                      "derivationDataScope": undefined,
                      "selected": false,
                      "scannable": false,
                    },
                    Immutable.Record {
                      "conceptURI": undefined,
                      "conditionalFormats": Immutable.List [],
                      "defaultScale": undefined,
                      "defaultValueType": undefined,
                      "defaultValue": undefined,
                      "defaultDisplayValue": undefined,
                      "description": undefined,
                      "dimension": undefined,
                      "excludeFromShifting": false,
                      "format": undefined,
                      "hidden": false,
                      "importAliases": undefined,
                      "label": undefined,
                      "lookupContainer": undefined,
                      "lookupQuery": undefined,
                      "lookupSchema": undefined,
                      "lookupValidator": undefined,
                      "measure": undefined,
                      "mvEnabled": false,
                      "name": "field2",
                      "PHI": undefined,
                      "propertyId": undefined,
                      "propertyURI": undefined,
                      "propertyValidators": Immutable.List [],
                      "rangeValidators": Immutable.List [],
                      "rangeURI": "xsd:int",
                      "regexValidators": Immutable.List [],
                      "textChoiceValidator": undefined,
                      "recommendedVariable": false,
                      "required": false,
                      "scale": 4000,
                      "URL": undefined,
                      "shownInDetailsView": true,
                      "shownInInsertView": true,
                      "shownInUpdateView": true,
                      "visible": true,
                      "dataType": Immutable.Record {
                        "conceptURI": undefined,
                        "display": "Integer",
                        "name": "int",
                        "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                        "alternateRangeURI": "xsd:int",
                        "shortDisplay": undefined,
                        "lookupSchema": undefined,
                        "lookupQuery": undefined,
                      },
                      "lookupQueryValue": undefined,
                      "lookupType": Immutable.Record {
                        "conceptURI": undefined,
                        "display": "Lookup",
                        "name": "lookup",
                        "rangeURI": "xsd:int",
                        "alternateRangeURI": undefined,
                        "shortDisplay": undefined,
                        "lookupSchema": undefined,
                        "lookupQuery": undefined,
                      },
                      "original": {
                        "conceptURI": undefined,
                        "dataType": Immutable.Record {
                          "conceptURI": undefined,
                          "display": "Integer",
                          "name": "int",
                          "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                          "alternateRangeURI": "xsd:int",
                          "shortDisplay": undefined,
                          "lookupSchema": undefined,
                          "lookupQuery": undefined,
                        },
                        "name": "field2",
                        "rangeURI": undefined,
                      },
                      "updatedField": false,
                      "isPrimaryKey": false,
                      "lockType": "NotLocked",
                      "wrappedColumnName": undefined,
                      "disablePhiLevel": false,
                      "lockExistingField": false,
                      "sourceOntology": undefined,
                      "conceptSubtree": undefined,
                      "conceptLabelColumn": undefined,
                      "conceptImportColumn": undefined,
                      "principalConceptCode": undefined,
                      "derivationDataScope": undefined,
                      "selected": false,
                      "scannable": false,
                    },
                    Immutable.Record {
                      "conceptURI": undefined,
                      "conditionalFormats": Immutable.List [],
                      "defaultScale": undefined,
                      "defaultValueType": undefined,
                      "defaultValue": undefined,
                      "defaultDisplayValue": undefined,
                      "description": undefined,
                      "dimension": undefined,
                      "excludeFromShifting": false,
                      "format": undefined,
                      "hidden": false,
                      "importAliases": undefined,
                      "label": undefined,
                      "lookupContainer": undefined,
                      "lookupQuery": undefined,
                      "lookupSchema": undefined,
                      "lookupValidator": undefined,
                      "measure": undefined,
                      "mvEnabled": false,
                      "name": "field3",
                      "PHI": undefined,
                      "propertyId": undefined,
                      "propertyURI": undefined,
                      "propertyValidators": Immutable.List [],
                      "rangeValidators": Immutable.List [],
                      "rangeURI": "xsd:dateTime",
                      "regexValidators": Immutable.List [],
                      "textChoiceValidator": undefined,
                      "recommendedVariable": false,
                      "required": false,
                      "scale": 4000,
                      "URL": undefined,
                      "shownInDetailsView": true,
                      "shownInInsertView": true,
                      "shownInUpdateView": true,
                      "visible": true,
                      "dataType": Immutable.Record {
                        "conceptURI": undefined,
                        "display": "Date Time",
                        "name": "dateTime",
                        "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                        "alternateRangeURI": "xsd:dateTime",
                        "shortDisplay": undefined,
                        "lookupSchema": undefined,
                        "lookupQuery": undefined,
                      },
                      "lookupQueryValue": undefined,
                      "lookupType": Immutable.Record {
                        "conceptURI": undefined,
                        "display": "Lookup",
                        "name": "lookup",
                        "rangeURI": "xsd:dateTime",
                        "alternateRangeURI": undefined,
                        "shortDisplay": undefined,
                        "lookupSchema": undefined,
                        "lookupQuery": undefined,
                      },
                      "original": {
                        "conceptURI": undefined,
                        "dataType": Immutable.Record {
                          "conceptURI": undefined,
                          "display": "Date Time",
                          "name": "dateTime",
                          "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                          "alternateRangeURI": "xsd:dateTime",
                          "shortDisplay": undefined,
                          "lookupSchema": undefined,
                          "lookupQuery": undefined,
                        },
                        "name": "field3",
                        "rangeURI": undefined,
                      },
                      "updatedField": false,
                      "isPrimaryKey": false,
                      "lockType": "NotLocked",
                      "wrappedColumnName": undefined,
                      "disablePhiLevel": false,
                      "lockExistingField": false,
                      "sourceOntology": undefined,
                      "conceptSubtree": undefined,
                      "conceptLabelColumn": undefined,
                      "conceptImportColumn": undefined,
                      "principalConceptCode": undefined,
                      "derivationDataScope": undefined,
                      "selected": false,
                      "scannable": false,
                    },
                  ],
                  "indices": Immutable.List [],
                  "domainException": undefined,
                  "mandatoryFieldNames": Immutable.List [],
                  "reservedFieldNames": Immutable.List [],
                  "newDesignFields": undefined,
                  "instructions": undefined,
                  "domainKindName": undefined,
                  "schemaName": undefined,
                  "queryName": undefined,
                },
              ]
            }
            onChange={[Function]}
            onToggle={[Function]}
            panelStatus="COMPLETE"
            showHeader={true}
            successBsStyle="success"
            testMode={true}
            validate={false}
          >
            <ForwardRef
              className="domain-form-panel"
              expanded={false}
              onToggle={[Function]}
            >
              <Uncontrolled(Panel)
                className="domain-form-panel"
                expanded={false}
                innerRef={null}
                onToggle={[Function]}
              >
                <Panel
                  bsClass="panel"
                  bsStyle="default"
                  className="domain-form-panel"
                  expanded={false}
                  onToggle={[Function]}
                >
                  <div
                    className="domain-form-panel panel panel-default"
                  >
                    <CollapsiblePanelHeader
                      collapsed={true}
                      controlledCollapse={true}
                      headerDetails="3 Fields Defined"
                      id="domainpropertiesrow-Sample-Fields-hdr"
                      isValid={true}
                      panelStatus="COMPLETE"
                      title="Sample Fields"
                      togglePanel={[Function]}
                    >
                      <PanelHeading
                        bsClass="panel"
                        className="domain-panel-header domain-heading-collapsible domain-panel-header-collapsed"
                        componentClass="div"
                        id="domainpropertiesrow-Sample-Fields-hdr"
                        onClick={[Function]}
                      >
                        <div
                          className="domain-panel-header domain-heading-collapsible domain-panel-header-collapsed panel-heading"
                          id="domainpropertiesrow-Sample-Fields-hdr"
                          onClick={[Function]}
                        >
                          <span
                            className="domain-panel-status-icon domain-panel-status-icon-green"
                          >
                            <span
                              className="fa fa-check-circle"
                            />
                          </span>
                          <span
                            className="domain-panel-title"
                          >
                            Sample Fields
                          </span>
                          <span
                            className="pull-right"
                          >
                            <span
                              className="fa fa-lg fa-plus-square domain-form-expand-btn"
                            />
                          </span>
                          <Component
                            id="tooltip"
                            placement="top"
                            title="Sample Fields"
                          >
                            <span
                              className="label-help-target"
                              onMouseOut={[Function]}
                              onMouseOver={[Function]}
                            >
                              <span
                                className="label-help-icon fa fa-question-circle"
                              />
                              <Overlay
                                animation={[Function]}
                                placement="top"
                                rootClose={false}
                                show={false}
                              >
                                <Overlay
                                  placement="top"
                                  rootClose={false}
                                  show={false}
                                  transition={[Function]}
                                />
                              </Overlay>
                            </span>
                          </Component>
                          <span
                            className="domain-panel-header-fields-defined"
                          >
                            3 Fields Defined
                          </span>
                        </div>
                      </PanelHeading>
                    </CollapsiblePanelHeader>
                    <PanelBody
                      bsClass="panel"
                      className="domain-field-top-noBuffer"
                      collapsible={true}
                    >
                      <PanelCollapse
                        bsClass="panel"
                      >
                        <Collapse
                          appear={false}
                          dimension="height"
                          getDimensionValue={[Function]}
                          in={false}
                          mountOnEnter={false}
                          timeout={300}
                          unmountOnExit={false}
                        >
                          <Transition
                            appear={false}
                            aria-expanded={null}
                            enter={true}
                            exit={true}
                            in={false}
                            mountOnEnter={false}
                            onEnter={[Function]}
                            onEntered={[Function]}
                            onEntering={[Function]}
                            onExit={[Function]}
                            onExited={[Function]}
                            onExiting={[Function]}
                            timeout={300}
                            unmountOnExit={false}
                          >
                            <div
                              aria-expanded={null}
                              className="panel-collapse collapse"
                            >
                              <div
                                className="domain-field-top-noBuffer panel-body"
                              >
                                <Row
                                  bsClass="row"
                                  className="domain-field-toolbar"
                                  componentClass="div"
                                >
                                  <div
                                    className="domain-field-toolbar row"
                                  >
                                    <Col
                                      bsClass="col"
                                      componentClass="div"
                                      xs={4}
                                    >
                                      <div
                                        className="col-xs-4"
                                      >
                                        <AddEntityButton
                                          buttonClass="domain-toolbar-add-btn"
                                          containerClass="container--toolbar-button"
                                          entity="Field"
                                          onClick={[Function]}
                                        >
                                          <ActionButton
                                            buttonClass="domain-toolbar-add-btn"
                                            containerClass="container--toolbar-button"
                                            helperTitle="More Info"
                                            onClick={[Function]}
                                          >
                                            <div
                                              className="container--toolbar-button"
                                            >
                                              <div
                                                className="domain-toolbar-add-btn"
                                              >
                                                <span
                                                  className="container--action-button btn btn-default"
                                                  onClick={[Function]}
                                                >
                                                  <i
                                                    className="fa fa-plus-circle container--addition-icon"
                                                  />
                                                   Add 
                                                  Field
                                                </span>
                                              </div>
                                            </div>
                                          </ActionButton>
                                        </AddEntityButton>
                                        <ActionButton
                                          buttonClass="domain-toolbar-delete-btn"
                                          containerClass="container--toolbar-button"
                                          disabled={true}
                                          helperTitle="More Info"
                                          onClick={[Function]}
                                        >
                                          <div
                                            className="container--toolbar-button"
                                          >
                                            <div
                                              className="domain-toolbar-delete-btn"
                                            >
                                              <span
                                                className="container--action-button btn btn-default disabled"
                                              >
                                                <i
                                                  className="fa fa-trash domain-toolbar-export-btn-icon"
                                                />
                                                 Delete
                                              </span>
                                            </div>
                                          </div>
                                        </ActionButton>
                                        <ActionButton
                                          buttonClass="domain-toolbar-export-btn"
                                          containerClass="container--toolbar-button"
                                          disabled={false}
                                          helperTitle="More Info"
                                          onClick={[Function]}
                                        >
                                          <div
                                            className="container--toolbar-button"
                                          >
                                            <div
                                              className="domain-toolbar-export-btn"
                                            >
                                              <span
                                                className="container--action-button btn btn-default"
                                                onClick={[Function]}
                                              >
                                                <i
                                                  className="fa fa-download domain-toolbar-export-btn-icon"
                                                />
                                                 Export
                                              </span>
                                            </div>
                                          </div>
                                        </ActionButton>
                                      </div>
                                    </Col>
                                    <Col
                                      bsClass="col"
                                      componentClass="div"
                                      xs={8}
                                    >
                                      <div
                                        className="col-xs-8"
                                      >
                                        <div
                                          className="pull-right domain-field-toolbar-right-aligned"
                                        >
                                          <FormControl
                                            bsClass="form-control"
                                            className="domain-search-input"
                                            componentClass="input"
                                            id="domain-search-name-1"
                                            onChange={[Function]}
                                            placeholder="Search Fields"
                                            type="text"
                                          >
                                            <input
                                              className="domain-search-input form-control"
                                              id="domain-search-name-1"
                                              onChange={[Function]}
                                              placeholder="Search Fields"
                                              type="text"
                                            />
                                          </FormControl>
                                        </div>
                                      </div>
                                    </Col>
                                  </div>
                                </Row>
                                <Row
                                  bsClass="row"
                                  className=""
                                  componentClass="div"
                                >
                                  <div
                                    className="row"
                                  >
                                    <Col
                                      bsClass="col"
                                      componentClass="div"
                                      xs={12}
                                    >
                                      <div
                                        className="col-xs-12"
                                      />
                                    </Col>
                                  </div>
                                </Row>
                                <DragDropContext
                                  onBeforeDragStart={[Function]}
                                  onDragEnd={[Function]}
                                >
                                  <ErrorBoundary>
                                    <App
                                      contextId="1"
                                      dragHandleUsageInstructions="
  Press space bar to start a drag.
  When dragging you can use the arrow keys to move the item around and escape to cancel.
  Some screen readers may require you to be in focus mode or to use your pass through key
"
                                      onBeforeDragStart={[Function]}
                                      onDragEnd={[Function]}
                                      setCallbacks={[Function]}
                                    >
                                      <Provider
                                        context={
                                          {
                                            "$$typeof": Symbol(react.context),
                                            "Consumer": {
                                              "$$typeof": Symbol(react.context),
                                              "_calculateChangedBits": null,
                                              "_context": [Circular],
                                            },
                                            "Provider": {
                                              "$$typeof": Symbol(react.provider),
                                              "_context": [Circular],
                                            },
                                            "_calculateChangedBits": null,
                                            "_currentRenderer": {},
                                            "_currentRenderer2": null,
                                            "_currentValue": null,
                                            "_currentValue2": null,
                                            "_threadCount": 0,
                                          }
                                        }
                                        store={
                                          {
                                            "@@observable": [Function],
                                            "dispatch": [Function],
                                            "getState": [Function],
                                            "replaceReducer": [Function],
                                            "subscribe": [Function],
                                          }
                                        }
                                      >
                                        <div
                                          className="domain-field-row domain-row-border-default domain-floating-hdr"
                                        >
                                          <Alert
                                            bsStyle="info"
                                          />
                                          <Row
                                            bsClass="row"
                                            componentClass="div"
                                          >
                                            <div
                                              className="row"
                                            >
                                              <div
                                                className="domain-field-header"
                                              >
                                                0
                                                 
                                                fields
                                                 selected
                                                <Button
                                                  active={false}
                                                  block={false}
                                                  bsClass="btn"
                                                  bsStyle="default"
                                                  className="domain-panel-header-clear-all"
                                                  disabled={true}
                                                  onClick={[Function]}
                                                >
                                                  <button
                                                    className="domain-panel-header-clear-all btn btn-default"
                                                    disabled={true}
                                                    onClick={[Function]}
                                                    type="button"
                                                  >
                                                    Clear
                                                  </button>
                                                </Button>
                                              </div>
                                            </div>
                                          </Row>
                                          <Row
                                            bsClass="row"
                                            className="domain-row-container"
                                            componentClass="div"
                                          >
                                            <div
                                              className="domain-row-container row"
                                            >
                                              <div
                                                className="domain-row-handle"
                                              />
                                              <div
                                                className="domain-row-action-section"
                                              >
                                                <Checkbox
                                                  bsClass="checkbox"
                                                  checked={false}
                                                  className="domain-field-check-icon"
                                                  disabled={false}
                                                  id="domain-select-all-checkbox"
                                                  inline={false}
                                                  name="domain-select-all-checkbox"
                                                  onChange={[Function]}
                                                  title=""
                                                >
                                                  <div
                                                    className="domain-field-check-icon checkbox"
                                                  >
                                                    <label
                                                      title=""
                                                    >
                                                      <input
                                                        checked={false}
                                                        disabled={false}
                                                        id="domain-select-all-checkbox"
                                                        name="domain-select-all-checkbox"
                                                        onChange={[Function]}
                                                        type="checkbox"
                                                      />
                                                    </label>
                                                  </div>
                                                </Checkbox>
                                              </div>
                                              <div>
                                                <Col
                                                  bsClass="col"
                                                  className="domain-row-base-fields"
                                                  componentClass="div"
                                                  xs={6}
                                                >
                                                  <div
                                                    className="domain-row-base-fields col-xs-6"
                                                  >
                                                    <Col
                                                      bsClass="col"
                                                      componentClass="div"
                                                      xs={6}
                                                    >
                                                      <div
                                                        className="col-xs-6"
                                                      >
                                                        <b>
                                                          Name *
                                                        </b>
                                                      </div>
                                                    </Col>
                                                    <Col
                                                      bsClass="col"
                                                      componentClass="div"
                                                      xs={4}
                                                    >
                                                      <div
                                                        className="col-xs-4"
                                                      >
                                                        <b>
                                                          Data Type *
                                                        </b>
                                                      </div>
                                                    </Col>
                                                    <Col
                                                      bsClass="col"
                                                      componentClass="div"
                                                      xs={2}
                                                    >
                                                      <div
                                                        className="col-xs-2"
                                                      >
                                                        <b>
                                                          Required
                                                        </b>
                                                      </div>
                                                    </Col>
                                                  </div>
                                                </Col>
                                                <Col
                                                  bsClass="col"
                                                  componentClass="div"
                                                  xs={6}
                                                >
                                                  <div
                                                    className="col-xs-6"
                                                  >
                                                    <b>
                                                      Details
                                                    </b>
                                                  </div>
                                                </Col>
                                              </div>
                                            </div>
                                          </Row>
                                        </div>
                                        <Connect(Droppable)
                                          direction="vertical"
                                          droppableId="domain-form-droppable"
                                          getContainerForClone={[Function]}
                                          ignoreContainerClipping={false}
                                          isCombineEnabled={false}
                                          isDropDisabled={false}
                                          mode="standard"
                                          renderClone={null}
                                          type="DEFAULT"
                                        >
                                          <Droppable
                                            direction="vertical"
                                            droppableId="domain-form-droppable"
                                            getContainerForClone={[Function]}
                                            ignoreContainerClipping={false}
                                            isCombineEnabled={false}
                                            isDropDisabled={false}
                                            mode="standard"
                                            placeholder={null}
                                            renderClone={null}
                                            shouldAnimatePlaceholder={false}
                                            snapshot={
                                              {
                                                "draggingFromThisWith": null,
                                                "draggingOverWith": null,
                                                "isDraggingOver": false,
                                                "isUsingPlaceholder": false,
                                              }
                                            }
                                            type="DEFAULT"
                                            updateViewportMaxScroll={[Function]}
                                            useClone={null}
                                          >
                                            <div
                                              data-rbd-droppable-context-id="1"
                                              data-rbd-droppable-id="domain-form-droppable"
                                            >
                                              <Form
                                                bsClass="form"
                                                className="domain-form"
                                                componentClass="form"
                                                horizontal={false}
                                                inline={false}
                                              >
                                                <form
                                                  className="domain-form"
                                                >
                                                  <DomainRow
                                                    appPropertiesOnly={false}
                                                    availableTypes={
                                                      Immutable.List [
                                                        Immutable.Record {
                                                          "conceptURI": undefined,
                                                          "display": "Text",
                                                          "name": "string",
                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                          "alternateRangeURI": "xsd:string",
                                                          "shortDisplay": "String",
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                        Immutable.Record {
                                                          "conceptURI": undefined,
                                                          "display": "Multi-Line Text",
                                                          "name": "multiLine",
                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#multiLine",
                                                          "alternateRangeURI": undefined,
                                                          "shortDisplay": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                        Immutable.Record {
                                                          "conceptURI": undefined,
                                                          "display": "Boolean",
                                                          "name": "boolean",
                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#boolean",
                                                          "alternateRangeURI": "xsd:boolean",
                                                          "shortDisplay": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                        Immutable.Record {
                                                          "conceptURI": undefined,
                                                          "display": "Integer",
                                                          "name": "int",
                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                                          "alternateRangeURI": "xsd:int",
                                                          "shortDisplay": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                        Immutable.Record {
                                                          "conceptURI": undefined,
                                                          "display": "Decimal (floating point)",
                                                          "name": "double",
                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#double",
                                                          "alternateRangeURI": "xsd:double",
                                                          "shortDisplay": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                        Immutable.Record {
                                                          "conceptURI": undefined,
                                                          "display": "Date Time",
                                                          "name": "dateTime",
                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                                                          "alternateRangeURI": "xsd:dateTime",
                                                          "shortDisplay": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                        Immutable.Record {
                                                          "conceptURI": "http://www.labkey.org/exp/xml#flag",
                                                          "display": "Flag",
                                                          "name": "flag",
                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                          "alternateRangeURI": undefined,
                                                          "shortDisplay": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                        Immutable.Record {
                                                          "conceptURI": undefined,
                                                          "display": "User",
                                                          "name": "users",
                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                                          "alternateRangeURI": undefined,
                                                          "shortDisplay": undefined,
                                                          "lookupSchema": "core",
                                                          "lookupQuery": "users",
                                                        },
                                                        Immutable.Record {
                                                          "conceptURI": "http://cpas.labkey.com/Study#ParticipantId",
                                                          "display": "Subject/Participant",
                                                          "name": "ParticipantId",
                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                          "alternateRangeURI": undefined,
                                                          "shortDisplay": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                        Immutable.Record {
                                                          "conceptURI": undefined,
                                                          "display": "Lookup",
                                                          "name": "lookup",
                                                          "rangeURI": undefined,
                                                          "alternateRangeURI": undefined,
                                                          "shortDisplay": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                        Immutable.Record {
                                                          "conceptURI": "http://www.labkey.org/exp/xml#sample",
                                                          "display": "Sample",
                                                          "name": "sample",
                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                                          "alternateRangeURI": undefined,
                                                          "shortDisplay": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                        Immutable.Record {
                                                          "conceptURI": "http://www.labkey.org/types#textChoice",
                                                          "display": "Text Choice",
                                                          "name": "textChoice",
                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                          "alternateRangeURI": undefined,
                                                          "shortDisplay": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                      ]
                                                    }
                                                    defaultValueOptions={Immutable.List []}
                                                    domainFormDisplayOptions={
                                                      {
                                                        "domainKindDisplayName": "assay design",
                                                        "hideFilePropertyType": undefined,
                                                        "hideInferFromFile": true,
                                                        "hideStudyPropertyTypes": true,
                                                        "textChoiceLockedForDomain": true,
                                                      }
                                                    }
                                                    domainId={null}
                                                    domainIndex={1}
                                                    dragging={false}
                                                    expandTransition={300}
                                                    expanded={false}
                                                    field={
                                                      Immutable.Record {
                                                        "conceptURI": undefined,
                                                        "conditionalFormats": Immutable.List [],
                                                        "defaultScale": undefined,
                                                        "defaultValueType": undefined,
                                                        "defaultValue": undefined,
                                                        "defaultDisplayValue": undefined,
                                                        "description": undefined,
                                                        "dimension": undefined,
                                                        "excludeFromShifting": false,
                                                        "format": undefined,
                                                        "hidden": false,
                                                        "importAliases": undefined,
                                                        "label": undefined,
                                                        "lookupContainer": undefined,
                                                        "lookupQuery": undefined,
                                                        "lookupSchema": undefined,
                                                        "lookupValidator": undefined,
                                                        "measure": undefined,
                                                        "mvEnabled": false,
                                                        "name": "field1",
                                                        "PHI": undefined,
                                                        "propertyId": undefined,
                                                        "propertyURI": undefined,
                                                        "propertyValidators": Immutable.List [],
                                                        "rangeValidators": Immutable.List [],
                                                        "rangeURI": "xsd:string",
                                                        "regexValidators": Immutable.List [],
                                                        "textChoiceValidator": undefined,
                                                        "recommendedVariable": false,
                                                        "required": false,
                                                        "scale": 4000,
                                                        "URL": undefined,
                                                        "shownInDetailsView": true,
                                                        "shownInInsertView": true,
                                                        "shownInUpdateView": true,
                                                        "visible": true,
                                                        "dataType": Immutable.Record {
                                                          "conceptURI": undefined,
                                                          "display": "Text",
                                                          "name": "string",
                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                          "alternateRangeURI": "xsd:string",
                                                          "shortDisplay": "String",
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                        "lookupQueryValue": undefined,
                                                        "lookupType": Immutable.Record {
                                                          "conceptURI": undefined,
                                                          "display": "Lookup",
                                                          "name": "lookup",
                                                          "rangeURI": "xsd:string",
                                                          "alternateRangeURI": undefined,
                                                          "shortDisplay": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                        "original": {
                                                          "conceptURI": undefined,
                                                          "dataType": Immutable.Record {
                                                            "conceptURI": undefined,
                                                            "display": "Text",
                                                            "name": "string",
                                                            "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                            "alternateRangeURI": "xsd:string",
                                                            "shortDisplay": "String",
                                                            "lookupSchema": undefined,
                                                            "lookupQuery": undefined,
                                                          },
                                                          "name": "field1",
                                                          "rangeURI": undefined,
                                                        },
                                                        "updatedField": false,
                                                        "isPrimaryKey": false,
                                                        "lockType": "NotLocked",
                                                        "wrappedColumnName": undefined,
                                                        "disablePhiLevel": false,
                                                        "lockExistingField": false,
                                                        "sourceOntology": undefined,
                                                        "conceptSubtree": undefined,
                                                        "conceptLabelColumn": undefined,
                                                        "conceptImportColumn": undefined,
                                                        "principalConceptCode": undefined,
                                                        "derivationDataScope": undefined,
                                                        "selected": false,
                                                        "scannable": false,
                                                      }
                                                    }
                                                    fieldDetailsInfo={{}}
                                                    getDomainFields={[Function]}
                                                    helpNoun="field designer"
                                                    index={0}
                                                    key="domain-row-key-0"
                                                    maxPhiLevel="Restricted"
                                                    onChange={[Function]}
                                                    onDelete={[Function]}
                                                    onExpand={[Function]}
                                                    showDefaultValueSettings={false}
                                                    successBsStyle="success"
                                                  >
                                                    <PublicDraggable
                                                      draggableId="domainpropertiesrow-domaindrag-1-0"
                                                      index={0}
                                                    >
                                                      <PrivateDraggable
                                                        canDragInteractiveElements={false}
                                                        draggableId="domainpropertiesrow-domaindrag-1-0"
                                                        index={0}
                                                        isClone={false}
                                                        isEnabled={true}
                                                        shouldRespectForcePress={false}
                                                      >
                                                        <Connect(Draggable)
                                                          canDragInteractiveElements={false}
                                                          draggableId="domainpropertiesrow-domaindrag-1-0"
                                                          index={0}
                                                          isClone={false}
                                                          isEnabled={true}
                                                          shouldRespectForcePress={false}
                                                        >
                                                          <Draggable
                                                            canDragInteractiveElements={false}
                                                            draggableId="domainpropertiesrow-domaindrag-1-0"
                                                            dropAnimationFinished={[Function]}
                                                            index={0}
                                                            isClone={false}
                                                            isEnabled={true}
                                                            mapped={
                                                              {
                                                                "combineTargetFor": null,
                                                                "offset": {
                                                                  "x": 0,
                                                                  "y": 0,
                                                                },
                                                                "shouldAnimateDisplacement": true,
                                                                "snapshot": {
                                                                  "combineTargetFor": null,
                                                                  "combineWith": null,
                                                                  "draggingOver": null,
                                                                  "dropAnimation": null,
                                                                  "isClone": false,
                                                                  "isDragging": false,
                                                                  "isDropAnimating": false,
                                                                  "mode": null,
                                                                },
                                                                "type": "SECONDARY",
                                                              }
                                                            }
                                                            shouldRespectForcePress={false}
                                                          >
                                                            <div
                                                              className="domain-field-row domain-row-border-default"
                                                              data-rbd-draggable-context-id="1"
                                                              data-rbd-draggable-id="domainpropertiesrow-domaindrag-1-0"
                                                              onTransitionEnd={null}
                                                              style={
                                                                {
                                                                  "transform": null,
                                                                  "transition": null,
                                                                }
                                                              }
                                                              tabIndex={0}
                                                            >
                                                              <Row
                                                                bsClass="row"
                                                                className="domain-row-container"
                                                                componentClass="div"
                                                                key="domainpropertiesrow-domainrow-1-0"
                                                              >
                                                                <div
                                                                  className="domain-row-container row"
                                                                >
                                                                  <AdvancedSettings
                                                                    defaultValueOptions={Immutable.List []}
                                                                    domainFormDisplayOptions={
                                                                      {
                                                                        "domainKindDisplayName": "assay design",
                                                                        "hideFilePropertyType": undefined,
                                                                        "hideInferFromFile": true,
                                                                        "hideStudyPropertyTypes": true,
                                                                        "textChoiceLockedForDomain": true,
                                                                      }
                                                                    }
                                                                    domainId={null}
                                                                    domainIndex={1}
                                                                    field={
                                                                      Immutable.Record {
                                                                        "conceptURI": undefined,
                                                                        "conditionalFormats": Immutable.List [],
                                                                        "defaultScale": undefined,
                                                                        "defaultValueType": undefined,
                                                                        "defaultValue": undefined,
                                                                        "defaultDisplayValue": undefined,
                                                                        "description": undefined,
                                                                        "dimension": undefined,
                                                                        "excludeFromShifting": false,
                                                                        "format": undefined,
                                                                        "hidden": false,
                                                                        "importAliases": undefined,
                                                                        "label": undefined,
                                                                        "lookupContainer": undefined,
                                                                        "lookupQuery": undefined,
                                                                        "lookupSchema": undefined,
                                                                        "lookupValidator": undefined,
                                                                        "measure": undefined,
                                                                        "mvEnabled": false,
                                                                        "name": "field1",
                                                                        "PHI": undefined,
                                                                        "propertyId": undefined,
                                                                        "propertyURI": undefined,
                                                                        "propertyValidators": Immutable.List [],
                                                                        "rangeValidators": Immutable.List [],
                                                                        "rangeURI": "xsd:string",
                                                                        "regexValidators": Immutable.List [],
                                                                        "textChoiceValidator": undefined,
                                                                        "recommendedVariable": false,
                                                                        "required": false,
                                                                        "scale": 4000,
                                                                        "URL": undefined,
                                                                        "shownInDetailsView": true,
                                                                        "shownInInsertView": true,
                                                                        "shownInUpdateView": true,
                                                                        "visible": true,
                                                                        "dataType": Immutable.Record {
                                                                          "conceptURI": undefined,
                                                                          "display": "Text",
                                                                          "name": "string",
                                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                                          "alternateRangeURI": "xsd:string",
                                                                          "shortDisplay": "String",
                                                                          "lookupSchema": undefined,
                                                                          "lookupQuery": undefined,
                                                                        },
                                                                        "lookupQueryValue": undefined,
                                                                        "lookupType": Immutable.Record {
                                                                          "conceptURI": undefined,
                                                                          "display": "Lookup",
                                                                          "name": "lookup",
                                                                          "rangeURI": "xsd:string",
                                                                          "alternateRangeURI": undefined,
                                                                          "shortDisplay": undefined,
                                                                          "lookupSchema": undefined,
                                                                          "lookupQuery": undefined,
                                                                        },
                                                                        "original": {
                                                                          "conceptURI": undefined,
                                                                          "dataType": Immutable.Record {
                                                                            "conceptURI": undefined,
                                                                            "display": "Text",
                                                                            "name": "string",
                                                                            "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                                            "alternateRangeURI": "xsd:string",
                                                                            "shortDisplay": "String",
                                                                            "lookupSchema": undefined,
                                                                            "lookupQuery": undefined,
                                                                          },
                                                                          "name": "field1",
                                                                          "rangeURI": undefined,
                                                                        },
                                                                        "updatedField": false,
                                                                        "isPrimaryKey": false,
                                                                        "lockType": "NotLocked",
                                                                        "wrappedColumnName": undefined,
                                                                        "disablePhiLevel": false,
                                                                        "lockExistingField": false,
                                                                        "sourceOntology": undefined,
                                                                        "conceptSubtree": undefined,
                                                                        "conceptLabelColumn": undefined,
                                                                        "conceptImportColumn": undefined,
                                                                        "principalConceptCode": undefined,
                                                                        "derivationDataScope": undefined,
                                                                        "selected": false,
                                                                        "scannable": false,
                                                                      }
                                                                    }
                                                                    helpNoun="field designer"
                                                                    index={0}
                                                                    label="field1"
                                                                    maxPhiLevel="Restricted"
                                                                    onApply={[Function]}
                                                                    onHide={[Function]}
                                                                    show={false}
                                                                    showDefaultValueSettings={false}
                                                                    successBsStyle="success"
                                                                  >
                                                                    <Modal
                                                                      animation={true}
                                                                      autoFocus={true}
                                                                      backdrop={true}
                                                                      bsClass="modal"
                                                                      dialogComponentClass={[Function]}
                                                                      enforceFocus={true}
                                                                      keyboard={true}
                                                                      manager={
                                                                        ModalManager {
                                                                          "add": [Function],
                                                                          "containers": [],
                                                                          "data": [],
                                                                          "handleContainerOverflow": true,
                                                                          "hideSiblingNodes": true,
                                                                          "isTopModal": [Function],
                                                                          "modals": [],
                                                                          "remove": [Function],
                                                                        }
                                                                      }
                                                                      onEnter={[Function]}
                                                                      onHide={[Function]}
                                                                      renderBackdrop={[Function]}
                                                                      restoreFocus={true}
                                                                      show={false}
                                                                    >
                                                                      <Modal
                                                                        autoFocus={true}
                                                                        backdrop={true}
                                                                        backdropClassName="modal-backdrop"
                                                                        backdropTransition={[Function]}
                                                                        containerClassName="modal-open"
                                                                        enforceFocus={true}
                                                                        keyboard={true}
                                                                        manager={
                                                                          ModalManager {
                                                                            "add": [Function],
                                                                            "containers": [],
                                                                            "data": [],
                                                                            "handleContainerOverflow": true,
                                                                            "hideSiblingNodes": true,
                                                                            "isTopModal": [Function],
                                                                            "modals": [],
                                                                            "remove": [Function],
                                                                          }
                                                                        }
                                                                        onEnter={[Function]}
                                                                        onEntering={[Function]}
                                                                        onExited={[Function]}
                                                                        onHide={[Function]}
                                                                        onMouseUp={[Function]}
                                                                        renderBackdrop={[Function]}
                                                                        restoreFocus={true}
                                                                        show={false}
                                                                        transition={[Function]}
                                                                      />
                                                                    </Modal>
                                                                  </AdvancedSettings>
                                                                  <div
                                                                    aria-describedby="rbd-hidden-text-1-hidden-text-5"
                                                                    className="domain-row-handle"
                                                                    data-rbd-drag-handle-context-id="1"
                                                                    data-rbd-drag-handle-draggable-id="domainpropertiesrow-domaindrag-1-0"
                                                                    draggable={false}
                                                                    onDragStart={[Function]}
                                                                    role="button"
                                                                    tabIndex={0}
                                                                  >
                                                                    <DragDropHandle>
                                                                      <div
                                                                        className="drag-drop-handle"
                                                                      >
                                                                        <span
                                                                          className="fa fa-ellipsis-v"
                                                                        />
                                                                        <span
                                                                          className="fa fa-ellipsis-v"
                                                                        />
                                                                      </div>
                                                                    </DragDropHandle>
                                                                  </div>
                                                                  <div
                                                                    className="domain-row-action-section"
                                                                  >
                                                                    <Checkbox
                                                                      bsClass="checkbox"
                                                                      checked={false}
                                                                      className="domain-field-check-icon"
                                                                      disabled={false}
                                                                      id="domainpropertiesrow-selected-1-0"
                                                                      inline={false}
                                                                      name="domainpropertiesrow-selected"
                                                                      onChange={[Function]}
                                                                      title=""
                                                                    >
                                                                      <div
                                                                        className="domain-field-check-icon checkbox"
                                                                      >
                                                                        <label
                                                                          title=""
                                                                        >
                                                                          <input
                                                                            checked={false}
                                                                            disabled={false}
                                                                            id="domainpropertiesrow-selected-1-0"
                                                                            name="domainpropertiesrow-selected"
                                                                            onChange={[Function]}
                                                                            type="checkbox"
                                                                          />
                                                                        </label>
                                                                      </div>
                                                                    </Checkbox>
                                                                    <FieldExpansionToggle
                                                                      cls="domain-field-expand-icon"
                                                                      collapsedTitle="Show additional field properties"
                                                                      expanded={false}
                                                                      expandedTitle="Hide additional field properties"
                                                                      id="domainpropertiesrow-expand-1-0"
                                                                      onClick={[Function]}
                                                                    >
                                                                      <div
                                                                        className="field-icon domain-field-expand-icon"
                                                                        id="domainpropertiesrow-expand-1-0"
                                                                        onClick={[Function]}
                                                                        title="Show additional field properties"
                                                                      >
                                                                        <span
                                                                          className="fa fa-lg fa-plus-square"
                                                                        />
                                                                      </div>
                                                                    </FieldExpansionToggle>
                                                                  </div>
                                                                  <div
                                                                    className="domain-row-main"
                                                                  >
                                                                    <Col
                                                                      bsClass="col"
                                                                      className="domain-row-base-fields domain-row-base-fields-position"
                                                                      componentClass="div"
                                                                      xs={6}
                                                                    >
                                                                      <div
                                                                        className="domain-row-base-fields domain-row-base-fields-position col-xs-6"
                                                                      >
                                                                        <div
                                                                          id="domainpropertiesrow-row-1-0"
                                                                        >
                                                                          <Col
                                                                            bsClass="col"
                                                                            componentClass="div"
                                                                            xs={6}
                                                                          >
                                                                            <div
                                                                              className="col-xs-6"
                                                                            >
                                                                              <FormControl
                                                                                bsClass="form-control"
                                                                                componentClass="input"
                                                                                disabled={false}
                                                                                id="domainpropertiesrow-name-1-0"
                                                                                name="domainpropertiesrow-name"
                                                                                onChange={[Function]}
                                                                                type="text"
                                                                                value="field1"
                                                                              >
                                                                                <input
                                                                                  className="form-control"
                                                                                  disabled={false}
                                                                                  id="domainpropertiesrow-name-1-0"
                                                                                  name="domainpropertiesrow-name"
                                                                                  onChange={[Function]}
                                                                                  type="text"
                                                                                  value="field1"
                                                                                />
                                                                              </FormControl>
                                                                            </div>
                                                                          </Col>
                                                                          <Col
                                                                            bsClass="col"
                                                                            componentClass="div"
                                                                            xs={4}
                                                                          >
                                                                            <div
                                                                              className="col-xs-4"
                                                                            >
                                                                              <FormControl
                                                                                bsClass="form-control"
                                                                                componentClass="select"
                                                                                disabled={false}
                                                                                id="domainpropertiesrow-type-1-0"
                                                                                name="domainpropertiesrow-type"
                                                                                onChange={[Function]}
                                                                                value="string"
                                                                              >
                                                                                <select
                                                                                  className="form-control"
                                                                                  disabled={false}
                                                                                  id="domainpropertiesrow-type-1-0"
                                                                                  name="domainpropertiesrow-type"
                                                                                  onChange={[Function]}
                                                                                  value="string"
                                                                                >
                                                                                  <option
                                                                                    key="boolean"
                                                                                    value="boolean"
                                                                                  >
                                                                                    Boolean
                                                                                  </option>
                                                                                  <option
                                                                                    key="dateTime"
                                                                                    value="dateTime"
                                                                                  >
                                                                                    Date Time
                                                                                  </option>
                                                                                  <option
                                                                                    key="double"
                                                                                    value="double"
                                                                                  >
                                                                                    Decimal (floating point)
                                                                                  </option>
                                                                                  <option
                                                                                    key="flag"
                                                                                    value="flag"
                                                                                  >
                                                                                    Flag
                                                                                  </option>
                                                                                  <option
                                                                                    key="int"
                                                                                    value="int"
                                                                                  >
                                                                                    Integer
                                                                                  </option>
                                                                                  <option
                                                                                    key="lookup"
                                                                                    value="lookup"
                                                                                  >
                                                                                    Lookup
                                                                                  </option>
                                                                                  <option
                                                                                    key="multiLine"
                                                                                    value="multiLine"
                                                                                  >
                                                                                    Multi-Line Text
                                                                                  </option>
                                                                                  <option
                                                                                    key="sample"
                                                                                    value="sample"
                                                                                  >
                                                                                    Sample
                                                                                  </option>
                                                                                  <option
                                                                                    key="string"
                                                                                    value="string"
                                                                                  >
                                                                                    Text
                                                                                  </option>
                                                                                  <option
                                                                                    key="textChoice"
                                                                                    value="textChoice"
                                                                                  >
                                                                                    Text Choice
                                                                                  </option>
                                                                                  <option
                                                                                    key="users"
                                                                                    value="users"
                                                                                  >
                                                                                    User
                                                                                  </option>
                                                                                </select>
                                                                              </FormControl>
                                                                            </div>
                                                                          </Col>
                                                                          <Col
                                                                            bsClass="col"
                                                                            componentClass="div"
                                                                            xs={2}
                                                                          >
                                                                            <div
                                                                              className="col-xs-2"
                                                                            >
                                                                              <div
                                                                                className="domain-field-checkbox-container"
                                                                              >
                                                                                <Checkbox
                                                                                  bsClass="checkbox"
                                                                                  checked={false}
                                                                                  className="domain-field-checkbox"
                                                                                  disabled={false}
                                                                                  id="domainpropertiesrow-required-1-0"
                                                                                  inline={false}
                                                                                  name="domainpropertiesrow-required"
                                                                                  onChange={[Function]}
                                                                                  title=""
                                                                                >
                                                                                  <div
                                                                                    className="domain-field-checkbox checkbox"
                                                                                  >
                                                                                    <label
                                                                                      title=""
                                                                                    >
                                                                                      <input
                                                                                        checked={false}
                                                                                        disabled={false}
                                                                                        id="domainpropertiesrow-required-1-0"
                                                                                        name="domainpropertiesrow-required"
                                                                                        onChange={[Function]}
                                                                                        type="checkbox"
                                                                                      />
                                                                                    </label>
                                                                                  </div>
                                                                                </Checkbox>
                                                                              </div>
                                                                            </div>
                                                                          </Col>
                                                                        </div>
                                                                      </div>
                                                                    </Col>
                                                                    <Col
                                                                      bsClass="col"
                                                                      className="domain-row-details-container"
                                                                      componentClass="div"
                                                                      xs={6}
                                                                    >
                                                                      <div
                                                                        className="domain-row-details-container col-xs-6"
                                                                      >
                                                                        <div
                                                                          className="domain-field-details"
                                                                          id="domainpropertiesrow-details-1-0"
                                                                        >
                                                                          New Field
                                                                        </div>
                                                                        <div
                                                                          className="domain-field-buttons"
                                                                        >
                                                                          <Memo()
                                                                            iconCls="domain-field-delete-icon"
                                                                            id="domainpropertiesrow-delete-1-0"
                                                                            onDelete={[Function]}
                                                                            title="Remove field"
                                                                          >
                                                                            <span
                                                                              className="field-icon"
                                                                              id="domainpropertiesrow-delete-1-0"
                                                                              onClick={[Function]}
                                                                              title="Remove field"
                                                                            >
                                                                              <span
                                                                                className="fa fa-times-circle domain-field-delete-icon"
                                                                              />
                                                                            </span>
                                                                          </Memo()>
                                                                        </div>
                                                                      </div>
                                                                    </Col>
                                                                  </div>
                                                                </div>
                                                              </Row>
                                                              <Collapse
                                                                appear={false}
                                                                dimension="height"
                                                                getDimensionValue={[Function]}
                                                                in={false}
                                                                mountOnEnter={false}
                                                                onExited={[Function]}
                                                                onExiting={[Function]}
                                                                timeout={300}
                                                                unmountOnExit={false}
                                                              >
                                                                <Transition
                                                                  appear={false}
                                                                  aria-expanded={null}
                                                                  enter={true}
                                                                  exit={true}
                                                                  in={false}
                                                                  mountOnEnter={false}
                                                                  onEnter={[Function]}
                                                                  onEntered={[Function]}
                                                                  onEntering={[Function]}
                                                                  onExit={[Function]}
                                                                  onExited={[Function]}
                                                                  onExiting={[Function]}
                                                                  timeout={300}
                                                                  unmountOnExit={false}
                                                                >
                                                                  <div
                                                                    aria-expanded={null}
                                                                    className="collapse"
                                                                  >
                                                                    <DomainRowExpandedOptions
                                                                      appPropertiesOnly={false}
                                                                      domainFormDisplayOptions={
                                                                        {
                                                                          "domainKindDisplayName": "assay design",
                                                                          "hideFilePropertyType": undefined,
                                                                          "hideInferFromFile": true,
                                                                          "hideStudyPropertyTypes": true,
                                                                          "textChoiceLockedForDomain": true,
                                                                        }
                                                                      }
                                                                      domainIndex={1}
                                                                      field={
                                                                        Immutable.Record {
                                                                          "conceptURI": undefined,
                                                                          "conditionalFormats": Immutable.List [],
                                                                          "defaultScale": undefined,
                                                                          "defaultValueType": undefined,
                                                                          "defaultValue": undefined,
                                                                          "defaultDisplayValue": undefined,
                                                                          "description": undefined,
                                                                          "dimension": undefined,
                                                                          "excludeFromShifting": false,
                                                                          "format": undefined,
                                                                          "hidden": false,
                                                                          "importAliases": undefined,
                                                                          "label": undefined,
                                                                          "lookupContainer": undefined,
                                                                          "lookupQuery": undefined,
                                                                          "lookupSchema": undefined,
                                                                          "lookupValidator": undefined,
                                                                          "measure": undefined,
                                                                          "mvEnabled": false,
                                                                          "name": "field1",
                                                                          "PHI": undefined,
                                                                          "propertyId": undefined,
                                                                          "propertyURI": undefined,
                                                                          "propertyValidators": Immutable.List [],
                                                                          "rangeValidators": Immutable.List [],
                                                                          "rangeURI": "xsd:string",
                                                                          "regexValidators": Immutable.List [],
                                                                          "textChoiceValidator": undefined,
                                                                          "recommendedVariable": false,
                                                                          "required": false,
                                                                          "scale": 4000,
                                                                          "URL": undefined,
                                                                          "shownInDetailsView": true,
                                                                          "shownInInsertView": true,
                                                                          "shownInUpdateView": true,
                                                                          "visible": true,
                                                                          "dataType": Immutable.Record {
                                                                            "conceptURI": undefined,
                                                                            "display": "Text",
                                                                            "name": "string",
                                                                            "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                                            "alternateRangeURI": "xsd:string",
                                                                            "shortDisplay": "String",
                                                                            "lookupSchema": undefined,
                                                                            "lookupQuery": undefined,
                                                                          },
                                                                          "lookupQueryValue": undefined,
                                                                          "lookupType": Immutable.Record {
                                                                            "conceptURI": undefined,
                                                                            "display": "Lookup",
                                                                            "name": "lookup",
                                                                            "rangeURI": "xsd:string",
                                                                            "alternateRangeURI": undefined,
                                                                            "shortDisplay": undefined,
                                                                            "lookupSchema": undefined,
                                                                            "lookupQuery": undefined,
                                                                          },
                                                                          "original": {
                                                                            "conceptURI": undefined,
                                                                            "dataType": Immutable.Record {
                                                                              "conceptURI": undefined,
                                                                              "display": "Text",
                                                                              "name": "string",
                                                                              "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                                              "alternateRangeURI": "xsd:string",
                                                                              "shortDisplay": "String",
                                                                              "lookupSchema": undefined,
                                                                              "lookupQuery": undefined,
                                                                            },
                                                                            "name": "field1",
                                                                            "rangeURI": undefined,
                                                                          },
                                                                          "updatedField": false,
                                                                          "isPrimaryKey": false,
                                                                          "lockType": "NotLocked",
                                                                          "wrappedColumnName": undefined,
                                                                          "disablePhiLevel": false,
                                                                          "lockExistingField": false,
                                                                          "sourceOntology": undefined,
                                                                          "conceptSubtree": undefined,
                                                                          "conceptLabelColumn": undefined,
                                                                          "conceptImportColumn": undefined,
                                                                          "principalConceptCode": undefined,
                                                                          "derivationDataScope": undefined,
                                                                          "selected": false,
                                                                          "scannable": false,
                                                                        }
                                                                      }
                                                                      getDomainFields={[Function]}
                                                                      index={0}
                                                                      onChange={[Function]}
                                                                      onMultiChange={[Function]}
                                                                      showingModal={[Function]}
                                                                      successBsStyle="success"
                                                                    >
                                                                      <div
                                                                        className="domain-row-container"
                                                                      >
                                                                        <div
                                                                          className="domain-row-container-expand-spacer"
                                                                        />
                                                                        <div
                                                                          className="domain-row-container-expanded"
                                                                        >
                                                                          <Col
                                                                            bsClass="col"
                                                                            componentClass="div"
                                                                            xs={12}
                                                                          >
                                                                            <div
                                                                              className="col-xs-12"
                                                                            >
                                                                              <TextFieldOptions
                                                                                appPropertiesOnly={false}
                                                                                domainIndex={1}
                                                                                index={0}
                                                                                label="Text Options"
                                                                                lockType="NotLocked"
                                                                                onChange={[Function]}
                                                                                scale={4000}
                                                                                scannable={false}
                                                                              >
                                                                                <div>
                                                                                  <Row
                                                                                    bsClass="row"
                                                                                    componentClass="div"
                                                                                  >
                                                                                    <div
                                                                                      className="row"
                                                                                    >
                                                                                      <Col
                                                                                        bsClass="col"
                                                                                        componentClass="div"
                                                                                        xs={12}
                                                                                      >
                                                                                        <div
                                                                                          className="col-xs-12"
                                                                                        >
                                                                                          <SectionHeading
                                                                                            title="Text Options"
                                                                                          >
                                                                                            <div
                                                                                              className="domain-field-section-heading"
                                                                                            >
                                                                                              Text Options
                                                                                            </div>
                                                                                          </SectionHeading>
                                                                                        </div>
                                                                                      </Col>
                                                                                    </div>
                                                                                  </Row>
                                                                                  <Row
                                                                                    bsClass="row"
                                                                                    componentClass="div"
                                                                                  >
                                                                                    <div
                                                                                      className="row"
                                                                                    >
                                                                                      <Col
                                                                                        bsClass="col"
                                                                                        componentClass="div"
                                                                                        xs={12}
                                                                                      >
                                                                                        <div
                                                                                          className="col-xs-12"
                                                                                        >
                                                                                          <div
                                                                                            className="domain-field-label"
                                                                                          >
                                                                                            <DomainFieldLabel
                                                                                              helpTipBody={
                                                                                                <React.Fragment>
                                                                                                  <p>
                                                                                                    Sets the maximum character count for a text field.
                                                                                                  </p>
                                                                                                  <p>
                                                                                                    Anything over 4,000 characters will use the 'Unlimited' designation.
                                                                                                  </p>
                                                                                                </React.Fragment>
                                                                                              }
                                                                                              label="Maximum Text Length"
                                                                                            >
                                                                                              Maximum Text 
                                                                                              <span
                                                                                                className="domain-no-wrap"
                                                                                              >
                                                                                                Length
                                                                                                <Component
                                                                                                  id="tooltip"
                                                                                                  title="Maximum Text Length"
                                                                                                >
                                                                                                  <span
                                                                                                    className="label-help-target"
                                                                                                    onMouseOut={[Function]}
                                                                                                    onMouseOver={[Function]}
                                                                                                  >
                                                                                                    <span
                                                                                                      className="label-help-icon fa fa-question-circle"
                                                                                                    />
                                                                                                    <Overlay
                                                                                                      animation={[Function]}
                                                                                                      placement="right"
                                                                                                      rootClose={false}
                                                                                                      show={false}
                                                                                                      target={
                                                                                                        <span
                                                                                                          class="label-help-target"
                                                                                                        >
                                                                                                          <span
                                                                                                            class="label-help-icon fa fa-question-circle"
                                                                                                          />
                                                                                                        </span>
                                                                                                      }
                                                                                                    >
                                                                                                      <Overlay
                                                                                                        placement="right"
                                                                                                        rootClose={false}
                                                                                                        show={false}
                                                                                                        target={
                                                                                                          <span
                                                                                                            class="label-help-target"
                                                                                                          >
                                                                                                            <span
                                                                                                              class="label-help-icon fa fa-question-circle"
                                                                                                            />
                                                                                                          </span>
                                                                                                        }
                                                                                                        transition={[Function]}
                                                                                                      />
                                                                                                    </Overlay>
                                                                                                  </span>
                                                                                                </Component>
                                                                                              </span>
                                                                                            </DomainFieldLabel>
                                                                                          </div>
                                                                                        </div>
                                                                                      </Col>
                                                                                    </div>
                                                                                  </Row>
                                                                                  <Row
                                                                                    bsClass="row"
                                                                                    componentClass="div"
                                                                                  >
                                                                                    <div
                                                                                      className="row"
                                                                                    >
                                                                                      <Col
                                                                                        bsClass="col"
                                                                                        className="domain-text-options-col"
                                                                                        componentClass="div"
                                                                                        xs={12}
                                                                                      >
                                                                                        <div
                                                                                          className="domain-text-options-col col-xs-12"
                                                                                        >
                                                                                          <FormControl
                                                                                            bsClass="form-control"
                                                                                            checked={false}
                                                                                            className="domain-text-options-radio1 domain-field-float-left"
                                                                                            componentClass="input"
                                                                                            disabled={false}
                                                                                            id="domainpropertiesrow-maxLength-1-0"
                                                                                            onChange={[Function]}
                                                                                            type="radio"
                                                                                            value="maxLength"
                                                                                          >
                                                                                            <input
                                                                                              checked={false}
                                                                                              className="domain-text-options-radio1 domain-field-float-left form-control"
                                                                                              disabled={false}
                                                                                              id="domainpropertiesrow-maxLength-1-0"
                                                                                              onChange={[Function]}
                                                                                              type="radio"
                                                                                              value="maxLength"
                                                                                            />
                                                                                          </FormControl>
                                                                                          <div>
                                                                                            Unlimited
                                                                                          </div>
                                                                                        </div>
                                                                                      </Col>
                                                                                    </div>
                                                                                  </Row>
                                                                                  <Row
                                                                                    bsClass="row"
                                                                                    componentClass="div"
                                                                                  >
                                                                                    <div
                                                                                      className="row"
                                                                                    >
                                                                                      <Col
                                                                                        bsClass="col"
                                                                                        componentClass="div"
                                                                                        xs={12}
                                                                                      >
                                                                                        <div
                                                                                          className="col-xs-12"
                                                                                        >
                                                                                          <FormControl
                                                                                            bsClass="form-control"
                                                                                            checked={true}
                                                                                            className="domain-text-options-radio2 domain-field-float-left"
                                                                                            componentClass="input"
                                                                                            id="domainpropertiesrow-customLength-1-0"
                                                                                            onChange={[Function]}
                                                                                            type="radio"
                                                                                            value="customLength"
                                                                                          >
                                                                                            <input
                                                                                              checked={true}
                                                                                              className="domain-text-options-radio2 domain-field-float-left form-control"
                                                                                              id="domainpropertiesrow-customLength-1-0"
                                                                                              onChange={[Function]}
                                                                                              type="radio"
                                                                                              value="customLength"
                                                                                            />
                                                                                          </FormControl>
                                                                                          <span
                                                                                            className="domain-text-options-length domain-field-float-left"
                                                                                          >
                                                                                            No longer than 
                                                                                            <FormControl
                                                                                              bsClass="form-control"
                                                                                              className="domain-text-length-field"
                                                                                              componentClass="input"
                                                                                              disabled={false}
                                                                                              id="domainpropertiesrow-scale-1-0"
                                                                                              name="domainpropertiesrow-scale"
                                                                                              onChange={[Function]}
                                                                                              type="number"
                                                                                              value={4000}
                                                                                            >
                                                                                              <input
                                                                                                className="domain-text-length-field form-control"
                                                                                                disabled={false}
                                                                                                id="domainpropertiesrow-scale-1-0"
                                                                                                name="domainpropertiesrow-scale"
                                                                                                onChange={[Function]}
                                                                                                type="number"
                                                                                                value={4000}
                                                                                              />
                                                                                            </FormControl>
                                                                                             characters
                                                                                          </span>
                                                                                        </div>
                                                                                      </Col>
                                                                                    </div>
                                                                                  </Row>
                                                                                  <Memo()
                                                                                    appPropertiesOnly={false}
                                                                                    domainIndex={1}
                                                                                    index={0}
                                                                                    label="Text Options"
                                                                                    lockType="NotLocked"
                                                                                    onChange={[Function]}
                                                                                    scale={4000}
                                                                                    scannable={false}
                                                                                  />
                                                                                </div>
                                                                              </TextFieldOptions>
                                                                            </div>
                                                                          </Col>
                                                                          <Col
                                                                            bsClass="col"
                                                                            componentClass="div"
                                                                            xs={12}
                                                                          >
                                                                            <div
                                                                              className="col-xs-12"
                                                                            >
                                                                              <NameAndLinkingOptions
                                                                                appPropertiesOnly={false}
                                                                                domainFormDisplayOptions={
                                                                                  {
                                                                                    "domainKindDisplayName": "assay design",
                                                                                    "hideFilePropertyType": undefined,
                                                                                    "hideInferFromFile": true,
                                                                                    "hideStudyPropertyTypes": true,
                                                                                    "textChoiceLockedForDomain": true,
                                                                                  }
                                                                                }
                                                                                domainIndex={1}
                                                                                field={
                                                                                  Immutable.Record {
                                                                                    "conceptURI": undefined,
                                                                                    "conditionalFormats": Immutable.List [],
                                                                                    "defaultScale": undefined,
                                                                                    "defaultValueType": undefined,
                                                                                    "defaultValue": undefined,
                                                                                    "defaultDisplayValue": undefined,
                                                                                    "description": undefined,
                                                                                    "dimension": undefined,
                                                                                    "excludeFromShifting": false,
                                                                                    "format": undefined,
                                                                                    "hidden": false,
                                                                                    "importAliases": undefined,
                                                                                    "label": undefined,
                                                                                    "lookupContainer": undefined,
                                                                                    "lookupQuery": undefined,
                                                                                    "lookupSchema": undefined,
                                                                                    "lookupValidator": undefined,
                                                                                    "measure": undefined,
                                                                                    "mvEnabled": false,
                                                                                    "name": "field1",
                                                                                    "PHI": undefined,
                                                                                    "propertyId": undefined,
                                                                                    "propertyURI": undefined,
                                                                                    "propertyValidators": Immutable.List [],
                                                                                    "rangeValidators": Immutable.List [],
                                                                                    "rangeURI": "xsd:string",
                                                                                    "regexValidators": Immutable.List [],
                                                                                    "textChoiceValidator": undefined,
                                                                                    "recommendedVariable": false,
                                                                                    "required": false,
                                                                                    "scale": 4000,
                                                                                    "URL": undefined,
                                                                                    "shownInDetailsView": true,
                                                                                    "shownInInsertView": true,
                                                                                    "shownInUpdateView": true,
                                                                                    "visible": true,
                                                                                    "dataType": Immutable.Record {
                                                                                      "conceptURI": undefined,
                                                                                      "display": "Text",
                                                                                      "name": "string",
                                                                                      "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                                                      "alternateRangeURI": "xsd:string",
                                                                                      "shortDisplay": "String",
                                                                                      "lookupSchema": undefined,
                                                                                      "lookupQuery": undefined,
                                                                                    },
                                                                                    "lookupQueryValue": undefined,
                                                                                    "lookupType": Immutable.Record {
                                                                                      "conceptURI": undefined,
                                                                                      "display": "Lookup",
                                                                                      "name": "lookup",
                                                                                      "rangeURI": "xsd:string",
                                                                                      "alternateRangeURI": undefined,
                                                                                      "shortDisplay": undefined,
                                                                                      "lookupSchema": undefined,
                                                                                      "lookupQuery": undefined,
                                                                                    },
                                                                                    "original": {
                                                                                      "conceptURI": undefined,
                                                                                      "dataType": Immutable.Record {
                                                                                        "conceptURI": undefined,
                                                                                        "display": "Text",
                                                                                        "name": "string",
                                                                                        "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                                                        "alternateRangeURI": "xsd:string",
                                                                                        "shortDisplay": "String",
                                                                                        "lookupSchema": undefined,
                                                                                        "lookupQuery": undefined,
                                                                                      },
                                                                                      "name": "field1",
                                                                                      "rangeURI": undefined,
                                                                                    },
                                                                                    "updatedField": false,
                                                                                    "isPrimaryKey": false,
                                                                                    "lockType": "NotLocked",
                                                                                    "wrappedColumnName": undefined,
                                                                                    "disablePhiLevel": false,
                                                                                    "lockExistingField": false,
                                                                                    "sourceOntology": undefined,
                                                                                    "conceptSubtree": undefined,
                                                                                    "conceptLabelColumn": undefined,
                                                                                    "conceptImportColumn": undefined,
                                                                                    "principalConceptCode": undefined,
                                                                                    "derivationDataScope": undefined,
                                                                                    "selected": false,
                                                                                    "scannable": false,
                                                                                  }
                                                                                }
                                                                                index={0}
                                                                                onChange={[Function]}
                                                                              >
                                                                                <div>
                                                                                  <Row
                                                                                    bsClass="row"
                                                                                    componentClass="div"
                                                                                  >
                                                                                    <div
                                                                                      className="row"
                                                                                    >
                                                                                      <Col
                                                                                        bsClass="col"
                                                                                        componentClass="div"
                                                                                        xs={12}
                                                                                      >
                                                                                        <div
                                                                                          className="col-xs-12"
                                                                                        >
                                                                                          <SectionHeading
                                                                                            cls="domain-field-section-hdr"
                                                                                            title="Name and Linking Options"
                                                                                          >
                                                                                            <div
                                                                                              className="domain-field-section-heading domain-field-section-hdr"
                                                                                            >
                                                                                              Name and Linking Options
                                                                                            </div>
                                                                                          </SectionHeading>
                                                                                        </div>
                                                                                      </Col>
                                                                                    </div>
                                                                                  </Row>
                                                                                  <Row
                                                                                    bsClass="row"
                                                                                    componentClass="div"
                                                                                  >
                                                                                    <div
                                                                                      className="row"
                                                                                    >
                                                                                      <Col
                                                                                        bsClass="col"
                                                                                        componentClass="div"
                                                                                        xs={5}
                                                                                      >
                                                                                        <div
                                                                                          className="col-xs-5"
                                                                                        >
                                                                                          <div
                                                                                            className="domain-field-label"
                                                                                          >
                                                                                            Description
                                                                                          </div>
                                                                                          <FormControl
                                                                                            bsClass="form-control"
                                                                                            className="form-control textarea-noresize"
                                                                                            componentClass="textarea"
                                                                                            disabled={false}
                                                                                            id="domainpropertiesrow-description-1-0"
                                                                                            name="domainpropertiesrow-description"
                                                                                            onChange={[Function]}
                                                                                            rows={4}
                                                                                            value=""
                                                                                          >
                                                                                            <textarea
                                                                                              className="form-control textarea-noresize form-control"
                                                                                              disabled={false}
                                                                                              id="domainpropertiesrow-description-1-0"
                                                                                              name="domainpropertiesrow-description"
                                                                                              onChange={[Function]}
                                                                                              rows={4}
                                                                                              value=""
                                                                                            />
                                                                                          </FormControl>
                                                                                        </div>
                                                                                      </Col>
                                                                                      <Col
                                                                                        bsClass="col"
                                                                                        componentClass="div"
                                                                                        xs={3}
                                                                                      >
                                                                                        <div
                                                                                          className="col-xs-3"
                                                                                        >
                                                                                          <div
                                                                                            className="domain-field-label"
                                                                                          >
                                                                                            Label
                                                                                          </div>
                                                                                          <FormControl
                                                                                            bsClass="form-control"
                                                                                            componentClass="input"
                                                                                            disabled={false}
                                                                                            id="domainpropertiesrow-label-1-0"
                                                                                            name="domainpropertiesrow-label"
                                                                                            onChange={[Function]}
                                                                                            type="text"
                                                                                            value=""
                                                                                          >
                                                                                            <input
                                                                                              className="form-control"
                                                                                              disabled={false}
                                                                                              id="domainpropertiesrow-label-1-0"
                                                                                              name="domainpropertiesrow-label"
                                                                                              onChange={[Function]}
                                                                                              type="text"
                                                                                              value=""
                                                                                            />
                                                                                          </FormControl>
                                                                                          <div
                                                                                            className="domain-field-label"
                                                                                          >
                                                                                            <DomainFieldLabel
                                                                                              helpTipBody={
                                                                                                <React.Fragment>
                                                                                                  Define alternate field names to be used when importing from a file.
                                                                                                  <br />
                                                                                                  <br />
                                                                                                  Multiple aliases may be separated by spaces or commas. To define an alias that contains spaces, use double-quotes (") around it.
                                                                                                </React.Fragment>
                                                                                              }
                                                                                              label="Import Aliases"
                                                                                            >
                                                                                              Import 
                                                                                              <span
                                                                                                className="domain-no-wrap"
                                                                                              >
                                                                                                Aliases
                                                                                                <Component
                                                                                                  id="tooltip"
                                                                                                  title="Import Aliases"
                                                                                                >
                                                                                                  <span
                                                                                                    className="label-help-target"
                                                                                                    onMouseOut={[Function]}
                                                                                                    onMouseOver={[Function]}
                                                                                                  >
                                                                                                    <span
                                                                                                      className="label-help-icon fa fa-question-circle"
                                                                                                    />
                                                                                                    <Overlay
                                                                                                      animation={[Function]}
                                                                                                      placement="right"
                                                                                                      rootClose={false}
                                                                                                      show={false}
                                                                                                    >
                                                                                                      <Overlay
                                                                                                        placement="right"
                                                                                                        rootClose={false}
                                                                                                        show={false}
                                                                                                        transition={[Function]}
                                                                                                      />
                                                                                                    </Overlay>
                                                                                                  </span>
                                                                                                </Component>
                                                                                              </span>
                                                                                            </DomainFieldLabel>
                                                                                          </div>
                                                                                          <FormControl
                                                                                            bsClass="form-control"
                                                                                            componentClass="input"
                                                                                            disabled={false}
                                                                                            id="domainpropertiesrow-importAliases-1-0"
                                                                                            name="domainpropertiesrow-importAliases"
                                                                                            onChange={[Function]}
                                                                                            type="text"
                                                                                            value=""
                                                                                          >
                                                                                            <input
                                                                                              className="form-control"
                                                                                              disabled={false}
                                                                                              id="domainpropertiesrow-importAliases-1-0"
                                                                                              name="domainpropertiesrow-importAliases"
                                                                                              onChange={[Function]}
                                                                                              type="text"
                                                                                              value=""
                                                                                            />
                                                                                          </FormControl>
                                                                                        </div>
                                                                                      </Col>
                                                                                      <Col
                                                                                        bsClass="col"
                                                                                        componentClass="div"
                                                                                        xs={4}
                                                                                      >
                                                                                        <div
                                                                                          className="col-xs-4"
                                                                                        >
                                                                                          <div
                                                                                            className="domain-field-label"
                                                                                          >
                                                                                            <DomainFieldLabel
                                                                                              helpTipBody={
                                                                                                <React.Fragment>
                                                                                                  Use this to change the display of the field value within a data grid into a link. Multiple formats are supported, which allows ways to easily substitute and link to other locations in LabKey.
                                                                                                  <br />
                                                                                                  <br />
                                                                                                  Learn more about using 
                                                                                                  <HelpLink
                                                                                                    topic="urlEncoding"
                                                                                                  >
                                                                                                    URL Formatting Options
                                                                                                  </HelpLink>
                                                                                                  .
                                                                                                </React.Fragment>
                                                                                              }
                                                                                              label="URL"
                                                                                            >
                                                                                              <span
                                                                                                className="domain-no-wrap"
                                                                                              >
                                                                                                URL
                                                                                                <Component
                                                                                                  id="tooltip"
                                                                                                  title="URL"
                                                                                                >
                                                                                                  <span
                                                                                                    className="label-help-target"
                                                                                                    onMouseOut={[Function]}
                                                                                                    onMouseOver={[Function]}
                                                                                                  >
                                                                                                    <span
                                                                                                      className="label-help-icon fa fa-question-circle"
                                                                                                    />
                                                                                                    <Overlay
                                                                                                      animation={[Function]}
                                                                                                      placement="right"
                                                                                                      rootClose={false}
                                                                                                      show={false}
                                                                                                    >
                                                                                                      <Overlay
                                                                                                        placement="right"
                                                                                                        rootClose={false}
                                                                                                        show={false}
                                                                                                        transition={[Function]}
                                                                                                      />
                                                                                                    </Overlay>
                                                                                                  </span>
                                                                                                </Component>
                                                                                              </span>
                                                                                            </DomainFieldLabel>
                                                                                          </div>
                                                                                          <FormControl
                                                                                            bsClass="form-control"
                                                                                            componentClass="input"
                                                                                            disabled={false}
                                                                                            id="domainpropertiesrow-URL-1-0"
                                                                                            name="domainpropertiesrow-URL"
                                                                                            onChange={[Function]}
                                                                                            type="text"
                                                                                            value=""
                                                                                          >
                                                                                            <input
                                                                                              className="form-control"
                                                                                              disabled={false}
                                                                                              id="domainpropertiesrow-URL-1-0"
                                                                                              name="domainpropertiesrow-URL"
                                                                                              onChange={[Function]}
                                                                                              type="text"
                                                                                              value=""
                                                                                            />
                                                                                          </FormControl>
                                                                                        </div>
                                                                                      </Col>
                                                                                    </div>
                                                                                  </Row>
                                                                                </div>
                                                                              </NameAndLinkingOptions>
                                                                            </div>
                                                                          </Col>
                                                                          <Col
                                                                            bsClass="col"
                                                                            componentClass="div"
                                                                            xs={12}
                                                                          >
                                                                            <div
                                                                              className="col-xs-12"
                                                                            >
                                                                              <ConditionalFormattingAndValidation
                                                                                domainFormDisplayOptions={
                                                                                  {
                                                                                    "domainKindDisplayName": "assay design",
                                                                                    "hideFilePropertyType": undefined,
                                                                                    "hideInferFromFile": true,
                                                                                    "hideStudyPropertyTypes": true,
                                                                                    "textChoiceLockedForDomain": true,
                                                                                  }
                                                                                }
                                                                                domainIndex={1}
                                                                                field={
                                                                                  Immutable.Record {
                                                                                    "conceptURI": undefined,
                                                                                    "conditionalFormats": Immutable.List [],
                                                                                    "defaultScale": undefined,
                                                                                    "defaultValueType": undefined,
                                                                                    "defaultValue": undefined,
                                                                                    "defaultDisplayValue": undefined,
                                                                                    "description": undefined,
                                                                                    "dimension": undefined,
                                                                                    "excludeFromShifting": false,
                                                                                    "format": undefined,
                                                                                    "hidden": false,
                                                                                    "importAliases": undefined,
                                                                                    "label": undefined,
                                                                                    "lookupContainer": undefined,
                                                                                    "lookupQuery": undefined,
                                                                                    "lookupSchema": undefined,
                                                                                    "lookupValidator": undefined,
                                                                                    "measure": undefined,
                                                                                    "mvEnabled": false,
                                                                                    "name": "field1",
                                                                                    "PHI": undefined,
                                                                                    "propertyId": undefined,
                                                                                    "propertyURI": undefined,
                                                                                    "propertyValidators": Immutable.List [],
                                                                                    "rangeValidators": Immutable.List [],
                                                                                    "rangeURI": "xsd:string",
                                                                                    "regexValidators": Immutable.List [],
                                                                                    "textChoiceValidator": undefined,
                                                                                    "recommendedVariable": false,
                                                                                    "required": false,
                                                                                    "scale": 4000,
                                                                                    "URL": undefined,
                                                                                    "shownInDetailsView": true,
                                                                                    "shownInInsertView": true,
                                                                                    "shownInUpdateView": true,
                                                                                    "visible": true,
                                                                                    "dataType": Immutable.Record {
                                                                                      "conceptURI": undefined,
                                                                                      "display": "Text",
                                                                                      "name": "string",
                                                                                      "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                                                      "alternateRangeURI": "xsd:string",
                                                                                      "shortDisplay": "String",
                                                                                      "lookupSchema": undefined,
                                                                                      "lookupQuery": undefined,
                                                                                    },
                                                                                    "lookupQueryValue": undefined,
                                                                                    "lookupType": Immutable.Record {
                                                                                      "conceptURI": undefined,
                                                                                      "display": "Lookup",
                                                                                      "name": "lookup",
                                                                                      "rangeURI": "xsd:string",
                                                                                      "alternateRangeURI": undefined,
                                                                                      "shortDisplay": undefined,
                                                                                      "lookupSchema": undefined,
                                                                                      "lookupQuery": undefined,
                                                                                    },
                                                                                    "original": {
                                                                                      "conceptURI": undefined,
                                                                                      "dataType": Immutable.Record {
                                                                                        "conceptURI": undefined,
                                                                                        "display": "Text",
                                                                                        "name": "string",
                                                                                        "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                                                        "alternateRangeURI": "xsd:string",
                                                                                        "shortDisplay": "String",
                                                                                        "lookupSchema": undefined,
                                                                                        "lookupQuery": undefined,
                                                                                      },
                                                                                      "name": "field1",
                                                                                      "rangeURI": undefined,
                                                                                    },
                                                                                    "updatedField": false,
                                                                                    "isPrimaryKey": false,
                                                                                    "lockType": "NotLocked",
                                                                                    "wrappedColumnName": undefined,
                                                                                    "disablePhiLevel": false,
                                                                                    "lockExistingField": false,
                                                                                    "sourceOntology": undefined,
                                                                                    "conceptSubtree": undefined,
                                                                                    "conceptLabelColumn": undefined,
                                                                                    "conceptImportColumn": undefined,
                                                                                    "principalConceptCode": undefined,
                                                                                    "derivationDataScope": undefined,
                                                                                    "selected": false,
                                                                                    "scannable": false,
                                                                                  }
                                                                                }
                                                                                index={0}
                                                                                onChange={[Function]}
                                                                                showingModal={[Function]}
                                                                                successBsStyle="success"
                                                                              >
                                                                                <div>
                                                                                  <Row
                                                                                    bsClass="row"
                                                                                    componentClass="div"
                                                                                  >
                                                                                    <div
                                                                                      className="row"
                                                                                    >
                                                                                      <Col
                                                                                        bsClass="col"
                                                                                        componentClass="div"
                                                                                        xs={12}
                                                                                      >
                                                                                        <div
                                                                                          className="col-xs-12"
                                                                                        >
                                                                                          <SectionHeading
                                                                                            cls="domain-field-section-hdr"
                                                                                            title="Conditional Formatting and Validation Options"
                                                                                          >
                                                                                            <div
                                                                                              className="domain-field-section-heading domain-field-section-hdr"
                                                                                            >
                                                                                              Conditional Formatting and Validation Options
                                                                                            </div>
                                                                                          </SectionHeading>
                                                                                        </div>
                                                                                      </Col>
                                                                                    </div>
                                                                                  </Row>
                                                                                  <Row
                                                                                    bsClass="row"
                                                                                    componentClass="div"
                                                                                  >
                                                                                    <div
                                                                                      className="row"
                                                                                    >
                                                                                      <Col
                                                                                        bsClass="col"
                                                                                        componentClass="div"
                                                                                        xs={12}
                                                                                      >
                                                                                        <div
                                                                                          className="col-xs-12"
                                                                                        >
                                                                                          <div
                                                                                            className="domain-validation-group"
                                                                                          >
                                                                                            <div
                                                                                              className="domain-field-label domain-no-wrap"
                                                                                            >
                                                                                              <DomainFieldLabel
                                                                                                helpTipBody={<ConditionalFormatHelpText />}
                                                                                                label="Create Conditional Format Criteria"
                                                                                              >
                                                                                                Create Conditional Format 
                                                                                                <span
                                                                                                  className="domain-no-wrap"
                                                                                                >
                                                                                                  Criteria
                                                                                                  <Component
                                                                                                    id="tooltip"
                                                                                                    title="Create Conditional Format Criteria"
                                                                                                  >
                                                                                                    <span
                                                                                                      className="label-help-target"
                                                                                                      onMouseOut={[Function]}
                                                                                                      onMouseOver={[Function]}
                                                                                                    >
                                                                                                      <span
                                                                                                        className="label-help-icon fa fa-question-circle"
                                                                                                      />
                                                                                                      <Overlay
                                                                                                        animation={[Function]}
                                                                                                        placement="right"
                                                                                                        rootClose={false}
                                                                                                        show={false}
                                                                                                      >
                                                                                                        <Overlay
                                                                                                          placement="right"
                                                                                                          rootClose={false}
                                                                                                          show={false}
                                                                                                          transition={[Function]}
                                                                                                        />
                                                                                                      </Overlay>
                                                                                                    </span>
                                                                                                  </Component>
                                                                                                </span>
                                                                                              </DomainFieldLabel>
                                                                                            </div>
                                                                                            <div>
                                                                                              <Button
                                                                                                active={false}
                                                                                                block={false}
                                                                                                bsClass="btn"
                                                                                                bsStyle="default"
                                                                                                className="domain-validation-button"
                                                                                                disabled={false}
                                                                                                id="domainpropertiesrow-conditionalFormat-1-0"
                                                                                                name="domainpropertiesrow-conditionalFormat"
                                                                                                onClick={[Function]}
                                                                                              >
                                                                                                <button
                                                                                                  className="domain-validation-button btn btn-default"
                                                                                                  disabled={false}
                                                                                                  id="domainpropertiesrow-conditionalFormat-1-0"
                                                                                                  name="domainpropertiesrow-conditionalFormat"
                                                                                                  onClick={[Function]}
                                                                                                  type="button"
                                                                                                >
                                                                                                  Add Format
                                                                                                </button>
                                                                                              </Button>
                                                                                              <span
                                                                                                className="domain-text-label"
                                                                                              >
                                                                                                None Set
                                                                                              </span>
                                                                                            </div>
                                                                                          </div>
                                                                                          <div
                                                                                            className="domain-validation-group"
                                                                                          >
                                                                                            <div
                                                                                              className="domain-field-label domain-no-wrap"
                                                                                            >
                                                                                              <DomainFieldLabel
                                                                                                helpTipBody={<RegexValidatorHelpText />}
                                                                                                label="Create Regular Expression Validator"
                                                                                              >
                                                                                                Create Regular Expression 
                                                                                                <span
                                                                                                  className="domain-no-wrap"
                                                                                                >
                                                                                                  Validator
                                                                                                  <Component
                                                                                                    id="tooltip"
                                                                                                    title="Create Regular Expression Validator"
                                                                                                  >
                                                                                                    <span
                                                                                                      className="label-help-target"
                                                                                                      onMouseOut={[Function]}
                                                                                                      onMouseOver={[Function]}
                                                                                                    >
                                                                                                      <span
                                                                                                        className="label-help-icon fa fa-question-circle"
                                                                                                      />
                                                                                                      <Overlay
                                                                                                        animation={[Function]}
                                                                                                        placement="right"
                                                                                                        rootClose={false}
                                                                                                        show={false}
                                                                                                      >
                                                                                                        <Overlay
                                                                                                          placement="right"
                                                                                                          rootClose={false}
                                                                                                          show={false}
                                                                                                          transition={[Function]}
                                                                                                        />
                                                                                                      </Overlay>
                                                                                                    </span>
                                                                                                  </Component>
                                                                                                </span>
                                                                                              </DomainFieldLabel>
                                                                                            </div>
                                                                                            <div>
                                                                                              <Button
                                                                                                active={false}
                                                                                                block={false}
                                                                                                bsClass="btn"
                                                                                                bsStyle="default"
                                                                                                className="domain-validation-button"
                                                                                                disabled={false}
                                                                                                id="domainpropertiesrow-regexValidator-1-0"
                                                                                                name="domainpropertiesrow-regexValidator"
                                                                                                onClick={[Function]}
                                                                                              >
                                                                                                <button
                                                                                                  className="domain-validation-button btn btn-default"
                                                                                                  disabled={false}
                                                                                                  id="domainpropertiesrow-regexValidator-1-0"
                                                                                                  name="domainpropertiesrow-regexValidator"
                                                                                                  onClick={[Function]}
                                                                                                  type="button"
                                                                                                >
                                                                                                  Add Regex
                                                                                                </button>
                                                                                              </Button>
                                                                                              <span
                                                                                                className="domain-text-label"
                                                                                              >
                                                                                                None Set
                                                                                              </span>
                                                                                            </div>
                                                                                          </div>
                                                                                        </div>
                                                                                      </Col>
                                                                                    </div>
                                                                                  </Row>
                                                                                </div>
                                                                              </ConditionalFormattingAndValidation>
                                                                            </div>
                                                                          </Col>
                                                                        </div>
                                                                      </div>
                                                                    </DomainRowExpandedOptions>
                                                                  </div>
                                                                </Transition>
                                                              </Collapse>
                                                            </div>
                                                          </Draggable>
                                                        </Connect(Draggable)>
                                                      </PrivateDraggable>
                                                    </PublicDraggable>
                                                  </DomainRow>
                                                  <DomainRow
                                                    appPropertiesOnly={false}
                                                    availableTypes={
                                                      Immutable.List [
                                                        Immutable.Record {
                                                          "conceptURI": undefined,
                                                          "display": "Text",
                                                          "name": "string",
                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                          "alternateRangeURI": "xsd:string",
                                                          "shortDisplay": "String",
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                        Immutable.Record {
                                                          "conceptURI": undefined,
                                                          "display": "Multi-Line Text",
                                                          "name": "multiLine",
                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#multiLine",
                                                          "alternateRangeURI": undefined,
                                                          "shortDisplay": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                        Immutable.Record {
                                                          "conceptURI": undefined,
                                                          "display": "Boolean",
                                                          "name": "boolean",
                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#boolean",
                                                          "alternateRangeURI": "xsd:boolean",
                                                          "shortDisplay": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                        Immutable.Record {
                                                          "conceptURI": undefined,
                                                          "display": "Integer",
                                                          "name": "int",
                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                                          "alternateRangeURI": "xsd:int",
                                                          "shortDisplay": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                        Immutable.Record {
                                                          "conceptURI": undefined,
                                                          "display": "Decimal (floating point)",
                                                          "name": "double",
                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#double",
                                                          "alternateRangeURI": "xsd:double",
                                                          "shortDisplay": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                        Immutable.Record {
                                                          "conceptURI": undefined,
                                                          "display": "Date Time",
                                                          "name": "dateTime",
                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                                                          "alternateRangeURI": "xsd:dateTime",
                                                          "shortDisplay": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                        Immutable.Record {
                                                          "conceptURI": "http://www.labkey.org/exp/xml#flag",
                                                          "display": "Flag",
                                                          "name": "flag",
                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                          "alternateRangeURI": undefined,
                                                          "shortDisplay": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                        Immutable.Record {
                                                          "conceptURI": undefined,
                                                          "display": "User",
                                                          "name": "users",
                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                                          "alternateRangeURI": undefined,
                                                          "shortDisplay": undefined,
                                                          "lookupSchema": "core",
                                                          "lookupQuery": "users",
                                                        },
                                                        Immutable.Record {
                                                          "conceptURI": "http://cpas.labkey.com/Study#ParticipantId",
                                                          "display": "Subject/Participant",
                                                          "name": "ParticipantId",
                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                          "alternateRangeURI": undefined,
                                                          "shortDisplay": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                        Immutable.Record {
                                                          "conceptURI": undefined,
                                                          "display": "Lookup",
                                                          "name": "lookup",
                                                          "rangeURI": undefined,
                                                          "alternateRangeURI": undefined,
                                                          "shortDisplay": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                        Immutable.Record {
                                                          "conceptURI": "http://www.labkey.org/exp/xml#sample",
                                                          "display": "Sample",
                                                          "name": "sample",
                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                                          "alternateRangeURI": undefined,
                                                          "shortDisplay": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                        Immutable.Record {
                                                          "conceptURI": "http://www.labkey.org/types#textChoice",
                                                          "display": "Text Choice",
                                                          "name": "textChoice",
                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                          "alternateRangeURI": undefined,
                                                          "shortDisplay": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                      ]
                                                    }
                                                    defaultValueOptions={Immutable.List []}
                                                    domainFormDisplayOptions={
                                                      {
                                                        "domainKindDisplayName": "assay design",
                                                        "hideFilePropertyType": undefined,
                                                        "hideInferFromFile": true,
                                                        "hideStudyPropertyTypes": true,
                                                        "textChoiceLockedForDomain": true,
                                                      }
                                                    }
                                                    domainId={null}
                                                    domainIndex={1}
                                                    dragging={false}
                                                    expandTransition={300}
                                                    expanded={false}
                                                    field={
                                                      Immutable.Record {
                                                        "conceptURI": undefined,
                                                        "conditionalFormats": Immutable.List [],
                                                        "defaultScale": undefined,
                                                        "defaultValueType": undefined,
                                                        "defaultValue": undefined,
                                                        "defaultDisplayValue": undefined,
                                                        "description": undefined,
                                                        "dimension": undefined,
                                                        "excludeFromShifting": false,
                                                        "format": undefined,
                                                        "hidden": false,
                                                        "importAliases": undefined,
                                                        "label": undefined,
                                                        "lookupContainer": undefined,
                                                        "lookupQuery": undefined,
                                                        "lookupSchema": undefined,
                                                        "lookupValidator": undefined,
                                                        "measure": undefined,
                                                        "mvEnabled": false,
                                                        "name": "field2",
                                                        "PHI": undefined,
                                                        "propertyId": undefined,
                                                        "propertyURI": undefined,
                                                        "propertyValidators": Immutable.List [],
                                                        "rangeValidators": Immutable.List [],
                                                        "rangeURI": "xsd:int",
                                                        "regexValidators": Immutable.List [],
                                                        "textChoiceValidator": undefined,
                                                        "recommendedVariable": false,
                                                        "required": false,
                                                        "scale": 4000,
                                                        "URL": undefined,
                                                        "shownInDetailsView": true,
                                                        "shownInInsertView": true,
                                                        "shownInUpdateView": true,
                                                        "visible": true,
                                                        "dataType": Immutable.Record {
                                                          "conceptURI": undefined,
                                                          "display": "Integer",
                                                          "name": "int",
                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                                          "alternateRangeURI": "xsd:int",
                                                          "shortDisplay": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                        "lookupQueryValue": undefined,
                                                        "lookupType": Immutable.Record {
                                                          "conceptURI": undefined,
                                                          "display": "Lookup",
                                                          "name": "lookup",
                                                          "rangeURI": "xsd:int",
                                                          "alternateRangeURI": undefined,
                                                          "shortDisplay": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                        "original": {
                                                          "conceptURI": undefined,
                                                          "dataType": Immutable.Record {
                                                            "conceptURI": undefined,
                                                            "display": "Integer",
                                                            "name": "int",
                                                            "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                                            "alternateRangeURI": "xsd:int",
                                                            "shortDisplay": undefined,
                                                            "lookupSchema": undefined,
                                                            "lookupQuery": undefined,
                                                          },
                                                          "name": "field2",
                                                          "rangeURI": undefined,
                                                        },
                                                        "updatedField": false,
                                                        "isPrimaryKey": false,
                                                        "lockType": "NotLocked",
                                                        "wrappedColumnName": undefined,
                                                        "disablePhiLevel": false,
                                                        "lockExistingField": false,
                                                        "sourceOntology": undefined,
                                                        "conceptSubtree": undefined,
                                                        "conceptLabelColumn": undefined,
                                                        "conceptImportColumn": undefined,
                                                        "principalConceptCode": undefined,
                                                        "derivationDataScope": undefined,
                                                        "selected": false,
                                                        "scannable": false,
                                                      }
                                                    }
                                                    fieldDetailsInfo={{}}
                                                    getDomainFields={[Function]}
                                                    helpNoun="field designer"
                                                    index={1}
                                                    key="domain-row-key-1"
                                                    maxPhiLevel="Restricted"
                                                    onChange={[Function]}
                                                    onDelete={[Function]}
                                                    onExpand={[Function]}
                                                    showDefaultValueSettings={false}
                                                    successBsStyle="success"
                                                  >
                                                    <PublicDraggable
                                                      draggableId="domainpropertiesrow-domaindrag-1-1"
                                                      index={1}
                                                    >
                                                      <PrivateDraggable
                                                        canDragInteractiveElements={false}
                                                        draggableId="domainpropertiesrow-domaindrag-1-1"
                                                        index={1}
                                                        isClone={false}
                                                        isEnabled={true}
                                                        shouldRespectForcePress={false}
                                                      >
                                                        <Connect(Draggable)
                                                          canDragInteractiveElements={false}
                                                          draggableId="domainpropertiesrow-domaindrag-1-1"
                                                          index={1}
                                                          isClone={false}
                                                          isEnabled={true}
                                                          shouldRespectForcePress={false}
                                                        >
                                                          <Draggable
                                                            canDragInteractiveElements={false}
                                                            draggableId="domainpropertiesrow-domaindrag-1-1"
                                                            dropAnimationFinished={[Function]}
                                                            index={1}
                                                            isClone={false}
                                                            isEnabled={true}
                                                            mapped={
                                                              {
                                                                "combineTargetFor": null,
                                                                "offset": {
                                                                  "x": 0,
                                                                  "y": 0,
                                                                },
                                                                "shouldAnimateDisplacement": true,
                                                                "snapshot": {
                                                                  "combineTargetFor": null,
                                                                  "combineWith": null,
                                                                  "draggingOver": null,
                                                                  "dropAnimation": null,
                                                                  "isClone": false,
                                                                  "isDragging": false,
                                                                  "isDropAnimating": false,
                                                                  "mode": null,
                                                                },
                                                                "type": "SECONDARY",
                                                              }
                                                            }
                                                            shouldRespectForcePress={false}
                                                          >
                                                            <div
                                                              className="domain-field-row domain-row-border-default"
                                                              data-rbd-draggable-context-id="1"
                                                              data-rbd-draggable-id="domainpropertiesrow-domaindrag-1-1"
                                                              onTransitionEnd={null}
                                                              style={
                                                                {
                                                                  "transform": null,
                                                                  "transition": null,
                                                                }
                                                              }
                                                              tabIndex={1}
                                                            >
                                                              <Row
                                                                bsClass="row"
                                                                className="domain-row-container"
                                                                componentClass="div"
                                                                key="domainpropertiesrow-domainrow-1-1"
                                                              >
                                                                <div
                                                                  className="domain-row-container row"
                                                                >
                                                                  <AdvancedSettings
                                                                    defaultValueOptions={Immutable.List []}
                                                                    domainFormDisplayOptions={
                                                                      {
                                                                        "domainKindDisplayName": "assay design",
                                                                        "hideFilePropertyType": undefined,
                                                                        "hideInferFromFile": true,
                                                                        "hideStudyPropertyTypes": true,
                                                                        "textChoiceLockedForDomain": true,
                                                                      }
                                                                    }
                                                                    domainId={null}
                                                                    domainIndex={1}
                                                                    field={
                                                                      Immutable.Record {
                                                                        "conceptURI": undefined,
                                                                        "conditionalFormats": Immutable.List [],
                                                                        "defaultScale": undefined,
                                                                        "defaultValueType": undefined,
                                                                        "defaultValue": undefined,
                                                                        "defaultDisplayValue": undefined,
                                                                        "description": undefined,
                                                                        "dimension": undefined,
                                                                        "excludeFromShifting": false,
                                                                        "format": undefined,
                                                                        "hidden": false,
                                                                        "importAliases": undefined,
                                                                        "label": undefined,
                                                                        "lookupContainer": undefined,
                                                                        "lookupQuery": undefined,
                                                                        "lookupSchema": undefined,
                                                                        "lookupValidator": undefined,
                                                                        "measure": undefined,
                                                                        "mvEnabled": false,
                                                                        "name": "field2",
                                                                        "PHI": undefined,
                                                                        "propertyId": undefined,
                                                                        "propertyURI": undefined,
                                                                        "propertyValidators": Immutable.List [],
                                                                        "rangeValidators": Immutable.List [],
                                                                        "rangeURI": "xsd:int",
                                                                        "regexValidators": Immutable.List [],
                                                                        "textChoiceValidator": undefined,
                                                                        "recommendedVariable": false,
                                                                        "required": false,
                                                                        "scale": 4000,
                                                                        "URL": undefined,
                                                                        "shownInDetailsView": true,
                                                                        "shownInInsertView": true,
                                                                        "shownInUpdateView": true,
                                                                        "visible": true,
                                                                        "dataType": Immutable.Record {
                                                                          "conceptURI": undefined,
                                                                          "display": "Integer",
                                                                          "name": "int",
                                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                                                          "alternateRangeURI": "xsd:int",
                                                                          "shortDisplay": undefined,
                                                                          "lookupSchema": undefined,
                                                                          "lookupQuery": undefined,
                                                                        },
                                                                        "lookupQueryValue": undefined,
                                                                        "lookupType": Immutable.Record {
                                                                          "conceptURI": undefined,
                                                                          "display": "Lookup",
                                                                          "name": "lookup",
                                                                          "rangeURI": "xsd:int",
                                                                          "alternateRangeURI": undefined,
                                                                          "shortDisplay": undefined,
                                                                          "lookupSchema": undefined,
                                                                          "lookupQuery": undefined,
                                                                        },
                                                                        "original": {
                                                                          "conceptURI": undefined,
                                                                          "dataType": Immutable.Record {
                                                                            "conceptURI": undefined,
                                                                            "display": "Integer",
                                                                            "name": "int",
                                                                            "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                                                            "alternateRangeURI": "xsd:int",
                                                                            "shortDisplay": undefined,
                                                                            "lookupSchema": undefined,
                                                                            "lookupQuery": undefined,
                                                                          },
                                                                          "name": "field2",
                                                                          "rangeURI": undefined,
                                                                        },
                                                                        "updatedField": false,
                                                                        "isPrimaryKey": false,
                                                                        "lockType": "NotLocked",
                                                                        "wrappedColumnName": undefined,
                                                                        "disablePhiLevel": false,
                                                                        "lockExistingField": false,
                                                                        "sourceOntology": undefined,
                                                                        "conceptSubtree": undefined,
                                                                        "conceptLabelColumn": undefined,
                                                                        "conceptImportColumn": undefined,
                                                                        "principalConceptCode": undefined,
                                                                        "derivationDataScope": undefined,
                                                                        "selected": false,
                                                                        "scannable": false,
                                                                      }
                                                                    }
                                                                    helpNoun="field designer"
                                                                    index={1}
                                                                    label="field2"
                                                                    maxPhiLevel="Restricted"
                                                                    onApply={[Function]}
                                                                    onHide={[Function]}
                                                                    show={false}
                                                                    showDefaultValueSettings={false}
                                                                    successBsStyle="success"
                                                                  >
                                                                    <Modal
                                                                      animation={true}
                                                                      autoFocus={true}
                                                                      backdrop={true}
                                                                      bsClass="modal"
                                                                      dialogComponentClass={[Function]}
                                                                      enforceFocus={true}
                                                                      keyboard={true}
                                                                      manager={
                                                                        ModalManager {
                                                                          "add": [Function],
                                                                          "containers": [],
                                                                          "data": [],
                                                                          "handleContainerOverflow": true,
                                                                          "hideSiblingNodes": true,
                                                                          "isTopModal": [Function],
                                                                          "modals": [],
                                                                          "remove": [Function],
                                                                        }
                                                                      }
                                                                      onEnter={[Function]}
                                                                      onHide={[Function]}
                                                                      renderBackdrop={[Function]}
                                                                      restoreFocus={true}
                                                                      show={false}
                                                                    >
                                                                      <Modal
                                                                        autoFocus={true}
                                                                        backdrop={true}
                                                                        backdropClassName="modal-backdrop"
                                                                        backdropTransition={[Function]}
                                                                        containerClassName="modal-open"
                                                                        enforceFocus={true}
                                                                        keyboard={true}
                                                                        manager={
                                                                          ModalManager {
                                                                            "add": [Function],
                                                                            "containers": [],
                                                                            "data": [],
                                                                            "handleContainerOverflow": true,
                                                                            "hideSiblingNodes": true,
                                                                            "isTopModal": [Function],
                                                                            "modals": [],
                                                                            "remove": [Function],
                                                                          }
                                                                        }
                                                                        onEnter={[Function]}
                                                                        onEntering={[Function]}
                                                                        onExited={[Function]}
                                                                        onHide={[Function]}
                                                                        onMouseUp={[Function]}
                                                                        renderBackdrop={[Function]}
                                                                        restoreFocus={true}
                                                                        show={false}
                                                                        transition={[Function]}
                                                                      />
                                                                    </Modal>
                                                                  </AdvancedSettings>
                                                                  <div
                                                                    aria-describedby="rbd-hidden-text-1-hidden-text-5"
                                                                    className="domain-row-handle"
                                                                    data-rbd-drag-handle-context-id="1"
                                                                    data-rbd-drag-handle-draggable-id="domainpropertiesrow-domaindrag-1-1"
                                                                    draggable={false}
                                                                    onDragStart={[Function]}
                                                                    role="button"
                                                                    tabIndex={0}
                                                                  >
                                                                    <DragDropHandle>
                                                                      <div
                                                                        className="drag-drop-handle"
                                                                      >
                                                                        <span
                                                                          className="fa fa-ellipsis-v"
                                                                        />
                                                                        <span
                                                                          className="fa fa-ellipsis-v"
                                                                        />
                                                                      </div>
                                                                    </DragDropHandle>
                                                                  </div>
                                                                  <div
                                                                    className="domain-row-action-section"
                                                                  >
                                                                    <Checkbox
                                                                      bsClass="checkbox"
                                                                      checked={false}
                                                                      className="domain-field-check-icon"
                                                                      disabled={false}
                                                                      id="domainpropertiesrow-selected-1-1"
                                                                      inline={false}
                                                                      name="domainpropertiesrow-selected"
                                                                      onChange={[Function]}
                                                                      title=""
                                                                    >
                                                                      <div
                                                                        className="domain-field-check-icon checkbox"
                                                                      >
                                                                        <label
                                                                          title=""
                                                                        >
                                                                          <input
                                                                            checked={false}
                                                                            disabled={false}
                                                                            id="domainpropertiesrow-selected-1-1"
                                                                            name="domainpropertiesrow-selected"
                                                                            onChange={[Function]}
                                                                            type="checkbox"
                                                                          />
                                                                        </label>
                                                                      </div>
                                                                    </Checkbox>
                                                                    <FieldExpansionToggle
                                                                      cls="domain-field-expand-icon"
                                                                      collapsedTitle="Show additional field properties"
                                                                      expanded={false}
                                                                      expandedTitle="Hide additional field properties"
                                                                      id="domainpropertiesrow-expand-1-1"
                                                                      onClick={[Function]}
                                                                    >
                                                                      <div
                                                                        className="field-icon domain-field-expand-icon"
                                                                        id="domainpropertiesrow-expand-1-1"
                                                                        onClick={[Function]}
                                                                        title="Show additional field properties"
                                                                      >
                                                                        <span
                                                                          className="fa fa-lg fa-plus-square"
                                                                        />
                                                                      </div>
                                                                    </FieldExpansionToggle>
                                                                  </div>
                                                                  <div
                                                                    className="domain-row-main"
                                                                  >
                                                                    <Col
                                                                      bsClass="col"
                                                                      className="domain-row-base-fields domain-row-base-fields-position"
                                                                      componentClass="div"
                                                                      xs={6}
                                                                    >
                                                                      <div
                                                                        className="domain-row-base-fields domain-row-base-fields-position col-xs-6"
                                                                      >
                                                                        <div
                                                                          id="domainpropertiesrow-row-1-1"
                                                                        >
                                                                          <Col
                                                                            bsClass="col"
                                                                            componentClass="div"
                                                                            xs={6}
                                                                          >
                                                                            <div
                                                                              className="col-xs-6"
                                                                            >
                                                                              <FormControl
                                                                                bsClass="form-control"
                                                                                componentClass="input"
                                                                                disabled={false}
                                                                                id="domainpropertiesrow-name-1-1"
                                                                                name="domainpropertiesrow-name"
                                                                                onChange={[Function]}
                                                                                type="text"
                                                                                value="field2"
                                                                              >
                                                                                <input
                                                                                  className="form-control"
                                                                                  disabled={false}
                                                                                  id="domainpropertiesrow-name-1-1"
                                                                                  name="domainpropertiesrow-name"
                                                                                  onChange={[Function]}
                                                                                  type="text"
                                                                                  value="field2"
                                                                                />
                                                                              </FormControl>
                                                                            </div>
                                                                          </Col>
                                                                          <Col
                                                                            bsClass="col"
                                                                            componentClass="div"
                                                                            xs={4}
                                                                          >
                                                                            <div
                                                                              className="col-xs-4"
                                                                            >
                                                                              <FormControl
                                                                                bsClass="form-control"
                                                                                componentClass="select"
                                                                                disabled={false}
                                                                                id="domainpropertiesrow-type-1-1"
                                                                                name="domainpropertiesrow-type"
                                                                                onChange={[Function]}
                                                                                value="int"
                                                                              >
                                                                                <select
                                                                                  className="form-control"
                                                                                  disabled={false}
                                                                                  id="domainpropertiesrow-type-1-1"
                                                                                  name="domainpropertiesrow-type"
                                                                                  onChange={[Function]}
                                                                                  value="int"
                                                                                >
                                                                                  <option
                                                                                    key="boolean"
                                                                                    value="boolean"
                                                                                  >
                                                                                    Boolean
                                                                                  </option>
                                                                                  <option
                                                                                    key="dateTime"
                                                                                    value="dateTime"
                                                                                  >
                                                                                    Date Time
                                                                                  </option>
                                                                                  <option
                                                                                    key="double"
                                                                                    value="double"
                                                                                  >
                                                                                    Decimal (floating point)
                                                                                  </option>
                                                                                  <option
                                                                                    key="flag"
                                                                                    value="flag"
                                                                                  >
                                                                                    Flag
                                                                                  </option>
                                                                                  <option
                                                                                    key="int"
                                                                                    value="int"
                                                                                  >
                                                                                    Integer
                                                                                  </option>
                                                                                  <option
                                                                                    key="lookup"
                                                                                    value="lookup"
                                                                                  >
                                                                                    Lookup
                                                                                  </option>
                                                                                  <option
                                                                                    key="multiLine"
                                                                                    value="multiLine"
                                                                                  >
                                                                                    Multi-Line Text
                                                                                  </option>
                                                                                  <option
                                                                                    key="sample"
                                                                                    value="sample"
                                                                                  >
                                                                                    Sample
                                                                                  </option>
                                                                                  <option
                                                                                    key="string"
                                                                                    value="string"
                                                                                  >
                                                                                    Text
                                                                                  </option>
                                                                                  <option
                                                                                    key="textChoice"
                                                                                    value="textChoice"
                                                                                  >
                                                                                    Text Choice
                                                                                  </option>
                                                                                  <option
                                                                                    key="users"
                                                                                    value="users"
                                                                                  >
                                                                                    User
                                                                                  </option>
                                                                                </select>
                                                                              </FormControl>
                                                                            </div>
                                                                          </Col>
                                                                          <Col
                                                                            bsClass="col"
                                                                            componentClass="div"
                                                                            xs={2}
                                                                          >
                                                                            <div
                                                                              className="col-xs-2"
                                                                            >
                                                                              <div
                                                                                className="domain-field-checkbox-container"
                                                                              >
                                                                                <Checkbox
                                                                                  bsClass="checkbox"
                                                                                  checked={false}
                                                                                  className="domain-field-checkbox"
                                                                                  disabled={false}
                                                                                  id="domainpropertiesrow-required-1-1"
                                                                                  inline={false}
                                                                                  name="domainpropertiesrow-required"
                                                                                  onChange={[Function]}
                                                                                  title=""
                                                                                >
                                                                                  <div
                                                                                    className="domain-field-checkbox checkbox"
                                                                                  >
                                                                                    <label
                                                                                      title=""
                                                                                    >
                                                                                      <input
                                                                                        checked={false}
                                                                                        disabled={false}
                                                                                        id="domainpropertiesrow-required-1-1"
                                                                                        name="domainpropertiesrow-required"
                                                                                        onChange={[Function]}
                                                                                        type="checkbox"
                                                                                      />
                                                                                    </label>
                                                                                  </div>
                                                                                </Checkbox>
                                                                              </div>
                                                                            </div>
                                                                          </Col>
                                                                        </div>
                                                                      </div>
                                                                    </Col>
                                                                    <Col
                                                                      bsClass="col"
                                                                      className="domain-row-details-container"
                                                                      componentClass="div"
                                                                      xs={6}
                                                                    >
                                                                      <div
                                                                        className="domain-row-details-container col-xs-6"
                                                                      >
                                                                        <div
                                                                          className="domain-field-details"
                                                                          id="domainpropertiesrow-details-1-1"
                                                                        >
                                                                          New Field
                                                                        </div>
                                                                        <div
                                                                          className="domain-field-buttons"
                                                                        >
                                                                          <Memo()
                                                                            iconCls="domain-field-delete-icon"
                                                                            id="domainpropertiesrow-delete-1-1"
                                                                            onDelete={[Function]}
                                                                            title="Remove field"
                                                                          >
                                                                            <span
                                                                              className="field-icon"
                                                                              id="domainpropertiesrow-delete-1-1"
                                                                              onClick={[Function]}
                                                                              title="Remove field"
                                                                            >
                                                                              <span
                                                                                className="fa fa-times-circle domain-field-delete-icon"
                                                                              />
                                                                            </span>
                                                                          </Memo()>
                                                                        </div>
                                                                      </div>
                                                                    </Col>
                                                                  </div>
                                                                </div>
                                                              </Row>
                                                              <Collapse
                                                                appear={false}
                                                                dimension="height"
                                                                getDimensionValue={[Function]}
                                                                in={false}
                                                                mountOnEnter={false}
                                                                onExited={[Function]}
                                                                onExiting={[Function]}
                                                                timeout={300}
                                                                unmountOnExit={false}
                                                              >
                                                                <Transition
                                                                  appear={false}
                                                                  aria-expanded={null}
                                                                  enter={true}
                                                                  exit={true}
                                                                  in={false}
                                                                  mountOnEnter={false}
                                                                  onEnter={[Function]}
                                                                  onEntered={[Function]}
                                                                  onEntering={[Function]}
                                                                  onExit={[Function]}
                                                                  onExited={[Function]}
                                                                  onExiting={[Function]}
                                                                  timeout={300}
                                                                  unmountOnExit={false}
                                                                >
                                                                  <div
                                                                    aria-expanded={null}
                                                                    className="collapse"
                                                                  >
                                                                    <DomainRowExpandedOptions
                                                                      appPropertiesOnly={false}
                                                                      domainFormDisplayOptions={
                                                                        {
                                                                          "domainKindDisplayName": "assay design",
                                                                          "hideFilePropertyType": undefined,
                                                                          "hideInferFromFile": true,
                                                                          "hideStudyPropertyTypes": true,
                                                                          "textChoiceLockedForDomain": true,
                                                                        }
                                                                      }
                                                                      domainIndex={1}
                                                                      field={
                                                                        Immutable.Record {
                                                                          "conceptURI": undefined,
                                                                          "conditionalFormats": Immutable.List [],
                                                                          "defaultScale": undefined,
                                                                          "defaultValueType": undefined,
                                                                          "defaultValue": undefined,
                                                                          "defaultDisplayValue": undefined,
                                                                          "description": undefined,
                                                                          "dimension": undefined,
                                                                          "excludeFromShifting": false,
                                                                          "format": undefined,
                                                                          "hidden": false,
                                                                          "importAliases": undefined,
                                                                          "label": undefined,
                                                                          "lookupContainer": undefined,
                                                                          "lookupQuery": undefined,
                                                                          "lookupSchema": undefined,
                                                                          "lookupValidator": undefined,
                                                                          "measure": undefined,
                                                                          "mvEnabled": false,
                                                                          "name": "field2",
                                                                          "PHI": undefined,
                                                                          "propertyId": undefined,
                                                                          "propertyURI": undefined,
                                                                          "propertyValidators": Immutable.List [],
                                                                          "rangeValidators": Immutable.List [],
                                                                          "rangeURI": "xsd:int",
                                                                          "regexValidators": Immutable.List [],
                                                                          "textChoiceValidator": undefined,
                                                                          "recommendedVariable": false,
                                                                          "required": false,
                                                                          "scale": 4000,
                                                                          "URL": undefined,
                                                                          "shownInDetailsView": true,
                                                                          "shownInInsertView": true,
                                                                          "shownInUpdateView": true,
                                                                          "visible": true,
                                                                          "dataType": Immutable.Record {
                                                                            "conceptURI": undefined,
                                                                            "display": "Integer",
                                                                            "name": "int",
                                                                            "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                                                            "alternateRangeURI": "xsd:int",
                                                                            "shortDisplay": undefined,
                                                                            "lookupSchema": undefined,
                                                                            "lookupQuery": undefined,
                                                                          },
                                                                          "lookupQueryValue": undefined,
                                                                          "lookupType": Immutable.Record {
                                                                            "conceptURI": undefined,
                                                                            "display": "Lookup",
                                                                            "name": "lookup",
                                                                            "rangeURI": "xsd:int",
                                                                            "alternateRangeURI": undefined,
                                                                            "shortDisplay": undefined,
                                                                            "lookupSchema": undefined,
                                                                            "lookupQuery": undefined,
                                                                          },
                                                                          "original": {
                                                                            "conceptURI": undefined,
                                                                            "dataType": Immutable.Record {
                                                                              "conceptURI": undefined,
                                                                              "display": "Integer",
                                                                              "name": "int",
                                                                              "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                                                              "alternateRangeURI": "xsd:int",
                                                                              "shortDisplay": undefined,
                                                                              "lookupSchema": undefined,
                                                                              "lookupQuery": undefined,
                                                                            },
                                                                            "name": "field2",
                                                                            "rangeURI": undefined,
                                                                          },
                                                                          "updatedField": false,
                                                                          "isPrimaryKey": false,
                                                                          "lockType": "NotLocked",
                                                                          "wrappedColumnName": undefined,
                                                                          "disablePhiLevel": false,
                                                                          "lockExistingField": false,
                                                                          "sourceOntology": undefined,
                                                                          "conceptSubtree": undefined,
                                                                          "conceptLabelColumn": undefined,
                                                                          "conceptImportColumn": undefined,
                                                                          "principalConceptCode": undefined,
                                                                          "derivationDataScope": undefined,
                                                                          "selected": false,
                                                                          "scannable": false,
                                                                        }
                                                                      }
                                                                      getDomainFields={[Function]}
                                                                      index={1}
                                                                      onChange={[Function]}
                                                                      onMultiChange={[Function]}
                                                                      showingModal={[Function]}
                                                                      successBsStyle="success"
                                                                    >
                                                                      <div
                                                                        className="domain-row-container"
                                                                      >
                                                                        <div
                                                                          className="domain-row-container-expand-spacer"
                                                                        />
                                                                        <div
                                                                          className="domain-row-container-expanded"
                                                                        >
                                                                          <Col
                                                                            bsClass="col"
                                                                            componentClass="div"
                                                                            xs={12}
                                                                          >
                                                                            <div
                                                                              className="col-xs-12"
                                                                            >
                                                                              <NumericFieldOptions
                                                                                appPropertiesOnly={false}
                                                                                domainIndex={1}
                                                                                index={1}
                                                                                label="Integer Options"
                                                                                lockType="NotLocked"
                                                                                onChange={[Function]}
                                                                                scannable={false}
                                                                              >
                                                                                <div>
                                                                                  <Row
                                                                                    bsClass="row"
                                                                                    componentClass="div"
                                                                                  >
                                                                                    <div
                                                                                      className="row"
                                                                                    >
                                                                                      <Col
                                                                                        bsClass="col"
                                                                                        componentClass="div"
                                                                                        xs={12}
                                                                                      >
                                                                                        <div
                                                                                          className="col-xs-12"
                                                                                        >
                                                                                          <SectionHeading
                                                                                            title="Integer Options"
                                                                                          >
                                                                                            <div
                                                                                              className="domain-field-section-heading"
                                                                                            >
                                                                                              Integer Options
                                                                                            </div>
                                                                                          </SectionHeading>
                                                                                        </div>
                                                                                      </Col>
                                                                                    </div>
                                                                                  </Row>
                                                                                  <Row
                                                                                    bsClass="row"
                                                                                    componentClass="div"
                                                                                  >
                                                                                    <div
                                                                                      className="row"
                                                                                    >
                                                                                      <Col
                                                                                        bsClass="col"
                                                                                        componentClass="div"
                                                                                        xs={3}
                                                                                      >
                                                                                        <div
                                                                                          className="col-xs-3"
                                                                                        >
                                                                                          <div
                                                                                            className="domain-field-label"
                                                                                          >
                                                                                            <DomainFieldLabel
                                                                                              helpTipBody={
                                                                                                <React.Fragment>
                                                                                                  <p>
                                                                                                    To control how a number value is displayed, provide a string format compatible with the Java
                                                                                                     
                                                                                                    <Memo
                                                                                                      urlSuffix="java/text/DecimalFormat.html"
                                                                                                    >
                                                                                                      DecimalFormat
                                                                                                    </Memo>
                                                                                                     class.
                                                                                                  </p>
                                                                                                  <p>
                                                                                                    Learn more about using 
                                                                                                    <HelpLink
                                                                                                      topic="dateFormats#number"
                                                                                                    >
                                                                                                      Number formats
                                                                                                    </HelpLink>
                                                                                                     in LabKey.
                                                                                                  </p>
                                                                                                </React.Fragment>
                                                                                              }
                                                                                              label="Format for Numbers"
                                                                                            >
                                                                                              Format for 
                                                                                              <span
                                                                                                className="domain-no-wrap"
                                                                                              >
                                                                                                Numbers
                                                                                                <Component
                                                                                                  id="tooltip"
                                                                                                  title="Format for Numbers"
                                                                                                >
                                                                                                  <span
                                                                                                    className="label-help-target"
                                                                                                    onMouseOut={[Function]}
                                                                                                    onMouseOver={[Function]}
                                                                                                  >
                                                                                                    <span
                                                                                                      className="label-help-icon fa fa-question-circle"
                                                                                                    />
                                                                                                    <Overlay
                                                                                                      animation={[Function]}
                                                                                                      placement="right"
                                                                                                      rootClose={false}
                                                                                                      show={false}
                                                                                                    >
                                                                                                      <Overlay
                                                                                                        placement="right"
                                                                                                        rootClose={false}
                                                                                                        show={false}
                                                                                                        transition={[Function]}
                                                                                                      />
                                                                                                    </Overlay>
                                                                                                  </span>
                                                                                                </Component>
                                                                                              </span>
                                                                                            </DomainFieldLabel>
                                                                                          </div>
                                                                                        </div>
                                                                                      </Col>
                                                                                      <Col
                                                                                        bsClass="col"
                                                                                        componentClass="div"
                                                                                        xs={2}
                                                                                      >
                                                                                        <div
                                                                                          className="col-xs-2"
                                                                                        >
                                                                                          <div
                                                                                            className="domain-field-label"
                                                                                          >
                                                                                            Default Scale Type
                                                                                          </div>
                                                                                        </div>
                                                                                      </Col>
                                                                                    </div>
                                                                                  </Row>
                                                                                  <Row
                                                                                    bsClass="row"
                                                                                    componentClass="div"
                                                                                  >
                                                                                    <div
                                                                                      className="row"
                                                                                    >
                                                                                      <Col
                                                                                        bsClass="col"
                                                                                        componentClass="div"
                                                                                        xs={3}
                                                                                      >
                                                                                        <div
                                                                                          className="col-xs-3"
                                                                                        >
                                                                                          <FormControl
                                                                                            bsClass="form-control"
                                                                                            componentClass="input"
                                                                                            disabled={false}
                                                                                            id="domainpropertiesrow-format-1-1"
                                                                                            name="domainpropertiesrow-format"
                                                                                            onChange={[Function]}
                                                                                            type="text"
                                                                                            value=""
                                                                                          >
                                                                                            <input
                                                                                              className="form-control"
                                                                                              disabled={false}
                                                                                              id="domainpropertiesrow-format-1-1"
                                                                                              name="domainpropertiesrow-format"
                                                                                              onChange={[Function]}
                                                                                              type="text"
                                                                                              value=""
                                                                                            />
                                                                                          </FormControl>
                                                                                        </div>
                                                                                      </Col>
                                                                                      <Col
                                                                                        bsClass="col"
                                                                                        componentClass="div"
                                                                                        xs={2}
                                                                                      >
                                                                                        <div
                                                                                          className="col-xs-2"
                                                                                        >
                                                                                          <FormControl
                                                                                            bsClass="form-control"
                                                                                            componentClass="select"
                                                                                            disabled={false}
                                                                                            id="domainpropertiesrow-defaultScale-1-1"
                                                                                            name="domainpropertiesrow-defaultScale"
                                                                                            onChange={[Function]}
                                                                                          >
                                                                                            <select
                                                                                              className="form-control"
                                                                                              disabled={false}
                                                                                              id="domainpropertiesrow-defaultScale-1-1"
                                                                                              name="domainpropertiesrow-defaultScale"
                                                                                              onChange={[Function]}
                                                                                            >
                                                                                              <option
                                                                                                key="domainpropertiesrow-defaultScaleoption-LINEAR-1-1"
                                                                                                value="LINEAR"
                                                                                              >
                                                                                                Linear
                                                                                              </option>
                                                                                              <option
                                                                                                key="domainpropertiesrow-defaultScaleoption-LOG-1-1"
                                                                                                value="LOG"
                                                                                              >
                                                                                                Log
                                                                                              </option>
                                                                                            </select>
                                                                                          </FormControl>
                                                                                        </div>
                                                                                      </Col>
                                                                                    </div>
                                                                                  </Row>
                                                                                  <Memo()
                                                                                    appPropertiesOnly={false}
                                                                                    domainIndex={1}
                                                                                    index={1}
                                                                                    label="Integer Options"
                                                                                    lockType="NotLocked"
                                                                                    onChange={[Function]}
                                                                                    scannable={false}
                                                                                  />
                                                                                </div>
                                                                              </NumericFieldOptions>
                                                                            </div>
                                                                          </Col>
                                                                          <Col
                                                                            bsClass="col"
                                                                            componentClass="div"
                                                                            xs={12}
                                                                          >
                                                                            <div
                                                                              className="col-xs-12"
                                                                            >
                                                                              <NameAndLinkingOptions
                                                                                appPropertiesOnly={false}
                                                                                domainFormDisplayOptions={
                                                                                  {
                                                                                    "domainKindDisplayName": "assay design",
                                                                                    "hideFilePropertyType": undefined,
                                                                                    "hideInferFromFile": true,
                                                                                    "hideStudyPropertyTypes": true,
                                                                                    "textChoiceLockedForDomain": true,
                                                                                  }
                                                                                }
                                                                                domainIndex={1}
                                                                                field={
                                                                                  Immutable.Record {
                                                                                    "conceptURI": undefined,
                                                                                    "conditionalFormats": Immutable.List [],
                                                                                    "defaultScale": undefined,
                                                                                    "defaultValueType": undefined,
                                                                                    "defaultValue": undefined,
                                                                                    "defaultDisplayValue": undefined,
                                                                                    "description": undefined,
                                                                                    "dimension": undefined,
                                                                                    "excludeFromShifting": false,
                                                                                    "format": undefined,
                                                                                    "hidden": false,
                                                                                    "importAliases": undefined,
                                                                                    "label": undefined,
                                                                                    "lookupContainer": undefined,
                                                                                    "lookupQuery": undefined,
                                                                                    "lookupSchema": undefined,
                                                                                    "lookupValidator": undefined,
                                                                                    "measure": undefined,
                                                                                    "mvEnabled": false,
                                                                                    "name": "field2",
                                                                                    "PHI": undefined,
                                                                                    "propertyId": undefined,
                                                                                    "propertyURI": undefined,
                                                                                    "propertyValidators": Immutable.List [],
                                                                                    "rangeValidators": Immutable.List [],
                                                                                    "rangeURI": "xsd:int",
                                                                                    "regexValidators": Immutable.List [],
                                                                                    "textChoiceValidator": undefined,
                                                                                    "recommendedVariable": false,
                                                                                    "required": false,
                                                                                    "scale": 4000,
                                                                                    "URL": undefined,
                                                                                    "shownInDetailsView": true,
                                                                                    "shownInInsertView": true,
                                                                                    "shownInUpdateView": true,
                                                                                    "visible": true,
                                                                                    "dataType": Immutable.Record {
                                                                                      "conceptURI": undefined,
                                                                                      "display": "Integer",
                                                                                      "name": "int",
                                                                                      "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                                                                      "alternateRangeURI": "xsd:int",
                                                                                      "shortDisplay": undefined,
                                                                                      "lookupSchema": undefined,
                                                                                      "lookupQuery": undefined,
                                                                                    },
                                                                                    "lookupQueryValue": undefined,
                                                                                    "lookupType": Immutable.Record {
                                                                                      "conceptURI": undefined,
                                                                                      "display": "Lookup",
                                                                                      "name": "lookup",
                                                                                      "rangeURI": "xsd:int",
                                                                                      "alternateRangeURI": undefined,
                                                                                      "shortDisplay": undefined,
                                                                                      "lookupSchema": undefined,
                                                                                      "lookupQuery": undefined,
                                                                                    },
                                                                                    "original": {
                                                                                      "conceptURI": undefined,
                                                                                      "dataType": Immutable.Record {
                                                                                        "conceptURI": undefined,
                                                                                        "display": "Integer",
                                                                                        "name": "int",
                                                                                        "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                                                                        "alternateRangeURI": "xsd:int",
                                                                                        "shortDisplay": undefined,
                                                                                        "lookupSchema": undefined,
                                                                                        "lookupQuery": undefined,
                                                                                      },
                                                                                      "name": "field2",
                                                                                      "rangeURI": undefined,
                                                                                    },
                                                                                    "updatedField": false,
                                                                                    "isPrimaryKey": false,
                                                                                    "lockType": "NotLocked",
                                                                                    "wrappedColumnName": undefined,
                                                                                    "disablePhiLevel": false,
                                                                                    "lockExistingField": false,
                                                                                    "sourceOntology": undefined,
                                                                                    "conceptSubtree": undefined,
                                                                                    "conceptLabelColumn": undefined,
                                                                                    "conceptImportColumn": undefined,
                                                                                    "principalConceptCode": undefined,
                                                                                    "derivationDataScope": undefined,
                                                                                    "selected": false,
                                                                                    "scannable": false,
                                                                                  }
                                                                                }
                                                                                index={1}
                                                                                onChange={[Function]}
                                                                              >
                                                                                <div>
                                                                                  <Row
                                                                                    bsClass="row"
                                                                                    componentClass="div"
                                                                                  >
                                                                                    <div
                                                                                      className="row"
                                                                                    >
                                                                                      <Col
                                                                                        bsClass="col"
                                                                                        componentClass="div"
                                                                                        xs={12}
                                                                                      >
                                                                                        <div
                                                                                          className="col-xs-12"
                                                                                        >
                                                                                          <SectionHeading
                                                                                            cls="domain-field-section-hdr"
                                                                                            title="Name and Linking Options"
                                                                                          >
                                                                                            <div
                                                                                              className="domain-field-section-heading domain-field-section-hdr"
                                                                                            >
                                                                                              Name and Linking Options
                                                                                            </div>
                                                                                          </SectionHeading>
                                                                                        </div>
                                                                                      </Col>
                                                                                    </div>
                                                                                  </Row>
                                                                                  <Row
                                                                                    bsClass="row"
                                                                                    componentClass="div"
                                                                                  >
                                                                                    <div
                                                                                      className="row"
                                                                                    >
                                                                                      <Col
                                                                                        bsClass="col"
                                                                                        componentClass="div"
                                                                                        xs={5}
                                                                                      >
                                                                                        <div
                                                                                          className="col-xs-5"
                                                                                        >
                                                                                          <div
                                                                                            className="domain-field-label"
                                                                                          >
                                                                                            Description
                                                                                          </div>
                                                                                          <FormControl
                                                                                            bsClass="form-control"
                                                                                            className="form-control textarea-noresize"
                                                                                            componentClass="textarea"
                                                                                            disabled={false}
                                                                                            id="domainpropertiesrow-description-1-1"
                                                                                            name="domainpropertiesrow-description"
                                                                                            onChange={[Function]}
                                                                                            rows={4}
                                                                                            value=""
                                                                                          >
                                                                                            <textarea
                                                                                              className="form-control textarea-noresize form-control"
                                                                                              disabled={false}
                                                                                              id="domainpropertiesrow-description-1-1"
                                                                                              name="domainpropertiesrow-description"
                                                                                              onChange={[Function]}
                                                                                              rows={4}
                                                                                              value=""
                                                                                            />
                                                                                          </FormControl>
                                                                                        </div>
                                                                                      </Col>
                                                                                      <Col
                                                                                        bsClass="col"
                                                                                        componentClass="div"
                                                                                        xs={3}
                                                                                      >
                                                                                        <div
                                                                                          className="col-xs-3"
                                                                                        >
                                                                                          <div
                                                                                            className="domain-field-label"
                                                                                          >
                                                                                            Label
                                                                                          </div>
                                                                                          <FormControl
                                                                                            bsClass="form-control"
                                                                                            componentClass="input"
                                                                                            disabled={false}
                                                                                            id="domainpropertiesrow-label-1-1"
                                                                                            name="domainpropertiesrow-label"
                                                                                            onChange={[Function]}
                                                                                            type="text"
                                                                                            value=""
                                                                                          >
                                                                                            <input
                                                                                              className="form-control"
                                                                                              disabled={false}
                                                                                              id="domainpropertiesrow-label-1-1"
                                                                                              name="domainpropertiesrow-label"
                                                                                              onChange={[Function]}
                                                                                              type="text"
                                                                                              value=""
                                                                                            />
                                                                                          </FormControl>
                                                                                          <div
                                                                                            className="domain-field-label"
                                                                                          >
                                                                                            <DomainFieldLabel
                                                                                              helpTipBody={
                                                                                                <React.Fragment>
                                                                                                  Define alternate field names to be used when importing from a file.
                                                                                                  <br />
                                                                                                  <br />
                                                                                                  Multiple aliases may be separated by spaces or commas. To define an alias that contains spaces, use double-quotes (") around it.
                                                                                                </React.Fragment>
                                                                                              }
                                                                                              label="Import Aliases"
                                                                                            >
                                                                                              Import 
                                                                                              <span
                                                                                                className="domain-no-wrap"
                                                                                              >
                                                                                                Aliases
                                                                                                <Component
                                                                                                  id="tooltip"
                                                                                                  title="Import Aliases"
                                                                                                >
                                                                                                  <span
                                                                                                    className="label-help-target"
                                                                                                    onMouseOut={[Function]}
                                                                                                    onMouseOver={[Function]}
                                                                                                  >
                                                                                                    <span
                                                                                                      className="label-help-icon fa fa-question-circle"
                                                                                                    />
                                                                                                    <Overlay
                                                                                                      animation={[Function]}
                                                                                                      placement="right"
                                                                                                      rootClose={false}
                                                                                                      show={false}
                                                                                                    >
                                                                                                      <Overlay
                                                                                                        placement="right"
                                                                                                        rootClose={false}
                                                                                                        show={false}
                                                                                                        transition={[Function]}
                                                                                                      />
                                                                                                    </Overlay>
                                                                                                  </span>
                                                                                                </Component>
                                                                                              </span>
                                                                                            </DomainFieldLabel>
                                                                                          </div>
                                                                                          <FormControl
                                                                                            bsClass="form-control"
                                                                                            componentClass="input"
                                                                                            disabled={false}
                                                                                            id="domainpropertiesrow-importAliases-1-1"
                                                                                            name="domainpropertiesrow-importAliases"
                                                                                            onChange={[Function]}
                                                                                            type="text"
                                                                                            value=""
                                                                                          >
                                                                                            <input
                                                                                              className="form-control"
                                                                                              disabled={false}
                                                                                              id="domainpropertiesrow-importAliases-1-1"
                                                                                              name="domainpropertiesrow-importAliases"
                                                                                              onChange={[Function]}
                                                                                              type="text"
                                                                                              value=""
                                                                                            />
                                                                                          </FormControl>
                                                                                        </div>
                                                                                      </Col>
                                                                                      <Col
                                                                                        bsClass="col"
                                                                                        componentClass="div"
                                                                                        xs={4}
                                                                                      >
                                                                                        <div
                                                                                          className="col-xs-4"
                                                                                        >
                                                                                          <div
                                                                                            className="domain-field-label"
                                                                                          >
                                                                                            <DomainFieldLabel
                                                                                              helpTipBody={
                                                                                                <React.Fragment>
                                                                                                  Use this to change the display of the field value within a data grid into a link. Multiple formats are supported, which allows ways to easily substitute and link to other locations in LabKey.
                                                                                                  <br />
                                                                                                  <br />
                                                                                                  Learn more about using 
                                                                                                  <HelpLink
                                                                                                    topic="urlEncoding"
                                                                                                  >
                                                                                                    URL Formatting Options
                                                                                                  </HelpLink>
                                                                                                  .
                                                                                                </React.Fragment>
                                                                                              }
                                                                                              label="URL"
                                                                                            >
                                                                                              <span
                                                                                                className="domain-no-wrap"
                                                                                              >
                                                                                                URL
                                                                                                <Component
                                                                                                  id="tooltip"
                                                                                                  title="URL"
                                                                                                >
                                                                                                  <span
                                                                                                    className="label-help-target"
                                                                                                    onMouseOut={[Function]}
                                                                                                    onMouseOver={[Function]}
                                                                                                  >
                                                                                                    <span
                                                                                                      className="label-help-icon fa fa-question-circle"
                                                                                                    />
                                                                                                    <Overlay
                                                                                                      animation={[Function]}
                                                                                                      placement="right"
                                                                                                      rootClose={false}
                                                                                                      show={false}
                                                                                                    >
                                                                                                      <Overlay
                                                                                                        placement="right"
                                                                                                        rootClose={false}
                                                                                                        show={false}
                                                                                                        transition={[Function]}
                                                                                                      />
                                                                                                    </Overlay>
                                                                                                  </span>
                                                                                                </Component>
                                                                                              </span>
                                                                                            </DomainFieldLabel>
                                                                                          </div>
                                                                                          <FormControl
                                                                                            bsClass="form-control"
                                                                                            componentClass="input"
                                                                                            disabled={false}
                                                                                            id="domainpropertiesrow-URL-1-1"
                                                                                            name="domainpropertiesrow-URL"
                                                                                            onChange={[Function]}
                                                                                            type="text"
                                                                                            value=""
                                                                                          >
                                                                                            <input
                                                                                              className="form-control"
                                                                                              disabled={false}
                                                                                              id="domainpropertiesrow-URL-1-1"
                                                                                              name="domainpropertiesrow-URL"
                                                                                              onChange={[Function]}
                                                                                              type="text"
                                                                                              value=""
                                                                                            />
                                                                                          </FormControl>
                                                                                        </div>
                                                                                      </Col>
                                                                                    </div>
                                                                                  </Row>
                                                                                </div>
                                                                              </NameAndLinkingOptions>
                                                                            </div>
                                                                          </Col>
                                                                          <Col
                                                                            bsClass="col"
                                                                            componentClass="div"
                                                                            xs={12}
                                                                          >
                                                                            <div
                                                                              className="col-xs-12"
                                                                            >
                                                                              <ConditionalFormattingAndValidation
                                                                                domainFormDisplayOptions={
                                                                                  {
                                                                                    "domainKindDisplayName": "assay design",
                                                                                    "hideFilePropertyType": undefined,
                                                                                    "hideInferFromFile": true,
                                                                                    "hideStudyPropertyTypes": true,
                                                                                    "textChoiceLockedForDomain": true,
                                                                                  }
                                                                                }
                                                                                domainIndex={1}
                                                                                field={
                                                                                  Immutable.Record {
                                                                                    "conceptURI": undefined,
                                                                                    "conditionalFormats": Immutable.List [],
                                                                                    "defaultScale": undefined,
                                                                                    "defaultValueType": undefined,
                                                                                    "defaultValue": undefined,
                                                                                    "defaultDisplayValue": undefined,
                                                                                    "description": undefined,
                                                                                    "dimension": undefined,
                                                                                    "excludeFromShifting": false,
                                                                                    "format": undefined,
                                                                                    "hidden": false,
                                                                                    "importAliases": undefined,
                                                                                    "label": undefined,
                                                                                    "lookupContainer": undefined,
                                                                                    "lookupQuery": undefined,
                                                                                    "lookupSchema": undefined,
                                                                                    "lookupValidator": undefined,
                                                                                    "measure": undefined,
                                                                                    "mvEnabled": false,
                                                                                    "name": "field2",
                                                                                    "PHI": undefined,
                                                                                    "propertyId": undefined,
                                                                                    "propertyURI": undefined,
                                                                                    "propertyValidators": Immutable.List [],
                                                                                    "rangeValidators": Immutable.List [],
                                                                                    "rangeURI": "xsd:int",
                                                                                    "regexValidators": Immutable.List [],
                                                                                    "textChoiceValidator": undefined,
                                                                                    "recommendedVariable": false,
                                                                                    "required": false,
                                                                                    "scale": 4000,
                                                                                    "URL": undefined,
                                                                                    "shownInDetailsView": true,
                                                                                    "shownInInsertView": true,
                                                                                    "shownInUpdateView": true,
                                                                                    "visible": true,
                                                                                    "dataType": Immutable.Record {
                                                                                      "conceptURI": undefined,
                                                                                      "display": "Integer",
                                                                                      "name": "int",
                                                                                      "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                                                                      "alternateRangeURI": "xsd:int",
                                                                                      "shortDisplay": undefined,
                                                                                      "lookupSchema": undefined,
                                                                                      "lookupQuery": undefined,
                                                                                    },
                                                                                    "lookupQueryValue": undefined,
                                                                                    "lookupType": Immutable.Record {
                                                                                      "conceptURI": undefined,
                                                                                      "display": "Lookup",
                                                                                      "name": "lookup",
                                                                                      "rangeURI": "xsd:int",
                                                                                      "alternateRangeURI": undefined,
                                                                                      "shortDisplay": undefined,
                                                                                      "lookupSchema": undefined,
                                                                                      "lookupQuery": undefined,
                                                                                    },
                                                                                    "original": {
                                                                                      "conceptURI": undefined,
                                                                                      "dataType": Immutable.Record {
                                                                                        "conceptURI": undefined,
                                                                                        "display": "Integer",
                                                                                        "name": "int",
                                                                                        "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                                                                        "alternateRangeURI": "xsd:int",
                                                                                        "shortDisplay": undefined,
                                                                                        "lookupSchema": undefined,
                                                                                        "lookupQuery": undefined,
                                                                                      },
                                                                                      "name": "field2",
                                                                                      "rangeURI": undefined,
                                                                                    },
                                                                                    "updatedField": false,
                                                                                    "isPrimaryKey": false,
                                                                                    "lockType": "NotLocked",
                                                                                    "wrappedColumnName": undefined,
                                                                                    "disablePhiLevel": false,
                                                                                    "lockExistingField": false,
                                                                                    "sourceOntology": undefined,
                                                                                    "conceptSubtree": undefined,
                                                                                    "conceptLabelColumn": undefined,
                                                                                    "conceptImportColumn": undefined,
                                                                                    "principalConceptCode": undefined,
                                                                                    "derivationDataScope": undefined,
                                                                                    "selected": false,
                                                                                    "scannable": false,
                                                                                  }
                                                                                }
                                                                                index={1}
                                                                                onChange={[Function]}
                                                                                showingModal={[Function]}
                                                                                successBsStyle="success"
                                                                              >
                                                                                <div>
                                                                                  <Row
                                                                                    bsClass="row"
                                                                                    componentClass="div"
                                                                                  >
                                                                                    <div
                                                                                      className="row"
                                                                                    >
                                                                                      <Col
                                                                                        bsClass="col"
                                                                                        componentClass="div"
                                                                                        xs={12}
                                                                                      >
                                                                                        <div
                                                                                          className="col-xs-12"
                                                                                        >
                                                                                          <SectionHeading
                                                                                            cls="domain-field-section-hdr"
                                                                                            title="Conditional Formatting and Validation Options"
                                                                                          >
                                                                                            <div
                                                                                              className="domain-field-section-heading domain-field-section-hdr"
                                                                                            >
                                                                                              Conditional Formatting and Validation Options
                                                                                            </div>
                                                                                          </SectionHeading>
                                                                                        </div>
                                                                                      </Col>
                                                                                    </div>
                                                                                  </Row>
                                                                                  <Row
                                                                                    bsClass="row"
                                                                                    componentClass="div"
                                                                                  >
                                                                                    <div
                                                                                      className="row"
                                                                                    >
                                                                                      <Col
                                                                                        bsClass="col"
                                                                                        componentClass="div"
                                                                                        xs={12}
                                                                                      >
                                                                                        <div
                                                                                          className="col-xs-12"
                                                                                        >
                                                                                          <div
                                                                                            className="domain-validation-group"
                                                                                          >
                                                                                            <div
                                                                                              className="domain-field-label domain-no-wrap"
                                                                                            >
                                                                                              <DomainFieldLabel
                                                                                                helpTipBody={<ConditionalFormatHelpText />}
                                                                                                label="Create Conditional Format Criteria"
                                                                                              >
                                                                                                Create Conditional Format 
                                                                                                <span
                                                                                                  className="domain-no-wrap"
                                                                                                >
                                                                                                  Criteria
                                                                                                  <Component
                                                                                                    id="tooltip"
                                                                                                    title="Create Conditional Format Criteria"
                                                                                                  >
                                                                                                    <span
                                                                                                      className="label-help-target"
                                                                                                      onMouseOut={[Function]}
                                                                                                      onMouseOver={[Function]}
                                                                                                    >
                                                                                                      <span
                                                                                                        className="label-help-icon fa fa-question-circle"
                                                                                                      />
                                                                                                      <Overlay
                                                                                                        animation={[Function]}
                                                                                                        placement="right"
                                                                                                        rootClose={false}
                                                                                                        show={false}
                                                                                                      >
                                                                                                        <Overlay
                                                                                                          placement="right"
                                                                                                          rootClose={false}
                                                                                                          show={false}
                                                                                                          transition={[Function]}
                                                                                                        />
                                                                                                      </Overlay>
                                                                                                    </span>
                                                                                                  </Component>
                                                                                                </span>
                                                                                              </DomainFieldLabel>
                                                                                            </div>
                                                                                            <div>
                                                                                              <Button
                                                                                                active={false}
                                                                                                block={false}
                                                                                                bsClass="btn"
                                                                                                bsStyle="default"
                                                                                                className="domain-validation-button"
                                                                                                disabled={false}
                                                                                                id="domainpropertiesrow-conditionalFormat-1-1"
                                                                                                name="domainpropertiesrow-conditionalFormat"
                                                                                                onClick={[Function]}
                                                                                              >
                                                                                                <button
                                                                                                  className="domain-validation-button btn btn-default"
                                                                                                  disabled={false}
                                                                                                  id="domainpropertiesrow-conditionalFormat-1-1"
                                                                                                  name="domainpropertiesrow-conditionalFormat"
                                                                                                  onClick={[Function]}
                                                                                                  type="button"
                                                                                                >
                                                                                                  Add Format
                                                                                                </button>
                                                                                              </Button>
                                                                                              <span
                                                                                                className="domain-text-label"
                                                                                              >
                                                                                                None Set
                                                                                              </span>
                                                                                            </div>
                                                                                          </div>
                                                                                          <div
                                                                                            className=""
                                                                                          >
                                                                                            <div
                                                                                              className="domain-field-label domain-no-wrap"
                                                                                            >
                                                                                              <DomainFieldLabel
                                                                                                helpTipBody={<RangeValidatorHelpText />}
                                                                                                label="Create Range Validator"
                                                                                              >
                                                                                                Create Range 
                                                                                                <span
                                                                                                  className="domain-no-wrap"
                                                                                                >
                                                                                                  Validator
                                                                                                  <Component
                                                                                                    id="tooltip"
                                                                                                    title="Create Range Validator"
                                                                                                  >
                                                                                                    <span
                                                                                                      className="label-help-target"
                                                                                                      onMouseOut={[Function]}
                                                                                                      onMouseOver={[Function]}
                                                                                                    >
                                                                                                      <span
                                                                                                        className="label-help-icon fa fa-question-circle"
                                                                                                      />
                                                                                                      <Overlay
                                                                                                        animation={[Function]}
                                                                                                        placement="right"
                                                                                                        rootClose={false}
                                                                                                        show={false}
                                                                                                      >
                                                                                                        <Overlay
                                                                                                          placement="right"
                                                                                                          rootClose={false}
                                                                                                          show={false}
                                                                                                          transition={[Function]}
                                                                                                        />
                                                                                                      </Overlay>
                                                                                                    </span>
                                                                                                  </Component>
                                                                                                </span>
                                                                                              </DomainFieldLabel>
                                                                                            </div>
                                                                                            <div>
                                                                                              <Button
                                                                                                active={false}
                                                                                                block={false}
                                                                                                bsClass="btn"
                                                                                                bsStyle="default"
                                                                                                className="domain-validation-button"
                                                                                                disabled={false}
                                                                                                id="domainpropertiesrow-rangeValidator-1-1"
                                                                                                name="domainpropertiesrow-rangeValidator"
                                                                                                onClick={[Function]}
                                                                                              >
                                                                                                <button
                                                                                                  className="domain-validation-button btn btn-default"
                                                                                                  disabled={false}
                                                                                                  id="domainpropertiesrow-rangeValidator-1-1"
                                                                                                  name="domainpropertiesrow-rangeValidator"
                                                                                                  onClick={[Function]}
                                                                                                  type="button"
                                                                                                >
                                                                                                  Add Range
                                                                                                </button>
                                                                                              </Button>
                                                                                              <span
                                                                                                className="domain-text-label"
                                                                                              >
                                                                                                None Set
                                                                                              </span>
                                                                                            </div>
                                                                                          </div>
                                                                                        </div>
                                                                                      </Col>
                                                                                    </div>
                                                                                  </Row>
                                                                                </div>
                                                                              </ConditionalFormattingAndValidation>
                                                                            </div>
                                                                          </Col>
                                                                        </div>
                                                                      </div>
                                                                    </DomainRowExpandedOptions>
                                                                  </div>
                                                                </Transition>
                                                              </Collapse>
                                                            </div>
                                                          </Draggable>
                                                        </Connect(Draggable)>
                                                      </PrivateDraggable>
                                                    </PublicDraggable>
                                                  </DomainRow>
                                                  <DomainRow
                                                    appPropertiesOnly={false}
                                                    availableTypes={
                                                      Immutable.List [
                                                        Immutable.Record {
                                                          "conceptURI": undefined,
                                                          "display": "Text",
                                                          "name": "string",
                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                          "alternateRangeURI": "xsd:string",
                                                          "shortDisplay": "String",
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                        Immutable.Record {
                                                          "conceptURI": undefined,
                                                          "display": "Multi-Line Text",
                                                          "name": "multiLine",
                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#multiLine",
                                                          "alternateRangeURI": undefined,
                                                          "shortDisplay": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                        Immutable.Record {
                                                          "conceptURI": undefined,
                                                          "display": "Boolean",
                                                          "name": "boolean",
                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#boolean",
                                                          "alternateRangeURI": "xsd:boolean",
                                                          "shortDisplay": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                        Immutable.Record {
                                                          "conceptURI": undefined,
                                                          "display": "Integer",
                                                          "name": "int",
                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                                          "alternateRangeURI": "xsd:int",
                                                          "shortDisplay": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                        Immutable.Record {
                                                          "conceptURI": undefined,
                                                          "display": "Decimal (floating point)",
                                                          "name": "double",
                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#double",
                                                          "alternateRangeURI": "xsd:double",
                                                          "shortDisplay": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                        Immutable.Record {
                                                          "conceptURI": undefined,
                                                          "display": "Date Time",
                                                          "name": "dateTime",
                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                                                          "alternateRangeURI": "xsd:dateTime",
                                                          "shortDisplay": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                        Immutable.Record {
                                                          "conceptURI": "http://www.labkey.org/exp/xml#flag",
                                                          "display": "Flag",
                                                          "name": "flag",
                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                          "alternateRangeURI": undefined,
                                                          "shortDisplay": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                        Immutable.Record {
                                                          "conceptURI": undefined,
                                                          "display": "User",
                                                          "name": "users",
                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                                          "alternateRangeURI": undefined,
                                                          "shortDisplay": undefined,
                                                          "lookupSchema": "core",
                                                          "lookupQuery": "users",
                                                        },
                                                        Immutable.Record {
                                                          "conceptURI": "http://cpas.labkey.com/Study#ParticipantId",
                                                          "display": "Subject/Participant",
                                                          "name": "ParticipantId",
                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                          "alternateRangeURI": undefined,
                                                          "shortDisplay": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                        Immutable.Record {
                                                          "conceptURI": undefined,
                                                          "display": "Lookup",
                                                          "name": "lookup",
                                                          "rangeURI": undefined,
                                                          "alternateRangeURI": undefined,
                                                          "shortDisplay": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                        Immutable.Record {
                                                          "conceptURI": "http://www.labkey.org/exp/xml#sample",
                                                          "display": "Sample",
                                                          "name": "sample",
                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                                          "alternateRangeURI": undefined,
                                                          "shortDisplay": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                        Immutable.Record {
                                                          "conceptURI": "http://www.labkey.org/types#textChoice",
                                                          "display": "Text Choice",
                                                          "name": "textChoice",
                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                          "alternateRangeURI": undefined,
                                                          "shortDisplay": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                      ]
                                                    }
                                                    defaultValueOptions={Immutable.List []}
                                                    domainFormDisplayOptions={
                                                      {
                                                        "domainKindDisplayName": "assay design",
                                                        "hideFilePropertyType": undefined,
                                                        "hideInferFromFile": true,
                                                        "hideStudyPropertyTypes": true,
                                                        "textChoiceLockedForDomain": true,
                                                      }
                                                    }
                                                    domainId={null}
                                                    domainIndex={1}
                                                    dragging={false}
                                                    expandTransition={300}
                                                    expanded={false}
                                                    field={
                                                      Immutable.Record {
                                                        "conceptURI": undefined,
                                                        "conditionalFormats": Immutable.List [],
                                                        "defaultScale": undefined,
                                                        "defaultValueType": undefined,
                                                        "defaultValue": undefined,
                                                        "defaultDisplayValue": undefined,
                                                        "description": undefined,
                                                        "dimension": undefined,
                                                        "excludeFromShifting": false,
                                                        "format": undefined,
                                                        "hidden": false,
                                                        "importAliases": undefined,
                                                        "label": undefined,
                                                        "lookupContainer": undefined,
                                                        "lookupQuery": undefined,
                                                        "lookupSchema": undefined,
                                                        "lookupValidator": undefined,
                                                        "measure": undefined,
                                                        "mvEnabled": false,
                                                        "name": "field3",
                                                        "PHI": undefined,
                                                        "propertyId": undefined,
                                                        "propertyURI": undefined,
                                                        "propertyValidators": Immutable.List [],
                                                        "rangeValidators": Immutable.List [],
                                                        "rangeURI": "xsd:dateTime",
                                                        "regexValidators": Immutable.List [],
                                                        "textChoiceValidator": undefined,
                                                        "recommendedVariable": false,
                                                        "required": false,
                                                        "scale": 4000,
                                                        "URL": undefined,
                                                        "shownInDetailsView": true,
                                                        "shownInInsertView": true,
                                                        "shownInUpdateView": true,
                                                        "visible": true,
                                                        "dataType": Immutable.Record {
                                                          "conceptURI": undefined,
                                                          "display": "Date Time",
                                                          "name": "dateTime",
                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                                                          "alternateRangeURI": "xsd:dateTime",
                                                          "shortDisplay": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                        "lookupQueryValue": undefined,
                                                        "lookupType": Immutable.Record {
                                                          "conceptURI": undefined,
                                                          "display": "Lookup",
                                                          "name": "lookup",
                                                          "rangeURI": "xsd:dateTime",
                                                          "alternateRangeURI": undefined,
                                                          "shortDisplay": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                        "original": {
                                                          "conceptURI": undefined,
                                                          "dataType": Immutable.Record {
                                                            "conceptURI": undefined,
                                                            "display": "Date Time",
                                                            "name": "dateTime",
                                                            "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                                                            "alternateRangeURI": "xsd:dateTime",
                                                            "shortDisplay": undefined,
                                                            "lookupSchema": undefined,
                                                            "lookupQuery": undefined,
                                                          },
                                                          "name": "field3",
                                                          "rangeURI": undefined,
                                                        },
                                                        "updatedField": false,
                                                        "isPrimaryKey": false,
                                                        "lockType": "NotLocked",
                                                        "wrappedColumnName": undefined,
                                                        "disablePhiLevel": false,
                                                        "lockExistingField": false,
                                                        "sourceOntology": undefined,
                                                        "conceptSubtree": undefined,
                                                        "conceptLabelColumn": undefined,
                                                        "conceptImportColumn": undefined,
                                                        "principalConceptCode": undefined,
                                                        "derivationDataScope": undefined,
                                                        "selected": false,
                                                        "scannable": false,
                                                      }
                                                    }
                                                    fieldDetailsInfo={{}}
                                                    getDomainFields={[Function]}
                                                    helpNoun="field designer"
                                                    index={2}
                                                    key="domain-row-key-2"
                                                    maxPhiLevel="Restricted"
                                                    onChange={[Function]}
                                                    onDelete={[Function]}
                                                    onExpand={[Function]}
                                                    showDefaultValueSettings={false}
                                                    successBsStyle="success"
                                                  >
                                                    <PublicDraggable
                                                      draggableId="domainpropertiesrow-domaindrag-1-2"
                                                      index={2}
                                                    >
                                                      <PrivateDraggable
                                                        canDragInteractiveElements={false}
                                                        draggableId="domainpropertiesrow-domaindrag-1-2"
                                                        index={2}
                                                        isClone={false}
                                                        isEnabled={true}
                                                        shouldRespectForcePress={false}
                                                      >
                                                        <Connect(Draggable)
                                                          canDragInteractiveElements={false}
                                                          draggableId="domainpropertiesrow-domaindrag-1-2"
                                                          index={2}
                                                          isClone={false}
                                                          isEnabled={true}
                                                          shouldRespectForcePress={false}
                                                        >
                                                          <Draggable
                                                            canDragInteractiveElements={false}
                                                            draggableId="domainpropertiesrow-domaindrag-1-2"
                                                            dropAnimationFinished={[Function]}
                                                            index={2}
                                                            isClone={false}
                                                            isEnabled={true}
                                                            mapped={
                                                              {
                                                                "combineTargetFor": null,
                                                                "offset": {
                                                                  "x": 0,
                                                                  "y": 0,
                                                                },
                                                                "shouldAnimateDisplacement": true,
                                                                "snapshot": {
                                                                  "combineTargetFor": null,
                                                                  "combineWith": null,
                                                                  "draggingOver": null,
                                                                  "dropAnimation": null,
                                                                  "isClone": false,
                                                                  "isDragging": false,
                                                                  "isDropAnimating": false,
                                                                  "mode": null,
                                                                },
                                                                "type": "SECONDARY",
                                                              }
                                                            }
                                                            shouldRespectForcePress={false}
                                                          >
                                                            <div
                                                              className="domain-field-row domain-row-border-default"
                                                              data-rbd-draggable-context-id="1"
                                                              data-rbd-draggable-id="domainpropertiesrow-domaindrag-1-2"
                                                              onTransitionEnd={null}
                                                              style={
                                                                {
                                                                  "transform": null,
                                                                  "transition": null,
                                                                }
                                                              }
                                                              tabIndex={2}
                                                            >
                                                              <Row
                                                                bsClass="row"
                                                                className="domain-row-container"
                                                                componentClass="div"
                                                                key="domainpropertiesrow-domainrow-1-2"
                                                              >
                                                                <div
                                                                  className="domain-row-container row"
                                                                >
                                                                  <AdvancedSettings
                                                                    defaultValueOptions={Immutable.List []}
                                                                    domainFormDisplayOptions={
                                                                      {
                                                                        "domainKindDisplayName": "assay design",
                                                                        "hideFilePropertyType": undefined,
                                                                        "hideInferFromFile": true,
                                                                        "hideStudyPropertyTypes": true,
                                                                        "textChoiceLockedForDomain": true,
                                                                      }
                                                                    }
                                                                    domainId={null}
                                                                    domainIndex={1}
                                                                    field={
                                                                      Immutable.Record {
                                                                        "conceptURI": undefined,
                                                                        "conditionalFormats": Immutable.List [],
                                                                        "defaultScale": undefined,
                                                                        "defaultValueType": undefined,
                                                                        "defaultValue": undefined,
                                                                        "defaultDisplayValue": undefined,
                                                                        "description": undefined,
                                                                        "dimension": undefined,
                                                                        "excludeFromShifting": false,
                                                                        "format": undefined,
                                                                        "hidden": false,
                                                                        "importAliases": undefined,
                                                                        "label": undefined,
                                                                        "lookupContainer": undefined,
                                                                        "lookupQuery": undefined,
                                                                        "lookupSchema": undefined,
                                                                        "lookupValidator": undefined,
                                                                        "measure": undefined,
                                                                        "mvEnabled": false,
                                                                        "name": "field3",
                                                                        "PHI": undefined,
                                                                        "propertyId": undefined,
                                                                        "propertyURI": undefined,
                                                                        "propertyValidators": Immutable.List [],
                                                                        "rangeValidators": Immutable.List [],
                                                                        "rangeURI": "xsd:dateTime",
                                                                        "regexValidators": Immutable.List [],
                                                                        "textChoiceValidator": undefined,
                                                                        "recommendedVariable": false,
                                                                        "required": false,
                                                                        "scale": 4000,
                                                                        "URL": undefined,
                                                                        "shownInDetailsView": true,
                                                                        "shownInInsertView": true,
                                                                        "shownInUpdateView": true,
                                                                        "visible": true,
                                                                        "dataType": Immutable.Record {
                                                                          "conceptURI": undefined,
                                                                          "display": "Date Time",
                                                                          "name": "dateTime",
                                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                                                                          "alternateRangeURI": "xsd:dateTime",
                                                                          "shortDisplay": undefined,
                                                                          "lookupSchema": undefined,
                                                                          "lookupQuery": undefined,
                                                                        },
                                                                        "lookupQueryValue": undefined,
                                                                        "lookupType": Immutable.Record {
                                                                          "conceptURI": undefined,
                                                                          "display": "Lookup",
                                                                          "name": "lookup",
                                                                          "rangeURI": "xsd:dateTime",
                                                                          "alternateRangeURI": undefined,
                                                                          "shortDisplay": undefined,
                                                                          "lookupSchema": undefined,
                                                                          "lookupQuery": undefined,
                                                                        },
                                                                        "original": {
                                                                          "conceptURI": undefined,
                                                                          "dataType": Immutable.Record {
                                                                            "conceptURI": undefined,
                                                                            "display": "Date Time",
                                                                            "name": "dateTime",
                                                                            "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                                                                            "alternateRangeURI": "xsd:dateTime",
                                                                            "shortDisplay": undefined,
                                                                            "lookupSchema": undefined,
                                                                            "lookupQuery": undefined,
                                                                          },
                                                                          "name": "field3",
                                                                          "rangeURI": undefined,
                                                                        },
                                                                        "updatedField": false,
                                                                        "isPrimaryKey": false,
                                                                        "lockType": "NotLocked",
                                                                        "wrappedColumnName": undefined,
                                                                        "disablePhiLevel": false,
                                                                        "lockExistingField": false,
                                                                        "sourceOntology": undefined,
                                                                        "conceptSubtree": undefined,
                                                                        "conceptLabelColumn": undefined,
                                                                        "conceptImportColumn": undefined,
                                                                        "principalConceptCode": undefined,
                                                                        "derivationDataScope": undefined,
                                                                        "selected": false,
                                                                        "scannable": false,
                                                                      }
                                                                    }
                                                                    helpNoun="field designer"
                                                                    index={2}
                                                                    label="field3"
                                                                    maxPhiLevel="Restricted"
                                                                    onApply={[Function]}
                                                                    onHide={[Function]}
                                                                    show={false}
                                                                    showDefaultValueSettings={false}
                                                                    successBsStyle="success"
                                                                  >
                                                                    <Modal
                                                                      animation={true}
                                                                      autoFocus={true}
                                                                      backdrop={true}
                                                                      bsClass="modal"
                                                                      dialogComponentClass={[Function]}
                                                                      enforceFocus={true}
                                                                      keyboard={true}
                                                                      manager={
                                                                        ModalManager {
                                                                          "add": [Function],
                                                                          "containers": [],
                                                                          "data": [],
                                                                          "handleContainerOverflow": true,
                                                                          "hideSiblingNodes": true,
                                                                          "isTopModal": [Function],
                                                                          "modals": [],
                                                                          "remove": [Function],
                                                                        }
                                                                      }
                                                                      onEnter={[Function]}
                                                                      onHide={[Function]}
                                                                      renderBackdrop={[Function]}
                                                                      restoreFocus={true}
                                                                      show={false}
                                                                    >
                                                                      <Modal
                                                                        autoFocus={true}
                                                                        backdrop={true}
                                                                        backdropClassName="modal-backdrop"
                                                                        backdropTransition={[Function]}
                                                                        containerClassName="modal-open"
                                                                        enforceFocus={true}
                                                                        keyboard={true}
                                                                        manager={
                                                                          ModalManager {
                                                                            "add": [Function],
                                                                            "containers": [],
                                                                            "data": [],
                                                                            "handleContainerOverflow": true,
                                                                            "hideSiblingNodes": true,
                                                                            "isTopModal": [Function],
                                                                            "modals": [],
                                                                            "remove": [Function],
                                                                          }
                                                                        }
                                                                        onEnter={[Function]}
                                                                        onEntering={[Function]}
                                                                        onExited={[Function]}
                                                                        onHide={[Function]}
                                                                        onMouseUp={[Function]}
                                                                        renderBackdrop={[Function]}
                                                                        restoreFocus={true}
                                                                        show={false}
                                                                        transition={[Function]}
                                                                      />
                                                                    </Modal>
                                                                  </AdvancedSettings>
                                                                  <div
                                                                    aria-describedby="rbd-hidden-text-1-hidden-text-5"
                                                                    className="domain-row-handle"
                                                                    data-rbd-drag-handle-context-id="1"
                                                                    data-rbd-drag-handle-draggable-id="domainpropertiesrow-domaindrag-1-2"
                                                                    draggable={false}
                                                                    onDragStart={[Function]}
                                                                    role="button"
                                                                    tabIndex={0}
                                                                  >
                                                                    <DragDropHandle>
                                                                      <div
                                                                        className="drag-drop-handle"
                                                                      >
                                                                        <span
                                                                          className="fa fa-ellipsis-v"
                                                                        />
                                                                        <span
                                                                          className="fa fa-ellipsis-v"
                                                                        />
                                                                      </div>
                                                                    </DragDropHandle>
                                                                  </div>
                                                                  <div
                                                                    className="domain-row-action-section"
                                                                  >
                                                                    <Checkbox
                                                                      bsClass="checkbox"
                                                                      checked={false}
                                                                      className="domain-field-check-icon"
                                                                      disabled={false}
                                                                      id="domainpropertiesrow-selected-1-2"
                                                                      inline={false}
                                                                      name="domainpropertiesrow-selected"
                                                                      onChange={[Function]}
                                                                      title=""
                                                                    >
                                                                      <div
                                                                        className="domain-field-check-icon checkbox"
                                                                      >
                                                                        <label
                                                                          title=""
                                                                        >
                                                                          <input
                                                                            checked={false}
                                                                            disabled={false}
                                                                            id="domainpropertiesrow-selected-1-2"
                                                                            name="domainpropertiesrow-selected"
                                                                            onChange={[Function]}
                                                                            type="checkbox"
                                                                          />
                                                                        </label>
                                                                      </div>
                                                                    </Checkbox>
                                                                    <FieldExpansionToggle
                                                                      cls="domain-field-expand-icon"
                                                                      collapsedTitle="Show additional field properties"
                                                                      expanded={false}
                                                                      expandedTitle="Hide additional field properties"
                                                                      id="domainpropertiesrow-expand-1-2"
                                                                      onClick={[Function]}
                                                                    >
                                                                      <div
                                                                        className="field-icon domain-field-expand-icon"
                                                                        id="domainpropertiesrow-expand-1-2"
                                                                        onClick={[Function]}
                                                                        title="Show additional field properties"
                                                                      >
                                                                        <span
                                                                          className="fa fa-lg fa-plus-square"
                                                                        />
                                                                      </div>
                                                                    </FieldExpansionToggle>
                                                                  </div>
                                                                  <div
                                                                    className="domain-row-main"
                                                                  >
                                                                    <Col
                                                                      bsClass="col"
                                                                      className="domain-row-base-fields domain-row-base-fields-position"
                                                                      componentClass="div"
                                                                      xs={6}
                                                                    >
                                                                      <div
                                                                        className="domain-row-base-fields domain-row-base-fields-position col-xs-6"
                                                                      >
                                                                        <div
                                                                          id="domainpropertiesrow-row-1-2"
                                                                        >
                                                                          <Col
                                                                            bsClass="col"
                                                                            componentClass="div"
                                                                            xs={6}
                                                                          >
                                                                            <div
                                                                              className="col-xs-6"
                                                                            >
                                                                              <FormControl
                                                                                bsClass="form-control"
                                                                                componentClass="input"
                                                                                disabled={false}
                                                                                id="domainpropertiesrow-name-1-2"
                                                                                name="domainpropertiesrow-name"
                                                                                onChange={[Function]}
                                                                                type="text"
                                                                                value="field3"
                                                                              >
                                                                                <input
                                                                                  className="form-control"
                                                                                  disabled={false}
                                                                                  id="domainpropertiesrow-name-1-2"
                                                                                  name="domainpropertiesrow-name"
                                                                                  onChange={[Function]}
                                                                                  type="text"
                                                                                  value="field3"
                                                                                />
                                                                              </FormControl>
                                                                            </div>
                                                                          </Col>
                                                                          <Col
                                                                            bsClass="col"
                                                                            componentClass="div"
                                                                            xs={4}
                                                                          >
                                                                            <div
                                                                              className="col-xs-4"
                                                                            >
                                                                              <FormControl
                                                                                bsClass="form-control"
                                                                                componentClass="select"
                                                                                disabled={false}
                                                                                id="domainpropertiesrow-type-1-2"
                                                                                name="domainpropertiesrow-type"
                                                                                onChange={[Function]}
                                                                                value="dateTime"
                                                                              >
                                                                                <select
                                                                                  className="form-control"
                                                                                  disabled={false}
                                                                                  id="domainpropertiesrow-type-1-2"
                                                                                  name="domainpropertiesrow-type"
                                                                                  onChange={[Function]}
                                                                                  value="dateTime"
                                                                                >
                                                                                  <option
                                                                                    key="boolean"
                                                                                    value="boolean"
                                                                                  >
                                                                                    Boolean
                                                                                  </option>
                                                                                  <option
                                                                                    key="dateTime"
                                                                                    value="dateTime"
                                                                                  >
                                                                                    Date Time
                                                                                  </option>
                                                                                  <option
                                                                                    key="double"
                                                                                    value="double"
                                                                                  >
                                                                                    Decimal (floating point)
                                                                                  </option>
                                                                                  <option
                                                                                    key="flag"
                                                                                    value="flag"
                                                                                  >
                                                                                    Flag
                                                                                  </option>
                                                                                  <option
                                                                                    key="int"
                                                                                    value="int"
                                                                                  >
                                                                                    Integer
                                                                                  </option>
                                                                                  <option
                                                                                    key="lookup"
                                                                                    value="lookup"
                                                                                  >
                                                                                    Lookup
                                                                                  </option>
                                                                                  <option
                                                                                    key="multiLine"
                                                                                    value="multiLine"
                                                                                  >
                                                                                    Multi-Line Text
                                                                                  </option>
                                                                                  <option
                                                                                    key="sample"
                                                                                    value="sample"
                                                                                  >
                                                                                    Sample
                                                                                  </option>
                                                                                  <option
                                                                                    key="string"
                                                                                    value="string"
                                                                                  >
                                                                                    Text
                                                                                  </option>
                                                                                  <option
                                                                                    key="textChoice"
                                                                                    value="textChoice"
                                                                                  >
                                                                                    Text Choice
                                                                                  </option>
                                                                                  <option
                                                                                    key="users"
                                                                                    value="users"
                                                                                  >
                                                                                    User
                                                                                  </option>
                                                                                </select>
                                                                              </FormControl>
                                                                            </div>
                                                                          </Col>
                                                                          <Col
                                                                            bsClass="col"
                                                                            componentClass="div"
                                                                            xs={2}
                                                                          >
                                                                            <div
                                                                              className="col-xs-2"
                                                                            >
                                                                              <div
                                                                                className="domain-field-checkbox-container"
                                                                              >
                                                                                <Checkbox
                                                                                  bsClass="checkbox"
                                                                                  checked={false}
                                                                                  className="domain-field-checkbox"
                                                                                  disabled={false}
                                                                                  id="domainpropertiesrow-required-1-2"
                                                                                  inline={false}
                                                                                  name="domainpropertiesrow-required"
                                                                                  onChange={[Function]}
                                                                                  title=""
                                                                                >
                                                                                  <div
                                                                                    className="domain-field-checkbox checkbox"
                                                                                  >
                                                                                    <label
                                                                                      title=""
                                                                                    >
                                                                                      <input
                                                                                        checked={false}
                                                                                        disabled={false}
                                                                                        id="domainpropertiesrow-required-1-2"
                                                                                        name="domainpropertiesrow-required"
                                                                                        onChange={[Function]}
                                                                                        type="checkbox"
                                                                                      />
                                                                                    </label>
                                                                                  </div>
                                                                                </Checkbox>
                                                                              </div>
                                                                            </div>
                                                                          </Col>
                                                                        </div>
                                                                      </div>
                                                                    </Col>
                                                                    <Col
                                                                      bsClass="col"
                                                                      className="domain-row-details-container"
                                                                      componentClass="div"
                                                                      xs={6}
                                                                    >
                                                                      <div
                                                                        className="domain-row-details-container col-xs-6"
                                                                      >
                                                                        <div
                                                                          className="domain-field-details"
                                                                          id="domainpropertiesrow-details-1-2"
                                                                        >
                                                                          New Field
                                                                        </div>
                                                                        <div
                                                                          className="domain-field-buttons"
                                                                        >
                                                                          <Memo()
                                                                            iconCls="domain-field-delete-icon"
                                                                            id="domainpropertiesrow-delete-1-2"
                                                                            onDelete={[Function]}
                                                                            title="Remove field"
                                                                          >
                                                                            <span
                                                                              className="field-icon"
                                                                              id="domainpropertiesrow-delete-1-2"
                                                                              onClick={[Function]}
                                                                              title="Remove field"
                                                                            >
                                                                              <span
                                                                                className="fa fa-times-circle domain-field-delete-icon"
                                                                              />
                                                                            </span>
                                                                          </Memo()>
                                                                        </div>
                                                                      </div>
                                                                    </Col>
                                                                  </div>
                                                                </div>
                                                              </Row>
                                                              <Collapse
                                                                appear={false}
                                                                dimension="height"
                                                                getDimensionValue={[Function]}
                                                                in={false}
                                                                mountOnEnter={false}
                                                                onExited={[Function]}
                                                                onExiting={[Function]}
                                                                timeout={300}
                                                                unmountOnExit={false}
                                                              >
                                                                <Transition
                                                                  appear={false}
                                                                  aria-expanded={null}
                                                                  enter={true}
                                                                  exit={true}
                                                                  in={false}
                                                                  mountOnEnter={false}
                                                                  onEnter={[Function]}
                                                                  onEntered={[Function]}
                                                                  onEntering={[Function]}
                                                                  onExit={[Function]}
                                                                  onExited={[Function]}
                                                                  onExiting={[Function]}
                                                                  timeout={300}
                                                                  unmountOnExit={false}
                                                                >
                                                                  <div
                                                                    aria-expanded={null}
                                                                    className="collapse"
                                                                  >
                                                                    <DomainRowExpandedOptions
                                                                      appPropertiesOnly={false}
                                                                      domainFormDisplayOptions={
                                                                        {
                                                                          "domainKindDisplayName": "assay design",
                                                                          "hideFilePropertyType": undefined,
                                                                          "hideInferFromFile": true,
                                                                          "hideStudyPropertyTypes": true,
                                                                          "textChoiceLockedForDomain": true,
                                                                        }
                                                                      }
                                                                      domainIndex={1}
                                                                      field={
                                                                        Immutable.Record {
                                                                          "conceptURI": undefined,
                                                                          "conditionalFormats": Immutable.List [],
                                                                          "defaultScale": undefined,
                                                                          "defaultValueType": undefined,
                                                                          "defaultValue": undefined,
                                                                          "defaultDisplayValue": undefined,
                                                                          "description": undefined,
                                                                          "dimension": undefined,
                                                                          "excludeFromShifting": false,
                                                                          "format": undefined,
                                                                          "hidden": false,
                                                                          "importAliases": undefined,
                                                                          "label": undefined,
                                                                          "lookupContainer": undefined,
                                                                          "lookupQuery": undefined,
                                                                          "lookupSchema": undefined,
                                                                          "lookupValidator": undefined,
                                                                          "measure": undefined,
                                                                          "mvEnabled": false,
                                                                          "name": "field3",
                                                                          "PHI": undefined,
                                                                          "propertyId": undefined,
                                                                          "propertyURI": undefined,
                                                                          "propertyValidators": Immutable.List [],
                                                                          "rangeValidators": Immutable.List [],
                                                                          "rangeURI": "xsd:dateTime",
                                                                          "regexValidators": Immutable.List [],
                                                                          "textChoiceValidator": undefined,
                                                                          "recommendedVariable": false,
                                                                          "required": false,
                                                                          "scale": 4000,
                                                                          "URL": undefined,
                                                                          "shownInDetailsView": true,
                                                                          "shownInInsertView": true,
                                                                          "shownInUpdateView": true,
                                                                          "visible": true,
                                                                          "dataType": Immutable.Record {
                                                                            "conceptURI": undefined,
                                                                            "display": "Date Time",
                                                                            "name": "dateTime",
                                                                            "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                                                                            "alternateRangeURI": "xsd:dateTime",
                                                                            "shortDisplay": undefined,
                                                                            "lookupSchema": undefined,
                                                                            "lookupQuery": undefined,
                                                                          },
                                                                          "lookupQueryValue": undefined,
                                                                          "lookupType": Immutable.Record {
                                                                            "conceptURI": undefined,
                                                                            "display": "Lookup",
                                                                            "name": "lookup",
                                                                            "rangeURI": "xsd:dateTime",
                                                                            "alternateRangeURI": undefined,
                                                                            "shortDisplay": undefined,
                                                                            "lookupSchema": undefined,
                                                                            "lookupQuery": undefined,
                                                                          },
                                                                          "original": {
                                                                            "conceptURI": undefined,
                                                                            "dataType": Immutable.Record {
                                                                              "conceptURI": undefined,
                                                                              "display": "Date Time",
                                                                              "name": "dateTime",
                                                                              "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                                                                              "alternateRangeURI": "xsd:dateTime",
                                                                              "shortDisplay": undefined,
                                                                              "lookupSchema": undefined,
                                                                              "lookupQuery": undefined,
                                                                            },
                                                                            "name": "field3",
                                                                            "rangeURI": undefined,
                                                                          },
                                                                          "updatedField": false,
                                                                          "isPrimaryKey": false,
                                                                          "lockType": "NotLocked",
                                                                          "wrappedColumnName": undefined,
                                                                          "disablePhiLevel": false,
                                                                          "lockExistingField": false,
                                                                          "sourceOntology": undefined,
                                                                          "conceptSubtree": undefined,
                                                                          "conceptLabelColumn": undefined,
                                                                          "conceptImportColumn": undefined,
                                                                          "principalConceptCode": undefined,
                                                                          "derivationDataScope": undefined,
                                                                          "selected": false,
                                                                          "scannable": false,
                                                                        }
                                                                      }
                                                                      getDomainFields={[Function]}
                                                                      index={2}
                                                                      onChange={[Function]}
                                                                      onMultiChange={[Function]}
                                                                      showingModal={[Function]}
                                                                      successBsStyle="success"
                                                                    >
                                                                      <div
                                                                        className="domain-row-container"
                                                                      >
                                                                        <div
                                                                          className="domain-row-container-expand-spacer"
                                                                        />
                                                                        <div
                                                                          className="domain-row-container-expanded"
                                                                        >
                                                                          <Col
                                                                            bsClass="col"
                                                                            componentClass="div"
                                                                            xs={12}
                                                                          >
                                                                            <div
                                                                              className="col-xs-12"
                                                                            >
                                                                              <DateTimeFieldOptions
                                                                                domainIndex={1}
                                                                                excludeFromShifting={false}
                                                                                index={2}
                                                                                label="Date and Time Options"
                                                                                lockType="NotLocked"
                                                                                onChange={[Function]}
                                                                              >
                                                                                <div>
                                                                                  <Row
                                                                                    bsClass="row"
                                                                                    componentClass="div"
                                                                                  >
                                                                                    <div
                                                                                      className="row"
                                                                                    >
                                                                                      <Col
                                                                                        bsClass="col"
                                                                                        componentClass="div"
                                                                                        xs={12}
                                                                                      >
                                                                                        <div
                                                                                          className="col-xs-12"
                                                                                        >
                                                                                          <SectionHeading
                                                                                            title="Date and Time Options"
                                                                                          >
                                                                                            <div
                                                                                              className="domain-field-section-heading"
                                                                                            >
                                                                                              Date and Time Options
                                                                                            </div>
                                                                                          </SectionHeading>
                                                                                        </div>
                                                                                      </Col>
                                                                                    </div>
                                                                                  </Row>
                                                                                  <Row
                                                                                    bsClass="row"
                                                                                    componentClass="div"
                                                                                  >
                                                                                    <div
                                                                                      className="row"
                                                                                    >
                                                                                      <Col
                                                                                        bsClass="col"
                                                                                        componentClass="div"
                                                                                        xs={3}
                                                                                      >
                                                                                        <div
                                                                                          className="col-xs-3"
                                                                                        >
                                                                                          <div
                                                                                            className="domain-field-label"
                                                                                          >
                                                                                            <DomainFieldLabel
                                                                                              helpTipBody={
                                                                                                <React.Fragment>
                                                                                                  <p>
                                                                                                    To control how a date or time value is displayed, provide a string format compatible with the Java
                                                                                                     
                                                                                                    <Memo
                                                                                                      urlSuffix="java/text/SimpleDateFormat.html"
                                                                                                    >
                                                                                                      SimpleDateFormat
                                                                                                    </Memo>
                                                                                                     class.
                                                                                                  </p>
                                                                                                  <p>
                                                                                                    Learn more about using 
                                                                                                    <HelpLink
                                                                                                      topic="dateFormats#date"
                                                                                                    >
                                                                                                      Date and Time formats
                                                                                                    </HelpLink>
                                                                                                     in LabKey.
                                                                                                  </p>
                                                                                                </React.Fragment>
                                                                                              }
                                                                                              label="Format for Dates"
                                                                                            >
                                                                                              Format for 
                                                                                              <span
                                                                                                className="domain-no-wrap"
                                                                                              >
                                                                                                Dates
                                                                                                <Component
                                                                                                  id="tooltip"
                                                                                                  title="Format for Dates"
                                                                                                >
                                                                                                  <span
                                                                                                    className="label-help-target"
                                                                                                    onMouseOut={[Function]}
                                                                                                    onMouseOver={[Function]}
                                                                                                  >
                                                                                                    <span
                                                                                                      className="label-help-icon fa fa-question-circle"
                                                                                                    />
                                                                                                    <Overlay
                                                                                                      animation={[Function]}
                                                                                                      placement="right"
                                                                                                      rootClose={false}
                                                                                                      show={false}
                                                                                                    >
                                                                                                      <Overlay
                                                                                                        placement="right"
                                                                                                        rootClose={false}
                                                                                                        show={false}
                                                                                                        transition={[Function]}
                                                                                                      />
                                                                                                    </Overlay>
                                                                                                  </span>
                                                                                                </Component>
                                                                                              </span>
                                                                                            </DomainFieldLabel>
                                                                                          </div>
                                                                                        </div>
                                                                                      </Col>
                                                                                      <Col
                                                                                        bsClass="col"
                                                                                        componentClass="div"
                                                                                        xs={9}
                                                                                      >
                                                                                        <div
                                                                                          className="col-xs-9"
                                                                                        />
                                                                                      </Col>
                                                                                    </div>
                                                                                  </Row>
                                                                                  <Row
                                                                                    bsClass="row"
                                                                                    componentClass="div"
                                                                                  >
                                                                                    <div
                                                                                      className="row"
                                                                                    >
                                                                                      <Col
                                                                                        bsClass="col"
                                                                                        componentClass="div"
                                                                                        xs={3}
                                                                                      >
                                                                                        <div
                                                                                          className="col-xs-3"
                                                                                        >
                                                                                          <FormControl
                                                                                            bsClass="form-control"
                                                                                            componentClass="input"
                                                                                            disabled={false}
                                                                                            id="domainpropertiesrow-format-1-2"
                                                                                            name="domainpropertiesrow-format"
                                                                                            onChange={[Function]}
                                                                                            type="text"
                                                                                            value=""
                                                                                          >
                                                                                            <input
                                                                                              className="form-control"
                                                                                              disabled={false}
                                                                                              id="domainpropertiesrow-format-1-2"
                                                                                              name="domainpropertiesrow-format"
                                                                                              onChange={[Function]}
                                                                                              type="text"
                                                                                              value=""
                                                                                            />
                                                                                          </FormControl>
                                                                                        </div>
                                                                                      </Col>
                                                                                      <Col
                                                                                        bsClass="col"
                                                                                        componentClass="div"
                                                                                        xs={9}
                                                                                      >
                                                                                        <div
                                                                                          className="col-xs-9"
                                                                                        />
                                                                                      </Col>
                                                                                    </div>
                                                                                  </Row>
                                                                                </div>
                                                                              </DateTimeFieldOptions>
                                                                            </div>
                                                                          </Col>
                                                                          <Col
                                                                            bsClass="col"
                                                                            componentClass="div"
                                                                            xs={12}
                                                                          >
                                                                            <div
                                                                              className="col-xs-12"
                                                                            >
                                                                              <NameAndLinkingOptions
                                                                                appPropertiesOnly={false}
                                                                                domainFormDisplayOptions={
                                                                                  {
                                                                                    "domainKindDisplayName": "assay design",
                                                                                    "hideFilePropertyType": undefined,
                                                                                    "hideInferFromFile": true,
                                                                                    "hideStudyPropertyTypes": true,
                                                                                    "textChoiceLockedForDomain": true,
                                                                                  }
                                                                                }
                                                                                domainIndex={1}
                                                                                field={
                                                                                  Immutable.Record {
                                                                                    "conceptURI": undefined,
                                                                                    "conditionalFormats": Immutable.List [],
                                                                                    "defaultScale": undefined,
                                                                                    "defaultValueType": undefined,
                                                                                    "defaultValue": undefined,
                                                                                    "defaultDisplayValue": undefined,
                                                                                    "description": undefined,
                                                                                    "dimension": undefined,
                                                                                    "excludeFromShifting": false,
                                                                                    "format": undefined,
                                                                                    "hidden": false,
                                                                                    "importAliases": undefined,
                                                                                    "label": undefined,
                                                                                    "lookupContainer": undefined,
                                                                                    "lookupQuery": undefined,
                                                                                    "lookupSchema": undefined,
                                                                                    "lookupValidator": undefined,
                                                                                    "measure": undefined,
                                                                                    "mvEnabled": false,
                                                                                    "name": "field3",
                                                                                    "PHI": undefined,
                                                                                    "propertyId": undefined,
                                                                                    "propertyURI": undefined,
                                                                                    "propertyValidators": Immutable.List [],
                                                                                    "rangeValidators": Immutable.List [],
                                                                                    "rangeURI": "xsd:dateTime",
                                                                                    "regexValidators": Immutable.List [],
                                                                                    "textChoiceValidator": undefined,
                                                                                    "recommendedVariable": false,
                                                                                    "required": false,
                                                                                    "scale": 4000,
                                                                                    "URL": undefined,
                                                                                    "shownInDetailsView": true,
                                                                                    "shownInInsertView": true,
                                                                                    "shownInUpdateView": true,
                                                                                    "visible": true,
                                                                                    "dataType": Immutable.Record {
                                                                                      "conceptURI": undefined,
                                                                                      "display": "Date Time",
                                                                                      "name": "dateTime",
                                                                                      "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                                                                                      "alternateRangeURI": "xsd:dateTime",
                                                                                      "shortDisplay": undefined,
                                                                                      "lookupSchema": undefined,
                                                                                      "lookupQuery": undefined,
                                                                                    },
                                                                                    "lookupQueryValue": undefined,
                                                                                    "lookupType": Immutable.Record {
                                                                                      "conceptURI": undefined,
                                                                                      "display": "Lookup",
                                                                                      "name": "lookup",
                                                                                      "rangeURI": "xsd:dateTime",
                                                                                      "alternateRangeURI": undefined,
                                                                                      "shortDisplay": undefined,
                                                                                      "lookupSchema": undefined,
                                                                                      "lookupQuery": undefined,
                                                                                    },
                                                                                    "original": {
                                                                                      "conceptURI": undefined,
                                                                                      "dataType": Immutable.Record {
                                                                                        "conceptURI": undefined,
                                                                                        "display": "Date Time",
                                                                                        "name": "dateTime",
                                                                                        "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                                                                                        "alternateRangeURI": "xsd:dateTime",
                                                                                        "shortDisplay": undefined,
                                                                                        "lookupSchema": undefined,
                                                                                        "lookupQuery": undefined,
                                                                                      },
                                                                                      "name": "field3",
                                                                                      "rangeURI": undefined,
                                                                                    },
                                                                                    "updatedField": false,
                                                                                    "isPrimaryKey": false,
                                                                                    "lockType": "NotLocked",
                                                                                    "wrappedColumnName": undefined,
                                                                                    "disablePhiLevel": false,
                                                                                    "lockExistingField": false,
                                                                                    "sourceOntology": undefined,
                                                                                    "conceptSubtree": undefined,
                                                                                    "conceptLabelColumn": undefined,
                                                                                    "conceptImportColumn": undefined,
                                                                                    "principalConceptCode": undefined,
                                                                                    "derivationDataScope": undefined,
                                                                                    "selected": false,
                                                                                    "scannable": false,
                                                                                  }
                                                                                }
                                                                                index={2}
                                                                                onChange={[Function]}
                                                                              >
                                                                                <div>
                                                                                  <Row
                                                                                    bsClass="row"
                                                                                    componentClass="div"
                                                                                  >
                                                                                    <div
                                                                                      className="row"
                                                                                    >
                                                                                      <Col
                                                                                        bsClass="col"
                                                                                        componentClass="div"
                                                                                        xs={12}
                                                                                      >
                                                                                        <div
                                                                                          className="col-xs-12"
                                                                                        >
                                                                                          <SectionHeading
                                                                                            cls="domain-field-section-hdr"
                                                                                            title="Name and Linking Options"
                                                                                          >
                                                                                            <div
                                                                                              className="domain-field-section-heading domain-field-section-hdr"
                                                                                            >
                                                                                              Name and Linking Options
                                                                                            </div>
                                                                                          </SectionHeading>
                                                                                        </div>
                                                                                      </Col>
                                                                                    </div>
                                                                                  </Row>
                                                                                  <Row
                                                                                    bsClass="row"
                                                                                    componentClass="div"
                                                                                  >
                                                                                    <div
                                                                                      className="row"
                                                                                    >
                                                                                      <Col
                                                                                        bsClass="col"
                                                                                        componentClass="div"
                                                                                        xs={5}
                                                                                      >
                                                                                        <div
                                                                                          className="col-xs-5"
                                                                                        >
                                                                                          <div
                                                                                            className="domain-field-label"
                                                                                          >
                                                                                            Description
                                                                                          </div>
                                                                                          <FormControl
                                                                                            bsClass="form-control"
                                                                                            className="form-control textarea-noresize"
                                                                                            componentClass="textarea"
                                                                                            disabled={false}
                                                                                            id="domainpropertiesrow-description-1-2"
                                                                                            name="domainpropertiesrow-description"
                                                                                            onChange={[Function]}
                                                                                            rows={4}
                                                                                            value=""
                                                                                          >
                                                                                            <textarea
                                                                                              className="form-control textarea-noresize form-control"
                                                                                              disabled={false}
                                                                                              id="domainpropertiesrow-description-1-2"
                                                                                              name="domainpropertiesrow-description"
                                                                                              onChange={[Function]}
                                                                                              rows={4}
                                                                                              value=""
                                                                                            />
                                                                                          </FormControl>
                                                                                        </div>
                                                                                      </Col>
                                                                                      <Col
                                                                                        bsClass="col"
                                                                                        componentClass="div"
                                                                                        xs={3}
                                                                                      >
                                                                                        <div
                                                                                          className="col-xs-3"
                                                                                        >
                                                                                          <div
                                                                                            className="domain-field-label"
                                                                                          >
                                                                                            Label
                                                                                          </div>
                                                                                          <FormControl
                                                                                            bsClass="form-control"
                                                                                            componentClass="input"
                                                                                            disabled={false}
                                                                                            id="domainpropertiesrow-label-1-2"
                                                                                            name="domainpropertiesrow-label"
                                                                                            onChange={[Function]}
                                                                                            type="text"
                                                                                            value=""
                                                                                          >
                                                                                            <input
                                                                                              className="form-control"
                                                                                              disabled={false}
                                                                                              id="domainpropertiesrow-label-1-2"
                                                                                              name="domainpropertiesrow-label"
                                                                                              onChange={[Function]}
                                                                                              type="text"
                                                                                              value=""
                                                                                            />
                                                                                          </FormControl>
                                                                                          <div
                                                                                            className="domain-field-label"
                                                                                          >
                                                                                            <DomainFieldLabel
                                                                                              helpTipBody={
                                                                                                <React.Fragment>
                                                                                                  Define alternate field names to be used when importing from a file.
                                                                                                  <br />
                                                                                                  <br />
                                                                                                  Multiple aliases may be separated by spaces or commas. To define an alias that contains spaces, use double-quotes (") around it.
                                                                                                </React.Fragment>
                                                                                              }
                                                                                              label="Import Aliases"
                                                                                            >
                                                                                              Import 
                                                                                              <span
                                                                                                className="domain-no-wrap"
                                                                                              >
                                                                                                Aliases
                                                                                                <Component
                                                                                                  id="tooltip"
                                                                                                  title="Import Aliases"
                                                                                                >
                                                                                                  <span
                                                                                                    className="label-help-target"
                                                                                                    onMouseOut={[Function]}
                                                                                                    onMouseOver={[Function]}
                                                                                                  >
                                                                                                    <span
                                                                                                      className="label-help-icon fa fa-question-circle"
                                                                                                    />
                                                                                                    <Overlay
                                                                                                      animation={[Function]}
                                                                                                      placement="right"
                                                                                                      rootClose={false}
                                                                                                      show={false}
                                                                                                    >
                                                                                                      <Overlay
                                                                                                        placement="right"
                                                                                                        rootClose={false}
                                                                                                        show={false}
                                                                                                        transition={[Function]}
                                                                                                      />
                                                                                                    </Overlay>
                                                                                                  </span>
                                                                                                </Component>
                                                                                              </span>
                                                                                            </DomainFieldLabel>
                                                                                          </div>
                                                                                          <FormControl
                                                                                            bsClass="form-control"
                                                                                            componentClass="input"
                                                                                            disabled={false}
                                                                                            id="domainpropertiesrow-importAliases-1-2"
                                                                                            name="domainpropertiesrow-importAliases"
                                                                                            onChange={[Function]}
                                                                                            type="text"
                                                                                            value=""
                                                                                          >
                                                                                            <input
                                                                                              className="form-control"
                                                                                              disabled={false}
                                                                                              id="domainpropertiesrow-importAliases-1-2"
                                                                                              name="domainpropertiesrow-importAliases"
                                                                                              onChange={[Function]}
                                                                                              type="text"
                                                                                              value=""
                                                                                            />
                                                                                          </FormControl>
                                                                                        </div>
                                                                                      </Col>
                                                                                      <Col
                                                                                        bsClass="col"
                                                                                        componentClass="div"
                                                                                        xs={4}
                                                                                      >
                                                                                        <div
                                                                                          className="col-xs-4"
                                                                                        >
                                                                                          <div
                                                                                            className="domain-field-label"
                                                                                          >
                                                                                            <DomainFieldLabel
                                                                                              helpTipBody={
                                                                                                <React.Fragment>
                                                                                                  Use this to change the display of the field value within a data grid into a link. Multiple formats are supported, which allows ways to easily substitute and link to other locations in LabKey.
                                                                                                  <br />
                                                                                                  <br />
                                                                                                  Learn more about using 
                                                                                                  <HelpLink
                                                                                                    topic="urlEncoding"
                                                                                                  >
                                                                                                    URL Formatting Options
                                                                                                  </HelpLink>
                                                                                                  .
                                                                                                </React.Fragment>
                                                                                              }
                                                                                              label="URL"
                                                                                            >
                                                                                              <span
                                                                                                className="domain-no-wrap"
                                                                                              >
                                                                                                URL
                                                                                                <Component
                                                                                                  id="tooltip"
                                                                                                  title="URL"
                                                                                                >
                                                                                                  <span
                                                                                                    className="label-help-target"
                                                                                                    onMouseOut={[Function]}
                                                                                                    onMouseOver={[Function]}
                                                                                                  >
                                                                                                    <span
                                                                                                      className="label-help-icon fa fa-question-circle"
                                                                                                    />
                                                                                                    <Overlay
                                                                                                      animation={[Function]}
                                                                                                      placement="right"
                                                                                                      rootClose={false}
                                                                                                      show={false}
                                                                                                    >
                                                                                                      <Overlay
                                                                                                        placement="right"
                                                                                                        rootClose={false}
                                                                                                        show={false}
                                                                                                        transition={[Function]}
                                                                                                      />
                                                                                                    </Overlay>
                                                                                                  </span>
                                                                                                </Component>
                                                                                              </span>
                                                                                            </DomainFieldLabel>
                                                                                          </div>
                                                                                          <FormControl
                                                                                            bsClass="form-control"
                                                                                            componentClass="input"
                                                                                            disabled={false}
                                                                                            id="domainpropertiesrow-URL-1-2"
                                                                                            name="domainpropertiesrow-URL"
                                                                                            onChange={[Function]}
                                                                                            type="text"
                                                                                            value=""
                                                                                          >
                                                                                            <input
                                                                                              className="form-control"
                                                                                              disabled={false}
                                                                                              id="domainpropertiesrow-URL-1-2"
                                                                                              name="domainpropertiesrow-URL"
                                                                                              onChange={[Function]}
                                                                                              type="text"
                                                                                              value=""
                                                                                            />
                                                                                          </FormControl>
                                                                                        </div>
                                                                                      </Col>
                                                                                    </div>
                                                                                  </Row>
                                                                                </div>
                                                                              </NameAndLinkingOptions>
                                                                            </div>
                                                                          </Col>
                                                                          <Col
                                                                            bsClass="col"
                                                                            componentClass="div"
                                                                            xs={12}
                                                                          >
                                                                            <div
                                                                              className="col-xs-12"
                                                                            >
                                                                              <ConditionalFormattingAndValidation
                                                                                domainFormDisplayOptions={
                                                                                  {
                                                                                    "domainKindDisplayName": "assay design",
                                                                                    "hideFilePropertyType": undefined,
                                                                                    "hideInferFromFile": true,
                                                                                    "hideStudyPropertyTypes": true,
                                                                                    "textChoiceLockedForDomain": true,
                                                                                  }
                                                                                }
                                                                                domainIndex={1}
                                                                                field={
                                                                                  Immutable.Record {
                                                                                    "conceptURI": undefined,
                                                                                    "conditionalFormats": Immutable.List [],
                                                                                    "defaultScale": undefined,
                                                                                    "defaultValueType": undefined,
                                                                                    "defaultValue": undefined,
                                                                                    "defaultDisplayValue": undefined,
                                                                                    "description": undefined,
                                                                                    "dimension": undefined,
                                                                                    "excludeFromShifting": false,
                                                                                    "format": undefined,
                                                                                    "hidden": false,
                                                                                    "importAliases": undefined,
                                                                                    "label": undefined,
                                                                                    "lookupContainer": undefined,
                                                                                    "lookupQuery": undefined,
                                                                                    "lookupSchema": undefined,
                                                                                    "lookupValidator": undefined,
                                                                                    "measure": undefined,
                                                                                    "mvEnabled": false,
                                                                                    "name": "field3",
                                                                                    "PHI": undefined,
                                                                                    "propertyId": undefined,
                                                                                    "propertyURI": undefined,
                                                                                    "propertyValidators": Immutable.List [],
                                                                                    "rangeValidators": Immutable.List [],
                                                                                    "rangeURI": "xsd:dateTime",
                                                                                    "regexValidators": Immutable.List [],
                                                                                    "textChoiceValidator": undefined,
                                                                                    "recommendedVariable": false,
                                                                                    "required": false,
                                                                                    "scale": 4000,
                                                                                    "URL": undefined,
                                                                                    "shownInDetailsView": true,
                                                                                    "shownInInsertView": true,
                                                                                    "shownInUpdateView": true,
                                                                                    "visible": true,
                                                                                    "dataType": Immutable.Record {
                                                                                      "conceptURI": undefined,
                                                                                      "display": "Date Time",
                                                                                      "name": "dateTime",
                                                                                      "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                                                                                      "alternateRangeURI": "xsd:dateTime",
                                                                                      "shortDisplay": undefined,
                                                                                      "lookupSchema": undefined,
                                                                                      "lookupQuery": undefined,
                                                                                    },
                                                                                    "lookupQueryValue": undefined,
                                                                                    "lookupType": Immutable.Record {
                                                                                      "conceptURI": undefined,
                                                                                      "display": "Lookup",
                                                                                      "name": "lookup",
                                                                                      "rangeURI": "xsd:dateTime",
                                                                                      "alternateRangeURI": undefined,
                                                                                      "shortDisplay": undefined,
                                                                                      "lookupSchema": undefined,
                                                                                      "lookupQuery": undefined,
                                                                                    },
                                                                                    "original": {
                                                                                      "conceptURI": undefined,
                                                                                      "dataType": Immutable.Record {
                                                                                        "conceptURI": undefined,
                                                                                        "display": "Date Time",
                                                                                        "name": "dateTime",
                                                                                        "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                                                                                        "alternateRangeURI": "xsd:dateTime",
                                                                                        "shortDisplay": undefined,
                                                                                        "lookupSchema": undefined,
                                                                                        "lookupQuery": undefined,
                                                                                      },
                                                                                      "name": "field3",
                                                                                      "rangeURI": undefined,
                                                                                    },
                                                                                    "updatedField": false,
                                                                                    "isPrimaryKey": false,
                                                                                    "lockType": "NotLocked",
                                                                                    "wrappedColumnName": undefined,
                                                                                    "disablePhiLevel": false,
                                                                                    "lockExistingField": false,
                                                                                    "sourceOntology": undefined,
                                                                                    "conceptSubtree": undefined,
                                                                                    "conceptLabelColumn": undefined,
                                                                                    "conceptImportColumn": undefined,
                                                                                    "principalConceptCode": undefined,
                                                                                    "derivationDataScope": undefined,
                                                                                    "selected": false,
                                                                                    "scannable": false,
                                                                                  }
                                                                                }
                                                                                index={2}
                                                                                onChange={[Function]}
                                                                                showingModal={[Function]}
                                                                                successBsStyle="success"
                                                                              >
                                                                                <div>
                                                                                  <Row
                                                                                    bsClass="row"
                                                                                    componentClass="div"
                                                                                  >
                                                                                    <div
                                                                                      className="row"
                                                                                    >
                                                                                      <Col
                                                                                        bsClass="col"
                                                                                        componentClass="div"
                                                                                        xs={12}
                                                                                      >
                                                                                        <div
                                                                                          className="col-xs-12"
                                                                                        >
                                                                                          <SectionHeading
                                                                                            cls="domain-field-section-hdr"
                                                                                            title="Conditional Formatting and Validation Options"
                                                                                          >
                                                                                            <div
                                                                                              className="domain-field-section-heading domain-field-section-hdr"
                                                                                            >
                                                                                              Conditional Formatting and Validation Options
                                                                                            </div>
                                                                                          </SectionHeading>
                                                                                        </div>
                                                                                      </Col>
                                                                                    </div>
                                                                                  </Row>
                                                                                  <Row
                                                                                    bsClass="row"
                                                                                    componentClass="div"
                                                                                  >
                                                                                    <div
                                                                                      className="row"
                                                                                    >
                                                                                      <Col
                                                                                        bsClass="col"
                                                                                        componentClass="div"
                                                                                        xs={12}
                                                                                      >
                                                                                        <div
                                                                                          className="col-xs-12"
                                                                                        >
                                                                                          <div
                                                                                            className="domain-validation-group"
                                                                                          >
                                                                                            <div
                                                                                              className="domain-field-label domain-no-wrap"
                                                                                            >
                                                                                              <DomainFieldLabel
                                                                                                helpTipBody={<ConditionalFormatHelpText />}
                                                                                                label="Create Conditional Format Criteria"
                                                                                              >
                                                                                                Create Conditional Format 
                                                                                                <span
                                                                                                  className="domain-no-wrap"
                                                                                                >
                                                                                                  Criteria
                                                                                                  <Component
                                                                                                    id="tooltip"
                                                                                                    title="Create Conditional Format Criteria"
                                                                                                  >
                                                                                                    <span
                                                                                                      className="label-help-target"
                                                                                                      onMouseOut={[Function]}
                                                                                                      onMouseOver={[Function]}
                                                                                                    >
                                                                                                      <span
                                                                                                        className="label-help-icon fa fa-question-circle"
                                                                                                      />
                                                                                                      <Overlay
                                                                                                        animation={[Function]}
                                                                                                        placement="right"
                                                                                                        rootClose={false}
                                                                                                        show={false}
                                                                                                      >
                                                                                                        <Overlay
                                                                                                          placement="right"
                                                                                                          rootClose={false}
                                                                                                          show={false}
                                                                                                          transition={[Function]}
                                                                                                        />
                                                                                                      </Overlay>
                                                                                                    </span>
                                                                                                  </Component>
                                                                                                </span>
                                                                                              </DomainFieldLabel>
                                                                                            </div>
                                                                                            <div>
                                                                                              <Button
                                                                                                active={false}
                                                                                                block={false}
                                                                                                bsClass="btn"
                                                                                                bsStyle="default"
                                                                                                className="domain-validation-button"
                                                                                                disabled={false}
                                                                                                id="domainpropertiesrow-conditionalFormat-1-2"
                                                                                                name="domainpropertiesrow-conditionalFormat"
                                                                                                onClick={[Function]}
                                                                                              >
                                                                                                <button
                                                                                                  className="domain-validation-button btn btn-default"
                                                                                                  disabled={false}
                                                                                                  id="domainpropertiesrow-conditionalFormat-1-2"
                                                                                                  name="domainpropertiesrow-conditionalFormat"
                                                                                                  onClick={[Function]}
                                                                                                  type="button"
                                                                                                >
                                                                                                  Add Format
                                                                                                </button>
                                                                                              </Button>
                                                                                              <span
                                                                                                className="domain-text-label"
                                                                                              >
                                                                                                None Set
                                                                                              </span>
                                                                                            </div>
                                                                                          </div>
                                                                                          <div
                                                                                            className=""
                                                                                          >
                                                                                            <div
                                                                                              className="domain-field-label domain-no-wrap"
                                                                                            >
                                                                                              <DomainFieldLabel
                                                                                                helpTipBody={<RangeValidatorHelpText />}
                                                                                                label="Create Range Validator"
                                                                                              >
                                                                                                Create Range 
                                                                                                <span
                                                                                                  className="domain-no-wrap"
                                                                                                >
                                                                                                  Validator
                                                                                                  <Component
                                                                                                    id="tooltip"
                                                                                                    title="Create Range Validator"
                                                                                                  >
                                                                                                    <span
                                                                                                      className="label-help-target"
                                                                                                      onMouseOut={[Function]}
                                                                                                      onMouseOver={[Function]}
                                                                                                    >
                                                                                                      <span
                                                                                                        className="label-help-icon fa fa-question-circle"
                                                                                                      />
                                                                                                      <Overlay
                                                                                                        animation={[Function]}
                                                                                                        placement="right"
                                                                                                        rootClose={false}
                                                                                                        show={false}
                                                                                                      >
                                                                                                        <Overlay
                                                                                                          placement="right"
                                                                                                          rootClose={false}
                                                                                                          show={false}
                                                                                                          transition={[Function]}
                                                                                                        />
                                                                                                      </Overlay>
                                                                                                    </span>
                                                                                                  </Component>
                                                                                                </span>
                                                                                              </DomainFieldLabel>
                                                                                            </div>
                                                                                            <div>
                                                                                              <Button
                                                                                                active={false}
                                                                                                block={false}
                                                                                                bsClass="btn"
                                                                                                bsStyle="default"
                                                                                                className="domain-validation-button"
                                                                                                disabled={false}
                                                                                                id="domainpropertiesrow-rangeValidator-1-2"
                                                                                                name="domainpropertiesrow-rangeValidator"
                                                                                                onClick={[Function]}
                                                                                              >
                                                                                                <button
                                                                                                  className="domain-validation-button btn btn-default"
                                                                                                  disabled={false}
                                                                                                  id="domainpropertiesrow-rangeValidator-1-2"
                                                                                                  name="domainpropertiesrow-rangeValidator"
                                                                                                  onClick={[Function]}
                                                                                                  type="button"
                                                                                                >
                                                                                                  Add Range
                                                                                                </button>
                                                                                              </Button>
                                                                                              <span
                                                                                                className="domain-text-label"
                                                                                              >
                                                                                                None Set
                                                                                              </span>
                                                                                            </div>
                                                                                          </div>
                                                                                        </div>
                                                                                      </Col>
                                                                                    </div>
                                                                                  </Row>
                                                                                </div>
                                                                              </ConditionalFormattingAndValidation>
                                                                            </div>
                                                                          </Col>
                                                                        </div>
                                                                      </div>
                                                                    </DomainRowExpandedOptions>
                                                                  </div>
                                                                </Transition>
                                                              </Collapse>
                                                            </div>
                                                          </Draggable>
                                                        </Connect(Draggable)>
                                                      </PrivateDraggable>
                                                    </PublicDraggable>
                                                  </DomainRow>
                                                  <AnimateInOut
                                                    on={null}
                                                    shouldAnimate={false}
                                                  />
                                                </form>
                                              </Form>
                                            </div>
                                          </Droppable>
                                        </Connect(Droppable)>
                                      </Provider>
                                    </App>
                                  </ErrorBoundary>
                                </DragDropContext>
                                <Row
                                  bsClass="row"
                                  className="domain-add-field-row"
                                  componentClass="div"
                                >
                                  <div
                                    className="domain-add-field-row row"
                                  >
                                    <Col
                                      bsClass="col"
                                      componentClass="div"
                                      xs={12}
                                    >
                                      <div
                                        className="col-xs-12"
                                      >
                                        <AddEntityButton
                                          buttonClass="domain-form-add-btn"
                                          containerClass="pull-right"
                                          entity="Field"
                                          onClick={[Function]}
                                        >
                                          <ActionButton
                                            buttonClass="domain-form-add-btn"
                                            containerClass="pull-right"
                                            helperTitle="More Info"
                                            onClick={[Function]}
                                          >
                                            <div
                                              className="pull-right"
                                            >
                                              <div
                                                className="domain-form-add-btn"
                                              >
                                                <span
                                                  className="container--action-button btn btn-default"
                                                  onClick={[Function]}
                                                >
                                                  <i
                                                    className="fa fa-plus-circle container--addition-icon"
                                                  />
                                                   Add 
                                                  Field
                                                </span>
                                              </div>
                                            </div>
                                          </ActionButton>
                                        </AddEntityButton>
                                      </div>
                                    </Col>
                                  </div>
                                </Row>
                              </div>
                            </div>
                          </Transition>
                        </Collapse>
                      </PanelCollapse>
                    </PanelBody>
                  </div>
                </Panel>
              </Uncontrolled(Panel)>
            </ForwardRef>
          </DomainFormImpl>
        </LookupProvider>
      </DomainForm>
      <div
        className="domain-form-panel domain-designer-buttons"
      >
        <Button
          active={false}
          block={false}
          bsClass="btn"
          bsStyle="default"
          disabled={false}
          onClick={[MockFunction]}
        >
          <button
            className="btn btn-default"
            disabled={false}
            onClick={[MockFunction]}
            type="button"
          >
            Cancel
          </button>
        </Button>
        <Button
          active={false}
          block={false}
          bsClass="btn"
          bsStyle="success"
          className="pull-right"
          disabled={false}
          onClick={[Function]}
        >
          <button
            className="pull-right btn btn-success"
            disabled={false}
            onClick={[Function]}
            type="button"
          >
            Save
          </button>
        </Button>
      </div>
    </BaseDomainDesigner>
  </AssayDesignerPanelsImpl>
</ComponentWithBaseDomainDesigner>
`;

exports[`AssayDesignerPanels initModel 1`] = `
<ComponentWithBaseDomainDesigner
  domainFormDisplayOptions={
    {
      "hideStudyPropertyTypes": true,
    }
  }
  initModel={
    Immutable.Record {
      "allowBackgroundUpload": true,
      "allowEditableResults": true,
      "allowQCStates": false,
      "allowTransformationScript": false,
      "allowPlateMetadata": false,
      "autoCopyTargetContainer": undefined,
      "autoCopyTargetContainerId": undefined,
      "autoLinkCategory": undefined,
      "availableDetectionMethods": undefined,
      "availableMetadataInputFormats": undefined,
      "availablePlateTemplates": undefined,
      "backgroundUpload": true,
      "description": "My assay protocol for you all to use.",
      "domains": Immutable.List [
        Immutable.Record {
          "name": "Batch Fields",
          "container": undefined,
          "description": undefined,
          "domainURI": undefined,
          "domainId": null,
          "allowFileLinkProperties": false,
          "allowAttachmentProperties": false,
          "allowFlagProperties": true,
          "allowSampleSubjectProperties": true,
          "allowTextChoiceProperties": true,
          "allowTimepointProperties": false,
          "showDefaultValueSettings": false,
          "defaultDefaultValueType": undefined,
          "defaultValueOptions": Immutable.List [],
          "fields": Immutable.List [],
          "indices": Immutable.List [],
          "domainException": undefined,
          "mandatoryFieldNames": Immutable.List [],
          "reservedFieldNames": Immutable.List [],
          "newDesignFields": undefined,
          "instructions": undefined,
          "domainKindName": undefined,
          "schemaName": undefined,
          "queryName": undefined,
        },
        Immutable.Record {
          "name": "Sample Fields",
          "container": undefined,
          "description": undefined,
          "domainURI": undefined,
          "domainId": null,
          "allowFileLinkProperties": false,
          "allowAttachmentProperties": false,
          "allowFlagProperties": true,
          "allowSampleSubjectProperties": true,
          "allowTextChoiceProperties": true,
          "allowTimepointProperties": false,
          "showDefaultValueSettings": false,
          "defaultDefaultValueType": undefined,
          "defaultValueOptions": Immutable.List [],
          "fields": Immutable.List [
            Immutable.Record {
              "conceptURI": undefined,
              "conditionalFormats": Immutable.List [],
              "defaultScale": undefined,
              "defaultValueType": undefined,
              "defaultValue": undefined,
              "defaultDisplayValue": undefined,
              "description": undefined,
              "dimension": undefined,
              "excludeFromShifting": false,
              "format": undefined,
              "hidden": false,
              "importAliases": undefined,
              "label": undefined,
              "lookupContainer": undefined,
              "lookupQuery": undefined,
              "lookupSchema": undefined,
              "lookupValidator": undefined,
              "measure": undefined,
              "mvEnabled": false,
              "name": "field1",
              "PHI": undefined,
              "propertyId": undefined,
              "propertyURI": undefined,
              "propertyValidators": Immutable.List [],
              "rangeValidators": Immutable.List [],
              "rangeURI": "xsd:string",
              "regexValidators": Immutable.List [],
              "textChoiceValidator": undefined,
              "recommendedVariable": false,
              "required": false,
              "scale": 4000,
              "URL": undefined,
              "shownInDetailsView": true,
              "shownInInsertView": true,
              "shownInUpdateView": true,
              "visible": true,
              "dataType": Immutable.Record {
                "conceptURI": undefined,
                "display": "Text",
                "name": "string",
                "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                "alternateRangeURI": "xsd:string",
                "shortDisplay": "String",
                "lookupSchema": undefined,
                "lookupQuery": undefined,
              },
              "lookupQueryValue": undefined,
              "lookupType": Immutable.Record {
                "conceptURI": undefined,
                "display": "Lookup",
                "name": "lookup",
                "rangeURI": "xsd:string",
                "alternateRangeURI": undefined,
                "shortDisplay": undefined,
                "lookupSchema": undefined,
                "lookupQuery": undefined,
              },
              "original": {
                "conceptURI": undefined,
                "dataType": Immutable.Record {
                  "conceptURI": undefined,
                  "display": "Text",
                  "name": "string",
                  "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                  "alternateRangeURI": "xsd:string",
                  "shortDisplay": "String",
                  "lookupSchema": undefined,
                  "lookupQuery": undefined,
                },
                "name": "field1",
                "rangeURI": undefined,
              },
              "updatedField": false,
              "isPrimaryKey": false,
              "lockType": "NotLocked",
              "wrappedColumnName": undefined,
              "disablePhiLevel": false,
              "lockExistingField": false,
              "sourceOntology": undefined,
              "conceptSubtree": undefined,
              "conceptLabelColumn": undefined,
              "conceptImportColumn": undefined,
              "principalConceptCode": undefined,
              "derivationDataScope": undefined,
              "selected": false,
              "scannable": false,
            },
            Immutable.Record {
              "conceptURI": undefined,
              "conditionalFormats": Immutable.List [],
              "defaultScale": undefined,
              "defaultValueType": undefined,
              "defaultValue": undefined,
              "defaultDisplayValue": undefined,
              "description": undefined,
              "dimension": undefined,
              "excludeFromShifting": false,
              "format": undefined,
              "hidden": false,
              "importAliases": undefined,
              "label": undefined,
              "lookupContainer": undefined,
              "lookupQuery": undefined,
              "lookupSchema": undefined,
              "lookupValidator": undefined,
              "measure": undefined,
              "mvEnabled": false,
              "name": "field2",
              "PHI": undefined,
              "propertyId": undefined,
              "propertyURI": undefined,
              "propertyValidators": Immutable.List [],
              "rangeValidators": Immutable.List [],
              "rangeURI": "xsd:int",
              "regexValidators": Immutable.List [],
              "textChoiceValidator": undefined,
              "recommendedVariable": false,
              "required": false,
              "scale": 4000,
              "URL": undefined,
              "shownInDetailsView": true,
              "shownInInsertView": true,
              "shownInUpdateView": true,
              "visible": true,
              "dataType": Immutable.Record {
                "conceptURI": undefined,
                "display": "Integer",
                "name": "int",
                "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                "alternateRangeURI": "xsd:int",
                "shortDisplay": undefined,
                "lookupSchema": undefined,
                "lookupQuery": undefined,
              },
              "lookupQueryValue": undefined,
              "lookupType": Immutable.Record {
                "conceptURI": undefined,
                "display": "Lookup",
                "name": "lookup",
                "rangeURI": "xsd:int",
                "alternateRangeURI": undefined,
                "shortDisplay": undefined,
                "lookupSchema": undefined,
                "lookupQuery": undefined,
              },
              "original": {
                "conceptURI": undefined,
                "dataType": Immutable.Record {
                  "conceptURI": undefined,
                  "display": "Integer",
                  "name": "int",
                  "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                  "alternateRangeURI": "xsd:int",
                  "shortDisplay": undefined,
                  "lookupSchema": undefined,
                  "lookupQuery": undefined,
                },
                "name": "field2",
                "rangeURI": undefined,
              },
              "updatedField": false,
              "isPrimaryKey": false,
              "lockType": "NotLocked",
              "wrappedColumnName": undefined,
              "disablePhiLevel": false,
              "lockExistingField": false,
              "sourceOntology": undefined,
              "conceptSubtree": undefined,
              "conceptLabelColumn": undefined,
              "conceptImportColumn": undefined,
              "principalConceptCode": undefined,
              "derivationDataScope": undefined,
              "selected": false,
              "scannable": false,
            },
            Immutable.Record {
              "conceptURI": undefined,
              "conditionalFormats": Immutable.List [],
              "defaultScale": undefined,
              "defaultValueType": undefined,
              "defaultValue": undefined,
              "defaultDisplayValue": undefined,
              "description": undefined,
              "dimension": undefined,
              "excludeFromShifting": false,
              "format": undefined,
              "hidden": false,
              "importAliases": undefined,
              "label": undefined,
              "lookupContainer": undefined,
              "lookupQuery": undefined,
              "lookupSchema": undefined,
              "lookupValidator": undefined,
              "measure": undefined,
              "mvEnabled": false,
              "name": "field3",
              "PHI": undefined,
              "propertyId": undefined,
              "propertyURI": undefined,
              "propertyValidators": Immutable.List [],
              "rangeValidators": Immutable.List [],
              "rangeURI": "xsd:dateTime",
              "regexValidators": Immutable.List [],
              "textChoiceValidator": undefined,
              "recommendedVariable": false,
              "required": false,
              "scale": 4000,
              "URL": undefined,
              "shownInDetailsView": true,
              "shownInInsertView": true,
              "shownInUpdateView": true,
              "visible": true,
              "dataType": Immutable.Record {
                "conceptURI": undefined,
                "display": "Date Time",
                "name": "dateTime",
                "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                "alternateRangeURI": "xsd:dateTime",
                "shortDisplay": undefined,
                "lookupSchema": undefined,
                "lookupQuery": undefined,
              },
              "lookupQueryValue": undefined,
              "lookupType": Immutable.Record {
                "conceptURI": undefined,
                "display": "Lookup",
                "name": "lookup",
                "rangeURI": "xsd:dateTime",
                "alternateRangeURI": undefined,
                "shortDisplay": undefined,
                "lookupSchema": undefined,
                "lookupQuery": undefined,
              },
              "original": {
                "conceptURI": undefined,
                "dataType": Immutable.Record {
                  "conceptURI": undefined,
                  "display": "Date Time",
                  "name": "dateTime",
                  "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                  "alternateRangeURI": "xsd:dateTime",
                  "shortDisplay": undefined,
                  "lookupSchema": undefined,
                  "lookupQuery": undefined,
                },
                "name": "field3",
                "rangeURI": undefined,
              },
              "updatedField": false,
              "isPrimaryKey": false,
              "lockType": "NotLocked",
              "wrappedColumnName": undefined,
              "disablePhiLevel": false,
              "lockExistingField": false,
              "sourceOntology": undefined,
              "conceptSubtree": undefined,
              "conceptLabelColumn": undefined,
              "conceptImportColumn": undefined,
              "principalConceptCode": undefined,
              "derivationDataScope": undefined,
              "selected": false,
              "scannable": false,
            },
          ],
          "indices": Immutable.List [],
          "domainException": undefined,
          "mandatoryFieldNames": Immutable.List [],
          "reservedFieldNames": Immutable.List [],
          "newDesignFields": undefined,
          "instructions": undefined,
          "domainKindName": undefined,
          "schemaName": undefined,
          "queryName": undefined,
        },
      ],
      "editableResults": true,
      "editableRuns": true,
      "exception": undefined,
      "metadataInputFormatHelp": undefined,
      "moduleTransformScripts": undefined,
      "name": "Test Assay Protocol",
      "plateMetadata": undefined,
      "protocolId": 1,
      "protocolParameters": undefined,
      "protocolTransformScripts": undefined,
      "providerName": undefined,
      "saveScriptFiles": false,
      "selectedDetectionMethod": undefined,
      "selectedMetadataInputFormat": undefined,
      "selectedPlateTemplate": undefined,
      "status": "Active",
      "qcEnabled": undefined,
    }
  }
  onCancel={[MockFunction]}
  onComplete={[MockFunction]}
  testMode={true}
>
  <AssayDesignerPanelsImpl
    currentPanelIndex={0}
    domainFormDisplayOptions={
      {
        "hideStudyPropertyTypes": true,
      }
    }
    firstState={true}
    initModel={
      Immutable.Record {
        "allowBackgroundUpload": true,
        "allowEditableResults": true,
        "allowQCStates": false,
        "allowTransformationScript": false,
        "allowPlateMetadata": false,
        "autoCopyTargetContainer": undefined,
        "autoCopyTargetContainerId": undefined,
        "autoLinkCategory": undefined,
        "availableDetectionMethods": undefined,
        "availableMetadataInputFormats": undefined,
        "availablePlateTemplates": undefined,
        "backgroundUpload": true,
        "description": "My assay protocol for you all to use.",
        "domains": Immutable.List [
          Immutable.Record {
            "name": "Batch Fields",
            "container": undefined,
            "description": undefined,
            "domainURI": undefined,
            "domainId": null,
            "allowFileLinkProperties": false,
            "allowAttachmentProperties": false,
            "allowFlagProperties": true,
            "allowSampleSubjectProperties": true,
            "allowTextChoiceProperties": true,
            "allowTimepointProperties": false,
            "showDefaultValueSettings": false,
            "defaultDefaultValueType": undefined,
            "defaultValueOptions": Immutable.List [],
            "fields": Immutable.List [],
            "indices": Immutable.List [],
            "domainException": undefined,
            "mandatoryFieldNames": Immutable.List [],
            "reservedFieldNames": Immutable.List [],
            "newDesignFields": undefined,
            "instructions": undefined,
            "domainKindName": undefined,
            "schemaName": undefined,
            "queryName": undefined,
          },
          Immutable.Record {
            "name": "Sample Fields",
            "container": undefined,
            "description": undefined,
            "domainURI": undefined,
            "domainId": null,
            "allowFileLinkProperties": false,
            "allowAttachmentProperties": false,
            "allowFlagProperties": true,
            "allowSampleSubjectProperties": true,
            "allowTextChoiceProperties": true,
            "allowTimepointProperties": false,
            "showDefaultValueSettings": false,
            "defaultDefaultValueType": undefined,
            "defaultValueOptions": Immutable.List [],
            "fields": Immutable.List [
              Immutable.Record {
                "conceptURI": undefined,
                "conditionalFormats": Immutable.List [],
                "defaultScale": undefined,
                "defaultValueType": undefined,
                "defaultValue": undefined,
                "defaultDisplayValue": undefined,
                "description": undefined,
                "dimension": undefined,
                "excludeFromShifting": false,
                "format": undefined,
                "hidden": false,
                "importAliases": undefined,
                "label": undefined,
                "lookupContainer": undefined,
                "lookupQuery": undefined,
                "lookupSchema": undefined,
                "lookupValidator": undefined,
                "measure": undefined,
                "mvEnabled": false,
                "name": "field1",
                "PHI": undefined,
                "propertyId": undefined,
                "propertyURI": undefined,
                "propertyValidators": Immutable.List [],
                "rangeValidators": Immutable.List [],
                "rangeURI": "xsd:string",
                "regexValidators": Immutable.List [],
                "textChoiceValidator": undefined,
                "recommendedVariable": false,
                "required": false,
                "scale": 4000,
                "URL": undefined,
                "shownInDetailsView": true,
                "shownInInsertView": true,
                "shownInUpdateView": true,
                "visible": true,
                "dataType": Immutable.Record {
                  "conceptURI": undefined,
                  "display": "Text",
                  "name": "string",
                  "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                  "alternateRangeURI": "xsd:string",
                  "shortDisplay": "String",
                  "lookupSchema": undefined,
                  "lookupQuery": undefined,
                },
                "lookupQueryValue": undefined,
                "lookupType": Immutable.Record {
                  "conceptURI": undefined,
                  "display": "Lookup",
                  "name": "lookup",
                  "rangeURI": "xsd:string",
                  "alternateRangeURI": undefined,
                  "shortDisplay": undefined,
                  "lookupSchema": undefined,
                  "lookupQuery": undefined,
                },
                "original": {
                  "conceptURI": undefined,
                  "dataType": Immutable.Record {
                    "conceptURI": undefined,
                    "display": "Text",
                    "name": "string",
                    "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                    "alternateRangeURI": "xsd:string",
                    "shortDisplay": "String",
                    "lookupSchema": undefined,
                    "lookupQuery": undefined,
                  },
                  "name": "field1",
                  "rangeURI": undefined,
                },
                "updatedField": false,
                "isPrimaryKey": false,
                "lockType": "NotLocked",
                "wrappedColumnName": undefined,
                "disablePhiLevel": false,
                "lockExistingField": false,
                "sourceOntology": undefined,
                "conceptSubtree": undefined,
                "conceptLabelColumn": undefined,
                "conceptImportColumn": undefined,
                "principalConceptCode": undefined,
                "derivationDataScope": undefined,
                "selected": false,
                "scannable": false,
              },
              Immutable.Record {
                "conceptURI": undefined,
                "conditionalFormats": Immutable.List [],
                "defaultScale": undefined,
                "defaultValueType": undefined,
                "defaultValue": undefined,
                "defaultDisplayValue": undefined,
                "description": undefined,
                "dimension": undefined,
                "excludeFromShifting": false,
                "format": undefined,
                "hidden": false,
                "importAliases": undefined,
                "label": undefined,
                "lookupContainer": undefined,
                "lookupQuery": undefined,
                "lookupSchema": undefined,
                "lookupValidator": undefined,
                "measure": undefined,
                "mvEnabled": false,
                "name": "field2",
                "PHI": undefined,
                "propertyId": undefined,
                "propertyURI": undefined,
                "propertyValidators": Immutable.List [],
                "rangeValidators": Immutable.List [],
                "rangeURI": "xsd:int",
                "regexValidators": Immutable.List [],
                "textChoiceValidator": undefined,
                "recommendedVariable": false,
                "required": false,
                "scale": 4000,
                "URL": undefined,
                "shownInDetailsView": true,
                "shownInInsertView": true,
                "shownInUpdateView": true,
                "visible": true,
                "dataType": Immutable.Record {
                  "conceptURI": undefined,
                  "display": "Integer",
                  "name": "int",
                  "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                  "alternateRangeURI": "xsd:int",
                  "shortDisplay": undefined,
                  "lookupSchema": undefined,
                  "lookupQuery": undefined,
                },
                "lookupQueryValue": undefined,
                "lookupType": Immutable.Record {
                  "conceptURI": undefined,
                  "display": "Lookup",
                  "name": "lookup",
                  "rangeURI": "xsd:int",
                  "alternateRangeURI": undefined,
                  "shortDisplay": undefined,
                  "lookupSchema": undefined,
                  "lookupQuery": undefined,
                },
                "original": {
                  "conceptURI": undefined,
                  "dataType": Immutable.Record {
                    "conceptURI": undefined,
                    "display": "Integer",
                    "name": "int",
                    "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                    "alternateRangeURI": "xsd:int",
                    "shortDisplay": undefined,
                    "lookupSchema": undefined,
                    "lookupQuery": undefined,
                  },
                  "name": "field2",
                  "rangeURI": undefined,
                },
                "updatedField": false,
                "isPrimaryKey": false,
                "lockType": "NotLocked",
                "wrappedColumnName": undefined,
                "disablePhiLevel": false,
                "lockExistingField": false,
                "sourceOntology": undefined,
                "conceptSubtree": undefined,
                "conceptLabelColumn": undefined,
                "conceptImportColumn": undefined,
                "principalConceptCode": undefined,
                "derivationDataScope": undefined,
                "selected": false,
                "scannable": false,
              },
              Immutable.Record {
                "conceptURI": undefined,
                "conditionalFormats": Immutable.List [],
                "defaultScale": undefined,
                "defaultValueType": undefined,
                "defaultValue": undefined,
                "defaultDisplayValue": undefined,
                "description": undefined,
                "dimension": undefined,
                "excludeFromShifting": false,
                "format": undefined,
                "hidden": false,
                "importAliases": undefined,
                "label": undefined,
                "lookupContainer": undefined,
                "lookupQuery": undefined,
                "lookupSchema": undefined,
                "lookupValidator": undefined,
                "measure": undefined,
                "mvEnabled": false,
                "name": "field3",
                "PHI": undefined,
                "propertyId": undefined,
                "propertyURI": undefined,
                "propertyValidators": Immutable.List [],
                "rangeValidators": Immutable.List [],
                "rangeURI": "xsd:dateTime",
                "regexValidators": Immutable.List [],
                "textChoiceValidator": undefined,
                "recommendedVariable": false,
                "required": false,
                "scale": 4000,
                "URL": undefined,
                "shownInDetailsView": true,
                "shownInInsertView": true,
                "shownInUpdateView": true,
                "visible": true,
                "dataType": Immutable.Record {
                  "conceptURI": undefined,
                  "display": "Date Time",
                  "name": "dateTime",
                  "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                  "alternateRangeURI": "xsd:dateTime",
                  "shortDisplay": undefined,
                  "lookupSchema": undefined,
                  "lookupQuery": undefined,
                },
                "lookupQueryValue": undefined,
                "lookupType": Immutable.Record {
                  "conceptURI": undefined,
                  "display": "Lookup",
                  "name": "lookup",
                  "rangeURI": "xsd:dateTime",
                  "alternateRangeURI": undefined,
                  "shortDisplay": undefined,
                  "lookupSchema": undefined,
                  "lookupQuery": undefined,
                },
                "original": {
                  "conceptURI": undefined,
                  "dataType": Immutable.Record {
                    "conceptURI": undefined,
                    "display": "Date Time",
                    "name": "dateTime",
                    "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                    "alternateRangeURI": "xsd:dateTime",
                    "shortDisplay": undefined,
                    "lookupSchema": undefined,
                    "lookupQuery": undefined,
                  },
                  "name": "field3",
                  "rangeURI": undefined,
                },
                "updatedField": false,
                "isPrimaryKey": false,
                "lockType": "NotLocked",
                "wrappedColumnName": undefined,
                "disablePhiLevel": false,
                "lockExistingField": false,
                "sourceOntology": undefined,
                "conceptSubtree": undefined,
                "conceptLabelColumn": undefined,
                "conceptImportColumn": undefined,
                "principalConceptCode": undefined,
                "derivationDataScope": undefined,
                "selected": false,
                "scannable": false,
              },
            ],
            "indices": Immutable.List [],
            "domainException": undefined,
            "mandatoryFieldNames": Immutable.List [],
            "reservedFieldNames": Immutable.List [],
            "newDesignFields": undefined,
            "instructions": undefined,
            "domainKindName": undefined,
            "schemaName": undefined,
            "queryName": undefined,
          },
        ],
        "editableResults": true,
        "editableRuns": true,
        "exception": undefined,
        "metadataInputFormatHelp": undefined,
        "moduleTransformScripts": undefined,
        "name": "Test Assay Protocol",
        "plateMetadata": undefined,
        "protocolId": 1,
        "protocolParameters": undefined,
        "protocolTransformScripts": undefined,
        "providerName": undefined,
        "saveScriptFiles": false,
        "selectedDetectionMethod": undefined,
        "selectedMetadataInputFormat": undefined,
        "selectedPlateTemplate": undefined,
        "status": "Active",
        "qcEnabled": undefined,
      }
    }
    onCancel={[MockFunction]}
    onComplete={[MockFunction]}
    onFinish={[Function]}
    onTogglePanel={[Function]}
    setSubmitting={[Function]}
    submitting={false}
    testMode={true}
    visitedPanels={Immutable.List []}
  >
    <BaseDomainDesigner
      domains={
        Immutable.List [
          Immutable.Record {
            "name": "Batch Fields",
            "container": undefined,
            "description": undefined,
            "domainURI": undefined,
            "domainId": null,
            "allowFileLinkProperties": false,
            "allowAttachmentProperties": false,
            "allowFlagProperties": true,
            "allowSampleSubjectProperties": true,
            "allowTextChoiceProperties": true,
            "allowTimepointProperties": false,
            "showDefaultValueSettings": false,
            "defaultDefaultValueType": undefined,
            "defaultValueOptions": Immutable.List [],
            "fields": Immutable.List [],
            "indices": Immutable.List [],
            "domainException": undefined,
            "mandatoryFieldNames": Immutable.List [],
            "reservedFieldNames": Immutable.List [],
            "newDesignFields": undefined,
            "instructions": undefined,
            "domainKindName": undefined,
            "schemaName": undefined,
            "queryName": undefined,
          },
          Immutable.Record {
            "name": "Sample Fields",
            "container": undefined,
            "description": undefined,
            "domainURI": undefined,
            "domainId": null,
            "allowFileLinkProperties": false,
            "allowAttachmentProperties": false,
            "allowFlagProperties": true,
            "allowSampleSubjectProperties": true,
            "allowTextChoiceProperties": true,
            "allowTimepointProperties": false,
            "showDefaultValueSettings": false,
            "defaultDefaultValueType": undefined,
            "defaultValueOptions": Immutable.List [],
            "fields": Immutable.List [
              Immutable.Record {
                "conceptURI": undefined,
                "conditionalFormats": Immutable.List [],
                "defaultScale": undefined,
                "defaultValueType": undefined,
                "defaultValue": undefined,
                "defaultDisplayValue": undefined,
                "description": undefined,
                "dimension": undefined,
                "excludeFromShifting": false,
                "format": undefined,
                "hidden": false,
                "importAliases": undefined,
                "label": undefined,
                "lookupContainer": undefined,
                "lookupQuery": undefined,
                "lookupSchema": undefined,
                "lookupValidator": undefined,
                "measure": undefined,
                "mvEnabled": false,
                "name": "field1",
                "PHI": undefined,
                "propertyId": undefined,
                "propertyURI": undefined,
                "propertyValidators": Immutable.List [],
                "rangeValidators": Immutable.List [],
                "rangeURI": "xsd:string",
                "regexValidators": Immutable.List [],
                "textChoiceValidator": undefined,
                "recommendedVariable": false,
                "required": false,
                "scale": 4000,
                "URL": undefined,
                "shownInDetailsView": true,
                "shownInInsertView": true,
                "shownInUpdateView": true,
                "visible": true,
                "dataType": Immutable.Record {
                  "conceptURI": undefined,
                  "display": "Text",
                  "name": "string",
                  "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                  "alternateRangeURI": "xsd:string",
                  "shortDisplay": "String",
                  "lookupSchema": undefined,
                  "lookupQuery": undefined,
                },
                "lookupQueryValue": undefined,
                "lookupType": Immutable.Record {
                  "conceptURI": undefined,
                  "display": "Lookup",
                  "name": "lookup",
                  "rangeURI": "xsd:string",
                  "alternateRangeURI": undefined,
                  "shortDisplay": undefined,
                  "lookupSchema": undefined,
                  "lookupQuery": undefined,
                },
                "original": {
                  "conceptURI": undefined,
                  "dataType": Immutable.Record {
                    "conceptURI": undefined,
                    "display": "Text",
                    "name": "string",
                    "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                    "alternateRangeURI": "xsd:string",
                    "shortDisplay": "String",
                    "lookupSchema": undefined,
                    "lookupQuery": undefined,
                  },
                  "name": "field1",
                  "rangeURI": undefined,
                },
                "updatedField": false,
                "isPrimaryKey": false,
                "lockType": "NotLocked",
                "wrappedColumnName": undefined,
                "disablePhiLevel": false,
                "lockExistingField": false,
                "sourceOntology": undefined,
                "conceptSubtree": undefined,
                "conceptLabelColumn": undefined,
                "conceptImportColumn": undefined,
                "principalConceptCode": undefined,
                "derivationDataScope": undefined,
                "selected": false,
                "scannable": false,
              },
              Immutable.Record {
                "conceptURI": undefined,
                "conditionalFormats": Immutable.List [],
                "defaultScale": undefined,
                "defaultValueType": undefined,
                "defaultValue": undefined,
                "defaultDisplayValue": undefined,
                "description": undefined,
                "dimension": undefined,
                "excludeFromShifting": false,
                "format": undefined,
                "hidden": false,
                "importAliases": undefined,
                "label": undefined,
                "lookupContainer": undefined,
                "lookupQuery": undefined,
                "lookupSchema": undefined,
                "lookupValidator": undefined,
                "measure": undefined,
                "mvEnabled": false,
                "name": "field2",
                "PHI": undefined,
                "propertyId": undefined,
                "propertyURI": undefined,
                "propertyValidators": Immutable.List [],
                "rangeValidators": Immutable.List [],
                "rangeURI": "xsd:int",
                "regexValidators": Immutable.List [],
                "textChoiceValidator": undefined,
                "recommendedVariable": false,
                "required": false,
                "scale": 4000,
                "URL": undefined,
                "shownInDetailsView": true,
                "shownInInsertView": true,
                "shownInUpdateView": true,
                "visible": true,
                "dataType": Immutable.Record {
                  "conceptURI": undefined,
                  "display": "Integer",
                  "name": "int",
                  "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                  "alternateRangeURI": "xsd:int",
                  "shortDisplay": undefined,
                  "lookupSchema": undefined,
                  "lookupQuery": undefined,
                },
                "lookupQueryValue": undefined,
                "lookupType": Immutable.Record {
                  "conceptURI": undefined,
                  "display": "Lookup",
                  "name": "lookup",
                  "rangeURI": "xsd:int",
                  "alternateRangeURI": undefined,
                  "shortDisplay": undefined,
                  "lookupSchema": undefined,
                  "lookupQuery": undefined,
                },
                "original": {
                  "conceptURI": undefined,
                  "dataType": Immutable.Record {
                    "conceptURI": undefined,
                    "display": "Integer",
                    "name": "int",
                    "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                    "alternateRangeURI": "xsd:int",
                    "shortDisplay": undefined,
                    "lookupSchema": undefined,
                    "lookupQuery": undefined,
                  },
                  "name": "field2",
                  "rangeURI": undefined,
                },
                "updatedField": false,
                "isPrimaryKey": false,
                "lockType": "NotLocked",
                "wrappedColumnName": undefined,
                "disablePhiLevel": false,
                "lockExistingField": false,
                "sourceOntology": undefined,
                "conceptSubtree": undefined,
                "conceptLabelColumn": undefined,
                "conceptImportColumn": undefined,
                "principalConceptCode": undefined,
                "derivationDataScope": undefined,
                "selected": false,
                "scannable": false,
              },
              Immutable.Record {
                "conceptURI": undefined,
                "conditionalFormats": Immutable.List [],
                "defaultScale": undefined,
                "defaultValueType": undefined,
                "defaultValue": undefined,
                "defaultDisplayValue": undefined,
                "description": undefined,
                "dimension": undefined,
                "excludeFromShifting": false,
                "format": undefined,
                "hidden": false,
                "importAliases": undefined,
                "label": undefined,
                "lookupContainer": undefined,
                "lookupQuery": undefined,
                "lookupSchema": undefined,
                "lookupValidator": undefined,
                "measure": undefined,
                "mvEnabled": false,
                "name": "field3",
                "PHI": undefined,
                "propertyId": undefined,
                "propertyURI": undefined,
                "propertyValidators": Immutable.List [],
                "rangeValidators": Immutable.List [],
                "rangeURI": "xsd:dateTime",
                "regexValidators": Immutable.List [],
                "textChoiceValidator": undefined,
                "recommendedVariable": false,
                "required": false,
                "scale": 4000,
                "URL": undefined,
                "shownInDetailsView": true,
                "shownInInsertView": true,
                "shownInUpdateView": true,
                "visible": true,
                "dataType": Immutable.Record {
                  "conceptURI": undefined,
                  "display": "Date Time",
                  "name": "dateTime",
                  "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                  "alternateRangeURI": "xsd:dateTime",
                  "shortDisplay": undefined,
                  "lookupSchema": undefined,
                  "lookupQuery": undefined,
                },
                "lookupQueryValue": undefined,
                "lookupType": Immutable.Record {
                  "conceptURI": undefined,
                  "display": "Lookup",
                  "name": "lookup",
                  "rangeURI": "xsd:dateTime",
                  "alternateRangeURI": undefined,
                  "shortDisplay": undefined,
                  "lookupSchema": undefined,
                  "lookupQuery": undefined,
                },
                "original": {
                  "conceptURI": undefined,
                  "dataType": Immutable.Record {
                    "conceptURI": undefined,
                    "display": "Date Time",
                    "name": "dateTime",
                    "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                    "alternateRangeURI": "xsd:dateTime",
                    "shortDisplay": undefined,
                    "lookupSchema": undefined,
                    "lookupQuery": undefined,
                  },
                  "name": "field3",
                  "rangeURI": undefined,
                },
                "updatedField": false,
                "isPrimaryKey": false,
                "lockType": "NotLocked",
                "wrappedColumnName": undefined,
                "disablePhiLevel": false,
                "lockExistingField": false,
                "sourceOntology": undefined,
                "conceptSubtree": undefined,
                "conceptLabelColumn": undefined,
                "conceptImportColumn": undefined,
                "principalConceptCode": undefined,
                "derivationDataScope": undefined,
                "selected": false,
                "scannable": false,
              },
            ],
            "indices": Immutable.List [],
            "domainException": undefined,
            "mandatoryFieldNames": Immutable.List [],
            "reservedFieldNames": Immutable.List [],
            "newDesignFields": undefined,
            "instructions": undefined,
            "domainKindName": undefined,
            "schemaName": undefined,
            "queryName": undefined,
          },
        ]
      }
      hasValidProperties={true}
      name="Test Assay Protocol"
      onCancel={[MockFunction]}
      onFinish={[Function]}
      saveBtnText="Save"
      submitting={false}
      visitedPanels={Immutable.List []}
    >
      <ComponentWithDomainPropertiesPanelCollapse
        controlledCollapse={true}
        hideStudyProperties={true}
        initCollapsed={false}
        model={
          Immutable.Record {
            "allowBackgroundUpload": true,
            "allowEditableResults": true,
            "allowQCStates": false,
            "allowTransformationScript": false,
            "allowPlateMetadata": false,
            "autoCopyTargetContainer": undefined,
            "autoCopyTargetContainerId": undefined,
            "autoLinkCategory": undefined,
            "availableDetectionMethods": undefined,
            "availableMetadataInputFormats": undefined,
            "availablePlateTemplates": undefined,
            "backgroundUpload": true,
            "description": "My assay protocol for you all to use.",
            "domains": Immutable.List [
              Immutable.Record {
                "name": "Batch Fields",
                "container": undefined,
                "description": undefined,
                "domainURI": undefined,
                "domainId": null,
                "allowFileLinkProperties": false,
                "allowAttachmentProperties": false,
                "allowFlagProperties": true,
                "allowSampleSubjectProperties": true,
                "allowTextChoiceProperties": true,
                "allowTimepointProperties": false,
                "showDefaultValueSettings": false,
                "defaultDefaultValueType": undefined,
                "defaultValueOptions": Immutable.List [],
                "fields": Immutable.List [],
                "indices": Immutable.List [],
                "domainException": undefined,
                "mandatoryFieldNames": Immutable.List [],
                "reservedFieldNames": Immutable.List [],
                "newDesignFields": undefined,
                "instructions": undefined,
                "domainKindName": undefined,
                "schemaName": undefined,
                "queryName": undefined,
              },
              Immutable.Record {
                "name": "Sample Fields",
                "container": undefined,
                "description": undefined,
                "domainURI": undefined,
                "domainId": null,
                "allowFileLinkProperties": false,
                "allowAttachmentProperties": false,
                "allowFlagProperties": true,
                "allowSampleSubjectProperties": true,
                "allowTextChoiceProperties": true,
                "allowTimepointProperties": false,
                "showDefaultValueSettings": false,
                "defaultDefaultValueType": undefined,
                "defaultValueOptions": Immutable.List [],
                "fields": Immutable.List [
                  Immutable.Record {
                    "conceptURI": undefined,
                    "conditionalFormats": Immutable.List [],
                    "defaultScale": undefined,
                    "defaultValueType": undefined,
                    "defaultValue": undefined,
                    "defaultDisplayValue": undefined,
                    "description": undefined,
                    "dimension": undefined,
                    "excludeFromShifting": false,
                    "format": undefined,
                    "hidden": false,
                    "importAliases": undefined,
                    "label": undefined,
                    "lookupContainer": undefined,
                    "lookupQuery": undefined,
                    "lookupSchema": undefined,
                    "lookupValidator": undefined,
                    "measure": undefined,
                    "mvEnabled": false,
                    "name": "field1",
                    "PHI": undefined,
                    "propertyId": undefined,
                    "propertyURI": undefined,
                    "propertyValidators": Immutable.List [],
                    "rangeValidators": Immutable.List [],
                    "rangeURI": "xsd:string",
                    "regexValidators": Immutable.List [],
                    "textChoiceValidator": undefined,
                    "recommendedVariable": false,
                    "required": false,
                    "scale": 4000,
                    "URL": undefined,
                    "shownInDetailsView": true,
                    "shownInInsertView": true,
                    "shownInUpdateView": true,
                    "visible": true,
                    "dataType": Immutable.Record {
                      "conceptURI": undefined,
                      "display": "Text",
                      "name": "string",
                      "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                      "alternateRangeURI": "xsd:string",
                      "shortDisplay": "String",
                      "lookupSchema": undefined,
                      "lookupQuery": undefined,
                    },
                    "lookupQueryValue": undefined,
                    "lookupType": Immutable.Record {
                      "conceptURI": undefined,
                      "display": "Lookup",
                      "name": "lookup",
                      "rangeURI": "xsd:string",
                      "alternateRangeURI": undefined,
                      "shortDisplay": undefined,
                      "lookupSchema": undefined,
                      "lookupQuery": undefined,
                    },
                    "original": {
                      "conceptURI": undefined,
                      "dataType": Immutable.Record {
                        "conceptURI": undefined,
                        "display": "Text",
                        "name": "string",
                        "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                        "alternateRangeURI": "xsd:string",
                        "shortDisplay": "String",
                        "lookupSchema": undefined,
                        "lookupQuery": undefined,
                      },
                      "name": "field1",
                      "rangeURI": undefined,
                    },
                    "updatedField": false,
                    "isPrimaryKey": false,
                    "lockType": "NotLocked",
                    "wrappedColumnName": undefined,
                    "disablePhiLevel": false,
                    "lockExistingField": false,
                    "sourceOntology": undefined,
                    "conceptSubtree": undefined,
                    "conceptLabelColumn": undefined,
                    "conceptImportColumn": undefined,
                    "principalConceptCode": undefined,
                    "derivationDataScope": undefined,
                    "selected": false,
                    "scannable": false,
                  },
                  Immutable.Record {
                    "conceptURI": undefined,
                    "conditionalFormats": Immutable.List [],
                    "defaultScale": undefined,
                    "defaultValueType": undefined,
                    "defaultValue": undefined,
                    "defaultDisplayValue": undefined,
                    "description": undefined,
                    "dimension": undefined,
                    "excludeFromShifting": false,
                    "format": undefined,
                    "hidden": false,
                    "importAliases": undefined,
                    "label": undefined,
                    "lookupContainer": undefined,
                    "lookupQuery": undefined,
                    "lookupSchema": undefined,
                    "lookupValidator": undefined,
                    "measure": undefined,
                    "mvEnabled": false,
                    "name": "field2",
                    "PHI": undefined,
                    "propertyId": undefined,
                    "propertyURI": undefined,
                    "propertyValidators": Immutable.List [],
                    "rangeValidators": Immutable.List [],
                    "rangeURI": "xsd:int",
                    "regexValidators": Immutable.List [],
                    "textChoiceValidator": undefined,
                    "recommendedVariable": false,
                    "required": false,
                    "scale": 4000,
                    "URL": undefined,
                    "shownInDetailsView": true,
                    "shownInInsertView": true,
                    "shownInUpdateView": true,
                    "visible": true,
                    "dataType": Immutable.Record {
                      "conceptURI": undefined,
                      "display": "Integer",
                      "name": "int",
                      "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                      "alternateRangeURI": "xsd:int",
                      "shortDisplay": undefined,
                      "lookupSchema": undefined,
                      "lookupQuery": undefined,
                    },
                    "lookupQueryValue": undefined,
                    "lookupType": Immutable.Record {
                      "conceptURI": undefined,
                      "display": "Lookup",
                      "name": "lookup",
                      "rangeURI": "xsd:int",
                      "alternateRangeURI": undefined,
                      "shortDisplay": undefined,
                      "lookupSchema": undefined,
                      "lookupQuery": undefined,
                    },
                    "original": {
                      "conceptURI": undefined,
                      "dataType": Immutable.Record {
                        "conceptURI": undefined,
                        "display": "Integer",
                        "name": "int",
                        "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                        "alternateRangeURI": "xsd:int",
                        "shortDisplay": undefined,
                        "lookupSchema": undefined,
                        "lookupQuery": undefined,
                      },
                      "name": "field2",
                      "rangeURI": undefined,
                    },
                    "updatedField": false,
                    "isPrimaryKey": false,
                    "lockType": "NotLocked",
                    "wrappedColumnName": undefined,
                    "disablePhiLevel": false,
                    "lockExistingField": false,
                    "sourceOntology": undefined,
                    "conceptSubtree": undefined,
                    "conceptLabelColumn": undefined,
                    "conceptImportColumn": undefined,
                    "principalConceptCode": undefined,
                    "derivationDataScope": undefined,
                    "selected": false,
                    "scannable": false,
                  },
                  Immutable.Record {
                    "conceptURI": undefined,
                    "conditionalFormats": Immutable.List [],
                    "defaultScale": undefined,
                    "defaultValueType": undefined,
                    "defaultValue": undefined,
                    "defaultDisplayValue": undefined,
                    "description": undefined,
                    "dimension": undefined,
                    "excludeFromShifting": false,
                    "format": undefined,
                    "hidden": false,
                    "importAliases": undefined,
                    "label": undefined,
                    "lookupContainer": undefined,
                    "lookupQuery": undefined,
                    "lookupSchema": undefined,
                    "lookupValidator": undefined,
                    "measure": undefined,
                    "mvEnabled": false,
                    "name": "field3",
                    "PHI": undefined,
                    "propertyId": undefined,
                    "propertyURI": undefined,
                    "propertyValidators": Immutable.List [],
                    "rangeValidators": Immutable.List [],
                    "rangeURI": "xsd:dateTime",
                    "regexValidators": Immutable.List [],
                    "textChoiceValidator": undefined,
                    "recommendedVariable": false,
                    "required": false,
                    "scale": 4000,
                    "URL": undefined,
                    "shownInDetailsView": true,
                    "shownInInsertView": true,
                    "shownInUpdateView": true,
                    "visible": true,
                    "dataType": Immutable.Record {
                      "conceptURI": undefined,
                      "display": "Date Time",
                      "name": "dateTime",
                      "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                      "alternateRangeURI": "xsd:dateTime",
                      "shortDisplay": undefined,
                      "lookupSchema": undefined,
                      "lookupQuery": undefined,
                    },
                    "lookupQueryValue": undefined,
                    "lookupType": Immutable.Record {
                      "conceptURI": undefined,
                      "display": "Lookup",
                      "name": "lookup",
                      "rangeURI": "xsd:dateTime",
                      "alternateRangeURI": undefined,
                      "shortDisplay": undefined,
                      "lookupSchema": undefined,
                      "lookupQuery": undefined,
                    },
                    "original": {
                      "conceptURI": undefined,
                      "dataType": Immutable.Record {
                        "conceptURI": undefined,
                        "display": "Date Time",
                        "name": "dateTime",
                        "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                        "alternateRangeURI": "xsd:dateTime",
                        "shortDisplay": undefined,
                        "lookupSchema": undefined,
                        "lookupQuery": undefined,
                      },
                      "name": "field3",
                      "rangeURI": undefined,
                    },
                    "updatedField": false,
                    "isPrimaryKey": false,
                    "lockType": "NotLocked",
                    "wrappedColumnName": undefined,
                    "disablePhiLevel": false,
                    "lockExistingField": false,
                    "sourceOntology": undefined,
                    "conceptSubtree": undefined,
                    "conceptLabelColumn": undefined,
                    "conceptImportColumn": undefined,
                    "principalConceptCode": undefined,
                    "derivationDataScope": undefined,
                    "selected": false,
                    "scannable": false,
                  },
                ],
                "indices": Immutable.List [],
                "domainException": undefined,
                "mandatoryFieldNames": Immutable.List [],
                "reservedFieldNames": Immutable.List [],
                "newDesignFields": undefined,
                "instructions": undefined,
                "domainKindName": undefined,
                "schemaName": undefined,
                "queryName": undefined,
              },
            ],
            "editableResults": true,
            "editableRuns": true,
            "exception": undefined,
            "metadataInputFormatHelp": undefined,
            "moduleTransformScripts": undefined,
            "name": "Test Assay Protocol",
            "plateMetadata": undefined,
            "protocolId": 1,
            "protocolParameters": undefined,
            "protocolTransformScripts": undefined,
            "providerName": undefined,
            "saveScriptFiles": false,
            "selectedDetectionMethod": undefined,
            "selectedMetadataInputFormat": undefined,
            "selectedPlateTemplate": undefined,
            "status": "Active",
            "qcEnabled": undefined,
          }
        }
        onChange={[Function]}
        onToggle={[Function]}
        panelStatus="COMPLETE"
        validate={false}
      >
        <Component
          appPropertiesOnly={false}
          asPanel={true}
          collapsed={false}
          controlledCollapse={true}
          helpTopic="defineAssaySchema"
          hideStudyProperties={true}
          model={
            Immutable.Record {
              "allowBackgroundUpload": true,
              "allowEditableResults": true,
              "allowQCStates": false,
              "allowTransformationScript": false,
              "allowPlateMetadata": false,
              "autoCopyTargetContainer": undefined,
              "autoCopyTargetContainerId": undefined,
              "autoLinkCategory": undefined,
              "availableDetectionMethods": undefined,
              "availableMetadataInputFormats": undefined,
              "availablePlateTemplates": undefined,
              "backgroundUpload": true,
              "description": "My assay protocol for you all to use.",
              "domains": Immutable.List [
                Immutable.Record {
                  "name": "Batch Fields",
                  "container": undefined,
                  "description": undefined,
                  "domainURI": undefined,
                  "domainId": null,
                  "allowFileLinkProperties": false,
                  "allowAttachmentProperties": false,
                  "allowFlagProperties": true,
                  "allowSampleSubjectProperties": true,
                  "allowTextChoiceProperties": true,
                  "allowTimepointProperties": false,
                  "showDefaultValueSettings": false,
                  "defaultDefaultValueType": undefined,
                  "defaultValueOptions": Immutable.List [],
                  "fields": Immutable.List [],
                  "indices": Immutable.List [],
                  "domainException": undefined,
                  "mandatoryFieldNames": Immutable.List [],
                  "reservedFieldNames": Immutable.List [],
                  "newDesignFields": undefined,
                  "instructions": undefined,
                  "domainKindName": undefined,
                  "schemaName": undefined,
                  "queryName": undefined,
                },
                Immutable.Record {
                  "name": "Sample Fields",
                  "container": undefined,
                  "description": undefined,
                  "domainURI": undefined,
                  "domainId": null,
                  "allowFileLinkProperties": false,
                  "allowAttachmentProperties": false,
                  "allowFlagProperties": true,
                  "allowSampleSubjectProperties": true,
                  "allowTextChoiceProperties": true,
                  "allowTimepointProperties": false,
                  "showDefaultValueSettings": false,
                  "defaultDefaultValueType": undefined,
                  "defaultValueOptions": Immutable.List [],
                  "fields": Immutable.List [
                    Immutable.Record {
                      "conceptURI": undefined,
                      "conditionalFormats": Immutable.List [],
                      "defaultScale": undefined,
                      "defaultValueType": undefined,
                      "defaultValue": undefined,
                      "defaultDisplayValue": undefined,
                      "description": undefined,
                      "dimension": undefined,
                      "excludeFromShifting": false,
                      "format": undefined,
                      "hidden": false,
                      "importAliases": undefined,
                      "label": undefined,
                      "lookupContainer": undefined,
                      "lookupQuery": undefined,
                      "lookupSchema": undefined,
                      "lookupValidator": undefined,
                      "measure": undefined,
                      "mvEnabled": false,
                      "name": "field1",
                      "PHI": undefined,
                      "propertyId": undefined,
                      "propertyURI": undefined,
                      "propertyValidators": Immutable.List [],
                      "rangeValidators": Immutable.List [],
                      "rangeURI": "xsd:string",
                      "regexValidators": Immutable.List [],
                      "textChoiceValidator": undefined,
                      "recommendedVariable": false,
                      "required": false,
                      "scale": 4000,
                      "URL": undefined,
                      "shownInDetailsView": true,
                      "shownInInsertView": true,
                      "shownInUpdateView": true,
                      "visible": true,
                      "dataType": Immutable.Record {
                        "conceptURI": undefined,
                        "display": "Text",
                        "name": "string",
                        "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                        "alternateRangeURI": "xsd:string",
                        "shortDisplay": "String",
                        "lookupSchema": undefined,
                        "lookupQuery": undefined,
                      },
                      "lookupQueryValue": undefined,
                      "lookupType": Immutable.Record {
                        "conceptURI": undefined,
                        "display": "Lookup",
                        "name": "lookup",
                        "rangeURI": "xsd:string",
                        "alternateRangeURI": undefined,
                        "shortDisplay": undefined,
                        "lookupSchema": undefined,
                        "lookupQuery": undefined,
                      },
                      "original": {
                        "conceptURI": undefined,
                        "dataType": Immutable.Record {
                          "conceptURI": undefined,
                          "display": "Text",
                          "name": "string",
                          "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                          "alternateRangeURI": "xsd:string",
                          "shortDisplay": "String",
                          "lookupSchema": undefined,
                          "lookupQuery": undefined,
                        },
                        "name": "field1",
                        "rangeURI": undefined,
                      },
                      "updatedField": false,
                      "isPrimaryKey": false,
                      "lockType": "NotLocked",
                      "wrappedColumnName": undefined,
                      "disablePhiLevel": false,
                      "lockExistingField": false,
                      "sourceOntology": undefined,
                      "conceptSubtree": undefined,
                      "conceptLabelColumn": undefined,
                      "conceptImportColumn": undefined,
                      "principalConceptCode": undefined,
                      "derivationDataScope": undefined,
                      "selected": false,
                      "scannable": false,
                    },
                    Immutable.Record {
                      "conceptURI": undefined,
                      "conditionalFormats": Immutable.List [],
                      "defaultScale": undefined,
                      "defaultValueType": undefined,
                      "defaultValue": undefined,
                      "defaultDisplayValue": undefined,
                      "description": undefined,
                      "dimension": undefined,
                      "excludeFromShifting": false,
                      "format": undefined,
                      "hidden": false,
                      "importAliases": undefined,
                      "label": undefined,
                      "lookupContainer": undefined,
                      "lookupQuery": undefined,
                      "lookupSchema": undefined,
                      "lookupValidator": undefined,
                      "measure": undefined,
                      "mvEnabled": false,
                      "name": "field2",
                      "PHI": undefined,
                      "propertyId": undefined,
                      "propertyURI": undefined,
                      "propertyValidators": Immutable.List [],
                      "rangeValidators": Immutable.List [],
                      "rangeURI": "xsd:int",
                      "regexValidators": Immutable.List [],
                      "textChoiceValidator": undefined,
                      "recommendedVariable": false,
                      "required": false,
                      "scale": 4000,
                      "URL": undefined,
                      "shownInDetailsView": true,
                      "shownInInsertView": true,
                      "shownInUpdateView": true,
                      "visible": true,
                      "dataType": Immutable.Record {
                        "conceptURI": undefined,
                        "display": "Integer",
                        "name": "int",
                        "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                        "alternateRangeURI": "xsd:int",
                        "shortDisplay": undefined,
                        "lookupSchema": undefined,
                        "lookupQuery": undefined,
                      },
                      "lookupQueryValue": undefined,
                      "lookupType": Immutable.Record {
                        "conceptURI": undefined,
                        "display": "Lookup",
                        "name": "lookup",
                        "rangeURI": "xsd:int",
                        "alternateRangeURI": undefined,
                        "shortDisplay": undefined,
                        "lookupSchema": undefined,
                        "lookupQuery": undefined,
                      },
                      "original": {
                        "conceptURI": undefined,
                        "dataType": Immutable.Record {
                          "conceptURI": undefined,
                          "display": "Integer",
                          "name": "int",
                          "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                          "alternateRangeURI": "xsd:int",
                          "shortDisplay": undefined,
                          "lookupSchema": undefined,
                          "lookupQuery": undefined,
                        },
                        "name": "field2",
                        "rangeURI": undefined,
                      },
                      "updatedField": false,
                      "isPrimaryKey": false,
                      "lockType": "NotLocked",
                      "wrappedColumnName": undefined,
                      "disablePhiLevel": false,
                      "lockExistingField": false,
                      "sourceOntology": undefined,
                      "conceptSubtree": undefined,
                      "conceptLabelColumn": undefined,
                      "conceptImportColumn": undefined,
                      "principalConceptCode": undefined,
                      "derivationDataScope": undefined,
                      "selected": false,
                      "scannable": false,
                    },
                    Immutable.Record {
                      "conceptURI": undefined,
                      "conditionalFormats": Immutable.List [],
                      "defaultScale": undefined,
                      "defaultValueType": undefined,
                      "defaultValue": undefined,
                      "defaultDisplayValue": undefined,
                      "description": undefined,
                      "dimension": undefined,
                      "excludeFromShifting": false,
                      "format": undefined,
                      "hidden": false,
                      "importAliases": undefined,
                      "label": undefined,
                      "lookupContainer": undefined,
                      "lookupQuery": undefined,
                      "lookupSchema": undefined,
                      "lookupValidator": undefined,
                      "measure": undefined,
                      "mvEnabled": false,
                      "name": "field3",
                      "PHI": undefined,
                      "propertyId": undefined,
                      "propertyURI": undefined,
                      "propertyValidators": Immutable.List [],
                      "rangeValidators": Immutable.List [],
                      "rangeURI": "xsd:dateTime",
                      "regexValidators": Immutable.List [],
                      "textChoiceValidator": undefined,
                      "recommendedVariable": false,
                      "required": false,
                      "scale": 4000,
                      "URL": undefined,
                      "shownInDetailsView": true,
                      "shownInInsertView": true,
                      "shownInUpdateView": true,
                      "visible": true,
                      "dataType": Immutable.Record {
                        "conceptURI": undefined,
                        "display": "Date Time",
                        "name": "dateTime",
                        "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                        "alternateRangeURI": "xsd:dateTime",
                        "shortDisplay": undefined,
                        "lookupSchema": undefined,
                        "lookupQuery": undefined,
                      },
                      "lookupQueryValue": undefined,
                      "lookupType": Immutable.Record {
                        "conceptURI": undefined,
                        "display": "Lookup",
                        "name": "lookup",
                        "rangeURI": "xsd:dateTime",
                        "alternateRangeURI": undefined,
                        "shortDisplay": undefined,
                        "lookupSchema": undefined,
                        "lookupQuery": undefined,
                      },
                      "original": {
                        "conceptURI": undefined,
                        "dataType": Immutable.Record {
                          "conceptURI": undefined,
                          "display": "Date Time",
                          "name": "dateTime",
                          "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                          "alternateRangeURI": "xsd:dateTime",
                          "shortDisplay": undefined,
                          "lookupSchema": undefined,
                          "lookupQuery": undefined,
                        },
                        "name": "field3",
                        "rangeURI": undefined,
                      },
                      "updatedField": false,
                      "isPrimaryKey": false,
                      "lockType": "NotLocked",
                      "wrappedColumnName": undefined,
                      "disablePhiLevel": false,
                      "lockExistingField": false,
                      "sourceOntology": undefined,
                      "conceptSubtree": undefined,
                      "conceptLabelColumn": undefined,
                      "conceptImportColumn": undefined,
                      "principalConceptCode": undefined,
                      "derivationDataScope": undefined,
                      "selected": false,
                      "scannable": false,
                    },
                  ],
                  "indices": Immutable.List [],
                  "domainException": undefined,
                  "mandatoryFieldNames": Immutable.List [],
                  "reservedFieldNames": Immutable.List [],
                  "newDesignFields": undefined,
                  "instructions": undefined,
                  "domainKindName": undefined,
                  "schemaName": undefined,
                  "queryName": undefined,
                },
              ],
              "editableResults": true,
              "editableRuns": true,
              "exception": undefined,
              "metadataInputFormatHelp": undefined,
              "moduleTransformScripts": undefined,
              "name": "Test Assay Protocol",
              "plateMetadata": undefined,
              "protocolId": 1,
              "protocolParameters": undefined,
              "protocolTransformScripts": undefined,
              "providerName": undefined,
              "saveScriptFiles": false,
              "selectedDetectionMethod": undefined,
              "selectedMetadataInputFormat": undefined,
              "selectedPlateTemplate": undefined,
              "status": "Active",
              "qcEnabled": undefined,
            }
          }
          onChange={[Function]}
          panelStatus="COMPLETE"
          togglePanel={[Function]}
          validate={false}
        >
          <BasePropertiesPanel
            appPropertiesOnly={false}
            asPanel={true}
            collapsed={false}
            controlledCollapse={true}
            headerId="assay-properties-hdr"
            helpTopic="defineAssaySchema"
            hideStudyProperties={true}
            isValid={true}
            model={
              Immutable.Record {
                "allowBackgroundUpload": true,
                "allowEditableResults": true,
                "allowQCStates": false,
                "allowTransformationScript": false,
                "allowPlateMetadata": false,
                "autoCopyTargetContainer": undefined,
                "autoCopyTargetContainerId": undefined,
                "autoLinkCategory": undefined,
                "availableDetectionMethods": undefined,
                "availableMetadataInputFormats": undefined,
                "availablePlateTemplates": undefined,
                "backgroundUpload": true,
                "description": "My assay protocol for you all to use.",
                "domains": Immutable.List [
                  Immutable.Record {
                    "name": "Batch Fields",
                    "container": undefined,
                    "description": undefined,
                    "domainURI": undefined,
                    "domainId": null,
                    "allowFileLinkProperties": false,
                    "allowAttachmentProperties": false,
                    "allowFlagProperties": true,
                    "allowSampleSubjectProperties": true,
                    "allowTextChoiceProperties": true,
                    "allowTimepointProperties": false,
                    "showDefaultValueSettings": false,
                    "defaultDefaultValueType": undefined,
                    "defaultValueOptions": Immutable.List [],
                    "fields": Immutable.List [],
                    "indices": Immutable.List [],
                    "domainException": undefined,
                    "mandatoryFieldNames": Immutable.List [],
                    "reservedFieldNames": Immutable.List [],
                    "newDesignFields": undefined,
                    "instructions": undefined,
                    "domainKindName": undefined,
                    "schemaName": undefined,
                    "queryName": undefined,
                  },
                  Immutable.Record {
                    "name": "Sample Fields",
                    "container": undefined,
                    "description": undefined,
                    "domainURI": undefined,
                    "domainId": null,
                    "allowFileLinkProperties": false,
                    "allowAttachmentProperties": false,
                    "allowFlagProperties": true,
                    "allowSampleSubjectProperties": true,
                    "allowTextChoiceProperties": true,
                    "allowTimepointProperties": false,
                    "showDefaultValueSettings": false,
                    "defaultDefaultValueType": undefined,
                    "defaultValueOptions": Immutable.List [],
                    "fields": Immutable.List [
                      Immutable.Record {
                        "conceptURI": undefined,
                        "conditionalFormats": Immutable.List [],
                        "defaultScale": undefined,
                        "defaultValueType": undefined,
                        "defaultValue": undefined,
                        "defaultDisplayValue": undefined,
                        "description": undefined,
                        "dimension": undefined,
                        "excludeFromShifting": false,
                        "format": undefined,
                        "hidden": false,
                        "importAliases": undefined,
                        "label": undefined,
                        "lookupContainer": undefined,
                        "lookupQuery": undefined,
                        "lookupSchema": undefined,
                        "lookupValidator": undefined,
                        "measure": undefined,
                        "mvEnabled": false,
                        "name": "field1",
                        "PHI": undefined,
                        "propertyId": undefined,
                        "propertyURI": undefined,
                        "propertyValidators": Immutable.List [],
                        "rangeValidators": Immutable.List [],
                        "rangeURI": "xsd:string",
                        "regexValidators": Immutable.List [],
                        "textChoiceValidator": undefined,
                        "recommendedVariable": false,
                        "required": false,
                        "scale": 4000,
                        "URL": undefined,
                        "shownInDetailsView": true,
                        "shownInInsertView": true,
                        "shownInUpdateView": true,
                        "visible": true,
                        "dataType": Immutable.Record {
                          "conceptURI": undefined,
                          "display": "Text",
                          "name": "string",
                          "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                          "alternateRangeURI": "xsd:string",
                          "shortDisplay": "String",
                          "lookupSchema": undefined,
                          "lookupQuery": undefined,
                        },
                        "lookupQueryValue": undefined,
                        "lookupType": Immutable.Record {
                          "conceptURI": undefined,
                          "display": "Lookup",
                          "name": "lookup",
                          "rangeURI": "xsd:string",
                          "alternateRangeURI": undefined,
                          "shortDisplay": undefined,
                          "lookupSchema": undefined,
                          "lookupQuery": undefined,
                        },
                        "original": {
                          "conceptURI": undefined,
                          "dataType": Immutable.Record {
                            "conceptURI": undefined,
                            "display": "Text",
                            "name": "string",
                            "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                            "alternateRangeURI": "xsd:string",
                            "shortDisplay": "String",
                            "lookupSchema": undefined,
                            "lookupQuery": undefined,
                          },
                          "name": "field1",
                          "rangeURI": undefined,
                        },
                        "updatedField": false,
                        "isPrimaryKey": false,
                        "lockType": "NotLocked",
                        "wrappedColumnName": undefined,
                        "disablePhiLevel": false,
                        "lockExistingField": false,
                        "sourceOntology": undefined,
                        "conceptSubtree": undefined,
                        "conceptLabelColumn": undefined,
                        "conceptImportColumn": undefined,
                        "principalConceptCode": undefined,
                        "derivationDataScope": undefined,
                        "selected": false,
                        "scannable": false,
                      },
                      Immutable.Record {
                        "conceptURI": undefined,
                        "conditionalFormats": Immutable.List [],
                        "defaultScale": undefined,
                        "defaultValueType": undefined,
                        "defaultValue": undefined,
                        "defaultDisplayValue": undefined,
                        "description": undefined,
                        "dimension": undefined,
                        "excludeFromShifting": false,
                        "format": undefined,
                        "hidden": false,
                        "importAliases": undefined,
                        "label": undefined,
                        "lookupContainer": undefined,
                        "lookupQuery": undefined,
                        "lookupSchema": undefined,
                        "lookupValidator": undefined,
                        "measure": undefined,
                        "mvEnabled": false,
                        "name": "field2",
                        "PHI": undefined,
                        "propertyId": undefined,
                        "propertyURI": undefined,
                        "propertyValidators": Immutable.List [],
                        "rangeValidators": Immutable.List [],
                        "rangeURI": "xsd:int",
                        "regexValidators": Immutable.List [],
                        "textChoiceValidator": undefined,
                        "recommendedVariable": false,
                        "required": false,
                        "scale": 4000,
                        "URL": undefined,
                        "shownInDetailsView": true,
                        "shownInInsertView": true,
                        "shownInUpdateView": true,
                        "visible": true,
                        "dataType": Immutable.Record {
                          "conceptURI": undefined,
                          "display": "Integer",
                          "name": "int",
                          "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                          "alternateRangeURI": "xsd:int",
                          "shortDisplay": undefined,
                          "lookupSchema": undefined,
                          "lookupQuery": undefined,
                        },
                        "lookupQueryValue": undefined,
                        "lookupType": Immutable.Record {
                          "conceptURI": undefined,
                          "display": "Lookup",
                          "name": "lookup",
                          "rangeURI": "xsd:int",
                          "alternateRangeURI": undefined,
                          "shortDisplay": undefined,
                          "lookupSchema": undefined,
                          "lookupQuery": undefined,
                        },
                        "original": {
                          "conceptURI": undefined,
                          "dataType": Immutable.Record {
                            "conceptURI": undefined,
                            "display": "Integer",
                            "name": "int",
                            "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                            "alternateRangeURI": "xsd:int",
                            "shortDisplay": undefined,
                            "lookupSchema": undefined,
                            "lookupQuery": undefined,
                          },
                          "name": "field2",
                          "rangeURI": undefined,
                        },
                        "updatedField": false,
                        "isPrimaryKey": false,
                        "lockType": "NotLocked",
                        "wrappedColumnName": undefined,
                        "disablePhiLevel": false,
                        "lockExistingField": false,
                        "sourceOntology": undefined,
                        "conceptSubtree": undefined,
                        "conceptLabelColumn": undefined,
                        "conceptImportColumn": undefined,
                        "principalConceptCode": undefined,
                        "derivationDataScope": undefined,
                        "selected": false,
                        "scannable": false,
                      },
                      Immutable.Record {
                        "conceptURI": undefined,
                        "conditionalFormats": Immutable.List [],
                        "defaultScale": undefined,
                        "defaultValueType": undefined,
                        "defaultValue": undefined,
                        "defaultDisplayValue": undefined,
                        "description": undefined,
                        "dimension": undefined,
                        "excludeFromShifting": false,
                        "format": undefined,
                        "hidden": false,
                        "importAliases": undefined,
                        "label": undefined,
                        "lookupContainer": undefined,
                        "lookupQuery": undefined,
                        "lookupSchema": undefined,
                        "lookupValidator": undefined,
                        "measure": undefined,
                        "mvEnabled": false,
                        "name": "field3",
                        "PHI": undefined,
                        "propertyId": undefined,
                        "propertyURI": undefined,
                        "propertyValidators": Immutable.List [],
                        "rangeValidators": Immutable.List [],
                        "rangeURI": "xsd:dateTime",
                        "regexValidators": Immutable.List [],
                        "textChoiceValidator": undefined,
                        "recommendedVariable": false,
                        "required": false,
                        "scale": 4000,
                        "URL": undefined,
                        "shownInDetailsView": true,
                        "shownInInsertView": true,
                        "shownInUpdateView": true,
                        "visible": true,
                        "dataType": Immutable.Record {
                          "conceptURI": undefined,
                          "display": "Date Time",
                          "name": "dateTime",
                          "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                          "alternateRangeURI": "xsd:dateTime",
                          "shortDisplay": undefined,
                          "lookupSchema": undefined,
                          "lookupQuery": undefined,
                        },
                        "lookupQueryValue": undefined,
                        "lookupType": Immutable.Record {
                          "conceptURI": undefined,
                          "display": "Lookup",
                          "name": "lookup",
                          "rangeURI": "xsd:dateTime",
                          "alternateRangeURI": undefined,
                          "shortDisplay": undefined,
                          "lookupSchema": undefined,
                          "lookupQuery": undefined,
                        },
                        "original": {
                          "conceptURI": undefined,
                          "dataType": Immutable.Record {
                            "conceptURI": undefined,
                            "display": "Date Time",
                            "name": "dateTime",
                            "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                            "alternateRangeURI": "xsd:dateTime",
                            "shortDisplay": undefined,
                            "lookupSchema": undefined,
                            "lookupQuery": undefined,
                          },
                          "name": "field3",
                          "rangeURI": undefined,
                        },
                        "updatedField": false,
                        "isPrimaryKey": false,
                        "lockType": "NotLocked",
                        "wrappedColumnName": undefined,
                        "disablePhiLevel": false,
                        "lockExistingField": false,
                        "sourceOntology": undefined,
                        "conceptSubtree": undefined,
                        "conceptLabelColumn": undefined,
                        "conceptImportColumn": undefined,
                        "principalConceptCode": undefined,
                        "derivationDataScope": undefined,
                        "selected": false,
                        "scannable": false,
                      },
                    ],
                    "indices": Immutable.List [],
                    "domainException": undefined,
                    "mandatoryFieldNames": Immutable.List [],
                    "reservedFieldNames": Immutable.List [],
                    "newDesignFields": undefined,
                    "instructions": undefined,
                    "domainKindName": undefined,
                    "schemaName": undefined,
                    "queryName": undefined,
                  },
                ],
                "editableResults": true,
                "editableRuns": true,
                "exception": undefined,
                "metadataInputFormatHelp": undefined,
                "moduleTransformScripts": undefined,
                "name": "Test Assay Protocol",
                "plateMetadata": undefined,
                "protocolId": 1,
                "protocolParameters": undefined,
                "protocolTransformScripts": undefined,
                "providerName": undefined,
                "saveScriptFiles": false,
                "selectedDetectionMethod": undefined,
                "selectedMetadataInputFormat": undefined,
                "selectedPlateTemplate": undefined,
                "status": "Active",
                "qcEnabled": undefined,
              }
            }
            onChange={[Function]}
            panelStatus="COMPLETE"
            title="Assay Properties"
            togglePanel={[Function]}
            updateValidStatus={[Function]}
            useTheme={false}
            validate={false}
          >
            <ForwardRef
              className="domain-form-panel domain-panel-no-theme"
              expanded={true}
              onToggle={[Function]}
            >
              <Uncontrolled(Panel)
                className="domain-form-panel domain-panel-no-theme"
                expanded={true}
                innerRef={null}
                onToggle={[Function]}
              >
                <Panel
                  bsClass="panel"
                  bsStyle="default"
                  className="domain-form-panel domain-panel-no-theme"
                  expanded={true}
                  onToggle={[Function]}
                >
                  <div
                    className="domain-form-panel domain-panel-no-theme panel panel-default"
                  >
                    <CollapsiblePanelHeader
                      collapsed={false}
                      controlledCollapse={true}
                      iconHelpMsg="Contains errors or is missing required values."
                      id="assay-properties-hdr"
                      isValid={true}
                      panelStatus="COMPLETE"
                      title="Assay Properties"
                      togglePanel={[Function]}
                      useTheme={false}
                    >
                      <PanelHeading
                        bsClass="panel"
                        className="domain-panel-header domain-heading-collapsible domain-panel-header-expanded domain-panel-header-no-theme"
                        componentClass="div"
                        id="assay-properties-hdr"
                        onClick={[Function]}
                      >
                        <div
                          className="domain-panel-header domain-heading-collapsible domain-panel-header-expanded domain-panel-header-no-theme panel-heading"
                          id="assay-properties-hdr"
                          onClick={[Function]}
                        >
                          <span
                            className="domain-panel-status-icon"
                          >
                            <span
                              className="fa fa-check-circle"
                            />
                          </span>
                          <span
                            className="domain-panel-title"
                          >
                            Assay Properties
                          </span>
                          <span
                            className="pull-right"
                          >
                            <span
                              className="fa fa-lg fa-minus-square domain-form-collapse-btn"
                            />
                          </span>
                        </div>
                      </PanelHeading>
                    </CollapsiblePanelHeader>
                    <PanelBody
                      bsClass="panel"
                      collapsible={true}
                    >
                      <PanelCollapse
                        bsClass="panel"
                      >
                        <Collapse
                          appear={false}
                          dimension="height"
                          getDimensionValue={[Function]}
                          in={true}
                          mountOnEnter={false}
                          timeout={300}
                          unmountOnExit={false}
                        >
                          <Transition
                            appear={false}
                            aria-expanded={null}
                            enter={true}
                            exit={true}
                            in={true}
                            mountOnEnter={false}
                            onEnter={[Function]}
                            onEntered={[Function]}
                            onEntering={[Function]}
                            onExit={[Function]}
                            onExited={[Function]}
                            onExiting={[Function]}
                            timeout={300}
                            unmountOnExit={false}
                          >
                            <div
                              aria-expanded={null}
                              className="panel-collapse collapse in"
                            >
                              <div
                                className="panel-body"
                              >
                                <HelpTopicURL
                                  helpTopic="defineAssaySchema"
                                  nounPlural="assays"
                                >
                                  <Row
                                    bsClass="row"
                                    componentClass="div"
                                  >
                                    <div
                                      className="row"
                                    >
                                      <Col
                                        bsClass="col"
                                        componentClass="div"
                                        xs={12}
                                      >
                                        <div
                                          className="col-xs-12"
                                        >
                                          <HelpLink
                                            className="domain-field-float-right"
                                            topic="defineAssaySchema"
                                          >
                                            <a
                                              className="domain-field-float-right"
                                              href="https://www.labkey.org/Documentation/wiki-page.view?referrer=inPage&name=defineAssaySchema"
                                              rel="noopener noreferrer"
                                              target="_blank"
                                            >
                                              Learn more about designing assays
                                            </a>
                                          </HelpLink>
                                        </div>
                                      </Col>
                                    </div>
                                  </Row>
                                </HelpTopicURL>
                                <AssayPropertiesForm
                                  appPropertiesOnly={false}
                                  hideStudyProperties={true}
                                  model={
                                    Immutable.Record {
                                      "allowBackgroundUpload": true,
                                      "allowEditableResults": true,
                                      "allowQCStates": false,
                                      "allowTransformationScript": false,
                                      "allowPlateMetadata": false,
                                      "autoCopyTargetContainer": undefined,
                                      "autoCopyTargetContainerId": undefined,
                                      "autoLinkCategory": undefined,
                                      "availableDetectionMethods": undefined,
                                      "availableMetadataInputFormats": undefined,
                                      "availablePlateTemplates": undefined,
                                      "backgroundUpload": true,
                                      "description": "My assay protocol for you all to use.",
                                      "domains": Immutable.List [
                                        Immutable.Record {
                                          "name": "Batch Fields",
                                          "container": undefined,
                                          "description": undefined,
                                          "domainURI": undefined,
                                          "domainId": null,
                                          "allowFileLinkProperties": false,
                                          "allowAttachmentProperties": false,
                                          "allowFlagProperties": true,
                                          "allowSampleSubjectProperties": true,
                                          "allowTextChoiceProperties": true,
                                          "allowTimepointProperties": false,
                                          "showDefaultValueSettings": false,
                                          "defaultDefaultValueType": undefined,
                                          "defaultValueOptions": Immutable.List [],
                                          "fields": Immutable.List [],
                                          "indices": Immutable.List [],
                                          "domainException": undefined,
                                          "mandatoryFieldNames": Immutable.List [],
                                          "reservedFieldNames": Immutable.List [],
                                          "newDesignFields": undefined,
                                          "instructions": undefined,
                                          "domainKindName": undefined,
                                          "schemaName": undefined,
                                          "queryName": undefined,
                                        },
                                        Immutable.Record {
                                          "name": "Sample Fields",
                                          "container": undefined,
                                          "description": undefined,
                                          "domainURI": undefined,
                                          "domainId": null,
                                          "allowFileLinkProperties": false,
                                          "allowAttachmentProperties": false,
                                          "allowFlagProperties": true,
                                          "allowSampleSubjectProperties": true,
                                          "allowTextChoiceProperties": true,
                                          "allowTimepointProperties": false,
                                          "showDefaultValueSettings": false,
                                          "defaultDefaultValueType": undefined,
                                          "defaultValueOptions": Immutable.List [],
                                          "fields": Immutable.List [
                                            Immutable.Record {
                                              "conceptURI": undefined,
                                              "conditionalFormats": Immutable.List [],
                                              "defaultScale": undefined,
                                              "defaultValueType": undefined,
                                              "defaultValue": undefined,
                                              "defaultDisplayValue": undefined,
                                              "description": undefined,
                                              "dimension": undefined,
                                              "excludeFromShifting": false,
                                              "format": undefined,
                                              "hidden": false,
                                              "importAliases": undefined,
                                              "label": undefined,
                                              "lookupContainer": undefined,
                                              "lookupQuery": undefined,
                                              "lookupSchema": undefined,
                                              "lookupValidator": undefined,
                                              "measure": undefined,
                                              "mvEnabled": false,
                                              "name": "field1",
                                              "PHI": undefined,
                                              "propertyId": undefined,
                                              "propertyURI": undefined,
                                              "propertyValidators": Immutable.List [],
                                              "rangeValidators": Immutable.List [],
                                              "rangeURI": "xsd:string",
                                              "regexValidators": Immutable.List [],
                                              "textChoiceValidator": undefined,
                                              "recommendedVariable": false,
                                              "required": false,
                                              "scale": 4000,
                                              "URL": undefined,
                                              "shownInDetailsView": true,
                                              "shownInInsertView": true,
                                              "shownInUpdateView": true,
                                              "visible": true,
                                              "dataType": Immutable.Record {
                                                "conceptURI": undefined,
                                                "display": "Text",
                                                "name": "string",
                                                "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                "alternateRangeURI": "xsd:string",
                                                "shortDisplay": "String",
                                                "lookupSchema": undefined,
                                                "lookupQuery": undefined,
                                              },
                                              "lookupQueryValue": undefined,
                                              "lookupType": Immutable.Record {
                                                "conceptURI": undefined,
                                                "display": "Lookup",
                                                "name": "lookup",
                                                "rangeURI": "xsd:string",
                                                "alternateRangeURI": undefined,
                                                "shortDisplay": undefined,
                                                "lookupSchema": undefined,
                                                "lookupQuery": undefined,
                                              },
                                              "original": {
                                                "conceptURI": undefined,
                                                "dataType": Immutable.Record {
                                                  "conceptURI": undefined,
                                                  "display": "Text",
                                                  "name": "string",
                                                  "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                  "alternateRangeURI": "xsd:string",
                                                  "shortDisplay": "String",
                                                  "lookupSchema": undefined,
                                                  "lookupQuery": undefined,
                                                },
                                                "name": "field1",
                                                "rangeURI": undefined,
                                              },
                                              "updatedField": false,
                                              "isPrimaryKey": false,
                                              "lockType": "NotLocked",
                                              "wrappedColumnName": undefined,
                                              "disablePhiLevel": false,
                                              "lockExistingField": false,
                                              "sourceOntology": undefined,
                                              "conceptSubtree": undefined,
                                              "conceptLabelColumn": undefined,
                                              "conceptImportColumn": undefined,
                                              "principalConceptCode": undefined,
                                              "derivationDataScope": undefined,
                                              "selected": false,
                                              "scannable": false,
                                            },
                                            Immutable.Record {
                                              "conceptURI": undefined,
                                              "conditionalFormats": Immutable.List [],
                                              "defaultScale": undefined,
                                              "defaultValueType": undefined,
                                              "defaultValue": undefined,
                                              "defaultDisplayValue": undefined,
                                              "description": undefined,
                                              "dimension": undefined,
                                              "excludeFromShifting": false,
                                              "format": undefined,
                                              "hidden": false,
                                              "importAliases": undefined,
                                              "label": undefined,
                                              "lookupContainer": undefined,
                                              "lookupQuery": undefined,
                                              "lookupSchema": undefined,
                                              "lookupValidator": undefined,
                                              "measure": undefined,
                                              "mvEnabled": false,
                                              "name": "field2",
                                              "PHI": undefined,
                                              "propertyId": undefined,
                                              "propertyURI": undefined,
                                              "propertyValidators": Immutable.List [],
                                              "rangeValidators": Immutable.List [],
                                              "rangeURI": "xsd:int",
                                              "regexValidators": Immutable.List [],
                                              "textChoiceValidator": undefined,
                                              "recommendedVariable": false,
                                              "required": false,
                                              "scale": 4000,
                                              "URL": undefined,
                                              "shownInDetailsView": true,
                                              "shownInInsertView": true,
                                              "shownInUpdateView": true,
                                              "visible": true,
                                              "dataType": Immutable.Record {
                                                "conceptURI": undefined,
                                                "display": "Integer",
                                                "name": "int",
                                                "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                                "alternateRangeURI": "xsd:int",
                                                "shortDisplay": undefined,
                                                "lookupSchema": undefined,
                                                "lookupQuery": undefined,
                                              },
                                              "lookupQueryValue": undefined,
                                              "lookupType": Immutable.Record {
                                                "conceptURI": undefined,
                                                "display": "Lookup",
                                                "name": "lookup",
                                                "rangeURI": "xsd:int",
                                                "alternateRangeURI": undefined,
                                                "shortDisplay": undefined,
                                                "lookupSchema": undefined,
                                                "lookupQuery": undefined,
                                              },
                                              "original": {
                                                "conceptURI": undefined,
                                                "dataType": Immutable.Record {
                                                  "conceptURI": undefined,
                                                  "display": "Integer",
                                                  "name": "int",
                                                  "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                                  "alternateRangeURI": "xsd:int",
                                                  "shortDisplay": undefined,
                                                  "lookupSchema": undefined,
                                                  "lookupQuery": undefined,
                                                },
                                                "name": "field2",
                                                "rangeURI": undefined,
                                              },
                                              "updatedField": false,
                                              "isPrimaryKey": false,
                                              "lockType": "NotLocked",
                                              "wrappedColumnName": undefined,
                                              "disablePhiLevel": false,
                                              "lockExistingField": false,
                                              "sourceOntology": undefined,
                                              "conceptSubtree": undefined,
                                              "conceptLabelColumn": undefined,
                                              "conceptImportColumn": undefined,
                                              "principalConceptCode": undefined,
                                              "derivationDataScope": undefined,
                                              "selected": false,
                                              "scannable": false,
                                            },
                                            Immutable.Record {
                                              "conceptURI": undefined,
                                              "conditionalFormats": Immutable.List [],
                                              "defaultScale": undefined,
                                              "defaultValueType": undefined,
                                              "defaultValue": undefined,
                                              "defaultDisplayValue": undefined,
                                              "description": undefined,
                                              "dimension": undefined,
                                              "excludeFromShifting": false,
                                              "format": undefined,
                                              "hidden": false,
                                              "importAliases": undefined,
                                              "label": undefined,
                                              "lookupContainer": undefined,
                                              "lookupQuery": undefined,
                                              "lookupSchema": undefined,
                                              "lookupValidator": undefined,
                                              "measure": undefined,
                                              "mvEnabled": false,
                                              "name": "field3",
                                              "PHI": undefined,
                                              "propertyId": undefined,
                                              "propertyURI": undefined,
                                              "propertyValidators": Immutable.List [],
                                              "rangeValidators": Immutable.List [],
                                              "rangeURI": "xsd:dateTime",
                                              "regexValidators": Immutable.List [],
                                              "textChoiceValidator": undefined,
                                              "recommendedVariable": false,
                                              "required": false,
                                              "scale": 4000,
                                              "URL": undefined,
                                              "shownInDetailsView": true,
                                              "shownInInsertView": true,
                                              "shownInUpdateView": true,
                                              "visible": true,
                                              "dataType": Immutable.Record {
                                                "conceptURI": undefined,
                                                "display": "Date Time",
                                                "name": "dateTime",
                                                "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                                                "alternateRangeURI": "xsd:dateTime",
                                                "shortDisplay": undefined,
                                                "lookupSchema": undefined,
                                                "lookupQuery": undefined,
                                              },
                                              "lookupQueryValue": undefined,
                                              "lookupType": Immutable.Record {
                                                "conceptURI": undefined,
                                                "display": "Lookup",
                                                "name": "lookup",
                                                "rangeURI": "xsd:dateTime",
                                                "alternateRangeURI": undefined,
                                                "shortDisplay": undefined,
                                                "lookupSchema": undefined,
                                                "lookupQuery": undefined,
                                              },
                                              "original": {
                                                "conceptURI": undefined,
                                                "dataType": Immutable.Record {
                                                  "conceptURI": undefined,
                                                  "display": "Date Time",
                                                  "name": "dateTime",
                                                  "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                                                  "alternateRangeURI": "xsd:dateTime",
                                                  "shortDisplay": undefined,
                                                  "lookupSchema": undefined,
                                                  "lookupQuery": undefined,
                                                },
                                                "name": "field3",
                                                "rangeURI": undefined,
                                              },
                                              "updatedField": false,
                                              "isPrimaryKey": false,
                                              "lockType": "NotLocked",
                                              "wrappedColumnName": undefined,
                                              "disablePhiLevel": false,
                                              "lockExistingField": false,
                                              "sourceOntology": undefined,
                                              "conceptSubtree": undefined,
                                              "conceptLabelColumn": undefined,
                                              "conceptImportColumn": undefined,
                                              "principalConceptCode": undefined,
                                              "derivationDataScope": undefined,
                                              "selected": false,
                                              "scannable": false,
                                            },
                                          ],
                                          "indices": Immutable.List [],
                                          "domainException": undefined,
                                          "mandatoryFieldNames": Immutable.List [],
                                          "reservedFieldNames": Immutable.List [],
                                          "newDesignFields": undefined,
                                          "instructions": undefined,
                                          "domainKindName": undefined,
                                          "schemaName": undefined,
                                          "queryName": undefined,
                                        },
                                      ],
                                      "editableResults": true,
                                      "editableRuns": true,
                                      "exception": undefined,
                                      "metadataInputFormatHelp": undefined,
                                      "moduleTransformScripts": undefined,
                                      "name": "Test Assay Protocol",
                                      "plateMetadata": undefined,
                                      "protocolId": 1,
                                      "protocolParameters": undefined,
                                      "protocolTransformScripts": undefined,
                                      "providerName": undefined,
                                      "saveScriptFiles": false,
                                      "selectedDetectionMethod": undefined,
                                      "selectedMetadataInputFormat": undefined,
                                      "selectedPlateTemplate": undefined,
                                      "status": "Active",
                                      "qcEnabled": undefined,
                                    }
                                  }
                                  onChange={[Function]}
                                >
                                  <Form
                                    bsClass="form"
                                    componentClass="form"
                                    horizontal={false}
                                    inline={false}
                                  >
                                    <form
                                      className=""
                                    >
                                      <Col
                                        bsClass="col"
                                        componentClass="div"
                                        lg={6}
                                        xs={12}
                                      >
                                        <div
                                          className="col-lg-6 col-xs-12"
                                        >
                                          <div
                                            className="domain-field-padding-bottom"
                                          >
                                            <SectionHeading
                                              title="Basic Properties"
                                            >
                                              <div
                                                className="domain-field-section-heading"
                                              >
                                                Basic Properties
                                              </div>
                                            </SectionHeading>
                                            <NameInput
                                              appPropertiesOnly={false}
                                              model={
                                                Immutable.Record {
                                                  "allowBackgroundUpload": true,
                                                  "allowEditableResults": true,
                                                  "allowQCStates": false,
                                                  "allowTransformationScript": false,
                                                  "allowPlateMetadata": false,
                                                  "autoCopyTargetContainer": undefined,
                                                  "autoCopyTargetContainerId": undefined,
                                                  "autoLinkCategory": undefined,
                                                  "availableDetectionMethods": undefined,
                                                  "availableMetadataInputFormats": undefined,
                                                  "availablePlateTemplates": undefined,
                                                  "backgroundUpload": true,
                                                  "description": "My assay protocol for you all to use.",
                                                  "domains": Immutable.List [
                                                    Immutable.Record {
                                                      "name": "Batch Fields",
                                                      "container": undefined,
                                                      "description": undefined,
                                                      "domainURI": undefined,
                                                      "domainId": null,
                                                      "allowFileLinkProperties": false,
                                                      "allowAttachmentProperties": false,
                                                      "allowFlagProperties": true,
                                                      "allowSampleSubjectProperties": true,
                                                      "allowTextChoiceProperties": true,
                                                      "allowTimepointProperties": false,
                                                      "showDefaultValueSettings": false,
                                                      "defaultDefaultValueType": undefined,
                                                      "defaultValueOptions": Immutable.List [],
                                                      "fields": Immutable.List [],
                                                      "indices": Immutable.List [],
                                                      "domainException": undefined,
                                                      "mandatoryFieldNames": Immutable.List [],
                                                      "reservedFieldNames": Immutable.List [],
                                                      "newDesignFields": undefined,
                                                      "instructions": undefined,
                                                      "domainKindName": undefined,
                                                      "schemaName": undefined,
                                                      "queryName": undefined,
                                                    },
                                                    Immutable.Record {
                                                      "name": "Sample Fields",
                                                      "container": undefined,
                                                      "description": undefined,
                                                      "domainURI": undefined,
                                                      "domainId": null,
                                                      "allowFileLinkProperties": false,
                                                      "allowAttachmentProperties": false,
                                                      "allowFlagProperties": true,
                                                      "allowSampleSubjectProperties": true,
                                                      "allowTextChoiceProperties": true,
                                                      "allowTimepointProperties": false,
                                                      "showDefaultValueSettings": false,
                                                      "defaultDefaultValueType": undefined,
                                                      "defaultValueOptions": Immutable.List [],
                                                      "fields": Immutable.List [
                                                        Immutable.Record {
                                                          "conceptURI": undefined,
                                                          "conditionalFormats": Immutable.List [],
                                                          "defaultScale": undefined,
                                                          "defaultValueType": undefined,
                                                          "defaultValue": undefined,
                                                          "defaultDisplayValue": undefined,
                                                          "description": undefined,
                                                          "dimension": undefined,
                                                          "excludeFromShifting": false,
                                                          "format": undefined,
                                                          "hidden": false,
                                                          "importAliases": undefined,
                                                          "label": undefined,
                                                          "lookupContainer": undefined,
                                                          "lookupQuery": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupValidator": undefined,
                                                          "measure": undefined,
                                                          "mvEnabled": false,
                                                          "name": "field1",
                                                          "PHI": undefined,
                                                          "propertyId": undefined,
                                                          "propertyURI": undefined,
                                                          "propertyValidators": Immutable.List [],
                                                          "rangeValidators": Immutable.List [],
                                                          "rangeURI": "xsd:string",
                                                          "regexValidators": Immutable.List [],
                                                          "textChoiceValidator": undefined,
                                                          "recommendedVariable": false,
                                                          "required": false,
                                                          "scale": 4000,
                                                          "URL": undefined,
                                                          "shownInDetailsView": true,
                                                          "shownInInsertView": true,
                                                          "shownInUpdateView": true,
                                                          "visible": true,
                                                          "dataType": Immutable.Record {
                                                            "conceptURI": undefined,
                                                            "display": "Text",
                                                            "name": "string",
                                                            "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                            "alternateRangeURI": "xsd:string",
                                                            "shortDisplay": "String",
                                                            "lookupSchema": undefined,
                                                            "lookupQuery": undefined,
                                                          },
                                                          "lookupQueryValue": undefined,
                                                          "lookupType": Immutable.Record {
                                                            "conceptURI": undefined,
                                                            "display": "Lookup",
                                                            "name": "lookup",
                                                            "rangeURI": "xsd:string",
                                                            "alternateRangeURI": undefined,
                                                            "shortDisplay": undefined,
                                                            "lookupSchema": undefined,
                                                            "lookupQuery": undefined,
                                                          },
                                                          "original": {
                                                            "conceptURI": undefined,
                                                            "dataType": Immutable.Record {
                                                              "conceptURI": undefined,
                                                              "display": "Text",
                                                              "name": "string",
                                                              "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                              "alternateRangeURI": "xsd:string",
                                                              "shortDisplay": "String",
                                                              "lookupSchema": undefined,
                                                              "lookupQuery": undefined,
                                                            },
                                                            "name": "field1",
                                                            "rangeURI": undefined,
                                                          },
                                                          "updatedField": false,
                                                          "isPrimaryKey": false,
                                                          "lockType": "NotLocked",
                                                          "wrappedColumnName": undefined,
                                                          "disablePhiLevel": false,
                                                          "lockExistingField": false,
                                                          "sourceOntology": undefined,
                                                          "conceptSubtree": undefined,
                                                          "conceptLabelColumn": undefined,
                                                          "conceptImportColumn": undefined,
                                                          "principalConceptCode": undefined,
                                                          "derivationDataScope": undefined,
                                                          "selected": false,
                                                          "scannable": false,
                                                        },
                                                        Immutable.Record {
                                                          "conceptURI": undefined,
                                                          "conditionalFormats": Immutable.List [],
                                                          "defaultScale": undefined,
                                                          "defaultValueType": undefined,
                                                          "defaultValue": undefined,
                                                          "defaultDisplayValue": undefined,
                                                          "description": undefined,
                                                          "dimension": undefined,
                                                          "excludeFromShifting": false,
                                                          "format": undefined,
                                                          "hidden": false,
                                                          "importAliases": undefined,
                                                          "label": undefined,
                                                          "lookupContainer": undefined,
                                                          "lookupQuery": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupValidator": undefined,
                                                          "measure": undefined,
                                                          "mvEnabled": false,
                                                          "name": "field2",
                                                          "PHI": undefined,
                                                          "propertyId": undefined,
                                                          "propertyURI": undefined,
                                                          "propertyValidators": Immutable.List [],
                                                          "rangeValidators": Immutable.List [],
                                                          "rangeURI": "xsd:int",
                                                          "regexValidators": Immutable.List [],
                                                          "textChoiceValidator": undefined,
                                                          "recommendedVariable": false,
                                                          "required": false,
                                                          "scale": 4000,
                                                          "URL": undefined,
                                                          "shownInDetailsView": true,
                                                          "shownInInsertView": true,
                                                          "shownInUpdateView": true,
                                                          "visible": true,
                                                          "dataType": Immutable.Record {
                                                            "conceptURI": undefined,
                                                            "display": "Integer",
                                                            "name": "int",
                                                            "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                                            "alternateRangeURI": "xsd:int",
                                                            "shortDisplay": undefined,
                                                            "lookupSchema": undefined,
                                                            "lookupQuery": undefined,
                                                          },
                                                          "lookupQueryValue": undefined,
                                                          "lookupType": Immutable.Record {
                                                            "conceptURI": undefined,
                                                            "display": "Lookup",
                                                            "name": "lookup",
                                                            "rangeURI": "xsd:int",
                                                            "alternateRangeURI": undefined,
                                                            "shortDisplay": undefined,
                                                            "lookupSchema": undefined,
                                                            "lookupQuery": undefined,
                                                          },
                                                          "original": {
                                                            "conceptURI": undefined,
                                                            "dataType": Immutable.Record {
                                                              "conceptURI": undefined,
                                                              "display": "Integer",
                                                              "name": "int",
                                                              "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                                              "alternateRangeURI": "xsd:int",
                                                              "shortDisplay": undefined,
                                                              "lookupSchema": undefined,
                                                              "lookupQuery": undefined,
                                                            },
                                                            "name": "field2",
                                                            "rangeURI": undefined,
                                                          },
                                                          "updatedField": false,
                                                          "isPrimaryKey": false,
                                                          "lockType": "NotLocked",
                                                          "wrappedColumnName": undefined,
                                                          "disablePhiLevel": false,
                                                          "lockExistingField": false,
                                                          "sourceOntology": undefined,
                                                          "conceptSubtree": undefined,
                                                          "conceptLabelColumn": undefined,
                                                          "conceptImportColumn": undefined,
                                                          "principalConceptCode": undefined,
                                                          "derivationDataScope": undefined,
                                                          "selected": false,
                                                          "scannable": false,
                                                        },
                                                        Immutable.Record {
                                                          "conceptURI": undefined,
                                                          "conditionalFormats": Immutable.List [],
                                                          "defaultScale": undefined,
                                                          "defaultValueType": undefined,
                                                          "defaultValue": undefined,
                                                          "defaultDisplayValue": undefined,
                                                          "description": undefined,
                                                          "dimension": undefined,
                                                          "excludeFromShifting": false,
                                                          "format": undefined,
                                                          "hidden": false,
                                                          "importAliases": undefined,
                                                          "label": undefined,
                                                          "lookupContainer": undefined,
                                                          "lookupQuery": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupValidator": undefined,
                                                          "measure": undefined,
                                                          "mvEnabled": false,
                                                          "name": "field3",
                                                          "PHI": undefined,
                                                          "propertyId": undefined,
                                                          "propertyURI": undefined,
                                                          "propertyValidators": Immutable.List [],
                                                          "rangeValidators": Immutable.List [],
                                                          "rangeURI": "xsd:dateTime",
                                                          "regexValidators": Immutable.List [],
                                                          "textChoiceValidator": undefined,
                                                          "recommendedVariable": false,
                                                          "required": false,
                                                          "scale": 4000,
                                                          "URL": undefined,
                                                          "shownInDetailsView": true,
                                                          "shownInInsertView": true,
                                                          "shownInUpdateView": true,
                                                          "visible": true,
                                                          "dataType": Immutable.Record {
                                                            "conceptURI": undefined,
                                                            "display": "Date Time",
                                                            "name": "dateTime",
                                                            "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                                                            "alternateRangeURI": "xsd:dateTime",
                                                            "shortDisplay": undefined,
                                                            "lookupSchema": undefined,
                                                            "lookupQuery": undefined,
                                                          },
                                                          "lookupQueryValue": undefined,
                                                          "lookupType": Immutable.Record {
                                                            "conceptURI": undefined,
                                                            "display": "Lookup",
                                                            "name": "lookup",
                                                            "rangeURI": "xsd:dateTime",
                                                            "alternateRangeURI": undefined,
                                                            "shortDisplay": undefined,
                                                            "lookupSchema": undefined,
                                                            "lookupQuery": undefined,
                                                          },
                                                          "original": {
                                                            "conceptURI": undefined,
                                                            "dataType": Immutable.Record {
                                                              "conceptURI": undefined,
                                                              "display": "Date Time",
                                                              "name": "dateTime",
                                                              "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                                                              "alternateRangeURI": "xsd:dateTime",
                                                              "shortDisplay": undefined,
                                                              "lookupSchema": undefined,
                                                              "lookupQuery": undefined,
                                                            },
                                                            "name": "field3",
                                                            "rangeURI": undefined,
                                                          },
                                                          "updatedField": false,
                                                          "isPrimaryKey": false,
                                                          "lockType": "NotLocked",
                                                          "wrappedColumnName": undefined,
                                                          "disablePhiLevel": false,
                                                          "lockExistingField": false,
                                                          "sourceOntology": undefined,
                                                          "conceptSubtree": undefined,
                                                          "conceptLabelColumn": undefined,
                                                          "conceptImportColumn": undefined,
                                                          "principalConceptCode": undefined,
                                                          "derivationDataScope": undefined,
                                                          "selected": false,
                                                          "scannable": false,
                                                        },
                                                      ],
                                                      "indices": Immutable.List [],
                                                      "domainException": undefined,
                                                      "mandatoryFieldNames": Immutable.List [],
                                                      "reservedFieldNames": Immutable.List [],
                                                      "newDesignFields": undefined,
                                                      "instructions": undefined,
                                                      "domainKindName": undefined,
                                                      "schemaName": undefined,
                                                      "queryName": undefined,
                                                    },
                                                  ],
                                                  "editableResults": true,
                                                  "editableRuns": true,
                                                  "exception": undefined,
                                                  "metadataInputFormatHelp": undefined,
                                                  "moduleTransformScripts": undefined,
                                                  "name": "Test Assay Protocol",
                                                  "plateMetadata": undefined,
                                                  "protocolId": 1,
                                                  "protocolParameters": undefined,
                                                  "protocolTransformScripts": undefined,
                                                  "providerName": undefined,
                                                  "saveScriptFiles": false,
                                                  "selectedDetectionMethod": undefined,
                                                  "selectedMetadataInputFormat": undefined,
                                                  "selectedPlateTemplate": undefined,
                                                  "status": "Active",
                                                  "qcEnabled": undefined,
                                                }
                                              }
                                              onChange={[Function]}
                                            >
                                              <Component
                                                appPropertiesOnly={false}
                                                colSize={9}
                                                helpTipBody={
                                                  <p>
                                                    The name for this assay design. Note that this can't be changed after the assay design is created.
                                                  </p>
                                                }
                                                label="Name"
                                                required={true}
                                              >
                                                <Row
                                                  bsClass="row"
                                                  className="margin-top"
                                                  componentClass="div"
                                                >
                                                  <div
                                                    className="margin-top row"
                                                  >
                                                    <Col
                                                      bsClass="col"
                                                      componentClass="div"
                                                      lg={4}
                                                      xs={3}
                                                    >
                                                      <div
                                                        className="col-lg-4 col-xs-3"
                                                      >
                                                        <DomainFieldLabel
                                                          helpTipBody={
                                                            <p>
                                                              The name for this assay design. Note that this can't be changed after the assay design is created.
                                                            </p>
                                                          }
                                                          label="Name"
                                                          required={true}
                                                        >
                                                          <span
                                                            className="domain-no-wrap"
                                                          >
                                                            Name
                                                            <Component
                                                              id="tooltip"
                                                              required={true}
                                                              title="Name"
                                                            >
                                                              <span
                                                                className="label-help-target"
                                                                onMouseOut={[Function]}
                                                                onMouseOver={[Function]}
                                                              >
                                                                <span
                                                                  className="label-help-icon fa fa-question-circle"
                                                                />
                                                                <Overlay
                                                                  animation={[Function]}
                                                                  placement="right"
                                                                  rootClose={false}
                                                                  show={false}
                                                                >
                                                                  <Overlay
                                                                    placement="right"
                                                                    rootClose={false}
                                                                    show={false}
                                                                    transition={[Function]}
                                                                  />
                                                                </Overlay>
                                                              </span>
                                                            </Component>
                                                             *
                                                          </span>
                                                        </DomainFieldLabel>
                                                      </div>
                                                    </Col>
                                                    <Col
                                                      bsClass="col"
                                                      componentClass="div"
                                                      lg={8}
                                                      xs={9}
                                                    >
                                                      <div
                                                        className="col-lg-8 col-xs-9"
                                                      >
                                                        <FormControl
                                                          bsClass="form-control"
                                                          componentClass="input"
                                                          disabled={true}
                                                          id="assay-design-name"
                                                          onChange={[Function]}
                                                          placeholder="Enter a name for this assay"
                                                          type="text"
                                                          value="Test Assay Protocol"
                                                        >
                                                          <input
                                                            className="form-control"
                                                            disabled={true}
                                                            id="assay-design-name"
                                                            onChange={[Function]}
                                                            placeholder="Enter a name for this assay"
                                                            type="text"
                                                            value="Test Assay Protocol"
                                                          />
                                                        </FormControl>
                                                      </div>
                                                    </Col>
                                                  </div>
                                                </Row>
                                              </Component>
                                            </NameInput>
                                            <DescriptionInput
                                              appPropertiesOnly={false}
                                              model={
                                                Immutable.Record {
                                                  "allowBackgroundUpload": true,
                                                  "allowEditableResults": true,
                                                  "allowQCStates": false,
                                                  "allowTransformationScript": false,
                                                  "allowPlateMetadata": false,
                                                  "autoCopyTargetContainer": undefined,
                                                  "autoCopyTargetContainerId": undefined,
                                                  "autoLinkCategory": undefined,
                                                  "availableDetectionMethods": undefined,
                                                  "availableMetadataInputFormats": undefined,
                                                  "availablePlateTemplates": undefined,
                                                  "backgroundUpload": true,
                                                  "description": "My assay protocol for you all to use.",
                                                  "domains": Immutable.List [
                                                    Immutable.Record {
                                                      "name": "Batch Fields",
                                                      "container": undefined,
                                                      "description": undefined,
                                                      "domainURI": undefined,
                                                      "domainId": null,
                                                      "allowFileLinkProperties": false,
                                                      "allowAttachmentProperties": false,
                                                      "allowFlagProperties": true,
                                                      "allowSampleSubjectProperties": true,
                                                      "allowTextChoiceProperties": true,
                                                      "allowTimepointProperties": false,
                                                      "showDefaultValueSettings": false,
                                                      "defaultDefaultValueType": undefined,
                                                      "defaultValueOptions": Immutable.List [],
                                                      "fields": Immutable.List [],
                                                      "indices": Immutable.List [],
                                                      "domainException": undefined,
                                                      "mandatoryFieldNames": Immutable.List [],
                                                      "reservedFieldNames": Immutable.List [],
                                                      "newDesignFields": undefined,
                                                      "instructions": undefined,
                                                      "domainKindName": undefined,
                                                      "schemaName": undefined,
                                                      "queryName": undefined,
                                                    },
                                                    Immutable.Record {
                                                      "name": "Sample Fields",
                                                      "container": undefined,
                                                      "description": undefined,
                                                      "domainURI": undefined,
                                                      "domainId": null,
                                                      "allowFileLinkProperties": false,
                                                      "allowAttachmentProperties": false,
                                                      "allowFlagProperties": true,
                                                      "allowSampleSubjectProperties": true,
                                                      "allowTextChoiceProperties": true,
                                                      "allowTimepointProperties": false,
                                                      "showDefaultValueSettings": false,
                                                      "defaultDefaultValueType": undefined,
                                                      "defaultValueOptions": Immutable.List [],
                                                      "fields": Immutable.List [
                                                        Immutable.Record {
                                                          "conceptURI": undefined,
                                                          "conditionalFormats": Immutable.List [],
                                                          "defaultScale": undefined,
                                                          "defaultValueType": undefined,
                                                          "defaultValue": undefined,
                                                          "defaultDisplayValue": undefined,
                                                          "description": undefined,
                                                          "dimension": undefined,
                                                          "excludeFromShifting": false,
                                                          "format": undefined,
                                                          "hidden": false,
                                                          "importAliases": undefined,
                                                          "label": undefined,
                                                          "lookupContainer": undefined,
                                                          "lookupQuery": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupValidator": undefined,
                                                          "measure": undefined,
                                                          "mvEnabled": false,
                                                          "name": "field1",
                                                          "PHI": undefined,
                                                          "propertyId": undefined,
                                                          "propertyURI": undefined,
                                                          "propertyValidators": Immutable.List [],
                                                          "rangeValidators": Immutable.List [],
                                                          "rangeURI": "xsd:string",
                                                          "regexValidators": Immutable.List [],
                                                          "textChoiceValidator": undefined,
                                                          "recommendedVariable": false,
                                                          "required": false,
                                                          "scale": 4000,
                                                          "URL": undefined,
                                                          "shownInDetailsView": true,
                                                          "shownInInsertView": true,
                                                          "shownInUpdateView": true,
                                                          "visible": true,
                                                          "dataType": Immutable.Record {
                                                            "conceptURI": undefined,
                                                            "display": "Text",
                                                            "name": "string",
                                                            "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                            "alternateRangeURI": "xsd:string",
                                                            "shortDisplay": "String",
                                                            "lookupSchema": undefined,
                                                            "lookupQuery": undefined,
                                                          },
                                                          "lookupQueryValue": undefined,
                                                          "lookupType": Immutable.Record {
                                                            "conceptURI": undefined,
                                                            "display": "Lookup",
                                                            "name": "lookup",
                                                            "rangeURI": "xsd:string",
                                                            "alternateRangeURI": undefined,
                                                            "shortDisplay": undefined,
                                                            "lookupSchema": undefined,
                                                            "lookupQuery": undefined,
                                                          },
                                                          "original": {
                                                            "conceptURI": undefined,
                                                            "dataType": Immutable.Record {
                                                              "conceptURI": undefined,
                                                              "display": "Text",
                                                              "name": "string",
                                                              "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                              "alternateRangeURI": "xsd:string",
                                                              "shortDisplay": "String",
                                                              "lookupSchema": undefined,
                                                              "lookupQuery": undefined,
                                                            },
                                                            "name": "field1",
                                                            "rangeURI": undefined,
                                                          },
                                                          "updatedField": false,
                                                          "isPrimaryKey": false,
                                                          "lockType": "NotLocked",
                                                          "wrappedColumnName": undefined,
                                                          "disablePhiLevel": false,
                                                          "lockExistingField": false,
                                                          "sourceOntology": undefined,
                                                          "conceptSubtree": undefined,
                                                          "conceptLabelColumn": undefined,
                                                          "conceptImportColumn": undefined,
                                                          "principalConceptCode": undefined,
                                                          "derivationDataScope": undefined,
                                                          "selected": false,
                                                          "scannable": false,
                                                        },
                                                        Immutable.Record {
                                                          "conceptURI": undefined,
                                                          "conditionalFormats": Immutable.List [],
                                                          "defaultScale": undefined,
                                                          "defaultValueType": undefined,
                                                          "defaultValue": undefined,
                                                          "defaultDisplayValue": undefined,
                                                          "description": undefined,
                                                          "dimension": undefined,
                                                          "excludeFromShifting": false,
                                                          "format": undefined,
                                                          "hidden": false,
                                                          "importAliases": undefined,
                                                          "label": undefined,
                                                          "lookupContainer": undefined,
                                                          "lookupQuery": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupValidator": undefined,
                                                          "measure": undefined,
                                                          "mvEnabled": false,
                                                          "name": "field2",
                                                          "PHI": undefined,
                                                          "propertyId": undefined,
                                                          "propertyURI": undefined,
                                                          "propertyValidators": Immutable.List [],
                                                          "rangeValidators": Immutable.List [],
                                                          "rangeURI": "xsd:int",
                                                          "regexValidators": Immutable.List [],
                                                          "textChoiceValidator": undefined,
                                                          "recommendedVariable": false,
                                                          "required": false,
                                                          "scale": 4000,
                                                          "URL": undefined,
                                                          "shownInDetailsView": true,
                                                          "shownInInsertView": true,
                                                          "shownInUpdateView": true,
                                                          "visible": true,
                                                          "dataType": Immutable.Record {
                                                            "conceptURI": undefined,
                                                            "display": "Integer",
                                                            "name": "int",
                                                            "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                                            "alternateRangeURI": "xsd:int",
                                                            "shortDisplay": undefined,
                                                            "lookupSchema": undefined,
                                                            "lookupQuery": undefined,
                                                          },
                                                          "lookupQueryValue": undefined,
                                                          "lookupType": Immutable.Record {
                                                            "conceptURI": undefined,
                                                            "display": "Lookup",
                                                            "name": "lookup",
                                                            "rangeURI": "xsd:int",
                                                            "alternateRangeURI": undefined,
                                                            "shortDisplay": undefined,
                                                            "lookupSchema": undefined,
                                                            "lookupQuery": undefined,
                                                          },
                                                          "original": {
                                                            "conceptURI": undefined,
                                                            "dataType": Immutable.Record {
                                                              "conceptURI": undefined,
                                                              "display": "Integer",
                                                              "name": "int",
                                                              "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                                              "alternateRangeURI": "xsd:int",
                                                              "shortDisplay": undefined,
                                                              "lookupSchema": undefined,
                                                              "lookupQuery": undefined,
                                                            },
                                                            "name": "field2",
                                                            "rangeURI": undefined,
                                                          },
                                                          "updatedField": false,
                                                          "isPrimaryKey": false,
                                                          "lockType": "NotLocked",
                                                          "wrappedColumnName": undefined,
                                                          "disablePhiLevel": false,
                                                          "lockExistingField": false,
                                                          "sourceOntology": undefined,
                                                          "conceptSubtree": undefined,
                                                          "conceptLabelColumn": undefined,
                                                          "conceptImportColumn": undefined,
                                                          "principalConceptCode": undefined,
                                                          "derivationDataScope": undefined,
                                                          "selected": false,
                                                          "scannable": false,
                                                        },
                                                        Immutable.Record {
                                                          "conceptURI": undefined,
                                                          "conditionalFormats": Immutable.List [],
                                                          "defaultScale": undefined,
                                                          "defaultValueType": undefined,
                                                          "defaultValue": undefined,
                                                          "defaultDisplayValue": undefined,
                                                          "description": undefined,
                                                          "dimension": undefined,
                                                          "excludeFromShifting": false,
                                                          "format": undefined,
                                                          "hidden": false,
                                                          "importAliases": undefined,
                                                          "label": undefined,
                                                          "lookupContainer": undefined,
                                                          "lookupQuery": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupValidator": undefined,
                                                          "measure": undefined,
                                                          "mvEnabled": false,
                                                          "name": "field3",
                                                          "PHI": undefined,
                                                          "propertyId": undefined,
                                                          "propertyURI": undefined,
                                                          "propertyValidators": Immutable.List [],
                                                          "rangeValidators": Immutable.List [],
                                                          "rangeURI": "xsd:dateTime",
                                                          "regexValidators": Immutable.List [],
                                                          "textChoiceValidator": undefined,
                                                          "recommendedVariable": false,
                                                          "required": false,
                                                          "scale": 4000,
                                                          "URL": undefined,
                                                          "shownInDetailsView": true,
                                                          "shownInInsertView": true,
                                                          "shownInUpdateView": true,
                                                          "visible": true,
                                                          "dataType": Immutable.Record {
                                                            "conceptURI": undefined,
                                                            "display": "Date Time",
                                                            "name": "dateTime",
                                                            "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                                                            "alternateRangeURI": "xsd:dateTime",
                                                            "shortDisplay": undefined,
                                                            "lookupSchema": undefined,
                                                            "lookupQuery": undefined,
                                                          },
                                                          "lookupQueryValue": undefined,
                                                          "lookupType": Immutable.Record {
                                                            "conceptURI": undefined,
                                                            "display": "Lookup",
                                                            "name": "lookup",
                                                            "rangeURI": "xsd:dateTime",
                                                            "alternateRangeURI": undefined,
                                                            "shortDisplay": undefined,
                                                            "lookupSchema": undefined,
                                                            "lookupQuery": undefined,
                                                          },
                                                          "original": {
                                                            "conceptURI": undefined,
                                                            "dataType": Immutable.Record {
                                                              "conceptURI": undefined,
                                                              "display": "Date Time",
                                                              "name": "dateTime",
                                                              "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                                                              "alternateRangeURI": "xsd:dateTime",
                                                              "shortDisplay": undefined,
                                                              "lookupSchema": undefined,
                                                              "lookupQuery": undefined,
                                                            },
                                                            "name": "field3",
                                                            "rangeURI": undefined,
                                                          },
                                                          "updatedField": false,
                                                          "isPrimaryKey": false,
                                                          "lockType": "NotLocked",
                                                          "wrappedColumnName": undefined,
                                                          "disablePhiLevel": false,
                                                          "lockExistingField": false,
                                                          "sourceOntology": undefined,
                                                          "conceptSubtree": undefined,
                                                          "conceptLabelColumn": undefined,
                                                          "conceptImportColumn": undefined,
                                                          "principalConceptCode": undefined,
                                                          "derivationDataScope": undefined,
                                                          "selected": false,
                                                          "scannable": false,
                                                        },
                                                      ],
                                                      "indices": Immutable.List [],
                                                      "domainException": undefined,
                                                      "mandatoryFieldNames": Immutable.List [],
                                                      "reservedFieldNames": Immutable.List [],
                                                      "newDesignFields": undefined,
                                                      "instructions": undefined,
                                                      "domainKindName": undefined,
                                                      "schemaName": undefined,
                                                      "queryName": undefined,
                                                    },
                                                  ],
                                                  "editableResults": true,
                                                  "editableRuns": true,
                                                  "exception": undefined,
                                                  "metadataInputFormatHelp": undefined,
                                                  "moduleTransformScripts": undefined,
                                                  "name": "Test Assay Protocol",
                                                  "plateMetadata": undefined,
                                                  "protocolId": 1,
                                                  "protocolParameters": undefined,
                                                  "protocolTransformScripts": undefined,
                                                  "providerName": undefined,
                                                  "saveScriptFiles": false,
                                                  "selectedDetectionMethod": undefined,
                                                  "selectedMetadataInputFormat": undefined,
                                                  "selectedPlateTemplate": undefined,
                                                  "status": "Active",
                                                  "qcEnabled": undefined,
                                                }
                                              }
                                              onChange={[Function]}
                                            >
                                              <Component
                                                appPropertiesOnly={false}
                                                colSize={9}
                                                helpTipBody={
                                                  <p>
                                                    A short description for this assay design.
                                                  </p>
                                                }
                                                label="Description"
                                              >
                                                <Row
                                                  bsClass="row"
                                                  className="margin-top"
                                                  componentClass="div"
                                                >
                                                  <div
                                                    className="margin-top row"
                                                  >
                                                    <Col
                                                      bsClass="col"
                                                      componentClass="div"
                                                      lg={4}
                                                      xs={3}
                                                    >
                                                      <div
                                                        className="col-lg-4 col-xs-3"
                                                      >
                                                        <DomainFieldLabel
                                                          helpTipBody={
                                                            <p>
                                                              A short description for this assay design.
                                                            </p>
                                                          }
                                                          label="Description"
                                                        >
                                                          <span
                                                            className="domain-no-wrap"
                                                          >
                                                            Description
                                                            <Component
                                                              id="tooltip"
                                                              title="Description"
                                                            >
                                                              <span
                                                                className="label-help-target"
                                                                onMouseOut={[Function]}
                                                                onMouseOver={[Function]}
                                                              >
                                                                <span
                                                                  className="label-help-icon fa fa-question-circle"
                                                                />
                                                                <Overlay
                                                                  animation={[Function]}
                                                                  placement="right"
                                                                  rootClose={false}
                                                                  show={false}
                                                                >
                                                                  <Overlay
                                                                    placement="right"
                                                                    rootClose={false}
                                                                    show={false}
                                                                    transition={[Function]}
                                                                  />
                                                                </Overlay>
                                                              </span>
                                                            </Component>
                                                          </span>
                                                        </DomainFieldLabel>
                                                      </div>
                                                    </Col>
                                                    <Col
                                                      bsClass="col"
                                                      componentClass="div"
                                                      lg={8}
                                                      xs={9}
                                                    >
                                                      <div
                                                        className="col-lg-8 col-xs-9"
                                                      >
                                                        <textarea
                                                          className="form-control textarea-noresize"
                                                          id="assay-design-description"
                                                          onChange={[Function]}
                                                          value="My assay protocol for you all to use."
                                                        />
                                                      </div>
                                                    </Col>
                                                  </div>
                                                </Row>
                                              </Component>
                                            </DescriptionInput>
                                          </div>
                                          <div
                                            className="domain-field-padding-bottom"
                                          >
                                            <SectionHeading
                                              title="Editing Settings"
                                            >
                                              <div
                                                className="domain-field-section-heading"
                                              >
                                                Editing Settings
                                              </div>
                                            </SectionHeading>
                                            <EditableRunsInput
                                              appPropertiesOnly={false}
                                              model={
                                                Immutable.Record {
                                                  "allowBackgroundUpload": true,
                                                  "allowEditableResults": true,
                                                  "allowQCStates": false,
                                                  "allowTransformationScript": false,
                                                  "allowPlateMetadata": false,
                                                  "autoCopyTargetContainer": undefined,
                                                  "autoCopyTargetContainerId": undefined,
                                                  "autoLinkCategory": undefined,
                                                  "availableDetectionMethods": undefined,
                                                  "availableMetadataInputFormats": undefined,
                                                  "availablePlateTemplates": undefined,
                                                  "backgroundUpload": true,
                                                  "description": "My assay protocol for you all to use.",
                                                  "domains": Immutable.List [
                                                    Immutable.Record {
                                                      "name": "Batch Fields",
                                                      "container": undefined,
                                                      "description": undefined,
                                                      "domainURI": undefined,
                                                      "domainId": null,
                                                      "allowFileLinkProperties": false,
                                                      "allowAttachmentProperties": false,
                                                      "allowFlagProperties": true,
                                                      "allowSampleSubjectProperties": true,
                                                      "allowTextChoiceProperties": true,
                                                      "allowTimepointProperties": false,
                                                      "showDefaultValueSettings": false,
                                                      "defaultDefaultValueType": undefined,
                                                      "defaultValueOptions": Immutable.List [],
                                                      "fields": Immutable.List [],
                                                      "indices": Immutable.List [],
                                                      "domainException": undefined,
                                                      "mandatoryFieldNames": Immutable.List [],
                                                      "reservedFieldNames": Immutable.List [],
                                                      "newDesignFields": undefined,
                                                      "instructions": undefined,
                                                      "domainKindName": undefined,
                                                      "schemaName": undefined,
                                                      "queryName": undefined,
                                                    },
                                                    Immutable.Record {
                                                      "name": "Sample Fields",
                                                      "container": undefined,
                                                      "description": undefined,
                                                      "domainURI": undefined,
                                                      "domainId": null,
                                                      "allowFileLinkProperties": false,
                                                      "allowAttachmentProperties": false,
                                                      "allowFlagProperties": true,
                                                      "allowSampleSubjectProperties": true,
                                                      "allowTextChoiceProperties": true,
                                                      "allowTimepointProperties": false,
                                                      "showDefaultValueSettings": false,
                                                      "defaultDefaultValueType": undefined,
                                                      "defaultValueOptions": Immutable.List [],
                                                      "fields": Immutable.List [
                                                        Immutable.Record {
                                                          "conceptURI": undefined,
                                                          "conditionalFormats": Immutable.List [],
                                                          "defaultScale": undefined,
                                                          "defaultValueType": undefined,
                                                          "defaultValue": undefined,
                                                          "defaultDisplayValue": undefined,
                                                          "description": undefined,
                                                          "dimension": undefined,
                                                          "excludeFromShifting": false,
                                                          "format": undefined,
                                                          "hidden": false,
                                                          "importAliases": undefined,
                                                          "label": undefined,
                                                          "lookupContainer": undefined,
                                                          "lookupQuery": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupValidator": undefined,
                                                          "measure": undefined,
                                                          "mvEnabled": false,
                                                          "name": "field1",
                                                          "PHI": undefined,
                                                          "propertyId": undefined,
                                                          "propertyURI": undefined,
                                                          "propertyValidators": Immutable.List [],
                                                          "rangeValidators": Immutable.List [],
                                                          "rangeURI": "xsd:string",
                                                          "regexValidators": Immutable.List [],
                                                          "textChoiceValidator": undefined,
                                                          "recommendedVariable": false,
                                                          "required": false,
                                                          "scale": 4000,
                                                          "URL": undefined,
                                                          "shownInDetailsView": true,
                                                          "shownInInsertView": true,
                                                          "shownInUpdateView": true,
                                                          "visible": true,
                                                          "dataType": Immutable.Record {
                                                            "conceptURI": undefined,
                                                            "display": "Text",
                                                            "name": "string",
                                                            "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                            "alternateRangeURI": "xsd:string",
                                                            "shortDisplay": "String",
                                                            "lookupSchema": undefined,
                                                            "lookupQuery": undefined,
                                                          },
                                                          "lookupQueryValue": undefined,
                                                          "lookupType": Immutable.Record {
                                                            "conceptURI": undefined,
                                                            "display": "Lookup",
                                                            "name": "lookup",
                                                            "rangeURI": "xsd:string",
                                                            "alternateRangeURI": undefined,
                                                            "shortDisplay": undefined,
                                                            "lookupSchema": undefined,
                                                            "lookupQuery": undefined,
                                                          },
                                                          "original": {
                                                            "conceptURI": undefined,
                                                            "dataType": Immutable.Record {
                                                              "conceptURI": undefined,
                                                              "display": "Text",
                                                              "name": "string",
                                                              "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                              "alternateRangeURI": "xsd:string",
                                                              "shortDisplay": "String",
                                                              "lookupSchema": undefined,
                                                              "lookupQuery": undefined,
                                                            },
                                                            "name": "field1",
                                                            "rangeURI": undefined,
                                                          },
                                                          "updatedField": false,
                                                          "isPrimaryKey": false,
                                                          "lockType": "NotLocked",
                                                          "wrappedColumnName": undefined,
                                                          "disablePhiLevel": false,
                                                          "lockExistingField": false,
                                                          "sourceOntology": undefined,
                                                          "conceptSubtree": undefined,
                                                          "conceptLabelColumn": undefined,
                                                          "conceptImportColumn": undefined,
                                                          "principalConceptCode": undefined,
                                                          "derivationDataScope": undefined,
                                                          "selected": false,
                                                          "scannable": false,
                                                        },
                                                        Immutable.Record {
                                                          "conceptURI": undefined,
                                                          "conditionalFormats": Immutable.List [],
                                                          "defaultScale": undefined,
                                                          "defaultValueType": undefined,
                                                          "defaultValue": undefined,
                                                          "defaultDisplayValue": undefined,
                                                          "description": undefined,
                                                          "dimension": undefined,
                                                          "excludeFromShifting": false,
                                                          "format": undefined,
                                                          "hidden": false,
                                                          "importAliases": undefined,
                                                          "label": undefined,
                                                          "lookupContainer": undefined,
                                                          "lookupQuery": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupValidator": undefined,
                                                          "measure": undefined,
                                                          "mvEnabled": false,
                                                          "name": "field2",
                                                          "PHI": undefined,
                                                          "propertyId": undefined,
                                                          "propertyURI": undefined,
                                                          "propertyValidators": Immutable.List [],
                                                          "rangeValidators": Immutable.List [],
                                                          "rangeURI": "xsd:int",
                                                          "regexValidators": Immutable.List [],
                                                          "textChoiceValidator": undefined,
                                                          "recommendedVariable": false,
                                                          "required": false,
                                                          "scale": 4000,
                                                          "URL": undefined,
                                                          "shownInDetailsView": true,
                                                          "shownInInsertView": true,
                                                          "shownInUpdateView": true,
                                                          "visible": true,
                                                          "dataType": Immutable.Record {
                                                            "conceptURI": undefined,
                                                            "display": "Integer",
                                                            "name": "int",
                                                            "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                                            "alternateRangeURI": "xsd:int",
                                                            "shortDisplay": undefined,
                                                            "lookupSchema": undefined,
                                                            "lookupQuery": undefined,
                                                          },
                                                          "lookupQueryValue": undefined,
                                                          "lookupType": Immutable.Record {
                                                            "conceptURI": undefined,
                                                            "display": "Lookup",
                                                            "name": "lookup",
                                                            "rangeURI": "xsd:int",
                                                            "alternateRangeURI": undefined,
                                                            "shortDisplay": undefined,
                                                            "lookupSchema": undefined,
                                                            "lookupQuery": undefined,
                                                          },
                                                          "original": {
                                                            "conceptURI": undefined,
                                                            "dataType": Immutable.Record {
                                                              "conceptURI": undefined,
                                                              "display": "Integer",
                                                              "name": "int",
                                                              "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                                              "alternateRangeURI": "xsd:int",
                                                              "shortDisplay": undefined,
                                                              "lookupSchema": undefined,
                                                              "lookupQuery": undefined,
                                                            },
                                                            "name": "field2",
                                                            "rangeURI": undefined,
                                                          },
                                                          "updatedField": false,
                                                          "isPrimaryKey": false,
                                                          "lockType": "NotLocked",
                                                          "wrappedColumnName": undefined,
                                                          "disablePhiLevel": false,
                                                          "lockExistingField": false,
                                                          "sourceOntology": undefined,
                                                          "conceptSubtree": undefined,
                                                          "conceptLabelColumn": undefined,
                                                          "conceptImportColumn": undefined,
                                                          "principalConceptCode": undefined,
                                                          "derivationDataScope": undefined,
                                                          "selected": false,
                                                          "scannable": false,
                                                        },
                                                        Immutable.Record {
                                                          "conceptURI": undefined,
                                                          "conditionalFormats": Immutable.List [],
                                                          "defaultScale": undefined,
                                                          "defaultValueType": undefined,
                                                          "defaultValue": undefined,
                                                          "defaultDisplayValue": undefined,
                                                          "description": undefined,
                                                          "dimension": undefined,
                                                          "excludeFromShifting": false,
                                                          "format": undefined,
                                                          "hidden": false,
                                                          "importAliases": undefined,
                                                          "label": undefined,
                                                          "lookupContainer": undefined,
                                                          "lookupQuery": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupValidator": undefined,
                                                          "measure": undefined,
                                                          "mvEnabled": false,
                                                          "name": "field3",
                                                          "PHI": undefined,
                                                          "propertyId": undefined,
                                                          "propertyURI": undefined,
                                                          "propertyValidators": Immutable.List [],
                                                          "rangeValidators": Immutable.List [],
                                                          "rangeURI": "xsd:dateTime",
                                                          "regexValidators": Immutable.List [],
                                                          "textChoiceValidator": undefined,
                                                          "recommendedVariable": false,
                                                          "required": false,
                                                          "scale": 4000,
                                                          "URL": undefined,
                                                          "shownInDetailsView": true,
                                                          "shownInInsertView": true,
                                                          "shownInUpdateView": true,
                                                          "visible": true,
                                                          "dataType": Immutable.Record {
                                                            "conceptURI": undefined,
                                                            "display": "Date Time",
                                                            "name": "dateTime",
                                                            "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                                                            "alternateRangeURI": "xsd:dateTime",
                                                            "shortDisplay": undefined,
                                                            "lookupSchema": undefined,
                                                            "lookupQuery": undefined,
                                                          },
                                                          "lookupQueryValue": undefined,
                                                          "lookupType": Immutable.Record {
                                                            "conceptURI": undefined,
                                                            "display": "Lookup",
                                                            "name": "lookup",
                                                            "rangeURI": "xsd:dateTime",
                                                            "alternateRangeURI": undefined,
                                                            "shortDisplay": undefined,
                                                            "lookupSchema": undefined,
                                                            "lookupQuery": undefined,
                                                          },
                                                          "original": {
                                                            "conceptURI": undefined,
                                                            "dataType": Immutable.Record {
                                                              "conceptURI": undefined,
                                                              "display": "Date Time",
                                                              "name": "dateTime",
                                                              "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                                                              "alternateRangeURI": "xsd:dateTime",
                                                              "shortDisplay": undefined,
                                                              "lookupSchema": undefined,
                                                              "lookupQuery": undefined,
                                                            },
                                                            "name": "field3",
                                                            "rangeURI": undefined,
                                                          },
                                                          "updatedField": false,
                                                          "isPrimaryKey": false,
                                                          "lockType": "NotLocked",
                                                          "wrappedColumnName": undefined,
                                                          "disablePhiLevel": false,
                                                          "lockExistingField": false,
                                                          "sourceOntology": undefined,
                                                          "conceptSubtree": undefined,
                                                          "conceptLabelColumn": undefined,
                                                          "conceptImportColumn": undefined,
                                                          "principalConceptCode": undefined,
                                                          "derivationDataScope": undefined,
                                                          "selected": false,
                                                          "scannable": false,
                                                        },
                                                      ],
                                                      "indices": Immutable.List [],
                                                      "domainException": undefined,
                                                      "mandatoryFieldNames": Immutable.List [],
                                                      "reservedFieldNames": Immutable.List [],
                                                      "newDesignFields": undefined,
                                                      "instructions": undefined,
                                                      "domainKindName": undefined,
                                                      "schemaName": undefined,
                                                      "queryName": undefined,
                                                    },
                                                  ],
                                                  "editableResults": true,
                                                  "editableRuns": true,
                                                  "exception": undefined,
                                                  "metadataInputFormatHelp": undefined,
                                                  "moduleTransformScripts": undefined,
                                                  "name": "Test Assay Protocol",
                                                  "plateMetadata": undefined,
                                                  "protocolId": 1,
                                                  "protocolParameters": undefined,
                                                  "protocolTransformScripts": undefined,
                                                  "providerName": undefined,
                                                  "saveScriptFiles": false,
                                                  "selectedDetectionMethod": undefined,
                                                  "selectedMetadataInputFormat": undefined,
                                                  "selectedPlateTemplate": undefined,
                                                  "status": "Active",
                                                  "qcEnabled": undefined,
                                                }
                                              }
                                              onChange={[Function]}
                                            >
                                              <Component
                                                appPropertiesOnly={false}
                                                colSize={9}
                                                helpTipBody={
                                                  <p>
                                                    If enabled, users with sufficient permissions can edit values at the run level after the initial import is complete. These changes will be audited.
                                                  </p>
                                                }
                                                label="Editable Runs"
                                              >
                                                <Row
                                                  bsClass="row"
                                                  className="margin-top"
                                                  componentClass="div"
                                                >
                                                  <div
                                                    className="margin-top row"
                                                  >
                                                    <Col
                                                      bsClass="col"
                                                      componentClass="div"
                                                      lg={4}
                                                      xs={3}
                                                    >
                                                      <div
                                                        className="col-lg-4 col-xs-3"
                                                      >
                                                        <DomainFieldLabel
                                                          helpTipBody={
                                                            <p>
                                                              If enabled, users with sufficient permissions can edit values at the run level after the initial import is complete. These changes will be audited.
                                                            </p>
                                                          }
                                                          label="Editable Runs"
                                                        >
                                                          Editable 
                                                          <span
                                                            className="domain-no-wrap"
                                                          >
                                                            Runs
                                                            <Component
                                                              id="tooltip"
                                                              title="Editable Runs"
                                                            >
                                                              <span
                                                                className="label-help-target"
                                                                onMouseOut={[Function]}
                                                                onMouseOver={[Function]}
                                                              >
                                                                <span
                                                                  className="label-help-icon fa fa-question-circle"
                                                                />
                                                                <Overlay
                                                                  animation={[Function]}
                                                                  placement="right"
                                                                  rootClose={false}
                                                                  show={false}
                                                                >
                                                                  <Overlay
                                                                    placement="right"
                                                                    rootClose={false}
                                                                    show={false}
                                                                    transition={[Function]}
                                                                  />
                                                                </Overlay>
                                                              </span>
                                                            </Component>
                                                          </span>
                                                        </DomainFieldLabel>
                                                      </div>
                                                    </Col>
                                                    <Col
                                                      bsClass="col"
                                                      componentClass="div"
                                                      lg={8}
                                                      xs={9}
                                                    >
                                                      <div
                                                        className="col-lg-8 col-xs-9"
                                                      >
                                                        <input
                                                          checked={true}
                                                          id="assay-design-editableRuns"
                                                          onChange={[Function]}
                                                          type="checkbox"
                                                        />
                                                      </div>
                                                    </Col>
                                                  </div>
                                                </Row>
                                              </Component>
                                            </EditableRunsInput>
                                            <EditableResultsInput
                                              appPropertiesOnly={false}
                                              model={
                                                Immutable.Record {
                                                  "allowBackgroundUpload": true,
                                                  "allowEditableResults": true,
                                                  "allowQCStates": false,
                                                  "allowTransformationScript": false,
                                                  "allowPlateMetadata": false,
                                                  "autoCopyTargetContainer": undefined,
                                                  "autoCopyTargetContainerId": undefined,
                                                  "autoLinkCategory": undefined,
                                                  "availableDetectionMethods": undefined,
                                                  "availableMetadataInputFormats": undefined,
                                                  "availablePlateTemplates": undefined,
                                                  "backgroundUpload": true,
                                                  "description": "My assay protocol for you all to use.",
                                                  "domains": Immutable.List [
                                                    Immutable.Record {
                                                      "name": "Batch Fields",
                                                      "container": undefined,
                                                      "description": undefined,
                                                      "domainURI": undefined,
                                                      "domainId": null,
                                                      "allowFileLinkProperties": false,
                                                      "allowAttachmentProperties": false,
                                                      "allowFlagProperties": true,
                                                      "allowSampleSubjectProperties": true,
                                                      "allowTextChoiceProperties": true,
                                                      "allowTimepointProperties": false,
                                                      "showDefaultValueSettings": false,
                                                      "defaultDefaultValueType": undefined,
                                                      "defaultValueOptions": Immutable.List [],
                                                      "fields": Immutable.List [],
                                                      "indices": Immutable.List [],
                                                      "domainException": undefined,
                                                      "mandatoryFieldNames": Immutable.List [],
                                                      "reservedFieldNames": Immutable.List [],
                                                      "newDesignFields": undefined,
                                                      "instructions": undefined,
                                                      "domainKindName": undefined,
                                                      "schemaName": undefined,
                                                      "queryName": undefined,
                                                    },
                                                    Immutable.Record {
                                                      "name": "Sample Fields",
                                                      "container": undefined,
                                                      "description": undefined,
                                                      "domainURI": undefined,
                                                      "domainId": null,
                                                      "allowFileLinkProperties": false,
                                                      "allowAttachmentProperties": false,
                                                      "allowFlagProperties": true,
                                                      "allowSampleSubjectProperties": true,
                                                      "allowTextChoiceProperties": true,
                                                      "allowTimepointProperties": false,
                                                      "showDefaultValueSettings": false,
                                                      "defaultDefaultValueType": undefined,
                                                      "defaultValueOptions": Immutable.List [],
                                                      "fields": Immutable.List [
                                                        Immutable.Record {
                                                          "conceptURI": undefined,
                                                          "conditionalFormats": Immutable.List [],
                                                          "defaultScale": undefined,
                                                          "defaultValueType": undefined,
                                                          "defaultValue": undefined,
                                                          "defaultDisplayValue": undefined,
                                                          "description": undefined,
                                                          "dimension": undefined,
                                                          "excludeFromShifting": false,
                                                          "format": undefined,
                                                          "hidden": false,
                                                          "importAliases": undefined,
                                                          "label": undefined,
                                                          "lookupContainer": undefined,
                                                          "lookupQuery": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupValidator": undefined,
                                                          "measure": undefined,
                                                          "mvEnabled": false,
                                                          "name": "field1",
                                                          "PHI": undefined,
                                                          "propertyId": undefined,
                                                          "propertyURI": undefined,
                                                          "propertyValidators": Immutable.List [],
                                                          "rangeValidators": Immutable.List [],
                                                          "rangeURI": "xsd:string",
                                                          "regexValidators": Immutable.List [],
                                                          "textChoiceValidator": undefined,
                                                          "recommendedVariable": false,
                                                          "required": false,
                                                          "scale": 4000,
                                                          "URL": undefined,
                                                          "shownInDetailsView": true,
                                                          "shownInInsertView": true,
                                                          "shownInUpdateView": true,
                                                          "visible": true,
                                                          "dataType": Immutable.Record {
                                                            "conceptURI": undefined,
                                                            "display": "Text",
                                                            "name": "string",
                                                            "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                            "alternateRangeURI": "xsd:string",
                                                            "shortDisplay": "String",
                                                            "lookupSchema": undefined,
                                                            "lookupQuery": undefined,
                                                          },
                                                          "lookupQueryValue": undefined,
                                                          "lookupType": Immutable.Record {
                                                            "conceptURI": undefined,
                                                            "display": "Lookup",
                                                            "name": "lookup",
                                                            "rangeURI": "xsd:string",
                                                            "alternateRangeURI": undefined,
                                                            "shortDisplay": undefined,
                                                            "lookupSchema": undefined,
                                                            "lookupQuery": undefined,
                                                          },
                                                          "original": {
                                                            "conceptURI": undefined,
                                                            "dataType": Immutable.Record {
                                                              "conceptURI": undefined,
                                                              "display": "Text",
                                                              "name": "string",
                                                              "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                              "alternateRangeURI": "xsd:string",
                                                              "shortDisplay": "String",
                                                              "lookupSchema": undefined,
                                                              "lookupQuery": undefined,
                                                            },
                                                            "name": "field1",
                                                            "rangeURI": undefined,
                                                          },
                                                          "updatedField": false,
                                                          "isPrimaryKey": false,
                                                          "lockType": "NotLocked",
                                                          "wrappedColumnName": undefined,
                                                          "disablePhiLevel": false,
                                                          "lockExistingField": false,
                                                          "sourceOntology": undefined,
                                                          "conceptSubtree": undefined,
                                                          "conceptLabelColumn": undefined,
                                                          "conceptImportColumn": undefined,
                                                          "principalConceptCode": undefined,
                                                          "derivationDataScope": undefined,
                                                          "selected": false,
                                                          "scannable": false,
                                                        },
                                                        Immutable.Record {
                                                          "conceptURI": undefined,
                                                          "conditionalFormats": Immutable.List [],
                                                          "defaultScale": undefined,
                                                          "defaultValueType": undefined,
                                                          "defaultValue": undefined,
                                                          "defaultDisplayValue": undefined,
                                                          "description": undefined,
                                                          "dimension": undefined,
                                                          "excludeFromShifting": false,
                                                          "format": undefined,
                                                          "hidden": false,
                                                          "importAliases": undefined,
                                                          "label": undefined,
                                                          "lookupContainer": undefined,
                                                          "lookupQuery": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupValidator": undefined,
                                                          "measure": undefined,
                                                          "mvEnabled": false,
                                                          "name": "field2",
                                                          "PHI": undefined,
                                                          "propertyId": undefined,
                                                          "propertyURI": undefined,
                                                          "propertyValidators": Immutable.List [],
                                                          "rangeValidators": Immutable.List [],
                                                          "rangeURI": "xsd:int",
                                                          "regexValidators": Immutable.List [],
                                                          "textChoiceValidator": undefined,
                                                          "recommendedVariable": false,
                                                          "required": false,
                                                          "scale": 4000,
                                                          "URL": undefined,
                                                          "shownInDetailsView": true,
                                                          "shownInInsertView": true,
                                                          "shownInUpdateView": true,
                                                          "visible": true,
                                                          "dataType": Immutable.Record {
                                                            "conceptURI": undefined,
                                                            "display": "Integer",
                                                            "name": "int",
                                                            "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                                            "alternateRangeURI": "xsd:int",
                                                            "shortDisplay": undefined,
                                                            "lookupSchema": undefined,
                                                            "lookupQuery": undefined,
                                                          },
                                                          "lookupQueryValue": undefined,
                                                          "lookupType": Immutable.Record {
                                                            "conceptURI": undefined,
                                                            "display": "Lookup",
                                                            "name": "lookup",
                                                            "rangeURI": "xsd:int",
                                                            "alternateRangeURI": undefined,
                                                            "shortDisplay": undefined,
                                                            "lookupSchema": undefined,
                                                            "lookupQuery": undefined,
                                                          },
                                                          "original": {
                                                            "conceptURI": undefined,
                                                            "dataType": Immutable.Record {
                                                              "conceptURI": undefined,
                                                              "display": "Integer",
                                                              "name": "int",
                                                              "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                                              "alternateRangeURI": "xsd:int",
                                                              "shortDisplay": undefined,
                                                              "lookupSchema": undefined,
                                                              "lookupQuery": undefined,
                                                            },
                                                            "name": "field2",
                                                            "rangeURI": undefined,
                                                          },
                                                          "updatedField": false,
                                                          "isPrimaryKey": false,
                                                          "lockType": "NotLocked",
                                                          "wrappedColumnName": undefined,
                                                          "disablePhiLevel": false,
                                                          "lockExistingField": false,
                                                          "sourceOntology": undefined,
                                                          "conceptSubtree": undefined,
                                                          "conceptLabelColumn": undefined,
                                                          "conceptImportColumn": undefined,
                                                          "principalConceptCode": undefined,
                                                          "derivationDataScope": undefined,
                                                          "selected": false,
                                                          "scannable": false,
                                                        },
                                                        Immutable.Record {
                                                          "conceptURI": undefined,
                                                          "conditionalFormats": Immutable.List [],
                                                          "defaultScale": undefined,
                                                          "defaultValueType": undefined,
                                                          "defaultValue": undefined,
                                                          "defaultDisplayValue": undefined,
                                                          "description": undefined,
                                                          "dimension": undefined,
                                                          "excludeFromShifting": false,
                                                          "format": undefined,
                                                          "hidden": false,
                                                          "importAliases": undefined,
                                                          "label": undefined,
                                                          "lookupContainer": undefined,
                                                          "lookupQuery": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupValidator": undefined,
                                                          "measure": undefined,
                                                          "mvEnabled": false,
                                                          "name": "field3",
                                                          "PHI": undefined,
                                                          "propertyId": undefined,
                                                          "propertyURI": undefined,
                                                          "propertyValidators": Immutable.List [],
                                                          "rangeValidators": Immutable.List [],
                                                          "rangeURI": "xsd:dateTime",
                                                          "regexValidators": Immutable.List [],
                                                          "textChoiceValidator": undefined,
                                                          "recommendedVariable": false,
                                                          "required": false,
                                                          "scale": 4000,
                                                          "URL": undefined,
                                                          "shownInDetailsView": true,
                                                          "shownInInsertView": true,
                                                          "shownInUpdateView": true,
                                                          "visible": true,
                                                          "dataType": Immutable.Record {
                                                            "conceptURI": undefined,
                                                            "display": "Date Time",
                                                            "name": "dateTime",
                                                            "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                                                            "alternateRangeURI": "xsd:dateTime",
                                                            "shortDisplay": undefined,
                                                            "lookupSchema": undefined,
                                                            "lookupQuery": undefined,
                                                          },
                                                          "lookupQueryValue": undefined,
                                                          "lookupType": Immutable.Record {
                                                            "conceptURI": undefined,
                                                            "display": "Lookup",
                                                            "name": "lookup",
                                                            "rangeURI": "xsd:dateTime",
                                                            "alternateRangeURI": undefined,
                                                            "shortDisplay": undefined,
                                                            "lookupSchema": undefined,
                                                            "lookupQuery": undefined,
                                                          },
                                                          "original": {
                                                            "conceptURI": undefined,
                                                            "dataType": Immutable.Record {
                                                              "conceptURI": undefined,
                                                              "display": "Date Time",
                                                              "name": "dateTime",
                                                              "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                                                              "alternateRangeURI": "xsd:dateTime",
                                                              "shortDisplay": undefined,
                                                              "lookupSchema": undefined,
                                                              "lookupQuery": undefined,
                                                            },
                                                            "name": "field3",
                                                            "rangeURI": undefined,
                                                          },
                                                          "updatedField": false,
                                                          "isPrimaryKey": false,
                                                          "lockType": "NotLocked",
                                                          "wrappedColumnName": undefined,
                                                          "disablePhiLevel": false,
                                                          "lockExistingField": false,
                                                          "sourceOntology": undefined,
                                                          "conceptSubtree": undefined,
                                                          "conceptLabelColumn": undefined,
                                                          "conceptImportColumn": undefined,
                                                          "principalConceptCode": undefined,
                                                          "derivationDataScope": undefined,
                                                          "selected": false,
                                                          "scannable": false,
                                                        },
                                                      ],
                                                      "indices": Immutable.List [],
                                                      "domainException": undefined,
                                                      "mandatoryFieldNames": Immutable.List [],
                                                      "reservedFieldNames": Immutable.List [],
                                                      "newDesignFields": undefined,
                                                      "instructions": undefined,
                                                      "domainKindName": undefined,
                                                      "schemaName": undefined,
                                                      "queryName": undefined,
                                                    },
                                                  ],
                                                  "editableResults": true,
                                                  "editableRuns": true,
                                                  "exception": undefined,
                                                  "metadataInputFormatHelp": undefined,
                                                  "moduleTransformScripts": undefined,
                                                  "name": "Test Assay Protocol",
                                                  "plateMetadata": undefined,
                                                  "protocolId": 1,
                                                  "protocolParameters": undefined,
                                                  "protocolTransformScripts": undefined,
                                                  "providerName": undefined,
                                                  "saveScriptFiles": false,
                                                  "selectedDetectionMethod": undefined,
                                                  "selectedMetadataInputFormat": undefined,
                                                  "selectedPlateTemplate": undefined,
                                                  "status": "Active",
                                                  "qcEnabled": undefined,
                                                }
                                              }
                                              onChange={[Function]}
                                            >
                                              <Component
                                                appPropertiesOnly={false}
                                                colSize={9}
                                                helpTipBody={
                                                  <p>
                                                    If enabled, users with sufficient permissions can edit and delete at the individual results row level after the initial import is complete. New result rows cannot be added to existing runs. These changes will be audited.
                                                  </p>
                                                }
                                                label="Editable Results"
                                              >
                                                <Row
                                                  bsClass="row"
                                                  className="margin-top"
                                                  componentClass="div"
                                                >
                                                  <div
                                                    className="margin-top row"
                                                  >
                                                    <Col
                                                      bsClass="col"
                                                      componentClass="div"
                                                      lg={4}
                                                      xs={3}
                                                    >
                                                      <div
                                                        className="col-lg-4 col-xs-3"
                                                      >
                                                        <DomainFieldLabel
                                                          helpTipBody={
                                                            <p>
                                                              If enabled, users with sufficient permissions can edit and delete at the individual results row level after the initial import is complete. New result rows cannot be added to existing runs. These changes will be audited.
                                                            </p>
                                                          }
                                                          label="Editable Results"
                                                        >
                                                          Editable 
                                                          <span
                                                            className="domain-no-wrap"
                                                          >
                                                            Results
                                                            <Component
                                                              id="tooltip"
                                                              title="Editable Results"
                                                            >
                                                              <span
                                                                className="label-help-target"
                                                                onMouseOut={[Function]}
                                                                onMouseOver={[Function]}
                                                              >
                                                                <span
                                                                  className="label-help-icon fa fa-question-circle"
                                                                />
                                                                <Overlay
                                                                  animation={[Function]}
                                                                  placement="right"
                                                                  rootClose={false}
                                                                  show={false}
                                                                >
                                                                  <Overlay
                                                                    placement="right"
                                                                    rootClose={false}
                                                                    show={false}
                                                                    transition={[Function]}
                                                                  />
                                                                </Overlay>
                                                              </span>
                                                            </Component>
                                                          </span>
                                                        </DomainFieldLabel>
                                                      </div>
                                                    </Col>
                                                    <Col
                                                      bsClass="col"
                                                      componentClass="div"
                                                      lg={8}
                                                      xs={9}
                                                    >
                                                      <div
                                                        className="col-lg-8 col-xs-9"
                                                      >
                                                        <input
                                                          checked={true}
                                                          id="assay-design-editableResults"
                                                          onChange={[Function]}
                                                          type="checkbox"
                                                        />
                                                      </div>
                                                    </Col>
                                                  </div>
                                                </Row>
                                              </Component>
                                            </EditableResultsInput>
                                          </div>
                                        </div>
                                      </Col>
                                      <Col
                                        bsClass="col"
                                        componentClass="div"
                                        lg={6}
                                        xs={12}
                                      >
                                        <div
                                          className="col-lg-6 col-xs-12"
                                        >
                                          <div
                                            className="domain-field-padding-bottom"
                                          >
                                            <SectionHeading
                                              title="Import Settings"
                                            >
                                              <div
                                                className="domain-field-section-heading"
                                              >
                                                Import Settings
                                              </div>
                                            </SectionHeading>
                                            <BackgroundUploadInput
                                              model={
                                                Immutable.Record {
                                                  "allowBackgroundUpload": true,
                                                  "allowEditableResults": true,
                                                  "allowQCStates": false,
                                                  "allowTransformationScript": false,
                                                  "allowPlateMetadata": false,
                                                  "autoCopyTargetContainer": undefined,
                                                  "autoCopyTargetContainerId": undefined,
                                                  "autoLinkCategory": undefined,
                                                  "availableDetectionMethods": undefined,
                                                  "availableMetadataInputFormats": undefined,
                                                  "availablePlateTemplates": undefined,
                                                  "backgroundUpload": true,
                                                  "description": "My assay protocol for you all to use.",
                                                  "domains": Immutable.List [
                                                    Immutable.Record {
                                                      "name": "Batch Fields",
                                                      "container": undefined,
                                                      "description": undefined,
                                                      "domainURI": undefined,
                                                      "domainId": null,
                                                      "allowFileLinkProperties": false,
                                                      "allowAttachmentProperties": false,
                                                      "allowFlagProperties": true,
                                                      "allowSampleSubjectProperties": true,
                                                      "allowTextChoiceProperties": true,
                                                      "allowTimepointProperties": false,
                                                      "showDefaultValueSettings": false,
                                                      "defaultDefaultValueType": undefined,
                                                      "defaultValueOptions": Immutable.List [],
                                                      "fields": Immutable.List [],
                                                      "indices": Immutable.List [],
                                                      "domainException": undefined,
                                                      "mandatoryFieldNames": Immutable.List [],
                                                      "reservedFieldNames": Immutable.List [],
                                                      "newDesignFields": undefined,
                                                      "instructions": undefined,
                                                      "domainKindName": undefined,
                                                      "schemaName": undefined,
                                                      "queryName": undefined,
                                                    },
                                                    Immutable.Record {
                                                      "name": "Sample Fields",
                                                      "container": undefined,
                                                      "description": undefined,
                                                      "domainURI": undefined,
                                                      "domainId": null,
                                                      "allowFileLinkProperties": false,
                                                      "allowAttachmentProperties": false,
                                                      "allowFlagProperties": true,
                                                      "allowSampleSubjectProperties": true,
                                                      "allowTextChoiceProperties": true,
                                                      "allowTimepointProperties": false,
                                                      "showDefaultValueSettings": false,
                                                      "defaultDefaultValueType": undefined,
                                                      "defaultValueOptions": Immutable.List [],
                                                      "fields": Immutable.List [
                                                        Immutable.Record {
                                                          "conceptURI": undefined,
                                                          "conditionalFormats": Immutable.List [],
                                                          "defaultScale": undefined,
                                                          "defaultValueType": undefined,
                                                          "defaultValue": undefined,
                                                          "defaultDisplayValue": undefined,
                                                          "description": undefined,
                                                          "dimension": undefined,
                                                          "excludeFromShifting": false,
                                                          "format": undefined,
                                                          "hidden": false,
                                                          "importAliases": undefined,
                                                          "label": undefined,
                                                          "lookupContainer": undefined,
                                                          "lookupQuery": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupValidator": undefined,
                                                          "measure": undefined,
                                                          "mvEnabled": false,
                                                          "name": "field1",
                                                          "PHI": undefined,
                                                          "propertyId": undefined,
                                                          "propertyURI": undefined,
                                                          "propertyValidators": Immutable.List [],
                                                          "rangeValidators": Immutable.List [],
                                                          "rangeURI": "xsd:string",
                                                          "regexValidators": Immutable.List [],
                                                          "textChoiceValidator": undefined,
                                                          "recommendedVariable": false,
                                                          "required": false,
                                                          "scale": 4000,
                                                          "URL": undefined,
                                                          "shownInDetailsView": true,
                                                          "shownInInsertView": true,
                                                          "shownInUpdateView": true,
                                                          "visible": true,
                                                          "dataType": Immutable.Record {
                                                            "conceptURI": undefined,
                                                            "display": "Text",
                                                            "name": "string",
                                                            "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                            "alternateRangeURI": "xsd:string",
                                                            "shortDisplay": "String",
                                                            "lookupSchema": undefined,
                                                            "lookupQuery": undefined,
                                                          },
                                                          "lookupQueryValue": undefined,
                                                          "lookupType": Immutable.Record {
                                                            "conceptURI": undefined,
                                                            "display": "Lookup",
                                                            "name": "lookup",
                                                            "rangeURI": "xsd:string",
                                                            "alternateRangeURI": undefined,
                                                            "shortDisplay": undefined,
                                                            "lookupSchema": undefined,
                                                            "lookupQuery": undefined,
                                                          },
                                                          "original": {
                                                            "conceptURI": undefined,
                                                            "dataType": Immutable.Record {
                                                              "conceptURI": undefined,
                                                              "display": "Text",
                                                              "name": "string",
                                                              "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                              "alternateRangeURI": "xsd:string",
                                                              "shortDisplay": "String",
                                                              "lookupSchema": undefined,
                                                              "lookupQuery": undefined,
                                                            },
                                                            "name": "field1",
                                                            "rangeURI": undefined,
                                                          },
                                                          "updatedField": false,
                                                          "isPrimaryKey": false,
                                                          "lockType": "NotLocked",
                                                          "wrappedColumnName": undefined,
                                                          "disablePhiLevel": false,
                                                          "lockExistingField": false,
                                                          "sourceOntology": undefined,
                                                          "conceptSubtree": undefined,
                                                          "conceptLabelColumn": undefined,
                                                          "conceptImportColumn": undefined,
                                                          "principalConceptCode": undefined,
                                                          "derivationDataScope": undefined,
                                                          "selected": false,
                                                          "scannable": false,
                                                        },
                                                        Immutable.Record {
                                                          "conceptURI": undefined,
                                                          "conditionalFormats": Immutable.List [],
                                                          "defaultScale": undefined,
                                                          "defaultValueType": undefined,
                                                          "defaultValue": undefined,
                                                          "defaultDisplayValue": undefined,
                                                          "description": undefined,
                                                          "dimension": undefined,
                                                          "excludeFromShifting": false,
                                                          "format": undefined,
                                                          "hidden": false,
                                                          "importAliases": undefined,
                                                          "label": undefined,
                                                          "lookupContainer": undefined,
                                                          "lookupQuery": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupValidator": undefined,
                                                          "measure": undefined,
                                                          "mvEnabled": false,
                                                          "name": "field2",
                                                          "PHI": undefined,
                                                          "propertyId": undefined,
                                                          "propertyURI": undefined,
                                                          "propertyValidators": Immutable.List [],
                                                          "rangeValidators": Immutable.List [],
                                                          "rangeURI": "xsd:int",
                                                          "regexValidators": Immutable.List [],
                                                          "textChoiceValidator": undefined,
                                                          "recommendedVariable": false,
                                                          "required": false,
                                                          "scale": 4000,
                                                          "URL": undefined,
                                                          "shownInDetailsView": true,
                                                          "shownInInsertView": true,
                                                          "shownInUpdateView": true,
                                                          "visible": true,
                                                          "dataType": Immutable.Record {
                                                            "conceptURI": undefined,
                                                            "display": "Integer",
                                                            "name": "int",
                                                            "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                                            "alternateRangeURI": "xsd:int",
                                                            "shortDisplay": undefined,
                                                            "lookupSchema": undefined,
                                                            "lookupQuery": undefined,
                                                          },
                                                          "lookupQueryValue": undefined,
                                                          "lookupType": Immutable.Record {
                                                            "conceptURI": undefined,
                                                            "display": "Lookup",
                                                            "name": "lookup",
                                                            "rangeURI": "xsd:int",
                                                            "alternateRangeURI": undefined,
                                                            "shortDisplay": undefined,
                                                            "lookupSchema": undefined,
                                                            "lookupQuery": undefined,
                                                          },
                                                          "original": {
                                                            "conceptURI": undefined,
                                                            "dataType": Immutable.Record {
                                                              "conceptURI": undefined,
                                                              "display": "Integer",
                                                              "name": "int",
                                                              "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                                              "alternateRangeURI": "xsd:int",
                                                              "shortDisplay": undefined,
                                                              "lookupSchema": undefined,
                                                              "lookupQuery": undefined,
                                                            },
                                                            "name": "field2",
                                                            "rangeURI": undefined,
                                                          },
                                                          "updatedField": false,
                                                          "isPrimaryKey": false,
                                                          "lockType": "NotLocked",
                                                          "wrappedColumnName": undefined,
                                                          "disablePhiLevel": false,
                                                          "lockExistingField": false,
                                                          "sourceOntology": undefined,
                                                          "conceptSubtree": undefined,
                                                          "conceptLabelColumn": undefined,
                                                          "conceptImportColumn": undefined,
                                                          "principalConceptCode": undefined,
                                                          "derivationDataScope": undefined,
                                                          "selected": false,
                                                          "scannable": false,
                                                        },
                                                        Immutable.Record {
                                                          "conceptURI": undefined,
                                                          "conditionalFormats": Immutable.List [],
                                                          "defaultScale": undefined,
                                                          "defaultValueType": undefined,
                                                          "defaultValue": undefined,
                                                          "defaultDisplayValue": undefined,
                                                          "description": undefined,
                                                          "dimension": undefined,
                                                          "excludeFromShifting": false,
                                                          "format": undefined,
                                                          "hidden": false,
                                                          "importAliases": undefined,
                                                          "label": undefined,
                                                          "lookupContainer": undefined,
                                                          "lookupQuery": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupValidator": undefined,
                                                          "measure": undefined,
                                                          "mvEnabled": false,
                                                          "name": "field3",
                                                          "PHI": undefined,
                                                          "propertyId": undefined,
                                                          "propertyURI": undefined,
                                                          "propertyValidators": Immutable.List [],
                                                          "rangeValidators": Immutable.List [],
                                                          "rangeURI": "xsd:dateTime",
                                                          "regexValidators": Immutable.List [],
                                                          "textChoiceValidator": undefined,
                                                          "recommendedVariable": false,
                                                          "required": false,
                                                          "scale": 4000,
                                                          "URL": undefined,
                                                          "shownInDetailsView": true,
                                                          "shownInInsertView": true,
                                                          "shownInUpdateView": true,
                                                          "visible": true,
                                                          "dataType": Immutable.Record {
                                                            "conceptURI": undefined,
                                                            "display": "Date Time",
                                                            "name": "dateTime",
                                                            "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                                                            "alternateRangeURI": "xsd:dateTime",
                                                            "shortDisplay": undefined,
                                                            "lookupSchema": undefined,
                                                            "lookupQuery": undefined,
                                                          },
                                                          "lookupQueryValue": undefined,
                                                          "lookupType": Immutable.Record {
                                                            "conceptURI": undefined,
                                                            "display": "Lookup",
                                                            "name": "lookup",
                                                            "rangeURI": "xsd:dateTime",
                                                            "alternateRangeURI": undefined,
                                                            "shortDisplay": undefined,
                                                            "lookupSchema": undefined,
                                                            "lookupQuery": undefined,
                                                          },
                                                          "original": {
                                                            "conceptURI": undefined,
                                                            "dataType": Immutable.Record {
                                                              "conceptURI": undefined,
                                                              "display": "Date Time",
                                                              "name": "dateTime",
                                                              "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                                                              "alternateRangeURI": "xsd:dateTime",
                                                              "shortDisplay": undefined,
                                                              "lookupSchema": undefined,
                                                              "lookupQuery": undefined,
                                                            },
                                                            "name": "field3",
                                                            "rangeURI": undefined,
                                                          },
                                                          "updatedField": false,
                                                          "isPrimaryKey": false,
                                                          "lockType": "NotLocked",
                                                          "wrappedColumnName": undefined,
                                                          "disablePhiLevel": false,
                                                          "lockExistingField": false,
                                                          "sourceOntology": undefined,
                                                          "conceptSubtree": undefined,
                                                          "conceptLabelColumn": undefined,
                                                          "conceptImportColumn": undefined,
                                                          "principalConceptCode": undefined,
                                                          "derivationDataScope": undefined,
                                                          "selected": false,
                                                          "scannable": false,
                                                        },
                                                      ],
                                                      "indices": Immutable.List [],
                                                      "domainException": undefined,
                                                      "mandatoryFieldNames": Immutable.List [],
                                                      "reservedFieldNames": Immutable.List [],
                                                      "newDesignFields": undefined,
                                                      "instructions": undefined,
                                                      "domainKindName": undefined,
                                                      "schemaName": undefined,
                                                      "queryName": undefined,
                                                    },
                                                  ],
                                                  "editableResults": true,
                                                  "editableRuns": true,
                                                  "exception": undefined,
                                                  "metadataInputFormatHelp": undefined,
                                                  "moduleTransformScripts": undefined,
                                                  "name": "Test Assay Protocol",
                                                  "plateMetadata": undefined,
                                                  "protocolId": 1,
                                                  "protocolParameters": undefined,
                                                  "protocolTransformScripts": undefined,
                                                  "providerName": undefined,
                                                  "saveScriptFiles": false,
                                                  "selectedDetectionMethod": undefined,
                                                  "selectedMetadataInputFormat": undefined,
                                                  "selectedPlateTemplate": undefined,
                                                  "status": "Active",
                                                  "qcEnabled": undefined,
                                                }
                                              }
                                              onChange={[Function]}
                                            >
                                              <Component
                                                colSize={9}
                                                helpTipBody={
                                                  <p>
                                                    If enabled, assay imports will be processed as jobs in the data pipeline. If there are any errors during the import, they can be viewed from the log file for that job.
                                                  </p>
                                                }
                                                label="Import in Background"
                                              >
                                                <Row
                                                  bsClass="row"
                                                  className="margin-top"
                                                  componentClass="div"
                                                >
                                                  <div
                                                    className="margin-top row"
                                                  >
                                                    <Col
                                                      bsClass="col"
                                                      componentClass="div"
                                                      lg={4}
                                                      xs={3}
                                                    >
                                                      <div
                                                        className="col-lg-4 col-xs-3"
                                                      >
                                                        <DomainFieldLabel
                                                          helpTipBody={
                                                            <p>
                                                              If enabled, assay imports will be processed as jobs in the data pipeline. If there are any errors during the import, they can be viewed from the log file for that job.
                                                            </p>
                                                          }
                                                          label="Import in Background"
                                                        >
                                                          Import in 
                                                          <span
                                                            className="domain-no-wrap"
                                                          >
                                                            Background
                                                            <Component
                                                              id="tooltip"
                                                              title="Import in Background"
                                                            >
                                                              <span
                                                                className="label-help-target"
                                                                onMouseOut={[Function]}
                                                                onMouseOver={[Function]}
                                                              >
                                                                <span
                                                                  className="label-help-icon fa fa-question-circle"
                                                                />
                                                                <Overlay
                                                                  animation={[Function]}
                                                                  placement="right"
                                                                  rootClose={false}
                                                                  show={false}
                                                                >
                                                                  <Overlay
                                                                    placement="right"
                                                                    rootClose={false}
                                                                    show={false}
                                                                    transition={[Function]}
                                                                  />
                                                                </Overlay>
                                                              </span>
                                                            </Component>
                                                          </span>
                                                        </DomainFieldLabel>
                                                      </div>
                                                    </Col>
                                                    <Col
                                                      bsClass="col"
                                                      componentClass="div"
                                                      lg={8}
                                                      xs={9}
                                                    >
                                                      <div
                                                        className="col-lg-8 col-xs-9"
                                                      >
                                                        <input
                                                          checked={true}
                                                          id="assay-design-backgroundUpload"
                                                          onChange={[Function]}
                                                          type="checkbox"
                                                        />
                                                      </div>
                                                    </Col>
                                                  </div>
                                                </Row>
                                              </Component>
                                            </BackgroundUploadInput>
                                          </div>
                                        </div>
                                      </Col>
                                    </form>
                                  </Form>
                                </AssayPropertiesForm>
                              </div>
                            </div>
                          </Transition>
                        </Collapse>
                      </PanelCollapse>
                    </PanelBody>
                  </div>
                </Panel>
              </Uncontrolled(Panel)>
            </ForwardRef>
          </BasePropertiesPanel>
        </Component>
      </ComponentWithDomainPropertiesPanelCollapse>
      <DomainForm
        controlledCollapse={true}
        domain={
          Immutable.Record {
            "name": "Batch Fields",
            "container": undefined,
            "description": undefined,
            "domainURI": undefined,
            "domainId": null,
            "allowFileLinkProperties": false,
            "allowAttachmentProperties": false,
            "allowFlagProperties": true,
            "allowSampleSubjectProperties": true,
            "allowTextChoiceProperties": true,
            "allowTimepointProperties": false,
            "showDefaultValueSettings": false,
            "defaultDefaultValueType": undefined,
            "defaultValueOptions": Immutable.List [],
            "fields": Immutable.List [],
            "indices": Immutable.List [],
            "domainException": undefined,
            "mandatoryFieldNames": Immutable.List [],
            "reservedFieldNames": Immutable.List [],
            "newDesignFields": undefined,
            "instructions": undefined,
            "domainKindName": undefined,
            "schemaName": undefined,
            "queryName": undefined,
          }
        }
        domainFormDisplayOptions={
          {
            "domainKindDisplayName": "assay design",
            "hideFilePropertyType": undefined,
            "hideInferFromFile": true,
            "hideStudyPropertyTypes": true,
            "textChoiceLockedForDomain": true,
          }
        }
        domainIndex={0}
        headerPrefix="Test Assay Protocol"
        helpTopic={null}
        index={0}
        initCollapsed={true}
        key="0"
        modelDomains={
          Immutable.List [
            Immutable.Record {
              "name": "Batch Fields",
              "container": undefined,
              "description": undefined,
              "domainURI": undefined,
              "domainId": null,
              "allowFileLinkProperties": false,
              "allowAttachmentProperties": false,
              "allowFlagProperties": true,
              "allowSampleSubjectProperties": true,
              "allowTextChoiceProperties": true,
              "allowTimepointProperties": false,
              "showDefaultValueSettings": false,
              "defaultDefaultValueType": undefined,
              "defaultValueOptions": Immutable.List [],
              "fields": Immutable.List [],
              "indices": Immutable.List [],
              "domainException": undefined,
              "mandatoryFieldNames": Immutable.List [],
              "reservedFieldNames": Immutable.List [],
              "newDesignFields": undefined,
              "instructions": undefined,
              "domainKindName": undefined,
              "schemaName": undefined,
              "queryName": undefined,
            },
            Immutable.Record {
              "name": "Sample Fields",
              "container": undefined,
              "description": undefined,
              "domainURI": undefined,
              "domainId": null,
              "allowFileLinkProperties": false,
              "allowAttachmentProperties": false,
              "allowFlagProperties": true,
              "allowSampleSubjectProperties": true,
              "allowTextChoiceProperties": true,
              "allowTimepointProperties": false,
              "showDefaultValueSettings": false,
              "defaultDefaultValueType": undefined,
              "defaultValueOptions": Immutable.List [],
              "fields": Immutable.List [
                Immutable.Record {
                  "conceptURI": undefined,
                  "conditionalFormats": Immutable.List [],
                  "defaultScale": undefined,
                  "defaultValueType": undefined,
                  "defaultValue": undefined,
                  "defaultDisplayValue": undefined,
                  "description": undefined,
                  "dimension": undefined,
                  "excludeFromShifting": false,
                  "format": undefined,
                  "hidden": false,
                  "importAliases": undefined,
                  "label": undefined,
                  "lookupContainer": undefined,
                  "lookupQuery": undefined,
                  "lookupSchema": undefined,
                  "lookupValidator": undefined,
                  "measure": undefined,
                  "mvEnabled": false,
                  "name": "field1",
                  "PHI": undefined,
                  "propertyId": undefined,
                  "propertyURI": undefined,
                  "propertyValidators": Immutable.List [],
                  "rangeValidators": Immutable.List [],
                  "rangeURI": "xsd:string",
                  "regexValidators": Immutable.List [],
                  "textChoiceValidator": undefined,
                  "recommendedVariable": false,
                  "required": false,
                  "scale": 4000,
                  "URL": undefined,
                  "shownInDetailsView": true,
                  "shownInInsertView": true,
                  "shownInUpdateView": true,
                  "visible": true,
                  "dataType": Immutable.Record {
                    "conceptURI": undefined,
                    "display": "Text",
                    "name": "string",
                    "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                    "alternateRangeURI": "xsd:string",
                    "shortDisplay": "String",
                    "lookupSchema": undefined,
                    "lookupQuery": undefined,
                  },
                  "lookupQueryValue": undefined,
                  "lookupType": Immutable.Record {
                    "conceptURI": undefined,
                    "display": "Lookup",
                    "name": "lookup",
                    "rangeURI": "xsd:string",
                    "alternateRangeURI": undefined,
                    "shortDisplay": undefined,
                    "lookupSchema": undefined,
                    "lookupQuery": undefined,
                  },
                  "original": {
                    "conceptURI": undefined,
                    "dataType": Immutable.Record {
                      "conceptURI": undefined,
                      "display": "Text",
                      "name": "string",
                      "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                      "alternateRangeURI": "xsd:string",
                      "shortDisplay": "String",
                      "lookupSchema": undefined,
                      "lookupQuery": undefined,
                    },
                    "name": "field1",
                    "rangeURI": undefined,
                  },
                  "updatedField": false,
                  "isPrimaryKey": false,
                  "lockType": "NotLocked",
                  "wrappedColumnName": undefined,
                  "disablePhiLevel": false,
                  "lockExistingField": false,
                  "sourceOntology": undefined,
                  "conceptSubtree": undefined,
                  "conceptLabelColumn": undefined,
                  "conceptImportColumn": undefined,
                  "principalConceptCode": undefined,
                  "derivationDataScope": undefined,
                  "selected": false,
                  "scannable": false,
                },
                Immutable.Record {
                  "conceptURI": undefined,
                  "conditionalFormats": Immutable.List [],
                  "defaultScale": undefined,
                  "defaultValueType": undefined,
                  "defaultValue": undefined,
                  "defaultDisplayValue": undefined,
                  "description": undefined,
                  "dimension": undefined,
                  "excludeFromShifting": false,
                  "format": undefined,
                  "hidden": false,
                  "importAliases": undefined,
                  "label": undefined,
                  "lookupContainer": undefined,
                  "lookupQuery": undefined,
                  "lookupSchema": undefined,
                  "lookupValidator": undefined,
                  "measure": undefined,
                  "mvEnabled": false,
                  "name": "field2",
                  "PHI": undefined,
                  "propertyId": undefined,
                  "propertyURI": undefined,
                  "propertyValidators": Immutable.List [],
                  "rangeValidators": Immutable.List [],
                  "rangeURI": "xsd:int",
                  "regexValidators": Immutable.List [],
                  "textChoiceValidator": undefined,
                  "recommendedVariable": false,
                  "required": false,
                  "scale": 4000,
                  "URL": undefined,
                  "shownInDetailsView": true,
                  "shownInInsertView": true,
                  "shownInUpdateView": true,
                  "visible": true,
                  "dataType": Immutable.Record {
                    "conceptURI": undefined,
                    "display": "Integer",
                    "name": "int",
                    "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                    "alternateRangeURI": "xsd:int",
                    "shortDisplay": undefined,
                    "lookupSchema": undefined,
                    "lookupQuery": undefined,
                  },
                  "lookupQueryValue": undefined,
                  "lookupType": Immutable.Record {
                    "conceptURI": undefined,
                    "display": "Lookup",
                    "name": "lookup",
                    "rangeURI": "xsd:int",
                    "alternateRangeURI": undefined,
                    "shortDisplay": undefined,
                    "lookupSchema": undefined,
                    "lookupQuery": undefined,
                  },
                  "original": {
                    "conceptURI": undefined,
                    "dataType": Immutable.Record {
                      "conceptURI": undefined,
                      "display": "Integer",
                      "name": "int",
                      "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                      "alternateRangeURI": "xsd:int",
                      "shortDisplay": undefined,
                      "lookupSchema": undefined,
                      "lookupQuery": undefined,
                    },
                    "name": "field2",
                    "rangeURI": undefined,
                  },
                  "updatedField": false,
                  "isPrimaryKey": false,
                  "lockType": "NotLocked",
                  "wrappedColumnName": undefined,
                  "disablePhiLevel": false,
                  "lockExistingField": false,
                  "sourceOntology": undefined,
                  "conceptSubtree": undefined,
                  "conceptLabelColumn": undefined,
                  "conceptImportColumn": undefined,
                  "principalConceptCode": undefined,
                  "derivationDataScope": undefined,
                  "selected": false,
                  "scannable": false,
                },
                Immutable.Record {
                  "conceptURI": undefined,
                  "conditionalFormats": Immutable.List [],
                  "defaultScale": undefined,
                  "defaultValueType": undefined,
                  "defaultValue": undefined,
                  "defaultDisplayValue": undefined,
                  "description": undefined,
                  "dimension": undefined,
                  "excludeFromShifting": false,
                  "format": undefined,
                  "hidden": false,
                  "importAliases": undefined,
                  "label": undefined,
                  "lookupContainer": undefined,
                  "lookupQuery": undefined,
                  "lookupSchema": undefined,
                  "lookupValidator": undefined,
                  "measure": undefined,
                  "mvEnabled": false,
                  "name": "field3",
                  "PHI": undefined,
                  "propertyId": undefined,
                  "propertyURI": undefined,
                  "propertyValidators": Immutable.List [],
                  "rangeValidators": Immutable.List [],
                  "rangeURI": "xsd:dateTime",
                  "regexValidators": Immutable.List [],
                  "textChoiceValidator": undefined,
                  "recommendedVariable": false,
                  "required": false,
                  "scale": 4000,
                  "URL": undefined,
                  "shownInDetailsView": true,
                  "shownInInsertView": true,
                  "shownInUpdateView": true,
                  "visible": true,
                  "dataType": Immutable.Record {
                    "conceptURI": undefined,
                    "display": "Date Time",
                    "name": "dateTime",
                    "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                    "alternateRangeURI": "xsd:dateTime",
                    "shortDisplay": undefined,
                    "lookupSchema": undefined,
                    "lookupQuery": undefined,
                  },
                  "lookupQueryValue": undefined,
                  "lookupType": Immutable.Record {
                    "conceptURI": undefined,
                    "display": "Lookup",
                    "name": "lookup",
                    "rangeURI": "xsd:dateTime",
                    "alternateRangeURI": undefined,
                    "shortDisplay": undefined,
                    "lookupSchema": undefined,
                    "lookupQuery": undefined,
                  },
                  "original": {
                    "conceptURI": undefined,
                    "dataType": Immutable.Record {
                      "conceptURI": undefined,
                      "display": "Date Time",
                      "name": "dateTime",
                      "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                      "alternateRangeURI": "xsd:dateTime",
                      "shortDisplay": undefined,
                      "lookupSchema": undefined,
                      "lookupQuery": undefined,
                    },
                    "name": "field3",
                    "rangeURI": undefined,
                  },
                  "updatedField": false,
                  "isPrimaryKey": false,
                  "lockType": "NotLocked",
                  "wrappedColumnName": undefined,
                  "disablePhiLevel": false,
                  "lockExistingField": false,
                  "sourceOntology": undefined,
                  "conceptSubtree": undefined,
                  "conceptLabelColumn": undefined,
                  "conceptImportColumn": undefined,
                  "principalConceptCode": undefined,
                  "derivationDataScope": undefined,
                  "selected": false,
                  "scannable": false,
                },
              ],
              "indices": Immutable.List [],
              "domainException": undefined,
              "mandatoryFieldNames": Immutable.List [],
              "reservedFieldNames": Immutable.List [],
              "newDesignFields": undefined,
              "instructions": undefined,
              "domainKindName": undefined,
              "schemaName": undefined,
              "queryName": undefined,
            },
          ]
        }
        onChange={[Function]}
        onToggle={[Function]}
        panelStatus="COMPLETE"
        testMode={true}
        validate={false}
      >
        <LookupProvider>
          <DomainFormImpl
            appPropertiesOnly={false}
            controlledCollapse={true}
            domain={
              Immutable.Record {
                "name": "Batch Fields",
                "container": undefined,
                "description": undefined,
                "domainURI": undefined,
                "domainId": null,
                "allowFileLinkProperties": false,
                "allowAttachmentProperties": false,
                "allowFlagProperties": true,
                "allowSampleSubjectProperties": true,
                "allowTextChoiceProperties": true,
                "allowTimepointProperties": false,
                "showDefaultValueSettings": false,
                "defaultDefaultValueType": undefined,
                "defaultValueOptions": Immutable.List [],
                "fields": Immutable.List [],
                "indices": Immutable.List [],
                "domainException": undefined,
                "mandatoryFieldNames": Immutable.List [],
                "reservedFieldNames": Immutable.List [],
                "newDesignFields": undefined,
                "instructions": undefined,
                "domainKindName": undefined,
                "schemaName": undefined,
                "queryName": undefined,
              }
            }
            domainFormDisplayOptions={
              {
                "domainKindDisplayName": "assay design",
                "hideFilePropertyType": undefined,
                "hideInferFromFile": true,
                "hideStudyPropertyTypes": true,
                "textChoiceLockedForDomain": true,
              }
            }
            domainIndex={0}
            headerPrefix="Test Assay Protocol"
            helpNoun="field designer"
            helpTopic={null}
            index={0}
            initCollapsed={true}
            isNew={false}
            modelDomains={
              Immutable.List [
                Immutable.Record {
                  "name": "Batch Fields",
                  "container": undefined,
                  "description": undefined,
                  "domainURI": undefined,
                  "domainId": null,
                  "allowFileLinkProperties": false,
                  "allowAttachmentProperties": false,
                  "allowFlagProperties": true,
                  "allowSampleSubjectProperties": true,
                  "allowTextChoiceProperties": true,
                  "allowTimepointProperties": false,
                  "showDefaultValueSettings": false,
                  "defaultDefaultValueType": undefined,
                  "defaultValueOptions": Immutable.List [],
                  "fields": Immutable.List [],
                  "indices": Immutable.List [],
                  "domainException": undefined,
                  "mandatoryFieldNames": Immutable.List [],
                  "reservedFieldNames": Immutable.List [],
                  "newDesignFields": undefined,
                  "instructions": undefined,
                  "domainKindName": undefined,
                  "schemaName": undefined,
                  "queryName": undefined,
                },
                Immutable.Record {
                  "name": "Sample Fields",
                  "container": undefined,
                  "description": undefined,
                  "domainURI": undefined,
                  "domainId": null,
                  "allowFileLinkProperties": false,
                  "allowAttachmentProperties": false,
                  "allowFlagProperties": true,
                  "allowSampleSubjectProperties": true,
                  "allowTextChoiceProperties": true,
                  "allowTimepointProperties": false,
                  "showDefaultValueSettings": false,
                  "defaultDefaultValueType": undefined,
                  "defaultValueOptions": Immutable.List [],
                  "fields": Immutable.List [
                    Immutable.Record {
                      "conceptURI": undefined,
                      "conditionalFormats": Immutable.List [],
                      "defaultScale": undefined,
                      "defaultValueType": undefined,
                      "defaultValue": undefined,
                      "defaultDisplayValue": undefined,
                      "description": undefined,
                      "dimension": undefined,
                      "excludeFromShifting": false,
                      "format": undefined,
                      "hidden": false,
                      "importAliases": undefined,
                      "label": undefined,
                      "lookupContainer": undefined,
                      "lookupQuery": undefined,
                      "lookupSchema": undefined,
                      "lookupValidator": undefined,
                      "measure": undefined,
                      "mvEnabled": false,
                      "name": "field1",
                      "PHI": undefined,
                      "propertyId": undefined,
                      "propertyURI": undefined,
                      "propertyValidators": Immutable.List [],
                      "rangeValidators": Immutable.List [],
                      "rangeURI": "xsd:string",
                      "regexValidators": Immutable.List [],
                      "textChoiceValidator": undefined,
                      "recommendedVariable": false,
                      "required": false,
                      "scale": 4000,
                      "URL": undefined,
                      "shownInDetailsView": true,
                      "shownInInsertView": true,
                      "shownInUpdateView": true,
                      "visible": true,
                      "dataType": Immutable.Record {
                        "conceptURI": undefined,
                        "display": "Text",
                        "name": "string",
                        "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                        "alternateRangeURI": "xsd:string",
                        "shortDisplay": "String",
                        "lookupSchema": undefined,
                        "lookupQuery": undefined,
                      },
                      "lookupQueryValue": undefined,
                      "lookupType": Immutable.Record {
                        "conceptURI": undefined,
                        "display": "Lookup",
                        "name": "lookup",
                        "rangeURI": "xsd:string",
                        "alternateRangeURI": undefined,
                        "shortDisplay": undefined,
                        "lookupSchema": undefined,
                        "lookupQuery": undefined,
                      },
                      "original": {
                        "conceptURI": undefined,
                        "dataType": Immutable.Record {
                          "conceptURI": undefined,
                          "display": "Text",
                          "name": "string",
                          "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                          "alternateRangeURI": "xsd:string",
                          "shortDisplay": "String",
                          "lookupSchema": undefined,
                          "lookupQuery": undefined,
                        },
                        "name": "field1",
                        "rangeURI": undefined,
                      },
                      "updatedField": false,
                      "isPrimaryKey": false,
                      "lockType": "NotLocked",
                      "wrappedColumnName": undefined,
                      "disablePhiLevel": false,
                      "lockExistingField": false,
                      "sourceOntology": undefined,
                      "conceptSubtree": undefined,
                      "conceptLabelColumn": undefined,
                      "conceptImportColumn": undefined,
                      "principalConceptCode": undefined,
                      "derivationDataScope": undefined,
                      "selected": false,
                      "scannable": false,
                    },
                    Immutable.Record {
                      "conceptURI": undefined,
                      "conditionalFormats": Immutable.List [],
                      "defaultScale": undefined,
                      "defaultValueType": undefined,
                      "defaultValue": undefined,
                      "defaultDisplayValue": undefined,
                      "description": undefined,
                      "dimension": undefined,
                      "excludeFromShifting": false,
                      "format": undefined,
                      "hidden": false,
                      "importAliases": undefined,
                      "label": undefined,
                      "lookupContainer": undefined,
                      "lookupQuery": undefined,
                      "lookupSchema": undefined,
                      "lookupValidator": undefined,
                      "measure": undefined,
                      "mvEnabled": false,
                      "name": "field2",
                      "PHI": undefined,
                      "propertyId": undefined,
                      "propertyURI": undefined,
                      "propertyValidators": Immutable.List [],
                      "rangeValidators": Immutable.List [],
                      "rangeURI": "xsd:int",
                      "regexValidators": Immutable.List [],
                      "textChoiceValidator": undefined,
                      "recommendedVariable": false,
                      "required": false,
                      "scale": 4000,
                      "URL": undefined,
                      "shownInDetailsView": true,
                      "shownInInsertView": true,
                      "shownInUpdateView": true,
                      "visible": true,
                      "dataType": Immutable.Record {
                        "conceptURI": undefined,
                        "display": "Integer",
                        "name": "int",
                        "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                        "alternateRangeURI": "xsd:int",
                        "shortDisplay": undefined,
                        "lookupSchema": undefined,
                        "lookupQuery": undefined,
                      },
                      "lookupQueryValue": undefined,
                      "lookupType": Immutable.Record {
                        "conceptURI": undefined,
                        "display": "Lookup",
                        "name": "lookup",
                        "rangeURI": "xsd:int",
                        "alternateRangeURI": undefined,
                        "shortDisplay": undefined,
                        "lookupSchema": undefined,
                        "lookupQuery": undefined,
                      },
                      "original": {
                        "conceptURI": undefined,
                        "dataType": Immutable.Record {
                          "conceptURI": undefined,
                          "display": "Integer",
                          "name": "int",
                          "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                          "alternateRangeURI": "xsd:int",
                          "shortDisplay": undefined,
                          "lookupSchema": undefined,
                          "lookupQuery": undefined,
                        },
                        "name": "field2",
                        "rangeURI": undefined,
                      },
                      "updatedField": false,
                      "isPrimaryKey": false,
                      "lockType": "NotLocked",
                      "wrappedColumnName": undefined,
                      "disablePhiLevel": false,
                      "lockExistingField": false,
                      "sourceOntology": undefined,
                      "conceptSubtree": undefined,
                      "conceptLabelColumn": undefined,
                      "conceptImportColumn": undefined,
                      "principalConceptCode": undefined,
                      "derivationDataScope": undefined,
                      "selected": false,
                      "scannable": false,
                    },
                    Immutable.Record {
                      "conceptURI": undefined,
                      "conditionalFormats": Immutable.List [],
                      "defaultScale": undefined,
                      "defaultValueType": undefined,
                      "defaultValue": undefined,
                      "defaultDisplayValue": undefined,
                      "description": undefined,
                      "dimension": undefined,
                      "excludeFromShifting": false,
                      "format": undefined,
                      "hidden": false,
                      "importAliases": undefined,
                      "label": undefined,
                      "lookupContainer": undefined,
                      "lookupQuery": undefined,
                      "lookupSchema": undefined,
                      "lookupValidator": undefined,
                      "measure": undefined,
                      "mvEnabled": false,
                      "name": "field3",
                      "PHI": undefined,
                      "propertyId": undefined,
                      "propertyURI": undefined,
                      "propertyValidators": Immutable.List [],
                      "rangeValidators": Immutable.List [],
                      "rangeURI": "xsd:dateTime",
                      "regexValidators": Immutable.List [],
                      "textChoiceValidator": undefined,
                      "recommendedVariable": false,
                      "required": false,
                      "scale": 4000,
                      "URL": undefined,
                      "shownInDetailsView": true,
                      "shownInInsertView": true,
                      "shownInUpdateView": true,
                      "visible": true,
                      "dataType": Immutable.Record {
                        "conceptURI": undefined,
                        "display": "Date Time",
                        "name": "dateTime",
                        "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                        "alternateRangeURI": "xsd:dateTime",
                        "shortDisplay": undefined,
                        "lookupSchema": undefined,
                        "lookupQuery": undefined,
                      },
                      "lookupQueryValue": undefined,
                      "lookupType": Immutable.Record {
                        "conceptURI": undefined,
                        "display": "Lookup",
                        "name": "lookup",
                        "rangeURI": "xsd:dateTime",
                        "alternateRangeURI": undefined,
                        "shortDisplay": undefined,
                        "lookupSchema": undefined,
                        "lookupQuery": undefined,
                      },
                      "original": {
                        "conceptURI": undefined,
                        "dataType": Immutable.Record {
                          "conceptURI": undefined,
                          "display": "Date Time",
                          "name": "dateTime",
                          "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                          "alternateRangeURI": "xsd:dateTime",
                          "shortDisplay": undefined,
                          "lookupSchema": undefined,
                          "lookupQuery": undefined,
                        },
                        "name": "field3",
                        "rangeURI": undefined,
                      },
                      "updatedField": false,
                      "isPrimaryKey": false,
                      "lockType": "NotLocked",
                      "wrappedColumnName": undefined,
                      "disablePhiLevel": false,
                      "lockExistingField": false,
                      "sourceOntology": undefined,
                      "conceptSubtree": undefined,
                      "conceptLabelColumn": undefined,
                      "conceptImportColumn": undefined,
                      "principalConceptCode": undefined,
                      "derivationDataScope": undefined,
                      "selected": false,
                      "scannable": false,
                    },
                  ],
                  "indices": Immutable.List [],
                  "domainException": undefined,
                  "mandatoryFieldNames": Immutable.List [],
                  "reservedFieldNames": Immutable.List [],
                  "newDesignFields": undefined,
                  "instructions": undefined,
                  "domainKindName": undefined,
                  "schemaName": undefined,
                  "queryName": undefined,
                },
              ]
            }
            onChange={[Function]}
            onToggle={[Function]}
            panelStatus="COMPLETE"
            showHeader={true}
            successBsStyle="success"
            testMode={true}
            validate={false}
          >
            <ForwardRef
              className="domain-form-panel"
              expanded={false}
              onToggle={[Function]}
            >
              <Uncontrolled(Panel)
                className="domain-form-panel"
                expanded={false}
                innerRef={null}
                onToggle={[Function]}
              >
                <Panel
                  bsClass="panel"
                  bsStyle="default"
                  className="domain-form-panel"
                  expanded={false}
                  onToggle={[Function]}
                >
                  <div
                    className="domain-form-panel panel panel-default"
                  >
                    <CollapsiblePanelHeader
                      collapsed={true}
                      controlledCollapse={true}
                      id="domainpropertiesrow-Batch-Fields-hdr"
                      isValid={true}
                      panelStatus="COMPLETE"
                      title="Batch Fields"
                      togglePanel={[Function]}
                    >
                      <PanelHeading
                        bsClass="panel"
                        className="domain-panel-header domain-heading-collapsible domain-panel-header-collapsed"
                        componentClass="div"
                        id="domainpropertiesrow-Batch-Fields-hdr"
                        onClick={[Function]}
                      >
                        <div
                          className="domain-panel-header domain-heading-collapsible domain-panel-header-collapsed panel-heading"
                          id="domainpropertiesrow-Batch-Fields-hdr"
                          onClick={[Function]}
                        >
                          <span
                            className="domain-panel-status-icon domain-panel-status-icon-green"
                          >
                            <span
                              className="fa fa-check-circle"
                            />
                          </span>
                          <span
                            className="domain-panel-title"
                          >
                            Batch Fields
                          </span>
                          <span
                            className="pull-right"
                          >
                            <span
                              className="fa fa-lg fa-plus-square domain-form-expand-btn"
                            />
                          </span>
                          <Component
                            id="tooltip"
                            placement="top"
                            title="Batch Fields"
                          >
                            <span
                              className="label-help-target"
                              onMouseOut={[Function]}
                              onMouseOver={[Function]}
                            >
                              <span
                                className="label-help-icon fa fa-question-circle"
                              />
                              <Overlay
                                animation={[Function]}
                                placement="top"
                                rootClose={false}
                                show={false}
                              >
                                <Overlay
                                  placement="top"
                                  rootClose={false}
                                  show={false}
                                  transition={[Function]}
                                />
                              </Overlay>
                            </span>
                          </Component>
                        </div>
                      </PanelHeading>
                    </CollapsiblePanelHeader>
                    <PanelBody
                      bsClass="panel"
                      className=""
                      collapsible={true}
                    >
                      <PanelCollapse
                        bsClass="panel"
                      >
                        <Collapse
                          appear={false}
                          dimension="height"
                          getDimensionValue={[Function]}
                          in={false}
                          mountOnEnter={false}
                          timeout={300}
                          unmountOnExit={false}
                        >
                          <Transition
                            appear={false}
                            aria-expanded={null}
                            enter={true}
                            exit={true}
                            in={false}
                            mountOnEnter={false}
                            onEnter={[Function]}
                            onEntered={[Function]}
                            onEntering={[Function]}
                            onExit={[Function]}
                            onExited={[Function]}
                            onExiting={[Function]}
                            timeout={300}
                            unmountOnExit={false}
                          >
                            <div
                              aria-expanded={null}
                              className="panel-collapse collapse"
                            >
                              <div
                                className="panel-body"
                              >
                                <Row
                                  bsClass="row"
                                  className=""
                                  componentClass="div"
                                >
                                  <div
                                    className="row"
                                  >
                                    <Col
                                      bsClass="col"
                                      componentClass="div"
                                      xs={12}
                                    >
                                      <div
                                        className="col-xs-12"
                                      />
                                    </Col>
                                  </div>
                                </Row>
                                <FileAttachmentForm
                                  acceptedFormats=".json"
                                  allowDirectories={false}
                                  allowMultiple={false}
                                  cancelText="Cancel"
                                  compact={false}
                                  fileSpecificCallback={
                                    Immutable.Map {
                                      ".json": [Function],
                                    }
                                  }
                                  index={0}
                                  label="Import fields from file"
                                  labelLong="Select file or drag and drop here."
                                  onFileRemoval={[Function]}
                                  previewGridProps={false}
                                  showAcceptedFormats={true}
                                  showButtons={false}
                                  showLabel={true}
                                  showProgressBar={false}
                                  submitText="Upload"
                                >
                                  <span
                                    className="translator--toggle__wizard"
                                  >
                                    <FormSection
                                      iconSpacer={false}
                                      label="Import fields from file"
                                      showLabel={true}
                                    >
                                      <div
                                        className="row"
                                      >
                                        <div
                                          className="col-sm-12"
                                        >
                                          <label
                                            className="control-label text-left"
                                          >
                                            <strong>
                                              Import fields from file
                                            </strong>
                                          </label>
                                        </div>
                                      </div>
                                      <div
                                        className="row"
                                      >
                                        <div
                                          className="col-sm-12"
                                        >
                                          <div
                                            className="wizard-row--container"
                                          >
                                            <div
                                              className=""
                                            >
                                              <FileAttachmentContainer
                                                acceptedFormats=".json"
                                                allowDirectories={false}
                                                allowMultiple={false}
                                                compact={false}
                                                handleChange={[Function]}
                                                handleRemoval={[Function]}
                                                index={0}
                                                labelLong="Select file or drag and drop here."
                                              >
                                                <div
                                                  className="file-upload--container block"
                                                >
                                                  <label
                                                    className="file-upload--label"
                                                    htmlFor="fileUpload0"
                                                    onDragEnter={[Function]}
                                                    onDragLeave={[Function]}
                                                    onDragOver={[Function]}
                                                    onDrop={[Function]}
                                                  >
                                                    <i
                                                      aria-hidden="true"
                                                      className="fa fa-cloud-upload fa-2x cloud-logo"
                                                    />
                                                    Select file or drag and drop here.
                                                  </label>
                                                  <input
                                                    accept=".json"
                                                    className="file-upload--input"
                                                    id="fileUpload0"
                                                    multiple={false}
                                                    name="fileUpload0"
                                                    onChange={[Function]}
                                                    type="file"
                                                  />
                                                </div>
                                              </FileAttachmentContainer>
                                            </div>
                                          </div>
                                        </div>
                                      </div>
                                    </FormSection>
                                  </span>
                                  <div
                                    className="row"
                                  >
                                    <div
                                      className="col-md-9"
                                    >
                                      <div
                                        className="file-form-formats"
                                      >
                                        <strong>
                                          Supported formats include: 
                                        </strong>
                                        .json
                                      </div>
                                    </div>
                                    <div
                                      className="col-md-3"
                                    >
                                      <div
                                        className="pull-right"
                                      />
                                    </div>
                                  </div>
                                </FileAttachmentForm>
                                <div
                                  className="margin-top domain-form-manual-section"
                                >
                                  <p>
                                    Or
                                  </p>
                                  <ActionButton
                                    buttonClass="domain-form-manual-btn"
                                    containerClass="form-group"
                                    helperTitle="More Info"
                                    onClick={[Function]}
                                  >
                                    <div
                                      className="form-group"
                                    >
                                      <div
                                        className="domain-form-manual-btn"
                                      >
                                        <span
                                          className="container--action-button btn btn-default"
                                          onClick={[Function]}
                                        >
                                          Manually Define Fields
                                        </span>
                                      </div>
                                    </div>
                                  </ActionButton>
                                </div>
                              </div>
                            </div>
                          </Transition>
                        </Collapse>
                      </PanelCollapse>
                    </PanelBody>
                  </div>
                </Panel>
              </Uncontrolled(Panel)>
            </ForwardRef>
          </DomainFormImpl>
        </LookupProvider>
      </DomainForm>
      <DomainForm
        controlledCollapse={true}
        domain={
          Immutable.Record {
            "name": "Sample Fields",
            "container": undefined,
            "description": undefined,
            "domainURI": undefined,
            "domainId": null,
            "allowFileLinkProperties": false,
            "allowAttachmentProperties": false,
            "allowFlagProperties": true,
            "allowSampleSubjectProperties": true,
            "allowTextChoiceProperties": true,
            "allowTimepointProperties": false,
            "showDefaultValueSettings": false,
            "defaultDefaultValueType": undefined,
            "defaultValueOptions": Immutable.List [],
            "fields": Immutable.List [
              Immutable.Record {
                "conceptURI": undefined,
                "conditionalFormats": Immutable.List [],
                "defaultScale": undefined,
                "defaultValueType": undefined,
                "defaultValue": undefined,
                "defaultDisplayValue": undefined,
                "description": undefined,
                "dimension": undefined,
                "excludeFromShifting": false,
                "format": undefined,
                "hidden": false,
                "importAliases": undefined,
                "label": undefined,
                "lookupContainer": undefined,
                "lookupQuery": undefined,
                "lookupSchema": undefined,
                "lookupValidator": undefined,
                "measure": undefined,
                "mvEnabled": false,
                "name": "field1",
                "PHI": undefined,
                "propertyId": undefined,
                "propertyURI": undefined,
                "propertyValidators": Immutable.List [],
                "rangeValidators": Immutable.List [],
                "rangeURI": "xsd:string",
                "regexValidators": Immutable.List [],
                "textChoiceValidator": undefined,
                "recommendedVariable": false,
                "required": false,
                "scale": 4000,
                "URL": undefined,
                "shownInDetailsView": true,
                "shownInInsertView": true,
                "shownInUpdateView": true,
                "visible": true,
                "dataType": Immutable.Record {
                  "conceptURI": undefined,
                  "display": "Text",
                  "name": "string",
                  "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                  "alternateRangeURI": "xsd:string",
                  "shortDisplay": "String",
                  "lookupSchema": undefined,
                  "lookupQuery": undefined,
                },
                "lookupQueryValue": undefined,
                "lookupType": Immutable.Record {
                  "conceptURI": undefined,
                  "display": "Lookup",
                  "name": "lookup",
                  "rangeURI": "xsd:string",
                  "alternateRangeURI": undefined,
                  "shortDisplay": undefined,
                  "lookupSchema": undefined,
                  "lookupQuery": undefined,
                },
                "original": {
                  "conceptURI": undefined,
                  "dataType": Immutable.Record {
                    "conceptURI": undefined,
                    "display": "Text",
                    "name": "string",
                    "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                    "alternateRangeURI": "xsd:string",
                    "shortDisplay": "String",
                    "lookupSchema": undefined,
                    "lookupQuery": undefined,
                  },
                  "name": "field1",
                  "rangeURI": undefined,
                },
                "updatedField": false,
                "isPrimaryKey": false,
                "lockType": "NotLocked",
                "wrappedColumnName": undefined,
                "disablePhiLevel": false,
                "lockExistingField": false,
                "sourceOntology": undefined,
                "conceptSubtree": undefined,
                "conceptLabelColumn": undefined,
                "conceptImportColumn": undefined,
                "principalConceptCode": undefined,
                "derivationDataScope": undefined,
                "selected": false,
                "scannable": false,
              },
              Immutable.Record {
                "conceptURI": undefined,
                "conditionalFormats": Immutable.List [],
                "defaultScale": undefined,
                "defaultValueType": undefined,
                "defaultValue": undefined,
                "defaultDisplayValue": undefined,
                "description": undefined,
                "dimension": undefined,
                "excludeFromShifting": false,
                "format": undefined,
                "hidden": false,
                "importAliases": undefined,
                "label": undefined,
                "lookupContainer": undefined,
                "lookupQuery": undefined,
                "lookupSchema": undefined,
                "lookupValidator": undefined,
                "measure": undefined,
                "mvEnabled": false,
                "name": "field2",
                "PHI": undefined,
                "propertyId": undefined,
                "propertyURI": undefined,
                "propertyValidators": Immutable.List [],
                "rangeValidators": Immutable.List [],
                "rangeURI": "xsd:int",
                "regexValidators": Immutable.List [],
                "textChoiceValidator": undefined,
                "recommendedVariable": false,
                "required": false,
                "scale": 4000,
                "URL": undefined,
                "shownInDetailsView": true,
                "shownInInsertView": true,
                "shownInUpdateView": true,
                "visible": true,
                "dataType": Immutable.Record {
                  "conceptURI": undefined,
                  "display": "Integer",
                  "name": "int",
                  "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                  "alternateRangeURI": "xsd:int",
                  "shortDisplay": undefined,
                  "lookupSchema": undefined,
                  "lookupQuery": undefined,
                },
                "lookupQueryValue": undefined,
                "lookupType": Immutable.Record {
                  "conceptURI": undefined,
                  "display": "Lookup",
                  "name": "lookup",
                  "rangeURI": "xsd:int",
                  "alternateRangeURI": undefined,
                  "shortDisplay": undefined,
                  "lookupSchema": undefined,
                  "lookupQuery": undefined,
                },
                "original": {
                  "conceptURI": undefined,
                  "dataType": Immutable.Record {
                    "conceptURI": undefined,
                    "display": "Integer",
                    "name": "int",
                    "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                    "alternateRangeURI": "xsd:int",
                    "shortDisplay": undefined,
                    "lookupSchema": undefined,
                    "lookupQuery": undefined,
                  },
                  "name": "field2",
                  "rangeURI": undefined,
                },
                "updatedField": false,
                "isPrimaryKey": false,
                "lockType": "NotLocked",
                "wrappedColumnName": undefined,
                "disablePhiLevel": false,
                "lockExistingField": false,
                "sourceOntology": undefined,
                "conceptSubtree": undefined,
                "conceptLabelColumn": undefined,
                "conceptImportColumn": undefined,
                "principalConceptCode": undefined,
                "derivationDataScope": undefined,
                "selected": false,
                "scannable": false,
              },
              Immutable.Record {
                "conceptURI": undefined,
                "conditionalFormats": Immutable.List [],
                "defaultScale": undefined,
                "defaultValueType": undefined,
                "defaultValue": undefined,
                "defaultDisplayValue": undefined,
                "description": undefined,
                "dimension": undefined,
                "excludeFromShifting": false,
                "format": undefined,
                "hidden": false,
                "importAliases": undefined,
                "label": undefined,
                "lookupContainer": undefined,
                "lookupQuery": undefined,
                "lookupSchema": undefined,
                "lookupValidator": undefined,
                "measure": undefined,
                "mvEnabled": false,
                "name": "field3",
                "PHI": undefined,
                "propertyId": undefined,
                "propertyURI": undefined,
                "propertyValidators": Immutable.List [],
                "rangeValidators": Immutable.List [],
                "rangeURI": "xsd:dateTime",
                "regexValidators": Immutable.List [],
                "textChoiceValidator": undefined,
                "recommendedVariable": false,
                "required": false,
                "scale": 4000,
                "URL": undefined,
                "shownInDetailsView": true,
                "shownInInsertView": true,
                "shownInUpdateView": true,
                "visible": true,
                "dataType": Immutable.Record {
                  "conceptURI": undefined,
                  "display": "Date Time",
                  "name": "dateTime",
                  "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                  "alternateRangeURI": "xsd:dateTime",
                  "shortDisplay": undefined,
                  "lookupSchema": undefined,
                  "lookupQuery": undefined,
                },
                "lookupQueryValue": undefined,
                "lookupType": Immutable.Record {
                  "conceptURI": undefined,
                  "display": "Lookup",
                  "name": "lookup",
                  "rangeURI": "xsd:dateTime",
                  "alternateRangeURI": undefined,
                  "shortDisplay": undefined,
                  "lookupSchema": undefined,
                  "lookupQuery": undefined,
                },
                "original": {
                  "conceptURI": undefined,
                  "dataType": Immutable.Record {
                    "conceptURI": undefined,
                    "display": "Date Time",
                    "name": "dateTime",
                    "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                    "alternateRangeURI": "xsd:dateTime",
                    "shortDisplay": undefined,
                    "lookupSchema": undefined,
                    "lookupQuery": undefined,
                  },
                  "name": "field3",
                  "rangeURI": undefined,
                },
                "updatedField": false,
                "isPrimaryKey": false,
                "lockType": "NotLocked",
                "wrappedColumnName": undefined,
                "disablePhiLevel": false,
                "lockExistingField": false,
                "sourceOntology": undefined,
                "conceptSubtree": undefined,
                "conceptLabelColumn": undefined,
                "conceptImportColumn": undefined,
                "principalConceptCode": undefined,
                "derivationDataScope": undefined,
                "selected": false,
                "scannable": false,
              },
            ],
            "indices": Immutable.List [],
            "domainException": undefined,
            "mandatoryFieldNames": Immutable.List [],
            "reservedFieldNames": Immutable.List [],
            "newDesignFields": undefined,
            "instructions": undefined,
            "domainKindName": undefined,
            "schemaName": undefined,
            "queryName": undefined,
          }
        }
        domainFormDisplayOptions={
          {
            "domainKindDisplayName": "assay design",
            "hideFilePropertyType": undefined,
            "hideInferFromFile": true,
            "hideStudyPropertyTypes": true,
            "textChoiceLockedForDomain": true,
          }
        }
        domainIndex={1}
        headerPrefix="Test Assay Protocol"
        helpTopic={null}
        index={1}
        initCollapsed={true}
        key="1"
        modelDomains={
          Immutable.List [
            Immutable.Record {
              "name": "Batch Fields",
              "container": undefined,
              "description": undefined,
              "domainURI": undefined,
              "domainId": null,
              "allowFileLinkProperties": false,
              "allowAttachmentProperties": false,
              "allowFlagProperties": true,
              "allowSampleSubjectProperties": true,
              "allowTextChoiceProperties": true,
              "allowTimepointProperties": false,
              "showDefaultValueSettings": false,
              "defaultDefaultValueType": undefined,
              "defaultValueOptions": Immutable.List [],
              "fields": Immutable.List [],
              "indices": Immutable.List [],
              "domainException": undefined,
              "mandatoryFieldNames": Immutable.List [],
              "reservedFieldNames": Immutable.List [],
              "newDesignFields": undefined,
              "instructions": undefined,
              "domainKindName": undefined,
              "schemaName": undefined,
              "queryName": undefined,
            },
            Immutable.Record {
              "name": "Sample Fields",
              "container": undefined,
              "description": undefined,
              "domainURI": undefined,
              "domainId": null,
              "allowFileLinkProperties": false,
              "allowAttachmentProperties": false,
              "allowFlagProperties": true,
              "allowSampleSubjectProperties": true,
              "allowTextChoiceProperties": true,
              "allowTimepointProperties": false,
              "showDefaultValueSettings": false,
              "defaultDefaultValueType": undefined,
              "defaultValueOptions": Immutable.List [],
              "fields": Immutable.List [
                Immutable.Record {
                  "conceptURI": undefined,
                  "conditionalFormats": Immutable.List [],
                  "defaultScale": undefined,
                  "defaultValueType": undefined,
                  "defaultValue": undefined,
                  "defaultDisplayValue": undefined,
                  "description": undefined,
                  "dimension": undefined,
                  "excludeFromShifting": false,
                  "format": undefined,
                  "hidden": false,
                  "importAliases": undefined,
                  "label": undefined,
                  "lookupContainer": undefined,
                  "lookupQuery": undefined,
                  "lookupSchema": undefined,
                  "lookupValidator": undefined,
                  "measure": undefined,
                  "mvEnabled": false,
                  "name": "field1",
                  "PHI": undefined,
                  "propertyId": undefined,
                  "propertyURI": undefined,
                  "propertyValidators": Immutable.List [],
                  "rangeValidators": Immutable.List [],
                  "rangeURI": "xsd:string",
                  "regexValidators": Immutable.List [],
                  "textChoiceValidator": undefined,
                  "recommendedVariable": false,
                  "required": false,
                  "scale": 4000,
                  "URL": undefined,
                  "shownInDetailsView": true,
                  "shownInInsertView": true,
                  "shownInUpdateView": true,
                  "visible": true,
                  "dataType": Immutable.Record {
                    "conceptURI": undefined,
                    "display": "Text",
                    "name": "string",
                    "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                    "alternateRangeURI": "xsd:string",
                    "shortDisplay": "String",
                    "lookupSchema": undefined,
                    "lookupQuery": undefined,
                  },
                  "lookupQueryValue": undefined,
                  "lookupType": Immutable.Record {
                    "conceptURI": undefined,
                    "display": "Lookup",
                    "name": "lookup",
                    "rangeURI": "xsd:string",
                    "alternateRangeURI": undefined,
                    "shortDisplay": undefined,
                    "lookupSchema": undefined,
                    "lookupQuery": undefined,
                  },
                  "original": {
                    "conceptURI": undefined,
                    "dataType": Immutable.Record {
                      "conceptURI": undefined,
                      "display": "Text",
                      "name": "string",
                      "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                      "alternateRangeURI": "xsd:string",
                      "shortDisplay": "String",
                      "lookupSchema": undefined,
                      "lookupQuery": undefined,
                    },
                    "name": "field1",
                    "rangeURI": undefined,
                  },
                  "updatedField": false,
                  "isPrimaryKey": false,
                  "lockType": "NotLocked",
                  "wrappedColumnName": undefined,
                  "disablePhiLevel": false,
                  "lockExistingField": false,
                  "sourceOntology": undefined,
                  "conceptSubtree": undefined,
                  "conceptLabelColumn": undefined,
                  "conceptImportColumn": undefined,
                  "principalConceptCode": undefined,
                  "derivationDataScope": undefined,
                  "selected": false,
                  "scannable": false,
                },
                Immutable.Record {
                  "conceptURI": undefined,
                  "conditionalFormats": Immutable.List [],
                  "defaultScale": undefined,
                  "defaultValueType": undefined,
                  "defaultValue": undefined,
                  "defaultDisplayValue": undefined,
                  "description": undefined,
                  "dimension": undefined,
                  "excludeFromShifting": false,
                  "format": undefined,
                  "hidden": false,
                  "importAliases": undefined,
                  "label": undefined,
                  "lookupContainer": undefined,
                  "lookupQuery": undefined,
                  "lookupSchema": undefined,
                  "lookupValidator": undefined,
                  "measure": undefined,
                  "mvEnabled": false,
                  "name": "field2",
                  "PHI": undefined,
                  "propertyId": undefined,
                  "propertyURI": undefined,
                  "propertyValidators": Immutable.List [],
                  "rangeValidators": Immutable.List [],
                  "rangeURI": "xsd:int",
                  "regexValidators": Immutable.List [],
                  "textChoiceValidator": undefined,
                  "recommendedVariable": false,
                  "required": false,
                  "scale": 4000,
                  "URL": undefined,
                  "shownInDetailsView": true,
                  "shownInInsertView": true,
                  "shownInUpdateView": true,
                  "visible": true,
                  "dataType": Immutable.Record {
                    "conceptURI": undefined,
                    "display": "Integer",
                    "name": "int",
                    "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                    "alternateRangeURI": "xsd:int",
                    "shortDisplay": undefined,
                    "lookupSchema": undefined,
                    "lookupQuery": undefined,
                  },
                  "lookupQueryValue": undefined,
                  "lookupType": Immutable.Record {
                    "conceptURI": undefined,
                    "display": "Lookup",
                    "name": "lookup",
                    "rangeURI": "xsd:int",
                    "alternateRangeURI": undefined,
                    "shortDisplay": undefined,
                    "lookupSchema": undefined,
                    "lookupQuery": undefined,
                  },
                  "original": {
                    "conceptURI": undefined,
                    "dataType": Immutable.Record {
                      "conceptURI": undefined,
                      "display": "Integer",
                      "name": "int",
                      "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                      "alternateRangeURI": "xsd:int",
                      "shortDisplay": undefined,
                      "lookupSchema": undefined,
                      "lookupQuery": undefined,
                    },
                    "name": "field2",
                    "rangeURI": undefined,
                  },
                  "updatedField": false,
                  "isPrimaryKey": false,
                  "lockType": "NotLocked",
                  "wrappedColumnName": undefined,
                  "disablePhiLevel": false,
                  "lockExistingField": false,
                  "sourceOntology": undefined,
                  "conceptSubtree": undefined,
                  "conceptLabelColumn": undefined,
                  "conceptImportColumn": undefined,
                  "principalConceptCode": undefined,
                  "derivationDataScope": undefined,
                  "selected": false,
                  "scannable": false,
                },
                Immutable.Record {
                  "conceptURI": undefined,
                  "conditionalFormats": Immutable.List [],
                  "defaultScale": undefined,
                  "defaultValueType": undefined,
                  "defaultValue": undefined,
                  "defaultDisplayValue": undefined,
                  "description": undefined,
                  "dimension": undefined,
                  "excludeFromShifting": false,
                  "format": undefined,
                  "hidden": false,
                  "importAliases": undefined,
                  "label": undefined,
                  "lookupContainer": undefined,
                  "lookupQuery": undefined,
                  "lookupSchema": undefined,
                  "lookupValidator": undefined,
                  "measure": undefined,
                  "mvEnabled": false,
                  "name": "field3",
                  "PHI": undefined,
                  "propertyId": undefined,
                  "propertyURI": undefined,
                  "propertyValidators": Immutable.List [],
                  "rangeValidators": Immutable.List [],
                  "rangeURI": "xsd:dateTime",
                  "regexValidators": Immutable.List [],
                  "textChoiceValidator": undefined,
                  "recommendedVariable": false,
                  "required": false,
                  "scale": 4000,
                  "URL": undefined,
                  "shownInDetailsView": true,
                  "shownInInsertView": true,
                  "shownInUpdateView": true,
                  "visible": true,
                  "dataType": Immutable.Record {
                    "conceptURI": undefined,
                    "display": "Date Time",
                    "name": "dateTime",
                    "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                    "alternateRangeURI": "xsd:dateTime",
                    "shortDisplay": undefined,
                    "lookupSchema": undefined,
                    "lookupQuery": undefined,
                  },
                  "lookupQueryValue": undefined,
                  "lookupType": Immutable.Record {
                    "conceptURI": undefined,
                    "display": "Lookup",
                    "name": "lookup",
                    "rangeURI": "xsd:dateTime",
                    "alternateRangeURI": undefined,
                    "shortDisplay": undefined,
                    "lookupSchema": undefined,
                    "lookupQuery": undefined,
                  },
                  "original": {
                    "conceptURI": undefined,
                    "dataType": Immutable.Record {
                      "conceptURI": undefined,
                      "display": "Date Time",
                      "name": "dateTime",
                      "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                      "alternateRangeURI": "xsd:dateTime",
                      "shortDisplay": undefined,
                      "lookupSchema": undefined,
                      "lookupQuery": undefined,
                    },
                    "name": "field3",
                    "rangeURI": undefined,
                  },
                  "updatedField": false,
                  "isPrimaryKey": false,
                  "lockType": "NotLocked",
                  "wrappedColumnName": undefined,
                  "disablePhiLevel": false,
                  "lockExistingField": false,
                  "sourceOntology": undefined,
                  "conceptSubtree": undefined,
                  "conceptLabelColumn": undefined,
                  "conceptImportColumn": undefined,
                  "principalConceptCode": undefined,
                  "derivationDataScope": undefined,
                  "selected": false,
                  "scannable": false,
                },
              ],
              "indices": Immutable.List [],
              "domainException": undefined,
              "mandatoryFieldNames": Immutable.List [],
              "reservedFieldNames": Immutable.List [],
              "newDesignFields": undefined,
              "instructions": undefined,
              "domainKindName": undefined,
              "schemaName": undefined,
              "queryName": undefined,
            },
          ]
        }
        onChange={[Function]}
        onToggle={[Function]}
        panelStatus="COMPLETE"
        testMode={true}
        validate={false}
      >
        <LookupProvider>
          <DomainFormImpl
            appPropertiesOnly={false}
            controlledCollapse={true}
            domain={
              Immutable.Record {
                "name": "Sample Fields",
                "container": undefined,
                "description": undefined,
                "domainURI": undefined,
                "domainId": null,
                "allowFileLinkProperties": false,
                "allowAttachmentProperties": false,
                "allowFlagProperties": true,
                "allowSampleSubjectProperties": true,
                "allowTextChoiceProperties": true,
                "allowTimepointProperties": false,
                "showDefaultValueSettings": false,
                "defaultDefaultValueType": undefined,
                "defaultValueOptions": Immutable.List [],
                "fields": Immutable.List [
                  Immutable.Record {
                    "conceptURI": undefined,
                    "conditionalFormats": Immutable.List [],
                    "defaultScale": undefined,
                    "defaultValueType": undefined,
                    "defaultValue": undefined,
                    "defaultDisplayValue": undefined,
                    "description": undefined,
                    "dimension": undefined,
                    "excludeFromShifting": false,
                    "format": undefined,
                    "hidden": false,
                    "importAliases": undefined,
                    "label": undefined,
                    "lookupContainer": undefined,
                    "lookupQuery": undefined,
                    "lookupSchema": undefined,
                    "lookupValidator": undefined,
                    "measure": undefined,
                    "mvEnabled": false,
                    "name": "field1",
                    "PHI": undefined,
                    "propertyId": undefined,
                    "propertyURI": undefined,
                    "propertyValidators": Immutable.List [],
                    "rangeValidators": Immutable.List [],
                    "rangeURI": "xsd:string",
                    "regexValidators": Immutable.List [],
                    "textChoiceValidator": undefined,
                    "recommendedVariable": false,
                    "required": false,
                    "scale": 4000,
                    "URL": undefined,
                    "shownInDetailsView": true,
                    "shownInInsertView": true,
                    "shownInUpdateView": true,
                    "visible": true,
                    "dataType": Immutable.Record {
                      "conceptURI": undefined,
                      "display": "Text",
                      "name": "string",
                      "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                      "alternateRangeURI": "xsd:string",
                      "shortDisplay": "String",
                      "lookupSchema": undefined,
                      "lookupQuery": undefined,
                    },
                    "lookupQueryValue": undefined,
                    "lookupType": Immutable.Record {
                      "conceptURI": undefined,
                      "display": "Lookup",
                      "name": "lookup",
                      "rangeURI": "xsd:string",
                      "alternateRangeURI": undefined,
                      "shortDisplay": undefined,
                      "lookupSchema": undefined,
                      "lookupQuery": undefined,
                    },
                    "original": {
                      "conceptURI": undefined,
                      "dataType": Immutable.Record {
                        "conceptURI": undefined,
                        "display": "Text",
                        "name": "string",
                        "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                        "alternateRangeURI": "xsd:string",
                        "shortDisplay": "String",
                        "lookupSchema": undefined,
                        "lookupQuery": undefined,
                      },
                      "name": "field1",
                      "rangeURI": undefined,
                    },
                    "updatedField": false,
                    "isPrimaryKey": false,
                    "lockType": "NotLocked",
                    "wrappedColumnName": undefined,
                    "disablePhiLevel": false,
                    "lockExistingField": false,
                    "sourceOntology": undefined,
                    "conceptSubtree": undefined,
                    "conceptLabelColumn": undefined,
                    "conceptImportColumn": undefined,
                    "principalConceptCode": undefined,
                    "derivationDataScope": undefined,
                    "selected": false,
                    "scannable": false,
                  },
                  Immutable.Record {
                    "conceptURI": undefined,
                    "conditionalFormats": Immutable.List [],
                    "defaultScale": undefined,
                    "defaultValueType": undefined,
                    "defaultValue": undefined,
                    "defaultDisplayValue": undefined,
                    "description": undefined,
                    "dimension": undefined,
                    "excludeFromShifting": false,
                    "format": undefined,
                    "hidden": false,
                    "importAliases": undefined,
                    "label": undefined,
                    "lookupContainer": undefined,
                    "lookupQuery": undefined,
                    "lookupSchema": undefined,
                    "lookupValidator": undefined,
                    "measure": undefined,
                    "mvEnabled": false,
                    "name": "field2",
                    "PHI": undefined,
                    "propertyId": undefined,
                    "propertyURI": undefined,
                    "propertyValidators": Immutable.List [],
                    "rangeValidators": Immutable.List [],
                    "rangeURI": "xsd:int",
                    "regexValidators": Immutable.List [],
                    "textChoiceValidator": undefined,
                    "recommendedVariable": false,
                    "required": false,
                    "scale": 4000,
                    "URL": undefined,
                    "shownInDetailsView": true,
                    "shownInInsertView": true,
                    "shownInUpdateView": true,
                    "visible": true,
                    "dataType": Immutable.Record {
                      "conceptURI": undefined,
                      "display": "Integer",
                      "name": "int",
                      "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                      "alternateRangeURI": "xsd:int",
                      "shortDisplay": undefined,
                      "lookupSchema": undefined,
                      "lookupQuery": undefined,
                    },
                    "lookupQueryValue": undefined,
                    "lookupType": Immutable.Record {
                      "conceptURI": undefined,
                      "display": "Lookup",
                      "name": "lookup",
                      "rangeURI": "xsd:int",
                      "alternateRangeURI": undefined,
                      "shortDisplay": undefined,
                      "lookupSchema": undefined,
                      "lookupQuery": undefined,
                    },
                    "original": {
                      "conceptURI": undefined,
                      "dataType": Immutable.Record {
                        "conceptURI": undefined,
                        "display": "Integer",
                        "name": "int",
                        "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                        "alternateRangeURI": "xsd:int",
                        "shortDisplay": undefined,
                        "lookupSchema": undefined,
                        "lookupQuery": undefined,
                      },
                      "name": "field2",
                      "rangeURI": undefined,
                    },
                    "updatedField": false,
                    "isPrimaryKey": false,
                    "lockType": "NotLocked",
                    "wrappedColumnName": undefined,
                    "disablePhiLevel": false,
                    "lockExistingField": false,
                    "sourceOntology": undefined,
                    "conceptSubtree": undefined,
                    "conceptLabelColumn": undefined,
                    "conceptImportColumn": undefined,
                    "principalConceptCode": undefined,
                    "derivationDataScope": undefined,
                    "selected": false,
                    "scannable": false,
                  },
                  Immutable.Record {
                    "conceptURI": undefined,
                    "conditionalFormats": Immutable.List [],
                    "defaultScale": undefined,
                    "defaultValueType": undefined,
                    "defaultValue": undefined,
                    "defaultDisplayValue": undefined,
                    "description": undefined,
                    "dimension": undefined,
                    "excludeFromShifting": false,
                    "format": undefined,
                    "hidden": false,
                    "importAliases": undefined,
                    "label": undefined,
                    "lookupContainer": undefined,
                    "lookupQuery": undefined,
                    "lookupSchema": undefined,
                    "lookupValidator": undefined,
                    "measure": undefined,
                    "mvEnabled": false,
                    "name": "field3",
                    "PHI": undefined,
                    "propertyId": undefined,
                    "propertyURI": undefined,
                    "propertyValidators": Immutable.List [],
                    "rangeValidators": Immutable.List [],
                    "rangeURI": "xsd:dateTime",
                    "regexValidators": Immutable.List [],
                    "textChoiceValidator": undefined,
                    "recommendedVariable": false,
                    "required": false,
                    "scale": 4000,
                    "URL": undefined,
                    "shownInDetailsView": true,
                    "shownInInsertView": true,
                    "shownInUpdateView": true,
                    "visible": true,
                    "dataType": Immutable.Record {
                      "conceptURI": undefined,
                      "display": "Date Time",
                      "name": "dateTime",
                      "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                      "alternateRangeURI": "xsd:dateTime",
                      "shortDisplay": undefined,
                      "lookupSchema": undefined,
                      "lookupQuery": undefined,
                    },
                    "lookupQueryValue": undefined,
                    "lookupType": Immutable.Record {
                      "conceptURI": undefined,
                      "display": "Lookup",
                      "name": "lookup",
                      "rangeURI": "xsd:dateTime",
                      "alternateRangeURI": undefined,
                      "shortDisplay": undefined,
                      "lookupSchema": undefined,
                      "lookupQuery": undefined,
                    },
                    "original": {
                      "conceptURI": undefined,
                      "dataType": Immutable.Record {
                        "conceptURI": undefined,
                        "display": "Date Time",
                        "name": "dateTime",
                        "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                        "alternateRangeURI": "xsd:dateTime",
                        "shortDisplay": undefined,
                        "lookupSchema": undefined,
                        "lookupQuery": undefined,
                      },
                      "name": "field3",
                      "rangeURI": undefined,
                    },
                    "updatedField": false,
                    "isPrimaryKey": false,
                    "lockType": "NotLocked",
                    "wrappedColumnName": undefined,
                    "disablePhiLevel": false,
                    "lockExistingField": false,
                    "sourceOntology": undefined,
                    "conceptSubtree": undefined,
                    "conceptLabelColumn": undefined,
                    "conceptImportColumn": undefined,
                    "principalConceptCode": undefined,
                    "derivationDataScope": undefined,
                    "selected": false,
                    "scannable": false,
                  },
                ],
                "indices": Immutable.List [],
                "domainException": undefined,
                "mandatoryFieldNames": Immutable.List [],
                "reservedFieldNames": Immutable.List [],
                "newDesignFields": undefined,
                "instructions": undefined,
                "domainKindName": undefined,
                "schemaName": undefined,
                "queryName": undefined,
              }
            }
            domainFormDisplayOptions={
              {
                "domainKindDisplayName": "assay design",
                "hideFilePropertyType": undefined,
                "hideInferFromFile": true,
                "hideStudyPropertyTypes": true,
                "textChoiceLockedForDomain": true,
              }
            }
            domainIndex={1}
            headerPrefix="Test Assay Protocol"
            helpNoun="field designer"
            helpTopic={null}
            index={1}
            initCollapsed={true}
            isNew={false}
            modelDomains={
              Immutable.List [
                Immutable.Record {
                  "name": "Batch Fields",
                  "container": undefined,
                  "description": undefined,
                  "domainURI": undefined,
                  "domainId": null,
                  "allowFileLinkProperties": false,
                  "allowAttachmentProperties": false,
                  "allowFlagProperties": true,
                  "allowSampleSubjectProperties": true,
                  "allowTextChoiceProperties": true,
                  "allowTimepointProperties": false,
                  "showDefaultValueSettings": false,
                  "defaultDefaultValueType": undefined,
                  "defaultValueOptions": Immutable.List [],
                  "fields": Immutable.List [],
                  "indices": Immutable.List [],
                  "domainException": undefined,
                  "mandatoryFieldNames": Immutable.List [],
                  "reservedFieldNames": Immutable.List [],
                  "newDesignFields": undefined,
                  "instructions": undefined,
                  "domainKindName": undefined,
                  "schemaName": undefined,
                  "queryName": undefined,
                },
                Immutable.Record {
                  "name": "Sample Fields",
                  "container": undefined,
                  "description": undefined,
                  "domainURI": undefined,
                  "domainId": null,
                  "allowFileLinkProperties": false,
                  "allowAttachmentProperties": false,
                  "allowFlagProperties": true,
                  "allowSampleSubjectProperties": true,
                  "allowTextChoiceProperties": true,
                  "allowTimepointProperties": false,
                  "showDefaultValueSettings": false,
                  "defaultDefaultValueType": undefined,
                  "defaultValueOptions": Immutable.List [],
                  "fields": Immutable.List [
                    Immutable.Record {
                      "conceptURI": undefined,
                      "conditionalFormats": Immutable.List [],
                      "defaultScale": undefined,
                      "defaultValueType": undefined,
                      "defaultValue": undefined,
                      "defaultDisplayValue": undefined,
                      "description": undefined,
                      "dimension": undefined,
                      "excludeFromShifting": false,
                      "format": undefined,
                      "hidden": false,
                      "importAliases": undefined,
                      "label": undefined,
                      "lookupContainer": undefined,
                      "lookupQuery": undefined,
                      "lookupSchema": undefined,
                      "lookupValidator": undefined,
                      "measure": undefined,
                      "mvEnabled": false,
                      "name": "field1",
                      "PHI": undefined,
                      "propertyId": undefined,
                      "propertyURI": undefined,
                      "propertyValidators": Immutable.List [],
                      "rangeValidators": Immutable.List [],
                      "rangeURI": "xsd:string",
                      "regexValidators": Immutable.List [],
                      "textChoiceValidator": undefined,
                      "recommendedVariable": false,
                      "required": false,
                      "scale": 4000,
                      "URL": undefined,
                      "shownInDetailsView": true,
                      "shownInInsertView": true,
                      "shownInUpdateView": true,
                      "visible": true,
                      "dataType": Immutable.Record {
                        "conceptURI": undefined,
                        "display": "Text",
                        "name": "string",
                        "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                        "alternateRangeURI": "xsd:string",
                        "shortDisplay": "String",
                        "lookupSchema": undefined,
                        "lookupQuery": undefined,
                      },
                      "lookupQueryValue": undefined,
                      "lookupType": Immutable.Record {
                        "conceptURI": undefined,
                        "display": "Lookup",
                        "name": "lookup",
                        "rangeURI": "xsd:string",
                        "alternateRangeURI": undefined,
                        "shortDisplay": undefined,
                        "lookupSchema": undefined,
                        "lookupQuery": undefined,
                      },
                      "original": {
                        "conceptURI": undefined,
                        "dataType": Immutable.Record {
                          "conceptURI": undefined,
                          "display": "Text",
                          "name": "string",
                          "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                          "alternateRangeURI": "xsd:string",
                          "shortDisplay": "String",
                          "lookupSchema": undefined,
                          "lookupQuery": undefined,
                        },
                        "name": "field1",
                        "rangeURI": undefined,
                      },
                      "updatedField": false,
                      "isPrimaryKey": false,
                      "lockType": "NotLocked",
                      "wrappedColumnName": undefined,
                      "disablePhiLevel": false,
                      "lockExistingField": false,
                      "sourceOntology": undefined,
                      "conceptSubtree": undefined,
                      "conceptLabelColumn": undefined,
                      "conceptImportColumn": undefined,
                      "principalConceptCode": undefined,
                      "derivationDataScope": undefined,
                      "selected": false,
                      "scannable": false,
                    },
                    Immutable.Record {
                      "conceptURI": undefined,
                      "conditionalFormats": Immutable.List [],
                      "defaultScale": undefined,
                      "defaultValueType": undefined,
                      "defaultValue": undefined,
                      "defaultDisplayValue": undefined,
                      "description": undefined,
                      "dimension": undefined,
                      "excludeFromShifting": false,
                      "format": undefined,
                      "hidden": false,
                      "importAliases": undefined,
                      "label": undefined,
                      "lookupContainer": undefined,
                      "lookupQuery": undefined,
                      "lookupSchema": undefined,
                      "lookupValidator": undefined,
                      "measure": undefined,
                      "mvEnabled": false,
                      "name": "field2",
                      "PHI": undefined,
                      "propertyId": undefined,
                      "propertyURI": undefined,
                      "propertyValidators": Immutable.List [],
                      "rangeValidators": Immutable.List [],
                      "rangeURI": "xsd:int",
                      "regexValidators": Immutable.List [],
                      "textChoiceValidator": undefined,
                      "recommendedVariable": false,
                      "required": false,
                      "scale": 4000,
                      "URL": undefined,
                      "shownInDetailsView": true,
                      "shownInInsertView": true,
                      "shownInUpdateView": true,
                      "visible": true,
                      "dataType": Immutable.Record {
                        "conceptURI": undefined,
                        "display": "Integer",
                        "name": "int",
                        "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                        "alternateRangeURI": "xsd:int",
                        "shortDisplay": undefined,
                        "lookupSchema": undefined,
                        "lookupQuery": undefined,
                      },
                      "lookupQueryValue": undefined,
                      "lookupType": Immutable.Record {
                        "conceptURI": undefined,
                        "display": "Lookup",
                        "name": "lookup",
                        "rangeURI": "xsd:int",
                        "alternateRangeURI": undefined,
                        "shortDisplay": undefined,
                        "lookupSchema": undefined,
                        "lookupQuery": undefined,
                      },
                      "original": {
                        "conceptURI": undefined,
                        "dataType": Immutable.Record {
                          "conceptURI": undefined,
                          "display": "Integer",
                          "name": "int",
                          "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                          "alternateRangeURI": "xsd:int",
                          "shortDisplay": undefined,
                          "lookupSchema": undefined,
                          "lookupQuery": undefined,
                        },
                        "name": "field2",
                        "rangeURI": undefined,
                      },
                      "updatedField": false,
                      "isPrimaryKey": false,
                      "lockType": "NotLocked",
                      "wrappedColumnName": undefined,
                      "disablePhiLevel": false,
                      "lockExistingField": false,
                      "sourceOntology": undefined,
                      "conceptSubtree": undefined,
                      "conceptLabelColumn": undefined,
                      "conceptImportColumn": undefined,
                      "principalConceptCode": undefined,
                      "derivationDataScope": undefined,
                      "selected": false,
                      "scannable": false,
                    },
                    Immutable.Record {
                      "conceptURI": undefined,
                      "conditionalFormats": Immutable.List [],
                      "defaultScale": undefined,
                      "defaultValueType": undefined,
                      "defaultValue": undefined,
                      "defaultDisplayValue": undefined,
                      "description": undefined,
                      "dimension": undefined,
                      "excludeFromShifting": false,
                      "format": undefined,
                      "hidden": false,
                      "importAliases": undefined,
                      "label": undefined,
                      "lookupContainer": undefined,
                      "lookupQuery": undefined,
                      "lookupSchema": undefined,
                      "lookupValidator": undefined,
                      "measure": undefined,
                      "mvEnabled": false,
                      "name": "field3",
                      "PHI": undefined,
                      "propertyId": undefined,
                      "propertyURI": undefined,
                      "propertyValidators": Immutable.List [],
                      "rangeValidators": Immutable.List [],
                      "rangeURI": "xsd:dateTime",
                      "regexValidators": Immutable.List [],
                      "textChoiceValidator": undefined,
                      "recommendedVariable": false,
                      "required": false,
                      "scale": 4000,
                      "URL": undefined,
                      "shownInDetailsView": true,
                      "shownInInsertView": true,
                      "shownInUpdateView": true,
                      "visible": true,
                      "dataType": Immutable.Record {
                        "conceptURI": undefined,
                        "display": "Date Time",
                        "name": "dateTime",
                        "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                        "alternateRangeURI": "xsd:dateTime",
                        "shortDisplay": undefined,
                        "lookupSchema": undefined,
                        "lookupQuery": undefined,
                      },
                      "lookupQueryValue": undefined,
                      "lookupType": Immutable.Record {
                        "conceptURI": undefined,
                        "display": "Lookup",
                        "name": "lookup",
                        "rangeURI": "xsd:dateTime",
                        "alternateRangeURI": undefined,
                        "shortDisplay": undefined,
                        "lookupSchema": undefined,
                        "lookupQuery": undefined,
                      },
                      "original": {
                        "conceptURI": undefined,
                        "dataType": Immutable.Record {
                          "conceptURI": undefined,
                          "display": "Date Time",
                          "name": "dateTime",
                          "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                          "alternateRangeURI": "xsd:dateTime",
                          "shortDisplay": undefined,
                          "lookupSchema": undefined,
                          "lookupQuery": undefined,
                        },
                        "name": "field3",
                        "rangeURI": undefined,
                      },
                      "updatedField": false,
                      "isPrimaryKey": false,
                      "lockType": "NotLocked",
                      "wrappedColumnName": undefined,
                      "disablePhiLevel": false,
                      "lockExistingField": false,
                      "sourceOntology": undefined,
                      "conceptSubtree": undefined,
                      "conceptLabelColumn": undefined,
                      "conceptImportColumn": undefined,
                      "principalConceptCode": undefined,
                      "derivationDataScope": undefined,
                      "selected": false,
                      "scannable": false,
                    },
                  ],
                  "indices": Immutable.List [],
                  "domainException": undefined,
                  "mandatoryFieldNames": Immutable.List [],
                  "reservedFieldNames": Immutable.List [],
                  "newDesignFields": undefined,
                  "instructions": undefined,
                  "domainKindName": undefined,
                  "schemaName": undefined,
                  "queryName": undefined,
                },
              ]
            }
            onChange={[Function]}
            onToggle={[Function]}
            panelStatus="COMPLETE"
            showHeader={true}
            successBsStyle="success"
            testMode={true}
            validate={false}
          >
            <ForwardRef
              className="domain-form-panel"
              expanded={false}
              onToggle={[Function]}
            >
              <Uncontrolled(Panel)
                className="domain-form-panel"
                expanded={false}
                innerRef={null}
                onToggle={[Function]}
              >
                <Panel
                  bsClass="panel"
                  bsStyle="default"
                  className="domain-form-panel"
                  expanded={false}
                  onToggle={[Function]}
                >
                  <div
                    className="domain-form-panel panel panel-default"
                  >
                    <CollapsiblePanelHeader
                      collapsed={true}
                      controlledCollapse={true}
                      headerDetails="3 Fields Defined"
                      id="domainpropertiesrow-Sample-Fields-hdr"
                      isValid={true}
                      panelStatus="COMPLETE"
                      title="Sample Fields"
                      togglePanel={[Function]}
                    >
                      <PanelHeading
                        bsClass="panel"
                        className="domain-panel-header domain-heading-collapsible domain-panel-header-collapsed"
                        componentClass="div"
                        id="domainpropertiesrow-Sample-Fields-hdr"
                        onClick={[Function]}
                      >
                        <div
                          className="domain-panel-header domain-heading-collapsible domain-panel-header-collapsed panel-heading"
                          id="domainpropertiesrow-Sample-Fields-hdr"
                          onClick={[Function]}
                        >
                          <span
                            className="domain-panel-status-icon domain-panel-status-icon-green"
                          >
                            <span
                              className="fa fa-check-circle"
                            />
                          </span>
                          <span
                            className="domain-panel-title"
                          >
                            Sample Fields
                          </span>
                          <span
                            className="pull-right"
                          >
                            <span
                              className="fa fa-lg fa-plus-square domain-form-expand-btn"
                            />
                          </span>
                          <Component
                            id="tooltip"
                            placement="top"
                            title="Sample Fields"
                          >
                            <span
                              className="label-help-target"
                              onMouseOut={[Function]}
                              onMouseOver={[Function]}
                            >
                              <span
                                className="label-help-icon fa fa-question-circle"
                              />
                              <Overlay
                                animation={[Function]}
                                placement="top"
                                rootClose={false}
                                show={false}
                              >
                                <Overlay
                                  placement="top"
                                  rootClose={false}
                                  show={false}
                                  transition={[Function]}
                                />
                              </Overlay>
                            </span>
                          </Component>
                          <span
                            className="domain-panel-header-fields-defined"
                          >
                            3 Fields Defined
                          </span>
                        </div>
                      </PanelHeading>
                    </CollapsiblePanelHeader>
                    <PanelBody
                      bsClass="panel"
                      className="domain-field-top-noBuffer"
                      collapsible={true}
                    >
                      <PanelCollapse
                        bsClass="panel"
                      >
                        <Collapse
                          appear={false}
                          dimension="height"
                          getDimensionValue={[Function]}
                          in={false}
                          mountOnEnter={false}
                          timeout={300}
                          unmountOnExit={false}
                        >
                          <Transition
                            appear={false}
                            aria-expanded={null}
                            enter={true}
                            exit={true}
                            in={false}
                            mountOnEnter={false}
                            onEnter={[Function]}
                            onEntered={[Function]}
                            onEntering={[Function]}
                            onExit={[Function]}
                            onExited={[Function]}
                            onExiting={[Function]}
                            timeout={300}
                            unmountOnExit={false}
                          >
                            <div
                              aria-expanded={null}
                              className="panel-collapse collapse"
                            >
                              <div
                                className="domain-field-top-noBuffer panel-body"
                              >
                                <Row
                                  bsClass="row"
                                  className="domain-field-toolbar"
                                  componentClass="div"
                                >
                                  <div
                                    className="domain-field-toolbar row"
                                  >
                                    <Col
                                      bsClass="col"
                                      componentClass="div"
                                      xs={4}
                                    >
                                      <div
                                        className="col-xs-4"
                                      >
                                        <AddEntityButton
                                          buttonClass="domain-toolbar-add-btn"
                                          containerClass="container--toolbar-button"
                                          entity="Field"
                                          onClick={[Function]}
                                        >
                                          <ActionButton
                                            buttonClass="domain-toolbar-add-btn"
                                            containerClass="container--toolbar-button"
                                            helperTitle="More Info"
                                            onClick={[Function]}
                                          >
                                            <div
                                              className="container--toolbar-button"
                                            >
                                              <div
                                                className="domain-toolbar-add-btn"
                                              >
                                                <span
                                                  className="container--action-button btn btn-default"
                                                  onClick={[Function]}
                                                >
                                                  <i
                                                    className="fa fa-plus-circle container--addition-icon"
                                                  />
                                                   Add 
                                                  Field
                                                </span>
                                              </div>
                                            </div>
                                          </ActionButton>
                                        </AddEntityButton>
                                        <ActionButton
                                          buttonClass="domain-toolbar-delete-btn"
                                          containerClass="container--toolbar-button"
                                          disabled={true}
                                          helperTitle="More Info"
                                          onClick={[Function]}
                                        >
                                          <div
                                            className="container--toolbar-button"
                                          >
                                            <div
                                              className="domain-toolbar-delete-btn"
                                            >
                                              <span
                                                className="container--action-button btn btn-default disabled"
                                              >
                                                <i
                                                  className="fa fa-trash domain-toolbar-export-btn-icon"
                                                />
                                                 Delete
                                              </span>
                                            </div>
                                          </div>
                                        </ActionButton>
                                        <ActionButton
                                          buttonClass="domain-toolbar-export-btn"
                                          containerClass="container--toolbar-button"
                                          disabled={false}
                                          helperTitle="More Info"
                                          onClick={[Function]}
                                        >
                                          <div
                                            className="container--toolbar-button"
                                          >
                                            <div
                                              className="domain-toolbar-export-btn"
                                            >
                                              <span
                                                className="container--action-button btn btn-default"
                                                onClick={[Function]}
                                              >
                                                <i
                                                  className="fa fa-download domain-toolbar-export-btn-icon"
                                                />
                                                 Export
                                              </span>
                                            </div>
                                          </div>
                                        </ActionButton>
                                      </div>
                                    </Col>
                                    <Col
                                      bsClass="col"
                                      componentClass="div"
                                      xs={8}
                                    >
                                      <div
                                        className="col-xs-8"
                                      >
                                        <div
                                          className="pull-right domain-field-toolbar-right-aligned"
                                        >
                                          <FormControl
                                            bsClass="form-control"
                                            className="domain-search-input"
                                            componentClass="input"
                                            id="domain-search-name-1"
                                            onChange={[Function]}
                                            placeholder="Search Fields"
                                            type="text"
                                          >
                                            <input
                                              className="domain-search-input form-control"
                                              id="domain-search-name-1"
                                              onChange={[Function]}
                                              placeholder="Search Fields"
                                              type="text"
                                            />
                                          </FormControl>
                                        </div>
                                      </div>
                                    </Col>
                                  </div>
                                </Row>
                                <Row
                                  bsClass="row"
                                  className=""
                                  componentClass="div"
                                >
                                  <div
                                    className="row"
                                  >
                                    <Col
                                      bsClass="col"
                                      componentClass="div"
                                      xs={12}
                                    >
                                      <div
                                        className="col-xs-12"
                                      />
                                    </Col>
                                  </div>
                                </Row>
                                <DragDropContext
                                  onBeforeDragStart={[Function]}
                                  onDragEnd={[Function]}
                                >
                                  <ErrorBoundary>
                                    <App
                                      contextId="0"
                                      dragHandleUsageInstructions="
  Press space bar to start a drag.
  When dragging you can use the arrow keys to move the item around and escape to cancel.
  Some screen readers may require you to be in focus mode or to use your pass through key
"
                                      onBeforeDragStart={[Function]}
                                      onDragEnd={[Function]}
                                      setCallbacks={[Function]}
                                    >
                                      <Provider
                                        context={
                                          {
                                            "$$typeof": Symbol(react.context),
                                            "Consumer": {
                                              "$$typeof": Symbol(react.context),
                                              "_calculateChangedBits": null,
                                              "_context": [Circular],
                                            },
                                            "Provider": {
                                              "$$typeof": Symbol(react.provider),
                                              "_context": [Circular],
                                            },
                                            "_calculateChangedBits": null,
                                            "_currentRenderer": {},
                                            "_currentRenderer2": null,
                                            "_currentValue": null,
                                            "_currentValue2": null,
                                            "_threadCount": 0,
                                          }
                                        }
                                        store={
                                          {
                                            "@@observable": [Function],
                                            "dispatch": [Function],
                                            "getState": [Function],
                                            "replaceReducer": [Function],
                                            "subscribe": [Function],
                                          }
                                        }
                                      >
                                        <div
                                          className="domain-field-row domain-row-border-default domain-floating-hdr"
                                        >
                                          <Alert
                                            bsStyle="info"
                                          />
                                          <Row
                                            bsClass="row"
                                            componentClass="div"
                                          >
                                            <div
                                              className="row"
                                            >
                                              <div
                                                className="domain-field-header"
                                              >
                                                0
                                                 
                                                fields
                                                 selected
                                                <Button
                                                  active={false}
                                                  block={false}
                                                  bsClass="btn"
                                                  bsStyle="default"
                                                  className="domain-panel-header-clear-all"
                                                  disabled={true}
                                                  onClick={[Function]}
                                                >
                                                  <button
                                                    className="domain-panel-header-clear-all btn btn-default"
                                                    disabled={true}
                                                    onClick={[Function]}
                                                    type="button"
                                                  >
                                                    Clear
                                                  </button>
                                                </Button>
                                              </div>
                                            </div>
                                          </Row>
                                          <Row
                                            bsClass="row"
                                            className="domain-row-container"
                                            componentClass="div"
                                          >
                                            <div
                                              className="domain-row-container row"
                                            >
                                              <div
                                                className="domain-row-handle"
                                              />
                                              <div
                                                className="domain-row-action-section"
                                              >
                                                <Checkbox
                                                  bsClass="checkbox"
                                                  checked={false}
                                                  className="domain-field-check-icon"
                                                  disabled={false}
                                                  id="domain-select-all-checkbox"
                                                  inline={false}
                                                  name="domain-select-all-checkbox"
                                                  onChange={[Function]}
                                                  title=""
                                                >
                                                  <div
                                                    className="domain-field-check-icon checkbox"
                                                  >
                                                    <label
                                                      title=""
                                                    >
                                                      <input
                                                        checked={false}
                                                        disabled={false}
                                                        id="domain-select-all-checkbox"
                                                        name="domain-select-all-checkbox"
                                                        onChange={[Function]}
                                                        type="checkbox"
                                                      />
                                                    </label>
                                                  </div>
                                                </Checkbox>
                                              </div>
                                              <div>
                                                <Col
                                                  bsClass="col"
                                                  className="domain-row-base-fields"
                                                  componentClass="div"
                                                  xs={6}
                                                >
                                                  <div
                                                    className="domain-row-base-fields col-xs-6"
                                                  >
                                                    <Col
                                                      bsClass="col"
                                                      componentClass="div"
                                                      xs={6}
                                                    >
                                                      <div
                                                        className="col-xs-6"
                                                      >
                                                        <b>
                                                          Name *
                                                        </b>
                                                      </div>
                                                    </Col>
                                                    <Col
                                                      bsClass="col"
                                                      componentClass="div"
                                                      xs={4}
                                                    >
                                                      <div
                                                        className="col-xs-4"
                                                      >
                                                        <b>
                                                          Data Type *
                                                        </b>
                                                      </div>
                                                    </Col>
                                                    <Col
                                                      bsClass="col"
                                                      componentClass="div"
                                                      xs={2}
                                                    >
                                                      <div
                                                        className="col-xs-2"
                                                      >
                                                        <b>
                                                          Required
                                                        </b>
                                                      </div>
                                                    </Col>
                                                  </div>
                                                </Col>
                                                <Col
                                                  bsClass="col"
                                                  componentClass="div"
                                                  xs={6}
                                                >
                                                  <div
                                                    className="col-xs-6"
                                                  >
                                                    <b>
                                                      Details
                                                    </b>
                                                  </div>
                                                </Col>
                                              </div>
                                            </div>
                                          </Row>
                                        </div>
                                        <Connect(Droppable)
                                          direction="vertical"
                                          droppableId="domain-form-droppable"
                                          getContainerForClone={[Function]}
                                          ignoreContainerClipping={false}
                                          isCombineEnabled={false}
                                          isDropDisabled={false}
                                          mode="standard"
                                          renderClone={null}
                                          type="DEFAULT"
                                        >
                                          <Droppable
                                            direction="vertical"
                                            droppableId="domain-form-droppable"
                                            getContainerForClone={[Function]}
                                            ignoreContainerClipping={false}
                                            isCombineEnabled={false}
                                            isDropDisabled={false}
                                            mode="standard"
                                            placeholder={null}
                                            renderClone={null}
                                            shouldAnimatePlaceholder={false}
                                            snapshot={
                                              {
                                                "draggingFromThisWith": null,
                                                "draggingOverWith": null,
                                                "isDraggingOver": false,
                                                "isUsingPlaceholder": false,
                                              }
                                            }
                                            type="DEFAULT"
                                            updateViewportMaxScroll={[Function]}
                                            useClone={null}
                                          >
                                            <div
                                              data-rbd-droppable-context-id="0"
                                              data-rbd-droppable-id="domain-form-droppable"
                                            >
                                              <Form
                                                bsClass="form"
                                                className="domain-form"
                                                componentClass="form"
                                                horizontal={false}
                                                inline={false}
                                              >
                                                <form
                                                  className="domain-form"
                                                >
                                                  <DomainRow
                                                    appPropertiesOnly={false}
                                                    availableTypes={
                                                      Immutable.List [
                                                        Immutable.Record {
                                                          "conceptURI": undefined,
                                                          "display": "Text",
                                                          "name": "string",
                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                          "alternateRangeURI": "xsd:string",
                                                          "shortDisplay": "String",
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                        Immutable.Record {
                                                          "conceptURI": undefined,
                                                          "display": "Multi-Line Text",
                                                          "name": "multiLine",
                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#multiLine",
                                                          "alternateRangeURI": undefined,
                                                          "shortDisplay": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                        Immutable.Record {
                                                          "conceptURI": undefined,
                                                          "display": "Boolean",
                                                          "name": "boolean",
                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#boolean",
                                                          "alternateRangeURI": "xsd:boolean",
                                                          "shortDisplay": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                        Immutable.Record {
                                                          "conceptURI": undefined,
                                                          "display": "Integer",
                                                          "name": "int",
                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                                          "alternateRangeURI": "xsd:int",
                                                          "shortDisplay": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                        Immutable.Record {
                                                          "conceptURI": undefined,
                                                          "display": "Decimal (floating point)",
                                                          "name": "double",
                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#double",
                                                          "alternateRangeURI": "xsd:double",
                                                          "shortDisplay": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                        Immutable.Record {
                                                          "conceptURI": undefined,
                                                          "display": "Date Time",
                                                          "name": "dateTime",
                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                                                          "alternateRangeURI": "xsd:dateTime",
                                                          "shortDisplay": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                        Immutable.Record {
                                                          "conceptURI": "http://www.labkey.org/exp/xml#flag",
                                                          "display": "Flag",
                                                          "name": "flag",
                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                          "alternateRangeURI": undefined,
                                                          "shortDisplay": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                        Immutable.Record {
                                                          "conceptURI": undefined,
                                                          "display": "User",
                                                          "name": "users",
                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                                          "alternateRangeURI": undefined,
                                                          "shortDisplay": undefined,
                                                          "lookupSchema": "core",
                                                          "lookupQuery": "users",
                                                        },
                                                        Immutable.Record {
                                                          "conceptURI": "http://cpas.labkey.com/Study#ParticipantId",
                                                          "display": "Subject/Participant",
                                                          "name": "ParticipantId",
                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                          "alternateRangeURI": undefined,
                                                          "shortDisplay": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                        Immutable.Record {
                                                          "conceptURI": undefined,
                                                          "display": "Lookup",
                                                          "name": "lookup",
                                                          "rangeURI": undefined,
                                                          "alternateRangeURI": undefined,
                                                          "shortDisplay": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                        Immutable.Record {
                                                          "conceptURI": "http://www.labkey.org/exp/xml#sample",
                                                          "display": "Sample",
                                                          "name": "sample",
                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                                          "alternateRangeURI": undefined,
                                                          "shortDisplay": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                        Immutable.Record {
                                                          "conceptURI": "http://www.labkey.org/types#textChoice",
                                                          "display": "Text Choice",
                                                          "name": "textChoice",
                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                          "alternateRangeURI": undefined,
                                                          "shortDisplay": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                      ]
                                                    }
                                                    defaultValueOptions={Immutable.List []}
                                                    domainFormDisplayOptions={
                                                      {
                                                        "domainKindDisplayName": "assay design",
                                                        "hideFilePropertyType": undefined,
                                                        "hideInferFromFile": true,
                                                        "hideStudyPropertyTypes": true,
                                                        "textChoiceLockedForDomain": true,
                                                      }
                                                    }
                                                    domainId={null}
                                                    domainIndex={1}
                                                    dragging={false}
                                                    expandTransition={300}
                                                    expanded={false}
                                                    field={
                                                      Immutable.Record {
                                                        "conceptURI": undefined,
                                                        "conditionalFormats": Immutable.List [],
                                                        "defaultScale": undefined,
                                                        "defaultValueType": undefined,
                                                        "defaultValue": undefined,
                                                        "defaultDisplayValue": undefined,
                                                        "description": undefined,
                                                        "dimension": undefined,
                                                        "excludeFromShifting": false,
                                                        "format": undefined,
                                                        "hidden": false,
                                                        "importAliases": undefined,
                                                        "label": undefined,
                                                        "lookupContainer": undefined,
                                                        "lookupQuery": undefined,
                                                        "lookupSchema": undefined,
                                                        "lookupValidator": undefined,
                                                        "measure": undefined,
                                                        "mvEnabled": false,
                                                        "name": "field1",
                                                        "PHI": undefined,
                                                        "propertyId": undefined,
                                                        "propertyURI": undefined,
                                                        "propertyValidators": Immutable.List [],
                                                        "rangeValidators": Immutable.List [],
                                                        "rangeURI": "xsd:string",
                                                        "regexValidators": Immutable.List [],
                                                        "textChoiceValidator": undefined,
                                                        "recommendedVariable": false,
                                                        "required": false,
                                                        "scale": 4000,
                                                        "URL": undefined,
                                                        "shownInDetailsView": true,
                                                        "shownInInsertView": true,
                                                        "shownInUpdateView": true,
                                                        "visible": true,
                                                        "dataType": Immutable.Record {
                                                          "conceptURI": undefined,
                                                          "display": "Text",
                                                          "name": "string",
                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                          "alternateRangeURI": "xsd:string",
                                                          "shortDisplay": "String",
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                        "lookupQueryValue": undefined,
                                                        "lookupType": Immutable.Record {
                                                          "conceptURI": undefined,
                                                          "display": "Lookup",
                                                          "name": "lookup",
                                                          "rangeURI": "xsd:string",
                                                          "alternateRangeURI": undefined,
                                                          "shortDisplay": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                        "original": {
                                                          "conceptURI": undefined,
                                                          "dataType": Immutable.Record {
                                                            "conceptURI": undefined,
                                                            "display": "Text",
                                                            "name": "string",
                                                            "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                            "alternateRangeURI": "xsd:string",
                                                            "shortDisplay": "String",
                                                            "lookupSchema": undefined,
                                                            "lookupQuery": undefined,
                                                          },
                                                          "name": "field1",
                                                          "rangeURI": undefined,
                                                        },
                                                        "updatedField": false,
                                                        "isPrimaryKey": false,
                                                        "lockType": "NotLocked",
                                                        "wrappedColumnName": undefined,
                                                        "disablePhiLevel": false,
                                                        "lockExistingField": false,
                                                        "sourceOntology": undefined,
                                                        "conceptSubtree": undefined,
                                                        "conceptLabelColumn": undefined,
                                                        "conceptImportColumn": undefined,
                                                        "principalConceptCode": undefined,
                                                        "derivationDataScope": undefined,
                                                        "selected": false,
                                                        "scannable": false,
                                                      }
                                                    }
                                                    fieldDetailsInfo={{}}
                                                    getDomainFields={[Function]}
                                                    helpNoun="field designer"
                                                    index={0}
                                                    key="domain-row-key-0"
                                                    maxPhiLevel="Restricted"
                                                    onChange={[Function]}
                                                    onDelete={[Function]}
                                                    onExpand={[Function]}
                                                    showDefaultValueSettings={false}
                                                    successBsStyle="success"
                                                  >
                                                    <PublicDraggable
                                                      draggableId="domainpropertiesrow-domaindrag-1-0"
                                                      index={0}
                                                    >
                                                      <PrivateDraggable
                                                        canDragInteractiveElements={false}
                                                        draggableId="domainpropertiesrow-domaindrag-1-0"
                                                        index={0}
                                                        isClone={false}
                                                        isEnabled={true}
                                                        shouldRespectForcePress={false}
                                                      >
                                                        <Connect(Draggable)
                                                          canDragInteractiveElements={false}
                                                          draggableId="domainpropertiesrow-domaindrag-1-0"
                                                          index={0}
                                                          isClone={false}
                                                          isEnabled={true}
                                                          shouldRespectForcePress={false}
                                                        >
                                                          <Draggable
                                                            canDragInteractiveElements={false}
                                                            draggableId="domainpropertiesrow-domaindrag-1-0"
                                                            dropAnimationFinished={[Function]}
                                                            index={0}
                                                            isClone={false}
                                                            isEnabled={true}
                                                            mapped={
                                                              {
                                                                "combineTargetFor": null,
                                                                "offset": {
                                                                  "x": 0,
                                                                  "y": 0,
                                                                },
                                                                "shouldAnimateDisplacement": true,
                                                                "snapshot": {
                                                                  "combineTargetFor": null,
                                                                  "combineWith": null,
                                                                  "draggingOver": null,
                                                                  "dropAnimation": null,
                                                                  "isClone": false,
                                                                  "isDragging": false,
                                                                  "isDropAnimating": false,
                                                                  "mode": null,
                                                                },
                                                                "type": "SECONDARY",
                                                              }
                                                            }
                                                            shouldRespectForcePress={false}
                                                          >
                                                            <div
                                                              className="domain-field-row domain-row-border-default"
                                                              data-rbd-draggable-context-id="0"
                                                              data-rbd-draggable-id="domainpropertiesrow-domaindrag-1-0"
                                                              onTransitionEnd={null}
                                                              style={
                                                                {
                                                                  "transform": null,
                                                                  "transition": null,
                                                                }
                                                              }
                                                              tabIndex={0}
                                                            >
                                                              <Row
                                                                bsClass="row"
                                                                className="domain-row-container"
                                                                componentClass="div"
                                                                key="domainpropertiesrow-domainrow-1-0"
                                                              >
                                                                <div
                                                                  className="domain-row-container row"
                                                                >
                                                                  <AdvancedSettings
                                                                    defaultValueOptions={Immutable.List []}
                                                                    domainFormDisplayOptions={
                                                                      {
                                                                        "domainKindDisplayName": "assay design",
                                                                        "hideFilePropertyType": undefined,
                                                                        "hideInferFromFile": true,
                                                                        "hideStudyPropertyTypes": true,
                                                                        "textChoiceLockedForDomain": true,
                                                                      }
                                                                    }
                                                                    domainId={null}
                                                                    domainIndex={1}
                                                                    field={
                                                                      Immutable.Record {
                                                                        "conceptURI": undefined,
                                                                        "conditionalFormats": Immutable.List [],
                                                                        "defaultScale": undefined,
                                                                        "defaultValueType": undefined,
                                                                        "defaultValue": undefined,
                                                                        "defaultDisplayValue": undefined,
                                                                        "description": undefined,
                                                                        "dimension": undefined,
                                                                        "excludeFromShifting": false,
                                                                        "format": undefined,
                                                                        "hidden": false,
                                                                        "importAliases": undefined,
                                                                        "label": undefined,
                                                                        "lookupContainer": undefined,
                                                                        "lookupQuery": undefined,
                                                                        "lookupSchema": undefined,
                                                                        "lookupValidator": undefined,
                                                                        "measure": undefined,
                                                                        "mvEnabled": false,
                                                                        "name": "field1",
                                                                        "PHI": undefined,
                                                                        "propertyId": undefined,
                                                                        "propertyURI": undefined,
                                                                        "propertyValidators": Immutable.List [],
                                                                        "rangeValidators": Immutable.List [],
                                                                        "rangeURI": "xsd:string",
                                                                        "regexValidators": Immutable.List [],
                                                                        "textChoiceValidator": undefined,
                                                                        "recommendedVariable": false,
                                                                        "required": false,
                                                                        "scale": 4000,
                                                                        "URL": undefined,
                                                                        "shownInDetailsView": true,
                                                                        "shownInInsertView": true,
                                                                        "shownInUpdateView": true,
                                                                        "visible": true,
                                                                        "dataType": Immutable.Record {
                                                                          "conceptURI": undefined,
                                                                          "display": "Text",
                                                                          "name": "string",
                                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                                          "alternateRangeURI": "xsd:string",
                                                                          "shortDisplay": "String",
                                                                          "lookupSchema": undefined,
                                                                          "lookupQuery": undefined,
                                                                        },
                                                                        "lookupQueryValue": undefined,
                                                                        "lookupType": Immutable.Record {
                                                                          "conceptURI": undefined,
                                                                          "display": "Lookup",
                                                                          "name": "lookup",
                                                                          "rangeURI": "xsd:string",
                                                                          "alternateRangeURI": undefined,
                                                                          "shortDisplay": undefined,
                                                                          "lookupSchema": undefined,
                                                                          "lookupQuery": undefined,
                                                                        },
                                                                        "original": {
                                                                          "conceptURI": undefined,
                                                                          "dataType": Immutable.Record {
                                                                            "conceptURI": undefined,
                                                                            "display": "Text",
                                                                            "name": "string",
                                                                            "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                                            "alternateRangeURI": "xsd:string",
                                                                            "shortDisplay": "String",
                                                                            "lookupSchema": undefined,
                                                                            "lookupQuery": undefined,
                                                                          },
                                                                          "name": "field1",
                                                                          "rangeURI": undefined,
                                                                        },
                                                                        "updatedField": false,
                                                                        "isPrimaryKey": false,
                                                                        "lockType": "NotLocked",
                                                                        "wrappedColumnName": undefined,
                                                                        "disablePhiLevel": false,
                                                                        "lockExistingField": false,
                                                                        "sourceOntology": undefined,
                                                                        "conceptSubtree": undefined,
                                                                        "conceptLabelColumn": undefined,
                                                                        "conceptImportColumn": undefined,
                                                                        "principalConceptCode": undefined,
                                                                        "derivationDataScope": undefined,
                                                                        "selected": false,
                                                                        "scannable": false,
                                                                      }
                                                                    }
                                                                    helpNoun="field designer"
                                                                    index={0}
                                                                    label="field1"
                                                                    maxPhiLevel="Restricted"
                                                                    onApply={[Function]}
                                                                    onHide={[Function]}
                                                                    show={false}
                                                                    showDefaultValueSettings={false}
                                                                    successBsStyle="success"
                                                                  >
                                                                    <Modal
                                                                      animation={true}
                                                                      autoFocus={true}
                                                                      backdrop={true}
                                                                      bsClass="modal"
                                                                      dialogComponentClass={[Function]}
                                                                      enforceFocus={true}
                                                                      keyboard={true}
                                                                      manager={
                                                                        ModalManager {
                                                                          "add": [Function],
                                                                          "containers": [],
                                                                          "data": [],
                                                                          "handleContainerOverflow": true,
                                                                          "hideSiblingNodes": true,
                                                                          "isTopModal": [Function],
                                                                          "modals": [],
                                                                          "remove": [Function],
                                                                        }
                                                                      }
                                                                      onEnter={[Function]}
                                                                      onHide={[Function]}
                                                                      renderBackdrop={[Function]}
                                                                      restoreFocus={true}
                                                                      show={false}
                                                                    >
                                                                      <Modal
                                                                        autoFocus={true}
                                                                        backdrop={true}
                                                                        backdropClassName="modal-backdrop"
                                                                        backdropTransition={[Function]}
                                                                        containerClassName="modal-open"
                                                                        enforceFocus={true}
                                                                        keyboard={true}
                                                                        manager={
                                                                          ModalManager {
                                                                            "add": [Function],
                                                                            "containers": [],
                                                                            "data": [],
                                                                            "handleContainerOverflow": true,
                                                                            "hideSiblingNodes": true,
                                                                            "isTopModal": [Function],
                                                                            "modals": [],
                                                                            "remove": [Function],
                                                                          }
                                                                        }
                                                                        onEnter={[Function]}
                                                                        onEntering={[Function]}
                                                                        onExited={[Function]}
                                                                        onHide={[Function]}
                                                                        onMouseUp={[Function]}
                                                                        renderBackdrop={[Function]}
                                                                        restoreFocus={true}
                                                                        show={false}
                                                                        transition={[Function]}
                                                                      />
                                                                    </Modal>
                                                                  </AdvancedSettings>
                                                                  <div
                                                                    aria-describedby="rbd-hidden-text-0-hidden-text-0"
                                                                    className="domain-row-handle"
                                                                    data-rbd-drag-handle-context-id="0"
                                                                    data-rbd-drag-handle-draggable-id="domainpropertiesrow-domaindrag-1-0"
                                                                    draggable={false}
                                                                    onDragStart={[Function]}
                                                                    role="button"
                                                                    tabIndex={0}
                                                                  >
                                                                    <DragDropHandle>
                                                                      <div
                                                                        className="drag-drop-handle"
                                                                      >
                                                                        <span
                                                                          className="fa fa-ellipsis-v"
                                                                        />
                                                                        <span
                                                                          className="fa fa-ellipsis-v"
                                                                        />
                                                                      </div>
                                                                    </DragDropHandle>
                                                                  </div>
                                                                  <div
                                                                    className="domain-row-action-section"
                                                                  >
                                                                    <Checkbox
                                                                      bsClass="checkbox"
                                                                      checked={false}
                                                                      className="domain-field-check-icon"
                                                                      disabled={false}
                                                                      id="domainpropertiesrow-selected-1-0"
                                                                      inline={false}
                                                                      name="domainpropertiesrow-selected"
                                                                      onChange={[Function]}
                                                                      title=""
                                                                    >
                                                                      <div
                                                                        className="domain-field-check-icon checkbox"
                                                                      >
                                                                        <label
                                                                          title=""
                                                                        >
                                                                          <input
                                                                            checked={false}
                                                                            disabled={false}
                                                                            id="domainpropertiesrow-selected-1-0"
                                                                            name="domainpropertiesrow-selected"
                                                                            onChange={[Function]}
                                                                            type="checkbox"
                                                                          />
                                                                        </label>
                                                                      </div>
                                                                    </Checkbox>
                                                                    <FieldExpansionToggle
                                                                      cls="domain-field-expand-icon"
                                                                      collapsedTitle="Show additional field properties"
                                                                      expanded={false}
                                                                      expandedTitle="Hide additional field properties"
                                                                      id="domainpropertiesrow-expand-1-0"
                                                                      onClick={[Function]}
                                                                    >
                                                                      <div
                                                                        className="field-icon domain-field-expand-icon"
                                                                        id="domainpropertiesrow-expand-1-0"
                                                                        onClick={[Function]}
                                                                        title="Show additional field properties"
                                                                      >
                                                                        <span
                                                                          className="fa fa-lg fa-plus-square"
                                                                        />
                                                                      </div>
                                                                    </FieldExpansionToggle>
                                                                  </div>
                                                                  <div
                                                                    className="domain-row-main"
                                                                  >
                                                                    <Col
                                                                      bsClass="col"
                                                                      className="domain-row-base-fields domain-row-base-fields-position"
                                                                      componentClass="div"
                                                                      xs={6}
                                                                    >
                                                                      <div
                                                                        className="domain-row-base-fields domain-row-base-fields-position col-xs-6"
                                                                      >
                                                                        <div
                                                                          id="domainpropertiesrow-row-1-0"
                                                                        >
                                                                          <Col
                                                                            bsClass="col"
                                                                            componentClass="div"
                                                                            xs={6}
                                                                          >
                                                                            <div
                                                                              className="col-xs-6"
                                                                            >
                                                                              <FormControl
                                                                                bsClass="form-control"
                                                                                componentClass="input"
                                                                                disabled={false}
                                                                                id="domainpropertiesrow-name-1-0"
                                                                                name="domainpropertiesrow-name"
                                                                                onChange={[Function]}
                                                                                type="text"
                                                                                value="field1"
                                                                              >
                                                                                <input
                                                                                  className="form-control"
                                                                                  disabled={false}
                                                                                  id="domainpropertiesrow-name-1-0"
                                                                                  name="domainpropertiesrow-name"
                                                                                  onChange={[Function]}
                                                                                  type="text"
                                                                                  value="field1"
                                                                                />
                                                                              </FormControl>
                                                                            </div>
                                                                          </Col>
                                                                          <Col
                                                                            bsClass="col"
                                                                            componentClass="div"
                                                                            xs={4}
                                                                          >
                                                                            <div
                                                                              className="col-xs-4"
                                                                            >
                                                                              <FormControl
                                                                                bsClass="form-control"
                                                                                componentClass="select"
                                                                                disabled={false}
                                                                                id="domainpropertiesrow-type-1-0"
                                                                                name="domainpropertiesrow-type"
                                                                                onChange={[Function]}
                                                                                value="string"
                                                                              >
                                                                                <select
                                                                                  className="form-control"
                                                                                  disabled={false}
                                                                                  id="domainpropertiesrow-type-1-0"
                                                                                  name="domainpropertiesrow-type"
                                                                                  onChange={[Function]}
                                                                                  value="string"
                                                                                >
                                                                                  <option
                                                                                    key="boolean"
                                                                                    value="boolean"
                                                                                  >
                                                                                    Boolean
                                                                                  </option>
                                                                                  <option
                                                                                    key="dateTime"
                                                                                    value="dateTime"
                                                                                  >
                                                                                    Date Time
                                                                                  </option>
                                                                                  <option
                                                                                    key="double"
                                                                                    value="double"
                                                                                  >
                                                                                    Decimal (floating point)
                                                                                  </option>
                                                                                  <option
                                                                                    key="flag"
                                                                                    value="flag"
                                                                                  >
                                                                                    Flag
                                                                                  </option>
                                                                                  <option
                                                                                    key="int"
                                                                                    value="int"
                                                                                  >
                                                                                    Integer
                                                                                  </option>
                                                                                  <option
                                                                                    key="lookup"
                                                                                    value="lookup"
                                                                                  >
                                                                                    Lookup
                                                                                  </option>
                                                                                  <option
                                                                                    key="multiLine"
                                                                                    value="multiLine"
                                                                                  >
                                                                                    Multi-Line Text
                                                                                  </option>
                                                                                  <option
                                                                                    key="sample"
                                                                                    value="sample"
                                                                                  >
                                                                                    Sample
                                                                                  </option>
                                                                                  <option
                                                                                    key="string"
                                                                                    value="string"
                                                                                  >
                                                                                    Text
                                                                                  </option>
                                                                                  <option
                                                                                    key="textChoice"
                                                                                    value="textChoice"
                                                                                  >
                                                                                    Text Choice
                                                                                  </option>
                                                                                  <option
                                                                                    key="users"
                                                                                    value="users"
                                                                                  >
                                                                                    User
                                                                                  </option>
                                                                                </select>
                                                                              </FormControl>
                                                                            </div>
                                                                          </Col>
                                                                          <Col
                                                                            bsClass="col"
                                                                            componentClass="div"
                                                                            xs={2}
                                                                          >
                                                                            <div
                                                                              className="col-xs-2"
                                                                            >
                                                                              <div
                                                                                className="domain-field-checkbox-container"
                                                                              >
                                                                                <Checkbox
                                                                                  bsClass="checkbox"
                                                                                  checked={false}
                                                                                  className="domain-field-checkbox"
                                                                                  disabled={false}
                                                                                  id="domainpropertiesrow-required-1-0"
                                                                                  inline={false}
                                                                                  name="domainpropertiesrow-required"
                                                                                  onChange={[Function]}
                                                                                  title=""
                                                                                >
                                                                                  <div
                                                                                    className="domain-field-checkbox checkbox"
                                                                                  >
                                                                                    <label
                                                                                      title=""
                                                                                    >
                                                                                      <input
                                                                                        checked={false}
                                                                                        disabled={false}
                                                                                        id="domainpropertiesrow-required-1-0"
                                                                                        name="domainpropertiesrow-required"
                                                                                        onChange={[Function]}
                                                                                        type="checkbox"
                                                                                      />
                                                                                    </label>
                                                                                  </div>
                                                                                </Checkbox>
                                                                              </div>
                                                                            </div>
                                                                          </Col>
                                                                        </div>
                                                                      </div>
                                                                    </Col>
                                                                    <Col
                                                                      bsClass="col"
                                                                      className="domain-row-details-container"
                                                                      componentClass="div"
                                                                      xs={6}
                                                                    >
                                                                      <div
                                                                        className="domain-row-details-container col-xs-6"
                                                                      >
                                                                        <div
                                                                          className="domain-field-details"
                                                                          id="domainpropertiesrow-details-1-0"
                                                                        >
                                                                          New Field
                                                                        </div>
                                                                        <div
                                                                          className="domain-field-buttons"
                                                                        >
                                                                          <Memo()
                                                                            iconCls="domain-field-delete-icon"
                                                                            id="domainpropertiesrow-delete-1-0"
                                                                            onDelete={[Function]}
                                                                            title="Remove field"
                                                                          >
                                                                            <span
                                                                              className="field-icon"
                                                                              id="domainpropertiesrow-delete-1-0"
                                                                              onClick={[Function]}
                                                                              title="Remove field"
                                                                            >
                                                                              <span
                                                                                className="fa fa-times-circle domain-field-delete-icon"
                                                                              />
                                                                            </span>
                                                                          </Memo()>
                                                                        </div>
                                                                      </div>
                                                                    </Col>
                                                                  </div>
                                                                </div>
                                                              </Row>
                                                              <Collapse
                                                                appear={false}
                                                                dimension="height"
                                                                getDimensionValue={[Function]}
                                                                in={false}
                                                                mountOnEnter={false}
                                                                onExited={[Function]}
                                                                onExiting={[Function]}
                                                                timeout={300}
                                                                unmountOnExit={false}
                                                              >
                                                                <Transition
                                                                  appear={false}
                                                                  aria-expanded={null}
                                                                  enter={true}
                                                                  exit={true}
                                                                  in={false}
                                                                  mountOnEnter={false}
                                                                  onEnter={[Function]}
                                                                  onEntered={[Function]}
                                                                  onEntering={[Function]}
                                                                  onExit={[Function]}
                                                                  onExited={[Function]}
                                                                  onExiting={[Function]}
                                                                  timeout={300}
                                                                  unmountOnExit={false}
                                                                >
                                                                  <div
                                                                    aria-expanded={null}
                                                                    className="collapse"
                                                                  >
                                                                    <DomainRowExpandedOptions
                                                                      appPropertiesOnly={false}
                                                                      domainFormDisplayOptions={
                                                                        {
                                                                          "domainKindDisplayName": "assay design",
                                                                          "hideFilePropertyType": undefined,
                                                                          "hideInferFromFile": true,
                                                                          "hideStudyPropertyTypes": true,
                                                                          "textChoiceLockedForDomain": true,
                                                                        }
                                                                      }
                                                                      domainIndex={1}
                                                                      field={
                                                                        Immutable.Record {
                                                                          "conceptURI": undefined,
                                                                          "conditionalFormats": Immutable.List [],
                                                                          "defaultScale": undefined,
                                                                          "defaultValueType": undefined,
                                                                          "defaultValue": undefined,
                                                                          "defaultDisplayValue": undefined,
                                                                          "description": undefined,
                                                                          "dimension": undefined,
                                                                          "excludeFromShifting": false,
                                                                          "format": undefined,
                                                                          "hidden": false,
                                                                          "importAliases": undefined,
                                                                          "label": undefined,
                                                                          "lookupContainer": undefined,
                                                                          "lookupQuery": undefined,
                                                                          "lookupSchema": undefined,
                                                                          "lookupValidator": undefined,
                                                                          "measure": undefined,
                                                                          "mvEnabled": false,
                                                                          "name": "field1",
                                                                          "PHI": undefined,
                                                                          "propertyId": undefined,
                                                                          "propertyURI": undefined,
                                                                          "propertyValidators": Immutable.List [],
                                                                          "rangeValidators": Immutable.List [],
                                                                          "rangeURI": "xsd:string",
                                                                          "regexValidators": Immutable.List [],
                                                                          "textChoiceValidator": undefined,
                                                                          "recommendedVariable": false,
                                                                          "required": false,
                                                                          "scale": 4000,
                                                                          "URL": undefined,
                                                                          "shownInDetailsView": true,
                                                                          "shownInInsertView": true,
                                                                          "shownInUpdateView": true,
                                                                          "visible": true,
                                                                          "dataType": Immutable.Record {
                                                                            "conceptURI": undefined,
                                                                            "display": "Text",
                                                                            "name": "string",
                                                                            "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                                            "alternateRangeURI": "xsd:string",
                                                                            "shortDisplay": "String",
                                                                            "lookupSchema": undefined,
                                                                            "lookupQuery": undefined,
                                                                          },
                                                                          "lookupQueryValue": undefined,
                                                                          "lookupType": Immutable.Record {
                                                                            "conceptURI": undefined,
                                                                            "display": "Lookup",
                                                                            "name": "lookup",
                                                                            "rangeURI": "xsd:string",
                                                                            "alternateRangeURI": undefined,
                                                                            "shortDisplay": undefined,
                                                                            "lookupSchema": undefined,
                                                                            "lookupQuery": undefined,
                                                                          },
                                                                          "original": {
                                                                            "conceptURI": undefined,
                                                                            "dataType": Immutable.Record {
                                                                              "conceptURI": undefined,
                                                                              "display": "Text",
                                                                              "name": "string",
                                                                              "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                                              "alternateRangeURI": "xsd:string",
                                                                              "shortDisplay": "String",
                                                                              "lookupSchema": undefined,
                                                                              "lookupQuery": undefined,
                                                                            },
                                                                            "name": "field1",
                                                                            "rangeURI": undefined,
                                                                          },
                                                                          "updatedField": false,
                                                                          "isPrimaryKey": false,
                                                                          "lockType": "NotLocked",
                                                                          "wrappedColumnName": undefined,
                                                                          "disablePhiLevel": false,
                                                                          "lockExistingField": false,
                                                                          "sourceOntology": undefined,
                                                                          "conceptSubtree": undefined,
                                                                          "conceptLabelColumn": undefined,
                                                                          "conceptImportColumn": undefined,
                                                                          "principalConceptCode": undefined,
                                                                          "derivationDataScope": undefined,
                                                                          "selected": false,
                                                                          "scannable": false,
                                                                        }
                                                                      }
                                                                      getDomainFields={[Function]}
                                                                      index={0}
                                                                      onChange={[Function]}
                                                                      onMultiChange={[Function]}
                                                                      showingModal={[Function]}
                                                                      successBsStyle="success"
                                                                    >
                                                                      <div
                                                                        className="domain-row-container"
                                                                      >
                                                                        <div
                                                                          className="domain-row-container-expand-spacer"
                                                                        />
                                                                        <div
                                                                          className="domain-row-container-expanded"
                                                                        >
                                                                          <Col
                                                                            bsClass="col"
                                                                            componentClass="div"
                                                                            xs={12}
                                                                          >
                                                                            <div
                                                                              className="col-xs-12"
                                                                            >
                                                                              <TextFieldOptions
                                                                                appPropertiesOnly={false}
                                                                                domainIndex={1}
                                                                                index={0}
                                                                                label="Text Options"
                                                                                lockType="NotLocked"
                                                                                onChange={[Function]}
                                                                                scale={4000}
                                                                                scannable={false}
                                                                              >
                                                                                <div>
                                                                                  <Row
                                                                                    bsClass="row"
                                                                                    componentClass="div"
                                                                                  >
                                                                                    <div
                                                                                      className="row"
                                                                                    >
                                                                                      <Col
                                                                                        bsClass="col"
                                                                                        componentClass="div"
                                                                                        xs={12}
                                                                                      >
                                                                                        <div
                                                                                          className="col-xs-12"
                                                                                        >
                                                                                          <SectionHeading
                                                                                            title="Text Options"
                                                                                          >
                                                                                            <div
                                                                                              className="domain-field-section-heading"
                                                                                            >
                                                                                              Text Options
                                                                                            </div>
                                                                                          </SectionHeading>
                                                                                        </div>
                                                                                      </Col>
                                                                                    </div>
                                                                                  </Row>
                                                                                  <Row
                                                                                    bsClass="row"
                                                                                    componentClass="div"
                                                                                  >
                                                                                    <div
                                                                                      className="row"
                                                                                    >
                                                                                      <Col
                                                                                        bsClass="col"
                                                                                        componentClass="div"
                                                                                        xs={12}
                                                                                      >
                                                                                        <div
                                                                                          className="col-xs-12"
                                                                                        >
                                                                                          <div
                                                                                            className="domain-field-label"
                                                                                          >
                                                                                            <DomainFieldLabel
                                                                                              helpTipBody={
                                                                                                <React.Fragment>
                                                                                                  <p>
                                                                                                    Sets the maximum character count for a text field.
                                                                                                  </p>
                                                                                                  <p>
                                                                                                    Anything over 4,000 characters will use the 'Unlimited' designation.
                                                                                                  </p>
                                                                                                </React.Fragment>
                                                                                              }
                                                                                              label="Maximum Text Length"
                                                                                            >
                                                                                              Maximum Text 
                                                                                              <span
                                                                                                className="domain-no-wrap"
                                                                                              >
                                                                                                Length
                                                                                                <Component
                                                                                                  id="tooltip"
                                                                                                  title="Maximum Text Length"
                                                                                                >
                                                                                                  <span
                                                                                                    className="label-help-target"
                                                                                                    onMouseOut={[Function]}
                                                                                                    onMouseOver={[Function]}
                                                                                                  >
                                                                                                    <span
                                                                                                      className="label-help-icon fa fa-question-circle"
                                                                                                    />
                                                                                                    <Overlay
                                                                                                      animation={[Function]}
                                                                                                      placement="right"
                                                                                                      rootClose={false}
                                                                                                      show={false}
                                                                                                      target={
                                                                                                        <span
                                                                                                          class="label-help-target"
                                                                                                        >
                                                                                                          <span
                                                                                                            class="label-help-icon fa fa-question-circle"
                                                                                                          />
                                                                                                        </span>
                                                                                                      }
                                                                                                    >
                                                                                                      <Overlay
                                                                                                        placement="right"
                                                                                                        rootClose={false}
                                                                                                        show={false}
                                                                                                        target={
                                                                                                          <span
                                                                                                            class="label-help-target"
                                                                                                          >
                                                                                                            <span
                                                                                                              class="label-help-icon fa fa-question-circle"
                                                                                                            />
                                                                                                          </span>
                                                                                                        }
                                                                                                        transition={[Function]}
                                                                                                      />
                                                                                                    </Overlay>
                                                                                                  </span>
                                                                                                </Component>
                                                                                              </span>
                                                                                            </DomainFieldLabel>
                                                                                          </div>
                                                                                        </div>
                                                                                      </Col>
                                                                                    </div>
                                                                                  </Row>
                                                                                  <Row
                                                                                    bsClass="row"
                                                                                    componentClass="div"
                                                                                  >
                                                                                    <div
                                                                                      className="row"
                                                                                    >
                                                                                      <Col
                                                                                        bsClass="col"
                                                                                        className="domain-text-options-col"
                                                                                        componentClass="div"
                                                                                        xs={12}
                                                                                      >
                                                                                        <div
                                                                                          className="domain-text-options-col col-xs-12"
                                                                                        >
                                                                                          <FormControl
                                                                                            bsClass="form-control"
                                                                                            checked={false}
                                                                                            className="domain-text-options-radio1 domain-field-float-left"
                                                                                            componentClass="input"
                                                                                            disabled={false}
                                                                                            id="domainpropertiesrow-maxLength-1-0"
                                                                                            onChange={[Function]}
                                                                                            type="radio"
                                                                                            value="maxLength"
                                                                                          >
                                                                                            <input
                                                                                              checked={false}
                                                                                              className="domain-text-options-radio1 domain-field-float-left form-control"
                                                                                              disabled={false}
                                                                                              id="domainpropertiesrow-maxLength-1-0"
                                                                                              onChange={[Function]}
                                                                                              type="radio"
                                                                                              value="maxLength"
                                                                                            />
                                                                                          </FormControl>
                                                                                          <div>
                                                                                            Unlimited
                                                                                          </div>
                                                                                        </div>
                                                                                      </Col>
                                                                                    </div>
                                                                                  </Row>
                                                                                  <Row
                                                                                    bsClass="row"
                                                                                    componentClass="div"
                                                                                  >
                                                                                    <div
                                                                                      className="row"
                                                                                    >
                                                                                      <Col
                                                                                        bsClass="col"
                                                                                        componentClass="div"
                                                                                        xs={12}
                                                                                      >
                                                                                        <div
                                                                                          className="col-xs-12"
                                                                                        >
                                                                                          <FormControl
                                                                                            bsClass="form-control"
                                                                                            checked={true}
                                                                                            className="domain-text-options-radio2 domain-field-float-left"
                                                                                            componentClass="input"
                                                                                            id="domainpropertiesrow-customLength-1-0"
                                                                                            onChange={[Function]}
                                                                                            type="radio"
                                                                                            value="customLength"
                                                                                          >
                                                                                            <input
                                                                                              checked={true}
                                                                                              className="domain-text-options-radio2 domain-field-float-left form-control"
                                                                                              id="domainpropertiesrow-customLength-1-0"
                                                                                              onChange={[Function]}
                                                                                              type="radio"
                                                                                              value="customLength"
                                                                                            />
                                                                                          </FormControl>
                                                                                          <span
                                                                                            className="domain-text-options-length domain-field-float-left"
                                                                                          >
                                                                                            No longer than 
                                                                                            <FormControl
                                                                                              bsClass="form-control"
                                                                                              className="domain-text-length-field"
                                                                                              componentClass="input"
                                                                                              disabled={false}
                                                                                              id="domainpropertiesrow-scale-1-0"
                                                                                              name="domainpropertiesrow-scale"
                                                                                              onChange={[Function]}
                                                                                              type="number"
                                                                                              value={4000}
                                                                                            >
                                                                                              <input
                                                                                                className="domain-text-length-field form-control"
                                                                                                disabled={false}
                                                                                                id="domainpropertiesrow-scale-1-0"
                                                                                                name="domainpropertiesrow-scale"
                                                                                                onChange={[Function]}
                                                                                                type="number"
                                                                                                value={4000}
                                                                                              />
                                                                                            </FormControl>
                                                                                             characters
                                                                                          </span>
                                                                                        </div>
                                                                                      </Col>
                                                                                    </div>
                                                                                  </Row>
                                                                                  <Memo()
                                                                                    appPropertiesOnly={false}
                                                                                    domainIndex={1}
                                                                                    index={0}
                                                                                    label="Text Options"
                                                                                    lockType="NotLocked"
                                                                                    onChange={[Function]}
                                                                                    scale={4000}
                                                                                    scannable={false}
                                                                                  />
                                                                                </div>
                                                                              </TextFieldOptions>
                                                                            </div>
                                                                          </Col>
                                                                          <Col
                                                                            bsClass="col"
                                                                            componentClass="div"
                                                                            xs={12}
                                                                          >
                                                                            <div
                                                                              className="col-xs-12"
                                                                            >
                                                                              <NameAndLinkingOptions
                                                                                appPropertiesOnly={false}
                                                                                domainFormDisplayOptions={
                                                                                  {
                                                                                    "domainKindDisplayName": "assay design",
                                                                                    "hideFilePropertyType": undefined,
                                                                                    "hideInferFromFile": true,
                                                                                    "hideStudyPropertyTypes": true,
                                                                                    "textChoiceLockedForDomain": true,
                                                                                  }
                                                                                }
                                                                                domainIndex={1}
                                                                                field={
                                                                                  Immutable.Record {
                                                                                    "conceptURI": undefined,
                                                                                    "conditionalFormats": Immutable.List [],
                                                                                    "defaultScale": undefined,
                                                                                    "defaultValueType": undefined,
                                                                                    "defaultValue": undefined,
                                                                                    "defaultDisplayValue": undefined,
                                                                                    "description": undefined,
                                                                                    "dimension": undefined,
                                                                                    "excludeFromShifting": false,
                                                                                    "format": undefined,
                                                                                    "hidden": false,
                                                                                    "importAliases": undefined,
                                                                                    "label": undefined,
                                                                                    "lookupContainer": undefined,
                                                                                    "lookupQuery": undefined,
                                                                                    "lookupSchema": undefined,
                                                                                    "lookupValidator": undefined,
                                                                                    "measure": undefined,
                                                                                    "mvEnabled": false,
                                                                                    "name": "field1",
                                                                                    "PHI": undefined,
                                                                                    "propertyId": undefined,
                                                                                    "propertyURI": undefined,
                                                                                    "propertyValidators": Immutable.List [],
                                                                                    "rangeValidators": Immutable.List [],
                                                                                    "rangeURI": "xsd:string",
                                                                                    "regexValidators": Immutable.List [],
                                                                                    "textChoiceValidator": undefined,
                                                                                    "recommendedVariable": false,
                                                                                    "required": false,
                                                                                    "scale": 4000,
                                                                                    "URL": undefined,
                                                                                    "shownInDetailsView": true,
                                                                                    "shownInInsertView": true,
                                                                                    "shownInUpdateView": true,
                                                                                    "visible": true,
                                                                                    "dataType": Immutable.Record {
                                                                                      "conceptURI": undefined,
                                                                                      "display": "Text",
                                                                                      "name": "string",
                                                                                      "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                                                      "alternateRangeURI": "xsd:string",
                                                                                      "shortDisplay": "String",
                                                                                      "lookupSchema": undefined,
                                                                                      "lookupQuery": undefined,
                                                                                    },
                                                                                    "lookupQueryValue": undefined,
                                                                                    "lookupType": Immutable.Record {
                                                                                      "conceptURI": undefined,
                                                                                      "display": "Lookup",
                                                                                      "name": "lookup",
                                                                                      "rangeURI": "xsd:string",
                                                                                      "alternateRangeURI": undefined,
                                                                                      "shortDisplay": undefined,
                                                                                      "lookupSchema": undefined,
                                                                                      "lookupQuery": undefined,
                                                                                    },
                                                                                    "original": {
                                                                                      "conceptURI": undefined,
                                                                                      "dataType": Immutable.Record {
                                                                                        "conceptURI": undefined,
                                                                                        "display": "Text",
                                                                                        "name": "string",
                                                                                        "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                                                        "alternateRangeURI": "xsd:string",
                                                                                        "shortDisplay": "String",
                                                                                        "lookupSchema": undefined,
                                                                                        "lookupQuery": undefined,
                                                                                      },
                                                                                      "name": "field1",
                                                                                      "rangeURI": undefined,
                                                                                    },
                                                                                    "updatedField": false,
                                                                                    "isPrimaryKey": false,
                                                                                    "lockType": "NotLocked",
                                                                                    "wrappedColumnName": undefined,
                                                                                    "disablePhiLevel": false,
                                                                                    "lockExistingField": false,
                                                                                    "sourceOntology": undefined,
                                                                                    "conceptSubtree": undefined,
                                                                                    "conceptLabelColumn": undefined,
                                                                                    "conceptImportColumn": undefined,
                                                                                    "principalConceptCode": undefined,
                                                                                    "derivationDataScope": undefined,
                                                                                    "selected": false,
                                                                                    "scannable": false,
                                                                                  }
                                                                                }
                                                                                index={0}
                                                                                onChange={[Function]}
                                                                              >
                                                                                <div>
                                                                                  <Row
                                                                                    bsClass="row"
                                                                                    componentClass="div"
                                                                                  >
                                                                                    <div
                                                                                      className="row"
                                                                                    >
                                                                                      <Col
                                                                                        bsClass="col"
                                                                                        componentClass="div"
                                                                                        xs={12}
                                                                                      >
                                                                                        <div
                                                                                          className="col-xs-12"
                                                                                        >
                                                                                          <SectionHeading
                                                                                            cls="domain-field-section-hdr"
                                                                                            title="Name and Linking Options"
                                                                                          >
                                                                                            <div
                                                                                              className="domain-field-section-heading domain-field-section-hdr"
                                                                                            >
                                                                                              Name and Linking Options
                                                                                            </div>
                                                                                          </SectionHeading>
                                                                                        </div>
                                                                                      </Col>
                                                                                    </div>
                                                                                  </Row>
                                                                                  <Row
                                                                                    bsClass="row"
                                                                                    componentClass="div"
                                                                                  >
                                                                                    <div
                                                                                      className="row"
                                                                                    >
                                                                                      <Col
                                                                                        bsClass="col"
                                                                                        componentClass="div"
                                                                                        xs={5}
                                                                                      >
                                                                                        <div
                                                                                          className="col-xs-5"
                                                                                        >
                                                                                          <div
                                                                                            className="domain-field-label"
                                                                                          >
                                                                                            Description
                                                                                          </div>
                                                                                          <FormControl
                                                                                            bsClass="form-control"
                                                                                            className="form-control textarea-noresize"
                                                                                            componentClass="textarea"
                                                                                            disabled={false}
                                                                                            id="domainpropertiesrow-description-1-0"
                                                                                            name="domainpropertiesrow-description"
                                                                                            onChange={[Function]}
                                                                                            rows={4}
                                                                                            value=""
                                                                                          >
                                                                                            <textarea
                                                                                              className="form-control textarea-noresize form-control"
                                                                                              disabled={false}
                                                                                              id="domainpropertiesrow-description-1-0"
                                                                                              name="domainpropertiesrow-description"
                                                                                              onChange={[Function]}
                                                                                              rows={4}
                                                                                              value=""
                                                                                            />
                                                                                          </FormControl>
                                                                                        </div>
                                                                                      </Col>
                                                                                      <Col
                                                                                        bsClass="col"
                                                                                        componentClass="div"
                                                                                        xs={3}
                                                                                      >
                                                                                        <div
                                                                                          className="col-xs-3"
                                                                                        >
                                                                                          <div
                                                                                            className="domain-field-label"
                                                                                          >
                                                                                            Label
                                                                                          </div>
                                                                                          <FormControl
                                                                                            bsClass="form-control"
                                                                                            componentClass="input"
                                                                                            disabled={false}
                                                                                            id="domainpropertiesrow-label-1-0"
                                                                                            name="domainpropertiesrow-label"
                                                                                            onChange={[Function]}
                                                                                            type="text"
                                                                                            value=""
                                                                                          >
                                                                                            <input
                                                                                              className="form-control"
                                                                                              disabled={false}
                                                                                              id="domainpropertiesrow-label-1-0"
                                                                                              name="domainpropertiesrow-label"
                                                                                              onChange={[Function]}
                                                                                              type="text"
                                                                                              value=""
                                                                                            />
                                                                                          </FormControl>
                                                                                          <div
                                                                                            className="domain-field-label"
                                                                                          >
                                                                                            <DomainFieldLabel
                                                                                              helpTipBody={
                                                                                                <React.Fragment>
                                                                                                  Define alternate field names to be used when importing from a file.
                                                                                                  <br />
                                                                                                  <br />
                                                                                                  Multiple aliases may be separated by spaces or commas. To define an alias that contains spaces, use double-quotes (") around it.
                                                                                                </React.Fragment>
                                                                                              }
                                                                                              label="Import Aliases"
                                                                                            >
                                                                                              Import 
                                                                                              <span
                                                                                                className="domain-no-wrap"
                                                                                              >
                                                                                                Aliases
                                                                                                <Component
                                                                                                  id="tooltip"
                                                                                                  title="Import Aliases"
                                                                                                >
                                                                                                  <span
                                                                                                    className="label-help-target"
                                                                                                    onMouseOut={[Function]}
                                                                                                    onMouseOver={[Function]}
                                                                                                  >
                                                                                                    <span
                                                                                                      className="label-help-icon fa fa-question-circle"
                                                                                                    />
                                                                                                    <Overlay
                                                                                                      animation={[Function]}
                                                                                                      placement="right"
                                                                                                      rootClose={false}
                                                                                                      show={false}
                                                                                                    >
                                                                                                      <Overlay
                                                                                                        placement="right"
                                                                                                        rootClose={false}
                                                                                                        show={false}
                                                                                                        transition={[Function]}
                                                                                                      />
                                                                                                    </Overlay>
                                                                                                  </span>
                                                                                                </Component>
                                                                                              </span>
                                                                                            </DomainFieldLabel>
                                                                                          </div>
                                                                                          <FormControl
                                                                                            bsClass="form-control"
                                                                                            componentClass="input"
                                                                                            disabled={false}
                                                                                            id="domainpropertiesrow-importAliases-1-0"
                                                                                            name="domainpropertiesrow-importAliases"
                                                                                            onChange={[Function]}
                                                                                            type="text"
                                                                                            value=""
                                                                                          >
                                                                                            <input
                                                                                              className="form-control"
                                                                                              disabled={false}
                                                                                              id="domainpropertiesrow-importAliases-1-0"
                                                                                              name="domainpropertiesrow-importAliases"
                                                                                              onChange={[Function]}
                                                                                              type="text"
                                                                                              value=""
                                                                                            />
                                                                                          </FormControl>
                                                                                        </div>
                                                                                      </Col>
                                                                                      <Col
                                                                                        bsClass="col"
                                                                                        componentClass="div"
                                                                                        xs={4}
                                                                                      >
                                                                                        <div
                                                                                          className="col-xs-4"
                                                                                        >
                                                                                          <div
                                                                                            className="domain-field-label"
                                                                                          >
                                                                                            <DomainFieldLabel
                                                                                              helpTipBody={
                                                                                                <React.Fragment>
                                                                                                  Use this to change the display of the field value within a data grid into a link. Multiple formats are supported, which allows ways to easily substitute and link to other locations in LabKey.
                                                                                                  <br />
                                                                                                  <br />
                                                                                                  Learn more about using 
                                                                                                  <HelpLink
                                                                                                    topic="urlEncoding"
                                                                                                  >
                                                                                                    URL Formatting Options
                                                                                                  </HelpLink>
                                                                                                  .
                                                                                                </React.Fragment>
                                                                                              }
                                                                                              label="URL"
                                                                                            >
                                                                                              <span
                                                                                                className="domain-no-wrap"
                                                                                              >
                                                                                                URL
                                                                                                <Component
                                                                                                  id="tooltip"
                                                                                                  title="URL"
                                                                                                >
                                                                                                  <span
                                                                                                    className="label-help-target"
                                                                                                    onMouseOut={[Function]}
                                                                                                    onMouseOver={[Function]}
                                                                                                  >
                                                                                                    <span
                                                                                                      className="label-help-icon fa fa-question-circle"
                                                                                                    />
                                                                                                    <Overlay
                                                                                                      animation={[Function]}
                                                                                                      placement="right"
                                                                                                      rootClose={false}
                                                                                                      show={false}
                                                                                                    >
                                                                                                      <Overlay
                                                                                                        placement="right"
                                                                                                        rootClose={false}
                                                                                                        show={false}
                                                                                                        transition={[Function]}
                                                                                                      />
                                                                                                    </Overlay>
                                                                                                  </span>
                                                                                                </Component>
                                                                                              </span>
                                                                                            </DomainFieldLabel>
                                                                                          </div>
                                                                                          <FormControl
                                                                                            bsClass="form-control"
                                                                                            componentClass="input"
                                                                                            disabled={false}
                                                                                            id="domainpropertiesrow-URL-1-0"
                                                                                            name="domainpropertiesrow-URL"
                                                                                            onChange={[Function]}
                                                                                            type="text"
                                                                                            value=""
                                                                                          >
                                                                                            <input
                                                                                              className="form-control"
                                                                                              disabled={false}
                                                                                              id="domainpropertiesrow-URL-1-0"
                                                                                              name="domainpropertiesrow-URL"
                                                                                              onChange={[Function]}
                                                                                              type="text"
                                                                                              value=""
                                                                                            />
                                                                                          </FormControl>
                                                                                        </div>
                                                                                      </Col>
                                                                                    </div>
                                                                                  </Row>
                                                                                </div>
                                                                              </NameAndLinkingOptions>
                                                                            </div>
                                                                          </Col>
                                                                          <Col
                                                                            bsClass="col"
                                                                            componentClass="div"
                                                                            xs={12}
                                                                          >
                                                                            <div
                                                                              className="col-xs-12"
                                                                            >
                                                                              <ConditionalFormattingAndValidation
                                                                                domainFormDisplayOptions={
                                                                                  {
                                                                                    "domainKindDisplayName": "assay design",
                                                                                    "hideFilePropertyType": undefined,
                                                                                    "hideInferFromFile": true,
                                                                                    "hideStudyPropertyTypes": true,
                                                                                    "textChoiceLockedForDomain": true,
                                                                                  }
                                                                                }
                                                                                domainIndex={1}
                                                                                field={
                                                                                  Immutable.Record {
                                                                                    "conceptURI": undefined,
                                                                                    "conditionalFormats": Immutable.List [],
                                                                                    "defaultScale": undefined,
                                                                                    "defaultValueType": undefined,
                                                                                    "defaultValue": undefined,
                                                                                    "defaultDisplayValue": undefined,
                                                                                    "description": undefined,
                                                                                    "dimension": undefined,
                                                                                    "excludeFromShifting": false,
                                                                                    "format": undefined,
                                                                                    "hidden": false,
                                                                                    "importAliases": undefined,
                                                                                    "label": undefined,
                                                                                    "lookupContainer": undefined,
                                                                                    "lookupQuery": undefined,
                                                                                    "lookupSchema": undefined,
                                                                                    "lookupValidator": undefined,
                                                                                    "measure": undefined,
                                                                                    "mvEnabled": false,
                                                                                    "name": "field1",
                                                                                    "PHI": undefined,
                                                                                    "propertyId": undefined,
                                                                                    "propertyURI": undefined,
                                                                                    "propertyValidators": Immutable.List [],
                                                                                    "rangeValidators": Immutable.List [],
                                                                                    "rangeURI": "xsd:string",
                                                                                    "regexValidators": Immutable.List [],
                                                                                    "textChoiceValidator": undefined,
                                                                                    "recommendedVariable": false,
                                                                                    "required": false,
                                                                                    "scale": 4000,
                                                                                    "URL": undefined,
                                                                                    "shownInDetailsView": true,
                                                                                    "shownInInsertView": true,
                                                                                    "shownInUpdateView": true,
                                                                                    "visible": true,
                                                                                    "dataType": Immutable.Record {
                                                                                      "conceptURI": undefined,
                                                                                      "display": "Text",
                                                                                      "name": "string",
                                                                                      "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                                                      "alternateRangeURI": "xsd:string",
                                                                                      "shortDisplay": "String",
                                                                                      "lookupSchema": undefined,
                                                                                      "lookupQuery": undefined,
                                                                                    },
                                                                                    "lookupQueryValue": undefined,
                                                                                    "lookupType": Immutable.Record {
                                                                                      "conceptURI": undefined,
                                                                                      "display": "Lookup",
                                                                                      "name": "lookup",
                                                                                      "rangeURI": "xsd:string",
                                                                                      "alternateRangeURI": undefined,
                                                                                      "shortDisplay": undefined,
                                                                                      "lookupSchema": undefined,
                                                                                      "lookupQuery": undefined,
                                                                                    },
                                                                                    "original": {
                                                                                      "conceptURI": undefined,
                                                                                      "dataType": Immutable.Record {
                                                                                        "conceptURI": undefined,
                                                                                        "display": "Text",
                                                                                        "name": "string",
                                                                                        "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                                                        "alternateRangeURI": "xsd:string",
                                                                                        "shortDisplay": "String",
                                                                                        "lookupSchema": undefined,
                                                                                        "lookupQuery": undefined,
                                                                                      },
                                                                                      "name": "field1",
                                                                                      "rangeURI": undefined,
                                                                                    },
                                                                                    "updatedField": false,
                                                                                    "isPrimaryKey": false,
                                                                                    "lockType": "NotLocked",
                                                                                    "wrappedColumnName": undefined,
                                                                                    "disablePhiLevel": false,
                                                                                    "lockExistingField": false,
                                                                                    "sourceOntology": undefined,
                                                                                    "conceptSubtree": undefined,
                                                                                    "conceptLabelColumn": undefined,
                                                                                    "conceptImportColumn": undefined,
                                                                                    "principalConceptCode": undefined,
                                                                                    "derivationDataScope": undefined,
                                                                                    "selected": false,
                                                                                    "scannable": false,
                                                                                  }
                                                                                }
                                                                                index={0}
                                                                                onChange={[Function]}
                                                                                showingModal={[Function]}
                                                                                successBsStyle="success"
                                                                              >
                                                                                <div>
                                                                                  <Row
                                                                                    bsClass="row"
                                                                                    componentClass="div"
                                                                                  >
                                                                                    <div
                                                                                      className="row"
                                                                                    >
                                                                                      <Col
                                                                                        bsClass="col"
                                                                                        componentClass="div"
                                                                                        xs={12}
                                                                                      >
                                                                                        <div
                                                                                          className="col-xs-12"
                                                                                        >
                                                                                          <SectionHeading
                                                                                            cls="domain-field-section-hdr"
                                                                                            title="Conditional Formatting and Validation Options"
                                                                                          >
                                                                                            <div
                                                                                              className="domain-field-section-heading domain-field-section-hdr"
                                                                                            >
                                                                                              Conditional Formatting and Validation Options
                                                                                            </div>
                                                                                          </SectionHeading>
                                                                                        </div>
                                                                                      </Col>
                                                                                    </div>
                                                                                  </Row>
                                                                                  <Row
                                                                                    bsClass="row"
                                                                                    componentClass="div"
                                                                                  >
                                                                                    <div
                                                                                      className="row"
                                                                                    >
                                                                                      <Col
                                                                                        bsClass="col"
                                                                                        componentClass="div"
                                                                                        xs={12}
                                                                                      >
                                                                                        <div
                                                                                          className="col-xs-12"
                                                                                        >
                                                                                          <div
                                                                                            className="domain-validation-group"
                                                                                          >
                                                                                            <div
                                                                                              className="domain-field-label domain-no-wrap"
                                                                                            >
                                                                                              <DomainFieldLabel
                                                                                                helpTipBody={<ConditionalFormatHelpText />}
                                                                                                label="Create Conditional Format Criteria"
                                                                                              >
                                                                                                Create Conditional Format 
                                                                                                <span
                                                                                                  className="domain-no-wrap"
                                                                                                >
                                                                                                  Criteria
                                                                                                  <Component
                                                                                                    id="tooltip"
                                                                                                    title="Create Conditional Format Criteria"
                                                                                                  >
                                                                                                    <span
                                                                                                      className="label-help-target"
                                                                                                      onMouseOut={[Function]}
                                                                                                      onMouseOver={[Function]}
                                                                                                    >
                                                                                                      <span
                                                                                                        className="label-help-icon fa fa-question-circle"
                                                                                                      />
                                                                                                      <Overlay
                                                                                                        animation={[Function]}
                                                                                                        placement="right"
                                                                                                        rootClose={false}
                                                                                                        show={false}
                                                                                                      >
                                                                                                        <Overlay
                                                                                                          placement="right"
                                                                                                          rootClose={false}
                                                                                                          show={false}
                                                                                                          transition={[Function]}
                                                                                                        />
                                                                                                      </Overlay>
                                                                                                    </span>
                                                                                                  </Component>
                                                                                                </span>
                                                                                              </DomainFieldLabel>
                                                                                            </div>
                                                                                            <div>
                                                                                              <Button
                                                                                                active={false}
                                                                                                block={false}
                                                                                                bsClass="btn"
                                                                                                bsStyle="default"
                                                                                                className="domain-validation-button"
                                                                                                disabled={false}
                                                                                                id="domainpropertiesrow-conditionalFormat-1-0"
                                                                                                name="domainpropertiesrow-conditionalFormat"
                                                                                                onClick={[Function]}
                                                                                              >
                                                                                                <button
                                                                                                  className="domain-validation-button btn btn-default"
                                                                                                  disabled={false}
                                                                                                  id="domainpropertiesrow-conditionalFormat-1-0"
                                                                                                  name="domainpropertiesrow-conditionalFormat"
                                                                                                  onClick={[Function]}
                                                                                                  type="button"
                                                                                                >
                                                                                                  Add Format
                                                                                                </button>
                                                                                              </Button>
                                                                                              <span
                                                                                                className="domain-text-label"
                                                                                              >
                                                                                                None Set
                                                                                              </span>
                                                                                            </div>
                                                                                          </div>
                                                                                          <div
                                                                                            className="domain-validation-group"
                                                                                          >
                                                                                            <div
                                                                                              className="domain-field-label domain-no-wrap"
                                                                                            >
                                                                                              <DomainFieldLabel
                                                                                                helpTipBody={<RegexValidatorHelpText />}
                                                                                                label="Create Regular Expression Validator"
                                                                                              >
                                                                                                Create Regular Expression 
                                                                                                <span
                                                                                                  className="domain-no-wrap"
                                                                                                >
                                                                                                  Validator
                                                                                                  <Component
                                                                                                    id="tooltip"
                                                                                                    title="Create Regular Expression Validator"
                                                                                                  >
                                                                                                    <span
                                                                                                      className="label-help-target"
                                                                                                      onMouseOut={[Function]}
                                                                                                      onMouseOver={[Function]}
                                                                                                    >
                                                                                                      <span
                                                                                                        className="label-help-icon fa fa-question-circle"
                                                                                                      />
                                                                                                      <Overlay
                                                                                                        animation={[Function]}
                                                                                                        placement="right"
                                                                                                        rootClose={false}
                                                                                                        show={false}
                                                                                                      >
                                                                                                        <Overlay
                                                                                                          placement="right"
                                                                                                          rootClose={false}
                                                                                                          show={false}
                                                                                                          transition={[Function]}
                                                                                                        />
                                                                                                      </Overlay>
                                                                                                    </span>
                                                                                                  </Component>
                                                                                                </span>
                                                                                              </DomainFieldLabel>
                                                                                            </div>
                                                                                            <div>
                                                                                              <Button
                                                                                                active={false}
                                                                                                block={false}
                                                                                                bsClass="btn"
                                                                                                bsStyle="default"
                                                                                                className="domain-validation-button"
                                                                                                disabled={false}
                                                                                                id="domainpropertiesrow-regexValidator-1-0"
                                                                                                name="domainpropertiesrow-regexValidator"
                                                                                                onClick={[Function]}
                                                                                              >
                                                                                                <button
                                                                                                  className="domain-validation-button btn btn-default"
                                                                                                  disabled={false}
                                                                                                  id="domainpropertiesrow-regexValidator-1-0"
                                                                                                  name="domainpropertiesrow-regexValidator"
                                                                                                  onClick={[Function]}
                                                                                                  type="button"
                                                                                                >
                                                                                                  Add Regex
                                                                                                </button>
                                                                                              </Button>
                                                                                              <span
                                                                                                className="domain-text-label"
                                                                                              >
                                                                                                None Set
                                                                                              </span>
                                                                                            </div>
                                                                                          </div>
                                                                                        </div>
                                                                                      </Col>
                                                                                    </div>
                                                                                  </Row>
                                                                                </div>
                                                                              </ConditionalFormattingAndValidation>
                                                                            </div>
                                                                          </Col>
                                                                        </div>
                                                                      </div>
                                                                    </DomainRowExpandedOptions>
                                                                  </div>
                                                                </Transition>
                                                              </Collapse>
                                                            </div>
                                                          </Draggable>
                                                        </Connect(Draggable)>
                                                      </PrivateDraggable>
                                                    </PublicDraggable>
                                                  </DomainRow>
                                                  <DomainRow
                                                    appPropertiesOnly={false}
                                                    availableTypes={
                                                      Immutable.List [
                                                        Immutable.Record {
                                                          "conceptURI": undefined,
                                                          "display": "Text",
                                                          "name": "string",
                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                          "alternateRangeURI": "xsd:string",
                                                          "shortDisplay": "String",
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                        Immutable.Record {
                                                          "conceptURI": undefined,
                                                          "display": "Multi-Line Text",
                                                          "name": "multiLine",
                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#multiLine",
                                                          "alternateRangeURI": undefined,
                                                          "shortDisplay": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                        Immutable.Record {
                                                          "conceptURI": undefined,
                                                          "display": "Boolean",
                                                          "name": "boolean",
                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#boolean",
                                                          "alternateRangeURI": "xsd:boolean",
                                                          "shortDisplay": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                        Immutable.Record {
                                                          "conceptURI": undefined,
                                                          "display": "Integer",
                                                          "name": "int",
                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                                          "alternateRangeURI": "xsd:int",
                                                          "shortDisplay": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                        Immutable.Record {
                                                          "conceptURI": undefined,
                                                          "display": "Decimal (floating point)",
                                                          "name": "double",
                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#double",
                                                          "alternateRangeURI": "xsd:double",
                                                          "shortDisplay": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                        Immutable.Record {
                                                          "conceptURI": undefined,
                                                          "display": "Date Time",
                                                          "name": "dateTime",
                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                                                          "alternateRangeURI": "xsd:dateTime",
                                                          "shortDisplay": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                        Immutable.Record {
                                                          "conceptURI": "http://www.labkey.org/exp/xml#flag",
                                                          "display": "Flag",
                                                          "name": "flag",
                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                          "alternateRangeURI": undefined,
                                                          "shortDisplay": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                        Immutable.Record {
                                                          "conceptURI": undefined,
                                                          "display": "User",
                                                          "name": "users",
                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                                          "alternateRangeURI": undefined,
                                                          "shortDisplay": undefined,
                                                          "lookupSchema": "core",
                                                          "lookupQuery": "users",
                                                        },
                                                        Immutable.Record {
                                                          "conceptURI": "http://cpas.labkey.com/Study#ParticipantId",
                                                          "display": "Subject/Participant",
                                                          "name": "ParticipantId",
                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                          "alternateRangeURI": undefined,
                                                          "shortDisplay": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                        Immutable.Record {
                                                          "conceptURI": undefined,
                                                          "display": "Lookup",
                                                          "name": "lookup",
                                                          "rangeURI": undefined,
                                                          "alternateRangeURI": undefined,
                                                          "shortDisplay": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                        Immutable.Record {
                                                          "conceptURI": "http://www.labkey.org/exp/xml#sample",
                                                          "display": "Sample",
                                                          "name": "sample",
                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                                          "alternateRangeURI": undefined,
                                                          "shortDisplay": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                        Immutable.Record {
                                                          "conceptURI": "http://www.labkey.org/types#textChoice",
                                                          "display": "Text Choice",
                                                          "name": "textChoice",
                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                          "alternateRangeURI": undefined,
                                                          "shortDisplay": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                      ]
                                                    }
                                                    defaultValueOptions={Immutable.List []}
                                                    domainFormDisplayOptions={
                                                      {
                                                        "domainKindDisplayName": "assay design",
                                                        "hideFilePropertyType": undefined,
                                                        "hideInferFromFile": true,
                                                        "hideStudyPropertyTypes": true,
                                                        "textChoiceLockedForDomain": true,
                                                      }
                                                    }
                                                    domainId={null}
                                                    domainIndex={1}
                                                    dragging={false}
                                                    expandTransition={300}
                                                    expanded={false}
                                                    field={
                                                      Immutable.Record {
                                                        "conceptURI": undefined,
                                                        "conditionalFormats": Immutable.List [],
                                                        "defaultScale": undefined,
                                                        "defaultValueType": undefined,
                                                        "defaultValue": undefined,
                                                        "defaultDisplayValue": undefined,
                                                        "description": undefined,
                                                        "dimension": undefined,
                                                        "excludeFromShifting": false,
                                                        "format": undefined,
                                                        "hidden": false,
                                                        "importAliases": undefined,
                                                        "label": undefined,
                                                        "lookupContainer": undefined,
                                                        "lookupQuery": undefined,
                                                        "lookupSchema": undefined,
                                                        "lookupValidator": undefined,
                                                        "measure": undefined,
                                                        "mvEnabled": false,
                                                        "name": "field2",
                                                        "PHI": undefined,
                                                        "propertyId": undefined,
                                                        "propertyURI": undefined,
                                                        "propertyValidators": Immutable.List [],
                                                        "rangeValidators": Immutable.List [],
                                                        "rangeURI": "xsd:int",
                                                        "regexValidators": Immutable.List [],
                                                        "textChoiceValidator": undefined,
                                                        "recommendedVariable": false,
                                                        "required": false,
                                                        "scale": 4000,
                                                        "URL": undefined,
                                                        "shownInDetailsView": true,
                                                        "shownInInsertView": true,
                                                        "shownInUpdateView": true,
                                                        "visible": true,
                                                        "dataType": Immutable.Record {
                                                          "conceptURI": undefined,
                                                          "display": "Integer",
                                                          "name": "int",
                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                                          "alternateRangeURI": "xsd:int",
                                                          "shortDisplay": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                        "lookupQueryValue": undefined,
                                                        "lookupType": Immutable.Record {
                                                          "conceptURI": undefined,
                                                          "display": "Lookup",
                                                          "name": "lookup",
                                                          "rangeURI": "xsd:int",
                                                          "alternateRangeURI": undefined,
                                                          "shortDisplay": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                        "original": {
                                                          "conceptURI": undefined,
                                                          "dataType": Immutable.Record {
                                                            "conceptURI": undefined,
                                                            "display": "Integer",
                                                            "name": "int",
                                                            "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                                            "alternateRangeURI": "xsd:int",
                                                            "shortDisplay": undefined,
                                                            "lookupSchema": undefined,
                                                            "lookupQuery": undefined,
                                                          },
                                                          "name": "field2",
                                                          "rangeURI": undefined,
                                                        },
                                                        "updatedField": false,
                                                        "isPrimaryKey": false,
                                                        "lockType": "NotLocked",
                                                        "wrappedColumnName": undefined,
                                                        "disablePhiLevel": false,
                                                        "lockExistingField": false,
                                                        "sourceOntology": undefined,
                                                        "conceptSubtree": undefined,
                                                        "conceptLabelColumn": undefined,
                                                        "conceptImportColumn": undefined,
                                                        "principalConceptCode": undefined,
                                                        "derivationDataScope": undefined,
                                                        "selected": false,
                                                        "scannable": false,
                                                      }
                                                    }
                                                    fieldDetailsInfo={{}}
                                                    getDomainFields={[Function]}
                                                    helpNoun="field designer"
                                                    index={1}
                                                    key="domain-row-key-1"
                                                    maxPhiLevel="Restricted"
                                                    onChange={[Function]}
                                                    onDelete={[Function]}
                                                    onExpand={[Function]}
                                                    showDefaultValueSettings={false}
                                                    successBsStyle="success"
                                                  >
                                                    <PublicDraggable
                                                      draggableId="domainpropertiesrow-domaindrag-1-1"
                                                      index={1}
                                                    >
                                                      <PrivateDraggable
                                                        canDragInteractiveElements={false}
                                                        draggableId="domainpropertiesrow-domaindrag-1-1"
                                                        index={1}
                                                        isClone={false}
                                                        isEnabled={true}
                                                        shouldRespectForcePress={false}
                                                      >
                                                        <Connect(Draggable)
                                                          canDragInteractiveElements={false}
                                                          draggableId="domainpropertiesrow-domaindrag-1-1"
                                                          index={1}
                                                          isClone={false}
                                                          isEnabled={true}
                                                          shouldRespectForcePress={false}
                                                        >
                                                          <Draggable
                                                            canDragInteractiveElements={false}
                                                            draggableId="domainpropertiesrow-domaindrag-1-1"
                                                            dropAnimationFinished={[Function]}
                                                            index={1}
                                                            isClone={false}
                                                            isEnabled={true}
                                                            mapped={
                                                              {
                                                                "combineTargetFor": null,
                                                                "offset": {
                                                                  "x": 0,
                                                                  "y": 0,
                                                                },
                                                                "shouldAnimateDisplacement": true,
                                                                "snapshot": {
                                                                  "combineTargetFor": null,
                                                                  "combineWith": null,
                                                                  "draggingOver": null,
                                                                  "dropAnimation": null,
                                                                  "isClone": false,
                                                                  "isDragging": false,
                                                                  "isDropAnimating": false,
                                                                  "mode": null,
                                                                },
                                                                "type": "SECONDARY",
                                                              }
                                                            }
                                                            shouldRespectForcePress={false}
                                                          >
                                                            <div
                                                              className="domain-field-row domain-row-border-default"
                                                              data-rbd-draggable-context-id="0"
                                                              data-rbd-draggable-id="domainpropertiesrow-domaindrag-1-1"
                                                              onTransitionEnd={null}
                                                              style={
                                                                {
                                                                  "transform": null,
                                                                  "transition": null,
                                                                }
                                                              }
                                                              tabIndex={1}
                                                            >
                                                              <Row
                                                                bsClass="row"
                                                                className="domain-row-container"
                                                                componentClass="div"
                                                                key="domainpropertiesrow-domainrow-1-1"
                                                              >
                                                                <div
                                                                  className="domain-row-container row"
                                                                >
                                                                  <AdvancedSettings
                                                                    defaultValueOptions={Immutable.List []}
                                                                    domainFormDisplayOptions={
                                                                      {
                                                                        "domainKindDisplayName": "assay design",
                                                                        "hideFilePropertyType": undefined,
                                                                        "hideInferFromFile": true,
                                                                        "hideStudyPropertyTypes": true,
                                                                        "textChoiceLockedForDomain": true,
                                                                      }
                                                                    }
                                                                    domainId={null}
                                                                    domainIndex={1}
                                                                    field={
                                                                      Immutable.Record {
                                                                        "conceptURI": undefined,
                                                                        "conditionalFormats": Immutable.List [],
                                                                        "defaultScale": undefined,
                                                                        "defaultValueType": undefined,
                                                                        "defaultValue": undefined,
                                                                        "defaultDisplayValue": undefined,
                                                                        "description": undefined,
                                                                        "dimension": undefined,
                                                                        "excludeFromShifting": false,
                                                                        "format": undefined,
                                                                        "hidden": false,
                                                                        "importAliases": undefined,
                                                                        "label": undefined,
                                                                        "lookupContainer": undefined,
                                                                        "lookupQuery": undefined,
                                                                        "lookupSchema": undefined,
                                                                        "lookupValidator": undefined,
                                                                        "measure": undefined,
                                                                        "mvEnabled": false,
                                                                        "name": "field2",
                                                                        "PHI": undefined,
                                                                        "propertyId": undefined,
                                                                        "propertyURI": undefined,
                                                                        "propertyValidators": Immutable.List [],
                                                                        "rangeValidators": Immutable.List [],
                                                                        "rangeURI": "xsd:int",
                                                                        "regexValidators": Immutable.List [],
                                                                        "textChoiceValidator": undefined,
                                                                        "recommendedVariable": false,
                                                                        "required": false,
                                                                        "scale": 4000,
                                                                        "URL": undefined,
                                                                        "shownInDetailsView": true,
                                                                        "shownInInsertView": true,
                                                                        "shownInUpdateView": true,
                                                                        "visible": true,
                                                                        "dataType": Immutable.Record {
                                                                          "conceptURI": undefined,
                                                                          "display": "Integer",
                                                                          "name": "int",
                                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                                                          "alternateRangeURI": "xsd:int",
                                                                          "shortDisplay": undefined,
                                                                          "lookupSchema": undefined,
                                                                          "lookupQuery": undefined,
                                                                        },
                                                                        "lookupQueryValue": undefined,
                                                                        "lookupType": Immutable.Record {
                                                                          "conceptURI": undefined,
                                                                          "display": "Lookup",
                                                                          "name": "lookup",
                                                                          "rangeURI": "xsd:int",
                                                                          "alternateRangeURI": undefined,
                                                                          "shortDisplay": undefined,
                                                                          "lookupSchema": undefined,
                                                                          "lookupQuery": undefined,
                                                                        },
                                                                        "original": {
                                                                          "conceptURI": undefined,
                                                                          "dataType": Immutable.Record {
                                                                            "conceptURI": undefined,
                                                                            "display": "Integer",
                                                                            "name": "int",
                                                                            "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                                                            "alternateRangeURI": "xsd:int",
                                                                            "shortDisplay": undefined,
                                                                            "lookupSchema": undefined,
                                                                            "lookupQuery": undefined,
                                                                          },
                                                                          "name": "field2",
                                                                          "rangeURI": undefined,
                                                                        },
                                                                        "updatedField": false,
                                                                        "isPrimaryKey": false,
                                                                        "lockType": "NotLocked",
                                                                        "wrappedColumnName": undefined,
                                                                        "disablePhiLevel": false,
                                                                        "lockExistingField": false,
                                                                        "sourceOntology": undefined,
                                                                        "conceptSubtree": undefined,
                                                                        "conceptLabelColumn": undefined,
                                                                        "conceptImportColumn": undefined,
                                                                        "principalConceptCode": undefined,
                                                                        "derivationDataScope": undefined,
                                                                        "selected": false,
                                                                        "scannable": false,
                                                                      }
                                                                    }
                                                                    helpNoun="field designer"
                                                                    index={1}
                                                                    label="field2"
                                                                    maxPhiLevel="Restricted"
                                                                    onApply={[Function]}
                                                                    onHide={[Function]}
                                                                    show={false}
                                                                    showDefaultValueSettings={false}
                                                                    successBsStyle="success"
                                                                  >
                                                                    <Modal
                                                                      animation={true}
                                                                      autoFocus={true}
                                                                      backdrop={true}
                                                                      bsClass="modal"
                                                                      dialogComponentClass={[Function]}
                                                                      enforceFocus={true}
                                                                      keyboard={true}
                                                                      manager={
                                                                        ModalManager {
                                                                          "add": [Function],
                                                                          "containers": [],
                                                                          "data": [],
                                                                          "handleContainerOverflow": true,
                                                                          "hideSiblingNodes": true,
                                                                          "isTopModal": [Function],
                                                                          "modals": [],
                                                                          "remove": [Function],
                                                                        }
                                                                      }
                                                                      onEnter={[Function]}
                                                                      onHide={[Function]}
                                                                      renderBackdrop={[Function]}
                                                                      restoreFocus={true}
                                                                      show={false}
                                                                    >
                                                                      <Modal
                                                                        autoFocus={true}
                                                                        backdrop={true}
                                                                        backdropClassName="modal-backdrop"
                                                                        backdropTransition={[Function]}
                                                                        containerClassName="modal-open"
                                                                        enforceFocus={true}
                                                                        keyboard={true}
                                                                        manager={
                                                                          ModalManager {
                                                                            "add": [Function],
                                                                            "containers": [],
                                                                            "data": [],
                                                                            "handleContainerOverflow": true,
                                                                            "hideSiblingNodes": true,
                                                                            "isTopModal": [Function],
                                                                            "modals": [],
                                                                            "remove": [Function],
                                                                          }
                                                                        }
                                                                        onEnter={[Function]}
                                                                        onEntering={[Function]}
                                                                        onExited={[Function]}
                                                                        onHide={[Function]}
                                                                        onMouseUp={[Function]}
                                                                        renderBackdrop={[Function]}
                                                                        restoreFocus={true}
                                                                        show={false}
                                                                        transition={[Function]}
                                                                      />
                                                                    </Modal>
                                                                  </AdvancedSettings>
                                                                  <div
                                                                    aria-describedby="rbd-hidden-text-0-hidden-text-0"
                                                                    className="domain-row-handle"
                                                                    data-rbd-drag-handle-context-id="0"
                                                                    data-rbd-drag-handle-draggable-id="domainpropertiesrow-domaindrag-1-1"
                                                                    draggable={false}
                                                                    onDragStart={[Function]}
                                                                    role="button"
                                                                    tabIndex={0}
                                                                  >
                                                                    <DragDropHandle>
                                                                      <div
                                                                        className="drag-drop-handle"
                                                                      >
                                                                        <span
                                                                          className="fa fa-ellipsis-v"
                                                                        />
                                                                        <span
                                                                          className="fa fa-ellipsis-v"
                                                                        />
                                                                      </div>
                                                                    </DragDropHandle>
                                                                  </div>
                                                                  <div
                                                                    className="domain-row-action-section"
                                                                  >
                                                                    <Checkbox
                                                                      bsClass="checkbox"
                                                                      checked={false}
                                                                      className="domain-field-check-icon"
                                                                      disabled={false}
                                                                      id="domainpropertiesrow-selected-1-1"
                                                                      inline={false}
                                                                      name="domainpropertiesrow-selected"
                                                                      onChange={[Function]}
                                                                      title=""
                                                                    >
                                                                      <div
                                                                        className="domain-field-check-icon checkbox"
                                                                      >
                                                                        <label
                                                                          title=""
                                                                        >
                                                                          <input
                                                                            checked={false}
                                                                            disabled={false}
                                                                            id="domainpropertiesrow-selected-1-1"
                                                                            name="domainpropertiesrow-selected"
                                                                            onChange={[Function]}
                                                                            type="checkbox"
                                                                          />
                                                                        </label>
                                                                      </div>
                                                                    </Checkbox>
                                                                    <FieldExpansionToggle
                                                                      cls="domain-field-expand-icon"
                                                                      collapsedTitle="Show additional field properties"
                                                                      expanded={false}
                                                                      expandedTitle="Hide additional field properties"
                                                                      id="domainpropertiesrow-expand-1-1"
                                                                      onClick={[Function]}
                                                                    >
                                                                      <div
                                                                        className="field-icon domain-field-expand-icon"
                                                                        id="domainpropertiesrow-expand-1-1"
                                                                        onClick={[Function]}
                                                                        title="Show additional field properties"
                                                                      >
                                                                        <span
                                                                          className="fa fa-lg fa-plus-square"
                                                                        />
                                                                      </div>
                                                                    </FieldExpansionToggle>
                                                                  </div>
                                                                  <div
                                                                    className="domain-row-main"
                                                                  >
                                                                    <Col
                                                                      bsClass="col"
                                                                      className="domain-row-base-fields domain-row-base-fields-position"
                                                                      componentClass="div"
                                                                      xs={6}
                                                                    >
                                                                      <div
                                                                        className="domain-row-base-fields domain-row-base-fields-position col-xs-6"
                                                                      >
                                                                        <div
                                                                          id="domainpropertiesrow-row-1-1"
                                                                        >
                                                                          <Col
                                                                            bsClass="col"
                                                                            componentClass="div"
                                                                            xs={6}
                                                                          >
                                                                            <div
                                                                              className="col-xs-6"
                                                                            >
                                                                              <FormControl
                                                                                bsClass="form-control"
                                                                                componentClass="input"
                                                                                disabled={false}
                                                                                id="domainpropertiesrow-name-1-1"
                                                                                name="domainpropertiesrow-name"
                                                                                onChange={[Function]}
                                                                                type="text"
                                                                                value="field2"
                                                                              >
                                                                                <input
                                                                                  className="form-control"
                                                                                  disabled={false}
                                                                                  id="domainpropertiesrow-name-1-1"
                                                                                  name="domainpropertiesrow-name"
                                                                                  onChange={[Function]}
                                                                                  type="text"
                                                                                  value="field2"
                                                                                />
                                                                              </FormControl>
                                                                            </div>
                                                                          </Col>
                                                                          <Col
                                                                            bsClass="col"
                                                                            componentClass="div"
                                                                            xs={4}
                                                                          >
                                                                            <div
                                                                              className="col-xs-4"
                                                                            >
                                                                              <FormControl
                                                                                bsClass="form-control"
                                                                                componentClass="select"
                                                                                disabled={false}
                                                                                id="domainpropertiesrow-type-1-1"
                                                                                name="domainpropertiesrow-type"
                                                                                onChange={[Function]}
                                                                                value="int"
                                                                              >
                                                                                <select
                                                                                  className="form-control"
                                                                                  disabled={false}
                                                                                  id="domainpropertiesrow-type-1-1"
                                                                                  name="domainpropertiesrow-type"
                                                                                  onChange={[Function]}
                                                                                  value="int"
                                                                                >
                                                                                  <option
                                                                                    key="boolean"
                                                                                    value="boolean"
                                                                                  >
                                                                                    Boolean
                                                                                  </option>
                                                                                  <option
                                                                                    key="dateTime"
                                                                                    value="dateTime"
                                                                                  >
                                                                                    Date Time
                                                                                  </option>
                                                                                  <option
                                                                                    key="double"
                                                                                    value="double"
                                                                                  >
                                                                                    Decimal (floating point)
                                                                                  </option>
                                                                                  <option
                                                                                    key="flag"
                                                                                    value="flag"
                                                                                  >
                                                                                    Flag
                                                                                  </option>
                                                                                  <option
                                                                                    key="int"
                                                                                    value="int"
                                                                                  >
                                                                                    Integer
                                                                                  </option>
                                                                                  <option
                                                                                    key="lookup"
                                                                                    value="lookup"
                                                                                  >
                                                                                    Lookup
                                                                                  </option>
                                                                                  <option
                                                                                    key="multiLine"
                                                                                    value="multiLine"
                                                                                  >
                                                                                    Multi-Line Text
                                                                                  </option>
                                                                                  <option
                                                                                    key="sample"
                                                                                    value="sample"
                                                                                  >
                                                                                    Sample
                                                                                  </option>
                                                                                  <option
                                                                                    key="string"
                                                                                    value="string"
                                                                                  >
                                                                                    Text
                                                                                  </option>
                                                                                  <option
                                                                                    key="textChoice"
                                                                                    value="textChoice"
                                                                                  >
                                                                                    Text Choice
                                                                                  </option>
                                                                                  <option
                                                                                    key="users"
                                                                                    value="users"
                                                                                  >
                                                                                    User
                                                                                  </option>
                                                                                </select>
                                                                              </FormControl>
                                                                            </div>
                                                                          </Col>
                                                                          <Col
                                                                            bsClass="col"
                                                                            componentClass="div"
                                                                            xs={2}
                                                                          >
                                                                            <div
                                                                              className="col-xs-2"
                                                                            >
                                                                              <div
                                                                                className="domain-field-checkbox-container"
                                                                              >
                                                                                <Checkbox
                                                                                  bsClass="checkbox"
                                                                                  checked={false}
                                                                                  className="domain-field-checkbox"
                                                                                  disabled={false}
                                                                                  id="domainpropertiesrow-required-1-1"
                                                                                  inline={false}
                                                                                  name="domainpropertiesrow-required"
                                                                                  onChange={[Function]}
                                                                                  title=""
                                                                                >
                                                                                  <div
                                                                                    className="domain-field-checkbox checkbox"
                                                                                  >
                                                                                    <label
                                                                                      title=""
                                                                                    >
                                                                                      <input
                                                                                        checked={false}
                                                                                        disabled={false}
                                                                                        id="domainpropertiesrow-required-1-1"
                                                                                        name="domainpropertiesrow-required"
                                                                                        onChange={[Function]}
                                                                                        type="checkbox"
                                                                                      />
                                                                                    </label>
                                                                                  </div>
                                                                                </Checkbox>
                                                                              </div>
                                                                            </div>
                                                                          </Col>
                                                                        </div>
                                                                      </div>
                                                                    </Col>
                                                                    <Col
                                                                      bsClass="col"
                                                                      className="domain-row-details-container"
                                                                      componentClass="div"
                                                                      xs={6}
                                                                    >
                                                                      <div
                                                                        className="domain-row-details-container col-xs-6"
                                                                      >
                                                                        <div
                                                                          className="domain-field-details"
                                                                          id="domainpropertiesrow-details-1-1"
                                                                        >
                                                                          New Field
                                                                        </div>
                                                                        <div
                                                                          className="domain-field-buttons"
                                                                        >
                                                                          <Memo()
                                                                            iconCls="domain-field-delete-icon"
                                                                            id="domainpropertiesrow-delete-1-1"
                                                                            onDelete={[Function]}
                                                                            title="Remove field"
                                                                          >
                                                                            <span
                                                                              className="field-icon"
                                                                              id="domainpropertiesrow-delete-1-1"
                                                                              onClick={[Function]}
                                                                              title="Remove field"
                                                                            >
                                                                              <span
                                                                                className="fa fa-times-circle domain-field-delete-icon"
                                                                              />
                                                                            </span>
                                                                          </Memo()>
                                                                        </div>
                                                                      </div>
                                                                    </Col>
                                                                  </div>
                                                                </div>
                                                              </Row>
                                                              <Collapse
                                                                appear={false}
                                                                dimension="height"
                                                                getDimensionValue={[Function]}
                                                                in={false}
                                                                mountOnEnter={false}
                                                                onExited={[Function]}
                                                                onExiting={[Function]}
                                                                timeout={300}
                                                                unmountOnExit={false}
                                                              >
                                                                <Transition
                                                                  appear={false}
                                                                  aria-expanded={null}
                                                                  enter={true}
                                                                  exit={true}
                                                                  in={false}
                                                                  mountOnEnter={false}
                                                                  onEnter={[Function]}
                                                                  onEntered={[Function]}
                                                                  onEntering={[Function]}
                                                                  onExit={[Function]}
                                                                  onExited={[Function]}
                                                                  onExiting={[Function]}
                                                                  timeout={300}
                                                                  unmountOnExit={false}
                                                                >
                                                                  <div
                                                                    aria-expanded={null}
                                                                    className="collapse"
                                                                  >
                                                                    <DomainRowExpandedOptions
                                                                      appPropertiesOnly={false}
                                                                      domainFormDisplayOptions={
                                                                        {
                                                                          "domainKindDisplayName": "assay design",
                                                                          "hideFilePropertyType": undefined,
                                                                          "hideInferFromFile": true,
                                                                          "hideStudyPropertyTypes": true,
                                                                          "textChoiceLockedForDomain": true,
                                                                        }
                                                                      }
                                                                      domainIndex={1}
                                                                      field={
                                                                        Immutable.Record {
                                                                          "conceptURI": undefined,
                                                                          "conditionalFormats": Immutable.List [],
                                                                          "defaultScale": undefined,
                                                                          "defaultValueType": undefined,
                                                                          "defaultValue": undefined,
                                                                          "defaultDisplayValue": undefined,
                                                                          "description": undefined,
                                                                          "dimension": undefined,
                                                                          "excludeFromShifting": false,
                                                                          "format": undefined,
                                                                          "hidden": false,
                                                                          "importAliases": undefined,
                                                                          "label": undefined,
                                                                          "lookupContainer": undefined,
                                                                          "lookupQuery": undefined,
                                                                          "lookupSchema": undefined,
                                                                          "lookupValidator": undefined,
                                                                          "measure": undefined,
                                                                          "mvEnabled": false,
                                                                          "name": "field2",
                                                                          "PHI": undefined,
                                                                          "propertyId": undefined,
                                                                          "propertyURI": undefined,
                                                                          "propertyValidators": Immutable.List [],
                                                                          "rangeValidators": Immutable.List [],
                                                                          "rangeURI": "xsd:int",
                                                                          "regexValidators": Immutable.List [],
                                                                          "textChoiceValidator": undefined,
                                                                          "recommendedVariable": false,
                                                                          "required": false,
                                                                          "scale": 4000,
                                                                          "URL": undefined,
                                                                          "shownInDetailsView": true,
                                                                          "shownInInsertView": true,
                                                                          "shownInUpdateView": true,
                                                                          "visible": true,
                                                                          "dataType": Immutable.Record {
                                                                            "conceptURI": undefined,
                                                                            "display": "Integer",
                                                                            "name": "int",
                                                                            "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                                                            "alternateRangeURI": "xsd:int",
                                                                            "shortDisplay": undefined,
                                                                            "lookupSchema": undefined,
                                                                            "lookupQuery": undefined,
                                                                          },
                                                                          "lookupQueryValue": undefined,
                                                                          "lookupType": Immutable.Record {
                                                                            "conceptURI": undefined,
                                                                            "display": "Lookup",
                                                                            "name": "lookup",
                                                                            "rangeURI": "xsd:int",
                                                                            "alternateRangeURI": undefined,
                                                                            "shortDisplay": undefined,
                                                                            "lookupSchema": undefined,
                                                                            "lookupQuery": undefined,
                                                                          },
                                                                          "original": {
                                                                            "conceptURI": undefined,
                                                                            "dataType": Immutable.Record {
                                                                              "conceptURI": undefined,
                                                                              "display": "Integer",
                                                                              "name": "int",
                                                                              "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                                                              "alternateRangeURI": "xsd:int",
                                                                              "shortDisplay": undefined,
                                                                              "lookupSchema": undefined,
                                                                              "lookupQuery": undefined,
                                                                            },
                                                                            "name": "field2",
                                                                            "rangeURI": undefined,
                                                                          },
                                                                          "updatedField": false,
                                                                          "isPrimaryKey": false,
                                                                          "lockType": "NotLocked",
                                                                          "wrappedColumnName": undefined,
                                                                          "disablePhiLevel": false,
                                                                          "lockExistingField": false,
                                                                          "sourceOntology": undefined,
                                                                          "conceptSubtree": undefined,
                                                                          "conceptLabelColumn": undefined,
                                                                          "conceptImportColumn": undefined,
                                                                          "principalConceptCode": undefined,
                                                                          "derivationDataScope": undefined,
                                                                          "selected": false,
                                                                          "scannable": false,
                                                                        }
                                                                      }
                                                                      getDomainFields={[Function]}
                                                                      index={1}
                                                                      onChange={[Function]}
                                                                      onMultiChange={[Function]}
                                                                      showingModal={[Function]}
                                                                      successBsStyle="success"
                                                                    >
                                                                      <div
                                                                        className="domain-row-container"
                                                                      >
                                                                        <div
                                                                          className="domain-row-container-expand-spacer"
                                                                        />
                                                                        <div
                                                                          className="domain-row-container-expanded"
                                                                        >
                                                                          <Col
                                                                            bsClass="col"
                                                                            componentClass="div"
                                                                            xs={12}
                                                                          >
                                                                            <div
                                                                              className="col-xs-12"
                                                                            >
                                                                              <NumericFieldOptions
                                                                                appPropertiesOnly={false}
                                                                                domainIndex={1}
                                                                                index={1}
                                                                                label="Integer Options"
                                                                                lockType="NotLocked"
                                                                                onChange={[Function]}
                                                                                scannable={false}
                                                                              >
                                                                                <div>
                                                                                  <Row
                                                                                    bsClass="row"
                                                                                    componentClass="div"
                                                                                  >
                                                                                    <div
                                                                                      className="row"
                                                                                    >
                                                                                      <Col
                                                                                        bsClass="col"
                                                                                        componentClass="div"
                                                                                        xs={12}
                                                                                      >
                                                                                        <div
                                                                                          className="col-xs-12"
                                                                                        >
                                                                                          <SectionHeading
                                                                                            title="Integer Options"
                                                                                          >
                                                                                            <div
                                                                                              className="domain-field-section-heading"
                                                                                            >
                                                                                              Integer Options
                                                                                            </div>
                                                                                          </SectionHeading>
                                                                                        </div>
                                                                                      </Col>
                                                                                    </div>
                                                                                  </Row>
                                                                                  <Row
                                                                                    bsClass="row"
                                                                                    componentClass="div"
                                                                                  >
                                                                                    <div
                                                                                      className="row"
                                                                                    >
                                                                                      <Col
                                                                                        bsClass="col"
                                                                                        componentClass="div"
                                                                                        xs={3}
                                                                                      >
                                                                                        <div
                                                                                          className="col-xs-3"
                                                                                        >
                                                                                          <div
                                                                                            className="domain-field-label"
                                                                                          >
                                                                                            <DomainFieldLabel
                                                                                              helpTipBody={
                                                                                                <React.Fragment>
                                                                                                  <p>
                                                                                                    To control how a number value is displayed, provide a string format compatible with the Java
                                                                                                     
                                                                                                    <Memo
                                                                                                      urlSuffix="java/text/DecimalFormat.html"
                                                                                                    >
                                                                                                      DecimalFormat
                                                                                                    </Memo>
                                                                                                     class.
                                                                                                  </p>
                                                                                                  <p>
                                                                                                    Learn more about using 
                                                                                                    <HelpLink
                                                                                                      topic="dateFormats#number"
                                                                                                    >
                                                                                                      Number formats
                                                                                                    </HelpLink>
                                                                                                     in LabKey.
                                                                                                  </p>
                                                                                                </React.Fragment>
                                                                                              }
                                                                                              label="Format for Numbers"
                                                                                            >
                                                                                              Format for 
                                                                                              <span
                                                                                                className="domain-no-wrap"
                                                                                              >
                                                                                                Numbers
                                                                                                <Component
                                                                                                  id="tooltip"
                                                                                                  title="Format for Numbers"
                                                                                                >
                                                                                                  <span
                                                                                                    className="label-help-target"
                                                                                                    onMouseOut={[Function]}
                                                                                                    onMouseOver={[Function]}
                                                                                                  >
                                                                                                    <span
                                                                                                      className="label-help-icon fa fa-question-circle"
                                                                                                    />
                                                                                                    <Overlay
                                                                                                      animation={[Function]}
                                                                                                      placement="right"
                                                                                                      rootClose={false}
                                                                                                      show={false}
                                                                                                    >
                                                                                                      <Overlay
                                                                                                        placement="right"
                                                                                                        rootClose={false}
                                                                                                        show={false}
                                                                                                        transition={[Function]}
                                                                                                      />
                                                                                                    </Overlay>
                                                                                                  </span>
                                                                                                </Component>
                                                                                              </span>
                                                                                            </DomainFieldLabel>
                                                                                          </div>
                                                                                        </div>
                                                                                      </Col>
                                                                                      <Col
                                                                                        bsClass="col"
                                                                                        componentClass="div"
                                                                                        xs={2}
                                                                                      >
                                                                                        <div
                                                                                          className="col-xs-2"
                                                                                        >
                                                                                          <div
                                                                                            className="domain-field-label"
                                                                                          >
                                                                                            Default Scale Type
                                                                                          </div>
                                                                                        </div>
                                                                                      </Col>
                                                                                    </div>
                                                                                  </Row>
                                                                                  <Row
                                                                                    bsClass="row"
                                                                                    componentClass="div"
                                                                                  >
                                                                                    <div
                                                                                      className="row"
                                                                                    >
                                                                                      <Col
                                                                                        bsClass="col"
                                                                                        componentClass="div"
                                                                                        xs={3}
                                                                                      >
                                                                                        <div
                                                                                          className="col-xs-3"
                                                                                        >
                                                                                          <FormControl
                                                                                            bsClass="form-control"
                                                                                            componentClass="input"
                                                                                            disabled={false}
                                                                                            id="domainpropertiesrow-format-1-1"
                                                                                            name="domainpropertiesrow-format"
                                                                                            onChange={[Function]}
                                                                                            type="text"
                                                                                            value=""
                                                                                          >
                                                                                            <input
                                                                                              className="form-control"
                                                                                              disabled={false}
                                                                                              id="domainpropertiesrow-format-1-1"
                                                                                              name="domainpropertiesrow-format"
                                                                                              onChange={[Function]}
                                                                                              type="text"
                                                                                              value=""
                                                                                            />
                                                                                          </FormControl>
                                                                                        </div>
                                                                                      </Col>
                                                                                      <Col
                                                                                        bsClass="col"
                                                                                        componentClass="div"
                                                                                        xs={2}
                                                                                      >
                                                                                        <div
                                                                                          className="col-xs-2"
                                                                                        >
                                                                                          <FormControl
                                                                                            bsClass="form-control"
                                                                                            componentClass="select"
                                                                                            disabled={false}
                                                                                            id="domainpropertiesrow-defaultScale-1-1"
                                                                                            name="domainpropertiesrow-defaultScale"
                                                                                            onChange={[Function]}
                                                                                          >
                                                                                            <select
                                                                                              className="form-control"
                                                                                              disabled={false}
                                                                                              id="domainpropertiesrow-defaultScale-1-1"
                                                                                              name="domainpropertiesrow-defaultScale"
                                                                                              onChange={[Function]}
                                                                                            >
                                                                                              <option
                                                                                                key="domainpropertiesrow-defaultScaleoption-LINEAR-1-1"
                                                                                                value="LINEAR"
                                                                                              >
                                                                                                Linear
                                                                                              </option>
                                                                                              <option
                                                                                                key="domainpropertiesrow-defaultScaleoption-LOG-1-1"
                                                                                                value="LOG"
                                                                                              >
                                                                                                Log
                                                                                              </option>
                                                                                            </select>
                                                                                          </FormControl>
                                                                                        </div>
                                                                                      </Col>
                                                                                    </div>
                                                                                  </Row>
                                                                                  <Memo()
                                                                                    appPropertiesOnly={false}
                                                                                    domainIndex={1}
                                                                                    index={1}
                                                                                    label="Integer Options"
                                                                                    lockType="NotLocked"
                                                                                    onChange={[Function]}
                                                                                    scannable={false}
                                                                                  />
                                                                                </div>
                                                                              </NumericFieldOptions>
                                                                            </div>
                                                                          </Col>
                                                                          <Col
                                                                            bsClass="col"
                                                                            componentClass="div"
                                                                            xs={12}
                                                                          >
                                                                            <div
                                                                              className="col-xs-12"
                                                                            >
                                                                              <NameAndLinkingOptions
                                                                                appPropertiesOnly={false}
                                                                                domainFormDisplayOptions={
                                                                                  {
                                                                                    "domainKindDisplayName": "assay design",
                                                                                    "hideFilePropertyType": undefined,
                                                                                    "hideInferFromFile": true,
                                                                                    "hideStudyPropertyTypes": true,
                                                                                    "textChoiceLockedForDomain": true,
                                                                                  }
                                                                                }
                                                                                domainIndex={1}
                                                                                field={
                                                                                  Immutable.Record {
                                                                                    "conceptURI": undefined,
                                                                                    "conditionalFormats": Immutable.List [],
                                                                                    "defaultScale": undefined,
                                                                                    "defaultValueType": undefined,
                                                                                    "defaultValue": undefined,
                                                                                    "defaultDisplayValue": undefined,
                                                                                    "description": undefined,
                                                                                    "dimension": undefined,
                                                                                    "excludeFromShifting": false,
                                                                                    "format": undefined,
                                                                                    "hidden": false,
                                                                                    "importAliases": undefined,
                                                                                    "label": undefined,
                                                                                    "lookupContainer": undefined,
                                                                                    "lookupQuery": undefined,
                                                                                    "lookupSchema": undefined,
                                                                                    "lookupValidator": undefined,
                                                                                    "measure": undefined,
                                                                                    "mvEnabled": false,
                                                                                    "name": "field2",
                                                                                    "PHI": undefined,
                                                                                    "propertyId": undefined,
                                                                                    "propertyURI": undefined,
                                                                                    "propertyValidators": Immutable.List [],
                                                                                    "rangeValidators": Immutable.List [],
                                                                                    "rangeURI": "xsd:int",
                                                                                    "regexValidators": Immutable.List [],
                                                                                    "textChoiceValidator": undefined,
                                                                                    "recommendedVariable": false,
                                                                                    "required": false,
                                                                                    "scale": 4000,
                                                                                    "URL": undefined,
                                                                                    "shownInDetailsView": true,
                                                                                    "shownInInsertView": true,
                                                                                    "shownInUpdateView": true,
                                                                                    "visible": true,
                                                                                    "dataType": Immutable.Record {
                                                                                      "conceptURI": undefined,
                                                                                      "display": "Integer",
                                                                                      "name": "int",
                                                                                      "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                                                                      "alternateRangeURI": "xsd:int",
                                                                                      "shortDisplay": undefined,
                                                                                      "lookupSchema": undefined,
                                                                                      "lookupQuery": undefined,
                                                                                    },
                                                                                    "lookupQueryValue": undefined,
                                                                                    "lookupType": Immutable.Record {
                                                                                      "conceptURI": undefined,
                                                                                      "display": "Lookup",
                                                                                      "name": "lookup",
                                                                                      "rangeURI": "xsd:int",
                                                                                      "alternateRangeURI": undefined,
                                                                                      "shortDisplay": undefined,
                                                                                      "lookupSchema": undefined,
                                                                                      "lookupQuery": undefined,
                                                                                    },
                                                                                    "original": {
                                                                                      "conceptURI": undefined,
                                                                                      "dataType": Immutable.Record {
                                                                                        "conceptURI": undefined,
                                                                                        "display": "Integer",
                                                                                        "name": "int",
                                                                                        "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                                                                        "alternateRangeURI": "xsd:int",
                                                                                        "shortDisplay": undefined,
                                                                                        "lookupSchema": undefined,
                                                                                        "lookupQuery": undefined,
                                                                                      },
                                                                                      "name": "field2",
                                                                                      "rangeURI": undefined,
                                                                                    },
                                                                                    "updatedField": false,
                                                                                    "isPrimaryKey": false,
                                                                                    "lockType": "NotLocked",
                                                                                    "wrappedColumnName": undefined,
                                                                                    "disablePhiLevel": false,
                                                                                    "lockExistingField": false,
                                                                                    "sourceOntology": undefined,
                                                                                    "conceptSubtree": undefined,
                                                                                    "conceptLabelColumn": undefined,
                                                                                    "conceptImportColumn": undefined,
                                                                                    "principalConceptCode": undefined,
                                                                                    "derivationDataScope": undefined,
                                                                                    "selected": false,
                                                                                    "scannable": false,
                                                                                  }
                                                                                }
                                                                                index={1}
                                                                                onChange={[Function]}
                                                                              >
                                                                                <div>
                                                                                  <Row
                                                                                    bsClass="row"
                                                                                    componentClass="div"
                                                                                  >
                                                                                    <div
                                                                                      className="row"
                                                                                    >
                                                                                      <Col
                                                                                        bsClass="col"
                                                                                        componentClass="div"
                                                                                        xs={12}
                                                                                      >
                                                                                        <div
                                                                                          className="col-xs-12"
                                                                                        >
                                                                                          <SectionHeading
                                                                                            cls="domain-field-section-hdr"
                                                                                            title="Name and Linking Options"
                                                                                          >
                                                                                            <div
                                                                                              className="domain-field-section-heading domain-field-section-hdr"
                                                                                            >
                                                                                              Name and Linking Options
                                                                                            </div>
                                                                                          </SectionHeading>
                                                                                        </div>
                                                                                      </Col>
                                                                                    </div>
                                                                                  </Row>
                                                                                  <Row
                                                                                    bsClass="row"
                                                                                    componentClass="div"
                                                                                  >
                                                                                    <div
                                                                                      className="row"
                                                                                    >
                                                                                      <Col
                                                                                        bsClass="col"
                                                                                        componentClass="div"
                                                                                        xs={5}
                                                                                      >
                                                                                        <div
                                                                                          className="col-xs-5"
                                                                                        >
                                                                                          <div
                                                                                            className="domain-field-label"
                                                                                          >
                                                                                            Description
                                                                                          </div>
                                                                                          <FormControl
                                                                                            bsClass="form-control"
                                                                                            className="form-control textarea-noresize"
                                                                                            componentClass="textarea"
                                                                                            disabled={false}
                                                                                            id="domainpropertiesrow-description-1-1"
                                                                                            name="domainpropertiesrow-description"
                                                                                            onChange={[Function]}
                                                                                            rows={4}
                                                                                            value=""
                                                                                          >
                                                                                            <textarea
                                                                                              className="form-control textarea-noresize form-control"
                                                                                              disabled={false}
                                                                                              id="domainpropertiesrow-description-1-1"
                                                                                              name="domainpropertiesrow-description"
                                                                                              onChange={[Function]}
                                                                                              rows={4}
                                                                                              value=""
                                                                                            />
                                                                                          </FormControl>
                                                                                        </div>
                                                                                      </Col>
                                                                                      <Col
                                                                                        bsClass="col"
                                                                                        componentClass="div"
                                                                                        xs={3}
                                                                                      >
                                                                                        <div
                                                                                          className="col-xs-3"
                                                                                        >
                                                                                          <div
                                                                                            className="domain-field-label"
                                                                                          >
                                                                                            Label
                                                                                          </div>
                                                                                          <FormControl
                                                                                            bsClass="form-control"
                                                                                            componentClass="input"
                                                                                            disabled={false}
                                                                                            id="domainpropertiesrow-label-1-1"
                                                                                            name="domainpropertiesrow-label"
                                                                                            onChange={[Function]}
                                                                                            type="text"
                                                                                            value=""
                                                                                          >
                                                                                            <input
                                                                                              className="form-control"
                                                                                              disabled={false}
                                                                                              id="domainpropertiesrow-label-1-1"
                                                                                              name="domainpropertiesrow-label"
                                                                                              onChange={[Function]}
                                                                                              type="text"
                                                                                              value=""
                                                                                            />
                                                                                          </FormControl>
                                                                                          <div
                                                                                            className="domain-field-label"
                                                                                          >
                                                                                            <DomainFieldLabel
                                                                                              helpTipBody={
                                                                                                <React.Fragment>
                                                                                                  Define alternate field names to be used when importing from a file.
                                                                                                  <br />
                                                                                                  <br />
                                                                                                  Multiple aliases may be separated by spaces or commas. To define an alias that contains spaces, use double-quotes (") around it.
                                                                                                </React.Fragment>
                                                                                              }
                                                                                              label="Import Aliases"
                                                                                            >
                                                                                              Import 
                                                                                              <span
                                                                                                className="domain-no-wrap"
                                                                                              >
                                                                                                Aliases
                                                                                                <Component
                                                                                                  id="tooltip"
                                                                                                  title="Import Aliases"
                                                                                                >
                                                                                                  <span
                                                                                                    className="label-help-target"
                                                                                                    onMouseOut={[Function]}
                                                                                                    onMouseOver={[Function]}
                                                                                                  >
                                                                                                    <span
                                                                                                      className="label-help-icon fa fa-question-circle"
                                                                                                    />
                                                                                                    <Overlay
                                                                                                      animation={[Function]}
                                                                                                      placement="right"
                                                                                                      rootClose={false}
                                                                                                      show={false}
                                                                                                    >
                                                                                                      <Overlay
                                                                                                        placement="right"
                                                                                                        rootClose={false}
                                                                                                        show={false}
                                                                                                        transition={[Function]}
                                                                                                      />
                                                                                                    </Overlay>
                                                                                                  </span>
                                                                                                </Component>
                                                                                              </span>
                                                                                            </DomainFieldLabel>
                                                                                          </div>
                                                                                          <FormControl
                                                                                            bsClass="form-control"
                                                                                            componentClass="input"
                                                                                            disabled={false}
                                                                                            id="domainpropertiesrow-importAliases-1-1"
                                                                                            name="domainpropertiesrow-importAliases"
                                                                                            onChange={[Function]}
                                                                                            type="text"
                                                                                            value=""
                                                                                          >
                                                                                            <input
                                                                                              className="form-control"
                                                                                              disabled={false}
                                                                                              id="domainpropertiesrow-importAliases-1-1"
                                                                                              name="domainpropertiesrow-importAliases"
                                                                                              onChange={[Function]}
                                                                                              type="text"
                                                                                              value=""
                                                                                            />
                                                                                          </FormControl>
                                                                                        </div>
                                                                                      </Col>
                                                                                      <Col
                                                                                        bsClass="col"
                                                                                        componentClass="div"
                                                                                        xs={4}
                                                                                      >
                                                                                        <div
                                                                                          className="col-xs-4"
                                                                                        >
                                                                                          <div
                                                                                            className="domain-field-label"
                                                                                          >
                                                                                            <DomainFieldLabel
                                                                                              helpTipBody={
                                                                                                <React.Fragment>
                                                                                                  Use this to change the display of the field value within a data grid into a link. Multiple formats are supported, which allows ways to easily substitute and link to other locations in LabKey.
                                                                                                  <br />
                                                                                                  <br />
                                                                                                  Learn more about using 
                                                                                                  <HelpLink
                                                                                                    topic="urlEncoding"
                                                                                                  >
                                                                                                    URL Formatting Options
                                                                                                  </HelpLink>
                                                                                                  .
                                                                                                </React.Fragment>
                                                                                              }
                                                                                              label="URL"
                                                                                            >
                                                                                              <span
                                                                                                className="domain-no-wrap"
                                                                                              >
                                                                                                URL
                                                                                                <Component
                                                                                                  id="tooltip"
                                                                                                  title="URL"
                                                                                                >
                                                                                                  <span
                                                                                                    className="label-help-target"
                                                                                                    onMouseOut={[Function]}
                                                                                                    onMouseOver={[Function]}
                                                                                                  >
                                                                                                    <span
                                                                                                      className="label-help-icon fa fa-question-circle"
                                                                                                    />
                                                                                                    <Overlay
                                                                                                      animation={[Function]}
                                                                                                      placement="right"
                                                                                                      rootClose={false}
                                                                                                      show={false}
                                                                                                    >
                                                                                                      <Overlay
                                                                                                        placement="right"
                                                                                                        rootClose={false}
                                                                                                        show={false}
                                                                                                        transition={[Function]}
                                                                                                      />
                                                                                                    </Overlay>
                                                                                                  </span>
                                                                                                </Component>
                                                                                              </span>
                                                                                            </DomainFieldLabel>
                                                                                          </div>
                                                                                          <FormControl
                                                                                            bsClass="form-control"
                                                                                            componentClass="input"
                                                                                            disabled={false}
                                                                                            id="domainpropertiesrow-URL-1-1"
                                                                                            name="domainpropertiesrow-URL"
                                                                                            onChange={[Function]}
                                                                                            type="text"
                                                                                            value=""
                                                                                          >
                                                                                            <input
                                                                                              className="form-control"
                                                                                              disabled={false}
                                                                                              id="domainpropertiesrow-URL-1-1"
                                                                                              name="domainpropertiesrow-URL"
                                                                                              onChange={[Function]}
                                                                                              type="text"
                                                                                              value=""
                                                                                            />
                                                                                          </FormControl>
                                                                                        </div>
                                                                                      </Col>
                                                                                    </div>
                                                                                  </Row>
                                                                                </div>
                                                                              </NameAndLinkingOptions>
                                                                            </div>
                                                                          </Col>
                                                                          <Col
                                                                            bsClass="col"
                                                                            componentClass="div"
                                                                            xs={12}
                                                                          >
                                                                            <div
                                                                              className="col-xs-12"
                                                                            >
                                                                              <ConditionalFormattingAndValidation
                                                                                domainFormDisplayOptions={
                                                                                  {
                                                                                    "domainKindDisplayName": "assay design",
                                                                                    "hideFilePropertyType": undefined,
                                                                                    "hideInferFromFile": true,
                                                                                    "hideStudyPropertyTypes": true,
                                                                                    "textChoiceLockedForDomain": true,
                                                                                  }
                                                                                }
                                                                                domainIndex={1}
                                                                                field={
                                                                                  Immutable.Record {
                                                                                    "conceptURI": undefined,
                                                                                    "conditionalFormats": Immutable.List [],
                                                                                    "defaultScale": undefined,
                                                                                    "defaultValueType": undefined,
                                                                                    "defaultValue": undefined,
                                                                                    "defaultDisplayValue": undefined,
                                                                                    "description": undefined,
                                                                                    "dimension": undefined,
                                                                                    "excludeFromShifting": false,
                                                                                    "format": undefined,
                                                                                    "hidden": false,
                                                                                    "importAliases": undefined,
                                                                                    "label": undefined,
                                                                                    "lookupContainer": undefined,
                                                                                    "lookupQuery": undefined,
                                                                                    "lookupSchema": undefined,
                                                                                    "lookupValidator": undefined,
                                                                                    "measure": undefined,
                                                                                    "mvEnabled": false,
                                                                                    "name": "field2",
                                                                                    "PHI": undefined,
                                                                                    "propertyId": undefined,
                                                                                    "propertyURI": undefined,
                                                                                    "propertyValidators": Immutable.List [],
                                                                                    "rangeValidators": Immutable.List [],
                                                                                    "rangeURI": "xsd:int",
                                                                                    "regexValidators": Immutable.List [],
                                                                                    "textChoiceValidator": undefined,
                                                                                    "recommendedVariable": false,
                                                                                    "required": false,
                                                                                    "scale": 4000,
                                                                                    "URL": undefined,
                                                                                    "shownInDetailsView": true,
                                                                                    "shownInInsertView": true,
                                                                                    "shownInUpdateView": true,
                                                                                    "visible": true,
                                                                                    "dataType": Immutable.Record {
                                                                                      "conceptURI": undefined,
                                                                                      "display": "Integer",
                                                                                      "name": "int",
                                                                                      "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                                                                      "alternateRangeURI": "xsd:int",
                                                                                      "shortDisplay": undefined,
                                                                                      "lookupSchema": undefined,
                                                                                      "lookupQuery": undefined,
                                                                                    },
                                                                                    "lookupQueryValue": undefined,
                                                                                    "lookupType": Immutable.Record {
                                                                                      "conceptURI": undefined,
                                                                                      "display": "Lookup",
                                                                                      "name": "lookup",
                                                                                      "rangeURI": "xsd:int",
                                                                                      "alternateRangeURI": undefined,
                                                                                      "shortDisplay": undefined,
                                                                                      "lookupSchema": undefined,
                                                                                      "lookupQuery": undefined,
                                                                                    },
                                                                                    "original": {
                                                                                      "conceptURI": undefined,
                                                                                      "dataType": Immutable.Record {
                                                                                        "conceptURI": undefined,
                                                                                        "display": "Integer",
                                                                                        "name": "int",
                                                                                        "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                                                                        "alternateRangeURI": "xsd:int",
                                                                                        "shortDisplay": undefined,
                                                                                        "lookupSchema": undefined,
                                                                                        "lookupQuery": undefined,
                                                                                      },
                                                                                      "name": "field2",
                                                                                      "rangeURI": undefined,
                                                                                    },
                                                                                    "updatedField": false,
                                                                                    "isPrimaryKey": false,
                                                                                    "lockType": "NotLocked",
                                                                                    "wrappedColumnName": undefined,
                                                                                    "disablePhiLevel": false,
                                                                                    "lockExistingField": false,
                                                                                    "sourceOntology": undefined,
                                                                                    "conceptSubtree": undefined,
                                                                                    "conceptLabelColumn": undefined,
                                                                                    "conceptImportColumn": undefined,
                                                                                    "principalConceptCode": undefined,
                                                                                    "derivationDataScope": undefined,
                                                                                    "selected": false,
                                                                                    "scannable": false,
                                                                                  }
                                                                                }
                                                                                index={1}
                                                                                onChange={[Function]}
                                                                                showingModal={[Function]}
                                                                                successBsStyle="success"
                                                                              >
                                                                                <div>
                                                                                  <Row
                                                                                    bsClass="row"
                                                                                    componentClass="div"
                                                                                  >
                                                                                    <div
                                                                                      className="row"
                                                                                    >
                                                                                      <Col
                                                                                        bsClass="col"
                                                                                        componentClass="div"
                                                                                        xs={12}
                                                                                      >
                                                                                        <div
                                                                                          className="col-xs-12"
                                                                                        >
                                                                                          <SectionHeading
                                                                                            cls="domain-field-section-hdr"
                                                                                            title="Conditional Formatting and Validation Options"
                                                                                          >
                                                                                            <div
                                                                                              className="domain-field-section-heading domain-field-section-hdr"
                                                                                            >
                                                                                              Conditional Formatting and Validation Options
                                                                                            </div>
                                                                                          </SectionHeading>
                                                                                        </div>
                                                                                      </Col>
                                                                                    </div>
                                                                                  </Row>
                                                                                  <Row
                                                                                    bsClass="row"
                                                                                    componentClass="div"
                                                                                  >
                                                                                    <div
                                                                                      className="row"
                                                                                    >
                                                                                      <Col
                                                                                        bsClass="col"
                                                                                        componentClass="div"
                                                                                        xs={12}
                                                                                      >
                                                                                        <div
                                                                                          className="col-xs-12"
                                                                                        >
                                                                                          <div
                                                                                            className="domain-validation-group"
                                                                                          >
                                                                                            <div
                                                                                              className="domain-field-label domain-no-wrap"
                                                                                            >
                                                                                              <DomainFieldLabel
                                                                                                helpTipBody={<ConditionalFormatHelpText />}
                                                                                                label="Create Conditional Format Criteria"
                                                                                              >
                                                                                                Create Conditional Format 
                                                                                                <span
                                                                                                  className="domain-no-wrap"
                                                                                                >
                                                                                                  Criteria
                                                                                                  <Component
                                                                                                    id="tooltip"
                                                                                                    title="Create Conditional Format Criteria"
                                                                                                  >
                                                                                                    <span
                                                                                                      className="label-help-target"
                                                                                                      onMouseOut={[Function]}
                                                                                                      onMouseOver={[Function]}
                                                                                                    >
                                                                                                      <span
                                                                                                        className="label-help-icon fa fa-question-circle"
                                                                                                      />
                                                                                                      <Overlay
                                                                                                        animation={[Function]}
                                                                                                        placement="right"
                                                                                                        rootClose={false}
                                                                                                        show={false}
                                                                                                      >
                                                                                                        <Overlay
                                                                                                          placement="right"
                                                                                                          rootClose={false}
                                                                                                          show={false}
                                                                                                          transition={[Function]}
                                                                                                        />
                                                                                                      </Overlay>
                                                                                                    </span>
                                                                                                  </Component>
                                                                                                </span>
                                                                                              </DomainFieldLabel>
                                                                                            </div>
                                                                                            <div>
                                                                                              <Button
                                                                                                active={false}
                                                                                                block={false}
                                                                                                bsClass="btn"
                                                                                                bsStyle="default"
                                                                                                className="domain-validation-button"
                                                                                                disabled={false}
                                                                                                id="domainpropertiesrow-conditionalFormat-1-1"
                                                                                                name="domainpropertiesrow-conditionalFormat"
                                                                                                onClick={[Function]}
                                                                                              >
                                                                                                <button
                                                                                                  className="domain-validation-button btn btn-default"
                                                                                                  disabled={false}
                                                                                                  id="domainpropertiesrow-conditionalFormat-1-1"
                                                                                                  name="domainpropertiesrow-conditionalFormat"
                                                                                                  onClick={[Function]}
                                                                                                  type="button"
                                                                                                >
                                                                                                  Add Format
                                                                                                </button>
                                                                                              </Button>
                                                                                              <span
                                                                                                className="domain-text-label"
                                                                                              >
                                                                                                None Set
                                                                                              </span>
                                                                                            </div>
                                                                                          </div>
                                                                                          <div
                                                                                            className=""
                                                                                          >
                                                                                            <div
                                                                                              className="domain-field-label domain-no-wrap"
                                                                                            >
                                                                                              <DomainFieldLabel
                                                                                                helpTipBody={<RangeValidatorHelpText />}
                                                                                                label="Create Range Validator"
                                                                                              >
                                                                                                Create Range 
                                                                                                <span
                                                                                                  className="domain-no-wrap"
                                                                                                >
                                                                                                  Validator
                                                                                                  <Component
                                                                                                    id="tooltip"
                                                                                                    title="Create Range Validator"
                                                                                                  >
                                                                                                    <span
                                                                                                      className="label-help-target"
                                                                                                      onMouseOut={[Function]}
                                                                                                      onMouseOver={[Function]}
                                                                                                    >
                                                                                                      <span
                                                                                                        className="label-help-icon fa fa-question-circle"
                                                                                                      />
                                                                                                      <Overlay
                                                                                                        animation={[Function]}
                                                                                                        placement="right"
                                                                                                        rootClose={false}
                                                                                                        show={false}
                                                                                                      >
                                                                                                        <Overlay
                                                                                                          placement="right"
                                                                                                          rootClose={false}
                                                                                                          show={false}
                                                                                                          transition={[Function]}
                                                                                                        />
                                                                                                      </Overlay>
                                                                                                    </span>
                                                                                                  </Component>
                                                                                                </span>
                                                                                              </DomainFieldLabel>
                                                                                            </div>
                                                                                            <div>
                                                                                              <Button
                                                                                                active={false}
                                                                                                block={false}
                                                                                                bsClass="btn"
                                                                                                bsStyle="default"
                                                                                                className="domain-validation-button"
                                                                                                disabled={false}
                                                                                                id="domainpropertiesrow-rangeValidator-1-1"
                                                                                                name="domainpropertiesrow-rangeValidator"
                                                                                                onClick={[Function]}
                                                                                              >
                                                                                                <button
                                                                                                  className="domain-validation-button btn btn-default"
                                                                                                  disabled={false}
                                                                                                  id="domainpropertiesrow-rangeValidator-1-1"
                                                                                                  name="domainpropertiesrow-rangeValidator"
                                                                                                  onClick={[Function]}
                                                                                                  type="button"
                                                                                                >
                                                                                                  Add Range
                                                                                                </button>
                                                                                              </Button>
                                                                                              <span
                                                                                                className="domain-text-label"
                                                                                              >
                                                                                                None Set
                                                                                              </span>
                                                                                            </div>
                                                                                          </div>
                                                                                        </div>
                                                                                      </Col>
                                                                                    </div>
                                                                                  </Row>
                                                                                </div>
                                                                              </ConditionalFormattingAndValidation>
                                                                            </div>
                                                                          </Col>
                                                                        </div>
                                                                      </div>
                                                                    </DomainRowExpandedOptions>
                                                                  </div>
                                                                </Transition>
                                                              </Collapse>
                                                            </div>
                                                          </Draggable>
                                                        </Connect(Draggable)>
                                                      </PrivateDraggable>
                                                    </PublicDraggable>
                                                  </DomainRow>
                                                  <DomainRow
                                                    appPropertiesOnly={false}
                                                    availableTypes={
                                                      Immutable.List [
                                                        Immutable.Record {
                                                          "conceptURI": undefined,
                                                          "display": "Text",
                                                          "name": "string",
                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                          "alternateRangeURI": "xsd:string",
                                                          "shortDisplay": "String",
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                        Immutable.Record {
                                                          "conceptURI": undefined,
                                                          "display": "Multi-Line Text",
                                                          "name": "multiLine",
                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#multiLine",
                                                          "alternateRangeURI": undefined,
                                                          "shortDisplay": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                        Immutable.Record {
                                                          "conceptURI": undefined,
                                                          "display": "Boolean",
                                                          "name": "boolean",
                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#boolean",
                                                          "alternateRangeURI": "xsd:boolean",
                                                          "shortDisplay": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                        Immutable.Record {
                                                          "conceptURI": undefined,
                                                          "display": "Integer",
                                                          "name": "int",
                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                                          "alternateRangeURI": "xsd:int",
                                                          "shortDisplay": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                        Immutable.Record {
                                                          "conceptURI": undefined,
                                                          "display": "Decimal (floating point)",
                                                          "name": "double",
                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#double",
                                                          "alternateRangeURI": "xsd:double",
                                                          "shortDisplay": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                        Immutable.Record {
                                                          "conceptURI": undefined,
                                                          "display": "Date Time",
                                                          "name": "dateTime",
                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                                                          "alternateRangeURI": "xsd:dateTime",
                                                          "shortDisplay": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                        Immutable.Record {
                                                          "conceptURI": "http://www.labkey.org/exp/xml#flag",
                                                          "display": "Flag",
                                                          "name": "flag",
                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                          "alternateRangeURI": undefined,
                                                          "shortDisplay": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                        Immutable.Record {
                                                          "conceptURI": undefined,
                                                          "display": "User",
                                                          "name": "users",
                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                                          "alternateRangeURI": undefined,
                                                          "shortDisplay": undefined,
                                                          "lookupSchema": "core",
                                                          "lookupQuery": "users",
                                                        },
                                                        Immutable.Record {
                                                          "conceptURI": "http://cpas.labkey.com/Study#ParticipantId",
                                                          "display": "Subject/Participant",
                                                          "name": "ParticipantId",
                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                          "alternateRangeURI": undefined,
                                                          "shortDisplay": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                        Immutable.Record {
                                                          "conceptURI": undefined,
                                                          "display": "Lookup",
                                                          "name": "lookup",
                                                          "rangeURI": undefined,
                                                          "alternateRangeURI": undefined,
                                                          "shortDisplay": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                        Immutable.Record {
                                                          "conceptURI": "http://www.labkey.org/exp/xml#sample",
                                                          "display": "Sample",
                                                          "name": "sample",
                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                                          "alternateRangeURI": undefined,
                                                          "shortDisplay": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                        Immutable.Record {
                                                          "conceptURI": "http://www.labkey.org/types#textChoice",
                                                          "display": "Text Choice",
                                                          "name": "textChoice",
                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                          "alternateRangeURI": undefined,
                                                          "shortDisplay": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                      ]
                                                    }
                                                    defaultValueOptions={Immutable.List []}
                                                    domainFormDisplayOptions={
                                                      {
                                                        "domainKindDisplayName": "assay design",
                                                        "hideFilePropertyType": undefined,
                                                        "hideInferFromFile": true,
                                                        "hideStudyPropertyTypes": true,
                                                        "textChoiceLockedForDomain": true,
                                                      }
                                                    }
                                                    domainId={null}
                                                    domainIndex={1}
                                                    dragging={false}
                                                    expandTransition={300}
                                                    expanded={false}
                                                    field={
                                                      Immutable.Record {
                                                        "conceptURI": undefined,
                                                        "conditionalFormats": Immutable.List [],
                                                        "defaultScale": undefined,
                                                        "defaultValueType": undefined,
                                                        "defaultValue": undefined,
                                                        "defaultDisplayValue": undefined,
                                                        "description": undefined,
                                                        "dimension": undefined,
                                                        "excludeFromShifting": false,
                                                        "format": undefined,
                                                        "hidden": false,
                                                        "importAliases": undefined,
                                                        "label": undefined,
                                                        "lookupContainer": undefined,
                                                        "lookupQuery": undefined,
                                                        "lookupSchema": undefined,
                                                        "lookupValidator": undefined,
                                                        "measure": undefined,
                                                        "mvEnabled": false,
                                                        "name": "field3",
                                                        "PHI": undefined,
                                                        "propertyId": undefined,
                                                        "propertyURI": undefined,
                                                        "propertyValidators": Immutable.List [],
                                                        "rangeValidators": Immutable.List [],
                                                        "rangeURI": "xsd:dateTime",
                                                        "regexValidators": Immutable.List [],
                                                        "textChoiceValidator": undefined,
                                                        "recommendedVariable": false,
                                                        "required": false,
                                                        "scale": 4000,
                                                        "URL": undefined,
                                                        "shownInDetailsView": true,
                                                        "shownInInsertView": true,
                                                        "shownInUpdateView": true,
                                                        "visible": true,
                                                        "dataType": Immutable.Record {
                                                          "conceptURI": undefined,
                                                          "display": "Date Time",
                                                          "name": "dateTime",
                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                                                          "alternateRangeURI": "xsd:dateTime",
                                                          "shortDisplay": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                        "lookupQueryValue": undefined,
                                                        "lookupType": Immutable.Record {
                                                          "conceptURI": undefined,
                                                          "display": "Lookup",
                                                          "name": "lookup",
                                                          "rangeURI": "xsd:dateTime",
                                                          "alternateRangeURI": undefined,
                                                          "shortDisplay": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                        "original": {
                                                          "conceptURI": undefined,
                                                          "dataType": Immutable.Record {
                                                            "conceptURI": undefined,
                                                            "display": "Date Time",
                                                            "name": "dateTime",
                                                            "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                                                            "alternateRangeURI": "xsd:dateTime",
                                                            "shortDisplay": undefined,
                                                            "lookupSchema": undefined,
                                                            "lookupQuery": undefined,
                                                          },
                                                          "name": "field3",
                                                          "rangeURI": undefined,
                                                        },
                                                        "updatedField": false,
                                                        "isPrimaryKey": false,
                                                        "lockType": "NotLocked",
                                                        "wrappedColumnName": undefined,
                                                        "disablePhiLevel": false,
                                                        "lockExistingField": false,
                                                        "sourceOntology": undefined,
                                                        "conceptSubtree": undefined,
                                                        "conceptLabelColumn": undefined,
                                                        "conceptImportColumn": undefined,
                                                        "principalConceptCode": undefined,
                                                        "derivationDataScope": undefined,
                                                        "selected": false,
                                                        "scannable": false,
                                                      }
                                                    }
                                                    fieldDetailsInfo={{}}
                                                    getDomainFields={[Function]}
                                                    helpNoun="field designer"
                                                    index={2}
                                                    key="domain-row-key-2"
                                                    maxPhiLevel="Restricted"
                                                    onChange={[Function]}
                                                    onDelete={[Function]}
                                                    onExpand={[Function]}
                                                    showDefaultValueSettings={false}
                                                    successBsStyle="success"
                                                  >
                                                    <PublicDraggable
                                                      draggableId="domainpropertiesrow-domaindrag-1-2"
                                                      index={2}
                                                    >
                                                      <PrivateDraggable
                                                        canDragInteractiveElements={false}
                                                        draggableId="domainpropertiesrow-domaindrag-1-2"
                                                        index={2}
                                                        isClone={false}
                                                        isEnabled={true}
                                                        shouldRespectForcePress={false}
                                                      >
                                                        <Connect(Draggable)
                                                          canDragInteractiveElements={false}
                                                          draggableId="domainpropertiesrow-domaindrag-1-2"
                                                          index={2}
                                                          isClone={false}
                                                          isEnabled={true}
                                                          shouldRespectForcePress={false}
                                                        >
                                                          <Draggable
                                                            canDragInteractiveElements={false}
                                                            draggableId="domainpropertiesrow-domaindrag-1-2"
                                                            dropAnimationFinished={[Function]}
                                                            index={2}
                                                            isClone={false}
                                                            isEnabled={true}
                                                            mapped={
                                                              {
                                                                "combineTargetFor": null,
                                                                "offset": {
                                                                  "x": 0,
                                                                  "y": 0,
                                                                },
                                                                "shouldAnimateDisplacement": true,
                                                                "snapshot": {
                                                                  "combineTargetFor": null,
                                                                  "combineWith": null,
                                                                  "draggingOver": null,
                                                                  "dropAnimation": null,
                                                                  "isClone": false,
                                                                  "isDragging": false,
                                                                  "isDropAnimating": false,
                                                                  "mode": null,
                                                                },
                                                                "type": "SECONDARY",
                                                              }
                                                            }
                                                            shouldRespectForcePress={false}
                                                          >
                                                            <div
                                                              className="domain-field-row domain-row-border-default"
                                                              data-rbd-draggable-context-id="0"
                                                              data-rbd-draggable-id="domainpropertiesrow-domaindrag-1-2"
                                                              onTransitionEnd={null}
                                                              style={
                                                                {
                                                                  "transform": null,
                                                                  "transition": null,
                                                                }
                                                              }
                                                              tabIndex={2}
                                                            >
                                                              <Row
                                                                bsClass="row"
                                                                className="domain-row-container"
                                                                componentClass="div"
                                                                key="domainpropertiesrow-domainrow-1-2"
                                                              >
                                                                <div
                                                                  className="domain-row-container row"
                                                                >
                                                                  <AdvancedSettings
                                                                    defaultValueOptions={Immutable.List []}
                                                                    domainFormDisplayOptions={
                                                                      {
                                                                        "domainKindDisplayName": "assay design",
                                                                        "hideFilePropertyType": undefined,
                                                                        "hideInferFromFile": true,
                                                                        "hideStudyPropertyTypes": true,
                                                                        "textChoiceLockedForDomain": true,
                                                                      }
                                                                    }
                                                                    domainId={null}
                                                                    domainIndex={1}
                                                                    field={
                                                                      Immutable.Record {
                                                                        "conceptURI": undefined,
                                                                        "conditionalFormats": Immutable.List [],
                                                                        "defaultScale": undefined,
                                                                        "defaultValueType": undefined,
                                                                        "defaultValue": undefined,
                                                                        "defaultDisplayValue": undefined,
                                                                        "description": undefined,
                                                                        "dimension": undefined,
                                                                        "excludeFromShifting": false,
                                                                        "format": undefined,
                                                                        "hidden": false,
                                                                        "importAliases": undefined,
                                                                        "label": undefined,
                                                                        "lookupContainer": undefined,
                                                                        "lookupQuery": undefined,
                                                                        "lookupSchema": undefined,
                                                                        "lookupValidator": undefined,
                                                                        "measure": undefined,
                                                                        "mvEnabled": false,
                                                                        "name": "field3",
                                                                        "PHI": undefined,
                                                                        "propertyId": undefined,
                                                                        "propertyURI": undefined,
                                                                        "propertyValidators": Immutable.List [],
                                                                        "rangeValidators": Immutable.List [],
                                                                        "rangeURI": "xsd:dateTime",
                                                                        "regexValidators": Immutable.List [],
                                                                        "textChoiceValidator": undefined,
                                                                        "recommendedVariable": false,
                                                                        "required": false,
                                                                        "scale": 4000,
                                                                        "URL": undefined,
                                                                        "shownInDetailsView": true,
                                                                        "shownInInsertView": true,
                                                                        "shownInUpdateView": true,
                                                                        "visible": true,
                                                                        "dataType": Immutable.Record {
                                                                          "conceptURI": undefined,
                                                                          "display": "Date Time",
                                                                          "name": "dateTime",
                                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                                                                          "alternateRangeURI": "xsd:dateTime",
                                                                          "shortDisplay": undefined,
                                                                          "lookupSchema": undefined,
                                                                          "lookupQuery": undefined,
                                                                        },
                                                                        "lookupQueryValue": undefined,
                                                                        "lookupType": Immutable.Record {
                                                                          "conceptURI": undefined,
                                                                          "display": "Lookup",
                                                                          "name": "lookup",
                                                                          "rangeURI": "xsd:dateTime",
                                                                          "alternateRangeURI": undefined,
                                                                          "shortDisplay": undefined,
                                                                          "lookupSchema": undefined,
                                                                          "lookupQuery": undefined,
                                                                        },
                                                                        "original": {
                                                                          "conceptURI": undefined,
                                                                          "dataType": Immutable.Record {
                                                                            "conceptURI": undefined,
                                                                            "display": "Date Time",
                                                                            "name": "dateTime",
                                                                            "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                                                                            "alternateRangeURI": "xsd:dateTime",
                                                                            "shortDisplay": undefined,
                                                                            "lookupSchema": undefined,
                                                                            "lookupQuery": undefined,
                                                                          },
                                                                          "name": "field3",
                                                                          "rangeURI": undefined,
                                                                        },
                                                                        "updatedField": false,
                                                                        "isPrimaryKey": false,
                                                                        "lockType": "NotLocked",
                                                                        "wrappedColumnName": undefined,
                                                                        "disablePhiLevel": false,
                                                                        "lockExistingField": false,
                                                                        "sourceOntology": undefined,
                                                                        "conceptSubtree": undefined,
                                                                        "conceptLabelColumn": undefined,
                                                                        "conceptImportColumn": undefined,
                                                                        "principalConceptCode": undefined,
                                                                        "derivationDataScope": undefined,
                                                                        "selected": false,
                                                                        "scannable": false,
                                                                      }
                                                                    }
                                                                    helpNoun="field designer"
                                                                    index={2}
                                                                    label="field3"
                                                                    maxPhiLevel="Restricted"
                                                                    onApply={[Function]}
                                                                    onHide={[Function]}
                                                                    show={false}
                                                                    showDefaultValueSettings={false}
                                                                    successBsStyle="success"
                                                                  >
                                                                    <Modal
                                                                      animation={true}
                                                                      autoFocus={true}
                                                                      backdrop={true}
                                                                      bsClass="modal"
                                                                      dialogComponentClass={[Function]}
                                                                      enforceFocus={true}
                                                                      keyboard={true}
                                                                      manager={
                                                                        ModalManager {
                                                                          "add": [Function],
                                                                          "containers": [],
                                                                          "data": [],
                                                                          "handleContainerOverflow": true,
                                                                          "hideSiblingNodes": true,
                                                                          "isTopModal": [Function],
                                                                          "modals": [],
                                                                          "remove": [Function],
                                                                        }
                                                                      }
                                                                      onEnter={[Function]}
                                                                      onHide={[Function]}
                                                                      renderBackdrop={[Function]}
                                                                      restoreFocus={true}
                                                                      show={false}
                                                                    >
                                                                      <Modal
                                                                        autoFocus={true}
                                                                        backdrop={true}
                                                                        backdropClassName="modal-backdrop"
                                                                        backdropTransition={[Function]}
                                                                        containerClassName="modal-open"
                                                                        enforceFocus={true}
                                                                        keyboard={true}
                                                                        manager={
                                                                          ModalManager {
                                                                            "add": [Function],
                                                                            "containers": [],
                                                                            "data": [],
                                                                            "handleContainerOverflow": true,
                                                                            "hideSiblingNodes": true,
                                                                            "isTopModal": [Function],
                                                                            "modals": [],
                                                                            "remove": [Function],
                                                                          }
                                                                        }
                                                                        onEnter={[Function]}
                                                                        onEntering={[Function]}
                                                                        onExited={[Function]}
                                                                        onHide={[Function]}
                                                                        onMouseUp={[Function]}
                                                                        renderBackdrop={[Function]}
                                                                        restoreFocus={true}
                                                                        show={false}
                                                                        transition={[Function]}
                                                                      />
                                                                    </Modal>
                                                                  </AdvancedSettings>
                                                                  <div
                                                                    aria-describedby="rbd-hidden-text-0-hidden-text-0"
                                                                    className="domain-row-handle"
                                                                    data-rbd-drag-handle-context-id="0"
                                                                    data-rbd-drag-handle-draggable-id="domainpropertiesrow-domaindrag-1-2"
                                                                    draggable={false}
                                                                    onDragStart={[Function]}
                                                                    role="button"
                                                                    tabIndex={0}
                                                                  >
                                                                    <DragDropHandle>
                                                                      <div
                                                                        className="drag-drop-handle"
                                                                      >
                                                                        <span
                                                                          className="fa fa-ellipsis-v"
                                                                        />
                                                                        <span
                                                                          className="fa fa-ellipsis-v"
                                                                        />
                                                                      </div>
                                                                    </DragDropHandle>
                                                                  </div>
                                                                  <div
                                                                    className="domain-row-action-section"
                                                                  >
                                                                    <Checkbox
                                                                      bsClass="checkbox"
                                                                      checked={false}
                                                                      className="domain-field-check-icon"
                                                                      disabled={false}
                                                                      id="domainpropertiesrow-selected-1-2"
                                                                      inline={false}
                                                                      name="domainpropertiesrow-selected"
                                                                      onChange={[Function]}
                                                                      title=""
                                                                    >
                                                                      <div
                                                                        className="domain-field-check-icon checkbox"
                                                                      >
                                                                        <label
                                                                          title=""
                                                                        >
                                                                          <input
                                                                            checked={false}
                                                                            disabled={false}
                                                                            id="domainpropertiesrow-selected-1-2"
                                                                            name="domainpropertiesrow-selected"
                                                                            onChange={[Function]}
                                                                            type="checkbox"
                                                                          />
                                                                        </label>
                                                                      </div>
                                                                    </Checkbox>
                                                                    <FieldExpansionToggle
                                                                      cls="domain-field-expand-icon"
                                                                      collapsedTitle="Show additional field properties"
                                                                      expanded={false}
                                                                      expandedTitle="Hide additional field properties"
                                                                      id="domainpropertiesrow-expand-1-2"
                                                                      onClick={[Function]}
                                                                    >
                                                                      <div
                                                                        className="field-icon domain-field-expand-icon"
                                                                        id="domainpropertiesrow-expand-1-2"
                                                                        onClick={[Function]}
                                                                        title="Show additional field properties"
                                                                      >
                                                                        <span
                                                                          className="fa fa-lg fa-plus-square"
                                                                        />
                                                                      </div>
                                                                    </FieldExpansionToggle>
                                                                  </div>
                                                                  <div
                                                                    className="domain-row-main"
                                                                  >
                                                                    <Col
                                                                      bsClass="col"
                                                                      className="domain-row-base-fields domain-row-base-fields-position"
                                                                      componentClass="div"
                                                                      xs={6}
                                                                    >
                                                                      <div
                                                                        className="domain-row-base-fields domain-row-base-fields-position col-xs-6"
                                                                      >
                                                                        <div
                                                                          id="domainpropertiesrow-row-1-2"
                                                                        >
                                                                          <Col
                                                                            bsClass="col"
                                                                            componentClass="div"
                                                                            xs={6}
                                                                          >
                                                                            <div
                                                                              className="col-xs-6"
                                                                            >
                                                                              <FormControl
                                                                                bsClass="form-control"
                                                                                componentClass="input"
                                                                                disabled={false}
                                                                                id="domainpropertiesrow-name-1-2"
                                                                                name="domainpropertiesrow-name"
                                                                                onChange={[Function]}
                                                                                type="text"
                                                                                value="field3"
                                                                              >
                                                                                <input
                                                                                  className="form-control"
                                                                                  disabled={false}
                                                                                  id="domainpropertiesrow-name-1-2"
                                                                                  name="domainpropertiesrow-name"
                                                                                  onChange={[Function]}
                                                                                  type="text"
                                                                                  value="field3"
                                                                                />
                                                                              </FormControl>
                                                                            </div>
                                                                          </Col>
                                                                          <Col
                                                                            bsClass="col"
                                                                            componentClass="div"
                                                                            xs={4}
                                                                          >
                                                                            <div
                                                                              className="col-xs-4"
                                                                            >
                                                                              <FormControl
                                                                                bsClass="form-control"
                                                                                componentClass="select"
                                                                                disabled={false}
                                                                                id="domainpropertiesrow-type-1-2"
                                                                                name="domainpropertiesrow-type"
                                                                                onChange={[Function]}
                                                                                value="dateTime"
                                                                              >
                                                                                <select
                                                                                  className="form-control"
                                                                                  disabled={false}
                                                                                  id="domainpropertiesrow-type-1-2"
                                                                                  name="domainpropertiesrow-type"
                                                                                  onChange={[Function]}
                                                                                  value="dateTime"
                                                                                >
                                                                                  <option
                                                                                    key="boolean"
                                                                                    value="boolean"
                                                                                  >
                                                                                    Boolean
                                                                                  </option>
                                                                                  <option
                                                                                    key="dateTime"
                                                                                    value="dateTime"
                                                                                  >
                                                                                    Date Time
                                                                                  </option>
                                                                                  <option
                                                                                    key="double"
                                                                                    value="double"
                                                                                  >
                                                                                    Decimal (floating point)
                                                                                  </option>
                                                                                  <option
                                                                                    key="flag"
                                                                                    value="flag"
                                                                                  >
                                                                                    Flag
                                                                                  </option>
                                                                                  <option
                                                                                    key="int"
                                                                                    value="int"
                                                                                  >
                                                                                    Integer
                                                                                  </option>
                                                                                  <option
                                                                                    key="lookup"
                                                                                    value="lookup"
                                                                                  >
                                                                                    Lookup
                                                                                  </option>
                                                                                  <option
                                                                                    key="multiLine"
                                                                                    value="multiLine"
                                                                                  >
                                                                                    Multi-Line Text
                                                                                  </option>
                                                                                  <option
                                                                                    key="sample"
                                                                                    value="sample"
                                                                                  >
                                                                                    Sample
                                                                                  </option>
                                                                                  <option
                                                                                    key="string"
                                                                                    value="string"
                                                                                  >
                                                                                    Text
                                                                                  </option>
                                                                                  <option
                                                                                    key="textChoice"
                                                                                    value="textChoice"
                                                                                  >
                                                                                    Text Choice
                                                                                  </option>
                                                                                  <option
                                                                                    key="users"
                                                                                    value="users"
                                                                                  >
                                                                                    User
                                                                                  </option>
                                                                                </select>
                                                                              </FormControl>
                                                                            </div>
                                                                          </Col>
                                                                          <Col
                                                                            bsClass="col"
                                                                            componentClass="div"
                                                                            xs={2}
                                                                          >
                                                                            <div
                                                                              className="col-xs-2"
                                                                            >
                                                                              <div
                                                                                className="domain-field-checkbox-container"
                                                                              >
                                                                                <Checkbox
                                                                                  bsClass="checkbox"
                                                                                  checked={false}
                                                                                  className="domain-field-checkbox"
                                                                                  disabled={false}
                                                                                  id="domainpropertiesrow-required-1-2"
                                                                                  inline={false}
                                                                                  name="domainpropertiesrow-required"
                                                                                  onChange={[Function]}
                                                                                  title=""
                                                                                >
                                                                                  <div
                                                                                    className="domain-field-checkbox checkbox"
                                                                                  >
                                                                                    <label
                                                                                      title=""
                                                                                    >
                                                                                      <input
                                                                                        checked={false}
                                                                                        disabled={false}
                                                                                        id="domainpropertiesrow-required-1-2"
                                                                                        name="domainpropertiesrow-required"
                                                                                        onChange={[Function]}
                                                                                        type="checkbox"
                                                                                      />
                                                                                    </label>
                                                                                  </div>
                                                                                </Checkbox>
                                                                              </div>
                                                                            </div>
                                                                          </Col>
                                                                        </div>
                                                                      </div>
                                                                    </Col>
                                                                    <Col
                                                                      bsClass="col"
                                                                      className="domain-row-details-container"
                                                                      componentClass="div"
                                                                      xs={6}
                                                                    >
                                                                      <div
                                                                        className="domain-row-details-container col-xs-6"
                                                                      >
                                                                        <div
                                                                          className="domain-field-details"
                                                                          id="domainpropertiesrow-details-1-2"
                                                                        >
                                                                          New Field
                                                                        </div>
                                                                        <div
                                                                          className="domain-field-buttons"
                                                                        >
                                                                          <Memo()
                                                                            iconCls="domain-field-delete-icon"
                                                                            id="domainpropertiesrow-delete-1-2"
                                                                            onDelete={[Function]}
                                                                            title="Remove field"
                                                                          >
                                                                            <span
                                                                              className="field-icon"
                                                                              id="domainpropertiesrow-delete-1-2"
                                                                              onClick={[Function]}
                                                                              title="Remove field"
                                                                            >
                                                                              <span
                                                                                className="fa fa-times-circle domain-field-delete-icon"
                                                                              />
                                                                            </span>
                                                                          </Memo()>
                                                                        </div>
                                                                      </div>
                                                                    </Col>
                                                                  </div>
                                                                </div>
                                                              </Row>
                                                              <Collapse
                                                                appear={false}
                                                                dimension="height"
                                                                getDimensionValue={[Function]}
                                                                in={false}
                                                                mountOnEnter={false}
                                                                onExited={[Function]}
                                                                onExiting={[Function]}
                                                                timeout={300}
                                                                unmountOnExit={false}
                                                              >
                                                                <Transition
                                                                  appear={false}
                                                                  aria-expanded={null}
                                                                  enter={true}
                                                                  exit={true}
                                                                  in={false}
                                                                  mountOnEnter={false}
                                                                  onEnter={[Function]}
                                                                  onEntered={[Function]}
                                                                  onEntering={[Function]}
                                                                  onExit={[Function]}
                                                                  onExited={[Function]}
                                                                  onExiting={[Function]}
                                                                  timeout={300}
                                                                  unmountOnExit={false}
                                                                >
                                                                  <div
                                                                    aria-expanded={null}
                                                                    className="collapse"
                                                                  >
                                                                    <DomainRowExpandedOptions
                                                                      appPropertiesOnly={false}
                                                                      domainFormDisplayOptions={
                                                                        {
                                                                          "domainKindDisplayName": "assay design",
                                                                          "hideFilePropertyType": undefined,
                                                                          "hideInferFromFile": true,
                                                                          "hideStudyPropertyTypes": true,
                                                                          "textChoiceLockedForDomain": true,
                                                                        }
                                                                      }
                                                                      domainIndex={1}
                                                                      field={
                                                                        Immutable.Record {
                                                                          "conceptURI": undefined,
                                                                          "conditionalFormats": Immutable.List [],
                                                                          "defaultScale": undefined,
                                                                          "defaultValueType": undefined,
                                                                          "defaultValue": undefined,
                                                                          "defaultDisplayValue": undefined,
                                                                          "description": undefined,
                                                                          "dimension": undefined,
                                                                          "excludeFromShifting": false,
                                                                          "format": undefined,
                                                                          "hidden": false,
                                                                          "importAliases": undefined,
                                                                          "label": undefined,
                                                                          "lookupContainer": undefined,
                                                                          "lookupQuery": undefined,
                                                                          "lookupSchema": undefined,
                                                                          "lookupValidator": undefined,
                                                                          "measure": undefined,
                                                                          "mvEnabled": false,
                                                                          "name": "field3",
                                                                          "PHI": undefined,
                                                                          "propertyId": undefined,
                                                                          "propertyURI": undefined,
                                                                          "propertyValidators": Immutable.List [],
                                                                          "rangeValidators": Immutable.List [],
                                                                          "rangeURI": "xsd:dateTime",
                                                                          "regexValidators": Immutable.List [],
                                                                          "textChoiceValidator": undefined,
                                                                          "recommendedVariable": false,
                                                                          "required": false,
                                                                          "scale": 4000,
                                                                          "URL": undefined,
                                                                          "shownInDetailsView": true,
                                                                          "shownInInsertView": true,
                                                                          "shownInUpdateView": true,
                                                                          "visible": true,
                                                                          "dataType": Immutable.Record {
                                                                            "conceptURI": undefined,
                                                                            "display": "Date Time",
                                                                            "name": "dateTime",
                                                                            "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                                                                            "alternateRangeURI": "xsd:dateTime",
                                                                            "shortDisplay": undefined,
                                                                            "lookupSchema": undefined,
                                                                            "lookupQuery": undefined,
                                                                          },
                                                                          "lookupQueryValue": undefined,
                                                                          "lookupType": Immutable.Record {
                                                                            "conceptURI": undefined,
                                                                            "display": "Lookup",
                                                                            "name": "lookup",
                                                                            "rangeURI": "xsd:dateTime",
                                                                            "alternateRangeURI": undefined,
                                                                            "shortDisplay": undefined,
                                                                            "lookupSchema": undefined,
                                                                            "lookupQuery": undefined,
                                                                          },
                                                                          "original": {
                                                                            "conceptURI": undefined,
                                                                            "dataType": Immutable.Record {
                                                                              "conceptURI": undefined,
                                                                              "display": "Date Time",
                                                                              "name": "dateTime",
                                                                              "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                                                                              "alternateRangeURI": "xsd:dateTime",
                                                                              "shortDisplay": undefined,
                                                                              "lookupSchema": undefined,
                                                                              "lookupQuery": undefined,
                                                                            },
                                                                            "name": "field3",
                                                                            "rangeURI": undefined,
                                                                          },
                                                                          "updatedField": false,
                                                                          "isPrimaryKey": false,
                                                                          "lockType": "NotLocked",
                                                                          "wrappedColumnName": undefined,
                                                                          "disablePhiLevel": false,
                                                                          "lockExistingField": false,
                                                                          "sourceOntology": undefined,
                                                                          "conceptSubtree": undefined,
                                                                          "conceptLabelColumn": undefined,
                                                                          "conceptImportColumn": undefined,
                                                                          "principalConceptCode": undefined,
                                                                          "derivationDataScope": undefined,
                                                                          "selected": false,
                                                                          "scannable": false,
                                                                        }
                                                                      }
                                                                      getDomainFields={[Function]}
                                                                      index={2}
                                                                      onChange={[Function]}
                                                                      onMultiChange={[Function]}
                                                                      showingModal={[Function]}
                                                                      successBsStyle="success"
                                                                    >
                                                                      <div
                                                                        className="domain-row-container"
                                                                      >
                                                                        <div
                                                                          className="domain-row-container-expand-spacer"
                                                                        />
                                                                        <div
                                                                          className="domain-row-container-expanded"
                                                                        >
                                                                          <Col
                                                                            bsClass="col"
                                                                            componentClass="div"
                                                                            xs={12}
                                                                          >
                                                                            <div
                                                                              className="col-xs-12"
                                                                            >
                                                                              <DateTimeFieldOptions
                                                                                domainIndex={1}
                                                                                excludeFromShifting={false}
                                                                                index={2}
                                                                                label="Date and Time Options"
                                                                                lockType="NotLocked"
                                                                                onChange={[Function]}
                                                                              >
                                                                                <div>
                                                                                  <Row
                                                                                    bsClass="row"
                                                                                    componentClass="div"
                                                                                  >
                                                                                    <div
                                                                                      className="row"
                                                                                    >
                                                                                      <Col
                                                                                        bsClass="col"
                                                                                        componentClass="div"
                                                                                        xs={12}
                                                                                      >
                                                                                        <div
                                                                                          className="col-xs-12"
                                                                                        >
                                                                                          <SectionHeading
                                                                                            title="Date and Time Options"
                                                                                          >
                                                                                            <div
                                                                                              className="domain-field-section-heading"
                                                                                            >
                                                                                              Date and Time Options
                                                                                            </div>
                                                                                          </SectionHeading>
                                                                                        </div>
                                                                                      </Col>
                                                                                    </div>
                                                                                  </Row>
                                                                                  <Row
                                                                                    bsClass="row"
                                                                                    componentClass="div"
                                                                                  >
                                                                                    <div
                                                                                      className="row"
                                                                                    >
                                                                                      <Col
                                                                                        bsClass="col"
                                                                                        componentClass="div"
                                                                                        xs={3}
                                                                                      >
                                                                                        <div
                                                                                          className="col-xs-3"
                                                                                        >
                                                                                          <div
                                                                                            className="domain-field-label"
                                                                                          >
                                                                                            <DomainFieldLabel
                                                                                              helpTipBody={
                                                                                                <React.Fragment>
                                                                                                  <p>
                                                                                                    To control how a date or time value is displayed, provide a string format compatible with the Java
                                                                                                     
                                                                                                    <Memo
                                                                                                      urlSuffix="java/text/SimpleDateFormat.html"
                                                                                                    >
                                                                                                      SimpleDateFormat
                                                                                                    </Memo>
                                                                                                     class.
                                                                                                  </p>
                                                                                                  <p>
                                                                                                    Learn more about using 
                                                                                                    <HelpLink
                                                                                                      topic="dateFormats#date"
                                                                                                    >
                                                                                                      Date and Time formats
                                                                                                    </HelpLink>
                                                                                                     in LabKey.
                                                                                                  </p>
                                                                                                </React.Fragment>
                                                                                              }
                                                                                              label="Format for Dates"
                                                                                            >
                                                                                              Format for 
                                                                                              <span
                                                                                                className="domain-no-wrap"
                                                                                              >
                                                                                                Dates
                                                                                                <Component
                                                                                                  id="tooltip"
                                                                                                  title="Format for Dates"
                                                                                                >
                                                                                                  <span
                                                                                                    className="label-help-target"
                                                                                                    onMouseOut={[Function]}
                                                                                                    onMouseOver={[Function]}
                                                                                                  >
                                                                                                    <span
                                                                                                      className="label-help-icon fa fa-question-circle"
                                                                                                    />
                                                                                                    <Overlay
                                                                                                      animation={[Function]}
                                                                                                      placement="right"
                                                                                                      rootClose={false}
                                                                                                      show={false}
                                                                                                    >
                                                                                                      <Overlay
                                                                                                        placement="right"
                                                                                                        rootClose={false}
                                                                                                        show={false}
                                                                                                        transition={[Function]}
                                                                                                      />
                                                                                                    </Overlay>
                                                                                                  </span>
                                                                                                </Component>
                                                                                              </span>
                                                                                            </DomainFieldLabel>
                                                                                          </div>
                                                                                        </div>
                                                                                      </Col>
                                                                                      <Col
                                                                                        bsClass="col"
                                                                                        componentClass="div"
                                                                                        xs={9}
                                                                                      >
                                                                                        <div
                                                                                          className="col-xs-9"
                                                                                        />
                                                                                      </Col>
                                                                                    </div>
                                                                                  </Row>
                                                                                  <Row
                                                                                    bsClass="row"
                                                                                    componentClass="div"
                                                                                  >
                                                                                    <div
                                                                                      className="row"
                                                                                    >
                                                                                      <Col
                                                                                        bsClass="col"
                                                                                        componentClass="div"
                                                                                        xs={3}
                                                                                      >
                                                                                        <div
                                                                                          className="col-xs-3"
                                                                                        >
                                                                                          <FormControl
                                                                                            bsClass="form-control"
                                                                                            componentClass="input"
                                                                                            disabled={false}
                                                                                            id="domainpropertiesrow-format-1-2"
                                                                                            name="domainpropertiesrow-format"
                                                                                            onChange={[Function]}
                                                                                            type="text"
                                                                                            value=""
                                                                                          >
                                                                                            <input
                                                                                              className="form-control"
                                                                                              disabled={false}
                                                                                              id="domainpropertiesrow-format-1-2"
                                                                                              name="domainpropertiesrow-format"
                                                                                              onChange={[Function]}
                                                                                              type="text"
                                                                                              value=""
                                                                                            />
                                                                                          </FormControl>
                                                                                        </div>
                                                                                      </Col>
                                                                                      <Col
                                                                                        bsClass="col"
                                                                                        componentClass="div"
                                                                                        xs={9}
                                                                                      >
                                                                                        <div
                                                                                          className="col-xs-9"
                                                                                        />
                                                                                      </Col>
                                                                                    </div>
                                                                                  </Row>
                                                                                </div>
                                                                              </DateTimeFieldOptions>
                                                                            </div>
                                                                          </Col>
                                                                          <Col
                                                                            bsClass="col"
                                                                            componentClass="div"
                                                                            xs={12}
                                                                          >
                                                                            <div
                                                                              className="col-xs-12"
                                                                            >
                                                                              <NameAndLinkingOptions
                                                                                appPropertiesOnly={false}
                                                                                domainFormDisplayOptions={
                                                                                  {
                                                                                    "domainKindDisplayName": "assay design",
                                                                                    "hideFilePropertyType": undefined,
                                                                                    "hideInferFromFile": true,
                                                                                    "hideStudyPropertyTypes": true,
                                                                                    "textChoiceLockedForDomain": true,
                                                                                  }
                                                                                }
                                                                                domainIndex={1}
                                                                                field={
                                                                                  Immutable.Record {
                                                                                    "conceptURI": undefined,
                                                                                    "conditionalFormats": Immutable.List [],
                                                                                    "defaultScale": undefined,
                                                                                    "defaultValueType": undefined,
                                                                                    "defaultValue": undefined,
                                                                                    "defaultDisplayValue": undefined,
                                                                                    "description": undefined,
                                                                                    "dimension": undefined,
                                                                                    "excludeFromShifting": false,
                                                                                    "format": undefined,
                                                                                    "hidden": false,
                                                                                    "importAliases": undefined,
                                                                                    "label": undefined,
                                                                                    "lookupContainer": undefined,
                                                                                    "lookupQuery": undefined,
                                                                                    "lookupSchema": undefined,
                                                                                    "lookupValidator": undefined,
                                                                                    "measure": undefined,
                                                                                    "mvEnabled": false,
                                                                                    "name": "field3",
                                                                                    "PHI": undefined,
                                                                                    "propertyId": undefined,
                                                                                    "propertyURI": undefined,
                                                                                    "propertyValidators": Immutable.List [],
                                                                                    "rangeValidators": Immutable.List [],
                                                                                    "rangeURI": "xsd:dateTime",
                                                                                    "regexValidators": Immutable.List [],
                                                                                    "textChoiceValidator": undefined,
                                                                                    "recommendedVariable": false,
                                                                                    "required": false,
                                                                                    "scale": 4000,
                                                                                    "URL": undefined,
                                                                                    "shownInDetailsView": true,
                                                                                    "shownInInsertView": true,
                                                                                    "shownInUpdateView": true,
                                                                                    "visible": true,
                                                                                    "dataType": Immutable.Record {
                                                                                      "conceptURI": undefined,
                                                                                      "display": "Date Time",
                                                                                      "name": "dateTime",
                                                                                      "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                                                                                      "alternateRangeURI": "xsd:dateTime",
                                                                                      "shortDisplay": undefined,
                                                                                      "lookupSchema": undefined,
                                                                                      "lookupQuery": undefined,
                                                                                    },
                                                                                    "lookupQueryValue": undefined,
                                                                                    "lookupType": Immutable.Record {
                                                                                      "conceptURI": undefined,
                                                                                      "display": "Lookup",
                                                                                      "name": "lookup",
                                                                                      "rangeURI": "xsd:dateTime",
                                                                                      "alternateRangeURI": undefined,
                                                                                      "shortDisplay": undefined,
                                                                                      "lookupSchema": undefined,
                                                                                      "lookupQuery": undefined,
                                                                                    },
                                                                                    "original": {
                                                                                      "conceptURI": undefined,
                                                                                      "dataType": Immutable.Record {
                                                                                        "conceptURI": undefined,
                                                                                        "display": "Date Time",
                                                                                        "name": "dateTime",
                                                                                        "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                                                                                        "alternateRangeURI": "xsd:dateTime",
                                                                                        "shortDisplay": undefined,
                                                                                        "lookupSchema": undefined,
                                                                                        "lookupQuery": undefined,
                                                                                      },
                                                                                      "name": "field3",
                                                                                      "rangeURI": undefined,
                                                                                    },
                                                                                    "updatedField": false,
                                                                                    "isPrimaryKey": false,
                                                                                    "lockType": "NotLocked",
                                                                                    "wrappedColumnName": undefined,
                                                                                    "disablePhiLevel": false,
                                                                                    "lockExistingField": false,
                                                                                    "sourceOntology": undefined,
                                                                                    "conceptSubtree": undefined,
                                                                                    "conceptLabelColumn": undefined,
                                                                                    "conceptImportColumn": undefined,
                                                                                    "principalConceptCode": undefined,
                                                                                    "derivationDataScope": undefined,
                                                                                    "selected": false,
                                                                                    "scannable": false,
                                                                                  }
                                                                                }
                                                                                index={2}
                                                                                onChange={[Function]}
                                                                              >
                                                                                <div>
                                                                                  <Row
                                                                                    bsClass="row"
                                                                                    componentClass="div"
                                                                                  >
                                                                                    <div
                                                                                      className="row"
                                                                                    >
                                                                                      <Col
                                                                                        bsClass="col"
                                                                                        componentClass="div"
                                                                                        xs={12}
                                                                                      >
                                                                                        <div
                                                                                          className="col-xs-12"
                                                                                        >
                                                                                          <SectionHeading
                                                                                            cls="domain-field-section-hdr"
                                                                                            title="Name and Linking Options"
                                                                                          >
                                                                                            <div
                                                                                              className="domain-field-section-heading domain-field-section-hdr"
                                                                                            >
                                                                                              Name and Linking Options
                                                                                            </div>
                                                                                          </SectionHeading>
                                                                                        </div>
                                                                                      </Col>
                                                                                    </div>
                                                                                  </Row>
                                                                                  <Row
                                                                                    bsClass="row"
                                                                                    componentClass="div"
                                                                                  >
                                                                                    <div
                                                                                      className="row"
                                                                                    >
                                                                                      <Col
                                                                                        bsClass="col"
                                                                                        componentClass="div"
                                                                                        xs={5}
                                                                                      >
                                                                                        <div
                                                                                          className="col-xs-5"
                                                                                        >
                                                                                          <div
                                                                                            className="domain-field-label"
                                                                                          >
                                                                                            Description
                                                                                          </div>
                                                                                          <FormControl
                                                                                            bsClass="form-control"
                                                                                            className="form-control textarea-noresize"
                                                                                            componentClass="textarea"
                                                                                            disabled={false}
                                                                                            id="domainpropertiesrow-description-1-2"
                                                                                            name="domainpropertiesrow-description"
                                                                                            onChange={[Function]}
                                                                                            rows={4}
                                                                                            value=""
                                                                                          >
                                                                                            <textarea
                                                                                              className="form-control textarea-noresize form-control"
                                                                                              disabled={false}
                                                                                              id="domainpropertiesrow-description-1-2"
                                                                                              name="domainpropertiesrow-description"
                                                                                              onChange={[Function]}
                                                                                              rows={4}
                                                                                              value=""
                                                                                            />
                                                                                          </FormControl>
                                                                                        </div>
                                                                                      </Col>
                                                                                      <Col
                                                                                        bsClass="col"
                                                                                        componentClass="div"
                                                                                        xs={3}
                                                                                      >
                                                                                        <div
                                                                                          className="col-xs-3"
                                                                                        >
                                                                                          <div
                                                                                            className="domain-field-label"
                                                                                          >
                                                                                            Label
                                                                                          </div>
                                                                                          <FormControl
                                                                                            bsClass="form-control"
                                                                                            componentClass="input"
                                                                                            disabled={false}
                                                                                            id="domainpropertiesrow-label-1-2"
                                                                                            name="domainpropertiesrow-label"
                                                                                            onChange={[Function]}
                                                                                            type="text"
                                                                                            value=""
                                                                                          >
                                                                                            <input
                                                                                              className="form-control"
                                                                                              disabled={false}
                                                                                              id="domainpropertiesrow-label-1-2"
                                                                                              name="domainpropertiesrow-label"
                                                                                              onChange={[Function]}
                                                                                              type="text"
                                                                                              value=""
                                                                                            />
                                                                                          </FormControl>
                                                                                          <div
                                                                                            className="domain-field-label"
                                                                                          >
                                                                                            <DomainFieldLabel
                                                                                              helpTipBody={
                                                                                                <React.Fragment>
                                                                                                  Define alternate field names to be used when importing from a file.
                                                                                                  <br />
                                                                                                  <br />
                                                                                                  Multiple aliases may be separated by spaces or commas. To define an alias that contains spaces, use double-quotes (") around it.
                                                                                                </React.Fragment>
                                                                                              }
                                                                                              label="Import Aliases"
                                                                                            >
                                                                                              Import 
                                                                                              <span
                                                                                                className="domain-no-wrap"
                                                                                              >
                                                                                                Aliases
                                                                                                <Component
                                                                                                  id="tooltip"
                                                                                                  title="Import Aliases"
                                                                                                >
                                                                                                  <span
                                                                                                    className="label-help-target"
                                                                                                    onMouseOut={[Function]}
                                                                                                    onMouseOver={[Function]}
                                                                                                  >
                                                                                                    <span
                                                                                                      className="label-help-icon fa fa-question-circle"
                                                                                                    />
                                                                                                    <Overlay
                                                                                                      animation={[Function]}
                                                                                                      placement="right"
                                                                                                      rootClose={false}
                                                                                                      show={false}
                                                                                                    >
                                                                                                      <Overlay
                                                                                                        placement="right"
                                                                                                        rootClose={false}
                                                                                                        show={false}
                                                                                                        transition={[Function]}
                                                                                                      />
                                                                                                    </Overlay>
                                                                                                  </span>
                                                                                                </Component>
                                                                                              </span>
                                                                                            </DomainFieldLabel>
                                                                                          </div>
                                                                                          <FormControl
                                                                                            bsClass="form-control"
                                                                                            componentClass="input"
                                                                                            disabled={false}
                                                                                            id="domainpropertiesrow-importAliases-1-2"
                                                                                            name="domainpropertiesrow-importAliases"
                                                                                            onChange={[Function]}
                                                                                            type="text"
                                                                                            value=""
                                                                                          >
                                                                                            <input
                                                                                              className="form-control"
                                                                                              disabled={false}
                                                                                              id="domainpropertiesrow-importAliases-1-2"
                                                                                              name="domainpropertiesrow-importAliases"
                                                                                              onChange={[Function]}
                                                                                              type="text"
                                                                                              value=""
                                                                                            />
                                                                                          </FormControl>
                                                                                        </div>
                                                                                      </Col>
                                                                                      <Col
                                                                                        bsClass="col"
                                                                                        componentClass="div"
                                                                                        xs={4}
                                                                                      >
                                                                                        <div
                                                                                          className="col-xs-4"
                                                                                        >
                                                                                          <div
                                                                                            className="domain-field-label"
                                                                                          >
                                                                                            <DomainFieldLabel
                                                                                              helpTipBody={
                                                                                                <React.Fragment>
                                                                                                  Use this to change the display of the field value within a data grid into a link. Multiple formats are supported, which allows ways to easily substitute and link to other locations in LabKey.
                                                                                                  <br />
                                                                                                  <br />
                                                                                                  Learn more about using 
                                                                                                  <HelpLink
                                                                                                    topic="urlEncoding"
                                                                                                  >
                                                                                                    URL Formatting Options
                                                                                                  </HelpLink>
                                                                                                  .
                                                                                                </React.Fragment>
                                                                                              }
                                                                                              label="URL"
                                                                                            >
                                                                                              <span
                                                                                                className="domain-no-wrap"
                                                                                              >
                                                                                                URL
                                                                                                <Component
                                                                                                  id="tooltip"
                                                                                                  title="URL"
                                                                                                >
                                                                                                  <span
                                                                                                    className="label-help-target"
                                                                                                    onMouseOut={[Function]}
                                                                                                    onMouseOver={[Function]}
                                                                                                  >
                                                                                                    <span
                                                                                                      className="label-help-icon fa fa-question-circle"
                                                                                                    />
                                                                                                    <Overlay
                                                                                                      animation={[Function]}
                                                                                                      placement="right"
                                                                                                      rootClose={false}
                                                                                                      show={false}
                                                                                                    >
                                                                                                      <Overlay
                                                                                                        placement="right"
                                                                                                        rootClose={false}
                                                                                                        show={false}
                                                                                                        transition={[Function]}
                                                                                                      />
                                                                                                    </Overlay>
                                                                                                  </span>
                                                                                                </Component>
                                                                                              </span>
                                                                                            </DomainFieldLabel>
                                                                                          </div>
                                                                                          <FormControl
                                                                                            bsClass="form-control"
                                                                                            componentClass="input"
                                                                                            disabled={false}
                                                                                            id="domainpropertiesrow-URL-1-2"
                                                                                            name="domainpropertiesrow-URL"
                                                                                            onChange={[Function]}
                                                                                            type="text"
                                                                                            value=""
                                                                                          >
                                                                                            <input
                                                                                              className="form-control"
                                                                                              disabled={false}
                                                                                              id="domainpropertiesrow-URL-1-2"
                                                                                              name="domainpropertiesrow-URL"
                                                                                              onChange={[Function]}
                                                                                              type="text"
                                                                                              value=""
                                                                                            />
                                                                                          </FormControl>
                                                                                        </div>
                                                                                      </Col>
                                                                                    </div>
                                                                                  </Row>
                                                                                </div>
                                                                              </NameAndLinkingOptions>
                                                                            </div>
                                                                          </Col>
                                                                          <Col
                                                                            bsClass="col"
                                                                            componentClass="div"
                                                                            xs={12}
                                                                          >
                                                                            <div
                                                                              className="col-xs-12"
                                                                            >
                                                                              <ConditionalFormattingAndValidation
                                                                                domainFormDisplayOptions={
                                                                                  {
                                                                                    "domainKindDisplayName": "assay design",
                                                                                    "hideFilePropertyType": undefined,
                                                                                    "hideInferFromFile": true,
                                                                                    "hideStudyPropertyTypes": true,
                                                                                    "textChoiceLockedForDomain": true,
                                                                                  }
                                                                                }
                                                                                domainIndex={1}
                                                                                field={
                                                                                  Immutable.Record {
                                                                                    "conceptURI": undefined,
                                                                                    "conditionalFormats": Immutable.List [],
                                                                                    "defaultScale": undefined,
                                                                                    "defaultValueType": undefined,
                                                                                    "defaultValue": undefined,
                                                                                    "defaultDisplayValue": undefined,
                                                                                    "description": undefined,
                                                                                    "dimension": undefined,
                                                                                    "excludeFromShifting": false,
                                                                                    "format": undefined,
                                                                                    "hidden": false,
                                                                                    "importAliases": undefined,
                                                                                    "label": undefined,
                                                                                    "lookupContainer": undefined,
                                                                                    "lookupQuery": undefined,
                                                                                    "lookupSchema": undefined,
                                                                                    "lookupValidator": undefined,
                                                                                    "measure": undefined,
                                                                                    "mvEnabled": false,
                                                                                    "name": "field3",
                                                                                    "PHI": undefined,
                                                                                    "propertyId": undefined,
                                                                                    "propertyURI": undefined,
                                                                                    "propertyValidators": Immutable.List [],
                                                                                    "rangeValidators": Immutable.List [],
                                                                                    "rangeURI": "xsd:dateTime",
                                                                                    "regexValidators": Immutable.List [],
                                                                                    "textChoiceValidator": undefined,
                                                                                    "recommendedVariable": false,
                                                                                    "required": false,
                                                                                    "scale": 4000,
                                                                                    "URL": undefined,
                                                                                    "shownInDetailsView": true,
                                                                                    "shownInInsertView": true,
                                                                                    "shownInUpdateView": true,
                                                                                    "visible": true,
                                                                                    "dataType": Immutable.Record {
                                                                                      "conceptURI": undefined,
                                                                                      "display": "Date Time",
                                                                                      "name": "dateTime",
                                                                                      "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                                                                                      "alternateRangeURI": "xsd:dateTime",
                                                                                      "shortDisplay": undefined,
                                                                                      "lookupSchema": undefined,
                                                                                      "lookupQuery": undefined,
                                                                                    },
                                                                                    "lookupQueryValue": undefined,
                                                                                    "lookupType": Immutable.Record {
                                                                                      "conceptURI": undefined,
                                                                                      "display": "Lookup",
                                                                                      "name": "lookup",
                                                                                      "rangeURI": "xsd:dateTime",
                                                                                      "alternateRangeURI": undefined,
                                                                                      "shortDisplay": undefined,
                                                                                      "lookupSchema": undefined,
                                                                                      "lookupQuery": undefined,
                                                                                    },
                                                                                    "original": {
                                                                                      "conceptURI": undefined,
                                                                                      "dataType": Immutable.Record {
                                                                                        "conceptURI": undefined,
                                                                                        "display": "Date Time",
                                                                                        "name": "dateTime",
                                                                                        "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                                                                                        "alternateRangeURI": "xsd:dateTime",
                                                                                        "shortDisplay": undefined,
                                                                                        "lookupSchema": undefined,
                                                                                        "lookupQuery": undefined,
                                                                                      },
                                                                                      "name": "field3",
                                                                                      "rangeURI": undefined,
                                                                                    },
                                                                                    "updatedField": false,
                                                                                    "isPrimaryKey": false,
                                                                                    "lockType": "NotLocked",
                                                                                    "wrappedColumnName": undefined,
                                                                                    "disablePhiLevel": false,
                                                                                    "lockExistingField": false,
                                                                                    "sourceOntology": undefined,
                                                                                    "conceptSubtree": undefined,
                                                                                    "conceptLabelColumn": undefined,
                                                                                    "conceptImportColumn": undefined,
                                                                                    "principalConceptCode": undefined,
                                                                                    "derivationDataScope": undefined,
                                                                                    "selected": false,
                                                                                    "scannable": false,
                                                                                  }
                                                                                }
                                                                                index={2}
                                                                                onChange={[Function]}
                                                                                showingModal={[Function]}
                                                                                successBsStyle="success"
                                                                              >
                                                                                <div>
                                                                                  <Row
                                                                                    bsClass="row"
                                                                                    componentClass="div"
                                                                                  >
                                                                                    <div
                                                                                      className="row"
                                                                                    >
                                                                                      <Col
                                                                                        bsClass="col"
                                                                                        componentClass="div"
                                                                                        xs={12}
                                                                                      >
                                                                                        <div
                                                                                          className="col-xs-12"
                                                                                        >
                                                                                          <SectionHeading
                                                                                            cls="domain-field-section-hdr"
                                                                                            title="Conditional Formatting and Validation Options"
                                                                                          >
                                                                                            <div
                                                                                              className="domain-field-section-heading domain-field-section-hdr"
                                                                                            >
                                                                                              Conditional Formatting and Validation Options
                                                                                            </div>
                                                                                          </SectionHeading>
                                                                                        </div>
                                                                                      </Col>
                                                                                    </div>
                                                                                  </Row>
                                                                                  <Row
                                                                                    bsClass="row"
                                                                                    componentClass="div"
                                                                                  >
                                                                                    <div
                                                                                      className="row"
                                                                                    >
                                                                                      <Col
                                                                                        bsClass="col"
                                                                                        componentClass="div"
                                                                                        xs={12}
                                                                                      >
                                                                                        <div
                                                                                          className="col-xs-12"
                                                                                        >
                                                                                          <div
                                                                                            className="domain-validation-group"
                                                                                          >
                                                                                            <div
                                                                                              className="domain-field-label domain-no-wrap"
                                                                                            >
                                                                                              <DomainFieldLabel
                                                                                                helpTipBody={<ConditionalFormatHelpText />}
                                                                                                label="Create Conditional Format Criteria"
                                                                                              >
                                                                                                Create Conditional Format 
                                                                                                <span
                                                                                                  className="domain-no-wrap"
                                                                                                >
                                                                                                  Criteria
                                                                                                  <Component
                                                                                                    id="tooltip"
                                                                                                    title="Create Conditional Format Criteria"
                                                                                                  >
                                                                                                    <span
                                                                                                      className="label-help-target"
                                                                                                      onMouseOut={[Function]}
                                                                                                      onMouseOver={[Function]}
                                                                                                    >
                                                                                                      <span
                                                                                                        className="label-help-icon fa fa-question-circle"
                                                                                                      />
                                                                                                      <Overlay
                                                                                                        animation={[Function]}
                                                                                                        placement="right"
                                                                                                        rootClose={false}
                                                                                                        show={false}
                                                                                                      >
                                                                                                        <Overlay
                                                                                                          placement="right"
                                                                                                          rootClose={false}
                                                                                                          show={false}
                                                                                                          transition={[Function]}
                                                                                                        />
                                                                                                      </Overlay>
                                                                                                    </span>
                                                                                                  </Component>
                                                                                                </span>
                                                                                              </DomainFieldLabel>
                                                                                            </div>
                                                                                            <div>
                                                                                              <Button
                                                                                                active={false}
                                                                                                block={false}
                                                                                                bsClass="btn"
                                                                                                bsStyle="default"
                                                                                                className="domain-validation-button"
                                                                                                disabled={false}
                                                                                                id="domainpropertiesrow-conditionalFormat-1-2"
                                                                                                name="domainpropertiesrow-conditionalFormat"
                                                                                                onClick={[Function]}
                                                                                              >
                                                                                                <button
                                                                                                  className="domain-validation-button btn btn-default"
                                                                                                  disabled={false}
                                                                                                  id="domainpropertiesrow-conditionalFormat-1-2"
                                                                                                  name="domainpropertiesrow-conditionalFormat"
                                                                                                  onClick={[Function]}
                                                                                                  type="button"
                                                                                                >
                                                                                                  Add Format
                                                                                                </button>
                                                                                              </Button>
                                                                                              <span
                                                                                                className="domain-text-label"
                                                                                              >
                                                                                                None Set
                                                                                              </span>
                                                                                            </div>
                                                                                          </div>
                                                                                          <div
                                                                                            className=""
                                                                                          >
                                                                                            <div
                                                                                              className="domain-field-label domain-no-wrap"
                                                                                            >
                                                                                              <DomainFieldLabel
                                                                                                helpTipBody={<RangeValidatorHelpText />}
                                                                                                label="Create Range Validator"
                                                                                              >
                                                                                                Create Range 
                                                                                                <span
                                                                                                  className="domain-no-wrap"
                                                                                                >
                                                                                                  Validator
                                                                                                  <Component
                                                                                                    id="tooltip"
                                                                                                    title="Create Range Validator"
                                                                                                  >
                                                                                                    <span
                                                                                                      className="label-help-target"
                                                                                                      onMouseOut={[Function]}
                                                                                                      onMouseOver={[Function]}
                                                                                                    >
                                                                                                      <span
                                                                                                        className="label-help-icon fa fa-question-circle"
                                                                                                      />
                                                                                                      <Overlay
                                                                                                        animation={[Function]}
                                                                                                        placement="right"
                                                                                                        rootClose={false}
                                                                                                        show={false}
                                                                                                      >
                                                                                                        <Overlay
                                                                                                          placement="right"
                                                                                                          rootClose={false}
                                                                                                          show={false}
                                                                                                          transition={[Function]}
                                                                                                        />
                                                                                                      </Overlay>
                                                                                                    </span>
                                                                                                  </Component>
                                                                                                </span>
                                                                                              </DomainFieldLabel>
                                                                                            </div>
                                                                                            <div>
                                                                                              <Button
                                                                                                active={false}
                                                                                                block={false}
                                                                                                bsClass="btn"
                                                                                                bsStyle="default"
                                                                                                className="domain-validation-button"
                                                                                                disabled={false}
                                                                                                id="domainpropertiesrow-rangeValidator-1-2"
                                                                                                name="domainpropertiesrow-rangeValidator"
                                                                                                onClick={[Function]}
                                                                                              >
                                                                                                <button
                                                                                                  className="domain-validation-button btn btn-default"
                                                                                                  disabled={false}
                                                                                                  id="domainpropertiesrow-rangeValidator-1-2"
                                                                                                  name="domainpropertiesrow-rangeValidator"
                                                                                                  onClick={[Function]}
                                                                                                  type="button"
                                                                                                >
                                                                                                  Add Range
                                                                                                </button>
                                                                                              </Button>
                                                                                              <span
                                                                                                className="domain-text-label"
                                                                                              >
                                                                                                None Set
                                                                                              </span>
                                                                                            </div>
                                                                                          </div>
                                                                                        </div>
                                                                                      </Col>
                                                                                    </div>
                                                                                  </Row>
                                                                                </div>
                                                                              </ConditionalFormattingAndValidation>
                                                                            </div>
                                                                          </Col>
                                                                        </div>
                                                                      </div>
                                                                    </DomainRowExpandedOptions>
                                                                  </div>
                                                                </Transition>
                                                              </Collapse>
                                                            </div>
                                                          </Draggable>
                                                        </Connect(Draggable)>
                                                      </PrivateDraggable>
                                                    </PublicDraggable>
                                                  </DomainRow>
                                                  <AnimateInOut
                                                    on={null}
                                                    shouldAnimate={false}
                                                  />
                                                </form>
                                              </Form>
                                            </div>
                                          </Droppable>
                                        </Connect(Droppable)>
                                      </Provider>
                                    </App>
                                  </ErrorBoundary>
                                </DragDropContext>
                                <Row
                                  bsClass="row"
                                  className="domain-add-field-row"
                                  componentClass="div"
                                >
                                  <div
                                    className="domain-add-field-row row"
                                  >
                                    <Col
                                      bsClass="col"
                                      componentClass="div"
                                      xs={12}
                                    >
                                      <div
                                        className="col-xs-12"
                                      >
                                        <AddEntityButton
                                          buttonClass="domain-form-add-btn"
                                          containerClass="pull-right"
                                          entity="Field"
                                          onClick={[Function]}
                                        >
                                          <ActionButton
                                            buttonClass="domain-form-add-btn"
                                            containerClass="pull-right"
                                            helperTitle="More Info"
                                            onClick={[Function]}
                                          >
                                            <div
                                              className="pull-right"
                                            >
                                              <div
                                                className="domain-form-add-btn"
                                              >
                                                <span
                                                  className="container--action-button btn btn-default"
                                                  onClick={[Function]}
                                                >
                                                  <i
                                                    className="fa fa-plus-circle container--addition-icon"
                                                  />
                                                   Add 
                                                  Field
                                                </span>
                                              </div>
                                            </div>
                                          </ActionButton>
                                        </AddEntityButton>
                                      </div>
                                    </Col>
                                  </div>
                                </Row>
                              </div>
                            </div>
                          </Transition>
                        </Collapse>
                      </PanelCollapse>
                    </PanelBody>
                  </div>
                </Panel>
              </Uncontrolled(Panel)>
            </ForwardRef>
          </DomainFormImpl>
        </LookupProvider>
      </DomainForm>
      <div
        className="domain-form-panel domain-designer-buttons"
      >
        <Button
          active={false}
          block={false}
          bsClass="btn"
          bsStyle="default"
          disabled={false}
          onClick={[MockFunction]}
        >
          <button
            className="btn btn-default"
            disabled={false}
            onClick={[MockFunction]}
            type="button"
          >
            Cancel
          </button>
        </Button>
        <Button
          active={false}
          block={false}
          bsClass="btn"
          bsStyle="success"
          className="pull-right"
          disabled={false}
          onClick={[Function]}
        >
          <button
            className="pull-right btn btn-success"
            disabled={false}
            onClick={[Function]}
            type="button"
          >
            Save
          </button>
        </Button>
      </div>
    </BaseDomainDesigner>
  </AssayDesignerPanelsImpl>
</ComponentWithBaseDomainDesigner>
`;
