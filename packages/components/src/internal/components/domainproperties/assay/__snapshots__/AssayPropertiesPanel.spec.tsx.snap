// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`AssayPropertiesPanel asPanel, helpTopic, and appPropertiesOnly 1`] = `
<ComponentWithDomainPropertiesPanelCollapse
  appPropertiesOnly={true}
  asPanel={false}
  collapsed={false}
  controlledCollapse={false}
  helpTopic="defineAssaySchema"
  initCollapsed={false}
  model={
    Immutable.Record {
      "allowBackgroundUpload": false,
      "allowEditableResults": false,
      "allowQCStates": false,
      "allowSpacesInPath": false,
      "allowTransformationScript": false,
      "allowPlateMetadata": false,
      "autoCopyTargetContainer": undefined,
      "autoCopyTargetContainerId": undefined,
      "availableDetectionMethods": undefined,
      "availableMetadataInputFormats": undefined,
      "availablePlateTemplates": undefined,
      "backgroundUpload": false,
      "description": undefined,
      "domains": Immutable.List [
        Immutable.Record {
          "name": "Batch Fields",
          "container": undefined,
          "description": undefined,
          "domainURI": undefined,
          "domainId": null,
          "allowFileLinkProperties": false,
          "allowAttachmentProperties": false,
          "allowFlagProperties": true,
          "allowTimepointProperties": false,
          "showDefaultValueSettings": false,
          "defaultDefaultValueType": undefined,
          "defaultValueOptions": Immutable.List [],
          "fields": Immutable.List [],
          "indices": Immutable.List [],
          "domainException": undefined,
          "mandatoryFieldNames": Immutable.List [],
          "reservedFieldNames": Immutable.List [],
          "newDesignFields": undefined,
          "instructions": undefined,
          "domainKindName": undefined,
        },
        Immutable.Record {
          "name": "Run Fields",
          "container": undefined,
          "description": undefined,
          "domainURI": undefined,
          "domainId": null,
          "allowFileLinkProperties": false,
          "allowAttachmentProperties": false,
          "allowFlagProperties": true,
          "allowTimepointProperties": false,
          "showDefaultValueSettings": false,
          "defaultDefaultValueType": undefined,
          "defaultValueOptions": Immutable.List [],
          "fields": Immutable.List [],
          "indices": Immutable.List [],
          "domainException": undefined,
          "mandatoryFieldNames": Immutable.List [],
          "reservedFieldNames": Immutable.List [],
          "newDesignFields": undefined,
          "instructions": undefined,
          "domainKindName": undefined,
        },
        Immutable.Record {
          "name": "Data Fields",
          "container": undefined,
          "description": undefined,
          "domainURI": undefined,
          "domainId": null,
          "allowFileLinkProperties": false,
          "allowAttachmentProperties": false,
          "allowFlagProperties": true,
          "allowTimepointProperties": false,
          "showDefaultValueSettings": false,
          "defaultDefaultValueType": undefined,
          "defaultValueOptions": Immutable.List [],
          "fields": Immutable.List [],
          "indices": Immutable.List [],
          "domainException": undefined,
          "mandatoryFieldNames": Immutable.List [],
          "reservedFieldNames": Immutable.List [],
          "newDesignFields": undefined,
          "instructions": undefined,
          "domainKindName": undefined,
        },
      ],
      "editableResults": false,
      "editableRuns": false,
      "exception": undefined,
      "metadataInputFormatHelp": undefined,
      "moduleTransformScripts": undefined,
      "name": undefined,
      "plateMetadata": undefined,
      "protocolId": undefined,
      "protocolParameters": undefined,
      "protocolTransformScripts": undefined,
      "providerName": "General",
      "saveScriptFiles": false,
      "selectedDetectionMethod": undefined,
      "selectedMetadataInputFormat": undefined,
      "selectedPlateTemplate": undefined,
      "qcEnabled": undefined,
    }
  }
  onChange={[Function]}
  panelStatus="NONE"
  useTheme={false}
  validate={false}
>
  <AssayPropertiesPanelImpl
    appPropertiesOnly={true}
    asPanel={false}
    collapsed={false}
    controlledCollapse={false}
    helpTopic="defineAssaySchema"
    model={
      Immutable.Record {
        "allowBackgroundUpload": false,
        "allowEditableResults": false,
        "allowQCStates": false,
        "allowSpacesInPath": false,
        "allowTransformationScript": false,
        "allowPlateMetadata": false,
        "autoCopyTargetContainer": undefined,
        "autoCopyTargetContainerId": undefined,
        "availableDetectionMethods": undefined,
        "availableMetadataInputFormats": undefined,
        "availablePlateTemplates": undefined,
        "backgroundUpload": false,
        "description": undefined,
        "domains": Immutable.List [
          Immutable.Record {
            "name": "Batch Fields",
            "container": undefined,
            "description": undefined,
            "domainURI": undefined,
            "domainId": null,
            "allowFileLinkProperties": false,
            "allowAttachmentProperties": false,
            "allowFlagProperties": true,
            "allowTimepointProperties": false,
            "showDefaultValueSettings": false,
            "defaultDefaultValueType": undefined,
            "defaultValueOptions": Immutable.List [],
            "fields": Immutable.List [],
            "indices": Immutable.List [],
            "domainException": undefined,
            "mandatoryFieldNames": Immutable.List [],
            "reservedFieldNames": Immutable.List [],
            "newDesignFields": undefined,
            "instructions": undefined,
            "domainKindName": undefined,
          },
          Immutable.Record {
            "name": "Run Fields",
            "container": undefined,
            "description": undefined,
            "domainURI": undefined,
            "domainId": null,
            "allowFileLinkProperties": false,
            "allowAttachmentProperties": false,
            "allowFlagProperties": true,
            "allowTimepointProperties": false,
            "showDefaultValueSettings": false,
            "defaultDefaultValueType": undefined,
            "defaultValueOptions": Immutable.List [],
            "fields": Immutable.List [],
            "indices": Immutable.List [],
            "domainException": undefined,
            "mandatoryFieldNames": Immutable.List [],
            "reservedFieldNames": Immutable.List [],
            "newDesignFields": undefined,
            "instructions": undefined,
            "domainKindName": undefined,
          },
          Immutable.Record {
            "name": "Data Fields",
            "container": undefined,
            "description": undefined,
            "domainURI": undefined,
            "domainId": null,
            "allowFileLinkProperties": false,
            "allowAttachmentProperties": false,
            "allowFlagProperties": true,
            "allowTimepointProperties": false,
            "showDefaultValueSettings": false,
            "defaultDefaultValueType": undefined,
            "defaultValueOptions": Immutable.List [],
            "fields": Immutable.List [],
            "indices": Immutable.List [],
            "domainException": undefined,
            "mandatoryFieldNames": Immutable.List [],
            "reservedFieldNames": Immutable.List [],
            "newDesignFields": undefined,
            "instructions": undefined,
            "domainKindName": undefined,
          },
        ],
        "editableResults": false,
        "editableRuns": false,
        "exception": undefined,
        "metadataInputFormatHelp": undefined,
        "moduleTransformScripts": undefined,
        "name": undefined,
        "plateMetadata": undefined,
        "protocolId": undefined,
        "protocolParameters": undefined,
        "protocolTransformScripts": undefined,
        "providerName": "General",
        "saveScriptFiles": false,
        "selectedDetectionMethod": undefined,
        "selectedMetadataInputFormat": undefined,
        "selectedPlateTemplate": undefined,
        "qcEnabled": undefined,
      }
    }
    onChange={[Function]}
    panelStatus="NONE"
    togglePanel={[Function]}
    useTheme={false}
    validate={false}
  >
    <Form
      bsClass="form"
      componentClass="form"
      horizontal={false}
      inline={false}
    >
      <form
        className=""
      >
        <Col
          bsClass="col"
          componentClass="div"
          lg={12}
          xs={12}
        >
          <div
            className="col-lg-12 col-xs-12"
          >
            <div
              className="domain-field-padding-bottom"
            >
              <SectionHeading
                title="Basic Properties"
              >
                <div
                  className="domain-field-section-heading"
                >
                  Basic Properties
                </div>
              </SectionHeading>
              <NameInput
                appPropertiesOnly={true}
                model={
                  Immutable.Record {
                    "allowBackgroundUpload": false,
                    "allowEditableResults": false,
                    "allowQCStates": false,
                    "allowSpacesInPath": false,
                    "allowTransformationScript": false,
                    "allowPlateMetadata": false,
                    "autoCopyTargetContainer": undefined,
                    "autoCopyTargetContainerId": undefined,
                    "availableDetectionMethods": undefined,
                    "availableMetadataInputFormats": undefined,
                    "availablePlateTemplates": undefined,
                    "backgroundUpload": false,
                    "description": undefined,
                    "domains": Immutable.List [
                      Immutable.Record {
                        "name": "Batch Fields",
                        "container": undefined,
                        "description": undefined,
                        "domainURI": undefined,
                        "domainId": null,
                        "allowFileLinkProperties": false,
                        "allowAttachmentProperties": false,
                        "allowFlagProperties": true,
                        "allowTimepointProperties": false,
                        "showDefaultValueSettings": false,
                        "defaultDefaultValueType": undefined,
                        "defaultValueOptions": Immutable.List [],
                        "fields": Immutable.List [],
                        "indices": Immutable.List [],
                        "domainException": undefined,
                        "mandatoryFieldNames": Immutable.List [],
                        "reservedFieldNames": Immutable.List [],
                        "newDesignFields": undefined,
                        "instructions": undefined,
                        "domainKindName": undefined,
                      },
                      Immutable.Record {
                        "name": "Run Fields",
                        "container": undefined,
                        "description": undefined,
                        "domainURI": undefined,
                        "domainId": null,
                        "allowFileLinkProperties": false,
                        "allowAttachmentProperties": false,
                        "allowFlagProperties": true,
                        "allowTimepointProperties": false,
                        "showDefaultValueSettings": false,
                        "defaultDefaultValueType": undefined,
                        "defaultValueOptions": Immutable.List [],
                        "fields": Immutable.List [],
                        "indices": Immutable.List [],
                        "domainException": undefined,
                        "mandatoryFieldNames": Immutable.List [],
                        "reservedFieldNames": Immutable.List [],
                        "newDesignFields": undefined,
                        "instructions": undefined,
                        "domainKindName": undefined,
                      },
                      Immutable.Record {
                        "name": "Data Fields",
                        "container": undefined,
                        "description": undefined,
                        "domainURI": undefined,
                        "domainId": null,
                        "allowFileLinkProperties": false,
                        "allowAttachmentProperties": false,
                        "allowFlagProperties": true,
                        "allowTimepointProperties": false,
                        "showDefaultValueSettings": false,
                        "defaultDefaultValueType": undefined,
                        "defaultValueOptions": Immutable.List [],
                        "fields": Immutable.List [],
                        "indices": Immutable.List [],
                        "domainException": undefined,
                        "mandatoryFieldNames": Immutable.List [],
                        "reservedFieldNames": Immutable.List [],
                        "newDesignFields": undefined,
                        "instructions": undefined,
                        "domainKindName": undefined,
                      },
                    ],
                    "editableResults": false,
                    "editableRuns": false,
                    "exception": undefined,
                    "metadataInputFormatHelp": undefined,
                    "moduleTransformScripts": undefined,
                    "name": undefined,
                    "plateMetadata": undefined,
                    "protocolId": undefined,
                    "protocolParameters": undefined,
                    "protocolTransformScripts": undefined,
                    "providerName": "General",
                    "saveScriptFiles": false,
                    "selectedDetectionMethod": undefined,
                    "selectedMetadataInputFormat": undefined,
                    "selectedPlateTemplate": undefined,
                    "qcEnabled": undefined,
                  }
                }
                onChange={[Function]}
              >
                <Component
                  appPropertiesOnly={true}
                  colSize={9}
                  helpTipBody={
                    <p>
                      The name for this assay design. Note that this can't be changed after the assay design is created.
                    </p>
                  }
                  label="Name"
                  required={true}
                >
                  <Row
                    bsClass="row"
                    className="margin-top"
                    componentClass="div"
                  >
                    <div
                      className="margin-top row"
                    >
                      <Col
                        bsClass="col"
                        componentClass="div"
                        lg={2}
                        xs={3}
                      >
                        <div
                          className="col-lg-2 col-xs-3"
                        >
                          <DomainFieldLabel
                            helpTipBody={
                              <p>
                                The name for this assay design. Note that this can't be changed after the assay design is created.
                              </p>
                            }
                            label="Name"
                            required={true}
                          >
                            <span
                              className="domain-no-wrap"
                            >
                              Name
                              <Component
                                customStyle={Object {}}
                                id="tooltip"
                                required={true}
                                size="1x"
                                title="Name"
                              >
                                <span
                                  className="label-help-target"
                                  onMouseOut={[Function]}
                                  onMouseOver={[Function]}
                                >
                                  <FontAwesomeIcon
                                    border={false}
                                    className="label-help-icon"
                                    fixedWidth={false}
                                    flip={null}
                                    icon={
                                      Object {
                                        "icon": Array [
                                          512,
                                          512,
                                          Array [],
                                          "f059",
                                          "M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z",
                                        ],
                                        "iconName": "question-circle",
                                        "prefix": "fas",
                                      }
                                    }
                                    inverse={false}
                                    listItem={false}
                                    mask={null}
                                    pull={null}
                                    pulse={false}
                                    rotation={null}
                                    size="1x"
                                    spin={false}
                                    style={Object {}}
                                    swapOpacity={false}
                                    symbol={false}
                                    title=""
                                    transform={null}
                                  >
                                    <svg
                                      aria-hidden="true"
                                      className="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                                      data-icon="question-circle"
                                      data-prefix="fas"
                                      focusable="false"
                                      role="img"
                                      style={Object {}}
                                      viewBox="0 0 512 512"
                                      xmlns="http://www.w3.org/2000/svg"
                                    >
                                      <path
                                        d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                        fill="currentColor"
                                        style={Object {}}
                                      />
                                    </svg>
                                  </FontAwesomeIcon>
                                  <Overlay
                                    animation={[Function]}
                                    placement="right"
                                    rootClose={false}
                                    show={false}
                                  >
                                    <Overlay
                                      placement="right"
                                      rootClose={false}
                                      show={false}
                                      transition={[Function]}
                                    />
                                  </Overlay>
                                </span>
                              </Component>
                               *
                            </span>
                          </DomainFieldLabel>
                        </div>
                      </Col>
                      <Col
                        bsClass="col"
                        componentClass="div"
                        lg={10}
                        xs={9}
                      >
                        <div
                          className="col-lg-10 col-xs-9"
                        >
                          <FormControl
                            bsClass="form-control"
                            componentClass="input"
                            disabled={false}
                            id="assay-design-name"
                            onChange={[Function]}
                            placeholder="Enter a name for this assay"
                            type="text"
                            value=""
                          >
                            <input
                              className="form-control"
                              disabled={false}
                              id="assay-design-name"
                              onChange={[Function]}
                              placeholder="Enter a name for this assay"
                              type="text"
                              value=""
                            />
                          </FormControl>
                        </div>
                      </Col>
                    </div>
                  </Row>
                </Component>
              </NameInput>
              <DescriptionInput
                appPropertiesOnly={true}
                model={
                  Immutable.Record {
                    "allowBackgroundUpload": false,
                    "allowEditableResults": false,
                    "allowQCStates": false,
                    "allowSpacesInPath": false,
                    "allowTransformationScript": false,
                    "allowPlateMetadata": false,
                    "autoCopyTargetContainer": undefined,
                    "autoCopyTargetContainerId": undefined,
                    "availableDetectionMethods": undefined,
                    "availableMetadataInputFormats": undefined,
                    "availablePlateTemplates": undefined,
                    "backgroundUpload": false,
                    "description": undefined,
                    "domains": Immutable.List [
                      Immutable.Record {
                        "name": "Batch Fields",
                        "container": undefined,
                        "description": undefined,
                        "domainURI": undefined,
                        "domainId": null,
                        "allowFileLinkProperties": false,
                        "allowAttachmentProperties": false,
                        "allowFlagProperties": true,
                        "allowTimepointProperties": false,
                        "showDefaultValueSettings": false,
                        "defaultDefaultValueType": undefined,
                        "defaultValueOptions": Immutable.List [],
                        "fields": Immutable.List [],
                        "indices": Immutable.List [],
                        "domainException": undefined,
                        "mandatoryFieldNames": Immutable.List [],
                        "reservedFieldNames": Immutable.List [],
                        "newDesignFields": undefined,
                        "instructions": undefined,
                        "domainKindName": undefined,
                      },
                      Immutable.Record {
                        "name": "Run Fields",
                        "container": undefined,
                        "description": undefined,
                        "domainURI": undefined,
                        "domainId": null,
                        "allowFileLinkProperties": false,
                        "allowAttachmentProperties": false,
                        "allowFlagProperties": true,
                        "allowTimepointProperties": false,
                        "showDefaultValueSettings": false,
                        "defaultDefaultValueType": undefined,
                        "defaultValueOptions": Immutable.List [],
                        "fields": Immutable.List [],
                        "indices": Immutable.List [],
                        "domainException": undefined,
                        "mandatoryFieldNames": Immutable.List [],
                        "reservedFieldNames": Immutable.List [],
                        "newDesignFields": undefined,
                        "instructions": undefined,
                        "domainKindName": undefined,
                      },
                      Immutable.Record {
                        "name": "Data Fields",
                        "container": undefined,
                        "description": undefined,
                        "domainURI": undefined,
                        "domainId": null,
                        "allowFileLinkProperties": false,
                        "allowAttachmentProperties": false,
                        "allowFlagProperties": true,
                        "allowTimepointProperties": false,
                        "showDefaultValueSettings": false,
                        "defaultDefaultValueType": undefined,
                        "defaultValueOptions": Immutable.List [],
                        "fields": Immutable.List [],
                        "indices": Immutable.List [],
                        "domainException": undefined,
                        "mandatoryFieldNames": Immutable.List [],
                        "reservedFieldNames": Immutable.List [],
                        "newDesignFields": undefined,
                        "instructions": undefined,
                        "domainKindName": undefined,
                      },
                    ],
                    "editableResults": false,
                    "editableRuns": false,
                    "exception": undefined,
                    "metadataInputFormatHelp": undefined,
                    "moduleTransformScripts": undefined,
                    "name": undefined,
                    "plateMetadata": undefined,
                    "protocolId": undefined,
                    "protocolParameters": undefined,
                    "protocolTransformScripts": undefined,
                    "providerName": "General",
                    "saveScriptFiles": false,
                    "selectedDetectionMethod": undefined,
                    "selectedMetadataInputFormat": undefined,
                    "selectedPlateTemplate": undefined,
                    "qcEnabled": undefined,
                  }
                }
                onChange={[Function]}
              >
                <Component
                  appPropertiesOnly={true}
                  colSize={9}
                  helpTipBody={
                    <p>
                      A short description for this assay design.
                    </p>
                  }
                  label="Description"
                >
                  <Row
                    bsClass="row"
                    className="margin-top"
                    componentClass="div"
                  >
                    <div
                      className="margin-top row"
                    >
                      <Col
                        bsClass="col"
                        componentClass="div"
                        lg={2}
                        xs={3}
                      >
                        <div
                          className="col-lg-2 col-xs-3"
                        >
                          <DomainFieldLabel
                            helpTipBody={
                              <p>
                                A short description for this assay design.
                              </p>
                            }
                            label="Description"
                          >
                            <span
                              className="domain-no-wrap"
                            >
                              Description
                              <Component
                                customStyle={Object {}}
                                id="tooltip"
                                size="1x"
                                title="Description"
                              >
                                <span
                                  className="label-help-target"
                                  onMouseOut={[Function]}
                                  onMouseOver={[Function]}
                                >
                                  <FontAwesomeIcon
                                    border={false}
                                    className="label-help-icon"
                                    fixedWidth={false}
                                    flip={null}
                                    icon={
                                      Object {
                                        "icon": Array [
                                          512,
                                          512,
                                          Array [],
                                          "f059",
                                          "M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z",
                                        ],
                                        "iconName": "question-circle",
                                        "prefix": "fas",
                                      }
                                    }
                                    inverse={false}
                                    listItem={false}
                                    mask={null}
                                    pull={null}
                                    pulse={false}
                                    rotation={null}
                                    size="1x"
                                    spin={false}
                                    style={Object {}}
                                    swapOpacity={false}
                                    symbol={false}
                                    title=""
                                    transform={null}
                                  >
                                    <svg
                                      aria-hidden="true"
                                      className="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                                      data-icon="question-circle"
                                      data-prefix="fas"
                                      focusable="false"
                                      role="img"
                                      style={Object {}}
                                      viewBox="0 0 512 512"
                                      xmlns="http://www.w3.org/2000/svg"
                                    >
                                      <path
                                        d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                        fill="currentColor"
                                        style={Object {}}
                                      />
                                    </svg>
                                  </FontAwesomeIcon>
                                  <Overlay
                                    animation={[Function]}
                                    placement="right"
                                    rootClose={false}
                                    show={false}
                                  >
                                    <Overlay
                                      placement="right"
                                      rootClose={false}
                                      show={false}
                                      transition={[Function]}
                                    />
                                  </Overlay>
                                </span>
                              </Component>
                            </span>
                          </DomainFieldLabel>
                        </div>
                      </Col>
                      <Col
                        bsClass="col"
                        componentClass="div"
                        lg={10}
                        xs={9}
                      >
                        <div
                          className="col-lg-10 col-xs-9"
                        >
                          <textarea
                            className="form-control textarea-noresize"
                            id="assay-design-description"
                            onChange={[Function]}
                            value=""
                          />
                        </div>
                      </Col>
                    </div>
                  </Row>
                </Component>
              </DescriptionInput>
            </div>
            <div
              className="domain-field-padding-bottom"
            >
              <SectionHeading
                title="Editing Settings"
              >
                <div
                  className="domain-field-section-heading"
                >
                  Editing Settings
                </div>
              </SectionHeading>
              <EditableRunsInput
                appPropertiesOnly={true}
                model={
                  Immutable.Record {
                    "allowBackgroundUpload": false,
                    "allowEditableResults": false,
                    "allowQCStates": false,
                    "allowSpacesInPath": false,
                    "allowTransformationScript": false,
                    "allowPlateMetadata": false,
                    "autoCopyTargetContainer": undefined,
                    "autoCopyTargetContainerId": undefined,
                    "availableDetectionMethods": undefined,
                    "availableMetadataInputFormats": undefined,
                    "availablePlateTemplates": undefined,
                    "backgroundUpload": false,
                    "description": undefined,
                    "domains": Immutable.List [
                      Immutable.Record {
                        "name": "Batch Fields",
                        "container": undefined,
                        "description": undefined,
                        "domainURI": undefined,
                        "domainId": null,
                        "allowFileLinkProperties": false,
                        "allowAttachmentProperties": false,
                        "allowFlagProperties": true,
                        "allowTimepointProperties": false,
                        "showDefaultValueSettings": false,
                        "defaultDefaultValueType": undefined,
                        "defaultValueOptions": Immutable.List [],
                        "fields": Immutable.List [],
                        "indices": Immutable.List [],
                        "domainException": undefined,
                        "mandatoryFieldNames": Immutable.List [],
                        "reservedFieldNames": Immutable.List [],
                        "newDesignFields": undefined,
                        "instructions": undefined,
                        "domainKindName": undefined,
                      },
                      Immutable.Record {
                        "name": "Run Fields",
                        "container": undefined,
                        "description": undefined,
                        "domainURI": undefined,
                        "domainId": null,
                        "allowFileLinkProperties": false,
                        "allowAttachmentProperties": false,
                        "allowFlagProperties": true,
                        "allowTimepointProperties": false,
                        "showDefaultValueSettings": false,
                        "defaultDefaultValueType": undefined,
                        "defaultValueOptions": Immutable.List [],
                        "fields": Immutable.List [],
                        "indices": Immutable.List [],
                        "domainException": undefined,
                        "mandatoryFieldNames": Immutable.List [],
                        "reservedFieldNames": Immutable.List [],
                        "newDesignFields": undefined,
                        "instructions": undefined,
                        "domainKindName": undefined,
                      },
                      Immutable.Record {
                        "name": "Data Fields",
                        "container": undefined,
                        "description": undefined,
                        "domainURI": undefined,
                        "domainId": null,
                        "allowFileLinkProperties": false,
                        "allowAttachmentProperties": false,
                        "allowFlagProperties": true,
                        "allowTimepointProperties": false,
                        "showDefaultValueSettings": false,
                        "defaultDefaultValueType": undefined,
                        "defaultValueOptions": Immutable.List [],
                        "fields": Immutable.List [],
                        "indices": Immutable.List [],
                        "domainException": undefined,
                        "mandatoryFieldNames": Immutable.List [],
                        "reservedFieldNames": Immutable.List [],
                        "newDesignFields": undefined,
                        "instructions": undefined,
                        "domainKindName": undefined,
                      },
                    ],
                    "editableResults": false,
                    "editableRuns": false,
                    "exception": undefined,
                    "metadataInputFormatHelp": undefined,
                    "moduleTransformScripts": undefined,
                    "name": undefined,
                    "plateMetadata": undefined,
                    "protocolId": undefined,
                    "protocolParameters": undefined,
                    "protocolTransformScripts": undefined,
                    "providerName": "General",
                    "saveScriptFiles": false,
                    "selectedDetectionMethod": undefined,
                    "selectedMetadataInputFormat": undefined,
                    "selectedPlateTemplate": undefined,
                    "qcEnabled": undefined,
                  }
                }
                onChange={[Function]}
              >
                <Component
                  appPropertiesOnly={true}
                  colSize={9}
                  helpTipBody={
                    <p>
                      If enabled, users with sufficient permissions can edit values at the run level after the initial import is complete. These changes will be audited.
                    </p>
                  }
                  label="Editable Runs"
                >
                  <Row
                    bsClass="row"
                    className="margin-top"
                    componentClass="div"
                  >
                    <div
                      className="margin-top row"
                    >
                      <Col
                        bsClass="col"
                        componentClass="div"
                        lg={2}
                        xs={3}
                      >
                        <div
                          className="col-lg-2 col-xs-3"
                        >
                          <DomainFieldLabel
                            helpTipBody={
                              <p>
                                If enabled, users with sufficient permissions can edit values at the run level after the initial import is complete. These changes will be audited.
                              </p>
                            }
                            label="Editable Runs"
                          >
                            Editable 
                            <span
                              className="domain-no-wrap"
                            >
                              Runs
                              <Component
                                customStyle={Object {}}
                                id="tooltip"
                                size="1x"
                                title="Editable Runs"
                              >
                                <span
                                  className="label-help-target"
                                  onMouseOut={[Function]}
                                  onMouseOver={[Function]}
                                >
                                  <FontAwesomeIcon
                                    border={false}
                                    className="label-help-icon"
                                    fixedWidth={false}
                                    flip={null}
                                    icon={
                                      Object {
                                        "icon": Array [
                                          512,
                                          512,
                                          Array [],
                                          "f059",
                                          "M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z",
                                        ],
                                        "iconName": "question-circle",
                                        "prefix": "fas",
                                      }
                                    }
                                    inverse={false}
                                    listItem={false}
                                    mask={null}
                                    pull={null}
                                    pulse={false}
                                    rotation={null}
                                    size="1x"
                                    spin={false}
                                    style={Object {}}
                                    swapOpacity={false}
                                    symbol={false}
                                    title=""
                                    transform={null}
                                  >
                                    <svg
                                      aria-hidden="true"
                                      className="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                                      data-icon="question-circle"
                                      data-prefix="fas"
                                      focusable="false"
                                      role="img"
                                      style={Object {}}
                                      viewBox="0 0 512 512"
                                      xmlns="http://www.w3.org/2000/svg"
                                    >
                                      <path
                                        d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                        fill="currentColor"
                                        style={Object {}}
                                      />
                                    </svg>
                                  </FontAwesomeIcon>
                                  <Overlay
                                    animation={[Function]}
                                    placement="right"
                                    rootClose={false}
                                    show={false}
                                  >
                                    <Overlay
                                      placement="right"
                                      rootClose={false}
                                      show={false}
                                      transition={[Function]}
                                    />
                                  </Overlay>
                                </span>
                              </Component>
                            </span>
                          </DomainFieldLabel>
                        </div>
                      </Col>
                      <Col
                        bsClass="col"
                        componentClass="div"
                        lg={10}
                        xs={9}
                      >
                        <div
                          className="col-lg-10 col-xs-9"
                        >
                          <input
                            checked={false}
                            id="assay-design-editableRuns"
                            onChange={[Function]}
                            type="checkbox"
                          />
                        </div>
                      </Col>
                    </div>
                  </Row>
                </Component>
              </EditableRunsInput>
            </div>
          </div>
        </Col>
        <Col
          bsClass="col"
          componentClass="div"
          lg={6}
          xs={12}
        >
          <div
            className="col-lg-6 col-xs-12"
          />
        </Col>
      </form>
    </Form>
  </AssayPropertiesPanelImpl>
</ComponentWithDomainPropertiesPanelCollapse>
`;

exports[`AssayPropertiesPanel default properties 1`] = `
<ComponentWithDomainPropertiesPanelCollapse
  collapsed={false}
  controlledCollapse={false}
  initCollapsed={false}
  model={
    Immutable.Record {
      "allowBackgroundUpload": false,
      "allowEditableResults": false,
      "allowQCStates": false,
      "allowSpacesInPath": false,
      "allowTransformationScript": false,
      "allowPlateMetadata": false,
      "autoCopyTargetContainer": undefined,
      "autoCopyTargetContainerId": undefined,
      "availableDetectionMethods": undefined,
      "availableMetadataInputFormats": undefined,
      "availablePlateTemplates": undefined,
      "backgroundUpload": false,
      "description": undefined,
      "domains": Immutable.List [
        Immutable.Record {
          "name": "Batch Fields",
          "container": undefined,
          "description": undefined,
          "domainURI": undefined,
          "domainId": null,
          "allowFileLinkProperties": false,
          "allowAttachmentProperties": false,
          "allowFlagProperties": true,
          "allowTimepointProperties": false,
          "showDefaultValueSettings": false,
          "defaultDefaultValueType": undefined,
          "defaultValueOptions": Immutable.List [],
          "fields": Immutable.List [],
          "indices": Immutable.List [],
          "domainException": undefined,
          "mandatoryFieldNames": Immutable.List [],
          "reservedFieldNames": Immutable.List [],
          "newDesignFields": undefined,
          "instructions": undefined,
          "domainKindName": undefined,
        },
        Immutable.Record {
          "name": "Run Fields",
          "container": undefined,
          "description": undefined,
          "domainURI": undefined,
          "domainId": null,
          "allowFileLinkProperties": false,
          "allowAttachmentProperties": false,
          "allowFlagProperties": true,
          "allowTimepointProperties": false,
          "showDefaultValueSettings": false,
          "defaultDefaultValueType": undefined,
          "defaultValueOptions": Immutable.List [],
          "fields": Immutable.List [],
          "indices": Immutable.List [],
          "domainException": undefined,
          "mandatoryFieldNames": Immutable.List [],
          "reservedFieldNames": Immutable.List [],
          "newDesignFields": undefined,
          "instructions": undefined,
          "domainKindName": undefined,
        },
        Immutable.Record {
          "name": "Data Fields",
          "container": undefined,
          "description": undefined,
          "domainURI": undefined,
          "domainId": null,
          "allowFileLinkProperties": false,
          "allowAttachmentProperties": false,
          "allowFlagProperties": true,
          "allowTimepointProperties": false,
          "showDefaultValueSettings": false,
          "defaultDefaultValueType": undefined,
          "defaultValueOptions": Immutable.List [],
          "fields": Immutable.List [],
          "indices": Immutable.List [],
          "domainException": undefined,
          "mandatoryFieldNames": Immutable.List [],
          "reservedFieldNames": Immutable.List [],
          "newDesignFields": undefined,
          "instructions": undefined,
          "domainKindName": undefined,
        },
      ],
      "editableResults": false,
      "editableRuns": false,
      "exception": undefined,
      "metadataInputFormatHelp": undefined,
      "moduleTransformScripts": undefined,
      "name": undefined,
      "plateMetadata": undefined,
      "protocolId": undefined,
      "protocolParameters": undefined,
      "protocolTransformScripts": undefined,
      "providerName": "General",
      "saveScriptFiles": false,
      "selectedDetectionMethod": undefined,
      "selectedMetadataInputFormat": undefined,
      "selectedPlateTemplate": undefined,
      "qcEnabled": undefined,
    }
  }
  onChange={[Function]}
  panelStatus="NONE"
  useTheme={false}
  validate={false}
>
  <AssayPropertiesPanelImpl
    appPropertiesOnly={false}
    asPanel={true}
    collapsed={false}
    controlledCollapse={false}
    helpTopic="defineAssaySchema"
    model={
      Immutable.Record {
        "allowBackgroundUpload": false,
        "allowEditableResults": false,
        "allowQCStates": false,
        "allowSpacesInPath": false,
        "allowTransformationScript": false,
        "allowPlateMetadata": false,
        "autoCopyTargetContainer": undefined,
        "autoCopyTargetContainerId": undefined,
        "availableDetectionMethods": undefined,
        "availableMetadataInputFormats": undefined,
        "availablePlateTemplates": undefined,
        "backgroundUpload": false,
        "description": undefined,
        "domains": Immutable.List [
          Immutable.Record {
            "name": "Batch Fields",
            "container": undefined,
            "description": undefined,
            "domainURI": undefined,
            "domainId": null,
            "allowFileLinkProperties": false,
            "allowAttachmentProperties": false,
            "allowFlagProperties": true,
            "allowTimepointProperties": false,
            "showDefaultValueSettings": false,
            "defaultDefaultValueType": undefined,
            "defaultValueOptions": Immutable.List [],
            "fields": Immutable.List [],
            "indices": Immutable.List [],
            "domainException": undefined,
            "mandatoryFieldNames": Immutable.List [],
            "reservedFieldNames": Immutable.List [],
            "newDesignFields": undefined,
            "instructions": undefined,
            "domainKindName": undefined,
          },
          Immutable.Record {
            "name": "Run Fields",
            "container": undefined,
            "description": undefined,
            "domainURI": undefined,
            "domainId": null,
            "allowFileLinkProperties": false,
            "allowAttachmentProperties": false,
            "allowFlagProperties": true,
            "allowTimepointProperties": false,
            "showDefaultValueSettings": false,
            "defaultDefaultValueType": undefined,
            "defaultValueOptions": Immutable.List [],
            "fields": Immutable.List [],
            "indices": Immutable.List [],
            "domainException": undefined,
            "mandatoryFieldNames": Immutable.List [],
            "reservedFieldNames": Immutable.List [],
            "newDesignFields": undefined,
            "instructions": undefined,
            "domainKindName": undefined,
          },
          Immutable.Record {
            "name": "Data Fields",
            "container": undefined,
            "description": undefined,
            "domainURI": undefined,
            "domainId": null,
            "allowFileLinkProperties": false,
            "allowAttachmentProperties": false,
            "allowFlagProperties": true,
            "allowTimepointProperties": false,
            "showDefaultValueSettings": false,
            "defaultDefaultValueType": undefined,
            "defaultValueOptions": Immutable.List [],
            "fields": Immutable.List [],
            "indices": Immutable.List [],
            "domainException": undefined,
            "mandatoryFieldNames": Immutable.List [],
            "reservedFieldNames": Immutable.List [],
            "newDesignFields": undefined,
            "instructions": undefined,
            "domainKindName": undefined,
          },
        ],
        "editableResults": false,
        "editableRuns": false,
        "exception": undefined,
        "metadataInputFormatHelp": undefined,
        "moduleTransformScripts": undefined,
        "name": undefined,
        "plateMetadata": undefined,
        "protocolId": undefined,
        "protocolParameters": undefined,
        "protocolTransformScripts": undefined,
        "providerName": "General",
        "saveScriptFiles": false,
        "selectedDetectionMethod": undefined,
        "selectedMetadataInputFormat": undefined,
        "selectedPlateTemplate": undefined,
        "qcEnabled": undefined,
      }
    }
    onChange={[Function]}
    panelStatus="NONE"
    togglePanel={[Function]}
    useTheme={false}
    validate={false}
  >
    <BasePropertiesPanel
      appPropertiesOnly={false}
      asPanel={true}
      collapsed={false}
      controlledCollapse={false}
      headerId="assay-properties-hdr"
      helpTopic="defineAssaySchema"
      isValid={true}
      model={
        Immutable.Record {
          "allowBackgroundUpload": false,
          "allowEditableResults": false,
          "allowQCStates": false,
          "allowSpacesInPath": false,
          "allowTransformationScript": false,
          "allowPlateMetadata": false,
          "autoCopyTargetContainer": undefined,
          "autoCopyTargetContainerId": undefined,
          "availableDetectionMethods": undefined,
          "availableMetadataInputFormats": undefined,
          "availablePlateTemplates": undefined,
          "backgroundUpload": false,
          "description": undefined,
          "domains": Immutable.List [
            Immutable.Record {
              "name": "Batch Fields",
              "container": undefined,
              "description": undefined,
              "domainURI": undefined,
              "domainId": null,
              "allowFileLinkProperties": false,
              "allowAttachmentProperties": false,
              "allowFlagProperties": true,
              "allowTimepointProperties": false,
              "showDefaultValueSettings": false,
              "defaultDefaultValueType": undefined,
              "defaultValueOptions": Immutable.List [],
              "fields": Immutable.List [],
              "indices": Immutable.List [],
              "domainException": undefined,
              "mandatoryFieldNames": Immutable.List [],
              "reservedFieldNames": Immutable.List [],
              "newDesignFields": undefined,
              "instructions": undefined,
              "domainKindName": undefined,
            },
            Immutable.Record {
              "name": "Run Fields",
              "container": undefined,
              "description": undefined,
              "domainURI": undefined,
              "domainId": null,
              "allowFileLinkProperties": false,
              "allowAttachmentProperties": false,
              "allowFlagProperties": true,
              "allowTimepointProperties": false,
              "showDefaultValueSettings": false,
              "defaultDefaultValueType": undefined,
              "defaultValueOptions": Immutable.List [],
              "fields": Immutable.List [],
              "indices": Immutable.List [],
              "domainException": undefined,
              "mandatoryFieldNames": Immutable.List [],
              "reservedFieldNames": Immutable.List [],
              "newDesignFields": undefined,
              "instructions": undefined,
              "domainKindName": undefined,
            },
            Immutable.Record {
              "name": "Data Fields",
              "container": undefined,
              "description": undefined,
              "domainURI": undefined,
              "domainId": null,
              "allowFileLinkProperties": false,
              "allowAttachmentProperties": false,
              "allowFlagProperties": true,
              "allowTimepointProperties": false,
              "showDefaultValueSettings": false,
              "defaultDefaultValueType": undefined,
              "defaultValueOptions": Immutable.List [],
              "fields": Immutable.List [],
              "indices": Immutable.List [],
              "domainException": undefined,
              "mandatoryFieldNames": Immutable.List [],
              "reservedFieldNames": Immutable.List [],
              "newDesignFields": undefined,
              "instructions": undefined,
              "domainKindName": undefined,
            },
          ],
          "editableResults": false,
          "editableRuns": false,
          "exception": undefined,
          "metadataInputFormatHelp": undefined,
          "moduleTransformScripts": undefined,
          "name": undefined,
          "plateMetadata": undefined,
          "protocolId": undefined,
          "protocolParameters": undefined,
          "protocolTransformScripts": undefined,
          "providerName": "General",
          "saveScriptFiles": false,
          "selectedDetectionMethod": undefined,
          "selectedMetadataInputFormat": undefined,
          "selectedPlateTemplate": undefined,
          "qcEnabled": undefined,
        }
      }
      onChange={[Function]}
      panelStatus="NONE"
      title="Assay Properties"
      togglePanel={[Function]}
      updateValidStatus={[Function]}
      useTheme={false}
      validate={false}
    >
      <ForwardRef
        className="domain-form-panel domain-panel-no-theme"
        expanded={true}
        onToggle={[Function]}
      >
        <Uncontrolled(Panel)
          className="domain-form-panel domain-panel-no-theme"
          expanded={true}
          innerRef={null}
          onToggle={[Function]}
        >
          <Panel
            bsClass="panel"
            bsStyle="default"
            className="domain-form-panel domain-panel-no-theme"
            expanded={true}
            onToggle={[Function]}
          >
            <div
              className="domain-form-panel domain-panel-no-theme panel panel-default"
            >
              <CollapsiblePanelHeader
                collapsed={false}
                controlledCollapse={false}
                iconHelpMsg="Contains errors or is missing required values."
                id="assay-properties-hdr"
                isValid={true}
                panelStatus="NONE"
                title="Assay Properties"
                togglePanel={[Function]}
                useTheme={false}
              >
                <PanelHeading
                  bsClass="panel"
                  className="domain-panel-header domain-panel-header-expanded domain-panel-header-no-theme"
                  componentClass="div"
                  id="assay-properties-hdr"
                  onClick={[Function]}
                >
                  <div
                    className="domain-panel-header domain-panel-header-expanded domain-panel-header-no-theme panel-heading"
                    id="assay-properties-hdr"
                    onClick={[Function]}
                  >
                    <span
                      className="domain-panel-title"
                    >
                      Assay Properties
                    </span>
                  </div>
                </PanelHeading>
              </CollapsiblePanelHeader>
              <PanelBody
                bsClass="panel"
                collapsible={false}
              >
                <div
                  className="panel-body"
                >
                  <HelpTopicURL
                    helpTopic="defineAssaySchema"
                    nounPlural="assays"
                  >
                    <Row
                      bsClass="row"
                      componentClass="div"
                    >
                      <div
                        className="row"
                      >
                        <Col
                          bsClass="col"
                          componentClass="div"
                          xs={12}
                        >
                          <div
                            className="col-xs-12"
                          >
                            <a
                              className="domain-field-float-right"
                              href="https://www.labkey.org/Documentation/wiki-page.view?name=defineAssaySchema"
                              target="_blank"
                            >
                              Learn more about designing assays
                            </a>
                          </div>
                        </Col>
                      </div>
                    </Row>
                  </HelpTopicURL>
                  <Form
                    bsClass="form"
                    componentClass="form"
                    horizontal={false}
                    inline={false}
                  >
                    <form
                      className=""
                    >
                      <Col
                        bsClass="col"
                        componentClass="div"
                        lg={6}
                        xs={12}
                      >
                        <div
                          className="col-lg-6 col-xs-12"
                        >
                          <div
                            className="domain-field-padding-bottom"
                          >
                            <SectionHeading
                              title="Basic Properties"
                            >
                              <div
                                className="domain-field-section-heading"
                              >
                                Basic Properties
                              </div>
                            </SectionHeading>
                            <NameInput
                              appPropertiesOnly={false}
                              model={
                                Immutable.Record {
                                  "allowBackgroundUpload": false,
                                  "allowEditableResults": false,
                                  "allowQCStates": false,
                                  "allowSpacesInPath": false,
                                  "allowTransformationScript": false,
                                  "allowPlateMetadata": false,
                                  "autoCopyTargetContainer": undefined,
                                  "autoCopyTargetContainerId": undefined,
                                  "availableDetectionMethods": undefined,
                                  "availableMetadataInputFormats": undefined,
                                  "availablePlateTemplates": undefined,
                                  "backgroundUpload": false,
                                  "description": undefined,
                                  "domains": Immutable.List [
                                    Immutable.Record {
                                      "name": "Batch Fields",
                                      "container": undefined,
                                      "description": undefined,
                                      "domainURI": undefined,
                                      "domainId": null,
                                      "allowFileLinkProperties": false,
                                      "allowAttachmentProperties": false,
                                      "allowFlagProperties": true,
                                      "allowTimepointProperties": false,
                                      "showDefaultValueSettings": false,
                                      "defaultDefaultValueType": undefined,
                                      "defaultValueOptions": Immutable.List [],
                                      "fields": Immutable.List [],
                                      "indices": Immutable.List [],
                                      "domainException": undefined,
                                      "mandatoryFieldNames": Immutable.List [],
                                      "reservedFieldNames": Immutable.List [],
                                      "newDesignFields": undefined,
                                      "instructions": undefined,
                                      "domainKindName": undefined,
                                    },
                                    Immutable.Record {
                                      "name": "Run Fields",
                                      "container": undefined,
                                      "description": undefined,
                                      "domainURI": undefined,
                                      "domainId": null,
                                      "allowFileLinkProperties": false,
                                      "allowAttachmentProperties": false,
                                      "allowFlagProperties": true,
                                      "allowTimepointProperties": false,
                                      "showDefaultValueSettings": false,
                                      "defaultDefaultValueType": undefined,
                                      "defaultValueOptions": Immutable.List [],
                                      "fields": Immutable.List [],
                                      "indices": Immutable.List [],
                                      "domainException": undefined,
                                      "mandatoryFieldNames": Immutable.List [],
                                      "reservedFieldNames": Immutable.List [],
                                      "newDesignFields": undefined,
                                      "instructions": undefined,
                                      "domainKindName": undefined,
                                    },
                                    Immutable.Record {
                                      "name": "Data Fields",
                                      "container": undefined,
                                      "description": undefined,
                                      "domainURI": undefined,
                                      "domainId": null,
                                      "allowFileLinkProperties": false,
                                      "allowAttachmentProperties": false,
                                      "allowFlagProperties": true,
                                      "allowTimepointProperties": false,
                                      "showDefaultValueSettings": false,
                                      "defaultDefaultValueType": undefined,
                                      "defaultValueOptions": Immutable.List [],
                                      "fields": Immutable.List [],
                                      "indices": Immutable.List [],
                                      "domainException": undefined,
                                      "mandatoryFieldNames": Immutable.List [],
                                      "reservedFieldNames": Immutable.List [],
                                      "newDesignFields": undefined,
                                      "instructions": undefined,
                                      "domainKindName": undefined,
                                    },
                                  ],
                                  "editableResults": false,
                                  "editableRuns": false,
                                  "exception": undefined,
                                  "metadataInputFormatHelp": undefined,
                                  "moduleTransformScripts": undefined,
                                  "name": undefined,
                                  "plateMetadata": undefined,
                                  "protocolId": undefined,
                                  "protocolParameters": undefined,
                                  "protocolTransformScripts": undefined,
                                  "providerName": "General",
                                  "saveScriptFiles": false,
                                  "selectedDetectionMethod": undefined,
                                  "selectedMetadataInputFormat": undefined,
                                  "selectedPlateTemplate": undefined,
                                  "qcEnabled": undefined,
                                }
                              }
                              onChange={[Function]}
                            >
                              <Component
                                appPropertiesOnly={false}
                                colSize={9}
                                helpTipBody={
                                  <p>
                                    The name for this assay design. Note that this can't be changed after the assay design is created.
                                  </p>
                                }
                                label="Name"
                                required={true}
                              >
                                <Row
                                  bsClass="row"
                                  className="margin-top"
                                  componentClass="div"
                                >
                                  <div
                                    className="margin-top row"
                                  >
                                    <Col
                                      bsClass="col"
                                      componentClass="div"
                                      lg={4}
                                      xs={3}
                                    >
                                      <div
                                        className="col-lg-4 col-xs-3"
                                      >
                                        <DomainFieldLabel
                                          helpTipBody={
                                            <p>
                                              The name for this assay design. Note that this can't be changed after the assay design is created.
                                            </p>
                                          }
                                          label="Name"
                                          required={true}
                                        >
                                          <span
                                            className="domain-no-wrap"
                                          >
                                            Name
                                            <Component
                                              customStyle={Object {}}
                                              id="tooltip"
                                              required={true}
                                              size="1x"
                                              title="Name"
                                            >
                                              <span
                                                className="label-help-target"
                                                onMouseOut={[Function]}
                                                onMouseOver={[Function]}
                                              >
                                                <FontAwesomeIcon
                                                  border={false}
                                                  className="label-help-icon"
                                                  fixedWidth={false}
                                                  flip={null}
                                                  icon={
                                                    Object {
                                                      "icon": Array [
                                                        512,
                                                        512,
                                                        Array [],
                                                        "f059",
                                                        "M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z",
                                                      ],
                                                      "iconName": "question-circle",
                                                      "prefix": "fas",
                                                    }
                                                  }
                                                  inverse={false}
                                                  listItem={false}
                                                  mask={null}
                                                  pull={null}
                                                  pulse={false}
                                                  rotation={null}
                                                  size="1x"
                                                  spin={false}
                                                  style={Object {}}
                                                  swapOpacity={false}
                                                  symbol={false}
                                                  title=""
                                                  transform={null}
                                                >
                                                  <svg
                                                    aria-hidden="true"
                                                    className="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                                                    data-icon="question-circle"
                                                    data-prefix="fas"
                                                    focusable="false"
                                                    role="img"
                                                    style={Object {}}
                                                    viewBox="0 0 512 512"
                                                    xmlns="http://www.w3.org/2000/svg"
                                                  >
                                                    <path
                                                      d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                      fill="currentColor"
                                                      style={Object {}}
                                                    />
                                                  </svg>
                                                </FontAwesomeIcon>
                                                <Overlay
                                                  animation={[Function]}
                                                  placement="right"
                                                  rootClose={false}
                                                  show={false}
                                                >
                                                  <Overlay
                                                    placement="right"
                                                    rootClose={false}
                                                    show={false}
                                                    transition={[Function]}
                                                  />
                                                </Overlay>
                                              </span>
                                            </Component>
                                             *
                                          </span>
                                        </DomainFieldLabel>
                                      </div>
                                    </Col>
                                    <Col
                                      bsClass="col"
                                      componentClass="div"
                                      lg={8}
                                      xs={9}
                                    >
                                      <div
                                        className="col-lg-8 col-xs-9"
                                      >
                                        <FormControl
                                          bsClass="form-control"
                                          componentClass="input"
                                          disabled={false}
                                          id="assay-design-name"
                                          onChange={[Function]}
                                          placeholder="Enter a name for this assay"
                                          type="text"
                                          value=""
                                        >
                                          <input
                                            className="form-control"
                                            disabled={false}
                                            id="assay-design-name"
                                            onChange={[Function]}
                                            placeholder="Enter a name for this assay"
                                            type="text"
                                            value=""
                                          />
                                        </FormControl>
                                      </div>
                                    </Col>
                                  </div>
                                </Row>
                              </Component>
                            </NameInput>
                            <DescriptionInput
                              appPropertiesOnly={false}
                              model={
                                Immutable.Record {
                                  "allowBackgroundUpload": false,
                                  "allowEditableResults": false,
                                  "allowQCStates": false,
                                  "allowSpacesInPath": false,
                                  "allowTransformationScript": false,
                                  "allowPlateMetadata": false,
                                  "autoCopyTargetContainer": undefined,
                                  "autoCopyTargetContainerId": undefined,
                                  "availableDetectionMethods": undefined,
                                  "availableMetadataInputFormats": undefined,
                                  "availablePlateTemplates": undefined,
                                  "backgroundUpload": false,
                                  "description": undefined,
                                  "domains": Immutable.List [
                                    Immutable.Record {
                                      "name": "Batch Fields",
                                      "container": undefined,
                                      "description": undefined,
                                      "domainURI": undefined,
                                      "domainId": null,
                                      "allowFileLinkProperties": false,
                                      "allowAttachmentProperties": false,
                                      "allowFlagProperties": true,
                                      "allowTimepointProperties": false,
                                      "showDefaultValueSettings": false,
                                      "defaultDefaultValueType": undefined,
                                      "defaultValueOptions": Immutable.List [],
                                      "fields": Immutable.List [],
                                      "indices": Immutable.List [],
                                      "domainException": undefined,
                                      "mandatoryFieldNames": Immutable.List [],
                                      "reservedFieldNames": Immutable.List [],
                                      "newDesignFields": undefined,
                                      "instructions": undefined,
                                      "domainKindName": undefined,
                                    },
                                    Immutable.Record {
                                      "name": "Run Fields",
                                      "container": undefined,
                                      "description": undefined,
                                      "domainURI": undefined,
                                      "domainId": null,
                                      "allowFileLinkProperties": false,
                                      "allowAttachmentProperties": false,
                                      "allowFlagProperties": true,
                                      "allowTimepointProperties": false,
                                      "showDefaultValueSettings": false,
                                      "defaultDefaultValueType": undefined,
                                      "defaultValueOptions": Immutable.List [],
                                      "fields": Immutable.List [],
                                      "indices": Immutable.List [],
                                      "domainException": undefined,
                                      "mandatoryFieldNames": Immutable.List [],
                                      "reservedFieldNames": Immutable.List [],
                                      "newDesignFields": undefined,
                                      "instructions": undefined,
                                      "domainKindName": undefined,
                                    },
                                    Immutable.Record {
                                      "name": "Data Fields",
                                      "container": undefined,
                                      "description": undefined,
                                      "domainURI": undefined,
                                      "domainId": null,
                                      "allowFileLinkProperties": false,
                                      "allowAttachmentProperties": false,
                                      "allowFlagProperties": true,
                                      "allowTimepointProperties": false,
                                      "showDefaultValueSettings": false,
                                      "defaultDefaultValueType": undefined,
                                      "defaultValueOptions": Immutable.List [],
                                      "fields": Immutable.List [],
                                      "indices": Immutable.List [],
                                      "domainException": undefined,
                                      "mandatoryFieldNames": Immutable.List [],
                                      "reservedFieldNames": Immutable.List [],
                                      "newDesignFields": undefined,
                                      "instructions": undefined,
                                      "domainKindName": undefined,
                                    },
                                  ],
                                  "editableResults": false,
                                  "editableRuns": false,
                                  "exception": undefined,
                                  "metadataInputFormatHelp": undefined,
                                  "moduleTransformScripts": undefined,
                                  "name": undefined,
                                  "plateMetadata": undefined,
                                  "protocolId": undefined,
                                  "protocolParameters": undefined,
                                  "protocolTransformScripts": undefined,
                                  "providerName": "General",
                                  "saveScriptFiles": false,
                                  "selectedDetectionMethod": undefined,
                                  "selectedMetadataInputFormat": undefined,
                                  "selectedPlateTemplate": undefined,
                                  "qcEnabled": undefined,
                                }
                              }
                              onChange={[Function]}
                            >
                              <Component
                                appPropertiesOnly={false}
                                colSize={9}
                                helpTipBody={
                                  <p>
                                    A short description for this assay design.
                                  </p>
                                }
                                label="Description"
                              >
                                <Row
                                  bsClass="row"
                                  className="margin-top"
                                  componentClass="div"
                                >
                                  <div
                                    className="margin-top row"
                                  >
                                    <Col
                                      bsClass="col"
                                      componentClass="div"
                                      lg={4}
                                      xs={3}
                                    >
                                      <div
                                        className="col-lg-4 col-xs-3"
                                      >
                                        <DomainFieldLabel
                                          helpTipBody={
                                            <p>
                                              A short description for this assay design.
                                            </p>
                                          }
                                          label="Description"
                                        >
                                          <span
                                            className="domain-no-wrap"
                                          >
                                            Description
                                            <Component
                                              customStyle={Object {}}
                                              id="tooltip"
                                              size="1x"
                                              title="Description"
                                            >
                                              <span
                                                className="label-help-target"
                                                onMouseOut={[Function]}
                                                onMouseOver={[Function]}
                                              >
                                                <FontAwesomeIcon
                                                  border={false}
                                                  className="label-help-icon"
                                                  fixedWidth={false}
                                                  flip={null}
                                                  icon={
                                                    Object {
                                                      "icon": Array [
                                                        512,
                                                        512,
                                                        Array [],
                                                        "f059",
                                                        "M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z",
                                                      ],
                                                      "iconName": "question-circle",
                                                      "prefix": "fas",
                                                    }
                                                  }
                                                  inverse={false}
                                                  listItem={false}
                                                  mask={null}
                                                  pull={null}
                                                  pulse={false}
                                                  rotation={null}
                                                  size="1x"
                                                  spin={false}
                                                  style={Object {}}
                                                  swapOpacity={false}
                                                  symbol={false}
                                                  title=""
                                                  transform={null}
                                                >
                                                  <svg
                                                    aria-hidden="true"
                                                    className="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                                                    data-icon="question-circle"
                                                    data-prefix="fas"
                                                    focusable="false"
                                                    role="img"
                                                    style={Object {}}
                                                    viewBox="0 0 512 512"
                                                    xmlns="http://www.w3.org/2000/svg"
                                                  >
                                                    <path
                                                      d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                      fill="currentColor"
                                                      style={Object {}}
                                                    />
                                                  </svg>
                                                </FontAwesomeIcon>
                                                <Overlay
                                                  animation={[Function]}
                                                  placement="right"
                                                  rootClose={false}
                                                  show={false}
                                                >
                                                  <Overlay
                                                    placement="right"
                                                    rootClose={false}
                                                    show={false}
                                                    transition={[Function]}
                                                  />
                                                </Overlay>
                                              </span>
                                            </Component>
                                          </span>
                                        </DomainFieldLabel>
                                      </div>
                                    </Col>
                                    <Col
                                      bsClass="col"
                                      componentClass="div"
                                      lg={8}
                                      xs={9}
                                    >
                                      <div
                                        className="col-lg-8 col-xs-9"
                                      >
                                        <textarea
                                          className="form-control textarea-noresize"
                                          id="assay-design-description"
                                          onChange={[Function]}
                                          value=""
                                        />
                                      </div>
                                    </Col>
                                  </div>
                                </Row>
                              </Component>
                            </DescriptionInput>
                          </div>
                          <div
                            className="domain-field-padding-bottom"
                          >
                            <SectionHeading
                              title="Editing Settings"
                            >
                              <div
                                className="domain-field-section-heading"
                              >
                                Editing Settings
                              </div>
                            </SectionHeading>
                            <EditableRunsInput
                              appPropertiesOnly={false}
                              model={
                                Immutable.Record {
                                  "allowBackgroundUpload": false,
                                  "allowEditableResults": false,
                                  "allowQCStates": false,
                                  "allowSpacesInPath": false,
                                  "allowTransformationScript": false,
                                  "allowPlateMetadata": false,
                                  "autoCopyTargetContainer": undefined,
                                  "autoCopyTargetContainerId": undefined,
                                  "availableDetectionMethods": undefined,
                                  "availableMetadataInputFormats": undefined,
                                  "availablePlateTemplates": undefined,
                                  "backgroundUpload": false,
                                  "description": undefined,
                                  "domains": Immutable.List [
                                    Immutable.Record {
                                      "name": "Batch Fields",
                                      "container": undefined,
                                      "description": undefined,
                                      "domainURI": undefined,
                                      "domainId": null,
                                      "allowFileLinkProperties": false,
                                      "allowAttachmentProperties": false,
                                      "allowFlagProperties": true,
                                      "allowTimepointProperties": false,
                                      "showDefaultValueSettings": false,
                                      "defaultDefaultValueType": undefined,
                                      "defaultValueOptions": Immutable.List [],
                                      "fields": Immutable.List [],
                                      "indices": Immutable.List [],
                                      "domainException": undefined,
                                      "mandatoryFieldNames": Immutable.List [],
                                      "reservedFieldNames": Immutable.List [],
                                      "newDesignFields": undefined,
                                      "instructions": undefined,
                                      "domainKindName": undefined,
                                    },
                                    Immutable.Record {
                                      "name": "Run Fields",
                                      "container": undefined,
                                      "description": undefined,
                                      "domainURI": undefined,
                                      "domainId": null,
                                      "allowFileLinkProperties": false,
                                      "allowAttachmentProperties": false,
                                      "allowFlagProperties": true,
                                      "allowTimepointProperties": false,
                                      "showDefaultValueSettings": false,
                                      "defaultDefaultValueType": undefined,
                                      "defaultValueOptions": Immutable.List [],
                                      "fields": Immutable.List [],
                                      "indices": Immutable.List [],
                                      "domainException": undefined,
                                      "mandatoryFieldNames": Immutable.List [],
                                      "reservedFieldNames": Immutable.List [],
                                      "newDesignFields": undefined,
                                      "instructions": undefined,
                                      "domainKindName": undefined,
                                    },
                                    Immutable.Record {
                                      "name": "Data Fields",
                                      "container": undefined,
                                      "description": undefined,
                                      "domainURI": undefined,
                                      "domainId": null,
                                      "allowFileLinkProperties": false,
                                      "allowAttachmentProperties": false,
                                      "allowFlagProperties": true,
                                      "allowTimepointProperties": false,
                                      "showDefaultValueSettings": false,
                                      "defaultDefaultValueType": undefined,
                                      "defaultValueOptions": Immutable.List [],
                                      "fields": Immutable.List [],
                                      "indices": Immutable.List [],
                                      "domainException": undefined,
                                      "mandatoryFieldNames": Immutable.List [],
                                      "reservedFieldNames": Immutable.List [],
                                      "newDesignFields": undefined,
                                      "instructions": undefined,
                                      "domainKindName": undefined,
                                    },
                                  ],
                                  "editableResults": false,
                                  "editableRuns": false,
                                  "exception": undefined,
                                  "metadataInputFormatHelp": undefined,
                                  "moduleTransformScripts": undefined,
                                  "name": undefined,
                                  "plateMetadata": undefined,
                                  "protocolId": undefined,
                                  "protocolParameters": undefined,
                                  "protocolTransformScripts": undefined,
                                  "providerName": "General",
                                  "saveScriptFiles": false,
                                  "selectedDetectionMethod": undefined,
                                  "selectedMetadataInputFormat": undefined,
                                  "selectedPlateTemplate": undefined,
                                  "qcEnabled": undefined,
                                }
                              }
                              onChange={[Function]}
                            >
                              <Component
                                appPropertiesOnly={false}
                                colSize={9}
                                helpTipBody={
                                  <p>
                                    If enabled, users with sufficient permissions can edit values at the run level after the initial import is complete. These changes will be audited.
                                  </p>
                                }
                                label="Editable Runs"
                              >
                                <Row
                                  bsClass="row"
                                  className="margin-top"
                                  componentClass="div"
                                >
                                  <div
                                    className="margin-top row"
                                  >
                                    <Col
                                      bsClass="col"
                                      componentClass="div"
                                      lg={4}
                                      xs={3}
                                    >
                                      <div
                                        className="col-lg-4 col-xs-3"
                                      >
                                        <DomainFieldLabel
                                          helpTipBody={
                                            <p>
                                              If enabled, users with sufficient permissions can edit values at the run level after the initial import is complete. These changes will be audited.
                                            </p>
                                          }
                                          label="Editable Runs"
                                        >
                                          Editable 
                                          <span
                                            className="domain-no-wrap"
                                          >
                                            Runs
                                            <Component
                                              customStyle={Object {}}
                                              id="tooltip"
                                              size="1x"
                                              title="Editable Runs"
                                            >
                                              <span
                                                className="label-help-target"
                                                onMouseOut={[Function]}
                                                onMouseOver={[Function]}
                                              >
                                                <FontAwesomeIcon
                                                  border={false}
                                                  className="label-help-icon"
                                                  fixedWidth={false}
                                                  flip={null}
                                                  icon={
                                                    Object {
                                                      "icon": Array [
                                                        512,
                                                        512,
                                                        Array [],
                                                        "f059",
                                                        "M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z",
                                                      ],
                                                      "iconName": "question-circle",
                                                      "prefix": "fas",
                                                    }
                                                  }
                                                  inverse={false}
                                                  listItem={false}
                                                  mask={null}
                                                  pull={null}
                                                  pulse={false}
                                                  rotation={null}
                                                  size="1x"
                                                  spin={false}
                                                  style={Object {}}
                                                  swapOpacity={false}
                                                  symbol={false}
                                                  title=""
                                                  transform={null}
                                                >
                                                  <svg
                                                    aria-hidden="true"
                                                    className="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                                                    data-icon="question-circle"
                                                    data-prefix="fas"
                                                    focusable="false"
                                                    role="img"
                                                    style={Object {}}
                                                    viewBox="0 0 512 512"
                                                    xmlns="http://www.w3.org/2000/svg"
                                                  >
                                                    <path
                                                      d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                      fill="currentColor"
                                                      style={Object {}}
                                                    />
                                                  </svg>
                                                </FontAwesomeIcon>
                                                <Overlay
                                                  animation={[Function]}
                                                  placement="right"
                                                  rootClose={false}
                                                  show={false}
                                                >
                                                  <Overlay
                                                    placement="right"
                                                    rootClose={false}
                                                    show={false}
                                                    transition={[Function]}
                                                  />
                                                </Overlay>
                                              </span>
                                            </Component>
                                          </span>
                                        </DomainFieldLabel>
                                      </div>
                                    </Col>
                                    <Col
                                      bsClass="col"
                                      componentClass="div"
                                      lg={8}
                                      xs={9}
                                    >
                                      <div
                                        className="col-lg-8 col-xs-9"
                                      >
                                        <input
                                          checked={false}
                                          id="assay-design-editableRuns"
                                          onChange={[Function]}
                                          type="checkbox"
                                        />
                                      </div>
                                    </Col>
                                  </div>
                                </Row>
                              </Component>
                            </EditableRunsInput>
                          </div>
                        </div>
                      </Col>
                      <Col
                        bsClass="col"
                        componentClass="div"
                        lg={6}
                        xs={12}
                      >
                        <div
                          className="col-lg-6 col-xs-12"
                        >
                          <div
                            className="domain-field-padding-bottom"
                          >
                            <SectionHeading
                              title="Import Settings"
                            >
                              <div
                                className="domain-field-section-heading"
                              >
                                Import Settings
                              </div>
                            </SectionHeading>
                            <AutoLinkDataInput
                              model={
                                Immutable.Record {
                                  "allowBackgroundUpload": false,
                                  "allowEditableResults": false,
                                  "allowQCStates": false,
                                  "allowSpacesInPath": false,
                                  "allowTransformationScript": false,
                                  "allowPlateMetadata": false,
                                  "autoCopyTargetContainer": undefined,
                                  "autoCopyTargetContainerId": undefined,
                                  "availableDetectionMethods": undefined,
                                  "availableMetadataInputFormats": undefined,
                                  "availablePlateTemplates": undefined,
                                  "backgroundUpload": false,
                                  "description": undefined,
                                  "domains": Immutable.List [
                                    Immutable.Record {
                                      "name": "Batch Fields",
                                      "container": undefined,
                                      "description": undefined,
                                      "domainURI": undefined,
                                      "domainId": null,
                                      "allowFileLinkProperties": false,
                                      "allowAttachmentProperties": false,
                                      "allowFlagProperties": true,
                                      "allowTimepointProperties": false,
                                      "showDefaultValueSettings": false,
                                      "defaultDefaultValueType": undefined,
                                      "defaultValueOptions": Immutable.List [],
                                      "fields": Immutable.List [],
                                      "indices": Immutable.List [],
                                      "domainException": undefined,
                                      "mandatoryFieldNames": Immutable.List [],
                                      "reservedFieldNames": Immutable.List [],
                                      "newDesignFields": undefined,
                                      "instructions": undefined,
                                      "domainKindName": undefined,
                                    },
                                    Immutable.Record {
                                      "name": "Run Fields",
                                      "container": undefined,
                                      "description": undefined,
                                      "domainURI": undefined,
                                      "domainId": null,
                                      "allowFileLinkProperties": false,
                                      "allowAttachmentProperties": false,
                                      "allowFlagProperties": true,
                                      "allowTimepointProperties": false,
                                      "showDefaultValueSettings": false,
                                      "defaultDefaultValueType": undefined,
                                      "defaultValueOptions": Immutable.List [],
                                      "fields": Immutable.List [],
                                      "indices": Immutable.List [],
                                      "domainException": undefined,
                                      "mandatoryFieldNames": Immutable.List [],
                                      "reservedFieldNames": Immutable.List [],
                                      "newDesignFields": undefined,
                                      "instructions": undefined,
                                      "domainKindName": undefined,
                                    },
                                    Immutable.Record {
                                      "name": "Data Fields",
                                      "container": undefined,
                                      "description": undefined,
                                      "domainURI": undefined,
                                      "domainId": null,
                                      "allowFileLinkProperties": false,
                                      "allowAttachmentProperties": false,
                                      "allowFlagProperties": true,
                                      "allowTimepointProperties": false,
                                      "showDefaultValueSettings": false,
                                      "defaultDefaultValueType": undefined,
                                      "defaultValueOptions": Immutable.List [],
                                      "fields": Immutable.List [],
                                      "indices": Immutable.List [],
                                      "domainException": undefined,
                                      "mandatoryFieldNames": Immutable.List [],
                                      "reservedFieldNames": Immutable.List [],
                                      "newDesignFields": undefined,
                                      "instructions": undefined,
                                      "domainKindName": undefined,
                                    },
                                  ],
                                  "editableResults": false,
                                  "editableRuns": false,
                                  "exception": undefined,
                                  "metadataInputFormatHelp": undefined,
                                  "moduleTransformScripts": undefined,
                                  "name": undefined,
                                  "plateMetadata": undefined,
                                  "protocolId": undefined,
                                  "protocolParameters": undefined,
                                  "protocolTransformScripts": undefined,
                                  "providerName": "General",
                                  "saveScriptFiles": false,
                                  "selectedDetectionMethod": undefined,
                                  "selectedMetadataInputFormat": undefined,
                                  "selectedPlateTemplate": undefined,
                                  "qcEnabled": undefined,
                                }
                              }
                              onChange={[Function]}
                            >
                              <Component
                                colSize={9}
                                helpTipBody={
                                  <React.Fragment>
                                    <p>
                                      When new runs are imported, automatically link their data rows to the specified target study. Only rows that include subject and visit/date information will be linked.
                                    </p>
                                    <p>
                                      The user performing the import must have insert permission in the target study and the corresponding dataset.
                                    </p>
                                  </React.Fragment>
                                }
                                label="Auto-Link Data to Study"
                              >
                                <Row
                                  bsClass="row"
                                  className="margin-top"
                                  componentClass="div"
                                >
                                  <div
                                    className="margin-top row"
                                  >
                                    <Col
                                      bsClass="col"
                                      componentClass="div"
                                      lg={4}
                                      xs={3}
                                    >
                                      <div
                                        className="col-lg-4 col-xs-3"
                                      >
                                        <DomainFieldLabel
                                          helpTipBody={
                                            <React.Fragment>
                                              <p>
                                                When new runs are imported, automatically link their data rows to the specified target study. Only rows that include subject and visit/date information will be linked.
                                              </p>
                                              <p>
                                                The user performing the import must have insert permission in the target study and the corresponding dataset.
                                              </p>
                                            </React.Fragment>
                                          }
                                          label="Auto-Link Data to Study"
                                        >
                                          Auto-Link Data to 
                                          <span
                                            className="domain-no-wrap"
                                          >
                                            Study
                                            <Component
                                              customStyle={Object {}}
                                              id="tooltip"
                                              size="1x"
                                              title="Auto-Link Data to Study"
                                            >
                                              <span
                                                className="label-help-target"
                                                onMouseOut={[Function]}
                                                onMouseOver={[Function]}
                                              >
                                                <FontAwesomeIcon
                                                  border={false}
                                                  className="label-help-icon"
                                                  fixedWidth={false}
                                                  flip={null}
                                                  icon={
                                                    Object {
                                                      "icon": Array [
                                                        512,
                                                        512,
                                                        Array [],
                                                        "f059",
                                                        "M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z",
                                                      ],
                                                      "iconName": "question-circle",
                                                      "prefix": "fas",
                                                    }
                                                  }
                                                  inverse={false}
                                                  listItem={false}
                                                  mask={null}
                                                  pull={null}
                                                  pulse={false}
                                                  rotation={null}
                                                  size="1x"
                                                  spin={false}
                                                  style={Object {}}
                                                  swapOpacity={false}
                                                  symbol={false}
                                                  title=""
                                                  transform={null}
                                                >
                                                  <svg
                                                    aria-hidden="true"
                                                    className="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                                                    data-icon="question-circle"
                                                    data-prefix="fas"
                                                    focusable="false"
                                                    role="img"
                                                    style={Object {}}
                                                    viewBox="0 0 512 512"
                                                    xmlns="http://www.w3.org/2000/svg"
                                                  >
                                                    <path
                                                      d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                      fill="currentColor"
                                                      style={Object {}}
                                                    />
                                                  </svg>
                                                </FontAwesomeIcon>
                                                <Overlay
                                                  animation={[Function]}
                                                  placement="right"
                                                  rootClose={false}
                                                  show={false}
                                                >
                                                  <Overlay
                                                    placement="right"
                                                    rootClose={false}
                                                    show={false}
                                                    transition={[Function]}
                                                  />
                                                </Overlay>
                                              </span>
                                            </Component>
                                          </span>
                                        </DomainFieldLabel>
                                      </div>
                                    </Col>
                                    <Col
                                      bsClass="col"
                                      componentClass="div"
                                      lg={8}
                                      xs={9}
                                    >
                                      <div
                                        className="col-lg-8 col-xs-9"
                                      >
                                        <AutoLinkToStudyDropdown
                                          autoLinkTarget="assay-design-autoCopyTargetContainerId"
                                          onChange={[Function]}
                                        >
                                          <LoadingSpinner
                                            msg="Loading..."
                                            wrapperClassName=""
                                          >
                                            <span
                                              className=""
                                            >
                                              <i
                                                aria-hidden="true"
                                                className="fa fa-spinner fa-pulse"
                                              />
                                               
                                              Loading...
                                            </span>
                                          </LoadingSpinner>
                                        </AutoLinkToStudyDropdown>
                                      </div>
                                    </Col>
                                  </div>
                                </Row>
                              </Component>
                            </AutoLinkDataInput>
                          </div>
                        </div>
                      </Col>
                    </form>
                  </Form>
                </div>
              </PanelBody>
            </div>
          </Panel>
        </Uncontrolled(Panel)>
      </ForwardRef>
    </BasePropertiesPanel>
  </AssayPropertiesPanelImpl>
</ComponentWithDomainPropertiesPanelCollapse>
`;

exports[`AssayPropertiesPanel panelCls, initCollapsed, and markComplete 1`] = `
<ComponentWithDomainPropertiesPanelCollapse
  collapsed={false}
  controlledCollapse={false}
  initCollapsed={true}
  model={
    Immutable.Record {
      "allowBackgroundUpload": false,
      "allowEditableResults": false,
      "allowQCStates": false,
      "allowSpacesInPath": false,
      "allowTransformationScript": false,
      "allowPlateMetadata": false,
      "autoCopyTargetContainer": undefined,
      "autoCopyTargetContainerId": undefined,
      "availableDetectionMethods": undefined,
      "availableMetadataInputFormats": undefined,
      "availablePlateTemplates": undefined,
      "backgroundUpload": false,
      "description": undefined,
      "domains": Immutable.List [
        Immutable.Record {
          "name": "Batch Fields",
          "container": undefined,
          "description": undefined,
          "domainURI": undefined,
          "domainId": null,
          "allowFileLinkProperties": false,
          "allowAttachmentProperties": false,
          "allowFlagProperties": true,
          "allowTimepointProperties": false,
          "showDefaultValueSettings": false,
          "defaultDefaultValueType": undefined,
          "defaultValueOptions": Immutable.List [],
          "fields": Immutable.List [],
          "indices": Immutable.List [],
          "domainException": undefined,
          "mandatoryFieldNames": Immutable.List [],
          "reservedFieldNames": Immutable.List [],
          "newDesignFields": undefined,
          "instructions": undefined,
          "domainKindName": undefined,
        },
        Immutable.Record {
          "name": "Run Fields",
          "container": undefined,
          "description": undefined,
          "domainURI": undefined,
          "domainId": null,
          "allowFileLinkProperties": false,
          "allowAttachmentProperties": false,
          "allowFlagProperties": true,
          "allowTimepointProperties": false,
          "showDefaultValueSettings": false,
          "defaultDefaultValueType": undefined,
          "defaultValueOptions": Immutable.List [],
          "fields": Immutable.List [],
          "indices": Immutable.List [],
          "domainException": undefined,
          "mandatoryFieldNames": Immutable.List [],
          "reservedFieldNames": Immutable.List [],
          "newDesignFields": undefined,
          "instructions": undefined,
          "domainKindName": undefined,
        },
        Immutable.Record {
          "name": "Data Fields",
          "container": undefined,
          "description": undefined,
          "domainURI": undefined,
          "domainId": null,
          "allowFileLinkProperties": false,
          "allowAttachmentProperties": false,
          "allowFlagProperties": true,
          "allowTimepointProperties": false,
          "showDefaultValueSettings": false,
          "defaultDefaultValueType": undefined,
          "defaultValueOptions": Immutable.List [],
          "fields": Immutable.List [],
          "indices": Immutable.List [],
          "domainException": undefined,
          "mandatoryFieldNames": Immutable.List [],
          "reservedFieldNames": Immutable.List [],
          "newDesignFields": undefined,
          "instructions": undefined,
          "domainKindName": undefined,
        },
      ],
      "editableResults": false,
      "editableRuns": false,
      "exception": undefined,
      "metadataInputFormatHelp": undefined,
      "moduleTransformScripts": undefined,
      "name": undefined,
      "plateMetadata": undefined,
      "protocolId": undefined,
      "protocolParameters": undefined,
      "protocolTransformScripts": undefined,
      "providerName": "General",
      "saveScriptFiles": false,
      "selectedDetectionMethod": undefined,
      "selectedMetadataInputFormat": undefined,
      "selectedPlateTemplate": undefined,
      "qcEnabled": undefined,
    }
  }
  onChange={[Function]}
  panelStatus="NONE"
  useTheme={false}
  validate={false}
>
  <AssayPropertiesPanelImpl
    appPropertiesOnly={false}
    asPanel={true}
    collapsed={false}
    controlledCollapse={false}
    helpTopic="defineAssaySchema"
    model={
      Immutable.Record {
        "allowBackgroundUpload": false,
        "allowEditableResults": false,
        "allowQCStates": false,
        "allowSpacesInPath": false,
        "allowTransformationScript": false,
        "allowPlateMetadata": false,
        "autoCopyTargetContainer": undefined,
        "autoCopyTargetContainerId": undefined,
        "availableDetectionMethods": undefined,
        "availableMetadataInputFormats": undefined,
        "availablePlateTemplates": undefined,
        "backgroundUpload": false,
        "description": undefined,
        "domains": Immutable.List [
          Immutable.Record {
            "name": "Batch Fields",
            "container": undefined,
            "description": undefined,
            "domainURI": undefined,
            "domainId": null,
            "allowFileLinkProperties": false,
            "allowAttachmentProperties": false,
            "allowFlagProperties": true,
            "allowTimepointProperties": false,
            "showDefaultValueSettings": false,
            "defaultDefaultValueType": undefined,
            "defaultValueOptions": Immutable.List [],
            "fields": Immutable.List [],
            "indices": Immutable.List [],
            "domainException": undefined,
            "mandatoryFieldNames": Immutable.List [],
            "reservedFieldNames": Immutable.List [],
            "newDesignFields": undefined,
            "instructions": undefined,
            "domainKindName": undefined,
          },
          Immutable.Record {
            "name": "Run Fields",
            "container": undefined,
            "description": undefined,
            "domainURI": undefined,
            "domainId": null,
            "allowFileLinkProperties": false,
            "allowAttachmentProperties": false,
            "allowFlagProperties": true,
            "allowTimepointProperties": false,
            "showDefaultValueSettings": false,
            "defaultDefaultValueType": undefined,
            "defaultValueOptions": Immutable.List [],
            "fields": Immutable.List [],
            "indices": Immutable.List [],
            "domainException": undefined,
            "mandatoryFieldNames": Immutable.List [],
            "reservedFieldNames": Immutable.List [],
            "newDesignFields": undefined,
            "instructions": undefined,
            "domainKindName": undefined,
          },
          Immutable.Record {
            "name": "Data Fields",
            "container": undefined,
            "description": undefined,
            "domainURI": undefined,
            "domainId": null,
            "allowFileLinkProperties": false,
            "allowAttachmentProperties": false,
            "allowFlagProperties": true,
            "allowTimepointProperties": false,
            "showDefaultValueSettings": false,
            "defaultDefaultValueType": undefined,
            "defaultValueOptions": Immutable.List [],
            "fields": Immutable.List [],
            "indices": Immutable.List [],
            "domainException": undefined,
            "mandatoryFieldNames": Immutable.List [],
            "reservedFieldNames": Immutable.List [],
            "newDesignFields": undefined,
            "instructions": undefined,
            "domainKindName": undefined,
          },
        ],
        "editableResults": false,
        "editableRuns": false,
        "exception": undefined,
        "metadataInputFormatHelp": undefined,
        "moduleTransformScripts": undefined,
        "name": undefined,
        "plateMetadata": undefined,
        "protocolId": undefined,
        "protocolParameters": undefined,
        "protocolTransformScripts": undefined,
        "providerName": "General",
        "saveScriptFiles": false,
        "selectedDetectionMethod": undefined,
        "selectedMetadataInputFormat": undefined,
        "selectedPlateTemplate": undefined,
        "qcEnabled": undefined,
      }
    }
    onChange={[Function]}
    panelStatus="NONE"
    togglePanel={[Function]}
    useTheme={false}
    validate={false}
  >
    <BasePropertiesPanel
      appPropertiesOnly={false}
      asPanel={true}
      collapsed={false}
      controlledCollapse={false}
      headerId="assay-properties-hdr"
      helpTopic="defineAssaySchema"
      isValid={true}
      model={
        Immutable.Record {
          "allowBackgroundUpload": false,
          "allowEditableResults": false,
          "allowQCStates": false,
          "allowSpacesInPath": false,
          "allowTransformationScript": false,
          "allowPlateMetadata": false,
          "autoCopyTargetContainer": undefined,
          "autoCopyTargetContainerId": undefined,
          "availableDetectionMethods": undefined,
          "availableMetadataInputFormats": undefined,
          "availablePlateTemplates": undefined,
          "backgroundUpload": false,
          "description": undefined,
          "domains": Immutable.List [
            Immutable.Record {
              "name": "Batch Fields",
              "container": undefined,
              "description": undefined,
              "domainURI": undefined,
              "domainId": null,
              "allowFileLinkProperties": false,
              "allowAttachmentProperties": false,
              "allowFlagProperties": true,
              "allowTimepointProperties": false,
              "showDefaultValueSettings": false,
              "defaultDefaultValueType": undefined,
              "defaultValueOptions": Immutable.List [],
              "fields": Immutable.List [],
              "indices": Immutable.List [],
              "domainException": undefined,
              "mandatoryFieldNames": Immutable.List [],
              "reservedFieldNames": Immutable.List [],
              "newDesignFields": undefined,
              "instructions": undefined,
              "domainKindName": undefined,
            },
            Immutable.Record {
              "name": "Run Fields",
              "container": undefined,
              "description": undefined,
              "domainURI": undefined,
              "domainId": null,
              "allowFileLinkProperties": false,
              "allowAttachmentProperties": false,
              "allowFlagProperties": true,
              "allowTimepointProperties": false,
              "showDefaultValueSettings": false,
              "defaultDefaultValueType": undefined,
              "defaultValueOptions": Immutable.List [],
              "fields": Immutable.List [],
              "indices": Immutable.List [],
              "domainException": undefined,
              "mandatoryFieldNames": Immutable.List [],
              "reservedFieldNames": Immutable.List [],
              "newDesignFields": undefined,
              "instructions": undefined,
              "domainKindName": undefined,
            },
            Immutable.Record {
              "name": "Data Fields",
              "container": undefined,
              "description": undefined,
              "domainURI": undefined,
              "domainId": null,
              "allowFileLinkProperties": false,
              "allowAttachmentProperties": false,
              "allowFlagProperties": true,
              "allowTimepointProperties": false,
              "showDefaultValueSettings": false,
              "defaultDefaultValueType": undefined,
              "defaultValueOptions": Immutable.List [],
              "fields": Immutable.List [],
              "indices": Immutable.List [],
              "domainException": undefined,
              "mandatoryFieldNames": Immutable.List [],
              "reservedFieldNames": Immutable.List [],
              "newDesignFields": undefined,
              "instructions": undefined,
              "domainKindName": undefined,
            },
          ],
          "editableResults": false,
          "editableRuns": false,
          "exception": undefined,
          "metadataInputFormatHelp": undefined,
          "moduleTransformScripts": undefined,
          "name": undefined,
          "plateMetadata": undefined,
          "protocolId": undefined,
          "protocolParameters": undefined,
          "protocolTransformScripts": undefined,
          "providerName": "General",
          "saveScriptFiles": false,
          "selectedDetectionMethod": undefined,
          "selectedMetadataInputFormat": undefined,
          "selectedPlateTemplate": undefined,
          "qcEnabled": undefined,
        }
      }
      onChange={[Function]}
      panelStatus="NONE"
      title="Assay Properties"
      togglePanel={[Function]}
      updateValidStatus={[Function]}
      useTheme={false}
      validate={false}
    >
      <ForwardRef
        className="domain-form-panel domain-panel-no-theme"
        expanded={true}
        onToggle={[Function]}
      >
        <Uncontrolled(Panel)
          className="domain-form-panel domain-panel-no-theme"
          expanded={true}
          innerRef={null}
          onToggle={[Function]}
        >
          <Panel
            bsClass="panel"
            bsStyle="default"
            className="domain-form-panel domain-panel-no-theme"
            expanded={true}
            onToggle={[Function]}
          >
            <div
              className="domain-form-panel domain-panel-no-theme panel panel-default"
            >
              <CollapsiblePanelHeader
                collapsed={false}
                controlledCollapse={false}
                iconHelpMsg="Contains errors or is missing required values."
                id="assay-properties-hdr"
                isValid={true}
                panelStatus="NONE"
                title="Assay Properties"
                togglePanel={[Function]}
                useTheme={false}
              >
                <PanelHeading
                  bsClass="panel"
                  className="domain-panel-header domain-panel-header-expanded domain-panel-header-no-theme"
                  componentClass="div"
                  id="assay-properties-hdr"
                  onClick={[Function]}
                >
                  <div
                    className="domain-panel-header domain-panel-header-expanded domain-panel-header-no-theme panel-heading"
                    id="assay-properties-hdr"
                    onClick={[Function]}
                  >
                    <span
                      className="domain-panel-title"
                    >
                      Assay Properties
                    </span>
                  </div>
                </PanelHeading>
              </CollapsiblePanelHeader>
              <PanelBody
                bsClass="panel"
                collapsible={false}
              >
                <div
                  className="panel-body"
                >
                  <HelpTopicURL
                    helpTopic="defineAssaySchema"
                    nounPlural="assays"
                  >
                    <Row
                      bsClass="row"
                      componentClass="div"
                    >
                      <div
                        className="row"
                      >
                        <Col
                          bsClass="col"
                          componentClass="div"
                          xs={12}
                        >
                          <div
                            className="col-xs-12"
                          >
                            <a
                              className="domain-field-float-right"
                              href="https://www.labkey.org/Documentation/wiki-page.view?name=defineAssaySchema"
                              target="_blank"
                            >
                              Learn more about designing assays
                            </a>
                          </div>
                        </Col>
                      </div>
                    </Row>
                  </HelpTopicURL>
                  <Form
                    bsClass="form"
                    componentClass="form"
                    horizontal={false}
                    inline={false}
                  >
                    <form
                      className=""
                    >
                      <Col
                        bsClass="col"
                        componentClass="div"
                        lg={6}
                        xs={12}
                      >
                        <div
                          className="col-lg-6 col-xs-12"
                        >
                          <div
                            className="domain-field-padding-bottom"
                          >
                            <SectionHeading
                              title="Basic Properties"
                            >
                              <div
                                className="domain-field-section-heading"
                              >
                                Basic Properties
                              </div>
                            </SectionHeading>
                            <NameInput
                              appPropertiesOnly={false}
                              model={
                                Immutable.Record {
                                  "allowBackgroundUpload": false,
                                  "allowEditableResults": false,
                                  "allowQCStates": false,
                                  "allowSpacesInPath": false,
                                  "allowTransformationScript": false,
                                  "allowPlateMetadata": false,
                                  "autoCopyTargetContainer": undefined,
                                  "autoCopyTargetContainerId": undefined,
                                  "availableDetectionMethods": undefined,
                                  "availableMetadataInputFormats": undefined,
                                  "availablePlateTemplates": undefined,
                                  "backgroundUpload": false,
                                  "description": undefined,
                                  "domains": Immutable.List [
                                    Immutable.Record {
                                      "name": "Batch Fields",
                                      "container": undefined,
                                      "description": undefined,
                                      "domainURI": undefined,
                                      "domainId": null,
                                      "allowFileLinkProperties": false,
                                      "allowAttachmentProperties": false,
                                      "allowFlagProperties": true,
                                      "allowTimepointProperties": false,
                                      "showDefaultValueSettings": false,
                                      "defaultDefaultValueType": undefined,
                                      "defaultValueOptions": Immutable.List [],
                                      "fields": Immutable.List [],
                                      "indices": Immutable.List [],
                                      "domainException": undefined,
                                      "mandatoryFieldNames": Immutable.List [],
                                      "reservedFieldNames": Immutable.List [],
                                      "newDesignFields": undefined,
                                      "instructions": undefined,
                                      "domainKindName": undefined,
                                    },
                                    Immutable.Record {
                                      "name": "Run Fields",
                                      "container": undefined,
                                      "description": undefined,
                                      "domainURI": undefined,
                                      "domainId": null,
                                      "allowFileLinkProperties": false,
                                      "allowAttachmentProperties": false,
                                      "allowFlagProperties": true,
                                      "allowTimepointProperties": false,
                                      "showDefaultValueSettings": false,
                                      "defaultDefaultValueType": undefined,
                                      "defaultValueOptions": Immutable.List [],
                                      "fields": Immutable.List [],
                                      "indices": Immutable.List [],
                                      "domainException": undefined,
                                      "mandatoryFieldNames": Immutable.List [],
                                      "reservedFieldNames": Immutable.List [],
                                      "newDesignFields": undefined,
                                      "instructions": undefined,
                                      "domainKindName": undefined,
                                    },
                                    Immutable.Record {
                                      "name": "Data Fields",
                                      "container": undefined,
                                      "description": undefined,
                                      "domainURI": undefined,
                                      "domainId": null,
                                      "allowFileLinkProperties": false,
                                      "allowAttachmentProperties": false,
                                      "allowFlagProperties": true,
                                      "allowTimepointProperties": false,
                                      "showDefaultValueSettings": false,
                                      "defaultDefaultValueType": undefined,
                                      "defaultValueOptions": Immutable.List [],
                                      "fields": Immutable.List [],
                                      "indices": Immutable.List [],
                                      "domainException": undefined,
                                      "mandatoryFieldNames": Immutable.List [],
                                      "reservedFieldNames": Immutable.List [],
                                      "newDesignFields": undefined,
                                      "instructions": undefined,
                                      "domainKindName": undefined,
                                    },
                                  ],
                                  "editableResults": false,
                                  "editableRuns": false,
                                  "exception": undefined,
                                  "metadataInputFormatHelp": undefined,
                                  "moduleTransformScripts": undefined,
                                  "name": undefined,
                                  "plateMetadata": undefined,
                                  "protocolId": undefined,
                                  "protocolParameters": undefined,
                                  "protocolTransformScripts": undefined,
                                  "providerName": "General",
                                  "saveScriptFiles": false,
                                  "selectedDetectionMethod": undefined,
                                  "selectedMetadataInputFormat": undefined,
                                  "selectedPlateTemplate": undefined,
                                  "qcEnabled": undefined,
                                }
                              }
                              onChange={[Function]}
                            >
                              <Component
                                appPropertiesOnly={false}
                                colSize={9}
                                helpTipBody={
                                  <p>
                                    The name for this assay design. Note that this can't be changed after the assay design is created.
                                  </p>
                                }
                                label="Name"
                                required={true}
                              >
                                <Row
                                  bsClass="row"
                                  className="margin-top"
                                  componentClass="div"
                                >
                                  <div
                                    className="margin-top row"
                                  >
                                    <Col
                                      bsClass="col"
                                      componentClass="div"
                                      lg={4}
                                      xs={3}
                                    >
                                      <div
                                        className="col-lg-4 col-xs-3"
                                      >
                                        <DomainFieldLabel
                                          helpTipBody={
                                            <p>
                                              The name for this assay design. Note that this can't be changed after the assay design is created.
                                            </p>
                                          }
                                          label="Name"
                                          required={true}
                                        >
                                          <span
                                            className="domain-no-wrap"
                                          >
                                            Name
                                            <Component
                                              customStyle={Object {}}
                                              id="tooltip"
                                              required={true}
                                              size="1x"
                                              title="Name"
                                            >
                                              <span
                                                className="label-help-target"
                                                onMouseOut={[Function]}
                                                onMouseOver={[Function]}
                                              >
                                                <FontAwesomeIcon
                                                  border={false}
                                                  className="label-help-icon"
                                                  fixedWidth={false}
                                                  flip={null}
                                                  icon={
                                                    Object {
                                                      "icon": Array [
                                                        512,
                                                        512,
                                                        Array [],
                                                        "f059",
                                                        "M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z",
                                                      ],
                                                      "iconName": "question-circle",
                                                      "prefix": "fas",
                                                    }
                                                  }
                                                  inverse={false}
                                                  listItem={false}
                                                  mask={null}
                                                  pull={null}
                                                  pulse={false}
                                                  rotation={null}
                                                  size="1x"
                                                  spin={false}
                                                  style={Object {}}
                                                  swapOpacity={false}
                                                  symbol={false}
                                                  title=""
                                                  transform={null}
                                                >
                                                  <svg
                                                    aria-hidden="true"
                                                    className="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                                                    data-icon="question-circle"
                                                    data-prefix="fas"
                                                    focusable="false"
                                                    role="img"
                                                    style={Object {}}
                                                    viewBox="0 0 512 512"
                                                    xmlns="http://www.w3.org/2000/svg"
                                                  >
                                                    <path
                                                      d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                      fill="currentColor"
                                                      style={Object {}}
                                                    />
                                                  </svg>
                                                </FontAwesomeIcon>
                                                <Overlay
                                                  animation={[Function]}
                                                  placement="right"
                                                  rootClose={false}
                                                  show={false}
                                                >
                                                  <Overlay
                                                    placement="right"
                                                    rootClose={false}
                                                    show={false}
                                                    transition={[Function]}
                                                  />
                                                </Overlay>
                                              </span>
                                            </Component>
                                             *
                                          </span>
                                        </DomainFieldLabel>
                                      </div>
                                    </Col>
                                    <Col
                                      bsClass="col"
                                      componentClass="div"
                                      lg={8}
                                      xs={9}
                                    >
                                      <div
                                        className="col-lg-8 col-xs-9"
                                      >
                                        <FormControl
                                          bsClass="form-control"
                                          componentClass="input"
                                          disabled={false}
                                          id="assay-design-name"
                                          onChange={[Function]}
                                          placeholder="Enter a name for this assay"
                                          type="text"
                                          value=""
                                        >
                                          <input
                                            className="form-control"
                                            disabled={false}
                                            id="assay-design-name"
                                            onChange={[Function]}
                                            placeholder="Enter a name for this assay"
                                            type="text"
                                            value=""
                                          />
                                        </FormControl>
                                      </div>
                                    </Col>
                                  </div>
                                </Row>
                              </Component>
                            </NameInput>
                            <DescriptionInput
                              appPropertiesOnly={false}
                              model={
                                Immutable.Record {
                                  "allowBackgroundUpload": false,
                                  "allowEditableResults": false,
                                  "allowQCStates": false,
                                  "allowSpacesInPath": false,
                                  "allowTransformationScript": false,
                                  "allowPlateMetadata": false,
                                  "autoCopyTargetContainer": undefined,
                                  "autoCopyTargetContainerId": undefined,
                                  "availableDetectionMethods": undefined,
                                  "availableMetadataInputFormats": undefined,
                                  "availablePlateTemplates": undefined,
                                  "backgroundUpload": false,
                                  "description": undefined,
                                  "domains": Immutable.List [
                                    Immutable.Record {
                                      "name": "Batch Fields",
                                      "container": undefined,
                                      "description": undefined,
                                      "domainURI": undefined,
                                      "domainId": null,
                                      "allowFileLinkProperties": false,
                                      "allowAttachmentProperties": false,
                                      "allowFlagProperties": true,
                                      "allowTimepointProperties": false,
                                      "showDefaultValueSettings": false,
                                      "defaultDefaultValueType": undefined,
                                      "defaultValueOptions": Immutable.List [],
                                      "fields": Immutable.List [],
                                      "indices": Immutable.List [],
                                      "domainException": undefined,
                                      "mandatoryFieldNames": Immutable.List [],
                                      "reservedFieldNames": Immutable.List [],
                                      "newDesignFields": undefined,
                                      "instructions": undefined,
                                      "domainKindName": undefined,
                                    },
                                    Immutable.Record {
                                      "name": "Run Fields",
                                      "container": undefined,
                                      "description": undefined,
                                      "domainURI": undefined,
                                      "domainId": null,
                                      "allowFileLinkProperties": false,
                                      "allowAttachmentProperties": false,
                                      "allowFlagProperties": true,
                                      "allowTimepointProperties": false,
                                      "showDefaultValueSettings": false,
                                      "defaultDefaultValueType": undefined,
                                      "defaultValueOptions": Immutable.List [],
                                      "fields": Immutable.List [],
                                      "indices": Immutable.List [],
                                      "domainException": undefined,
                                      "mandatoryFieldNames": Immutable.List [],
                                      "reservedFieldNames": Immutable.List [],
                                      "newDesignFields": undefined,
                                      "instructions": undefined,
                                      "domainKindName": undefined,
                                    },
                                    Immutable.Record {
                                      "name": "Data Fields",
                                      "container": undefined,
                                      "description": undefined,
                                      "domainURI": undefined,
                                      "domainId": null,
                                      "allowFileLinkProperties": false,
                                      "allowAttachmentProperties": false,
                                      "allowFlagProperties": true,
                                      "allowTimepointProperties": false,
                                      "showDefaultValueSettings": false,
                                      "defaultDefaultValueType": undefined,
                                      "defaultValueOptions": Immutable.List [],
                                      "fields": Immutable.List [],
                                      "indices": Immutable.List [],
                                      "domainException": undefined,
                                      "mandatoryFieldNames": Immutable.List [],
                                      "reservedFieldNames": Immutable.List [],
                                      "newDesignFields": undefined,
                                      "instructions": undefined,
                                      "domainKindName": undefined,
                                    },
                                  ],
                                  "editableResults": false,
                                  "editableRuns": false,
                                  "exception": undefined,
                                  "metadataInputFormatHelp": undefined,
                                  "moduleTransformScripts": undefined,
                                  "name": undefined,
                                  "plateMetadata": undefined,
                                  "protocolId": undefined,
                                  "protocolParameters": undefined,
                                  "protocolTransformScripts": undefined,
                                  "providerName": "General",
                                  "saveScriptFiles": false,
                                  "selectedDetectionMethod": undefined,
                                  "selectedMetadataInputFormat": undefined,
                                  "selectedPlateTemplate": undefined,
                                  "qcEnabled": undefined,
                                }
                              }
                              onChange={[Function]}
                            >
                              <Component
                                appPropertiesOnly={false}
                                colSize={9}
                                helpTipBody={
                                  <p>
                                    A short description for this assay design.
                                  </p>
                                }
                                label="Description"
                              >
                                <Row
                                  bsClass="row"
                                  className="margin-top"
                                  componentClass="div"
                                >
                                  <div
                                    className="margin-top row"
                                  >
                                    <Col
                                      bsClass="col"
                                      componentClass="div"
                                      lg={4}
                                      xs={3}
                                    >
                                      <div
                                        className="col-lg-4 col-xs-3"
                                      >
                                        <DomainFieldLabel
                                          helpTipBody={
                                            <p>
                                              A short description for this assay design.
                                            </p>
                                          }
                                          label="Description"
                                        >
                                          <span
                                            className="domain-no-wrap"
                                          >
                                            Description
                                            <Component
                                              customStyle={Object {}}
                                              id="tooltip"
                                              size="1x"
                                              title="Description"
                                            >
                                              <span
                                                className="label-help-target"
                                                onMouseOut={[Function]}
                                                onMouseOver={[Function]}
                                              >
                                                <FontAwesomeIcon
                                                  border={false}
                                                  className="label-help-icon"
                                                  fixedWidth={false}
                                                  flip={null}
                                                  icon={
                                                    Object {
                                                      "icon": Array [
                                                        512,
                                                        512,
                                                        Array [],
                                                        "f059",
                                                        "M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z",
                                                      ],
                                                      "iconName": "question-circle",
                                                      "prefix": "fas",
                                                    }
                                                  }
                                                  inverse={false}
                                                  listItem={false}
                                                  mask={null}
                                                  pull={null}
                                                  pulse={false}
                                                  rotation={null}
                                                  size="1x"
                                                  spin={false}
                                                  style={Object {}}
                                                  swapOpacity={false}
                                                  symbol={false}
                                                  title=""
                                                  transform={null}
                                                >
                                                  <svg
                                                    aria-hidden="true"
                                                    className="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                                                    data-icon="question-circle"
                                                    data-prefix="fas"
                                                    focusable="false"
                                                    role="img"
                                                    style={Object {}}
                                                    viewBox="0 0 512 512"
                                                    xmlns="http://www.w3.org/2000/svg"
                                                  >
                                                    <path
                                                      d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                      fill="currentColor"
                                                      style={Object {}}
                                                    />
                                                  </svg>
                                                </FontAwesomeIcon>
                                                <Overlay
                                                  animation={[Function]}
                                                  placement="right"
                                                  rootClose={false}
                                                  show={false}
                                                >
                                                  <Overlay
                                                    placement="right"
                                                    rootClose={false}
                                                    show={false}
                                                    transition={[Function]}
                                                  />
                                                </Overlay>
                                              </span>
                                            </Component>
                                          </span>
                                        </DomainFieldLabel>
                                      </div>
                                    </Col>
                                    <Col
                                      bsClass="col"
                                      componentClass="div"
                                      lg={8}
                                      xs={9}
                                    >
                                      <div
                                        className="col-lg-8 col-xs-9"
                                      >
                                        <textarea
                                          className="form-control textarea-noresize"
                                          id="assay-design-description"
                                          onChange={[Function]}
                                          value=""
                                        />
                                      </div>
                                    </Col>
                                  </div>
                                </Row>
                              </Component>
                            </DescriptionInput>
                          </div>
                          <div
                            className="domain-field-padding-bottom"
                          >
                            <SectionHeading
                              title="Editing Settings"
                            >
                              <div
                                className="domain-field-section-heading"
                              >
                                Editing Settings
                              </div>
                            </SectionHeading>
                            <EditableRunsInput
                              appPropertiesOnly={false}
                              model={
                                Immutable.Record {
                                  "allowBackgroundUpload": false,
                                  "allowEditableResults": false,
                                  "allowQCStates": false,
                                  "allowSpacesInPath": false,
                                  "allowTransformationScript": false,
                                  "allowPlateMetadata": false,
                                  "autoCopyTargetContainer": undefined,
                                  "autoCopyTargetContainerId": undefined,
                                  "availableDetectionMethods": undefined,
                                  "availableMetadataInputFormats": undefined,
                                  "availablePlateTemplates": undefined,
                                  "backgroundUpload": false,
                                  "description": undefined,
                                  "domains": Immutable.List [
                                    Immutable.Record {
                                      "name": "Batch Fields",
                                      "container": undefined,
                                      "description": undefined,
                                      "domainURI": undefined,
                                      "domainId": null,
                                      "allowFileLinkProperties": false,
                                      "allowAttachmentProperties": false,
                                      "allowFlagProperties": true,
                                      "allowTimepointProperties": false,
                                      "showDefaultValueSettings": false,
                                      "defaultDefaultValueType": undefined,
                                      "defaultValueOptions": Immutable.List [],
                                      "fields": Immutable.List [],
                                      "indices": Immutable.List [],
                                      "domainException": undefined,
                                      "mandatoryFieldNames": Immutable.List [],
                                      "reservedFieldNames": Immutable.List [],
                                      "newDesignFields": undefined,
                                      "instructions": undefined,
                                      "domainKindName": undefined,
                                    },
                                    Immutable.Record {
                                      "name": "Run Fields",
                                      "container": undefined,
                                      "description": undefined,
                                      "domainURI": undefined,
                                      "domainId": null,
                                      "allowFileLinkProperties": false,
                                      "allowAttachmentProperties": false,
                                      "allowFlagProperties": true,
                                      "allowTimepointProperties": false,
                                      "showDefaultValueSettings": false,
                                      "defaultDefaultValueType": undefined,
                                      "defaultValueOptions": Immutable.List [],
                                      "fields": Immutable.List [],
                                      "indices": Immutable.List [],
                                      "domainException": undefined,
                                      "mandatoryFieldNames": Immutable.List [],
                                      "reservedFieldNames": Immutable.List [],
                                      "newDesignFields": undefined,
                                      "instructions": undefined,
                                      "domainKindName": undefined,
                                    },
                                    Immutable.Record {
                                      "name": "Data Fields",
                                      "container": undefined,
                                      "description": undefined,
                                      "domainURI": undefined,
                                      "domainId": null,
                                      "allowFileLinkProperties": false,
                                      "allowAttachmentProperties": false,
                                      "allowFlagProperties": true,
                                      "allowTimepointProperties": false,
                                      "showDefaultValueSettings": false,
                                      "defaultDefaultValueType": undefined,
                                      "defaultValueOptions": Immutable.List [],
                                      "fields": Immutable.List [],
                                      "indices": Immutable.List [],
                                      "domainException": undefined,
                                      "mandatoryFieldNames": Immutable.List [],
                                      "reservedFieldNames": Immutable.List [],
                                      "newDesignFields": undefined,
                                      "instructions": undefined,
                                      "domainKindName": undefined,
                                    },
                                  ],
                                  "editableResults": false,
                                  "editableRuns": false,
                                  "exception": undefined,
                                  "metadataInputFormatHelp": undefined,
                                  "moduleTransformScripts": undefined,
                                  "name": undefined,
                                  "plateMetadata": undefined,
                                  "protocolId": undefined,
                                  "protocolParameters": undefined,
                                  "protocolTransformScripts": undefined,
                                  "providerName": "General",
                                  "saveScriptFiles": false,
                                  "selectedDetectionMethod": undefined,
                                  "selectedMetadataInputFormat": undefined,
                                  "selectedPlateTemplate": undefined,
                                  "qcEnabled": undefined,
                                }
                              }
                              onChange={[Function]}
                            >
                              <Component
                                appPropertiesOnly={false}
                                colSize={9}
                                helpTipBody={
                                  <p>
                                    If enabled, users with sufficient permissions can edit values at the run level after the initial import is complete. These changes will be audited.
                                  </p>
                                }
                                label="Editable Runs"
                              >
                                <Row
                                  bsClass="row"
                                  className="margin-top"
                                  componentClass="div"
                                >
                                  <div
                                    className="margin-top row"
                                  >
                                    <Col
                                      bsClass="col"
                                      componentClass="div"
                                      lg={4}
                                      xs={3}
                                    >
                                      <div
                                        className="col-lg-4 col-xs-3"
                                      >
                                        <DomainFieldLabel
                                          helpTipBody={
                                            <p>
                                              If enabled, users with sufficient permissions can edit values at the run level after the initial import is complete. These changes will be audited.
                                            </p>
                                          }
                                          label="Editable Runs"
                                        >
                                          Editable 
                                          <span
                                            className="domain-no-wrap"
                                          >
                                            Runs
                                            <Component
                                              customStyle={Object {}}
                                              id="tooltip"
                                              size="1x"
                                              title="Editable Runs"
                                            >
                                              <span
                                                className="label-help-target"
                                                onMouseOut={[Function]}
                                                onMouseOver={[Function]}
                                              >
                                                <FontAwesomeIcon
                                                  border={false}
                                                  className="label-help-icon"
                                                  fixedWidth={false}
                                                  flip={null}
                                                  icon={
                                                    Object {
                                                      "icon": Array [
                                                        512,
                                                        512,
                                                        Array [],
                                                        "f059",
                                                        "M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z",
                                                      ],
                                                      "iconName": "question-circle",
                                                      "prefix": "fas",
                                                    }
                                                  }
                                                  inverse={false}
                                                  listItem={false}
                                                  mask={null}
                                                  pull={null}
                                                  pulse={false}
                                                  rotation={null}
                                                  size="1x"
                                                  spin={false}
                                                  style={Object {}}
                                                  swapOpacity={false}
                                                  symbol={false}
                                                  title=""
                                                  transform={null}
                                                >
                                                  <svg
                                                    aria-hidden="true"
                                                    className="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                                                    data-icon="question-circle"
                                                    data-prefix="fas"
                                                    focusable="false"
                                                    role="img"
                                                    style={Object {}}
                                                    viewBox="0 0 512 512"
                                                    xmlns="http://www.w3.org/2000/svg"
                                                  >
                                                    <path
                                                      d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                      fill="currentColor"
                                                      style={Object {}}
                                                    />
                                                  </svg>
                                                </FontAwesomeIcon>
                                                <Overlay
                                                  animation={[Function]}
                                                  placement="right"
                                                  rootClose={false}
                                                  show={false}
                                                >
                                                  <Overlay
                                                    placement="right"
                                                    rootClose={false}
                                                    show={false}
                                                    transition={[Function]}
                                                  />
                                                </Overlay>
                                              </span>
                                            </Component>
                                          </span>
                                        </DomainFieldLabel>
                                      </div>
                                    </Col>
                                    <Col
                                      bsClass="col"
                                      componentClass="div"
                                      lg={8}
                                      xs={9}
                                    >
                                      <div
                                        className="col-lg-8 col-xs-9"
                                      >
                                        <input
                                          checked={false}
                                          id="assay-design-editableRuns"
                                          onChange={[Function]}
                                          type="checkbox"
                                        />
                                      </div>
                                    </Col>
                                  </div>
                                </Row>
                              </Component>
                            </EditableRunsInput>
                          </div>
                        </div>
                      </Col>
                      <Col
                        bsClass="col"
                        componentClass="div"
                        lg={6}
                        xs={12}
                      >
                        <div
                          className="col-lg-6 col-xs-12"
                        >
                          <div
                            className="domain-field-padding-bottom"
                          >
                            <SectionHeading
                              title="Import Settings"
                            >
                              <div
                                className="domain-field-section-heading"
                              >
                                Import Settings
                              </div>
                            </SectionHeading>
                            <AutoLinkDataInput
                              model={
                                Immutable.Record {
                                  "allowBackgroundUpload": false,
                                  "allowEditableResults": false,
                                  "allowQCStates": false,
                                  "allowSpacesInPath": false,
                                  "allowTransformationScript": false,
                                  "allowPlateMetadata": false,
                                  "autoCopyTargetContainer": undefined,
                                  "autoCopyTargetContainerId": undefined,
                                  "availableDetectionMethods": undefined,
                                  "availableMetadataInputFormats": undefined,
                                  "availablePlateTemplates": undefined,
                                  "backgroundUpload": false,
                                  "description": undefined,
                                  "domains": Immutable.List [
                                    Immutable.Record {
                                      "name": "Batch Fields",
                                      "container": undefined,
                                      "description": undefined,
                                      "domainURI": undefined,
                                      "domainId": null,
                                      "allowFileLinkProperties": false,
                                      "allowAttachmentProperties": false,
                                      "allowFlagProperties": true,
                                      "allowTimepointProperties": false,
                                      "showDefaultValueSettings": false,
                                      "defaultDefaultValueType": undefined,
                                      "defaultValueOptions": Immutable.List [],
                                      "fields": Immutable.List [],
                                      "indices": Immutable.List [],
                                      "domainException": undefined,
                                      "mandatoryFieldNames": Immutable.List [],
                                      "reservedFieldNames": Immutable.List [],
                                      "newDesignFields": undefined,
                                      "instructions": undefined,
                                      "domainKindName": undefined,
                                    },
                                    Immutable.Record {
                                      "name": "Run Fields",
                                      "container": undefined,
                                      "description": undefined,
                                      "domainURI": undefined,
                                      "domainId": null,
                                      "allowFileLinkProperties": false,
                                      "allowAttachmentProperties": false,
                                      "allowFlagProperties": true,
                                      "allowTimepointProperties": false,
                                      "showDefaultValueSettings": false,
                                      "defaultDefaultValueType": undefined,
                                      "defaultValueOptions": Immutable.List [],
                                      "fields": Immutable.List [],
                                      "indices": Immutable.List [],
                                      "domainException": undefined,
                                      "mandatoryFieldNames": Immutable.List [],
                                      "reservedFieldNames": Immutable.List [],
                                      "newDesignFields": undefined,
                                      "instructions": undefined,
                                      "domainKindName": undefined,
                                    },
                                    Immutable.Record {
                                      "name": "Data Fields",
                                      "container": undefined,
                                      "description": undefined,
                                      "domainURI": undefined,
                                      "domainId": null,
                                      "allowFileLinkProperties": false,
                                      "allowAttachmentProperties": false,
                                      "allowFlagProperties": true,
                                      "allowTimepointProperties": false,
                                      "showDefaultValueSettings": false,
                                      "defaultDefaultValueType": undefined,
                                      "defaultValueOptions": Immutable.List [],
                                      "fields": Immutable.List [],
                                      "indices": Immutable.List [],
                                      "domainException": undefined,
                                      "mandatoryFieldNames": Immutable.List [],
                                      "reservedFieldNames": Immutable.List [],
                                      "newDesignFields": undefined,
                                      "instructions": undefined,
                                      "domainKindName": undefined,
                                    },
                                  ],
                                  "editableResults": false,
                                  "editableRuns": false,
                                  "exception": undefined,
                                  "metadataInputFormatHelp": undefined,
                                  "moduleTransformScripts": undefined,
                                  "name": undefined,
                                  "plateMetadata": undefined,
                                  "protocolId": undefined,
                                  "protocolParameters": undefined,
                                  "protocolTransformScripts": undefined,
                                  "providerName": "General",
                                  "saveScriptFiles": false,
                                  "selectedDetectionMethod": undefined,
                                  "selectedMetadataInputFormat": undefined,
                                  "selectedPlateTemplate": undefined,
                                  "qcEnabled": undefined,
                                }
                              }
                              onChange={[Function]}
                            >
                              <Component
                                colSize={9}
                                helpTipBody={
                                  <React.Fragment>
                                    <p>
                                      When new runs are imported, automatically link their data rows to the specified target study. Only rows that include subject and visit/date information will be linked.
                                    </p>
                                    <p>
                                      The user performing the import must have insert permission in the target study and the corresponding dataset.
                                    </p>
                                  </React.Fragment>
                                }
                                label="Auto-Link Data to Study"
                              >
                                <Row
                                  bsClass="row"
                                  className="margin-top"
                                  componentClass="div"
                                >
                                  <div
                                    className="margin-top row"
                                  >
                                    <Col
                                      bsClass="col"
                                      componentClass="div"
                                      lg={4}
                                      xs={3}
                                    >
                                      <div
                                        className="col-lg-4 col-xs-3"
                                      >
                                        <DomainFieldLabel
                                          helpTipBody={
                                            <React.Fragment>
                                              <p>
                                                When new runs are imported, automatically link their data rows to the specified target study. Only rows that include subject and visit/date information will be linked.
                                              </p>
                                              <p>
                                                The user performing the import must have insert permission in the target study and the corresponding dataset.
                                              </p>
                                            </React.Fragment>
                                          }
                                          label="Auto-Link Data to Study"
                                        >
                                          Auto-Link Data to 
                                          <span
                                            className="domain-no-wrap"
                                          >
                                            Study
                                            <Component
                                              customStyle={Object {}}
                                              id="tooltip"
                                              size="1x"
                                              title="Auto-Link Data to Study"
                                            >
                                              <span
                                                className="label-help-target"
                                                onMouseOut={[Function]}
                                                onMouseOver={[Function]}
                                              >
                                                <FontAwesomeIcon
                                                  border={false}
                                                  className="label-help-icon"
                                                  fixedWidth={false}
                                                  flip={null}
                                                  icon={
                                                    Object {
                                                      "icon": Array [
                                                        512,
                                                        512,
                                                        Array [],
                                                        "f059",
                                                        "M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z",
                                                      ],
                                                      "iconName": "question-circle",
                                                      "prefix": "fas",
                                                    }
                                                  }
                                                  inverse={false}
                                                  listItem={false}
                                                  mask={null}
                                                  pull={null}
                                                  pulse={false}
                                                  rotation={null}
                                                  size="1x"
                                                  spin={false}
                                                  style={Object {}}
                                                  swapOpacity={false}
                                                  symbol={false}
                                                  title=""
                                                  transform={null}
                                                >
                                                  <svg
                                                    aria-hidden="true"
                                                    className="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                                                    data-icon="question-circle"
                                                    data-prefix="fas"
                                                    focusable="false"
                                                    role="img"
                                                    style={Object {}}
                                                    viewBox="0 0 512 512"
                                                    xmlns="http://www.w3.org/2000/svg"
                                                  >
                                                    <path
                                                      d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                      fill="currentColor"
                                                      style={Object {}}
                                                    />
                                                  </svg>
                                                </FontAwesomeIcon>
                                                <Overlay
                                                  animation={[Function]}
                                                  placement="right"
                                                  rootClose={false}
                                                  show={false}
                                                >
                                                  <Overlay
                                                    placement="right"
                                                    rootClose={false}
                                                    show={false}
                                                    transition={[Function]}
                                                  />
                                                </Overlay>
                                              </span>
                                            </Component>
                                          </span>
                                        </DomainFieldLabel>
                                      </div>
                                    </Col>
                                    <Col
                                      bsClass="col"
                                      componentClass="div"
                                      lg={8}
                                      xs={9}
                                    >
                                      <div
                                        className="col-lg-8 col-xs-9"
                                      >
                                        <AutoLinkToStudyDropdown
                                          autoLinkTarget="assay-design-autoCopyTargetContainerId"
                                          onChange={[Function]}
                                        >
                                          <LoadingSpinner
                                            msg="Loading..."
                                            wrapperClassName=""
                                          >
                                            <span
                                              className=""
                                            >
                                              <i
                                                aria-hidden="true"
                                                className="fa fa-spinner fa-pulse"
                                              />
                                               
                                              Loading...
                                            </span>
                                          </LoadingSpinner>
                                        </AutoLinkToStudyDropdown>
                                      </div>
                                    </Col>
                                  </div>
                                </Row>
                              </Component>
                            </AutoLinkDataInput>
                          </div>
                        </div>
                      </Col>
                    </form>
                  </Form>
                </div>
              </PanelBody>
            </div>
          </Panel>
        </Uncontrolled(Panel)>
      </ForwardRef>
    </BasePropertiesPanel>
  </AssayPropertiesPanelImpl>
</ComponentWithDomainPropertiesPanelCollapse>
`;

exports[`AssayPropertiesPanel with initial model 1`] = `
<ComponentWithDomainPropertiesPanelCollapse
  collapsed={false}
  controlledCollapse={false}
  initCollapsed={false}
  model={
    Immutable.Record {
      "allowBackgroundUpload": false,
      "allowEditableResults": false,
      "allowQCStates": false,
      "allowSpacesInPath": false,
      "allowTransformationScript": false,
      "allowPlateMetadata": false,
      "autoCopyTargetContainer": undefined,
      "autoCopyTargetContainerId": undefined,
      "availableDetectionMethods": undefined,
      "availableMetadataInputFormats": undefined,
      "availablePlateTemplates": undefined,
      "backgroundUpload": false,
      "description": "test description for this assay",
      "domains": Immutable.List [],
      "editableResults": true,
      "editableRuns": true,
      "exception": undefined,
      "metadataInputFormatHelp": undefined,
      "moduleTransformScripts": undefined,
      "name": "name should not be editable",
      "plateMetadata": undefined,
      "protocolId": 1,
      "protocolParameters": undefined,
      "protocolTransformScripts": undefined,
      "providerName": undefined,
      "saveScriptFiles": false,
      "selectedDetectionMethod": undefined,
      "selectedMetadataInputFormat": undefined,
      "selectedPlateTemplate": undefined,
      "qcEnabled": undefined,
    }
  }
  onChange={[Function]}
  panelStatus="NONE"
  useTheme={false}
  validate={false}
>
  <AssayPropertiesPanelImpl
    appPropertiesOnly={false}
    asPanel={true}
    collapsed={false}
    controlledCollapse={false}
    helpTopic="defineAssaySchema"
    model={
      Immutable.Record {
        "allowBackgroundUpload": false,
        "allowEditableResults": false,
        "allowQCStates": false,
        "allowSpacesInPath": false,
        "allowTransformationScript": false,
        "allowPlateMetadata": false,
        "autoCopyTargetContainer": undefined,
        "autoCopyTargetContainerId": undefined,
        "availableDetectionMethods": undefined,
        "availableMetadataInputFormats": undefined,
        "availablePlateTemplates": undefined,
        "backgroundUpload": false,
        "description": "test description for this assay",
        "domains": Immutable.List [],
        "editableResults": true,
        "editableRuns": true,
        "exception": undefined,
        "metadataInputFormatHelp": undefined,
        "moduleTransformScripts": undefined,
        "name": "name should not be editable",
        "plateMetadata": undefined,
        "protocolId": 1,
        "protocolParameters": undefined,
        "protocolTransformScripts": undefined,
        "providerName": undefined,
        "saveScriptFiles": false,
        "selectedDetectionMethod": undefined,
        "selectedMetadataInputFormat": undefined,
        "selectedPlateTemplate": undefined,
        "qcEnabled": undefined,
      }
    }
    onChange={[Function]}
    panelStatus="NONE"
    togglePanel={[Function]}
    useTheme={false}
    validate={false}
  >
    <BasePropertiesPanel
      appPropertiesOnly={false}
      asPanel={true}
      collapsed={false}
      controlledCollapse={false}
      headerId="assay-properties-hdr"
      helpTopic="defineAssaySchema"
      isValid={true}
      model={
        Immutable.Record {
          "allowBackgroundUpload": false,
          "allowEditableResults": false,
          "allowQCStates": false,
          "allowSpacesInPath": false,
          "allowTransformationScript": false,
          "allowPlateMetadata": false,
          "autoCopyTargetContainer": undefined,
          "autoCopyTargetContainerId": undefined,
          "availableDetectionMethods": undefined,
          "availableMetadataInputFormats": undefined,
          "availablePlateTemplates": undefined,
          "backgroundUpload": false,
          "description": "test description for this assay",
          "domains": Immutable.List [],
          "editableResults": true,
          "editableRuns": true,
          "exception": undefined,
          "metadataInputFormatHelp": undefined,
          "moduleTransformScripts": undefined,
          "name": "name should not be editable",
          "plateMetadata": undefined,
          "protocolId": 1,
          "protocolParameters": undefined,
          "protocolTransformScripts": undefined,
          "providerName": undefined,
          "saveScriptFiles": false,
          "selectedDetectionMethod": undefined,
          "selectedMetadataInputFormat": undefined,
          "selectedPlateTemplate": undefined,
          "qcEnabled": undefined,
        }
      }
      onChange={[Function]}
      panelStatus="NONE"
      title="Assay Properties"
      titlePrefix="name should not be editable"
      togglePanel={[Function]}
      updateValidStatus={[Function]}
      useTheme={false}
      validate={false}
    >
      <ForwardRef
        className="domain-form-panel domain-panel-no-theme"
        expanded={true}
        onToggle={[Function]}
      >
        <Uncontrolled(Panel)
          className="domain-form-panel domain-panel-no-theme"
          expanded={true}
          innerRef={null}
          onToggle={[Function]}
        >
          <Panel
            bsClass="panel"
            bsStyle="default"
            className="domain-form-panel domain-panel-no-theme"
            expanded={true}
            onToggle={[Function]}
          >
            <div
              className="domain-form-panel domain-panel-no-theme panel panel-default"
            >
              <CollapsiblePanelHeader
                collapsed={false}
                controlledCollapse={false}
                iconHelpMsg="Contains errors or is missing required values."
                id="assay-properties-hdr"
                isValid={true}
                panelStatus="NONE"
                title="Assay Properties"
                titlePrefix="name should not be editable"
                togglePanel={[Function]}
                useTheme={false}
              >
                <PanelHeading
                  bsClass="panel"
                  className="domain-panel-header domain-panel-header-expanded domain-panel-header-no-theme"
                  componentClass="div"
                  id="assay-properties-hdr"
                  onClick={[Function]}
                >
                  <div
                    className="domain-panel-header domain-panel-header-expanded domain-panel-header-no-theme panel-heading"
                    id="assay-properties-hdr"
                    onClick={[Function]}
                  >
                    <span
                      className="domain-panel-title"
                    >
                      name should not be editable - Assay Properties
                    </span>
                  </div>
                </PanelHeading>
              </CollapsiblePanelHeader>
              <PanelBody
                bsClass="panel"
                collapsible={false}
              >
                <div
                  className="panel-body"
                >
                  <HelpTopicURL
                    helpTopic="defineAssaySchema"
                    nounPlural="assays"
                  >
                    <Row
                      bsClass="row"
                      componentClass="div"
                    >
                      <div
                        className="row"
                      >
                        <Col
                          bsClass="col"
                          componentClass="div"
                          xs={12}
                        >
                          <div
                            className="col-xs-12"
                          >
                            <a
                              className="domain-field-float-right"
                              href="https://www.labkey.org/Documentation/wiki-page.view?name=defineAssaySchema"
                              target="_blank"
                            >
                              Learn more about designing assays
                            </a>
                          </div>
                        </Col>
                      </div>
                    </Row>
                  </HelpTopicURL>
                  <Form
                    bsClass="form"
                    componentClass="form"
                    horizontal={false}
                    inline={false}
                  >
                    <form
                      className=""
                    >
                      <Col
                        bsClass="col"
                        componentClass="div"
                        lg={6}
                        xs={12}
                      >
                        <div
                          className="col-lg-6 col-xs-12"
                        >
                          <div
                            className="domain-field-padding-bottom"
                          >
                            <SectionHeading
                              title="Basic Properties"
                            >
                              <div
                                className="domain-field-section-heading"
                              >
                                Basic Properties
                              </div>
                            </SectionHeading>
                            <NameInput
                              appPropertiesOnly={false}
                              model={
                                Immutable.Record {
                                  "allowBackgroundUpload": false,
                                  "allowEditableResults": false,
                                  "allowQCStates": false,
                                  "allowSpacesInPath": false,
                                  "allowTransformationScript": false,
                                  "allowPlateMetadata": false,
                                  "autoCopyTargetContainer": undefined,
                                  "autoCopyTargetContainerId": undefined,
                                  "availableDetectionMethods": undefined,
                                  "availableMetadataInputFormats": undefined,
                                  "availablePlateTemplates": undefined,
                                  "backgroundUpload": false,
                                  "description": "test description for this assay",
                                  "domains": Immutable.List [],
                                  "editableResults": true,
                                  "editableRuns": true,
                                  "exception": undefined,
                                  "metadataInputFormatHelp": undefined,
                                  "moduleTransformScripts": undefined,
                                  "name": "name should not be editable",
                                  "plateMetadata": undefined,
                                  "protocolId": 1,
                                  "protocolParameters": undefined,
                                  "protocolTransformScripts": undefined,
                                  "providerName": undefined,
                                  "saveScriptFiles": false,
                                  "selectedDetectionMethod": undefined,
                                  "selectedMetadataInputFormat": undefined,
                                  "selectedPlateTemplate": undefined,
                                  "qcEnabled": undefined,
                                }
                              }
                              onChange={[Function]}
                            >
                              <Component
                                appPropertiesOnly={false}
                                colSize={9}
                                helpTipBody={
                                  <p>
                                    The name for this assay design. Note that this can't be changed after the assay design is created.
                                  </p>
                                }
                                label="Name"
                                required={true}
                              >
                                <Row
                                  bsClass="row"
                                  className="margin-top"
                                  componentClass="div"
                                >
                                  <div
                                    className="margin-top row"
                                  >
                                    <Col
                                      bsClass="col"
                                      componentClass="div"
                                      lg={4}
                                      xs={3}
                                    >
                                      <div
                                        className="col-lg-4 col-xs-3"
                                      >
                                        <DomainFieldLabel
                                          helpTipBody={
                                            <p>
                                              The name for this assay design. Note that this can't be changed after the assay design is created.
                                            </p>
                                          }
                                          label="Name"
                                          required={true}
                                        >
                                          <span
                                            className="domain-no-wrap"
                                          >
                                            Name
                                            <Component
                                              customStyle={Object {}}
                                              id="tooltip"
                                              required={true}
                                              size="1x"
                                              title="Name"
                                            >
                                              <span
                                                className="label-help-target"
                                                onMouseOut={[Function]}
                                                onMouseOver={[Function]}
                                              >
                                                <FontAwesomeIcon
                                                  border={false}
                                                  className="label-help-icon"
                                                  fixedWidth={false}
                                                  flip={null}
                                                  icon={
                                                    Object {
                                                      "icon": Array [
                                                        512,
                                                        512,
                                                        Array [],
                                                        "f059",
                                                        "M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z",
                                                      ],
                                                      "iconName": "question-circle",
                                                      "prefix": "fas",
                                                    }
                                                  }
                                                  inverse={false}
                                                  listItem={false}
                                                  mask={null}
                                                  pull={null}
                                                  pulse={false}
                                                  rotation={null}
                                                  size="1x"
                                                  spin={false}
                                                  style={Object {}}
                                                  swapOpacity={false}
                                                  symbol={false}
                                                  title=""
                                                  transform={null}
                                                >
                                                  <svg
                                                    aria-hidden="true"
                                                    className="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                                                    data-icon="question-circle"
                                                    data-prefix="fas"
                                                    focusable="false"
                                                    role="img"
                                                    style={Object {}}
                                                    viewBox="0 0 512 512"
                                                    xmlns="http://www.w3.org/2000/svg"
                                                  >
                                                    <path
                                                      d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                      fill="currentColor"
                                                      style={Object {}}
                                                    />
                                                  </svg>
                                                </FontAwesomeIcon>
                                                <Overlay
                                                  animation={[Function]}
                                                  placement="right"
                                                  rootClose={false}
                                                  show={false}
                                                >
                                                  <Overlay
                                                    placement="right"
                                                    rootClose={false}
                                                    show={false}
                                                    transition={[Function]}
                                                  />
                                                </Overlay>
                                              </span>
                                            </Component>
                                             *
                                          </span>
                                        </DomainFieldLabel>
                                      </div>
                                    </Col>
                                    <Col
                                      bsClass="col"
                                      componentClass="div"
                                      lg={8}
                                      xs={9}
                                    >
                                      <div
                                        className="col-lg-8 col-xs-9"
                                      >
                                        <FormControl
                                          bsClass="form-control"
                                          componentClass="input"
                                          disabled={true}
                                          id="assay-design-name"
                                          onChange={[Function]}
                                          placeholder="Enter a name for this assay"
                                          type="text"
                                          value="name should not be editable"
                                        >
                                          <input
                                            className="form-control"
                                            disabled={true}
                                            id="assay-design-name"
                                            onChange={[Function]}
                                            placeholder="Enter a name for this assay"
                                            type="text"
                                            value="name should not be editable"
                                          />
                                        </FormControl>
                                      </div>
                                    </Col>
                                  </div>
                                </Row>
                              </Component>
                            </NameInput>
                            <DescriptionInput
                              appPropertiesOnly={false}
                              model={
                                Immutable.Record {
                                  "allowBackgroundUpload": false,
                                  "allowEditableResults": false,
                                  "allowQCStates": false,
                                  "allowSpacesInPath": false,
                                  "allowTransformationScript": false,
                                  "allowPlateMetadata": false,
                                  "autoCopyTargetContainer": undefined,
                                  "autoCopyTargetContainerId": undefined,
                                  "availableDetectionMethods": undefined,
                                  "availableMetadataInputFormats": undefined,
                                  "availablePlateTemplates": undefined,
                                  "backgroundUpload": false,
                                  "description": "test description for this assay",
                                  "domains": Immutable.List [],
                                  "editableResults": true,
                                  "editableRuns": true,
                                  "exception": undefined,
                                  "metadataInputFormatHelp": undefined,
                                  "moduleTransformScripts": undefined,
                                  "name": "name should not be editable",
                                  "plateMetadata": undefined,
                                  "protocolId": 1,
                                  "protocolParameters": undefined,
                                  "protocolTransformScripts": undefined,
                                  "providerName": undefined,
                                  "saveScriptFiles": false,
                                  "selectedDetectionMethod": undefined,
                                  "selectedMetadataInputFormat": undefined,
                                  "selectedPlateTemplate": undefined,
                                  "qcEnabled": undefined,
                                }
                              }
                              onChange={[Function]}
                            >
                              <Component
                                appPropertiesOnly={false}
                                colSize={9}
                                helpTipBody={
                                  <p>
                                    A short description for this assay design.
                                  </p>
                                }
                                label="Description"
                              >
                                <Row
                                  bsClass="row"
                                  className="margin-top"
                                  componentClass="div"
                                >
                                  <div
                                    className="margin-top row"
                                  >
                                    <Col
                                      bsClass="col"
                                      componentClass="div"
                                      lg={4}
                                      xs={3}
                                    >
                                      <div
                                        className="col-lg-4 col-xs-3"
                                      >
                                        <DomainFieldLabel
                                          helpTipBody={
                                            <p>
                                              A short description for this assay design.
                                            </p>
                                          }
                                          label="Description"
                                        >
                                          <span
                                            className="domain-no-wrap"
                                          >
                                            Description
                                            <Component
                                              customStyle={Object {}}
                                              id="tooltip"
                                              size="1x"
                                              title="Description"
                                            >
                                              <span
                                                className="label-help-target"
                                                onMouseOut={[Function]}
                                                onMouseOver={[Function]}
                                              >
                                                <FontAwesomeIcon
                                                  border={false}
                                                  className="label-help-icon"
                                                  fixedWidth={false}
                                                  flip={null}
                                                  icon={
                                                    Object {
                                                      "icon": Array [
                                                        512,
                                                        512,
                                                        Array [],
                                                        "f059",
                                                        "M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z",
                                                      ],
                                                      "iconName": "question-circle",
                                                      "prefix": "fas",
                                                    }
                                                  }
                                                  inverse={false}
                                                  listItem={false}
                                                  mask={null}
                                                  pull={null}
                                                  pulse={false}
                                                  rotation={null}
                                                  size="1x"
                                                  spin={false}
                                                  style={Object {}}
                                                  swapOpacity={false}
                                                  symbol={false}
                                                  title=""
                                                  transform={null}
                                                >
                                                  <svg
                                                    aria-hidden="true"
                                                    className="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                                                    data-icon="question-circle"
                                                    data-prefix="fas"
                                                    focusable="false"
                                                    role="img"
                                                    style={Object {}}
                                                    viewBox="0 0 512 512"
                                                    xmlns="http://www.w3.org/2000/svg"
                                                  >
                                                    <path
                                                      d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                      fill="currentColor"
                                                      style={Object {}}
                                                    />
                                                  </svg>
                                                </FontAwesomeIcon>
                                                <Overlay
                                                  animation={[Function]}
                                                  placement="right"
                                                  rootClose={false}
                                                  show={false}
                                                >
                                                  <Overlay
                                                    placement="right"
                                                    rootClose={false}
                                                    show={false}
                                                    transition={[Function]}
                                                  />
                                                </Overlay>
                                              </span>
                                            </Component>
                                          </span>
                                        </DomainFieldLabel>
                                      </div>
                                    </Col>
                                    <Col
                                      bsClass="col"
                                      componentClass="div"
                                      lg={8}
                                      xs={9}
                                    >
                                      <div
                                        className="col-lg-8 col-xs-9"
                                      >
                                        <textarea
                                          className="form-control textarea-noresize"
                                          id="assay-design-description"
                                          onChange={[Function]}
                                          value="test description for this assay"
                                        />
                                      </div>
                                    </Col>
                                  </div>
                                </Row>
                              </Component>
                            </DescriptionInput>
                          </div>
                          <div
                            className="domain-field-padding-bottom"
                          >
                            <SectionHeading
                              title="Editing Settings"
                            >
                              <div
                                className="domain-field-section-heading"
                              >
                                Editing Settings
                              </div>
                            </SectionHeading>
                            <EditableRunsInput
                              appPropertiesOnly={false}
                              model={
                                Immutable.Record {
                                  "allowBackgroundUpload": false,
                                  "allowEditableResults": false,
                                  "allowQCStates": false,
                                  "allowSpacesInPath": false,
                                  "allowTransformationScript": false,
                                  "allowPlateMetadata": false,
                                  "autoCopyTargetContainer": undefined,
                                  "autoCopyTargetContainerId": undefined,
                                  "availableDetectionMethods": undefined,
                                  "availableMetadataInputFormats": undefined,
                                  "availablePlateTemplates": undefined,
                                  "backgroundUpload": false,
                                  "description": "test description for this assay",
                                  "domains": Immutable.List [],
                                  "editableResults": true,
                                  "editableRuns": true,
                                  "exception": undefined,
                                  "metadataInputFormatHelp": undefined,
                                  "moduleTransformScripts": undefined,
                                  "name": "name should not be editable",
                                  "plateMetadata": undefined,
                                  "protocolId": 1,
                                  "protocolParameters": undefined,
                                  "protocolTransformScripts": undefined,
                                  "providerName": undefined,
                                  "saveScriptFiles": false,
                                  "selectedDetectionMethod": undefined,
                                  "selectedMetadataInputFormat": undefined,
                                  "selectedPlateTemplate": undefined,
                                  "qcEnabled": undefined,
                                }
                              }
                              onChange={[Function]}
                            >
                              <Component
                                appPropertiesOnly={false}
                                colSize={9}
                                helpTipBody={
                                  <p>
                                    If enabled, users with sufficient permissions can edit values at the run level after the initial import is complete. These changes will be audited.
                                  </p>
                                }
                                label="Editable Runs"
                              >
                                <Row
                                  bsClass="row"
                                  className="margin-top"
                                  componentClass="div"
                                >
                                  <div
                                    className="margin-top row"
                                  >
                                    <Col
                                      bsClass="col"
                                      componentClass="div"
                                      lg={4}
                                      xs={3}
                                    >
                                      <div
                                        className="col-lg-4 col-xs-3"
                                      >
                                        <DomainFieldLabel
                                          helpTipBody={
                                            <p>
                                              If enabled, users with sufficient permissions can edit values at the run level after the initial import is complete. These changes will be audited.
                                            </p>
                                          }
                                          label="Editable Runs"
                                        >
                                          Editable 
                                          <span
                                            className="domain-no-wrap"
                                          >
                                            Runs
                                            <Component
                                              customStyle={Object {}}
                                              id="tooltip"
                                              size="1x"
                                              title="Editable Runs"
                                            >
                                              <span
                                                className="label-help-target"
                                                onMouseOut={[Function]}
                                                onMouseOver={[Function]}
                                              >
                                                <FontAwesomeIcon
                                                  border={false}
                                                  className="label-help-icon"
                                                  fixedWidth={false}
                                                  flip={null}
                                                  icon={
                                                    Object {
                                                      "icon": Array [
                                                        512,
                                                        512,
                                                        Array [],
                                                        "f059",
                                                        "M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z",
                                                      ],
                                                      "iconName": "question-circle",
                                                      "prefix": "fas",
                                                    }
                                                  }
                                                  inverse={false}
                                                  listItem={false}
                                                  mask={null}
                                                  pull={null}
                                                  pulse={false}
                                                  rotation={null}
                                                  size="1x"
                                                  spin={false}
                                                  style={Object {}}
                                                  swapOpacity={false}
                                                  symbol={false}
                                                  title=""
                                                  transform={null}
                                                >
                                                  <svg
                                                    aria-hidden="true"
                                                    className="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                                                    data-icon="question-circle"
                                                    data-prefix="fas"
                                                    focusable="false"
                                                    role="img"
                                                    style={Object {}}
                                                    viewBox="0 0 512 512"
                                                    xmlns="http://www.w3.org/2000/svg"
                                                  >
                                                    <path
                                                      d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                      fill="currentColor"
                                                      style={Object {}}
                                                    />
                                                  </svg>
                                                </FontAwesomeIcon>
                                                <Overlay
                                                  animation={[Function]}
                                                  placement="right"
                                                  rootClose={false}
                                                  show={false}
                                                >
                                                  <Overlay
                                                    placement="right"
                                                    rootClose={false}
                                                    show={false}
                                                    transition={[Function]}
                                                  />
                                                </Overlay>
                                              </span>
                                            </Component>
                                          </span>
                                        </DomainFieldLabel>
                                      </div>
                                    </Col>
                                    <Col
                                      bsClass="col"
                                      componentClass="div"
                                      lg={8}
                                      xs={9}
                                    >
                                      <div
                                        className="col-lg-8 col-xs-9"
                                      >
                                        <input
                                          checked={true}
                                          id="assay-design-editableRuns"
                                          onChange={[Function]}
                                          type="checkbox"
                                        />
                                      </div>
                                    </Col>
                                  </div>
                                </Row>
                              </Component>
                            </EditableRunsInput>
                          </div>
                        </div>
                      </Col>
                      <Col
                        bsClass="col"
                        componentClass="div"
                        lg={6}
                        xs={12}
                      >
                        <div
                          className="col-lg-6 col-xs-12"
                        >
                          <div
                            className="domain-field-padding-bottom"
                          >
                            <SectionHeading
                              title="Import Settings"
                            >
                              <div
                                className="domain-field-section-heading"
                              >
                                Import Settings
                              </div>
                            </SectionHeading>
                            <AutoLinkDataInput
                              model={
                                Immutable.Record {
                                  "allowBackgroundUpload": false,
                                  "allowEditableResults": false,
                                  "allowQCStates": false,
                                  "allowSpacesInPath": false,
                                  "allowTransformationScript": false,
                                  "allowPlateMetadata": false,
                                  "autoCopyTargetContainer": undefined,
                                  "autoCopyTargetContainerId": undefined,
                                  "availableDetectionMethods": undefined,
                                  "availableMetadataInputFormats": undefined,
                                  "availablePlateTemplates": undefined,
                                  "backgroundUpload": false,
                                  "description": "test description for this assay",
                                  "domains": Immutable.List [],
                                  "editableResults": true,
                                  "editableRuns": true,
                                  "exception": undefined,
                                  "metadataInputFormatHelp": undefined,
                                  "moduleTransformScripts": undefined,
                                  "name": "name should not be editable",
                                  "plateMetadata": undefined,
                                  "protocolId": 1,
                                  "protocolParameters": undefined,
                                  "protocolTransformScripts": undefined,
                                  "providerName": undefined,
                                  "saveScriptFiles": false,
                                  "selectedDetectionMethod": undefined,
                                  "selectedMetadataInputFormat": undefined,
                                  "selectedPlateTemplate": undefined,
                                  "qcEnabled": undefined,
                                }
                              }
                              onChange={[Function]}
                            >
                              <Component
                                colSize={9}
                                helpTipBody={
                                  <React.Fragment>
                                    <p>
                                      When new runs are imported, automatically link their data rows to the specified target study. Only rows that include subject and visit/date information will be linked.
                                    </p>
                                    <p>
                                      The user performing the import must have insert permission in the target study and the corresponding dataset.
                                    </p>
                                  </React.Fragment>
                                }
                                label="Auto-Link Data to Study"
                              >
                                <Row
                                  bsClass="row"
                                  className="margin-top"
                                  componentClass="div"
                                >
                                  <div
                                    className="margin-top row"
                                  >
                                    <Col
                                      bsClass="col"
                                      componentClass="div"
                                      lg={4}
                                      xs={3}
                                    >
                                      <div
                                        className="col-lg-4 col-xs-3"
                                      >
                                        <DomainFieldLabel
                                          helpTipBody={
                                            <React.Fragment>
                                              <p>
                                                When new runs are imported, automatically link their data rows to the specified target study. Only rows that include subject and visit/date information will be linked.
                                              </p>
                                              <p>
                                                The user performing the import must have insert permission in the target study and the corresponding dataset.
                                              </p>
                                            </React.Fragment>
                                          }
                                          label="Auto-Link Data to Study"
                                        >
                                          Auto-Link Data to 
                                          <span
                                            className="domain-no-wrap"
                                          >
                                            Study
                                            <Component
                                              customStyle={Object {}}
                                              id="tooltip"
                                              size="1x"
                                              title="Auto-Link Data to Study"
                                            >
                                              <span
                                                className="label-help-target"
                                                onMouseOut={[Function]}
                                                onMouseOver={[Function]}
                                              >
                                                <FontAwesomeIcon
                                                  border={false}
                                                  className="label-help-icon"
                                                  fixedWidth={false}
                                                  flip={null}
                                                  icon={
                                                    Object {
                                                      "icon": Array [
                                                        512,
                                                        512,
                                                        Array [],
                                                        "f059",
                                                        "M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z",
                                                      ],
                                                      "iconName": "question-circle",
                                                      "prefix": "fas",
                                                    }
                                                  }
                                                  inverse={false}
                                                  listItem={false}
                                                  mask={null}
                                                  pull={null}
                                                  pulse={false}
                                                  rotation={null}
                                                  size="1x"
                                                  spin={false}
                                                  style={Object {}}
                                                  swapOpacity={false}
                                                  symbol={false}
                                                  title=""
                                                  transform={null}
                                                >
                                                  <svg
                                                    aria-hidden="true"
                                                    className="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                                                    data-icon="question-circle"
                                                    data-prefix="fas"
                                                    focusable="false"
                                                    role="img"
                                                    style={Object {}}
                                                    viewBox="0 0 512 512"
                                                    xmlns="http://www.w3.org/2000/svg"
                                                  >
                                                    <path
                                                      d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                      fill="currentColor"
                                                      style={Object {}}
                                                    />
                                                  </svg>
                                                </FontAwesomeIcon>
                                                <Overlay
                                                  animation={[Function]}
                                                  placement="right"
                                                  rootClose={false}
                                                  show={false}
                                                >
                                                  <Overlay
                                                    placement="right"
                                                    rootClose={false}
                                                    show={false}
                                                    transition={[Function]}
                                                  />
                                                </Overlay>
                                              </span>
                                            </Component>
                                          </span>
                                        </DomainFieldLabel>
                                      </div>
                                    </Col>
                                    <Col
                                      bsClass="col"
                                      componentClass="div"
                                      lg={8}
                                      xs={9}
                                    >
                                      <div
                                        className="col-lg-8 col-xs-9"
                                      >
                                        <AutoLinkToStudyDropdown
                                          autoLinkTarget="assay-design-autoCopyTargetContainerId"
                                          onChange={[Function]}
                                        >
                                          <LoadingSpinner
                                            msg="Loading..."
                                            wrapperClassName=""
                                          >
                                            <span
                                              className=""
                                            >
                                              <i
                                                aria-hidden="true"
                                                className="fa fa-spinner fa-pulse"
                                              />
                                               
                                              Loading...
                                            </span>
                                          </LoadingSpinner>
                                        </AutoLinkToStudyDropdown>
                                      </div>
                                    </Col>
                                  </div>
                                </Row>
                              </Component>
                            </AutoLinkDataInput>
                          </div>
                        </div>
                      </Col>
                    </form>
                  </Form>
                </div>
              </PanelBody>
            </div>
          </Panel>
        </Uncontrolled(Panel)>
      </ForwardRef>
    </BasePropertiesPanel>
  </AssayPropertiesPanelImpl>
</ComponentWithDomainPropertiesPanelCollapse>
`;

exports[`AssayPropertiesPanel without helpTopic 1`] = `
<ComponentWithDomainPropertiesPanelCollapse
  appPropertiesOnly={true}
  collapsed={false}
  controlledCollapse={false}
  helpTopic={null}
  initCollapsed={false}
  model={
    Immutable.Record {
      "allowBackgroundUpload": false,
      "allowEditableResults": false,
      "allowQCStates": false,
      "allowSpacesInPath": false,
      "allowTransformationScript": false,
      "allowPlateMetadata": false,
      "autoCopyTargetContainer": undefined,
      "autoCopyTargetContainerId": undefined,
      "availableDetectionMethods": undefined,
      "availableMetadataInputFormats": undefined,
      "availablePlateTemplates": undefined,
      "backgroundUpload": false,
      "description": undefined,
      "domains": Immutable.List [
        Immutable.Record {
          "name": "Batch Fields",
          "container": undefined,
          "description": undefined,
          "domainURI": undefined,
          "domainId": null,
          "allowFileLinkProperties": false,
          "allowAttachmentProperties": false,
          "allowFlagProperties": true,
          "allowTimepointProperties": false,
          "showDefaultValueSettings": false,
          "defaultDefaultValueType": undefined,
          "defaultValueOptions": Immutable.List [],
          "fields": Immutable.List [],
          "indices": Immutable.List [],
          "domainException": undefined,
          "mandatoryFieldNames": Immutable.List [],
          "reservedFieldNames": Immutable.List [],
          "newDesignFields": undefined,
          "instructions": undefined,
          "domainKindName": undefined,
        },
        Immutable.Record {
          "name": "Run Fields",
          "container": undefined,
          "description": undefined,
          "domainURI": undefined,
          "domainId": null,
          "allowFileLinkProperties": false,
          "allowAttachmentProperties": false,
          "allowFlagProperties": true,
          "allowTimepointProperties": false,
          "showDefaultValueSettings": false,
          "defaultDefaultValueType": undefined,
          "defaultValueOptions": Immutable.List [],
          "fields": Immutable.List [],
          "indices": Immutable.List [],
          "domainException": undefined,
          "mandatoryFieldNames": Immutable.List [],
          "reservedFieldNames": Immutable.List [],
          "newDesignFields": undefined,
          "instructions": undefined,
          "domainKindName": undefined,
        },
        Immutable.Record {
          "name": "Data Fields",
          "container": undefined,
          "description": undefined,
          "domainURI": undefined,
          "domainId": null,
          "allowFileLinkProperties": false,
          "allowAttachmentProperties": false,
          "allowFlagProperties": true,
          "allowTimepointProperties": false,
          "showDefaultValueSettings": false,
          "defaultDefaultValueType": undefined,
          "defaultValueOptions": Immutable.List [],
          "fields": Immutable.List [],
          "indices": Immutable.List [],
          "domainException": undefined,
          "mandatoryFieldNames": Immutable.List [],
          "reservedFieldNames": Immutable.List [],
          "newDesignFields": undefined,
          "instructions": undefined,
          "domainKindName": undefined,
        },
      ],
      "editableResults": false,
      "editableRuns": false,
      "exception": undefined,
      "metadataInputFormatHelp": undefined,
      "moduleTransformScripts": undefined,
      "name": undefined,
      "plateMetadata": undefined,
      "protocolId": undefined,
      "protocolParameters": undefined,
      "protocolTransformScripts": undefined,
      "providerName": "General",
      "saveScriptFiles": false,
      "selectedDetectionMethod": undefined,
      "selectedMetadataInputFormat": undefined,
      "selectedPlateTemplate": undefined,
      "qcEnabled": undefined,
    }
  }
  onChange={[Function]}
  panelStatus="NONE"
  useTheme={false}
  validate={false}
>
  <AssayPropertiesPanelImpl
    appPropertiesOnly={true}
    asPanel={true}
    collapsed={false}
    controlledCollapse={false}
    helpTopic={null}
    model={
      Immutable.Record {
        "allowBackgroundUpload": false,
        "allowEditableResults": false,
        "allowQCStates": false,
        "allowSpacesInPath": false,
        "allowTransformationScript": false,
        "allowPlateMetadata": false,
        "autoCopyTargetContainer": undefined,
        "autoCopyTargetContainerId": undefined,
        "availableDetectionMethods": undefined,
        "availableMetadataInputFormats": undefined,
        "availablePlateTemplates": undefined,
        "backgroundUpload": false,
        "description": undefined,
        "domains": Immutable.List [
          Immutable.Record {
            "name": "Batch Fields",
            "container": undefined,
            "description": undefined,
            "domainURI": undefined,
            "domainId": null,
            "allowFileLinkProperties": false,
            "allowAttachmentProperties": false,
            "allowFlagProperties": true,
            "allowTimepointProperties": false,
            "showDefaultValueSettings": false,
            "defaultDefaultValueType": undefined,
            "defaultValueOptions": Immutable.List [],
            "fields": Immutable.List [],
            "indices": Immutable.List [],
            "domainException": undefined,
            "mandatoryFieldNames": Immutable.List [],
            "reservedFieldNames": Immutable.List [],
            "newDesignFields": undefined,
            "instructions": undefined,
            "domainKindName": undefined,
          },
          Immutable.Record {
            "name": "Run Fields",
            "container": undefined,
            "description": undefined,
            "domainURI": undefined,
            "domainId": null,
            "allowFileLinkProperties": false,
            "allowAttachmentProperties": false,
            "allowFlagProperties": true,
            "allowTimepointProperties": false,
            "showDefaultValueSettings": false,
            "defaultDefaultValueType": undefined,
            "defaultValueOptions": Immutable.List [],
            "fields": Immutable.List [],
            "indices": Immutable.List [],
            "domainException": undefined,
            "mandatoryFieldNames": Immutable.List [],
            "reservedFieldNames": Immutable.List [],
            "newDesignFields": undefined,
            "instructions": undefined,
            "domainKindName": undefined,
          },
          Immutable.Record {
            "name": "Data Fields",
            "container": undefined,
            "description": undefined,
            "domainURI": undefined,
            "domainId": null,
            "allowFileLinkProperties": false,
            "allowAttachmentProperties": false,
            "allowFlagProperties": true,
            "allowTimepointProperties": false,
            "showDefaultValueSettings": false,
            "defaultDefaultValueType": undefined,
            "defaultValueOptions": Immutable.List [],
            "fields": Immutable.List [],
            "indices": Immutable.List [],
            "domainException": undefined,
            "mandatoryFieldNames": Immutable.List [],
            "reservedFieldNames": Immutable.List [],
            "newDesignFields": undefined,
            "instructions": undefined,
            "domainKindName": undefined,
          },
        ],
        "editableResults": false,
        "editableRuns": false,
        "exception": undefined,
        "metadataInputFormatHelp": undefined,
        "moduleTransformScripts": undefined,
        "name": undefined,
        "plateMetadata": undefined,
        "protocolId": undefined,
        "protocolParameters": undefined,
        "protocolTransformScripts": undefined,
        "providerName": "General",
        "saveScriptFiles": false,
        "selectedDetectionMethod": undefined,
        "selectedMetadataInputFormat": undefined,
        "selectedPlateTemplate": undefined,
        "qcEnabled": undefined,
      }
    }
    onChange={[Function]}
    panelStatus="NONE"
    togglePanel={[Function]}
    useTheme={false}
    validate={false}
  >
    <BasePropertiesPanel
      appPropertiesOnly={true}
      asPanel={true}
      collapsed={false}
      controlledCollapse={false}
      headerId="assay-properties-hdr"
      helpTopic={null}
      isValid={true}
      model={
        Immutable.Record {
          "allowBackgroundUpload": false,
          "allowEditableResults": false,
          "allowQCStates": false,
          "allowSpacesInPath": false,
          "allowTransformationScript": false,
          "allowPlateMetadata": false,
          "autoCopyTargetContainer": undefined,
          "autoCopyTargetContainerId": undefined,
          "availableDetectionMethods": undefined,
          "availableMetadataInputFormats": undefined,
          "availablePlateTemplates": undefined,
          "backgroundUpload": false,
          "description": undefined,
          "domains": Immutable.List [
            Immutable.Record {
              "name": "Batch Fields",
              "container": undefined,
              "description": undefined,
              "domainURI": undefined,
              "domainId": null,
              "allowFileLinkProperties": false,
              "allowAttachmentProperties": false,
              "allowFlagProperties": true,
              "allowTimepointProperties": false,
              "showDefaultValueSettings": false,
              "defaultDefaultValueType": undefined,
              "defaultValueOptions": Immutable.List [],
              "fields": Immutable.List [],
              "indices": Immutable.List [],
              "domainException": undefined,
              "mandatoryFieldNames": Immutable.List [],
              "reservedFieldNames": Immutable.List [],
              "newDesignFields": undefined,
              "instructions": undefined,
              "domainKindName": undefined,
            },
            Immutable.Record {
              "name": "Run Fields",
              "container": undefined,
              "description": undefined,
              "domainURI": undefined,
              "domainId": null,
              "allowFileLinkProperties": false,
              "allowAttachmentProperties": false,
              "allowFlagProperties": true,
              "allowTimepointProperties": false,
              "showDefaultValueSettings": false,
              "defaultDefaultValueType": undefined,
              "defaultValueOptions": Immutable.List [],
              "fields": Immutable.List [],
              "indices": Immutable.List [],
              "domainException": undefined,
              "mandatoryFieldNames": Immutable.List [],
              "reservedFieldNames": Immutable.List [],
              "newDesignFields": undefined,
              "instructions": undefined,
              "domainKindName": undefined,
            },
            Immutable.Record {
              "name": "Data Fields",
              "container": undefined,
              "description": undefined,
              "domainURI": undefined,
              "domainId": null,
              "allowFileLinkProperties": false,
              "allowAttachmentProperties": false,
              "allowFlagProperties": true,
              "allowTimepointProperties": false,
              "showDefaultValueSettings": false,
              "defaultDefaultValueType": undefined,
              "defaultValueOptions": Immutable.List [],
              "fields": Immutable.List [],
              "indices": Immutable.List [],
              "domainException": undefined,
              "mandatoryFieldNames": Immutable.List [],
              "reservedFieldNames": Immutable.List [],
              "newDesignFields": undefined,
              "instructions": undefined,
              "domainKindName": undefined,
            },
          ],
          "editableResults": false,
          "editableRuns": false,
          "exception": undefined,
          "metadataInputFormatHelp": undefined,
          "moduleTransformScripts": undefined,
          "name": undefined,
          "plateMetadata": undefined,
          "protocolId": undefined,
          "protocolParameters": undefined,
          "protocolTransformScripts": undefined,
          "providerName": "General",
          "saveScriptFiles": false,
          "selectedDetectionMethod": undefined,
          "selectedMetadataInputFormat": undefined,
          "selectedPlateTemplate": undefined,
          "qcEnabled": undefined,
        }
      }
      onChange={[Function]}
      panelStatus="NONE"
      title="Assay Properties"
      togglePanel={[Function]}
      updateValidStatus={[Function]}
      useTheme={false}
      validate={false}
    >
      <ForwardRef
        className="domain-form-panel domain-panel-no-theme"
        expanded={true}
        onToggle={[Function]}
      >
        <Uncontrolled(Panel)
          className="domain-form-panel domain-panel-no-theme"
          expanded={true}
          innerRef={null}
          onToggle={[Function]}
        >
          <Panel
            bsClass="panel"
            bsStyle="default"
            className="domain-form-panel domain-panel-no-theme"
            expanded={true}
            onToggle={[Function]}
          >
            <div
              className="domain-form-panel domain-panel-no-theme panel panel-default"
            >
              <CollapsiblePanelHeader
                collapsed={false}
                controlledCollapse={false}
                iconHelpMsg="Contains errors or is missing required values."
                id="assay-properties-hdr"
                isValid={true}
                panelStatus="NONE"
                title="Assay Properties"
                togglePanel={[Function]}
                useTheme={false}
              >
                <PanelHeading
                  bsClass="panel"
                  className="domain-panel-header domain-panel-header-expanded domain-panel-header-no-theme"
                  componentClass="div"
                  id="assay-properties-hdr"
                  onClick={[Function]}
                >
                  <div
                    className="domain-panel-header domain-panel-header-expanded domain-panel-header-no-theme panel-heading"
                    id="assay-properties-hdr"
                    onClick={[Function]}
                  >
                    <span
                      className="domain-panel-title"
                    >
                      Assay Properties
                    </span>
                  </div>
                </PanelHeading>
              </CollapsiblePanelHeader>
              <PanelBody
                bsClass="panel"
                collapsible={false}
              >
                <div
                  className="panel-body"
                >
                  <Form
                    bsClass="form"
                    componentClass="form"
                    horizontal={false}
                    inline={false}
                  >
                    <form
                      className=""
                    >
                      <Col
                        bsClass="col"
                        componentClass="div"
                        lg={12}
                        xs={12}
                      >
                        <div
                          className="col-lg-12 col-xs-12"
                        >
                          <div
                            className="domain-field-padding-bottom"
                          >
                            <SectionHeading
                              title="Basic Properties"
                            >
                              <div
                                className="domain-field-section-heading"
                              >
                                Basic Properties
                              </div>
                            </SectionHeading>
                            <NameInput
                              appPropertiesOnly={true}
                              model={
                                Immutable.Record {
                                  "allowBackgroundUpload": false,
                                  "allowEditableResults": false,
                                  "allowQCStates": false,
                                  "allowSpacesInPath": false,
                                  "allowTransformationScript": false,
                                  "allowPlateMetadata": false,
                                  "autoCopyTargetContainer": undefined,
                                  "autoCopyTargetContainerId": undefined,
                                  "availableDetectionMethods": undefined,
                                  "availableMetadataInputFormats": undefined,
                                  "availablePlateTemplates": undefined,
                                  "backgroundUpload": false,
                                  "description": undefined,
                                  "domains": Immutable.List [
                                    Immutable.Record {
                                      "name": "Batch Fields",
                                      "container": undefined,
                                      "description": undefined,
                                      "domainURI": undefined,
                                      "domainId": null,
                                      "allowFileLinkProperties": false,
                                      "allowAttachmentProperties": false,
                                      "allowFlagProperties": true,
                                      "allowTimepointProperties": false,
                                      "showDefaultValueSettings": false,
                                      "defaultDefaultValueType": undefined,
                                      "defaultValueOptions": Immutable.List [],
                                      "fields": Immutable.List [],
                                      "indices": Immutable.List [],
                                      "domainException": undefined,
                                      "mandatoryFieldNames": Immutable.List [],
                                      "reservedFieldNames": Immutable.List [],
                                      "newDesignFields": undefined,
                                      "instructions": undefined,
                                      "domainKindName": undefined,
                                    },
                                    Immutable.Record {
                                      "name": "Run Fields",
                                      "container": undefined,
                                      "description": undefined,
                                      "domainURI": undefined,
                                      "domainId": null,
                                      "allowFileLinkProperties": false,
                                      "allowAttachmentProperties": false,
                                      "allowFlagProperties": true,
                                      "allowTimepointProperties": false,
                                      "showDefaultValueSettings": false,
                                      "defaultDefaultValueType": undefined,
                                      "defaultValueOptions": Immutable.List [],
                                      "fields": Immutable.List [],
                                      "indices": Immutable.List [],
                                      "domainException": undefined,
                                      "mandatoryFieldNames": Immutable.List [],
                                      "reservedFieldNames": Immutable.List [],
                                      "newDesignFields": undefined,
                                      "instructions": undefined,
                                      "domainKindName": undefined,
                                    },
                                    Immutable.Record {
                                      "name": "Data Fields",
                                      "container": undefined,
                                      "description": undefined,
                                      "domainURI": undefined,
                                      "domainId": null,
                                      "allowFileLinkProperties": false,
                                      "allowAttachmentProperties": false,
                                      "allowFlagProperties": true,
                                      "allowTimepointProperties": false,
                                      "showDefaultValueSettings": false,
                                      "defaultDefaultValueType": undefined,
                                      "defaultValueOptions": Immutable.List [],
                                      "fields": Immutable.List [],
                                      "indices": Immutable.List [],
                                      "domainException": undefined,
                                      "mandatoryFieldNames": Immutable.List [],
                                      "reservedFieldNames": Immutable.List [],
                                      "newDesignFields": undefined,
                                      "instructions": undefined,
                                      "domainKindName": undefined,
                                    },
                                  ],
                                  "editableResults": false,
                                  "editableRuns": false,
                                  "exception": undefined,
                                  "metadataInputFormatHelp": undefined,
                                  "moduleTransformScripts": undefined,
                                  "name": undefined,
                                  "plateMetadata": undefined,
                                  "protocolId": undefined,
                                  "protocolParameters": undefined,
                                  "protocolTransformScripts": undefined,
                                  "providerName": "General",
                                  "saveScriptFiles": false,
                                  "selectedDetectionMethod": undefined,
                                  "selectedMetadataInputFormat": undefined,
                                  "selectedPlateTemplate": undefined,
                                  "qcEnabled": undefined,
                                }
                              }
                              onChange={[Function]}
                            >
                              <Component
                                appPropertiesOnly={true}
                                colSize={9}
                                helpTipBody={
                                  <p>
                                    The name for this assay design. Note that this can't be changed after the assay design is created.
                                  </p>
                                }
                                label="Name"
                                required={true}
                              >
                                <Row
                                  bsClass="row"
                                  className="margin-top"
                                  componentClass="div"
                                >
                                  <div
                                    className="margin-top row"
                                  >
                                    <Col
                                      bsClass="col"
                                      componentClass="div"
                                      lg={2}
                                      xs={3}
                                    >
                                      <div
                                        className="col-lg-2 col-xs-3"
                                      >
                                        <DomainFieldLabel
                                          helpTipBody={
                                            <p>
                                              The name for this assay design. Note that this can't be changed after the assay design is created.
                                            </p>
                                          }
                                          label="Name"
                                          required={true}
                                        >
                                          <span
                                            className="domain-no-wrap"
                                          >
                                            Name
                                            <Component
                                              customStyle={Object {}}
                                              id="tooltip"
                                              required={true}
                                              size="1x"
                                              title="Name"
                                            >
                                              <span
                                                className="label-help-target"
                                                onMouseOut={[Function]}
                                                onMouseOver={[Function]}
                                              >
                                                <FontAwesomeIcon
                                                  border={false}
                                                  className="label-help-icon"
                                                  fixedWidth={false}
                                                  flip={null}
                                                  icon={
                                                    Object {
                                                      "icon": Array [
                                                        512,
                                                        512,
                                                        Array [],
                                                        "f059",
                                                        "M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z",
                                                      ],
                                                      "iconName": "question-circle",
                                                      "prefix": "fas",
                                                    }
                                                  }
                                                  inverse={false}
                                                  listItem={false}
                                                  mask={null}
                                                  pull={null}
                                                  pulse={false}
                                                  rotation={null}
                                                  size="1x"
                                                  spin={false}
                                                  style={Object {}}
                                                  swapOpacity={false}
                                                  symbol={false}
                                                  title=""
                                                  transform={null}
                                                >
                                                  <svg
                                                    aria-hidden="true"
                                                    className="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                                                    data-icon="question-circle"
                                                    data-prefix="fas"
                                                    focusable="false"
                                                    role="img"
                                                    style={Object {}}
                                                    viewBox="0 0 512 512"
                                                    xmlns="http://www.w3.org/2000/svg"
                                                  >
                                                    <path
                                                      d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                      fill="currentColor"
                                                      style={Object {}}
                                                    />
                                                  </svg>
                                                </FontAwesomeIcon>
                                                <Overlay
                                                  animation={[Function]}
                                                  placement="right"
                                                  rootClose={false}
                                                  show={false}
                                                >
                                                  <Overlay
                                                    placement="right"
                                                    rootClose={false}
                                                    show={false}
                                                    transition={[Function]}
                                                  />
                                                </Overlay>
                                              </span>
                                            </Component>
                                             *
                                          </span>
                                        </DomainFieldLabel>
                                      </div>
                                    </Col>
                                    <Col
                                      bsClass="col"
                                      componentClass="div"
                                      lg={10}
                                      xs={9}
                                    >
                                      <div
                                        className="col-lg-10 col-xs-9"
                                      >
                                        <FormControl
                                          bsClass="form-control"
                                          componentClass="input"
                                          disabled={false}
                                          id="assay-design-name"
                                          onChange={[Function]}
                                          placeholder="Enter a name for this assay"
                                          type="text"
                                          value=""
                                        >
                                          <input
                                            className="form-control"
                                            disabled={false}
                                            id="assay-design-name"
                                            onChange={[Function]}
                                            placeholder="Enter a name for this assay"
                                            type="text"
                                            value=""
                                          />
                                        </FormControl>
                                      </div>
                                    </Col>
                                  </div>
                                </Row>
                              </Component>
                            </NameInput>
                            <DescriptionInput
                              appPropertiesOnly={true}
                              model={
                                Immutable.Record {
                                  "allowBackgroundUpload": false,
                                  "allowEditableResults": false,
                                  "allowQCStates": false,
                                  "allowSpacesInPath": false,
                                  "allowTransformationScript": false,
                                  "allowPlateMetadata": false,
                                  "autoCopyTargetContainer": undefined,
                                  "autoCopyTargetContainerId": undefined,
                                  "availableDetectionMethods": undefined,
                                  "availableMetadataInputFormats": undefined,
                                  "availablePlateTemplates": undefined,
                                  "backgroundUpload": false,
                                  "description": undefined,
                                  "domains": Immutable.List [
                                    Immutable.Record {
                                      "name": "Batch Fields",
                                      "container": undefined,
                                      "description": undefined,
                                      "domainURI": undefined,
                                      "domainId": null,
                                      "allowFileLinkProperties": false,
                                      "allowAttachmentProperties": false,
                                      "allowFlagProperties": true,
                                      "allowTimepointProperties": false,
                                      "showDefaultValueSettings": false,
                                      "defaultDefaultValueType": undefined,
                                      "defaultValueOptions": Immutable.List [],
                                      "fields": Immutable.List [],
                                      "indices": Immutable.List [],
                                      "domainException": undefined,
                                      "mandatoryFieldNames": Immutable.List [],
                                      "reservedFieldNames": Immutable.List [],
                                      "newDesignFields": undefined,
                                      "instructions": undefined,
                                      "domainKindName": undefined,
                                    },
                                    Immutable.Record {
                                      "name": "Run Fields",
                                      "container": undefined,
                                      "description": undefined,
                                      "domainURI": undefined,
                                      "domainId": null,
                                      "allowFileLinkProperties": false,
                                      "allowAttachmentProperties": false,
                                      "allowFlagProperties": true,
                                      "allowTimepointProperties": false,
                                      "showDefaultValueSettings": false,
                                      "defaultDefaultValueType": undefined,
                                      "defaultValueOptions": Immutable.List [],
                                      "fields": Immutable.List [],
                                      "indices": Immutable.List [],
                                      "domainException": undefined,
                                      "mandatoryFieldNames": Immutable.List [],
                                      "reservedFieldNames": Immutable.List [],
                                      "newDesignFields": undefined,
                                      "instructions": undefined,
                                      "domainKindName": undefined,
                                    },
                                    Immutable.Record {
                                      "name": "Data Fields",
                                      "container": undefined,
                                      "description": undefined,
                                      "domainURI": undefined,
                                      "domainId": null,
                                      "allowFileLinkProperties": false,
                                      "allowAttachmentProperties": false,
                                      "allowFlagProperties": true,
                                      "allowTimepointProperties": false,
                                      "showDefaultValueSettings": false,
                                      "defaultDefaultValueType": undefined,
                                      "defaultValueOptions": Immutable.List [],
                                      "fields": Immutable.List [],
                                      "indices": Immutable.List [],
                                      "domainException": undefined,
                                      "mandatoryFieldNames": Immutable.List [],
                                      "reservedFieldNames": Immutable.List [],
                                      "newDesignFields": undefined,
                                      "instructions": undefined,
                                      "domainKindName": undefined,
                                    },
                                  ],
                                  "editableResults": false,
                                  "editableRuns": false,
                                  "exception": undefined,
                                  "metadataInputFormatHelp": undefined,
                                  "moduleTransformScripts": undefined,
                                  "name": undefined,
                                  "plateMetadata": undefined,
                                  "protocolId": undefined,
                                  "protocolParameters": undefined,
                                  "protocolTransformScripts": undefined,
                                  "providerName": "General",
                                  "saveScriptFiles": false,
                                  "selectedDetectionMethod": undefined,
                                  "selectedMetadataInputFormat": undefined,
                                  "selectedPlateTemplate": undefined,
                                  "qcEnabled": undefined,
                                }
                              }
                              onChange={[Function]}
                            >
                              <Component
                                appPropertiesOnly={true}
                                colSize={9}
                                helpTipBody={
                                  <p>
                                    A short description for this assay design.
                                  </p>
                                }
                                label="Description"
                              >
                                <Row
                                  bsClass="row"
                                  className="margin-top"
                                  componentClass="div"
                                >
                                  <div
                                    className="margin-top row"
                                  >
                                    <Col
                                      bsClass="col"
                                      componentClass="div"
                                      lg={2}
                                      xs={3}
                                    >
                                      <div
                                        className="col-lg-2 col-xs-3"
                                      >
                                        <DomainFieldLabel
                                          helpTipBody={
                                            <p>
                                              A short description for this assay design.
                                            </p>
                                          }
                                          label="Description"
                                        >
                                          <span
                                            className="domain-no-wrap"
                                          >
                                            Description
                                            <Component
                                              customStyle={Object {}}
                                              id="tooltip"
                                              size="1x"
                                              title="Description"
                                            >
                                              <span
                                                className="label-help-target"
                                                onMouseOut={[Function]}
                                                onMouseOver={[Function]}
                                              >
                                                <FontAwesomeIcon
                                                  border={false}
                                                  className="label-help-icon"
                                                  fixedWidth={false}
                                                  flip={null}
                                                  icon={
                                                    Object {
                                                      "icon": Array [
                                                        512,
                                                        512,
                                                        Array [],
                                                        "f059",
                                                        "M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z",
                                                      ],
                                                      "iconName": "question-circle",
                                                      "prefix": "fas",
                                                    }
                                                  }
                                                  inverse={false}
                                                  listItem={false}
                                                  mask={null}
                                                  pull={null}
                                                  pulse={false}
                                                  rotation={null}
                                                  size="1x"
                                                  spin={false}
                                                  style={Object {}}
                                                  swapOpacity={false}
                                                  symbol={false}
                                                  title=""
                                                  transform={null}
                                                >
                                                  <svg
                                                    aria-hidden="true"
                                                    className="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                                                    data-icon="question-circle"
                                                    data-prefix="fas"
                                                    focusable="false"
                                                    role="img"
                                                    style={Object {}}
                                                    viewBox="0 0 512 512"
                                                    xmlns="http://www.w3.org/2000/svg"
                                                  >
                                                    <path
                                                      d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                      fill="currentColor"
                                                      style={Object {}}
                                                    />
                                                  </svg>
                                                </FontAwesomeIcon>
                                                <Overlay
                                                  animation={[Function]}
                                                  placement="right"
                                                  rootClose={false}
                                                  show={false}
                                                >
                                                  <Overlay
                                                    placement="right"
                                                    rootClose={false}
                                                    show={false}
                                                    transition={[Function]}
                                                  />
                                                </Overlay>
                                              </span>
                                            </Component>
                                          </span>
                                        </DomainFieldLabel>
                                      </div>
                                    </Col>
                                    <Col
                                      bsClass="col"
                                      componentClass="div"
                                      lg={10}
                                      xs={9}
                                    >
                                      <div
                                        className="col-lg-10 col-xs-9"
                                      >
                                        <textarea
                                          className="form-control textarea-noresize"
                                          id="assay-design-description"
                                          onChange={[Function]}
                                          value=""
                                        />
                                      </div>
                                    </Col>
                                  </div>
                                </Row>
                              </Component>
                            </DescriptionInput>
                          </div>
                          <div
                            className="domain-field-padding-bottom"
                          >
                            <SectionHeading
                              title="Editing Settings"
                            >
                              <div
                                className="domain-field-section-heading"
                              >
                                Editing Settings
                              </div>
                            </SectionHeading>
                            <EditableRunsInput
                              appPropertiesOnly={true}
                              model={
                                Immutable.Record {
                                  "allowBackgroundUpload": false,
                                  "allowEditableResults": false,
                                  "allowQCStates": false,
                                  "allowSpacesInPath": false,
                                  "allowTransformationScript": false,
                                  "allowPlateMetadata": false,
                                  "autoCopyTargetContainer": undefined,
                                  "autoCopyTargetContainerId": undefined,
                                  "availableDetectionMethods": undefined,
                                  "availableMetadataInputFormats": undefined,
                                  "availablePlateTemplates": undefined,
                                  "backgroundUpload": false,
                                  "description": undefined,
                                  "domains": Immutable.List [
                                    Immutable.Record {
                                      "name": "Batch Fields",
                                      "container": undefined,
                                      "description": undefined,
                                      "domainURI": undefined,
                                      "domainId": null,
                                      "allowFileLinkProperties": false,
                                      "allowAttachmentProperties": false,
                                      "allowFlagProperties": true,
                                      "allowTimepointProperties": false,
                                      "showDefaultValueSettings": false,
                                      "defaultDefaultValueType": undefined,
                                      "defaultValueOptions": Immutable.List [],
                                      "fields": Immutable.List [],
                                      "indices": Immutable.List [],
                                      "domainException": undefined,
                                      "mandatoryFieldNames": Immutable.List [],
                                      "reservedFieldNames": Immutable.List [],
                                      "newDesignFields": undefined,
                                      "instructions": undefined,
                                      "domainKindName": undefined,
                                    },
                                    Immutable.Record {
                                      "name": "Run Fields",
                                      "container": undefined,
                                      "description": undefined,
                                      "domainURI": undefined,
                                      "domainId": null,
                                      "allowFileLinkProperties": false,
                                      "allowAttachmentProperties": false,
                                      "allowFlagProperties": true,
                                      "allowTimepointProperties": false,
                                      "showDefaultValueSettings": false,
                                      "defaultDefaultValueType": undefined,
                                      "defaultValueOptions": Immutable.List [],
                                      "fields": Immutable.List [],
                                      "indices": Immutable.List [],
                                      "domainException": undefined,
                                      "mandatoryFieldNames": Immutable.List [],
                                      "reservedFieldNames": Immutable.List [],
                                      "newDesignFields": undefined,
                                      "instructions": undefined,
                                      "domainKindName": undefined,
                                    },
                                    Immutable.Record {
                                      "name": "Data Fields",
                                      "container": undefined,
                                      "description": undefined,
                                      "domainURI": undefined,
                                      "domainId": null,
                                      "allowFileLinkProperties": false,
                                      "allowAttachmentProperties": false,
                                      "allowFlagProperties": true,
                                      "allowTimepointProperties": false,
                                      "showDefaultValueSettings": false,
                                      "defaultDefaultValueType": undefined,
                                      "defaultValueOptions": Immutable.List [],
                                      "fields": Immutable.List [],
                                      "indices": Immutable.List [],
                                      "domainException": undefined,
                                      "mandatoryFieldNames": Immutable.List [],
                                      "reservedFieldNames": Immutable.List [],
                                      "newDesignFields": undefined,
                                      "instructions": undefined,
                                      "domainKindName": undefined,
                                    },
                                  ],
                                  "editableResults": false,
                                  "editableRuns": false,
                                  "exception": undefined,
                                  "metadataInputFormatHelp": undefined,
                                  "moduleTransformScripts": undefined,
                                  "name": undefined,
                                  "plateMetadata": undefined,
                                  "protocolId": undefined,
                                  "protocolParameters": undefined,
                                  "protocolTransformScripts": undefined,
                                  "providerName": "General",
                                  "saveScriptFiles": false,
                                  "selectedDetectionMethod": undefined,
                                  "selectedMetadataInputFormat": undefined,
                                  "selectedPlateTemplate": undefined,
                                  "qcEnabled": undefined,
                                }
                              }
                              onChange={[Function]}
                            >
                              <Component
                                appPropertiesOnly={true}
                                colSize={9}
                                helpTipBody={
                                  <p>
                                    If enabled, users with sufficient permissions can edit values at the run level after the initial import is complete. These changes will be audited.
                                  </p>
                                }
                                label="Editable Runs"
                              >
                                <Row
                                  bsClass="row"
                                  className="margin-top"
                                  componentClass="div"
                                >
                                  <div
                                    className="margin-top row"
                                  >
                                    <Col
                                      bsClass="col"
                                      componentClass="div"
                                      lg={2}
                                      xs={3}
                                    >
                                      <div
                                        className="col-lg-2 col-xs-3"
                                      >
                                        <DomainFieldLabel
                                          helpTipBody={
                                            <p>
                                              If enabled, users with sufficient permissions can edit values at the run level after the initial import is complete. These changes will be audited.
                                            </p>
                                          }
                                          label="Editable Runs"
                                        >
                                          Editable 
                                          <span
                                            className="domain-no-wrap"
                                          >
                                            Runs
                                            <Component
                                              customStyle={Object {}}
                                              id="tooltip"
                                              size="1x"
                                              title="Editable Runs"
                                            >
                                              <span
                                                className="label-help-target"
                                                onMouseOut={[Function]}
                                                onMouseOver={[Function]}
                                              >
                                                <FontAwesomeIcon
                                                  border={false}
                                                  className="label-help-icon"
                                                  fixedWidth={false}
                                                  flip={null}
                                                  icon={
                                                    Object {
                                                      "icon": Array [
                                                        512,
                                                        512,
                                                        Array [],
                                                        "f059",
                                                        "M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z",
                                                      ],
                                                      "iconName": "question-circle",
                                                      "prefix": "fas",
                                                    }
                                                  }
                                                  inverse={false}
                                                  listItem={false}
                                                  mask={null}
                                                  pull={null}
                                                  pulse={false}
                                                  rotation={null}
                                                  size="1x"
                                                  spin={false}
                                                  style={Object {}}
                                                  swapOpacity={false}
                                                  symbol={false}
                                                  title=""
                                                  transform={null}
                                                >
                                                  <svg
                                                    aria-hidden="true"
                                                    className="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                                                    data-icon="question-circle"
                                                    data-prefix="fas"
                                                    focusable="false"
                                                    role="img"
                                                    style={Object {}}
                                                    viewBox="0 0 512 512"
                                                    xmlns="http://www.w3.org/2000/svg"
                                                  >
                                                    <path
                                                      d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                      fill="currentColor"
                                                      style={Object {}}
                                                    />
                                                  </svg>
                                                </FontAwesomeIcon>
                                                <Overlay
                                                  animation={[Function]}
                                                  placement="right"
                                                  rootClose={false}
                                                  show={false}
                                                >
                                                  <Overlay
                                                    placement="right"
                                                    rootClose={false}
                                                    show={false}
                                                    transition={[Function]}
                                                  />
                                                </Overlay>
                                              </span>
                                            </Component>
                                          </span>
                                        </DomainFieldLabel>
                                      </div>
                                    </Col>
                                    <Col
                                      bsClass="col"
                                      componentClass="div"
                                      lg={10}
                                      xs={9}
                                    >
                                      <div
                                        className="col-lg-10 col-xs-9"
                                      >
                                        <input
                                          checked={false}
                                          id="assay-design-editableRuns"
                                          onChange={[Function]}
                                          type="checkbox"
                                        />
                                      </div>
                                    </Col>
                                  </div>
                                </Row>
                              </Component>
                            </EditableRunsInput>
                          </div>
                        </div>
                      </Col>
                      <Col
                        bsClass="col"
                        componentClass="div"
                        lg={6}
                        xs={12}
                      >
                        <div
                          className="col-lg-6 col-xs-12"
                        />
                      </Col>
                    </form>
                  </Form>
                </div>
              </PanelBody>
            </div>
          </Panel>
        </Uncontrolled(Panel)>
      </ForwardRef>
    </BasePropertiesPanel>
  </AssayPropertiesPanelImpl>
</ComponentWithDomainPropertiesPanelCollapse>
`;
