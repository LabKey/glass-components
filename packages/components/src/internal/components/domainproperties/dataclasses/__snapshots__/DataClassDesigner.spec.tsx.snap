// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`DataClassDesigner custom properties 1`] = `
Array [
  <div
    className="domain-form-panel lk-border-theme-light panel panel-default"
  >
    <div
      className="domain-panel-header domain-heading-collapsible domain-panel-header-expanded labkey-page-nav panel-heading"
      id="dataclass-properties-hdr"
      onClick={[Function]}
    >
      <span
        className="domain-panel-title"
      >
        Source Properties
      </span>
      <span
        className="pull-right"
      >
        <svg
          aria-hidden="true"
          className="svg-inline--fa fa-minus-square fa-w-14 fa-lg domain-form-collapse-btn"
          data-icon="minus-square"
          data-prefix="fas"
          focusable="false"
          role="img"
          style={Object {}}
          viewBox="0 0 448 512"
          xmlns="http://www.w3.org/2000/svg"
        >
          <path
            d="M400 32H48C21.5 32 0 53.5 0 80v352c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V80c0-26.5-21.5-48-48-48zM92 296c-6.6 0-12-5.4-12-12v-56c0-6.6 5.4-12 12-12h264c6.6 0 12 5.4 12 12v56c0 6.6-5.4 12-12 12H92z"
            fill="currentColor"
            style={Object {}}
          />
        </svg>
      </span>
    </div>
    <div
      aria-expanded={null}
      className="panel-collapse collapse in"
    >
      <div
        className="panel-body"
      >
        <div
          className="margin-bottom row"
        >
          <div
            className="col-xs-9"
          >
            <div
              className="entity-form--headerhelp"
            >
              header text test
            </div>
          </div>
          <div
            className="col-xs-3"
          >
            <div
              className="row"
            >
              <div
                className="col-xs-12"
              >
                <a
                  className="domain-field-float-right"
                  href="https://www.labkey.org/Documentation/wiki-page.view?name=createDataClass&referrer=inPage"
                  rel="noreferrer"
                  target="_blank"
                >
                  Learn more about designing sources
                </a>
              </div>
            </div>
          </div>
        </div>
        <form
          className=""
        >
          <div
            className="margin-bottom margin-top row"
          >
            <div
              className="col-xs-2"
            >
              <span
                className="domain-no-wrap"
              >
                Name
                <span
                  className="label-help-target"
                  onMouseOut={[Function]}
                  onMouseOver={[Function]}
                >
                  <svg
                    aria-hidden="true"
                    className="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                    data-icon="question-circle"
                    data-prefix="fas"
                    focusable="false"
                    role="img"
                    style={Object {}}
                    viewBox="0 0 512 512"
                    xmlns="http://www.w3.org/2000/svg"
                  >
                    <path
                      d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                      fill="currentColor"
                      style={Object {}}
                    />
                  </svg>
                </span>
                 *
              </span>
            </div>
            <div
              className="col-xs-10"
            >
              <input
                className="form-control"
                id="entity-name"
                onChange={[Function]}
                placeholder="Enter a name for this source"
                type="text"
                value=""
              />
            </div>
          </div>
          <div
            className="margin-bottom row"
          >
            <div
              className="col-xs-2"
            >
              <span
                className="domain-no-wrap"
              >
                Description
                <span
                  className="label-help-target"
                  onMouseOut={[Function]}
                  onMouseOver={[Function]}
                >
                  <svg
                    aria-hidden="true"
                    className="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                    data-icon="question-circle"
                    data-prefix="fas"
                    focusable="false"
                    role="img"
                    style={Object {}}
                    viewBox="0 0 512 512"
                    xmlns="http://www.w3.org/2000/svg"
                  >
                    <path
                      d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                      fill="currentColor"
                      style={Object {}}
                    />
                  </svg>
                </span>
                
              </span>
            </div>
            <div
              className="col-xs-10"
            >
              <textarea
                className="form-control textarea-noresize"
                id="entity-description"
                onChange={[Function]}
                value=""
              />
            </div>
          </div>
          <div
            className="margin-bottom row"
          >
            <div
              className="col-xs-2"
            >
              Naming 
              <span
                className="domain-no-wrap"
              >
                Pattern
                <span
                  className="label-help-target"
                  onMouseOut={[Function]}
                  onMouseOver={[Function]}
                >
                  <svg
                    aria-hidden="true"
                    className="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                    data-icon="question-circle"
                    data-prefix="fas"
                    focusable="false"
                    role="img"
                    style={Object {}}
                    viewBox="0 0 512 512"
                    xmlns="http://www.w3.org/2000/svg"
                  >
                    <path
                      d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                      fill="currentColor"
                      style={Object {}}
                    />
                  </svg>
                </span>
                
              </span>
            </div>
            <div
              className="col-xs-10"
            >
              <input
                className="form-control"
                id="entity-nameExpression"
                onChange={[Function]}
                placeholder="name expression placeholder test"
                type="text"
                value=""
              />
            </div>
          </div>
        </form>
      </div>
    </div>
  </div>,
  <div
    className="domain-form-panel panel panel-default"
  >
    <div
      className="domain-panel-header domain-heading-collapsible domain-panel-header-collapsed panel-heading"
      id="domain-header"
      onClick={[Function]}
    >
      <span
        className="label-help-target"
        onMouseOut={[Function]}
        onMouseOver={[Function]}
      >
        <span
          className="domain-panel-status-icon domain-panel-status-icon-blue"
        >
          <svg
            aria-hidden="true"
            className="svg-inline--fa fa-exclamation-circle fa-w-16 "
            data-icon="exclamation-circle"
            data-prefix="fas"
            focusable="false"
            role="img"
            style={Object {}}
            viewBox="0 0 512 512"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zm-248 50c-25.405 0-46 20.595-46 46s20.595 46 46 46 46-20.595 46-46-20.595-46-46-46zm-43.673-165.346l7.418 136c.347 6.364 5.609 11.346 11.982 11.346h48.546c6.373 0 11.635-4.982 11.982-11.346l7.418-136c.375-6.874-5.098-12.654-11.982-12.654h-63.383c-6.884 0-12.356 5.78-11.981 12.654z"
              fill="currentColor"
              style={Object {}}
            />
          </svg>
        </span>
      </span>
      <span
        className="domain-panel-title"
      >
        Fields
      </span>
      <span
        className="pull-right"
      >
        <svg
          aria-hidden="true"
          className="svg-inline--fa fa-plus-square fa-w-14 fa-lg domain-form-expand-btn"
          data-icon="plus-square"
          data-prefix="fas"
          focusable="false"
          role="img"
          style={Object {}}
          viewBox="0 0 448 512"
          xmlns="http://www.w3.org/2000/svg"
        >
          <path
            d="M400 32H48C21.5 32 0 53.5 0 80v352c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V80c0-26.5-21.5-48-48-48zm-32 252c0 6.6-5.4 12-12 12h-92v92c0 6.6-5.4 12-12 12h-56c-6.6 0-12-5.4-12-12v-92H92c-6.6 0-12-5.4-12-12v-56c0-6.6 5.4-12 12-12h92v-92c0-6.6 5.4-12 12-12h56c6.6 0 12 5.4 12 12v92h92c6.6 0 12 5.4 12 12v56z"
            fill="currentColor"
            style={Object {}}
          />
        </svg>
      </span>
    </div>
    <div
      aria-expanded={null}
      className="panel-collapse collapse"
    >
      <div
        className="panel-body"
      >
        <div
          className="row"
        >
          <div
            className="col-xs-12"
          />
        </div>
        <span
          className="translator--toggle__wizard"
        >
          <div
            className="row"
          >
            <div
              className="col-sm-12"
            >
              <label
                className="control-label text-left"
              >
                <strong>
                  Import or infer fields from file
                </strong>
              </label>
            </div>
          </div>
          <div
            className="row"
          >
            <div
              className="col-sm-12"
            >
              <div
                className="wizard-row--container"
              >
                <div
                  className=""
                >
                  <div
                    className="file-upload--container block"
                  >
                    <label
                      className="file-upload--label"
                      htmlFor="fileUpload"
                      onDragEnter={[Function]}
                      onDragLeave={[Function]}
                      onDragOver={[Function]}
                      onDrop={[Function]}
                    >
                      <i
                        aria-hidden="true"
                        className="fa fa-cloud-upload fa-2x cloud-logo"
                      />
                      Select file or drag and drop here.
                    </label>
                    <input
                      accept=".csv, .tsv, .txt, .xls, .xlsx, .json"
                      className="file-upload--input"
                      id="fileUpload"
                      multiple={false}
                      name="fileUpload"
                      onChange={[Function]}
                      type="file"
                    />
                  </div>
                </div>
              </div>
            </div>
          </div>
        </span>
        <div
          className="row"
        >
          <div
            className="col-md-9"
          >
            <div
              className="file-form-formats"
            >
              <strong>
                Supported formats include: 
              </strong>
              .csv, .tsv, .txt, .xls, .xlsx, .json
            </div>
          </div>
          <div
            className="col-md-3"
          >
            <div
              className="pull-right"
            />
          </div>
        </div>
        <div
          className="margin-top domain-form-manual-section"
        >
          <p>
            Or
          </p>
          <div
            className="form-group"
          >
            <div
              className="domain-form-manual-btn"
            >
              <span
                className="container--action-button btn btn-default"
                onClick={[Function]}
              >
                Manually Define Fields
              </span>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>,
  <div
    className="domain-form-panel domain-designer-buttons"
  >
    <button
      className="btn btn-default"
      disabled={false}
      onClick={[MockFunction]}
      type="button"
    >
      Cancel
    </button>
    <button
      className="pull-right btn btn-primary"
      disabled={false}
      onClick={[Function]}
      type="button"
    >
      Finish it up
    </button>
  </div>,
]
`;

exports[`DataClassDesigner default properties 1`] = `
Array [
  <div
    className="domain-form-panel domain-panel-no-theme panel panel-default"
  >
    <div
      className="domain-panel-header domain-heading-collapsible domain-panel-header-expanded domain-panel-header-no-theme panel-heading"
      id="dataclass-properties-hdr"
      onClick={[Function]}
    >
      <span
        className="domain-panel-title"
      >
        Data Class Properties
      </span>
      <span
        className="pull-right"
      >
        <svg
          aria-hidden="true"
          className="svg-inline--fa fa-minus-square fa-w-14 fa-lg domain-form-collapse-btn"
          data-icon="minus-square"
          data-prefix="fas"
          focusable="false"
          role="img"
          style={Object {}}
          viewBox="0 0 448 512"
          xmlns="http://www.w3.org/2000/svg"
        >
          <path
            d="M400 32H48C21.5 32 0 53.5 0 80v352c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V80c0-26.5-21.5-48-48-48zM92 296c-6.6 0-12-5.4-12-12v-56c0-6.6 5.4-12 12-12h264c6.6 0 12 5.4 12 12v56c0 6.6-5.4 12-12 12H92z"
            fill="currentColor"
            style={Object {}}
          />
        </svg>
      </span>
    </div>
    <div
      aria-expanded={null}
      className="panel-collapse collapse in"
    >
      <div
        className="panel-body"
      >
        <div
          className="margin-bottom row"
        >
          <div
            className="col-xs-12"
          >
            <div
              className="row"
            >
              <div
                className="col-xs-12"
              >
                <a
                  className="domain-field-float-right"
                  href="https://www.labkey.org/Documentation/wiki-page.view?name=createDataClass&referrer=inPage"
                  rel="noreferrer"
                  target="_blank"
                >
                  Learn more about designing data classes
                </a>
              </div>
            </div>
          </div>
        </div>
        <form
          className=""
        >
          <div
            className="margin-bottom margin-top row"
          >
            <div
              className="col-xs-2"
            >
              <span
                className="domain-no-wrap"
              >
                Name
                <span
                  className="label-help-target"
                  onMouseOut={[Function]}
                  onMouseOver={[Function]}
                >
                  <svg
                    aria-hidden="true"
                    className="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                    data-icon="question-circle"
                    data-prefix="fas"
                    focusable="false"
                    role="img"
                    style={Object {}}
                    viewBox="0 0 512 512"
                    xmlns="http://www.w3.org/2000/svg"
                  >
                    <path
                      d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                      fill="currentColor"
                      style={Object {}}
                    />
                  </svg>
                </span>
                 *
              </span>
            </div>
            <div
              className="col-xs-10"
            >
              <input
                className="form-control"
                id="entity-name"
                onChange={[Function]}
                placeholder="Enter a name for this data class"
                type="text"
                value=""
              />
            </div>
          </div>
          <div
            className="margin-bottom row"
          >
            <div
              className="col-xs-2"
            >
              <span
                className="domain-no-wrap"
              >
                Description
                <span
                  className="label-help-target"
                  onMouseOut={[Function]}
                  onMouseOver={[Function]}
                >
                  <svg
                    aria-hidden="true"
                    className="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                    data-icon="question-circle"
                    data-prefix="fas"
                    focusable="false"
                    role="img"
                    style={Object {}}
                    viewBox="0 0 512 512"
                    xmlns="http://www.w3.org/2000/svg"
                  >
                    <path
                      d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                      fill="currentColor"
                      style={Object {}}
                    />
                  </svg>
                </span>
                
              </span>
            </div>
            <div
              className="col-xs-10"
            >
              <textarea
                className="form-control textarea-noresize"
                id="entity-description"
                onChange={[Function]}
                value=""
              />
            </div>
          </div>
          <div
            className="margin-bottom row"
          >
            <div
              className="col-xs-2"
            >
              Naming 
              <span
                className="domain-no-wrap"
              >
                Pattern
                <span
                  className="label-help-target"
                  onMouseOut={[Function]}
                  onMouseOver={[Function]}
                >
                  <svg
                    aria-hidden="true"
                    className="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                    data-icon="question-circle"
                    data-prefix="fas"
                    focusable="false"
                    role="img"
                    style={Object {}}
                    viewBox="0 0 512 512"
                    xmlns="http://www.w3.org/2000/svg"
                  >
                    <path
                      d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                      fill="currentColor"
                      style={Object {}}
                    />
                  </svg>
                </span>
                
              </span>
            </div>
            <div
              className="col-xs-10"
            >
              <input
                className="form-control"
                id="entity-nameExpression"
                onChange={[Function]}
                placeholder="Enter a naming pattern (e.g., DC-\${now:date}-\${genId})"
                type="text"
                value=""
              />
            </div>
          </div>
        </form>
        <div
          className="row"
        >
          <div
            className="col-xs-2"
          >
            <span
              className="domain-no-wrap"
            >
              Category
              
            </span>
          </div>
          <div
            className="col-xs-10"
          >
            <div
              className="select-input-container form-group row"
            >
              <div
                className="col-sm-9 col-xs-12"
              >
                <div
                  className="select-input select-input--is-disabled css-14jk2my-container"
                  id="selectinput-0"
                  onKeyDown={[Function]}
                >
                  <span
                    aria-atomic="false"
                    aria-live="polite"
                    aria-relevant="additions text"
                    className="css-1f43avz-a11yText-A11yText"
                  />
                  <div
                    className="select-input__control select-input__control--is-disabled css-1fhf3k1-control"
                    onMouseDown={[Function]}
                    onTouchEnd={[Function]}
                  >
                    <div
                      className="select-input__value-container css-g1d714-ValueContainer"
                    >
                      <div
                        className="select-input__placeholder css-1wa3eu0-placeholder"
                      >
                        Loading...
                      </div>
                      <div
                        className="css-1bwsx9e-Input"
                      >
                        <div
                          className="select-input__input"
                          style={
                            Object {
                              "display": "inline-block",
                            }
                          }
                        >
                          <input
                            aria-autocomplete="list"
                            autoCapitalize="none"
                            autoComplete="off"
                            autoCorrect="off"
                            disabled={true}
                            id="react-select-2-input"
                            onBlur={[Function]}
                            onChange={[Function]}
                            onFocus={[Function]}
                            required={false}
                            spellCheck="false"
                            style={
                              Object {
                                "background": 0,
                                "border": 0,
                                "boxSizing": "content-box",
                                "color": "inherit",
                                "fontSize": "inherit",
                                "label": "input",
                                "opacity": 1,
                                "outline": 0,
                                "padding": 0,
                                "width": "1px",
                              }
                            }
                            tabIndex="0"
                            type="text"
                            value=""
                          />
                          <div
                            style={
                              Object {
                                "height": 0,
                                "left": 0,
                                "overflow": "scroll",
                                "position": "absolute",
                                "top": 0,
                                "visibility": "hidden",
                                "whiteSpace": "pre",
                              }
                            }
                          >
                            
                          </div>
                        </div>
                      </div>
                    </div>
                    <div
                      className="select-input__indicators css-1hb7zxy-IndicatorsContainer"
                    >
                      <span
                        className="select-input__indicator-separator css-109onse-indicatorSeparator"
                      />
                      <div
                        aria-hidden="true"
                        className="select-input__indicator select-input__dropdown-indicator css-tlfecz-indicatorContainer"
                        onMouseDown={[Function]}
                        onTouchEnd={[Function]}
                      >
                        <svg
                          aria-hidden="true"
                          className="css-tj5bde-Svg"
                          focusable="false"
                          height={20}
                          viewBox="0 0 20 20"
                          width={20}
                        >
                          <path
                            d="M4.516 7.548c0.436-0.446 1.043-0.481 1.576 0l3.908 3.747 3.908-3.747c0.533-0.481 1.141-0.446 1.574 0 0.436 0.445 0.408 1.197 0 1.615-0.406 0.418-4.695 4.502-4.695 4.502-0.217 0.223-0.502 0.335-0.787 0.335s-0.57-0.112-0.789-0.335c0 0-4.287-4.084-4.695-4.502s-0.436-1.17 0-1.615z"
                          />
                        </svg>
                      </div>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
        <div
          className="row"
        >
          <div
            className="col-xs-2"
          >
            Sample 
            <span
              className="domain-no-wrap"
            >
              Type
              <span
                className="label-help-target"
                onMouseOut={[Function]}
                onMouseOver={[Function]}
              >
                <svg
                  aria-hidden="true"
                  className="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                  data-icon="question-circle"
                  data-prefix="fas"
                  focusable="false"
                  role="img"
                  style={Object {}}
                  viewBox="0 0 512 512"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <path
                    d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                    fill="currentColor"
                    style={Object {}}
                  />
                </svg>
              </span>
              
            </span>
          </div>
          <div
            className="col-xs-10"
          >
            <div
              className="select-input-container form-group row"
            >
              <div
                className="col-sm-9 col-xs-12"
              >
                <div
                  className="select-input select-input--is-disabled css-14jk2my-container"
                  id="selectinput-1"
                  onKeyDown={[Function]}
                >
                  <span
                    aria-atomic="false"
                    aria-live="polite"
                    aria-relevant="additions text"
                    className="css-1f43avz-a11yText-A11yText"
                  />
                  <div
                    className="select-input__control select-input__control--is-disabled css-1fhf3k1-control"
                    onMouseDown={[Function]}
                    onTouchEnd={[Function]}
                  >
                    <div
                      className="select-input__value-container css-g1d714-ValueContainer"
                    >
                      <div
                        className="select-input__placeholder css-1wa3eu0-placeholder"
                      >
                        Loading...
                      </div>
                      <div
                        className="css-1bwsx9e-Input"
                      >
                        <div
                          className="select-input__input"
                          style={
                            Object {
                              "display": "inline-block",
                            }
                          }
                        >
                          <input
                            aria-autocomplete="list"
                            autoCapitalize="none"
                            autoComplete="off"
                            autoCorrect="off"
                            disabled={true}
                            id="react-select-3-input"
                            onBlur={[Function]}
                            onChange={[Function]}
                            onFocus={[Function]}
                            required={false}
                            spellCheck="false"
                            style={
                              Object {
                                "background": 0,
                                "border": 0,
                                "boxSizing": "content-box",
                                "color": "inherit",
                                "fontSize": "inherit",
                                "label": "input",
                                "opacity": 1,
                                "outline": 0,
                                "padding": 0,
                                "width": "1px",
                              }
                            }
                            tabIndex="0"
                            type="text"
                            value=""
                          />
                          <div
                            style={
                              Object {
                                "height": 0,
                                "left": 0,
                                "overflow": "scroll",
                                "position": "absolute",
                                "top": 0,
                                "visibility": "hidden",
                                "whiteSpace": "pre",
                              }
                            }
                          >
                            
                          </div>
                        </div>
                      </div>
                    </div>
                    <div
                      className="select-input__indicators css-1hb7zxy-IndicatorsContainer"
                    >
                      <span
                        className="select-input__indicator-separator css-109onse-indicatorSeparator"
                      />
                      <div
                        aria-hidden="true"
                        className="select-input__indicator select-input__dropdown-indicator css-tlfecz-indicatorContainer"
                        onMouseDown={[Function]}
                        onTouchEnd={[Function]}
                      >
                        <svg
                          aria-hidden="true"
                          className="css-tj5bde-Svg"
                          focusable="false"
                          height={20}
                          viewBox="0 0 20 20"
                          width={20}
                        >
                          <path
                            d="M4.516 7.548c0.436-0.446 1.043-0.481 1.576 0l3.908 3.747 3.908-3.747c0.533-0.481 1.141-0.446 1.574 0 0.436 0.445 0.408 1.197 0 1.615-0.406 0.418-4.695 4.502-4.695 4.502-0.217 0.223-0.502 0.335-0.787 0.335s-0.57-0.112-0.789-0.335c0 0-4.287-4.084-4.695-4.502s-0.436-1.17 0-1.615z"
                          />
                        </svg>
                      </div>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>,
  <div
    className="domain-form-panel panel panel-default"
  >
    <div
      className="domain-panel-header domain-heading-collapsible domain-panel-header-collapsed panel-heading"
      id="domain-header"
      onClick={[Function]}
    >
      <span
        className="label-help-target"
        onMouseOut={[Function]}
        onMouseOver={[Function]}
      >
        <span
          className="domain-panel-status-icon domain-panel-status-icon-blue"
        >
          <svg
            aria-hidden="true"
            className="svg-inline--fa fa-exclamation-circle fa-w-16 "
            data-icon="exclamation-circle"
            data-prefix="fas"
            focusable="false"
            role="img"
            style={Object {}}
            viewBox="0 0 512 512"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zm-248 50c-25.405 0-46 20.595-46 46s20.595 46 46 46 46-20.595 46-46-20.595-46-46-46zm-43.673-165.346l7.418 136c.347 6.364 5.609 11.346 11.982 11.346h48.546c6.373 0 11.635-4.982 11.982-11.346l7.418-136c.375-6.874-5.098-12.654-11.982-12.654h-63.383c-6.884 0-12.356 5.78-11.981 12.654z"
              fill="currentColor"
              style={Object {}}
            />
          </svg>
        </span>
      </span>
      <span
        className="domain-panel-title"
      >
        Fields
      </span>
      <span
        className="pull-right"
      >
        <svg
          aria-hidden="true"
          className="svg-inline--fa fa-plus-square fa-w-14 fa-lg domain-form-expand-btn"
          data-icon="plus-square"
          data-prefix="fas"
          focusable="false"
          role="img"
          style={Object {}}
          viewBox="0 0 448 512"
          xmlns="http://www.w3.org/2000/svg"
        >
          <path
            d="M400 32H48C21.5 32 0 53.5 0 80v352c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V80c0-26.5-21.5-48-48-48zm-32 252c0 6.6-5.4 12-12 12h-92v92c0 6.6-5.4 12-12 12h-56c-6.6 0-12-5.4-12-12v-92H92c-6.6 0-12-5.4-12-12v-56c0-6.6 5.4-12 12-12h92v-92c0-6.6 5.4-12 12-12h56c6.6 0 12 5.4 12 12v92h92c6.6 0 12 5.4 12 12v56z"
            fill="currentColor"
            style={Object {}}
          />
        </svg>
      </span>
    </div>
    <div
      aria-expanded={null}
      className="panel-collapse collapse"
    >
      <div
        className="panel-body"
      >
        <div
          className="row"
        >
          <div
            className="col-xs-12"
          />
        </div>
        <span
          className="translator--toggle__wizard"
        >
          <div
            className="row"
          >
            <div
              className="col-sm-12"
            >
              <label
                className="control-label text-left"
              >
                <strong>
                  Import or infer fields from file
                </strong>
              </label>
            </div>
          </div>
          <div
            className="row"
          >
            <div
              className="col-sm-12"
            >
              <div
                className="wizard-row--container"
              >
                <div
                  className=""
                >
                  <div
                    className="file-upload--container block"
                  >
                    <label
                      className="file-upload--label"
                      htmlFor="fileUpload"
                      onDragEnter={[Function]}
                      onDragLeave={[Function]}
                      onDragOver={[Function]}
                      onDrop={[Function]}
                    >
                      <i
                        aria-hidden="true"
                        className="fa fa-cloud-upload fa-2x cloud-logo"
                      />
                      Select file or drag and drop here.
                    </label>
                    <input
                      accept=".csv, .tsv, .txt, .xls, .xlsx, .json"
                      className="file-upload--input"
                      id="fileUpload"
                      multiple={false}
                      name="fileUpload"
                      onChange={[Function]}
                      type="file"
                    />
                  </div>
                </div>
              </div>
            </div>
          </div>
        </span>
        <div
          className="row"
        >
          <div
            className="col-md-9"
          >
            <div
              className="file-form-formats"
            >
              <strong>
                Supported formats include: 
              </strong>
              .csv, .tsv, .txt, .xls, .xlsx, .json
            </div>
          </div>
          <div
            className="col-md-3"
          >
            <div
              className="pull-right"
            />
          </div>
        </div>
        <div
          className="margin-top domain-form-manual-section"
        >
          <p>
            Or
          </p>
          <div
            className="form-group"
          >
            <div
              className="domain-form-manual-btn"
            >
              <span
                className="container--action-button btn btn-default"
                onClick={[Function]}
              >
                Manually Define Fields
              </span>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>,
  <div
    className="domain-form-panel domain-designer-buttons"
  >
    <button
      className="btn btn-default"
      disabled={false}
      onClick={[MockFunction]}
      type="button"
    >
      Cancel
    </button>
    <button
      className="pull-right btn btn-success"
      disabled={false}
      onClick={[Function]}
      type="button"
    >
      Save
    </button>
  </div>,
]
`;

exports[`DataClassDesigner initModel 1`] = `
<ComponentWithBaseDomainDesigner
  initModel={
    DataClassModel {
      "category": "sources",
      "description": "with a description",
      "domain": Immutable.Record {
        "name": "test1",
        "container": "3E40EE5E-91B7-1036-BF18-F5B7057C168C",
        "description": null,
        "domainURI": "urn:lsid:labkey.com:DataClass.Folder-5398:test1",
        "domainId": 58021,
        "allowFileLinkProperties": false,
        "allowAttachmentProperties": true,
        "allowFlagProperties": true,
        "allowTimepointProperties": false,
        "showDefaultValueSettings": false,
        "defaultDefaultValueType": "FIXED_EDITABLE",
        "defaultValueOptions": Immutable.List [
          "FIXED_EDITABLE",
          "LAST_ENTERED",
        ],
        "fields": Immutable.List [
          Immutable.Record {
            "conceptURI": null,
            "conditionalFormats": Immutable.List [],
            "defaultScale": "LINEAR",
            "defaultValueType": null,
            "defaultValue": null,
            "defaultDisplayValue": "[none]",
            "description": null,
            "dimension": false,
            "excludeFromShifting": false,
            "format": null,
            "hidden": false,
            "importAliases": null,
            "label": null,
            "lookupContainer": undefined,
            "lookupQuery": undefined,
            "lookupSchema": undefined,
            "lookupValidator": undefined,
            "measure": false,
            "mvEnabled": false,
            "name": "TextFIeld",
            "PHI": "NotPHI",
            "propertyId": 518195,
            "propertyURI": "urn:lsid:labkey.com:DataClass.Folder-5398:test1#Field1",
            "propertyValidators": Array [
              Object {
                "description": null,
                "errorMessage": null,
                "expression": "~lte=4000",
                "name": "Text Length",
                "new": true,
                "properties": Object {},
                "rowId": 261363,
                "type": "Length",
              },
            ],
            "rangeValidators": Immutable.List [],
            "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
            "regexValidators": Immutable.List [],
            "recommendedVariable": false,
            "required": true,
            "scale": 4000,
            "URL": null,
            "shownInDetailsView": true,
            "shownInInsertView": true,
            "shownInUpdateView": true,
            "visible": true,
            "dataType": Immutable.Record {
              "conceptURI": undefined,
              "display": "Text",
              "name": "string",
              "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
              "alternateRangeURI": "xsd:string",
              "shortDisplay": "String",
              "lookupSchema": undefined,
              "lookupQuery": undefined,
            },
            "lookupQueryValue": undefined,
            "lookupType": Immutable.Record {
              "conceptURI": undefined,
              "display": "Lookup",
              "name": "lookup",
              "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
              "alternateRangeURI": undefined,
              "shortDisplay": undefined,
              "lookupSchema": undefined,
              "lookupQuery": undefined,
            },
            "original": Object {
              "conceptURI": null,
              "dataType": Immutable.Record {
                "conceptURI": undefined,
                "display": "Text",
                "name": "string",
                "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                "alternateRangeURI": "xsd:string",
                "shortDisplay": "String",
                "lookupSchema": undefined,
                "lookupQuery": undefined,
              },
              "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
            },
            "updatedField": false,
            "isPrimaryKey": false,
            "lockType": "NotLocked",
            "wrappedColumnName": undefined,
            "disablePhiLevel": false,
            "lockExistingField": false,
            "sourceOntology": undefined,
            "conceptSubtree": undefined,
            "conceptLabelColumn": undefined,
            "conceptImportColumn": undefined,
            "principalConceptCode": undefined,
            "derivationDataScope": undefined,
            "selected": false,
          },
          Immutable.Record {
            "conceptURI": null,
            "conditionalFormats": Immutable.List [],
            "defaultScale": "LINEAR",
            "defaultValueType": "FIXED_EDITABLE",
            "defaultValue": null,
            "defaultDisplayValue": "[none]",
            "description": null,
            "dimension": false,
            "excludeFromShifting": false,
            "format": null,
            "hidden": false,
            "importAliases": null,
            "label": null,
            "lookupContainer": undefined,
            "lookupQuery": undefined,
            "lookupSchema": undefined,
            "lookupValidator": undefined,
            "measure": true,
            "mvEnabled": false,
            "name": "IntField",
            "PHI": "NotPHI",
            "propertyId": 521044,
            "propertyURI": "urn:lsid:labkey.com:DataClass.Folder-5398:test1#IntField",
            "propertyValidators": Array [],
            "rangeValidators": Immutable.List [],
            "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
            "regexValidators": Immutable.List [],
            "recommendedVariable": false,
            "required": false,
            "scale": 4000,
            "URL": null,
            "shownInDetailsView": true,
            "shownInInsertView": true,
            "shownInUpdateView": true,
            "visible": true,
            "dataType": Immutable.Record {
              "conceptURI": undefined,
              "display": "Integer",
              "name": "int",
              "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
              "alternateRangeURI": "xsd:int",
              "shortDisplay": undefined,
              "lookupSchema": undefined,
              "lookupQuery": undefined,
            },
            "lookupQueryValue": undefined,
            "lookupType": Immutable.Record {
              "conceptURI": undefined,
              "display": "Lookup",
              "name": "lookup",
              "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
              "alternateRangeURI": undefined,
              "shortDisplay": undefined,
              "lookupSchema": undefined,
              "lookupQuery": undefined,
            },
            "original": Object {
              "conceptURI": null,
              "dataType": Immutable.Record {
                "conceptURI": undefined,
                "display": "Integer",
                "name": "int",
                "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                "alternateRangeURI": "xsd:int",
                "shortDisplay": undefined,
                "lookupSchema": undefined,
                "lookupQuery": undefined,
              },
              "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
            },
            "updatedField": false,
            "isPrimaryKey": false,
            "lockType": "NotLocked",
            "wrappedColumnName": undefined,
            "disablePhiLevel": false,
            "lockExistingField": false,
            "sourceOntology": undefined,
            "conceptSubtree": undefined,
            "conceptLabelColumn": undefined,
            "conceptImportColumn": undefined,
            "principalConceptCode": undefined,
            "derivationDataScope": undefined,
            "selected": false,
          },
          Immutable.Record {
            "conceptURI": null,
            "conditionalFormats": Immutable.List [],
            "defaultScale": "LINEAR",
            "defaultValueType": "FIXED_EDITABLE",
            "defaultValue": null,
            "defaultDisplayValue": "[none]",
            "description": null,
            "dimension": false,
            "excludeFromShifting": false,
            "format": null,
            "hidden": false,
            "importAliases": null,
            "label": null,
            "lookupContainer": undefined,
            "lookupQuery": undefined,
            "lookupSchema": undefined,
            "lookupValidator": undefined,
            "measure": false,
            "mvEnabled": false,
            "name": "DateField",
            "PHI": "NotPHI",
            "propertyId": 521045,
            "propertyURI": "urn:lsid:labkey.com:DataClass.Folder-5398:test1#DateField",
            "propertyValidators": Array [],
            "rangeValidators": Immutable.List [],
            "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
            "regexValidators": Immutable.List [],
            "recommendedVariable": false,
            "required": false,
            "scale": 4000,
            "URL": null,
            "shownInDetailsView": true,
            "shownInInsertView": true,
            "shownInUpdateView": true,
            "visible": true,
            "dataType": Immutable.Record {
              "conceptURI": undefined,
              "display": "Date Time",
              "name": "dateTime",
              "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
              "alternateRangeURI": "xsd:dateTime",
              "shortDisplay": undefined,
              "lookupSchema": undefined,
              "lookupQuery": undefined,
            },
            "lookupQueryValue": undefined,
            "lookupType": Immutable.Record {
              "conceptURI": undefined,
              "display": "Lookup",
              "name": "lookup",
              "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
              "alternateRangeURI": undefined,
              "shortDisplay": undefined,
              "lookupSchema": undefined,
              "lookupQuery": undefined,
            },
            "original": Object {
              "conceptURI": null,
              "dataType": Immutable.Record {
                "conceptURI": undefined,
                "display": "Date Time",
                "name": "dateTime",
                "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                "alternateRangeURI": "xsd:dateTime",
                "shortDisplay": undefined,
                "lookupSchema": undefined,
                "lookupQuery": undefined,
              },
              "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
            },
            "updatedField": false,
            "isPrimaryKey": false,
            "lockType": "NotLocked",
            "wrappedColumnName": undefined,
            "disablePhiLevel": false,
            "lockExistingField": false,
            "sourceOntology": undefined,
            "conceptSubtree": undefined,
            "conceptLabelColumn": undefined,
            "conceptImportColumn": undefined,
            "principalConceptCode": undefined,
            "derivationDataScope": undefined,
            "selected": false,
          },
        ],
        "indices": Immutable.List [],
        "domainException": undefined,
        "mandatoryFieldNames": Immutable.List [],
        "reservedFieldNames": Immutable.List [],
        "newDesignFields": undefined,
        "instructions": null,
        "domainKindName": undefined,
      },
      "domainId": 0,
      "lsid": "urn:lsid:labkey.com:DataClass.Folder-5398:test1",
      "name": "test1",
      "nameExpression": "Source-\${genId}",
      "rowId": 802,
      "sampleSet": 1085,
      Symbol(immer-draftable): true,
    }
  }
  onCancel={[MockFunction]}
  onComplete={[MockFunction]}
  testMode={true}
>
  <DataClassDesignerImpl
    currentPanelIndex={0}
    domainFormDisplayOptions={
      Object {
        "disableMvEnabled": false,
        "domainKindDisplayName": "data class",
        "hideAddFieldsButton": false,
        "hideConditionalFormatting": false,
        "hideFilePropertyType": false,
        "hideImportData": false,
        "hideImportExport": false,
        "hideRequired": false,
        "hideStudyPropertyTypes": false,
        "hideTextOptions": false,
        "hideValidators": false,
        "isDragDisabled": false,
        "phiLevelDisabled": false,
      }
    }
    firstState={true}
    initModel={
      DataClassModel {
        "category": "sources",
        "description": "with a description",
        "domain": Immutable.Record {
          "name": "test1",
          "container": "3E40EE5E-91B7-1036-BF18-F5B7057C168C",
          "description": null,
          "domainURI": "urn:lsid:labkey.com:DataClass.Folder-5398:test1",
          "domainId": 58021,
          "allowFileLinkProperties": false,
          "allowAttachmentProperties": true,
          "allowFlagProperties": true,
          "allowTimepointProperties": false,
          "showDefaultValueSettings": false,
          "defaultDefaultValueType": "FIXED_EDITABLE",
          "defaultValueOptions": Immutable.List [
            "FIXED_EDITABLE",
            "LAST_ENTERED",
          ],
          "fields": Immutable.List [
            Immutable.Record {
              "conceptURI": null,
              "conditionalFormats": Immutable.List [],
              "defaultScale": "LINEAR",
              "defaultValueType": null,
              "defaultValue": null,
              "defaultDisplayValue": "[none]",
              "description": null,
              "dimension": false,
              "excludeFromShifting": false,
              "format": null,
              "hidden": false,
              "importAliases": null,
              "label": null,
              "lookupContainer": undefined,
              "lookupQuery": undefined,
              "lookupSchema": undefined,
              "lookupValidator": undefined,
              "measure": false,
              "mvEnabled": false,
              "name": "TextFIeld",
              "PHI": "NotPHI",
              "propertyId": 518195,
              "propertyURI": "urn:lsid:labkey.com:DataClass.Folder-5398:test1#Field1",
              "propertyValidators": Array [
                Object {
                  "description": null,
                  "errorMessage": null,
                  "expression": "~lte=4000",
                  "name": "Text Length",
                  "new": true,
                  "properties": Object {},
                  "rowId": 261363,
                  "type": "Length",
                },
              ],
              "rangeValidators": Immutable.List [],
              "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
              "regexValidators": Immutable.List [],
              "recommendedVariable": false,
              "required": true,
              "scale": 4000,
              "URL": null,
              "shownInDetailsView": true,
              "shownInInsertView": true,
              "shownInUpdateView": true,
              "visible": true,
              "dataType": Immutable.Record {
                "conceptURI": undefined,
                "display": "Text",
                "name": "string",
                "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                "alternateRangeURI": "xsd:string",
                "shortDisplay": "String",
                "lookupSchema": undefined,
                "lookupQuery": undefined,
              },
              "lookupQueryValue": undefined,
              "lookupType": Immutable.Record {
                "conceptURI": undefined,
                "display": "Lookup",
                "name": "lookup",
                "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                "alternateRangeURI": undefined,
                "shortDisplay": undefined,
                "lookupSchema": undefined,
                "lookupQuery": undefined,
              },
              "original": Object {
                "conceptURI": null,
                "dataType": Immutable.Record {
                  "conceptURI": undefined,
                  "display": "Text",
                  "name": "string",
                  "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                  "alternateRangeURI": "xsd:string",
                  "shortDisplay": "String",
                  "lookupSchema": undefined,
                  "lookupQuery": undefined,
                },
                "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
              },
              "updatedField": false,
              "isPrimaryKey": false,
              "lockType": "NotLocked",
              "wrappedColumnName": undefined,
              "disablePhiLevel": false,
              "lockExistingField": false,
              "sourceOntology": undefined,
              "conceptSubtree": undefined,
              "conceptLabelColumn": undefined,
              "conceptImportColumn": undefined,
              "principalConceptCode": undefined,
              "derivationDataScope": undefined,
              "selected": false,
            },
            Immutable.Record {
              "conceptURI": null,
              "conditionalFormats": Immutable.List [],
              "defaultScale": "LINEAR",
              "defaultValueType": "FIXED_EDITABLE",
              "defaultValue": null,
              "defaultDisplayValue": "[none]",
              "description": null,
              "dimension": false,
              "excludeFromShifting": false,
              "format": null,
              "hidden": false,
              "importAliases": null,
              "label": null,
              "lookupContainer": undefined,
              "lookupQuery": undefined,
              "lookupSchema": undefined,
              "lookupValidator": undefined,
              "measure": true,
              "mvEnabled": false,
              "name": "IntField",
              "PHI": "NotPHI",
              "propertyId": 521044,
              "propertyURI": "urn:lsid:labkey.com:DataClass.Folder-5398:test1#IntField",
              "propertyValidators": Array [],
              "rangeValidators": Immutable.List [],
              "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
              "regexValidators": Immutable.List [],
              "recommendedVariable": false,
              "required": false,
              "scale": 4000,
              "URL": null,
              "shownInDetailsView": true,
              "shownInInsertView": true,
              "shownInUpdateView": true,
              "visible": true,
              "dataType": Immutable.Record {
                "conceptURI": undefined,
                "display": "Integer",
                "name": "int",
                "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                "alternateRangeURI": "xsd:int",
                "shortDisplay": undefined,
                "lookupSchema": undefined,
                "lookupQuery": undefined,
              },
              "lookupQueryValue": undefined,
              "lookupType": Immutable.Record {
                "conceptURI": undefined,
                "display": "Lookup",
                "name": "lookup",
                "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                "alternateRangeURI": undefined,
                "shortDisplay": undefined,
                "lookupSchema": undefined,
                "lookupQuery": undefined,
              },
              "original": Object {
                "conceptURI": null,
                "dataType": Immutable.Record {
                  "conceptURI": undefined,
                  "display": "Integer",
                  "name": "int",
                  "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                  "alternateRangeURI": "xsd:int",
                  "shortDisplay": undefined,
                  "lookupSchema": undefined,
                  "lookupQuery": undefined,
                },
                "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
              },
              "updatedField": false,
              "isPrimaryKey": false,
              "lockType": "NotLocked",
              "wrappedColumnName": undefined,
              "disablePhiLevel": false,
              "lockExistingField": false,
              "sourceOntology": undefined,
              "conceptSubtree": undefined,
              "conceptLabelColumn": undefined,
              "conceptImportColumn": undefined,
              "principalConceptCode": undefined,
              "derivationDataScope": undefined,
              "selected": false,
            },
            Immutable.Record {
              "conceptURI": null,
              "conditionalFormats": Immutable.List [],
              "defaultScale": "LINEAR",
              "defaultValueType": "FIXED_EDITABLE",
              "defaultValue": null,
              "defaultDisplayValue": "[none]",
              "description": null,
              "dimension": false,
              "excludeFromShifting": false,
              "format": null,
              "hidden": false,
              "importAliases": null,
              "label": null,
              "lookupContainer": undefined,
              "lookupQuery": undefined,
              "lookupSchema": undefined,
              "lookupValidator": undefined,
              "measure": false,
              "mvEnabled": false,
              "name": "DateField",
              "PHI": "NotPHI",
              "propertyId": 521045,
              "propertyURI": "urn:lsid:labkey.com:DataClass.Folder-5398:test1#DateField",
              "propertyValidators": Array [],
              "rangeValidators": Immutable.List [],
              "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
              "regexValidators": Immutable.List [],
              "recommendedVariable": false,
              "required": false,
              "scale": 4000,
              "URL": null,
              "shownInDetailsView": true,
              "shownInInsertView": true,
              "shownInUpdateView": true,
              "visible": true,
              "dataType": Immutable.Record {
                "conceptURI": undefined,
                "display": "Date Time",
                "name": "dateTime",
                "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                "alternateRangeURI": "xsd:dateTime",
                "shortDisplay": undefined,
                "lookupSchema": undefined,
                "lookupQuery": undefined,
              },
              "lookupQueryValue": undefined,
              "lookupType": Immutable.Record {
                "conceptURI": undefined,
                "display": "Lookup",
                "name": "lookup",
                "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                "alternateRangeURI": undefined,
                "shortDisplay": undefined,
                "lookupSchema": undefined,
                "lookupQuery": undefined,
              },
              "original": Object {
                "conceptURI": null,
                "dataType": Immutable.Record {
                  "conceptURI": undefined,
                  "display": "Date Time",
                  "name": "dateTime",
                  "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                  "alternateRangeURI": "xsd:dateTime",
                  "shortDisplay": undefined,
                  "lookupSchema": undefined,
                  "lookupQuery": undefined,
                },
                "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
              },
              "updatedField": false,
              "isPrimaryKey": false,
              "lockType": "NotLocked",
              "wrappedColumnName": undefined,
              "disablePhiLevel": false,
              "lockExistingField": false,
              "sourceOntology": undefined,
              "conceptSubtree": undefined,
              "conceptLabelColumn": undefined,
              "conceptImportColumn": undefined,
              "principalConceptCode": undefined,
              "derivationDataScope": undefined,
              "selected": false,
            },
          ],
          "indices": Immutable.List [],
          "domainException": undefined,
          "mandatoryFieldNames": Immutable.List [],
          "reservedFieldNames": Immutable.List [],
          "newDesignFields": undefined,
          "instructions": null,
          "domainKindName": undefined,
        },
        "domainId": 0,
        "lsid": "urn:lsid:labkey.com:DataClass.Folder-5398:test1",
        "name": "test1",
        "nameExpression": "Source-\${genId}",
        "rowId": 802,
        "sampleSet": 1085,
        Symbol(immer-draftable): true,
      }
    }
    nounPlural="Data Classes"
    nounSingular="Data Class"
    onCancel={[MockFunction]}
    onComplete={[MockFunction]}
    onFinish={[Function]}
    onTogglePanel={[Function]}
    setSubmitting={[Function]}
    submitting={false}
    testMode={true}
    visitedPanels={Immutable.List []}
  >
    <BaseDomainDesigner
      domains={
        Immutable.List [
          Immutable.Record {
            "name": "test1",
            "container": "3E40EE5E-91B7-1036-BF18-F5B7057C168C",
            "description": null,
            "domainURI": "urn:lsid:labkey.com:DataClass.Folder-5398:test1",
            "domainId": 58021,
            "allowFileLinkProperties": false,
            "allowAttachmentProperties": true,
            "allowFlagProperties": true,
            "allowTimepointProperties": false,
            "showDefaultValueSettings": false,
            "defaultDefaultValueType": "FIXED_EDITABLE",
            "defaultValueOptions": Immutable.List [
              "FIXED_EDITABLE",
              "LAST_ENTERED",
            ],
            "fields": Immutable.List [
              Immutable.Record {
                "conceptURI": null,
                "conditionalFormats": Immutable.List [],
                "defaultScale": "LINEAR",
                "defaultValueType": null,
                "defaultValue": null,
                "defaultDisplayValue": "[none]",
                "description": null,
                "dimension": false,
                "excludeFromShifting": false,
                "format": null,
                "hidden": false,
                "importAliases": null,
                "label": null,
                "lookupContainer": undefined,
                "lookupQuery": undefined,
                "lookupSchema": undefined,
                "lookupValidator": undefined,
                "measure": false,
                "mvEnabled": false,
                "name": "TextFIeld",
                "PHI": "NotPHI",
                "propertyId": 518195,
                "propertyURI": "urn:lsid:labkey.com:DataClass.Folder-5398:test1#Field1",
                "propertyValidators": Array [
                  Object {
                    "description": null,
                    "errorMessage": null,
                    "expression": "~lte=4000",
                    "name": "Text Length",
                    "new": true,
                    "properties": Object {},
                    "rowId": 261363,
                    "type": "Length",
                  },
                ],
                "rangeValidators": Immutable.List [],
                "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                "regexValidators": Immutable.List [],
                "recommendedVariable": false,
                "required": true,
                "scale": 4000,
                "URL": null,
                "shownInDetailsView": true,
                "shownInInsertView": true,
                "shownInUpdateView": true,
                "visible": true,
                "dataType": Immutable.Record {
                  "conceptURI": undefined,
                  "display": "Text",
                  "name": "string",
                  "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                  "alternateRangeURI": "xsd:string",
                  "shortDisplay": "String",
                  "lookupSchema": undefined,
                  "lookupQuery": undefined,
                },
                "lookupQueryValue": undefined,
                "lookupType": Immutable.Record {
                  "conceptURI": undefined,
                  "display": "Lookup",
                  "name": "lookup",
                  "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                  "alternateRangeURI": undefined,
                  "shortDisplay": undefined,
                  "lookupSchema": undefined,
                  "lookupQuery": undefined,
                },
                "original": Object {
                  "conceptURI": null,
                  "dataType": Immutable.Record {
                    "conceptURI": undefined,
                    "display": "Text",
                    "name": "string",
                    "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                    "alternateRangeURI": "xsd:string",
                    "shortDisplay": "String",
                    "lookupSchema": undefined,
                    "lookupQuery": undefined,
                  },
                  "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                },
                "updatedField": false,
                "isPrimaryKey": false,
                "lockType": "NotLocked",
                "wrappedColumnName": undefined,
                "disablePhiLevel": false,
                "lockExistingField": false,
                "sourceOntology": undefined,
                "conceptSubtree": undefined,
                "conceptLabelColumn": undefined,
                "conceptImportColumn": undefined,
                "principalConceptCode": undefined,
                "derivationDataScope": undefined,
                "selected": false,
              },
              Immutable.Record {
                "conceptURI": null,
                "conditionalFormats": Immutable.List [],
                "defaultScale": "LINEAR",
                "defaultValueType": "FIXED_EDITABLE",
                "defaultValue": null,
                "defaultDisplayValue": "[none]",
                "description": null,
                "dimension": false,
                "excludeFromShifting": false,
                "format": null,
                "hidden": false,
                "importAliases": null,
                "label": null,
                "lookupContainer": undefined,
                "lookupQuery": undefined,
                "lookupSchema": undefined,
                "lookupValidator": undefined,
                "measure": true,
                "mvEnabled": false,
                "name": "IntField",
                "PHI": "NotPHI",
                "propertyId": 521044,
                "propertyURI": "urn:lsid:labkey.com:DataClass.Folder-5398:test1#IntField",
                "propertyValidators": Array [],
                "rangeValidators": Immutable.List [],
                "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                "regexValidators": Immutable.List [],
                "recommendedVariable": false,
                "required": false,
                "scale": 4000,
                "URL": null,
                "shownInDetailsView": true,
                "shownInInsertView": true,
                "shownInUpdateView": true,
                "visible": true,
                "dataType": Immutable.Record {
                  "conceptURI": undefined,
                  "display": "Integer",
                  "name": "int",
                  "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                  "alternateRangeURI": "xsd:int",
                  "shortDisplay": undefined,
                  "lookupSchema": undefined,
                  "lookupQuery": undefined,
                },
                "lookupQueryValue": undefined,
                "lookupType": Immutable.Record {
                  "conceptURI": undefined,
                  "display": "Lookup",
                  "name": "lookup",
                  "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                  "alternateRangeURI": undefined,
                  "shortDisplay": undefined,
                  "lookupSchema": undefined,
                  "lookupQuery": undefined,
                },
                "original": Object {
                  "conceptURI": null,
                  "dataType": Immutable.Record {
                    "conceptURI": undefined,
                    "display": "Integer",
                    "name": "int",
                    "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                    "alternateRangeURI": "xsd:int",
                    "shortDisplay": undefined,
                    "lookupSchema": undefined,
                    "lookupQuery": undefined,
                  },
                  "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                },
                "updatedField": false,
                "isPrimaryKey": false,
                "lockType": "NotLocked",
                "wrappedColumnName": undefined,
                "disablePhiLevel": false,
                "lockExistingField": false,
                "sourceOntology": undefined,
                "conceptSubtree": undefined,
                "conceptLabelColumn": undefined,
                "conceptImportColumn": undefined,
                "principalConceptCode": undefined,
                "derivationDataScope": undefined,
                "selected": false,
              },
              Immutable.Record {
                "conceptURI": null,
                "conditionalFormats": Immutable.List [],
                "defaultScale": "LINEAR",
                "defaultValueType": "FIXED_EDITABLE",
                "defaultValue": null,
                "defaultDisplayValue": "[none]",
                "description": null,
                "dimension": false,
                "excludeFromShifting": false,
                "format": null,
                "hidden": false,
                "importAliases": null,
                "label": null,
                "lookupContainer": undefined,
                "lookupQuery": undefined,
                "lookupSchema": undefined,
                "lookupValidator": undefined,
                "measure": false,
                "mvEnabled": false,
                "name": "DateField",
                "PHI": "NotPHI",
                "propertyId": 521045,
                "propertyURI": "urn:lsid:labkey.com:DataClass.Folder-5398:test1#DateField",
                "propertyValidators": Array [],
                "rangeValidators": Immutable.List [],
                "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                "regexValidators": Immutable.List [],
                "recommendedVariable": false,
                "required": false,
                "scale": 4000,
                "URL": null,
                "shownInDetailsView": true,
                "shownInInsertView": true,
                "shownInUpdateView": true,
                "visible": true,
                "dataType": Immutable.Record {
                  "conceptURI": undefined,
                  "display": "Date Time",
                  "name": "dateTime",
                  "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                  "alternateRangeURI": "xsd:dateTime",
                  "shortDisplay": undefined,
                  "lookupSchema": undefined,
                  "lookupQuery": undefined,
                },
                "lookupQueryValue": undefined,
                "lookupType": Immutable.Record {
                  "conceptURI": undefined,
                  "display": "Lookup",
                  "name": "lookup",
                  "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                  "alternateRangeURI": undefined,
                  "shortDisplay": undefined,
                  "lookupSchema": undefined,
                  "lookupQuery": undefined,
                },
                "original": Object {
                  "conceptURI": null,
                  "dataType": Immutable.Record {
                    "conceptURI": undefined,
                    "display": "Date Time",
                    "name": "dateTime",
                    "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                    "alternateRangeURI": "xsd:dateTime",
                    "shortDisplay": undefined,
                    "lookupSchema": undefined,
                    "lookupQuery": undefined,
                  },
                  "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                },
                "updatedField": false,
                "isPrimaryKey": false,
                "lockType": "NotLocked",
                "wrappedColumnName": undefined,
                "disablePhiLevel": false,
                "lockExistingField": false,
                "sourceOntology": undefined,
                "conceptSubtree": undefined,
                "conceptLabelColumn": undefined,
                "conceptImportColumn": undefined,
                "principalConceptCode": undefined,
                "derivationDataScope": undefined,
                "selected": false,
              },
            ],
            "indices": Immutable.List [],
            "domainException": undefined,
            "mandatoryFieldNames": Immutable.List [],
            "reservedFieldNames": Immutable.List [],
            "newDesignFields": undefined,
            "instructions": null,
            "domainKindName": undefined,
          },
        ]
      }
      hasValidProperties={true}
      name="test1"
      onCancel={[MockFunction]}
      onFinish={[Function]}
      saveBtnText="Save"
      submitting={false}
      visitedPanels={Immutable.List []}
    >
      <ComponentWithDomainPropertiesPanelCollapse
        controlledCollapse={true}
        initCollapsed={false}
        model={
          DataClassModel {
            "category": "sources",
            "description": "with a description",
            "domain": Immutable.Record {
              "name": "test1",
              "container": "3E40EE5E-91B7-1036-BF18-F5B7057C168C",
              "description": null,
              "domainURI": "urn:lsid:labkey.com:DataClass.Folder-5398:test1",
              "domainId": 58021,
              "allowFileLinkProperties": false,
              "allowAttachmentProperties": true,
              "allowFlagProperties": true,
              "allowTimepointProperties": false,
              "showDefaultValueSettings": false,
              "defaultDefaultValueType": "FIXED_EDITABLE",
              "defaultValueOptions": Immutable.List [
                "FIXED_EDITABLE",
                "LAST_ENTERED",
              ],
              "fields": Immutable.List [
                Immutable.Record {
                  "conceptURI": null,
                  "conditionalFormats": Immutable.List [],
                  "defaultScale": "LINEAR",
                  "defaultValueType": null,
                  "defaultValue": null,
                  "defaultDisplayValue": "[none]",
                  "description": null,
                  "dimension": false,
                  "excludeFromShifting": false,
                  "format": null,
                  "hidden": false,
                  "importAliases": null,
                  "label": null,
                  "lookupContainer": undefined,
                  "lookupQuery": undefined,
                  "lookupSchema": undefined,
                  "lookupValidator": undefined,
                  "measure": false,
                  "mvEnabled": false,
                  "name": "TextFIeld",
                  "PHI": "NotPHI",
                  "propertyId": 518195,
                  "propertyURI": "urn:lsid:labkey.com:DataClass.Folder-5398:test1#Field1",
                  "propertyValidators": Array [
                    Object {
                      "description": null,
                      "errorMessage": null,
                      "expression": "~lte=4000",
                      "name": "Text Length",
                      "new": true,
                      "properties": Object {},
                      "rowId": 261363,
                      "type": "Length",
                    },
                  ],
                  "rangeValidators": Immutable.List [],
                  "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                  "regexValidators": Immutable.List [],
                  "recommendedVariable": false,
                  "required": true,
                  "scale": 4000,
                  "URL": null,
                  "shownInDetailsView": true,
                  "shownInInsertView": true,
                  "shownInUpdateView": true,
                  "visible": true,
                  "dataType": Immutable.Record {
                    "conceptURI": undefined,
                    "display": "Text",
                    "name": "string",
                    "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                    "alternateRangeURI": "xsd:string",
                    "shortDisplay": "String",
                    "lookupSchema": undefined,
                    "lookupQuery": undefined,
                  },
                  "lookupQueryValue": undefined,
                  "lookupType": Immutable.Record {
                    "conceptURI": undefined,
                    "display": "Lookup",
                    "name": "lookup",
                    "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                    "alternateRangeURI": undefined,
                    "shortDisplay": undefined,
                    "lookupSchema": undefined,
                    "lookupQuery": undefined,
                  },
                  "original": Object {
                    "conceptURI": null,
                    "dataType": Immutable.Record {
                      "conceptURI": undefined,
                      "display": "Text",
                      "name": "string",
                      "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                      "alternateRangeURI": "xsd:string",
                      "shortDisplay": "String",
                      "lookupSchema": undefined,
                      "lookupQuery": undefined,
                    },
                    "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                  },
                  "updatedField": false,
                  "isPrimaryKey": false,
                  "lockType": "NotLocked",
                  "wrappedColumnName": undefined,
                  "disablePhiLevel": false,
                  "lockExistingField": false,
                  "sourceOntology": undefined,
                  "conceptSubtree": undefined,
                  "conceptLabelColumn": undefined,
                  "conceptImportColumn": undefined,
                  "principalConceptCode": undefined,
                  "derivationDataScope": undefined,
                  "selected": false,
                },
                Immutable.Record {
                  "conceptURI": null,
                  "conditionalFormats": Immutable.List [],
                  "defaultScale": "LINEAR",
                  "defaultValueType": "FIXED_EDITABLE",
                  "defaultValue": null,
                  "defaultDisplayValue": "[none]",
                  "description": null,
                  "dimension": false,
                  "excludeFromShifting": false,
                  "format": null,
                  "hidden": false,
                  "importAliases": null,
                  "label": null,
                  "lookupContainer": undefined,
                  "lookupQuery": undefined,
                  "lookupSchema": undefined,
                  "lookupValidator": undefined,
                  "measure": true,
                  "mvEnabled": false,
                  "name": "IntField",
                  "PHI": "NotPHI",
                  "propertyId": 521044,
                  "propertyURI": "urn:lsid:labkey.com:DataClass.Folder-5398:test1#IntField",
                  "propertyValidators": Array [],
                  "rangeValidators": Immutable.List [],
                  "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                  "regexValidators": Immutable.List [],
                  "recommendedVariable": false,
                  "required": false,
                  "scale": 4000,
                  "URL": null,
                  "shownInDetailsView": true,
                  "shownInInsertView": true,
                  "shownInUpdateView": true,
                  "visible": true,
                  "dataType": Immutable.Record {
                    "conceptURI": undefined,
                    "display": "Integer",
                    "name": "int",
                    "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                    "alternateRangeURI": "xsd:int",
                    "shortDisplay": undefined,
                    "lookupSchema": undefined,
                    "lookupQuery": undefined,
                  },
                  "lookupQueryValue": undefined,
                  "lookupType": Immutable.Record {
                    "conceptURI": undefined,
                    "display": "Lookup",
                    "name": "lookup",
                    "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                    "alternateRangeURI": undefined,
                    "shortDisplay": undefined,
                    "lookupSchema": undefined,
                    "lookupQuery": undefined,
                  },
                  "original": Object {
                    "conceptURI": null,
                    "dataType": Immutable.Record {
                      "conceptURI": undefined,
                      "display": "Integer",
                      "name": "int",
                      "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                      "alternateRangeURI": "xsd:int",
                      "shortDisplay": undefined,
                      "lookupSchema": undefined,
                      "lookupQuery": undefined,
                    },
                    "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                  },
                  "updatedField": false,
                  "isPrimaryKey": false,
                  "lockType": "NotLocked",
                  "wrappedColumnName": undefined,
                  "disablePhiLevel": false,
                  "lockExistingField": false,
                  "sourceOntology": undefined,
                  "conceptSubtree": undefined,
                  "conceptLabelColumn": undefined,
                  "conceptImportColumn": undefined,
                  "principalConceptCode": undefined,
                  "derivationDataScope": undefined,
                  "selected": false,
                },
                Immutable.Record {
                  "conceptURI": null,
                  "conditionalFormats": Immutable.List [],
                  "defaultScale": "LINEAR",
                  "defaultValueType": "FIXED_EDITABLE",
                  "defaultValue": null,
                  "defaultDisplayValue": "[none]",
                  "description": null,
                  "dimension": false,
                  "excludeFromShifting": false,
                  "format": null,
                  "hidden": false,
                  "importAliases": null,
                  "label": null,
                  "lookupContainer": undefined,
                  "lookupQuery": undefined,
                  "lookupSchema": undefined,
                  "lookupValidator": undefined,
                  "measure": false,
                  "mvEnabled": false,
                  "name": "DateField",
                  "PHI": "NotPHI",
                  "propertyId": 521045,
                  "propertyURI": "urn:lsid:labkey.com:DataClass.Folder-5398:test1#DateField",
                  "propertyValidators": Array [],
                  "rangeValidators": Immutable.List [],
                  "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                  "regexValidators": Immutable.List [],
                  "recommendedVariable": false,
                  "required": false,
                  "scale": 4000,
                  "URL": null,
                  "shownInDetailsView": true,
                  "shownInInsertView": true,
                  "shownInUpdateView": true,
                  "visible": true,
                  "dataType": Immutable.Record {
                    "conceptURI": undefined,
                    "display": "Date Time",
                    "name": "dateTime",
                    "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                    "alternateRangeURI": "xsd:dateTime",
                    "shortDisplay": undefined,
                    "lookupSchema": undefined,
                    "lookupQuery": undefined,
                  },
                  "lookupQueryValue": undefined,
                  "lookupType": Immutable.Record {
                    "conceptURI": undefined,
                    "display": "Lookup",
                    "name": "lookup",
                    "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                    "alternateRangeURI": undefined,
                    "shortDisplay": undefined,
                    "lookupSchema": undefined,
                    "lookupQuery": undefined,
                  },
                  "original": Object {
                    "conceptURI": null,
                    "dataType": Immutable.Record {
                      "conceptURI": undefined,
                      "display": "Date Time",
                      "name": "dateTime",
                      "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                      "alternateRangeURI": "xsd:dateTime",
                      "shortDisplay": undefined,
                      "lookupSchema": undefined,
                      "lookupQuery": undefined,
                    },
                    "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                  },
                  "updatedField": false,
                  "isPrimaryKey": false,
                  "lockType": "NotLocked",
                  "wrappedColumnName": undefined,
                  "disablePhiLevel": false,
                  "lockExistingField": false,
                  "sourceOntology": undefined,
                  "conceptSubtree": undefined,
                  "conceptLabelColumn": undefined,
                  "conceptImportColumn": undefined,
                  "principalConceptCode": undefined,
                  "derivationDataScope": undefined,
                  "selected": false,
                },
              ],
              "indices": Immutable.List [],
              "domainException": undefined,
              "mandatoryFieldNames": Immutable.List [],
              "reservedFieldNames": Immutable.List [],
              "newDesignFields": undefined,
              "instructions": null,
              "domainKindName": undefined,
            },
            "domainId": 0,
            "lsid": "urn:lsid:labkey.com:DataClass.Folder-5398:test1",
            "name": "test1",
            "nameExpression": "Source-\${genId}",
            "rowId": 802,
            "sampleSet": 1085,
            Symbol(immer-draftable): true,
          }
        }
        nounPlural="Data Classes"
        nounSingular="Data Class"
        onChange={[Function]}
        onToggle={[Function]}
        panelStatus="COMPLETE"
        validate={false}
      >
        <DataClassPropertiesPanelImpl
          appPropertiesOnly={false}
          collapsed={false}
          controlledCollapse={true}
          helpTopic="createDataClass"
          model={
            DataClassModel {
              "category": "sources",
              "description": "with a description",
              "domain": Immutable.Record {
                "name": "test1",
                "container": "3E40EE5E-91B7-1036-BF18-F5B7057C168C",
                "description": null,
                "domainURI": "urn:lsid:labkey.com:DataClass.Folder-5398:test1",
                "domainId": 58021,
                "allowFileLinkProperties": false,
                "allowAttachmentProperties": true,
                "allowFlagProperties": true,
                "allowTimepointProperties": false,
                "showDefaultValueSettings": false,
                "defaultDefaultValueType": "FIXED_EDITABLE",
                "defaultValueOptions": Immutable.List [
                  "FIXED_EDITABLE",
                  "LAST_ENTERED",
                ],
                "fields": Immutable.List [
                  Immutable.Record {
                    "conceptURI": null,
                    "conditionalFormats": Immutable.List [],
                    "defaultScale": "LINEAR",
                    "defaultValueType": null,
                    "defaultValue": null,
                    "defaultDisplayValue": "[none]",
                    "description": null,
                    "dimension": false,
                    "excludeFromShifting": false,
                    "format": null,
                    "hidden": false,
                    "importAliases": null,
                    "label": null,
                    "lookupContainer": undefined,
                    "lookupQuery": undefined,
                    "lookupSchema": undefined,
                    "lookupValidator": undefined,
                    "measure": false,
                    "mvEnabled": false,
                    "name": "TextFIeld",
                    "PHI": "NotPHI",
                    "propertyId": 518195,
                    "propertyURI": "urn:lsid:labkey.com:DataClass.Folder-5398:test1#Field1",
                    "propertyValidators": Array [
                      Object {
                        "description": null,
                        "errorMessage": null,
                        "expression": "~lte=4000",
                        "name": "Text Length",
                        "new": true,
                        "properties": Object {},
                        "rowId": 261363,
                        "type": "Length",
                      },
                    ],
                    "rangeValidators": Immutable.List [],
                    "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                    "regexValidators": Immutable.List [],
                    "recommendedVariable": false,
                    "required": true,
                    "scale": 4000,
                    "URL": null,
                    "shownInDetailsView": true,
                    "shownInInsertView": true,
                    "shownInUpdateView": true,
                    "visible": true,
                    "dataType": Immutable.Record {
                      "conceptURI": undefined,
                      "display": "Text",
                      "name": "string",
                      "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                      "alternateRangeURI": "xsd:string",
                      "shortDisplay": "String",
                      "lookupSchema": undefined,
                      "lookupQuery": undefined,
                    },
                    "lookupQueryValue": undefined,
                    "lookupType": Immutable.Record {
                      "conceptURI": undefined,
                      "display": "Lookup",
                      "name": "lookup",
                      "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                      "alternateRangeURI": undefined,
                      "shortDisplay": undefined,
                      "lookupSchema": undefined,
                      "lookupQuery": undefined,
                    },
                    "original": Object {
                      "conceptURI": null,
                      "dataType": Immutable.Record {
                        "conceptURI": undefined,
                        "display": "Text",
                        "name": "string",
                        "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                        "alternateRangeURI": "xsd:string",
                        "shortDisplay": "String",
                        "lookupSchema": undefined,
                        "lookupQuery": undefined,
                      },
                      "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                    },
                    "updatedField": false,
                    "isPrimaryKey": false,
                    "lockType": "NotLocked",
                    "wrappedColumnName": undefined,
                    "disablePhiLevel": false,
                    "lockExistingField": false,
                    "sourceOntology": undefined,
                    "conceptSubtree": undefined,
                    "conceptLabelColumn": undefined,
                    "conceptImportColumn": undefined,
                    "principalConceptCode": undefined,
                    "derivationDataScope": undefined,
                    "selected": false,
                  },
                  Immutable.Record {
                    "conceptURI": null,
                    "conditionalFormats": Immutable.List [],
                    "defaultScale": "LINEAR",
                    "defaultValueType": "FIXED_EDITABLE",
                    "defaultValue": null,
                    "defaultDisplayValue": "[none]",
                    "description": null,
                    "dimension": false,
                    "excludeFromShifting": false,
                    "format": null,
                    "hidden": false,
                    "importAliases": null,
                    "label": null,
                    "lookupContainer": undefined,
                    "lookupQuery": undefined,
                    "lookupSchema": undefined,
                    "lookupValidator": undefined,
                    "measure": true,
                    "mvEnabled": false,
                    "name": "IntField",
                    "PHI": "NotPHI",
                    "propertyId": 521044,
                    "propertyURI": "urn:lsid:labkey.com:DataClass.Folder-5398:test1#IntField",
                    "propertyValidators": Array [],
                    "rangeValidators": Immutable.List [],
                    "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                    "regexValidators": Immutable.List [],
                    "recommendedVariable": false,
                    "required": false,
                    "scale": 4000,
                    "URL": null,
                    "shownInDetailsView": true,
                    "shownInInsertView": true,
                    "shownInUpdateView": true,
                    "visible": true,
                    "dataType": Immutable.Record {
                      "conceptURI": undefined,
                      "display": "Integer",
                      "name": "int",
                      "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                      "alternateRangeURI": "xsd:int",
                      "shortDisplay": undefined,
                      "lookupSchema": undefined,
                      "lookupQuery": undefined,
                    },
                    "lookupQueryValue": undefined,
                    "lookupType": Immutable.Record {
                      "conceptURI": undefined,
                      "display": "Lookup",
                      "name": "lookup",
                      "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                      "alternateRangeURI": undefined,
                      "shortDisplay": undefined,
                      "lookupSchema": undefined,
                      "lookupQuery": undefined,
                    },
                    "original": Object {
                      "conceptURI": null,
                      "dataType": Immutable.Record {
                        "conceptURI": undefined,
                        "display": "Integer",
                        "name": "int",
                        "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                        "alternateRangeURI": "xsd:int",
                        "shortDisplay": undefined,
                        "lookupSchema": undefined,
                        "lookupQuery": undefined,
                      },
                      "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                    },
                    "updatedField": false,
                    "isPrimaryKey": false,
                    "lockType": "NotLocked",
                    "wrappedColumnName": undefined,
                    "disablePhiLevel": false,
                    "lockExistingField": false,
                    "sourceOntology": undefined,
                    "conceptSubtree": undefined,
                    "conceptLabelColumn": undefined,
                    "conceptImportColumn": undefined,
                    "principalConceptCode": undefined,
                    "derivationDataScope": undefined,
                    "selected": false,
                  },
                  Immutable.Record {
                    "conceptURI": null,
                    "conditionalFormats": Immutable.List [],
                    "defaultScale": "LINEAR",
                    "defaultValueType": "FIXED_EDITABLE",
                    "defaultValue": null,
                    "defaultDisplayValue": "[none]",
                    "description": null,
                    "dimension": false,
                    "excludeFromShifting": false,
                    "format": null,
                    "hidden": false,
                    "importAliases": null,
                    "label": null,
                    "lookupContainer": undefined,
                    "lookupQuery": undefined,
                    "lookupSchema": undefined,
                    "lookupValidator": undefined,
                    "measure": false,
                    "mvEnabled": false,
                    "name": "DateField",
                    "PHI": "NotPHI",
                    "propertyId": 521045,
                    "propertyURI": "urn:lsid:labkey.com:DataClass.Folder-5398:test1#DateField",
                    "propertyValidators": Array [],
                    "rangeValidators": Immutable.List [],
                    "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                    "regexValidators": Immutable.List [],
                    "recommendedVariable": false,
                    "required": false,
                    "scale": 4000,
                    "URL": null,
                    "shownInDetailsView": true,
                    "shownInInsertView": true,
                    "shownInUpdateView": true,
                    "visible": true,
                    "dataType": Immutable.Record {
                      "conceptURI": undefined,
                      "display": "Date Time",
                      "name": "dateTime",
                      "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                      "alternateRangeURI": "xsd:dateTime",
                      "shortDisplay": undefined,
                      "lookupSchema": undefined,
                      "lookupQuery": undefined,
                    },
                    "lookupQueryValue": undefined,
                    "lookupType": Immutable.Record {
                      "conceptURI": undefined,
                      "display": "Lookup",
                      "name": "lookup",
                      "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                      "alternateRangeURI": undefined,
                      "shortDisplay": undefined,
                      "lookupSchema": undefined,
                      "lookupQuery": undefined,
                    },
                    "original": Object {
                      "conceptURI": null,
                      "dataType": Immutable.Record {
                        "conceptURI": undefined,
                        "display": "Date Time",
                        "name": "dateTime",
                        "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                        "alternateRangeURI": "xsd:dateTime",
                        "shortDisplay": undefined,
                        "lookupSchema": undefined,
                        "lookupQuery": undefined,
                      },
                      "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                    },
                    "updatedField": false,
                    "isPrimaryKey": false,
                    "lockType": "NotLocked",
                    "wrappedColumnName": undefined,
                    "disablePhiLevel": false,
                    "lockExistingField": false,
                    "sourceOntology": undefined,
                    "conceptSubtree": undefined,
                    "conceptLabelColumn": undefined,
                    "conceptImportColumn": undefined,
                    "principalConceptCode": undefined,
                    "derivationDataScope": undefined,
                    "selected": false,
                  },
                ],
                "indices": Immutable.List [],
                "domainException": undefined,
                "mandatoryFieldNames": Immutable.List [],
                "reservedFieldNames": Immutable.List [],
                "newDesignFields": undefined,
                "instructions": null,
                "domainKindName": undefined,
              },
              "domainId": 0,
              "lsid": "urn:lsid:labkey.com:DataClass.Folder-5398:test1",
              "name": "test1",
              "nameExpression": "Source-\${genId}",
              "rowId": 802,
              "sampleSet": 1085,
              Symbol(immer-draftable): true,
            }
          }
          nameExpressionInfoUrl="https://www.labkey.org/Documentation/wiki-page.view?name=dataClass#name&referrer=inPage"
          nameExpressionPlaceholder="Enter a naming pattern (e.g., DC-\${now:date}-\${genId})"
          nounPlural="Data Classes"
          nounSingular="Data Class"
          onChange={[Function]}
          panelStatus="COMPLETE"
          togglePanel={[Function]}
          validate={false}
        >
          <BasePropertiesPanel
            appPropertiesOnly={false}
            collapsed={false}
            controlledCollapse={true}
            headerId="dataclass-properties-hdr"
            helpTopic="createDataClass"
            isValid={true}
            model={
              DataClassModel {
                "category": "sources",
                "description": "with a description",
                "domain": Immutable.Record {
                  "name": "test1",
                  "container": "3E40EE5E-91B7-1036-BF18-F5B7057C168C",
                  "description": null,
                  "domainURI": "urn:lsid:labkey.com:DataClass.Folder-5398:test1",
                  "domainId": 58021,
                  "allowFileLinkProperties": false,
                  "allowAttachmentProperties": true,
                  "allowFlagProperties": true,
                  "allowTimepointProperties": false,
                  "showDefaultValueSettings": false,
                  "defaultDefaultValueType": "FIXED_EDITABLE",
                  "defaultValueOptions": Immutable.List [
                    "FIXED_EDITABLE",
                    "LAST_ENTERED",
                  ],
                  "fields": Immutable.List [
                    Immutable.Record {
                      "conceptURI": null,
                      "conditionalFormats": Immutable.List [],
                      "defaultScale": "LINEAR",
                      "defaultValueType": null,
                      "defaultValue": null,
                      "defaultDisplayValue": "[none]",
                      "description": null,
                      "dimension": false,
                      "excludeFromShifting": false,
                      "format": null,
                      "hidden": false,
                      "importAliases": null,
                      "label": null,
                      "lookupContainer": undefined,
                      "lookupQuery": undefined,
                      "lookupSchema": undefined,
                      "lookupValidator": undefined,
                      "measure": false,
                      "mvEnabled": false,
                      "name": "TextFIeld",
                      "PHI": "NotPHI",
                      "propertyId": 518195,
                      "propertyURI": "urn:lsid:labkey.com:DataClass.Folder-5398:test1#Field1",
                      "propertyValidators": Array [
                        Object {
                          "description": null,
                          "errorMessage": null,
                          "expression": "~lte=4000",
                          "name": "Text Length",
                          "new": true,
                          "properties": Object {},
                          "rowId": 261363,
                          "type": "Length",
                        },
                      ],
                      "rangeValidators": Immutable.List [],
                      "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                      "regexValidators": Immutable.List [],
                      "recommendedVariable": false,
                      "required": true,
                      "scale": 4000,
                      "URL": null,
                      "shownInDetailsView": true,
                      "shownInInsertView": true,
                      "shownInUpdateView": true,
                      "visible": true,
                      "dataType": Immutable.Record {
                        "conceptURI": undefined,
                        "display": "Text",
                        "name": "string",
                        "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                        "alternateRangeURI": "xsd:string",
                        "shortDisplay": "String",
                        "lookupSchema": undefined,
                        "lookupQuery": undefined,
                      },
                      "lookupQueryValue": undefined,
                      "lookupType": Immutable.Record {
                        "conceptURI": undefined,
                        "display": "Lookup",
                        "name": "lookup",
                        "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                        "alternateRangeURI": undefined,
                        "shortDisplay": undefined,
                        "lookupSchema": undefined,
                        "lookupQuery": undefined,
                      },
                      "original": Object {
                        "conceptURI": null,
                        "dataType": Immutable.Record {
                          "conceptURI": undefined,
                          "display": "Text",
                          "name": "string",
                          "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                          "alternateRangeURI": "xsd:string",
                          "shortDisplay": "String",
                          "lookupSchema": undefined,
                          "lookupQuery": undefined,
                        },
                        "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                      },
                      "updatedField": false,
                      "isPrimaryKey": false,
                      "lockType": "NotLocked",
                      "wrappedColumnName": undefined,
                      "disablePhiLevel": false,
                      "lockExistingField": false,
                      "sourceOntology": undefined,
                      "conceptSubtree": undefined,
                      "conceptLabelColumn": undefined,
                      "conceptImportColumn": undefined,
                      "principalConceptCode": undefined,
                      "derivationDataScope": undefined,
                      "selected": false,
                    },
                    Immutable.Record {
                      "conceptURI": null,
                      "conditionalFormats": Immutable.List [],
                      "defaultScale": "LINEAR",
                      "defaultValueType": "FIXED_EDITABLE",
                      "defaultValue": null,
                      "defaultDisplayValue": "[none]",
                      "description": null,
                      "dimension": false,
                      "excludeFromShifting": false,
                      "format": null,
                      "hidden": false,
                      "importAliases": null,
                      "label": null,
                      "lookupContainer": undefined,
                      "lookupQuery": undefined,
                      "lookupSchema": undefined,
                      "lookupValidator": undefined,
                      "measure": true,
                      "mvEnabled": false,
                      "name": "IntField",
                      "PHI": "NotPHI",
                      "propertyId": 521044,
                      "propertyURI": "urn:lsid:labkey.com:DataClass.Folder-5398:test1#IntField",
                      "propertyValidators": Array [],
                      "rangeValidators": Immutable.List [],
                      "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                      "regexValidators": Immutable.List [],
                      "recommendedVariable": false,
                      "required": false,
                      "scale": 4000,
                      "URL": null,
                      "shownInDetailsView": true,
                      "shownInInsertView": true,
                      "shownInUpdateView": true,
                      "visible": true,
                      "dataType": Immutable.Record {
                        "conceptURI": undefined,
                        "display": "Integer",
                        "name": "int",
                        "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                        "alternateRangeURI": "xsd:int",
                        "shortDisplay": undefined,
                        "lookupSchema": undefined,
                        "lookupQuery": undefined,
                      },
                      "lookupQueryValue": undefined,
                      "lookupType": Immutable.Record {
                        "conceptURI": undefined,
                        "display": "Lookup",
                        "name": "lookup",
                        "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                        "alternateRangeURI": undefined,
                        "shortDisplay": undefined,
                        "lookupSchema": undefined,
                        "lookupQuery": undefined,
                      },
                      "original": Object {
                        "conceptURI": null,
                        "dataType": Immutable.Record {
                          "conceptURI": undefined,
                          "display": "Integer",
                          "name": "int",
                          "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                          "alternateRangeURI": "xsd:int",
                          "shortDisplay": undefined,
                          "lookupSchema": undefined,
                          "lookupQuery": undefined,
                        },
                        "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                      },
                      "updatedField": false,
                      "isPrimaryKey": false,
                      "lockType": "NotLocked",
                      "wrappedColumnName": undefined,
                      "disablePhiLevel": false,
                      "lockExistingField": false,
                      "sourceOntology": undefined,
                      "conceptSubtree": undefined,
                      "conceptLabelColumn": undefined,
                      "conceptImportColumn": undefined,
                      "principalConceptCode": undefined,
                      "derivationDataScope": undefined,
                      "selected": false,
                    },
                    Immutable.Record {
                      "conceptURI": null,
                      "conditionalFormats": Immutable.List [],
                      "defaultScale": "LINEAR",
                      "defaultValueType": "FIXED_EDITABLE",
                      "defaultValue": null,
                      "defaultDisplayValue": "[none]",
                      "description": null,
                      "dimension": false,
                      "excludeFromShifting": false,
                      "format": null,
                      "hidden": false,
                      "importAliases": null,
                      "label": null,
                      "lookupContainer": undefined,
                      "lookupQuery": undefined,
                      "lookupSchema": undefined,
                      "lookupValidator": undefined,
                      "measure": false,
                      "mvEnabled": false,
                      "name": "DateField",
                      "PHI": "NotPHI",
                      "propertyId": 521045,
                      "propertyURI": "urn:lsid:labkey.com:DataClass.Folder-5398:test1#DateField",
                      "propertyValidators": Array [],
                      "rangeValidators": Immutable.List [],
                      "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                      "regexValidators": Immutable.List [],
                      "recommendedVariable": false,
                      "required": false,
                      "scale": 4000,
                      "URL": null,
                      "shownInDetailsView": true,
                      "shownInInsertView": true,
                      "shownInUpdateView": true,
                      "visible": true,
                      "dataType": Immutable.Record {
                        "conceptURI": undefined,
                        "display": "Date Time",
                        "name": "dateTime",
                        "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                        "alternateRangeURI": "xsd:dateTime",
                        "shortDisplay": undefined,
                        "lookupSchema": undefined,
                        "lookupQuery": undefined,
                      },
                      "lookupQueryValue": undefined,
                      "lookupType": Immutable.Record {
                        "conceptURI": undefined,
                        "display": "Lookup",
                        "name": "lookup",
                        "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                        "alternateRangeURI": undefined,
                        "shortDisplay": undefined,
                        "lookupSchema": undefined,
                        "lookupQuery": undefined,
                      },
                      "original": Object {
                        "conceptURI": null,
                        "dataType": Immutable.Record {
                          "conceptURI": undefined,
                          "display": "Date Time",
                          "name": "dateTime",
                          "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                          "alternateRangeURI": "xsd:dateTime",
                          "shortDisplay": undefined,
                          "lookupSchema": undefined,
                          "lookupQuery": undefined,
                        },
                        "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                      },
                      "updatedField": false,
                      "isPrimaryKey": false,
                      "lockType": "NotLocked",
                      "wrappedColumnName": undefined,
                      "disablePhiLevel": false,
                      "lockExistingField": false,
                      "sourceOntology": undefined,
                      "conceptSubtree": undefined,
                      "conceptLabelColumn": undefined,
                      "conceptImportColumn": undefined,
                      "principalConceptCode": undefined,
                      "derivationDataScope": undefined,
                      "selected": false,
                    },
                  ],
                  "indices": Immutable.List [],
                  "domainException": undefined,
                  "mandatoryFieldNames": Immutable.List [],
                  "reservedFieldNames": Immutable.List [],
                  "newDesignFields": undefined,
                  "instructions": null,
                  "domainKindName": undefined,
                },
                "domainId": 0,
                "lsid": "urn:lsid:labkey.com:DataClass.Folder-5398:test1",
                "name": "test1",
                "nameExpression": "Source-\${genId}",
                "rowId": 802,
                "sampleSet": 1085,
                Symbol(immer-draftable): true,
              }
            }
            nameExpressionInfoUrl="https://www.labkey.org/Documentation/wiki-page.view?name=dataClass#name&referrer=inPage"
            nameExpressionPlaceholder="Enter a naming pattern (e.g., DC-\${now:date}-\${genId})"
            nounPlural="Data Classes"
            nounSingular="Data Class"
            onChange={[Function]}
            panelStatus="COMPLETE"
            title="Data Class Properties"
            titlePrefix="test1"
            togglePanel={[Function]}
            updateValidStatus={[Function]}
            useTheme={false}
            validate={false}
          >
            <ForwardRef
              className="domain-form-panel domain-panel-no-theme"
              expanded={true}
              onToggle={[Function]}
            >
              <Uncontrolled(Panel)
                className="domain-form-panel domain-panel-no-theme"
                expanded={true}
                innerRef={null}
                onToggle={[Function]}
              >
                <Panel
                  bsClass="panel"
                  bsStyle="default"
                  className="domain-form-panel domain-panel-no-theme"
                  expanded={true}
                  onToggle={[Function]}
                >
                  <div
                    className="domain-form-panel domain-panel-no-theme panel panel-default"
                  >
                    <CollapsiblePanelHeader
                      collapsed={false}
                      controlledCollapse={true}
                      iconHelpMsg="Contains errors or is missing required values."
                      id="dataclass-properties-hdr"
                      isValid={true}
                      panelStatus="COMPLETE"
                      title="Data Class Properties"
                      titlePrefix="test1"
                      togglePanel={[Function]}
                      useTheme={false}
                    >
                      <PanelHeading
                        bsClass="panel"
                        className="domain-panel-header domain-heading-collapsible domain-panel-header-expanded domain-panel-header-no-theme"
                        componentClass="div"
                        id="dataclass-properties-hdr"
                        onClick={[Function]}
                      >
                        <div
                          className="domain-panel-header domain-heading-collapsible domain-panel-header-expanded domain-panel-header-no-theme panel-heading"
                          id="dataclass-properties-hdr"
                          onClick={[Function]}
                        >
                          <span
                            className="domain-panel-status-icon"
                          >
                            <FontAwesomeIcon
                              border={false}
                              className=""
                              fixedWidth={false}
                              flip={null}
                              icon={
                                Object {
                                  "icon": Array [
                                    512,
                                    512,
                                    Array [],
                                    "f058",
                                    "M504 256c0 136.967-111.033 248-248 248S8 392.967 8 256 119.033 8 256 8s248 111.033 248 248zM227.314 387.314l184-184c6.248-6.248 6.248-16.379 0-22.627l-22.627-22.627c-6.248-6.249-16.379-6.249-22.628 0L216 308.118l-70.059-70.059c-6.248-6.248-16.379-6.248-22.628 0l-22.627 22.627c-6.248 6.248-6.248 16.379 0 22.627l104 104c6.249 6.249 16.379 6.249 22.628.001z",
                                  ],
                                  "iconName": "check-circle",
                                  "prefix": "fas",
                                }
                              }
                              inverse={false}
                              listItem={false}
                              mask={null}
                              pull={null}
                              pulse={false}
                              rotation={null}
                              size={null}
                              spin={false}
                              swapOpacity={false}
                              symbol={false}
                              title=""
                              transform={null}
                            >
                              <svg
                                aria-hidden="true"
                                className="svg-inline--fa fa-check-circle fa-w-16 "
                                data-icon="check-circle"
                                data-prefix="fas"
                                focusable="false"
                                role="img"
                                style={Object {}}
                                viewBox="0 0 512 512"
                                xmlns="http://www.w3.org/2000/svg"
                              >
                                <path
                                  d="M504 256c0 136.967-111.033 248-248 248S8 392.967 8 256 119.033 8 256 8s248 111.033 248 248zM227.314 387.314l184-184c6.248-6.248 6.248-16.379 0-22.627l-22.627-22.627c-6.248-6.249-16.379-6.249-22.628 0L216 308.118l-70.059-70.059c-6.248-6.248-16.379-6.248-22.628 0l-22.627 22.627c-6.248 6.248-6.248 16.379 0 22.627l104 104c6.249 6.249 16.379 6.249 22.628.001z"
                                  fill="currentColor"
                                  style={Object {}}
                                />
                              </svg>
                            </FontAwesomeIcon>
                          </span>
                          <span
                            className="domain-panel-title"
                          >
                            test1 - Data Class Properties
                          </span>
                          <span
                            className="pull-right"
                          >
                            <FontAwesomeIcon
                              border={false}
                              className="domain-form-collapse-btn"
                              fixedWidth={false}
                              flip={null}
                              icon={
                                Object {
                                  "icon": Array [
                                    448,
                                    512,
                                    Array [],
                                    "f146",
                                    "M400 32H48C21.5 32 0 53.5 0 80v352c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V80c0-26.5-21.5-48-48-48zM92 296c-6.6 0-12-5.4-12-12v-56c0-6.6 5.4-12 12-12h264c6.6 0 12 5.4 12 12v56c0 6.6-5.4 12-12 12H92z",
                                  ],
                                  "iconName": "minus-square",
                                  "prefix": "fas",
                                }
                              }
                              inverse={false}
                              listItem={false}
                              mask={null}
                              pull={null}
                              pulse={false}
                              rotation={null}
                              size="lg"
                              spin={false}
                              swapOpacity={false}
                              symbol={false}
                              title=""
                              transform={null}
                            >
                              <svg
                                aria-hidden="true"
                                className="svg-inline--fa fa-minus-square fa-w-14 fa-lg domain-form-collapse-btn"
                                data-icon="minus-square"
                                data-prefix="fas"
                                focusable="false"
                                role="img"
                                style={Object {}}
                                viewBox="0 0 448 512"
                                xmlns="http://www.w3.org/2000/svg"
                              >
                                <path
                                  d="M400 32H48C21.5 32 0 53.5 0 80v352c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V80c0-26.5-21.5-48-48-48zM92 296c-6.6 0-12-5.4-12-12v-56c0-6.6 5.4-12 12-12h264c6.6 0 12 5.4 12 12v56c0 6.6-5.4 12-12 12H92z"
                                  fill="currentColor"
                                  style={Object {}}
                                />
                              </svg>
                            </FontAwesomeIcon>
                          </span>
                        </div>
                      </PanelHeading>
                    </CollapsiblePanelHeader>
                    <PanelBody
                      bsClass="panel"
                      collapsible={true}
                    >
                      <PanelCollapse
                        bsClass="panel"
                      >
                        <Collapse
                          appear={false}
                          dimension="height"
                          getDimensionValue={[Function]}
                          in={true}
                          mountOnEnter={false}
                          timeout={300}
                          unmountOnExit={false}
                        >
                          <Transition
                            appear={false}
                            aria-expanded={null}
                            enter={true}
                            exit={true}
                            in={true}
                            mountOnEnter={false}
                            onEnter={[Function]}
                            onEntered={[Function]}
                            onEntering={[Function]}
                            onExit={[Function]}
                            onExited={[Function]}
                            onExiting={[Function]}
                            timeout={300}
                            unmountOnExit={false}
                          >
                            <div
                              aria-expanded={null}
                              className="panel-collapse collapse in"
                            >
                              <div
                                className="panel-body"
                              >
                                <Row
                                  bsClass="row"
                                  className="margin-bottom"
                                  componentClass="div"
                                >
                                  <div
                                    className="margin-bottom row"
                                  >
                                    <Col
                                      bsClass="col"
                                      componentClass="div"
                                      xs={12}
                                    >
                                      <div
                                        className="col-xs-12"
                                      >
                                        <HelpTopicURL
                                          helpTopic="createDataClass"
                                          nounPlural="Data Classes"
                                        >
                                          <Row
                                            bsClass="row"
                                            componentClass="div"
                                          >
                                            <div
                                              className="row"
                                            >
                                              <Col
                                                bsClass="col"
                                                componentClass="div"
                                                xs={12}
                                              >
                                                <div
                                                  className="col-xs-12"
                                                >
                                                  <HelpLink
                                                    className="domain-field-float-right"
                                                    topic="createDataClass"
                                                  >
                                                    <a
                                                      className="domain-field-float-right"
                                                      href="https://www.labkey.org/Documentation/wiki-page.view?name=createDataClass&referrer=inPage"
                                                      rel="noreferrer"
                                                      target="_blank"
                                                    >
                                                      Learn more about designing data classes
                                                    </a>
                                                  </HelpLink>
                                                </div>
                                              </Col>
                                            </div>
                                          </Row>
                                        </HelpTopicURL>
                                      </div>
                                    </Col>
                                  </div>
                                </Row>
                                <EntityDetailsForm
                                  data={
                                    Immutable.Map {
                                      "rowId": 802,
                                      "name": "test1",
                                      "description": "with a description",
                                      "nameExpression": "Source-\${genId}",
                                    }
                                  }
                                  nameExpressionInfoUrl="https://www.labkey.org/Documentation/wiki-page.view?name=dataClass#name&referrer=inPage"
                                  nameExpressionPlaceholder="Enter a naming pattern (e.g., DC-\${now:date}-\${genId})"
                                  noun="Data Class"
                                  onFormChange={[Function]}
                                >
                                  <Form
                                    bsClass="form"
                                    componentClass="form"
                                    horizontal={false}
                                    inline={false}
                                  >
                                    <form
                                      className=""
                                    >
                                      <Row
                                        bsClass="row"
                                        className="margin-bottom margin-top"
                                        componentClass="div"
                                      >
                                        <div
                                          className="margin-bottom margin-top row"
                                        >
                                          <Col
                                            bsClass="col"
                                            componentClass="div"
                                            xs={2}
                                          >
                                            <div
                                              className="col-xs-2"
                                            >
                                              <DomainFieldLabel
                                                helpTipBody="The name for this data class. Note that this can't be changed after data class creation."
                                                label="Name"
                                                required={true}
                                              >
                                                <span
                                                  className="domain-no-wrap"
                                                >
                                                  Name
                                                  <Component
                                                    customStyle={Object {}}
                                                    id="tooltip"
                                                    required={true}
                                                    size="1x"
                                                    title="Name"
                                                  >
                                                    <span
                                                      className="label-help-target"
                                                      onMouseOut={[Function]}
                                                      onMouseOver={[Function]}
                                                    >
                                                      <FontAwesomeIcon
                                                        border={false}
                                                        className="label-help-icon"
                                                        fixedWidth={false}
                                                        flip={null}
                                                        icon={
                                                          Object {
                                                            "icon": Array [
                                                              512,
                                                              512,
                                                              Array [],
                                                              "f059",
                                                              "M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z",
                                                            ],
                                                            "iconName": "question-circle",
                                                            "prefix": "fas",
                                                          }
                                                        }
                                                        inverse={false}
                                                        listItem={false}
                                                        mask={null}
                                                        pull={null}
                                                        pulse={false}
                                                        rotation={null}
                                                        size="1x"
                                                        spin={false}
                                                        style={Object {}}
                                                        swapOpacity={false}
                                                        symbol={false}
                                                        title=""
                                                        transform={null}
                                                      >
                                                        <svg
                                                          aria-hidden="true"
                                                          className="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                                                          data-icon="question-circle"
                                                          data-prefix="fas"
                                                          focusable="false"
                                                          role="img"
                                                          style={Object {}}
                                                          viewBox="0 0 512 512"
                                                          xmlns="http://www.w3.org/2000/svg"
                                                        >
                                                          <path
                                                            d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                            fill="currentColor"
                                                            style={Object {}}
                                                          />
                                                        </svg>
                                                      </FontAwesomeIcon>
                                                      <Overlay
                                                        animation={[Function]}
                                                        placement="right"
                                                        rootClose={false}
                                                        show={false}
                                                      >
                                                        <Overlay
                                                          placement="right"
                                                          rootClose={false}
                                                          show={false}
                                                          transition={[Function]}
                                                        />
                                                      </Overlay>
                                                    </span>
                                                  </Component>
                                                   *
                                                </span>
                                              </DomainFieldLabel>
                                            </div>
                                          </Col>
                                          <Col
                                            bsClass="col"
                                            componentClass="div"
                                            xs={10}
                                          >
                                            <div
                                              className="col-xs-10"
                                            >
                                              <FormControl
                                                bsClass="form-control"
                                                componentClass="input"
                                                disabled={true}
                                                id="entity-name"
                                                onChange={[Function]}
                                                placeholder="Enter a name for this data class"
                                                type="text"
                                                value="test1"
                                              >
                                                <input
                                                  className="form-control"
                                                  disabled={true}
                                                  id="entity-name"
                                                  onChange={[Function]}
                                                  placeholder="Enter a name for this data class"
                                                  type="text"
                                                  value="test1"
                                                />
                                              </FormControl>
                                            </div>
                                          </Col>
                                        </div>
                                      </Row>
                                      <Row
                                        bsClass="row"
                                        className="margin-bottom"
                                        componentClass="div"
                                      >
                                        <div
                                          className="margin-bottom row"
                                        >
                                          <Col
                                            bsClass="col"
                                            componentClass="div"
                                            xs={2}
                                          >
                                            <div
                                              className="col-xs-2"
                                            >
                                              <DomainFieldLabel
                                                helpTipBody="A short description for this data class."
                                                label="Description"
                                              >
                                                <span
                                                  className="domain-no-wrap"
                                                >
                                                  Description
                                                  <Component
                                                    customStyle={Object {}}
                                                    id="tooltip"
                                                    size="1x"
                                                    title="Description"
                                                  >
                                                    <span
                                                      className="label-help-target"
                                                      onMouseOut={[Function]}
                                                      onMouseOver={[Function]}
                                                    >
                                                      <FontAwesomeIcon
                                                        border={false}
                                                        className="label-help-icon"
                                                        fixedWidth={false}
                                                        flip={null}
                                                        icon={
                                                          Object {
                                                            "icon": Array [
                                                              512,
                                                              512,
                                                              Array [],
                                                              "f059",
                                                              "M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z",
                                                            ],
                                                            "iconName": "question-circle",
                                                            "prefix": "fas",
                                                          }
                                                        }
                                                        inverse={false}
                                                        listItem={false}
                                                        mask={null}
                                                        pull={null}
                                                        pulse={false}
                                                        rotation={null}
                                                        size="1x"
                                                        spin={false}
                                                        style={Object {}}
                                                        swapOpacity={false}
                                                        symbol={false}
                                                        title=""
                                                        transform={null}
                                                      >
                                                        <svg
                                                          aria-hidden="true"
                                                          className="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                                                          data-icon="question-circle"
                                                          data-prefix="fas"
                                                          focusable="false"
                                                          role="img"
                                                          style={Object {}}
                                                          viewBox="0 0 512 512"
                                                          xmlns="http://www.w3.org/2000/svg"
                                                        >
                                                          <path
                                                            d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                            fill="currentColor"
                                                            style={Object {}}
                                                          />
                                                        </svg>
                                                      </FontAwesomeIcon>
                                                      <Overlay
                                                        animation={[Function]}
                                                        placement="right"
                                                        rootClose={false}
                                                        show={false}
                                                      >
                                                        <Overlay
                                                          placement="right"
                                                          rootClose={false}
                                                          show={false}
                                                          transition={[Function]}
                                                        />
                                                      </Overlay>
                                                    </span>
                                                  </Component>
                                                </span>
                                              </DomainFieldLabel>
                                            </div>
                                          </Col>
                                          <Col
                                            bsClass="col"
                                            componentClass="div"
                                            xs={10}
                                          >
                                            <div
                                              className="col-xs-10"
                                            >
                                              <textarea
                                                className="form-control textarea-noresize"
                                                id="entity-description"
                                                onChange={[Function]}
                                                value="with a description"
                                              />
                                            </div>
                                          </Col>
                                        </div>
                                      </Row>
                                      <Row
                                        bsClass="row"
                                        className="margin-bottom"
                                        componentClass="div"
                                      >
                                        <div
                                          className="margin-bottom row"
                                        >
                                          <Col
                                            bsClass="col"
                                            componentClass="div"
                                            xs={2}
                                          >
                                            <div
                                              className="col-xs-2"
                                            >
                                              <DomainFieldLabel
                                                helpTipBody={
                                                  <React.Fragment>
                                                    <p>
                                                      Pattern used for generating unique IDs for this 
                                                      data class
                                                      .
                                                    </p>
                                                    <p>
                                                      <a
                                                        href="https://www.labkey.org/Documentation/wiki-page.view?name=dataClass#name&referrer=inPage"
                                                        target="_blank"
                                                      >
                                                        More info
                                                      </a>
                                                    </p>
                                                  </React.Fragment>
                                                }
                                                label="Naming Pattern"
                                              >
                                                Naming 
                                                <span
                                                  className="domain-no-wrap"
                                                >
                                                  Pattern
                                                  <Component
                                                    customStyle={Object {}}
                                                    id="tooltip"
                                                    size="1x"
                                                    title="Naming Pattern"
                                                  >
                                                    <span
                                                      className="label-help-target"
                                                      onMouseOut={[Function]}
                                                      onMouseOver={[Function]}
                                                    >
                                                      <FontAwesomeIcon
                                                        border={false}
                                                        className="label-help-icon"
                                                        fixedWidth={false}
                                                        flip={null}
                                                        icon={
                                                          Object {
                                                            "icon": Array [
                                                              512,
                                                              512,
                                                              Array [],
                                                              "f059",
                                                              "M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z",
                                                            ],
                                                            "iconName": "question-circle",
                                                            "prefix": "fas",
                                                          }
                                                        }
                                                        inverse={false}
                                                        listItem={false}
                                                        mask={null}
                                                        pull={null}
                                                        pulse={false}
                                                        rotation={null}
                                                        size="1x"
                                                        spin={false}
                                                        style={Object {}}
                                                        swapOpacity={false}
                                                        symbol={false}
                                                        title=""
                                                        transform={null}
                                                      >
                                                        <svg
                                                          aria-hidden="true"
                                                          className="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                                                          data-icon="question-circle"
                                                          data-prefix="fas"
                                                          focusable="false"
                                                          role="img"
                                                          style={Object {}}
                                                          viewBox="0 0 512 512"
                                                          xmlns="http://www.w3.org/2000/svg"
                                                        >
                                                          <path
                                                            d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                            fill="currentColor"
                                                            style={Object {}}
                                                          />
                                                        </svg>
                                                      </FontAwesomeIcon>
                                                      <Overlay
                                                        animation={[Function]}
                                                        placement="right"
                                                        rootClose={false}
                                                        show={false}
                                                      >
                                                        <Overlay
                                                          placement="right"
                                                          rootClose={false}
                                                          show={false}
                                                          transition={[Function]}
                                                        />
                                                      </Overlay>
                                                    </span>
                                                  </Component>
                                                </span>
                                              </DomainFieldLabel>
                                            </div>
                                          </Col>
                                          <Col
                                            bsClass="col"
                                            componentClass="div"
                                            xs={10}
                                          >
                                            <div
                                              className="col-xs-10"
                                            >
                                              <FormControl
                                                bsClass="form-control"
                                                componentClass="input"
                                                id="entity-nameExpression"
                                                onChange={[Function]}
                                                placeholder="Enter a naming pattern (e.g., DC-\${now:date}-\${genId})"
                                                type="text"
                                                value="Source-\${genId}"
                                              >
                                                <input
                                                  className="form-control"
                                                  id="entity-nameExpression"
                                                  onChange={[Function]}
                                                  placeholder="Enter a naming pattern (e.g., DC-\${now:date}-\${genId})"
                                                  type="text"
                                                  value="Source-\${genId}"
                                                />
                                              </FormControl>
                                            </div>
                                          </Col>
                                        </div>
                                      </Row>
                                    </form>
                                  </Form>
                                </EntityDetailsForm>
                                <Row
                                  bsClass="row"
                                  componentClass="div"
                                >
                                  <div
                                    className="row"
                                  >
                                    <Col
                                      bsClass="col"
                                      componentClass="div"
                                      xs={2}
                                    >
                                      <div
                                        className="col-xs-2"
                                      >
                                        <DomainFieldLabel
                                          label="Category"
                                        >
                                          <span
                                            className="domain-no-wrap"
                                          >
                                            Category
                                          </span>
                                        </DomainFieldLabel>
                                      </div>
                                    </Col>
                                    <Col
                                      bsClass="col"
                                      componentClass="div"
                                      xs={10}
                                    >
                                      <div
                                        className="col-xs-10"
                                      >
                                        <QuerySelect
                                          componentId="entity-category"
                                          delimiter=","
                                          displayColumn="Value"
                                          filterOption={[Function]}
                                          fireQSChangeOnInit={false}
                                          loadOnFocus={false}
                                          name="entity-category"
                                          onQSChange={[Function]}
                                          preLoad={true}
                                          previewOptions={false}
                                          schemaQuery={
                                            Immutable.Record {
                                              "schemaName": "exp",
                                              "queryName": "DataClassCategoryType",
                                              "viewName": undefined,
                                            }
                                          }
                                          showLabel={false}
                                          showLoading={true}
                                          value="sources"
                                          valueColumn="Value"
                                        >
                                          <SelectInput
                                            disabled={true}
                                            formsy={false}
                                            name="entity-category"
                                            placeholder="Loading..."
                                            type="text"
                                          >
                                            <SelectInputImpl
                                              allowCreate={false}
                                              allowDisable={false}
                                              autoValue={true}
                                              clearCacheOnChange={true}
                                              clearable={true}
                                              containerClass="form-group row"
                                              defaultOptions={true}
                                              delimiter=","
                                              disabled={true}
                                              formsy={false}
                                              initiallyDisabled={false}
                                              inputClass="col-sm-9 col-xs-12"
                                              labelClass="control-label col-sm-3 text-left col-xs-12"
                                              name="entity-category"
                                              placeholder="Loading..."
                                              saveOnBlur={false}
                                              type="text"
                                              valueKey="value"
                                            >
                                              <div
                                                className="select-input-container form-group row"
                                              >
                                                <div
                                                  className="col-sm-9 col-xs-12"
                                                >
                                                  <StateManager
                                                    blurInputOnSelect={false}
                                                    className="select-input"
                                                    classNamePrefix="select-input"
                                                    components={
                                                      Object {
                                                        "Input": [Function],
                                                      }
                                                    }
                                                    defaultInputValue=""
                                                    defaultMenuIsOpen={false}
                                                    defaultValue={null}
                                                    delimiter=","
                                                    id="selectinput-2"
                                                    isClearable={true}
                                                    isDisabled={true}
                                                    name="entity-category"
                                                    noOptionsMessage={[Function]}
                                                    onBlur={[Function]}
                                                    onChange={[Function]}
                                                    onFocus={[Function]}
                                                    placeholder="Loading..."
                                                    styles={
                                                      Object {
                                                        "menu": [Function],
                                                        "multiValue": [Function],
                                                        "multiValueLabel": [Function],
                                                        "multiValueRemove": [Function],
                                                      }
                                                    }
                                                    theme={[Function]}
                                                    value={null}
                                                  >
                                                    <Select
                                                      aria-live="polite"
                                                      backspaceRemovesValue={true}
                                                      blurInputOnSelect={false}
                                                      captureMenuScroll={false}
                                                      className="select-input"
                                                      classNamePrefix="select-input"
                                                      closeMenuOnScroll={false}
                                                      closeMenuOnSelect={true}
                                                      components={
                                                        Object {
                                                          "Input": [Function],
                                                        }
                                                      }
                                                      controlShouldRenderValue={true}
                                                      delimiter=","
                                                      escapeClearsValue={false}
                                                      filterOption={[Function]}
                                                      formatGroupLabel={[Function]}
                                                      getOptionLabel={[Function]}
                                                      getOptionValue={[Function]}
                                                      id="selectinput-2"
                                                      inputValue=""
                                                      isClearable={true}
                                                      isDisabled={true}
                                                      isLoading={false}
                                                      isMulti={false}
                                                      isOptionDisabled={[Function]}
                                                      isRtl={false}
                                                      isSearchable={true}
                                                      loadingMessage={[Function]}
                                                      maxMenuHeight={300}
                                                      menuIsOpen={false}
                                                      menuPlacement="bottom"
                                                      menuPosition="absolute"
                                                      menuShouldBlockScroll={false}
                                                      menuShouldScrollIntoView={true}
                                                      minMenuHeight={140}
                                                      name="entity-category"
                                                      noOptionsMessage={[Function]}
                                                      onBlur={[Function]}
                                                      onChange={[Function]}
                                                      onFocus={[Function]}
                                                      onInputChange={[Function]}
                                                      onMenuClose={[Function]}
                                                      onMenuOpen={[Function]}
                                                      openMenuOnClick={true}
                                                      openMenuOnFocus={false}
                                                      options={Array []}
                                                      pageSize={5}
                                                      placeholder="Loading..."
                                                      screenReaderStatus={[Function]}
                                                      styles={
                                                        Object {
                                                          "menu": [Function],
                                                          "multiValue": [Function],
                                                          "multiValueLabel": [Function],
                                                          "multiValueRemove": [Function],
                                                        }
                                                      }
                                                      tabIndex="0"
                                                      tabSelectsValue={true}
                                                      theme={[Function]}
                                                      value={null}
                                                    >
                                                      <SelectContainer
                                                        className="select-input"
                                                        clearValue={[Function]}
                                                        cx={[Function]}
                                                        getStyles={[Function]}
                                                        getValue={[Function]}
                                                        hasValue={false}
                                                        innerProps={
                                                          Object {
                                                            "id": "selectinput-2",
                                                            "onKeyDown": [Function],
                                                          }
                                                        }
                                                        isDisabled={true}
                                                        isFocused={false}
                                                        isMulti={false}
                                                        isRtl={false}
                                                        options={Array []}
                                                        selectOption={[Function]}
                                                        selectProps={
                                                          Object {
                                                            "aria-live": "polite",
                                                            "autoFocus": undefined,
                                                            "backspaceRemovesValue": true,
                                                            "blurInputOnSelect": false,
                                                            "captureMenuScroll": false,
                                                            "className": "select-input",
                                                            "classNamePrefix": "select-input",
                                                            "closeMenuOnScroll": false,
                                                            "closeMenuOnSelect": true,
                                                            "components": Object {
                                                              "Input": [Function],
                                                            },
                                                            "controlShouldRenderValue": true,
                                                            "delimiter": ",",
                                                            "escapeClearsValue": false,
                                                            "filterOption": [Function],
                                                            "formatGroupLabel": [Function],
                                                            "getOptionLabel": [Function],
                                                            "getOptionValue": [Function],
                                                            "id": "selectinput-2",
                                                            "inputValue": "",
                                                            "isClearable": true,
                                                            "isDisabled": true,
                                                            "isLoading": false,
                                                            "isMulti": false,
                                                            "isOptionDisabled": [Function],
                                                            "isRtl": false,
                                                            "isSearchable": true,
                                                            "loadingMessage": [Function],
                                                            "maxMenuHeight": 300,
                                                            "menuIsOpen": false,
                                                            "menuPlacement": "bottom",
                                                            "menuPosition": "absolute",
                                                            "menuShouldBlockScroll": false,
                                                            "menuShouldScrollIntoView": true,
                                                            "minMenuHeight": 140,
                                                            "name": "entity-category",
                                                            "noOptionsMessage": [Function],
                                                            "onBlur": [Function],
                                                            "onChange": [Function],
                                                            "onFocus": [Function],
                                                            "onInputChange": [Function],
                                                            "onMenuClose": [Function],
                                                            "onMenuOpen": [Function],
                                                            "openMenuOnClick": true,
                                                            "openMenuOnFocus": false,
                                                            "options": Array [],
                                                            "pageSize": 5,
                                                            "placeholder": "Loading...",
                                                            "promptTextCreator": undefined,
                                                            "screenReaderStatus": [Function],
                                                            "styles": Object {
                                                              "menu": [Function],
                                                              "multiValue": [Function],
                                                              "multiValueLabel": [Function],
                                                              "multiValueRemove": [Function],
                                                            },
                                                            "tabIndex": "0",
                                                            "tabSelectsValue": true,
                                                            "theme": [Function],
                                                            "value": null,
                                                          }
                                                        }
                                                        setValue={[Function]}
                                                        theme={
                                                          Object {
                                                            "borderRadius": 4,
                                                            "colors": Object {
                                                              "danger": "#D9534F",
                                                              "dangerLight": "#FFBDAD",
                                                              "neutral0": "hsl(0, 0%, 100%)",
                                                              "neutral10": "hsl(0, 0%, 90%)",
                                                              "neutral20": "hsl(0, 0%, 80%)",
                                                              "neutral30": "hsl(0, 0%, 70%)",
                                                              "neutral40": "hsl(0, 0%, 60%)",
                                                              "neutral5": "hsl(0, 0%, 95%)",
                                                              "neutral50": "hsl(0, 0%, 50%)",
                                                              "neutral60": "hsl(0, 0%, 40%)",
                                                              "neutral70": "hsl(0, 0%, 30%)",
                                                              "neutral80": "hsl(0, 0%, 20%)",
                                                              "neutral90": "hsl(0, 0%, 10%)",
                                                              "primary": "#2980B9",
                                                              "primary25": "rgba(41, 128, 185, 0.1)",
                                                              "primary50": "#F2F9FC",
                                                              "primary75": "#009BF9",
                                                            },
                                                            "spacing": Object {
                                                              "baseUnit": 4,
                                                              "controlHeight": 38,
                                                              "menuGutter": 8,
                                                            },
                                                          }
                                                        }
                                                      >
                                                        <EmotionCssPropInternal
                                                          __EMOTION_LABEL_PLEASE_DO_NOT_USE__="SelectContainer"
                                                          __EMOTION_TYPE_PLEASE_DO_NOT_USE__="div"
                                                          className="select-input select-input--is-disabled"
                                                          css={
                                                            Object {
                                                              "boxSizing": "border-box",
                                                              "direction": null,
                                                              "label": "container",
                                                              "pointerEvents": "none",
                                                              "position": "relative",
                                                            }
                                                          }
                                                          id="selectinput-2"
                                                          onKeyDown={[Function]}
                                                        >
                                                          <div
                                                            className="select-input select-input--is-disabled css-14jk2my-container"
                                                            id="selectinput-2"
                                                            onKeyDown={[Function]}
                                                          >
                                                            <LiveRegion
                                                              ariaSelection={null}
                                                              clearValue={[Function]}
                                                              cx={[Function]}
                                                              focusableOptions={Array []}
                                                              focusedOption={null}
                                                              focusedValue={null}
                                                              getStyles={[Function]}
                                                              getValue={[Function]}
                                                              hasValue={false}
                                                              isFocused={false}
                                                              isMulti={false}
                                                              isRtl={false}
                                                              options={Array []}
                                                              selectOption={[Function]}
                                                              selectProps={
                                                                Object {
                                                                  "aria-live": "polite",
                                                                  "autoFocus": undefined,
                                                                  "backspaceRemovesValue": true,
                                                                  "blurInputOnSelect": false,
                                                                  "captureMenuScroll": false,
                                                                  "className": "select-input",
                                                                  "classNamePrefix": "select-input",
                                                                  "closeMenuOnScroll": false,
                                                                  "closeMenuOnSelect": true,
                                                                  "components": Object {
                                                                    "Input": [Function],
                                                                  },
                                                                  "controlShouldRenderValue": true,
                                                                  "delimiter": ",",
                                                                  "escapeClearsValue": false,
                                                                  "filterOption": [Function],
                                                                  "formatGroupLabel": [Function],
                                                                  "getOptionLabel": [Function],
                                                                  "getOptionValue": [Function],
                                                                  "id": "selectinput-2",
                                                                  "inputValue": "",
                                                                  "isClearable": true,
                                                                  "isDisabled": true,
                                                                  "isLoading": false,
                                                                  "isMulti": false,
                                                                  "isOptionDisabled": [Function],
                                                                  "isRtl": false,
                                                                  "isSearchable": true,
                                                                  "loadingMessage": [Function],
                                                                  "maxMenuHeight": 300,
                                                                  "menuIsOpen": false,
                                                                  "menuPlacement": "bottom",
                                                                  "menuPosition": "absolute",
                                                                  "menuShouldBlockScroll": false,
                                                                  "menuShouldScrollIntoView": true,
                                                                  "minMenuHeight": 140,
                                                                  "name": "entity-category",
                                                                  "noOptionsMessage": [Function],
                                                                  "onBlur": [Function],
                                                                  "onChange": [Function],
                                                                  "onFocus": [Function],
                                                                  "onInputChange": [Function],
                                                                  "onMenuClose": [Function],
                                                                  "onMenuOpen": [Function],
                                                                  "openMenuOnClick": true,
                                                                  "openMenuOnFocus": false,
                                                                  "options": Array [],
                                                                  "pageSize": 5,
                                                                  "placeholder": "Loading...",
                                                                  "promptTextCreator": undefined,
                                                                  "screenReaderStatus": [Function],
                                                                  "styles": Object {
                                                                    "menu": [Function],
                                                                    "multiValue": [Function],
                                                                    "multiValueLabel": [Function],
                                                                    "multiValueRemove": [Function],
                                                                  },
                                                                  "tabIndex": "0",
                                                                  "tabSelectsValue": true,
                                                                  "theme": [Function],
                                                                  "value": null,
                                                                }
                                                              }
                                                              selectValue={Array []}
                                                              setValue={[Function]}
                                                              theme={
                                                                Object {
                                                                  "borderRadius": 4,
                                                                  "colors": Object {
                                                                    "danger": "#D9534F",
                                                                    "dangerLight": "#FFBDAD",
                                                                    "neutral0": "hsl(0, 0%, 100%)",
                                                                    "neutral10": "hsl(0, 0%, 90%)",
                                                                    "neutral20": "hsl(0, 0%, 80%)",
                                                                    "neutral30": "hsl(0, 0%, 70%)",
                                                                    "neutral40": "hsl(0, 0%, 60%)",
                                                                    "neutral5": "hsl(0, 0%, 95%)",
                                                                    "neutral50": "hsl(0, 0%, 50%)",
                                                                    "neutral60": "hsl(0, 0%, 40%)",
                                                                    "neutral70": "hsl(0, 0%, 30%)",
                                                                    "neutral80": "hsl(0, 0%, 20%)",
                                                                    "neutral90": "hsl(0, 0%, 10%)",
                                                                    "primary": "#2980B9",
                                                                    "primary25": "rgba(41, 128, 185, 0.1)",
                                                                    "primary50": "#F2F9FC",
                                                                    "primary75": "#009BF9",
                                                                  },
                                                                  "spacing": Object {
                                                                    "baseUnit": 4,
                                                                    "controlHeight": 38,
                                                                    "menuGutter": 8,
                                                                  },
                                                                }
                                                              }
                                                            >
                                                              <A11yText
                                                                aria-atomic="false"
                                                                aria-live="polite"
                                                                aria-relevant="additions text"
                                                              >
                                                                <EmotionCssPropInternal
                                                                  __EMOTION_LABEL_PLEASE_DO_NOT_USE__="A11yText"
                                                                  __EMOTION_TYPE_PLEASE_DO_NOT_USE__="span"
                                                                  aria-atomic="false"
                                                                  aria-live="polite"
                                                                  aria-relevant="additions text"
                                                                  css={
                                                                    Object {
                                                                      "map": "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkExMXlUZXh0LmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQVFJIiwiZmlsZSI6IkExMXlUZXh0LmpzIiwic291cmNlc0NvbnRlbnQiOlsiLy8gQGZsb3dcbi8qKiBAanN4IGpzeCAqL1xuaW1wb3J0IHsgdHlwZSBFbGVtZW50Q29uZmlnIH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsganN4IH0gZnJvbSAnQGVtb3Rpb24vcmVhY3QnO1xuXG4vLyBBc3Npc3RpdmUgdGV4dCB0byBkZXNjcmliZSB2aXN1YWwgZWxlbWVudHMuIEhpZGRlbiBmb3Igc2lnaHRlZCB1c2Vycy5cbmNvbnN0IEExMXlUZXh0ID0gKHByb3BzOiBFbGVtZW50Q29uZmlnPCdzcGFuJz4pID0+IChcbiAgPHNwYW5cbiAgICBjc3M9e3tcbiAgICAgIGxhYmVsOiAnYTExeVRleHQnLFxuICAgICAgekluZGV4OiA5OTk5LFxuICAgICAgYm9yZGVyOiAwLFxuICAgICAgY2xpcDogJ3JlY3QoMXB4LCAxcHgsIDFweCwgMXB4KScsXG4gICAgICBoZWlnaHQ6IDEsXG4gICAgICB3aWR0aDogMSxcbiAgICAgIHBvc2l0aW9uOiAnYWJzb2x1dGUnLFxuICAgICAgb3ZlcmZsb3c6ICdoaWRkZW4nLFxuICAgICAgcGFkZGluZzogMCxcbiAgICAgIHdoaXRlU3BhY2U6ICdub3dyYXAnLFxuICAgIH19XG4gICAgey4uLnByb3BzfVxuICAvPlxuKTtcblxuZXhwb3J0IGRlZmF1bHQgQTExeVRleHQ7XG4iXX0= */",
                                                                      "name": "1f43avz-a11yText-A11yText",
                                                                      "styles": "label:a11yText;z-index:9999;border:0;clip:rect(1px, 1px, 1px, 1px);height:1px;width:1px;position:absolute;overflow:hidden;padding:0;white-space:nowrap;label:A11yText;",
                                                                      "toString": [Function],
                                                                    }
                                                                  }
                                                                >
                                                                  <span
                                                                    aria-atomic="false"
                                                                    aria-live="polite"
                                                                    aria-relevant="additions text"
                                                                    className="css-1f43avz-a11yText-A11yText"
                                                                  />
                                                                </EmotionCssPropInternal>
                                                              </A11yText>
                                                            </LiveRegion>
                                                            <Control
                                                              clearValue={[Function]}
                                                              cx={[Function]}
                                                              getStyles={[Function]}
                                                              getValue={[Function]}
                                                              hasValue={false}
                                                              innerProps={
                                                                Object {
                                                                  "onMouseDown": [Function],
                                                                  "onTouchEnd": [Function],
                                                                }
                                                              }
                                                              innerRef={[Function]}
                                                              isDisabled={true}
                                                              isFocused={false}
                                                              isMulti={false}
                                                              isRtl={false}
                                                              menuIsOpen={false}
                                                              options={Array []}
                                                              selectOption={[Function]}
                                                              selectProps={
                                                                Object {
                                                                  "aria-live": "polite",
                                                                  "autoFocus": undefined,
                                                                  "backspaceRemovesValue": true,
                                                                  "blurInputOnSelect": false,
                                                                  "captureMenuScroll": false,
                                                                  "className": "select-input",
                                                                  "classNamePrefix": "select-input",
                                                                  "closeMenuOnScroll": false,
                                                                  "closeMenuOnSelect": true,
                                                                  "components": Object {
                                                                    "Input": [Function],
                                                                  },
                                                                  "controlShouldRenderValue": true,
                                                                  "delimiter": ",",
                                                                  "escapeClearsValue": false,
                                                                  "filterOption": [Function],
                                                                  "formatGroupLabel": [Function],
                                                                  "getOptionLabel": [Function],
                                                                  "getOptionValue": [Function],
                                                                  "id": "selectinput-2",
                                                                  "inputValue": "",
                                                                  "isClearable": true,
                                                                  "isDisabled": true,
                                                                  "isLoading": false,
                                                                  "isMulti": false,
                                                                  "isOptionDisabled": [Function],
                                                                  "isRtl": false,
                                                                  "isSearchable": true,
                                                                  "loadingMessage": [Function],
                                                                  "maxMenuHeight": 300,
                                                                  "menuIsOpen": false,
                                                                  "menuPlacement": "bottom",
                                                                  "menuPosition": "absolute",
                                                                  "menuShouldBlockScroll": false,
                                                                  "menuShouldScrollIntoView": true,
                                                                  "minMenuHeight": 140,
                                                                  "name": "entity-category",
                                                                  "noOptionsMessage": [Function],
                                                                  "onBlur": [Function],
                                                                  "onChange": [Function],
                                                                  "onFocus": [Function],
                                                                  "onInputChange": [Function],
                                                                  "onMenuClose": [Function],
                                                                  "onMenuOpen": [Function],
                                                                  "openMenuOnClick": true,
                                                                  "openMenuOnFocus": false,
                                                                  "options": Array [],
                                                                  "pageSize": 5,
                                                                  "placeholder": "Loading...",
                                                                  "promptTextCreator": undefined,
                                                                  "screenReaderStatus": [Function],
                                                                  "styles": Object {
                                                                    "menu": [Function],
                                                                    "multiValue": [Function],
                                                                    "multiValueLabel": [Function],
                                                                    "multiValueRemove": [Function],
                                                                  },
                                                                  "tabIndex": "0",
                                                                  "tabSelectsValue": true,
                                                                  "theme": [Function],
                                                                  "value": null,
                                                                }
                                                              }
                                                              setValue={[Function]}
                                                              theme={
                                                                Object {
                                                                  "borderRadius": 4,
                                                                  "colors": Object {
                                                                    "danger": "#D9534F",
                                                                    "dangerLight": "#FFBDAD",
                                                                    "neutral0": "hsl(0, 0%, 100%)",
                                                                    "neutral10": "hsl(0, 0%, 90%)",
                                                                    "neutral20": "hsl(0, 0%, 80%)",
                                                                    "neutral30": "hsl(0, 0%, 70%)",
                                                                    "neutral40": "hsl(0, 0%, 60%)",
                                                                    "neutral5": "hsl(0, 0%, 95%)",
                                                                    "neutral50": "hsl(0, 0%, 50%)",
                                                                    "neutral60": "hsl(0, 0%, 40%)",
                                                                    "neutral70": "hsl(0, 0%, 30%)",
                                                                    "neutral80": "hsl(0, 0%, 20%)",
                                                                    "neutral90": "hsl(0, 0%, 10%)",
                                                                    "primary": "#2980B9",
                                                                    "primary25": "rgba(41, 128, 185, 0.1)",
                                                                    "primary50": "#F2F9FC",
                                                                    "primary75": "#009BF9",
                                                                  },
                                                                  "spacing": Object {
                                                                    "baseUnit": 4,
                                                                    "controlHeight": 38,
                                                                    "menuGutter": 8,
                                                                  },
                                                                }
                                                              }
                                                            >
                                                              <EmotionCssPropInternal
                                                                __EMOTION_LABEL_PLEASE_DO_NOT_USE__="Control"
                                                                __EMOTION_TYPE_PLEASE_DO_NOT_USE__="div"
                                                                className="select-input__control select-input__control--is-disabled"
                                                                css={
                                                                  Object {
                                                                    "&:hover": Object {
                                                                      "borderColor": "hsl(0, 0%, 70%)",
                                                                    },
                                                                    "alignItems": "center",
                                                                    "backgroundColor": "hsl(0, 0%, 95%)",
                                                                    "borderColor": "hsl(0, 0%, 90%)",
                                                                    "borderRadius": 4,
                                                                    "borderStyle": "solid",
                                                                    "borderWidth": 1,
                                                                    "boxShadow": null,
                                                                    "boxSizing": "border-box",
                                                                    "cursor": "default",
                                                                    "display": "flex",
                                                                    "flexWrap": "wrap",
                                                                    "justifyContent": "space-between",
                                                                    "label": "control",
                                                                    "minHeight": 38,
                                                                    "outline": "0 !important",
                                                                    "position": "relative",
                                                                    "transition": "all 100ms",
                                                                  }
                                                                }
                                                                onMouseDown={[Function]}
                                                                onTouchEnd={[Function]}
                                                              >
                                                                <div
                                                                  className="select-input__control select-input__control--is-disabled css-1fhf3k1-control"
                                                                  onMouseDown={[Function]}
                                                                  onTouchEnd={[Function]}
                                                                >
                                                                  <ValueContainer
                                                                    clearValue={[Function]}
                                                                    cx={[Function]}
                                                                    getStyles={[Function]}
                                                                    getValue={[Function]}
                                                                    hasValue={false}
                                                                    isDisabled={true}
                                                                    isMulti={false}
                                                                    isRtl={false}
                                                                    options={Array []}
                                                                    selectOption={[Function]}
                                                                    selectProps={
                                                                      Object {
                                                                        "aria-live": "polite",
                                                                        "autoFocus": undefined,
                                                                        "backspaceRemovesValue": true,
                                                                        "blurInputOnSelect": false,
                                                                        "captureMenuScroll": false,
                                                                        "className": "select-input",
                                                                        "classNamePrefix": "select-input",
                                                                        "closeMenuOnScroll": false,
                                                                        "closeMenuOnSelect": true,
                                                                        "components": Object {
                                                                          "Input": [Function],
                                                                        },
                                                                        "controlShouldRenderValue": true,
                                                                        "delimiter": ",",
                                                                        "escapeClearsValue": false,
                                                                        "filterOption": [Function],
                                                                        "formatGroupLabel": [Function],
                                                                        "getOptionLabel": [Function],
                                                                        "getOptionValue": [Function],
                                                                        "id": "selectinput-2",
                                                                        "inputValue": "",
                                                                        "isClearable": true,
                                                                        "isDisabled": true,
                                                                        "isLoading": false,
                                                                        "isMulti": false,
                                                                        "isOptionDisabled": [Function],
                                                                        "isRtl": false,
                                                                        "isSearchable": true,
                                                                        "loadingMessage": [Function],
                                                                        "maxMenuHeight": 300,
                                                                        "menuIsOpen": false,
                                                                        "menuPlacement": "bottom",
                                                                        "menuPosition": "absolute",
                                                                        "menuShouldBlockScroll": false,
                                                                        "menuShouldScrollIntoView": true,
                                                                        "minMenuHeight": 140,
                                                                        "name": "entity-category",
                                                                        "noOptionsMessage": [Function],
                                                                        "onBlur": [Function],
                                                                        "onChange": [Function],
                                                                        "onFocus": [Function],
                                                                        "onInputChange": [Function],
                                                                        "onMenuClose": [Function],
                                                                        "onMenuOpen": [Function],
                                                                        "openMenuOnClick": true,
                                                                        "openMenuOnFocus": false,
                                                                        "options": Array [],
                                                                        "pageSize": 5,
                                                                        "placeholder": "Loading...",
                                                                        "promptTextCreator": undefined,
                                                                        "screenReaderStatus": [Function],
                                                                        "styles": Object {
                                                                          "menu": [Function],
                                                                          "multiValue": [Function],
                                                                          "multiValueLabel": [Function],
                                                                          "multiValueRemove": [Function],
                                                                        },
                                                                        "tabIndex": "0",
                                                                        "tabSelectsValue": true,
                                                                        "theme": [Function],
                                                                        "value": null,
                                                                      }
                                                                    }
                                                                    setValue={[Function]}
                                                                    theme={
                                                                      Object {
                                                                        "borderRadius": 4,
                                                                        "colors": Object {
                                                                          "danger": "#D9534F",
                                                                          "dangerLight": "#FFBDAD",
                                                                          "neutral0": "hsl(0, 0%, 100%)",
                                                                          "neutral10": "hsl(0, 0%, 90%)",
                                                                          "neutral20": "hsl(0, 0%, 80%)",
                                                                          "neutral30": "hsl(0, 0%, 70%)",
                                                                          "neutral40": "hsl(0, 0%, 60%)",
                                                                          "neutral5": "hsl(0, 0%, 95%)",
                                                                          "neutral50": "hsl(0, 0%, 50%)",
                                                                          "neutral60": "hsl(0, 0%, 40%)",
                                                                          "neutral70": "hsl(0, 0%, 30%)",
                                                                          "neutral80": "hsl(0, 0%, 20%)",
                                                                          "neutral90": "hsl(0, 0%, 10%)",
                                                                          "primary": "#2980B9",
                                                                          "primary25": "rgba(41, 128, 185, 0.1)",
                                                                          "primary50": "#F2F9FC",
                                                                          "primary75": "#009BF9",
                                                                        },
                                                                        "spacing": Object {
                                                                          "baseUnit": 4,
                                                                          "controlHeight": 38,
                                                                          "menuGutter": 8,
                                                                        },
                                                                      }
                                                                    }
                                                                  >
                                                                    <EmotionCssPropInternal
                                                                      __EMOTION_LABEL_PLEASE_DO_NOT_USE__="ValueContainer"
                                                                      __EMOTION_TYPE_PLEASE_DO_NOT_USE__="div"
                                                                      className="select-input__value-container"
                                                                      css={
                                                                        Object {
                                                                          "WebkitOverflowScrolling": "touch",
                                                                          "alignItems": "center",
                                                                          "boxSizing": "border-box",
                                                                          "display": "flex",
                                                                          "flex": 1,
                                                                          "flexWrap": "wrap",
                                                                          "overflow": "hidden",
                                                                          "padding": "2px 8px",
                                                                          "position": "relative",
                                                                        }
                                                                      }
                                                                    >
                                                                      <div
                                                                        className="select-input__value-container css-g1d714-ValueContainer"
                                                                      >
                                                                        <Placeholder
                                                                          clearValue={[Function]}
                                                                          cx={[Function]}
                                                                          getStyles={[Function]}
                                                                          getValue={[Function]}
                                                                          hasValue={false}
                                                                          isDisabled={true}
                                                                          isFocused={false}
                                                                          isMulti={false}
                                                                          isRtl={false}
                                                                          key="placeholder"
                                                                          options={Array []}
                                                                          selectOption={[Function]}
                                                                          selectProps={
                                                                            Object {
                                                                              "aria-live": "polite",
                                                                              "autoFocus": undefined,
                                                                              "backspaceRemovesValue": true,
                                                                              "blurInputOnSelect": false,
                                                                              "captureMenuScroll": false,
                                                                              "className": "select-input",
                                                                              "classNamePrefix": "select-input",
                                                                              "closeMenuOnScroll": false,
                                                                              "closeMenuOnSelect": true,
                                                                              "components": Object {
                                                                                "Input": [Function],
                                                                              },
                                                                              "controlShouldRenderValue": true,
                                                                              "delimiter": ",",
                                                                              "escapeClearsValue": false,
                                                                              "filterOption": [Function],
                                                                              "formatGroupLabel": [Function],
                                                                              "getOptionLabel": [Function],
                                                                              "getOptionValue": [Function],
                                                                              "id": "selectinput-2",
                                                                              "inputValue": "",
                                                                              "isClearable": true,
                                                                              "isDisabled": true,
                                                                              "isLoading": false,
                                                                              "isMulti": false,
                                                                              "isOptionDisabled": [Function],
                                                                              "isRtl": false,
                                                                              "isSearchable": true,
                                                                              "loadingMessage": [Function],
                                                                              "maxMenuHeight": 300,
                                                                              "menuIsOpen": false,
                                                                              "menuPlacement": "bottom",
                                                                              "menuPosition": "absolute",
                                                                              "menuShouldBlockScroll": false,
                                                                              "menuShouldScrollIntoView": true,
                                                                              "minMenuHeight": 140,
                                                                              "name": "entity-category",
                                                                              "noOptionsMessage": [Function],
                                                                              "onBlur": [Function],
                                                                              "onChange": [Function],
                                                                              "onFocus": [Function],
                                                                              "onInputChange": [Function],
                                                                              "onMenuClose": [Function],
                                                                              "onMenuOpen": [Function],
                                                                              "openMenuOnClick": true,
                                                                              "openMenuOnFocus": false,
                                                                              "options": Array [],
                                                                              "pageSize": 5,
                                                                              "placeholder": "Loading...",
                                                                              "promptTextCreator": undefined,
                                                                              "screenReaderStatus": [Function],
                                                                              "styles": Object {
                                                                                "menu": [Function],
                                                                                "multiValue": [Function],
                                                                                "multiValueLabel": [Function],
                                                                                "multiValueRemove": [Function],
                                                                              },
                                                                              "tabIndex": "0",
                                                                              "tabSelectsValue": true,
                                                                              "theme": [Function],
                                                                              "value": null,
                                                                            }
                                                                          }
                                                                          setValue={[Function]}
                                                                          theme={
                                                                            Object {
                                                                              "borderRadius": 4,
                                                                              "colors": Object {
                                                                                "danger": "#D9534F",
                                                                                "dangerLight": "#FFBDAD",
                                                                                "neutral0": "hsl(0, 0%, 100%)",
                                                                                "neutral10": "hsl(0, 0%, 90%)",
                                                                                "neutral20": "hsl(0, 0%, 80%)",
                                                                                "neutral30": "hsl(0, 0%, 70%)",
                                                                                "neutral40": "hsl(0, 0%, 60%)",
                                                                                "neutral5": "hsl(0, 0%, 95%)",
                                                                                "neutral50": "hsl(0, 0%, 50%)",
                                                                                "neutral60": "hsl(0, 0%, 40%)",
                                                                                "neutral70": "hsl(0, 0%, 30%)",
                                                                                "neutral80": "hsl(0, 0%, 20%)",
                                                                                "neutral90": "hsl(0, 0%, 10%)",
                                                                                "primary": "#2980B9",
                                                                                "primary25": "rgba(41, 128, 185, 0.1)",
                                                                                "primary50": "#F2F9FC",
                                                                                "primary75": "#009BF9",
                                                                              },
                                                                              "spacing": Object {
                                                                                "baseUnit": 4,
                                                                                "controlHeight": 38,
                                                                                "menuGutter": 8,
                                                                              },
                                                                            }
                                                                          }
                                                                        >
                                                                          <EmotionCssPropInternal
                                                                            __EMOTION_LABEL_PLEASE_DO_NOT_USE__="Placeholder"
                                                                            __EMOTION_TYPE_PLEASE_DO_NOT_USE__="div"
                                                                            className="select-input__placeholder"
                                                                            css={
                                                                              Object {
                                                                                "boxSizing": "border-box",
                                                                                "color": "hsl(0, 0%, 50%)",
                                                                                "label": "placeholder",
                                                                                "marginLeft": 2,
                                                                                "marginRight": 2,
                                                                                "position": "absolute",
                                                                                "top": "50%",
                                                                                "transform": "translateY(-50%)",
                                                                              }
                                                                            }
                                                                          >
                                                                            <div
                                                                              className="select-input__placeholder css-1wa3eu0-placeholder"
                                                                            >
                                                                              Loading...
                                                                            </div>
                                                                          </EmotionCssPropInternal>
                                                                        </Placeholder>
                                                                        <Component
                                                                          aria-autocomplete="list"
                                                                          autoCapitalize="none"
                                                                          autoComplete="off"
                                                                          autoCorrect="off"
                                                                          clearValue={[Function]}
                                                                          cx={[Function]}
                                                                          getStyles={[Function]}
                                                                          getValue={[Function]}
                                                                          hasValue={false}
                                                                          id="react-select-6-input"
                                                                          innerRef={[Function]}
                                                                          isDisabled={true}
                                                                          isHidden={false}
                                                                          isMulti={false}
                                                                          isRtl={false}
                                                                          onBlur={[Function]}
                                                                          onChange={[Function]}
                                                                          onFocus={[Function]}
                                                                          options={Array []}
                                                                          selectOption={[Function]}
                                                                          selectProps={
                                                                            Object {
                                                                              "aria-live": "polite",
                                                                              "autoFocus": undefined,
                                                                              "backspaceRemovesValue": true,
                                                                              "blurInputOnSelect": false,
                                                                              "captureMenuScroll": false,
                                                                              "className": "select-input",
                                                                              "classNamePrefix": "select-input",
                                                                              "closeMenuOnScroll": false,
                                                                              "closeMenuOnSelect": true,
                                                                              "components": Object {
                                                                                "Input": [Function],
                                                                              },
                                                                              "controlShouldRenderValue": true,
                                                                              "delimiter": ",",
                                                                              "escapeClearsValue": false,
                                                                              "filterOption": [Function],
                                                                              "formatGroupLabel": [Function],
                                                                              "getOptionLabel": [Function],
                                                                              "getOptionValue": [Function],
                                                                              "id": "selectinput-2",
                                                                              "inputValue": "",
                                                                              "isClearable": true,
                                                                              "isDisabled": true,
                                                                              "isLoading": false,
                                                                              "isMulti": false,
                                                                              "isOptionDisabled": [Function],
                                                                              "isRtl": false,
                                                                              "isSearchable": true,
                                                                              "loadingMessage": [Function],
                                                                              "maxMenuHeight": 300,
                                                                              "menuIsOpen": false,
                                                                              "menuPlacement": "bottom",
                                                                              "menuPosition": "absolute",
                                                                              "menuShouldBlockScroll": false,
                                                                              "menuShouldScrollIntoView": true,
                                                                              "minMenuHeight": 140,
                                                                              "name": "entity-category",
                                                                              "noOptionsMessage": [Function],
                                                                              "onBlur": [Function],
                                                                              "onChange": [Function],
                                                                              "onFocus": [Function],
                                                                              "onInputChange": [Function],
                                                                              "onMenuClose": [Function],
                                                                              "onMenuOpen": [Function],
                                                                              "openMenuOnClick": true,
                                                                              "openMenuOnFocus": false,
                                                                              "options": Array [],
                                                                              "pageSize": 5,
                                                                              "placeholder": "Loading...",
                                                                              "promptTextCreator": undefined,
                                                                              "screenReaderStatus": [Function],
                                                                              "styles": Object {
                                                                                "menu": [Function],
                                                                                "multiValue": [Function],
                                                                                "multiValueLabel": [Function],
                                                                                "multiValueRemove": [Function],
                                                                              },
                                                                              "tabIndex": "0",
                                                                              "tabSelectsValue": true,
                                                                              "theme": [Function],
                                                                              "value": null,
                                                                            }
                                                                          }
                                                                          setValue={[Function]}
                                                                          spellCheck="false"
                                                                          tabIndex="0"
                                                                          theme={
                                                                            Object {
                                                                              "borderRadius": 4,
                                                                              "colors": Object {
                                                                                "danger": "#D9534F",
                                                                                "dangerLight": "#FFBDAD",
                                                                                "neutral0": "hsl(0, 0%, 100%)",
                                                                                "neutral10": "hsl(0, 0%, 90%)",
                                                                                "neutral20": "hsl(0, 0%, 80%)",
                                                                                "neutral30": "hsl(0, 0%, 70%)",
                                                                                "neutral40": "hsl(0, 0%, 60%)",
                                                                                "neutral5": "hsl(0, 0%, 95%)",
                                                                                "neutral50": "hsl(0, 0%, 50%)",
                                                                                "neutral60": "hsl(0, 0%, 40%)",
                                                                                "neutral70": "hsl(0, 0%, 30%)",
                                                                                "neutral80": "hsl(0, 0%, 20%)",
                                                                                "neutral90": "hsl(0, 0%, 10%)",
                                                                                "primary": "#2980B9",
                                                                                "primary25": "rgba(41, 128, 185, 0.1)",
                                                                                "primary50": "#F2F9FC",
                                                                                "primary75": "#009BF9",
                                                                              },
                                                                              "spacing": Object {
                                                                                "baseUnit": 4,
                                                                                "controlHeight": 38,
                                                                                "menuGutter": 8,
                                                                              },
                                                                            }
                                                                          }
                                                                          type="text"
                                                                          value=""
                                                                        >
                                                                          <Input
                                                                            aria-autocomplete="list"
                                                                            autoCapitalize="none"
                                                                            autoComplete="off"
                                                                            autoCorrect="off"
                                                                            clearValue={[Function]}
                                                                            cx={[Function]}
                                                                            getStyles={[Function]}
                                                                            getValue={[Function]}
                                                                            hasValue={false}
                                                                            id="react-select-6-input"
                                                                            innerRef={[Function]}
                                                                            isDisabled={true}
                                                                            isHidden={false}
                                                                            isMulti={false}
                                                                            isRtl={false}
                                                                            onBlur={[Function]}
                                                                            onChange={[Function]}
                                                                            onFocus={[Function]}
                                                                            options={Array []}
                                                                            required={false}
                                                                            selectOption={[Function]}
                                                                            selectProps={
                                                                              Object {
                                                                                "aria-live": "polite",
                                                                                "autoFocus": undefined,
                                                                                "backspaceRemovesValue": true,
                                                                                "blurInputOnSelect": false,
                                                                                "captureMenuScroll": false,
                                                                                "className": "select-input",
                                                                                "classNamePrefix": "select-input",
                                                                                "closeMenuOnScroll": false,
                                                                                "closeMenuOnSelect": true,
                                                                                "components": Object {
                                                                                  "Input": [Function],
                                                                                },
                                                                                "controlShouldRenderValue": true,
                                                                                "delimiter": ",",
                                                                                "escapeClearsValue": false,
                                                                                "filterOption": [Function],
                                                                                "formatGroupLabel": [Function],
                                                                                "getOptionLabel": [Function],
                                                                                "getOptionValue": [Function],
                                                                                "id": "selectinput-2",
                                                                                "inputValue": "",
                                                                                "isClearable": true,
                                                                                "isDisabled": true,
                                                                                "isLoading": false,
                                                                                "isMulti": false,
                                                                                "isOptionDisabled": [Function],
                                                                                "isRtl": false,
                                                                                "isSearchable": true,
                                                                                "loadingMessage": [Function],
                                                                                "maxMenuHeight": 300,
                                                                                "menuIsOpen": false,
                                                                                "menuPlacement": "bottom",
                                                                                "menuPosition": "absolute",
                                                                                "menuShouldBlockScroll": false,
                                                                                "menuShouldScrollIntoView": true,
                                                                                "minMenuHeight": 140,
                                                                                "name": "entity-category",
                                                                                "noOptionsMessage": [Function],
                                                                                "onBlur": [Function],
                                                                                "onChange": [Function],
                                                                                "onFocus": [Function],
                                                                                "onInputChange": [Function],
                                                                                "onMenuClose": [Function],
                                                                                "onMenuOpen": [Function],
                                                                                "openMenuOnClick": true,
                                                                                "openMenuOnFocus": false,
                                                                                "options": Array [],
                                                                                "pageSize": 5,
                                                                                "placeholder": "Loading...",
                                                                                "promptTextCreator": undefined,
                                                                                "screenReaderStatus": [Function],
                                                                                "styles": Object {
                                                                                  "menu": [Function],
                                                                                  "multiValue": [Function],
                                                                                  "multiValueLabel": [Function],
                                                                                  "multiValueRemove": [Function],
                                                                                },
                                                                                "tabIndex": "0",
                                                                                "tabSelectsValue": true,
                                                                                "theme": [Function],
                                                                                "value": null,
                                                                              }
                                                                            }
                                                                            setValue={[Function]}
                                                                            spellCheck="false"
                                                                            tabIndex="0"
                                                                            theme={
                                                                              Object {
                                                                                "borderRadius": 4,
                                                                                "colors": Object {
                                                                                  "danger": "#D9534F",
                                                                                  "dangerLight": "#FFBDAD",
                                                                                  "neutral0": "hsl(0, 0%, 100%)",
                                                                                  "neutral10": "hsl(0, 0%, 90%)",
                                                                                  "neutral20": "hsl(0, 0%, 80%)",
                                                                                  "neutral30": "hsl(0, 0%, 70%)",
                                                                                  "neutral40": "hsl(0, 0%, 60%)",
                                                                                  "neutral5": "hsl(0, 0%, 95%)",
                                                                                  "neutral50": "hsl(0, 0%, 50%)",
                                                                                  "neutral60": "hsl(0, 0%, 40%)",
                                                                                  "neutral70": "hsl(0, 0%, 30%)",
                                                                                  "neutral80": "hsl(0, 0%, 20%)",
                                                                                  "neutral90": "hsl(0, 0%, 10%)",
                                                                                  "primary": "#2980B9",
                                                                                  "primary25": "rgba(41, 128, 185, 0.1)",
                                                                                  "primary50": "#F2F9FC",
                                                                                  "primary75": "#009BF9",
                                                                                },
                                                                                "spacing": Object {
                                                                                  "baseUnit": 4,
                                                                                  "controlHeight": 38,
                                                                                  "menuGutter": 8,
                                                                                },
                                                                              }
                                                                            }
                                                                            type="text"
                                                                            value=""
                                                                          >
                                                                            <EmotionCssPropInternal
                                                                              __EMOTION_LABEL_PLEASE_DO_NOT_USE__="Input"
                                                                              __EMOTION_TYPE_PLEASE_DO_NOT_USE__="div"
                                                                              css={
                                                                                Object {
                                                                                  "boxSizing": "border-box",
                                                                                  "color": "hsl(0, 0%, 20%)",
                                                                                  "margin": 2,
                                                                                  "paddingBottom": 2,
                                                                                  "paddingTop": 2,
                                                                                  "visibility": "hidden",
                                                                                }
                                                                              }
                                                                            >
                                                                              <div
                                                                                className="css-1bwsx9e-Input"
                                                                              >
                                                                                <AutosizeInput
                                                                                  aria-autocomplete="list"
                                                                                  autoCapitalize="none"
                                                                                  autoComplete="off"
                                                                                  autoCorrect="off"
                                                                                  className="select-input__input"
                                                                                  disabled={true}
                                                                                  id="react-select-6-input"
                                                                                  injectStyles={true}
                                                                                  inputRef={[Function]}
                                                                                  inputStyle={
                                                                                    Object {
                                                                                      "background": 0,
                                                                                      "border": 0,
                                                                                      "color": "inherit",
                                                                                      "fontSize": "inherit",
                                                                                      "label": "input",
                                                                                      "opacity": 1,
                                                                                      "outline": 0,
                                                                                      "padding": 0,
                                                                                    }
                                                                                  }
                                                                                  minWidth={1}
                                                                                  onBlur={[Function]}
                                                                                  onChange={[Function]}
                                                                                  onFocus={[Function]}
                                                                                  required={false}
                                                                                  spellCheck="false"
                                                                                  tabIndex="0"
                                                                                  type="text"
                                                                                  value=""
                                                                                >
                                                                                  <div
                                                                                    className="select-input__input"
                                                                                    style={
                                                                                      Object {
                                                                                        "display": "inline-block",
                                                                                      }
                                                                                    }
                                                                                  >
                                                                                    <input
                                                                                      aria-autocomplete="list"
                                                                                      autoCapitalize="none"
                                                                                      autoComplete="off"
                                                                                      autoCorrect="off"
                                                                                      disabled={true}
                                                                                      id="react-select-6-input"
                                                                                      onBlur={[Function]}
                                                                                      onChange={[Function]}
                                                                                      onFocus={[Function]}
                                                                                      required={false}
                                                                                      spellCheck="false"
                                                                                      style={
                                                                                        Object {
                                                                                          "background": 0,
                                                                                          "border": 0,
                                                                                          "boxSizing": "content-box",
                                                                                          "color": "inherit",
                                                                                          "fontSize": "inherit",
                                                                                          "label": "input",
                                                                                          "opacity": 1,
                                                                                          "outline": 0,
                                                                                          "padding": 0,
                                                                                          "width": "2px",
                                                                                        }
                                                                                      }
                                                                                      tabIndex="0"
                                                                                      type="text"
                                                                                      value=""
                                                                                    />
                                                                                    <div
                                                                                      style={
                                                                                        Object {
                                                                                          "height": 0,
                                                                                          "left": 0,
                                                                                          "overflow": "scroll",
                                                                                          "position": "absolute",
                                                                                          "top": 0,
                                                                                          "visibility": "hidden",
                                                                                          "whiteSpace": "pre",
                                                                                        }
                                                                                      }
                                                                                    />
                                                                                  </div>
                                                                                </AutosizeInput>
                                                                              </div>
                                                                            </EmotionCssPropInternal>
                                                                          </Input>
                                                                        </Component>
                                                                      </div>
                                                                    </EmotionCssPropInternal>
                                                                  </ValueContainer>
                                                                  <IndicatorsContainer
                                                                    clearValue={[Function]}
                                                                    cx={[Function]}
                                                                    getStyles={[Function]}
                                                                    getValue={[Function]}
                                                                    hasValue={false}
                                                                    isDisabled={true}
                                                                    isMulti={false}
                                                                    isRtl={false}
                                                                    options={Array []}
                                                                    selectOption={[Function]}
                                                                    selectProps={
                                                                      Object {
                                                                        "aria-live": "polite",
                                                                        "autoFocus": undefined,
                                                                        "backspaceRemovesValue": true,
                                                                        "blurInputOnSelect": false,
                                                                        "captureMenuScroll": false,
                                                                        "className": "select-input",
                                                                        "classNamePrefix": "select-input",
                                                                        "closeMenuOnScroll": false,
                                                                        "closeMenuOnSelect": true,
                                                                        "components": Object {
                                                                          "Input": [Function],
                                                                        },
                                                                        "controlShouldRenderValue": true,
                                                                        "delimiter": ",",
                                                                        "escapeClearsValue": false,
                                                                        "filterOption": [Function],
                                                                        "formatGroupLabel": [Function],
                                                                        "getOptionLabel": [Function],
                                                                        "getOptionValue": [Function],
                                                                        "id": "selectinput-2",
                                                                        "inputValue": "",
                                                                        "isClearable": true,
                                                                        "isDisabled": true,
                                                                        "isLoading": false,
                                                                        "isMulti": false,
                                                                        "isOptionDisabled": [Function],
                                                                        "isRtl": false,
                                                                        "isSearchable": true,
                                                                        "loadingMessage": [Function],
                                                                        "maxMenuHeight": 300,
                                                                        "menuIsOpen": false,
                                                                        "menuPlacement": "bottom",
                                                                        "menuPosition": "absolute",
                                                                        "menuShouldBlockScroll": false,
                                                                        "menuShouldScrollIntoView": true,
                                                                        "minMenuHeight": 140,
                                                                        "name": "entity-category",
                                                                        "noOptionsMessage": [Function],
                                                                        "onBlur": [Function],
                                                                        "onChange": [Function],
                                                                        "onFocus": [Function],
                                                                        "onInputChange": [Function],
                                                                        "onMenuClose": [Function],
                                                                        "onMenuOpen": [Function],
                                                                        "openMenuOnClick": true,
                                                                        "openMenuOnFocus": false,
                                                                        "options": Array [],
                                                                        "pageSize": 5,
                                                                        "placeholder": "Loading...",
                                                                        "promptTextCreator": undefined,
                                                                        "screenReaderStatus": [Function],
                                                                        "styles": Object {
                                                                          "menu": [Function],
                                                                          "multiValue": [Function],
                                                                          "multiValueLabel": [Function],
                                                                          "multiValueRemove": [Function],
                                                                        },
                                                                        "tabIndex": "0",
                                                                        "tabSelectsValue": true,
                                                                        "theme": [Function],
                                                                        "value": null,
                                                                      }
                                                                    }
                                                                    setValue={[Function]}
                                                                    theme={
                                                                      Object {
                                                                        "borderRadius": 4,
                                                                        "colors": Object {
                                                                          "danger": "#D9534F",
                                                                          "dangerLight": "#FFBDAD",
                                                                          "neutral0": "hsl(0, 0%, 100%)",
                                                                          "neutral10": "hsl(0, 0%, 90%)",
                                                                          "neutral20": "hsl(0, 0%, 80%)",
                                                                          "neutral30": "hsl(0, 0%, 70%)",
                                                                          "neutral40": "hsl(0, 0%, 60%)",
                                                                          "neutral5": "hsl(0, 0%, 95%)",
                                                                          "neutral50": "hsl(0, 0%, 50%)",
                                                                          "neutral60": "hsl(0, 0%, 40%)",
                                                                          "neutral70": "hsl(0, 0%, 30%)",
                                                                          "neutral80": "hsl(0, 0%, 20%)",
                                                                          "neutral90": "hsl(0, 0%, 10%)",
                                                                          "primary": "#2980B9",
                                                                          "primary25": "rgba(41, 128, 185, 0.1)",
                                                                          "primary50": "#F2F9FC",
                                                                          "primary75": "#009BF9",
                                                                        },
                                                                        "spacing": Object {
                                                                          "baseUnit": 4,
                                                                          "controlHeight": 38,
                                                                          "menuGutter": 8,
                                                                        },
                                                                      }
                                                                    }
                                                                  >
                                                                    <EmotionCssPropInternal
                                                                      __EMOTION_LABEL_PLEASE_DO_NOT_USE__="IndicatorsContainer"
                                                                      __EMOTION_TYPE_PLEASE_DO_NOT_USE__="div"
                                                                      className="select-input__indicators"
                                                                      css={
                                                                        Object {
                                                                          "alignItems": "center",
                                                                          "alignSelf": "stretch",
                                                                          "boxSizing": "border-box",
                                                                          "display": "flex",
                                                                          "flexShrink": 0,
                                                                        }
                                                                      }
                                                                    >
                                                                      <div
                                                                        className="select-input__indicators css-1hb7zxy-IndicatorsContainer"
                                                                      >
                                                                        <IndicatorSeparator
                                                                          clearValue={[Function]}
                                                                          cx={[Function]}
                                                                          getStyles={[Function]}
                                                                          getValue={[Function]}
                                                                          hasValue={false}
                                                                          isDisabled={true}
                                                                          isFocused={false}
                                                                          isMulti={false}
                                                                          isRtl={false}
                                                                          options={Array []}
                                                                          selectOption={[Function]}
                                                                          selectProps={
                                                                            Object {
                                                                              "aria-live": "polite",
                                                                              "autoFocus": undefined,
                                                                              "backspaceRemovesValue": true,
                                                                              "blurInputOnSelect": false,
                                                                              "captureMenuScroll": false,
                                                                              "className": "select-input",
                                                                              "classNamePrefix": "select-input",
                                                                              "closeMenuOnScroll": false,
                                                                              "closeMenuOnSelect": true,
                                                                              "components": Object {
                                                                                "Input": [Function],
                                                                              },
                                                                              "controlShouldRenderValue": true,
                                                                              "delimiter": ",",
                                                                              "escapeClearsValue": false,
                                                                              "filterOption": [Function],
                                                                              "formatGroupLabel": [Function],
                                                                              "getOptionLabel": [Function],
                                                                              "getOptionValue": [Function],
                                                                              "id": "selectinput-2",
                                                                              "inputValue": "",
                                                                              "isClearable": true,
                                                                              "isDisabled": true,
                                                                              "isLoading": false,
                                                                              "isMulti": false,
                                                                              "isOptionDisabled": [Function],
                                                                              "isRtl": false,
                                                                              "isSearchable": true,
                                                                              "loadingMessage": [Function],
                                                                              "maxMenuHeight": 300,
                                                                              "menuIsOpen": false,
                                                                              "menuPlacement": "bottom",
                                                                              "menuPosition": "absolute",
                                                                              "menuShouldBlockScroll": false,
                                                                              "menuShouldScrollIntoView": true,
                                                                              "minMenuHeight": 140,
                                                                              "name": "entity-category",
                                                                              "noOptionsMessage": [Function],
                                                                              "onBlur": [Function],
                                                                              "onChange": [Function],
                                                                              "onFocus": [Function],
                                                                              "onInputChange": [Function],
                                                                              "onMenuClose": [Function],
                                                                              "onMenuOpen": [Function],
                                                                              "openMenuOnClick": true,
                                                                              "openMenuOnFocus": false,
                                                                              "options": Array [],
                                                                              "pageSize": 5,
                                                                              "placeholder": "Loading...",
                                                                              "promptTextCreator": undefined,
                                                                              "screenReaderStatus": [Function],
                                                                              "styles": Object {
                                                                                "menu": [Function],
                                                                                "multiValue": [Function],
                                                                                "multiValueLabel": [Function],
                                                                                "multiValueRemove": [Function],
                                                                              },
                                                                              "tabIndex": "0",
                                                                              "tabSelectsValue": true,
                                                                              "theme": [Function],
                                                                              "value": null,
                                                                            }
                                                                          }
                                                                          setValue={[Function]}
                                                                          theme={
                                                                            Object {
                                                                              "borderRadius": 4,
                                                                              "colors": Object {
                                                                                "danger": "#D9534F",
                                                                                "dangerLight": "#FFBDAD",
                                                                                "neutral0": "hsl(0, 0%, 100%)",
                                                                                "neutral10": "hsl(0, 0%, 90%)",
                                                                                "neutral20": "hsl(0, 0%, 80%)",
                                                                                "neutral30": "hsl(0, 0%, 70%)",
                                                                                "neutral40": "hsl(0, 0%, 60%)",
                                                                                "neutral5": "hsl(0, 0%, 95%)",
                                                                                "neutral50": "hsl(0, 0%, 50%)",
                                                                                "neutral60": "hsl(0, 0%, 40%)",
                                                                                "neutral70": "hsl(0, 0%, 30%)",
                                                                                "neutral80": "hsl(0, 0%, 20%)",
                                                                                "neutral90": "hsl(0, 0%, 10%)",
                                                                                "primary": "#2980B9",
                                                                                "primary25": "rgba(41, 128, 185, 0.1)",
                                                                                "primary50": "#F2F9FC",
                                                                                "primary75": "#009BF9",
                                                                              },
                                                                              "spacing": Object {
                                                                                "baseUnit": 4,
                                                                                "controlHeight": 38,
                                                                                "menuGutter": 8,
                                                                              },
                                                                            }
                                                                          }
                                                                        >
                                                                          <EmotionCssPropInternal
                                                                            __EMOTION_LABEL_PLEASE_DO_NOT_USE__="IndicatorSeparator"
                                                                            __EMOTION_TYPE_PLEASE_DO_NOT_USE__="span"
                                                                            className="select-input__indicator-separator"
                                                                            css={
                                                                              Object {
                                                                                "alignSelf": "stretch",
                                                                                "backgroundColor": "hsl(0, 0%, 90%)",
                                                                                "boxSizing": "border-box",
                                                                                "label": "indicatorSeparator",
                                                                                "marginBottom": 8,
                                                                                "marginTop": 8,
                                                                                "width": 1,
                                                                              }
                                                                            }
                                                                          >
                                                                            <span
                                                                              className="select-input__indicator-separator css-109onse-indicatorSeparator"
                                                                            />
                                                                          </EmotionCssPropInternal>
                                                                        </IndicatorSeparator>
                                                                        <DropdownIndicator
                                                                          clearValue={[Function]}
                                                                          cx={[Function]}
                                                                          getStyles={[Function]}
                                                                          getValue={[Function]}
                                                                          hasValue={false}
                                                                          innerProps={
                                                                            Object {
                                                                              "aria-hidden": "true",
                                                                              "onMouseDown": [Function],
                                                                              "onTouchEnd": [Function],
                                                                            }
                                                                          }
                                                                          isDisabled={true}
                                                                          isFocused={false}
                                                                          isMulti={false}
                                                                          isRtl={false}
                                                                          options={Array []}
                                                                          selectOption={[Function]}
                                                                          selectProps={
                                                                            Object {
                                                                              "aria-live": "polite",
                                                                              "autoFocus": undefined,
                                                                              "backspaceRemovesValue": true,
                                                                              "blurInputOnSelect": false,
                                                                              "captureMenuScroll": false,
                                                                              "className": "select-input",
                                                                              "classNamePrefix": "select-input",
                                                                              "closeMenuOnScroll": false,
                                                                              "closeMenuOnSelect": true,
                                                                              "components": Object {
                                                                                "Input": [Function],
                                                                              },
                                                                              "controlShouldRenderValue": true,
                                                                              "delimiter": ",",
                                                                              "escapeClearsValue": false,
                                                                              "filterOption": [Function],
                                                                              "formatGroupLabel": [Function],
                                                                              "getOptionLabel": [Function],
                                                                              "getOptionValue": [Function],
                                                                              "id": "selectinput-2",
                                                                              "inputValue": "",
                                                                              "isClearable": true,
                                                                              "isDisabled": true,
                                                                              "isLoading": false,
                                                                              "isMulti": false,
                                                                              "isOptionDisabled": [Function],
                                                                              "isRtl": false,
                                                                              "isSearchable": true,
                                                                              "loadingMessage": [Function],
                                                                              "maxMenuHeight": 300,
                                                                              "menuIsOpen": false,
                                                                              "menuPlacement": "bottom",
                                                                              "menuPosition": "absolute",
                                                                              "menuShouldBlockScroll": false,
                                                                              "menuShouldScrollIntoView": true,
                                                                              "minMenuHeight": 140,
                                                                              "name": "entity-category",
                                                                              "noOptionsMessage": [Function],
                                                                              "onBlur": [Function],
                                                                              "onChange": [Function],
                                                                              "onFocus": [Function],
                                                                              "onInputChange": [Function],
                                                                              "onMenuClose": [Function],
                                                                              "onMenuOpen": [Function],
                                                                              "openMenuOnClick": true,
                                                                              "openMenuOnFocus": false,
                                                                              "options": Array [],
                                                                              "pageSize": 5,
                                                                              "placeholder": "Loading...",
                                                                              "promptTextCreator": undefined,
                                                                              "screenReaderStatus": [Function],
                                                                              "styles": Object {
                                                                                "menu": [Function],
                                                                                "multiValue": [Function],
                                                                                "multiValueLabel": [Function],
                                                                                "multiValueRemove": [Function],
                                                                              },
                                                                              "tabIndex": "0",
                                                                              "tabSelectsValue": true,
                                                                              "theme": [Function],
                                                                              "value": null,
                                                                            }
                                                                          }
                                                                          setValue={[Function]}
                                                                          theme={
                                                                            Object {
                                                                              "borderRadius": 4,
                                                                              "colors": Object {
                                                                                "danger": "#D9534F",
                                                                                "dangerLight": "#FFBDAD",
                                                                                "neutral0": "hsl(0, 0%, 100%)",
                                                                                "neutral10": "hsl(0, 0%, 90%)",
                                                                                "neutral20": "hsl(0, 0%, 80%)",
                                                                                "neutral30": "hsl(0, 0%, 70%)",
                                                                                "neutral40": "hsl(0, 0%, 60%)",
                                                                                "neutral5": "hsl(0, 0%, 95%)",
                                                                                "neutral50": "hsl(0, 0%, 50%)",
                                                                                "neutral60": "hsl(0, 0%, 40%)",
                                                                                "neutral70": "hsl(0, 0%, 30%)",
                                                                                "neutral80": "hsl(0, 0%, 20%)",
                                                                                "neutral90": "hsl(0, 0%, 10%)",
                                                                                "primary": "#2980B9",
                                                                                "primary25": "rgba(41, 128, 185, 0.1)",
                                                                                "primary50": "#F2F9FC",
                                                                                "primary75": "#009BF9",
                                                                              },
                                                                              "spacing": Object {
                                                                                "baseUnit": 4,
                                                                                "controlHeight": 38,
                                                                                "menuGutter": 8,
                                                                              },
                                                                            }
                                                                          }
                                                                        >
                                                                          <EmotionCssPropInternal
                                                                            __EMOTION_LABEL_PLEASE_DO_NOT_USE__="DropdownIndicator"
                                                                            __EMOTION_TYPE_PLEASE_DO_NOT_USE__="div"
                                                                            aria-hidden="true"
                                                                            className="select-input__indicator select-input__dropdown-indicator"
                                                                            css={
                                                                              Object {
                                                                                ":hover": Object {
                                                                                  "color": "hsl(0, 0%, 60%)",
                                                                                },
                                                                                "boxSizing": "border-box",
                                                                                "color": "hsl(0, 0%, 80%)",
                                                                                "display": "flex",
                                                                                "label": "indicatorContainer",
                                                                                "padding": 8,
                                                                                "transition": "color 150ms",
                                                                              }
                                                                            }
                                                                            onMouseDown={[Function]}
                                                                            onTouchEnd={[Function]}
                                                                          >
                                                                            <div
                                                                              aria-hidden="true"
                                                                              className="select-input__indicator select-input__dropdown-indicator css-tlfecz-indicatorContainer"
                                                                              onMouseDown={[Function]}
                                                                              onTouchEnd={[Function]}
                                                                            >
                                                                              <DownChevron>
                                                                                <Svg
                                                                                  size={20}
                                                                                >
                                                                                  <EmotionCssPropInternal
                                                                                    __EMOTION_LABEL_PLEASE_DO_NOT_USE__="Svg"
                                                                                    __EMOTION_TYPE_PLEASE_DO_NOT_USE__="svg"
                                                                                    aria-hidden="true"
                                                                                    css={
                                                                                      Object {
                                                                                        "map": "/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */",
                                                                                        "name": "tj5bde-Svg",
                                                                                        "styles": "display:inline-block;fill:currentColor;line-height:1;stroke:currentColor;stroke-width:0;label:Svg;",
                                                                                        "toString": [Function],
                                                                                      }
                                                                                    }
                                                                                    focusable="false"
                                                                                    height={20}
                                                                                    viewBox="0 0 20 20"
                                                                                    width={20}
                                                                                  >
                                                                                    <svg
                                                                                      aria-hidden="true"
                                                                                      className="css-tj5bde-Svg"
                                                                                      focusable="false"
                                                                                      height={20}
                                                                                      viewBox="0 0 20 20"
                                                                                      width={20}
                                                                                    >
                                                                                      <path
                                                                                        d="M4.516 7.548c0.436-0.446 1.043-0.481 1.576 0l3.908 3.747 3.908-3.747c0.533-0.481 1.141-0.446 1.574 0 0.436 0.445 0.408 1.197 0 1.615-0.406 0.418-4.695 4.502-4.695 4.502-0.217 0.223-0.502 0.335-0.787 0.335s-0.57-0.112-0.789-0.335c0 0-4.287-4.084-4.695-4.502s-0.436-1.17 0-1.615z"
                                                                                      />
                                                                                    </svg>
                                                                                  </EmotionCssPropInternal>
                                                                                </Svg>
                                                                              </DownChevron>
                                                                            </div>
                                                                          </EmotionCssPropInternal>
                                                                        </DropdownIndicator>
                                                                      </div>
                                                                    </EmotionCssPropInternal>
                                                                  </IndicatorsContainer>
                                                                </div>
                                                              </EmotionCssPropInternal>
                                                            </Control>
                                                          </div>
                                                        </EmotionCssPropInternal>
                                                      </SelectContainer>
                                                    </Select>
                                                  </StateManager>
                                                </div>
                                              </div>
                                            </SelectInputImpl>
                                          </SelectInput>
                                        </QuerySelect>
                                      </div>
                                    </Col>
                                  </div>
                                </Row>
                                <Row
                                  bsClass="row"
                                  componentClass="div"
                                >
                                  <div
                                    className="row"
                                  >
                                    <Col
                                      bsClass="col"
                                      componentClass="div"
                                      xs={2}
                                    >
                                      <div
                                        className="col-xs-2"
                                      >
                                        <DomainFieldLabel
                                          helpTipBody="The default Sample Type where new samples will be created for this data class."
                                          label="Sample Type"
                                        >
                                          Sample 
                                          <span
                                            className="domain-no-wrap"
                                          >
                                            Type
                                            <Component
                                              customStyle={Object {}}
                                              id="tooltip"
                                              size="1x"
                                              title="Sample Type"
                                            >
                                              <span
                                                className="label-help-target"
                                                onMouseOut={[Function]}
                                                onMouseOver={[Function]}
                                              >
                                                <FontAwesomeIcon
                                                  border={false}
                                                  className="label-help-icon"
                                                  fixedWidth={false}
                                                  flip={null}
                                                  icon={
                                                    Object {
                                                      "icon": Array [
                                                        512,
                                                        512,
                                                        Array [],
                                                        "f059",
                                                        "M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z",
                                                      ],
                                                      "iconName": "question-circle",
                                                      "prefix": "fas",
                                                    }
                                                  }
                                                  inverse={false}
                                                  listItem={false}
                                                  mask={null}
                                                  pull={null}
                                                  pulse={false}
                                                  rotation={null}
                                                  size="1x"
                                                  spin={false}
                                                  style={Object {}}
                                                  swapOpacity={false}
                                                  symbol={false}
                                                  title=""
                                                  transform={null}
                                                >
                                                  <svg
                                                    aria-hidden="true"
                                                    className="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                                                    data-icon="question-circle"
                                                    data-prefix="fas"
                                                    focusable="false"
                                                    role="img"
                                                    style={Object {}}
                                                    viewBox="0 0 512 512"
                                                    xmlns="http://www.w3.org/2000/svg"
                                                  >
                                                    <path
                                                      d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                      fill="currentColor"
                                                      style={Object {}}
                                                    />
                                                  </svg>
                                                </FontAwesomeIcon>
                                                <Overlay
                                                  animation={[Function]}
                                                  placement="right"
                                                  rootClose={false}
                                                  show={false}
                                                >
                                                  <Overlay
                                                    placement="right"
                                                    rootClose={false}
                                                    show={false}
                                                    transition={[Function]}
                                                  />
                                                </Overlay>
                                              </span>
                                            </Component>
                                          </span>
                                        </DomainFieldLabel>
                                      </div>
                                    </Col>
                                    <Col
                                      bsClass="col"
                                      componentClass="div"
                                      xs={10}
                                    >
                                      <div
                                        className="col-xs-10"
                                      >
                                        <QuerySelect
                                          componentId="entity-sampleSet"
                                          delimiter=","
                                          filterOption={[Function]}
                                          fireQSChangeOnInit={false}
                                          loadOnFocus={false}
                                          name="entity-sampleSet"
                                          onQSChange={[Function]}
                                          preLoad={true}
                                          previewOptions={false}
                                          schemaQuery={
                                            Immutable.Record {
                                              "schemaName": "exp",
                                              "queryName": "SampleSets",
                                              "viewName": undefined,
                                            }
                                          }
                                          showLabel={false}
                                          showLoading={true}
                                          value={1085}
                                        >
                                          <SelectInput
                                            disabled={true}
                                            formsy={false}
                                            name="entity-sampleSet"
                                            placeholder="Loading..."
                                            type="text"
                                          >
                                            <SelectInputImpl
                                              allowCreate={false}
                                              allowDisable={false}
                                              autoValue={true}
                                              clearCacheOnChange={true}
                                              clearable={true}
                                              containerClass="form-group row"
                                              defaultOptions={true}
                                              delimiter=","
                                              disabled={true}
                                              formsy={false}
                                              initiallyDisabled={false}
                                              inputClass="col-sm-9 col-xs-12"
                                              labelClass="control-label col-sm-3 text-left col-xs-12"
                                              name="entity-sampleSet"
                                              placeholder="Loading..."
                                              saveOnBlur={false}
                                              type="text"
                                              valueKey="value"
                                            >
                                              <div
                                                className="select-input-container form-group row"
                                              >
                                                <div
                                                  className="col-sm-9 col-xs-12"
                                                >
                                                  <StateManager
                                                    blurInputOnSelect={false}
                                                    className="select-input"
                                                    classNamePrefix="select-input"
                                                    components={
                                                      Object {
                                                        "Input": [Function],
                                                      }
                                                    }
                                                    defaultInputValue=""
                                                    defaultMenuIsOpen={false}
                                                    defaultValue={null}
                                                    delimiter=","
                                                    id="selectinput-3"
                                                    isClearable={true}
                                                    isDisabled={true}
                                                    name="entity-sampleSet"
                                                    noOptionsMessage={[Function]}
                                                    onBlur={[Function]}
                                                    onChange={[Function]}
                                                    onFocus={[Function]}
                                                    placeholder="Loading..."
                                                    styles={
                                                      Object {
                                                        "menu": [Function],
                                                        "multiValue": [Function],
                                                        "multiValueLabel": [Function],
                                                        "multiValueRemove": [Function],
                                                      }
                                                    }
                                                    theme={[Function]}
                                                    value={null}
                                                  >
                                                    <Select
                                                      aria-live="polite"
                                                      backspaceRemovesValue={true}
                                                      blurInputOnSelect={false}
                                                      captureMenuScroll={false}
                                                      className="select-input"
                                                      classNamePrefix="select-input"
                                                      closeMenuOnScroll={false}
                                                      closeMenuOnSelect={true}
                                                      components={
                                                        Object {
                                                          "Input": [Function],
                                                        }
                                                      }
                                                      controlShouldRenderValue={true}
                                                      delimiter=","
                                                      escapeClearsValue={false}
                                                      filterOption={[Function]}
                                                      formatGroupLabel={[Function]}
                                                      getOptionLabel={[Function]}
                                                      getOptionValue={[Function]}
                                                      id="selectinput-3"
                                                      inputValue=""
                                                      isClearable={true}
                                                      isDisabled={true}
                                                      isLoading={false}
                                                      isMulti={false}
                                                      isOptionDisabled={[Function]}
                                                      isRtl={false}
                                                      isSearchable={true}
                                                      loadingMessage={[Function]}
                                                      maxMenuHeight={300}
                                                      menuIsOpen={false}
                                                      menuPlacement="bottom"
                                                      menuPosition="absolute"
                                                      menuShouldBlockScroll={false}
                                                      menuShouldScrollIntoView={true}
                                                      minMenuHeight={140}
                                                      name="entity-sampleSet"
                                                      noOptionsMessage={[Function]}
                                                      onBlur={[Function]}
                                                      onChange={[Function]}
                                                      onFocus={[Function]}
                                                      onInputChange={[Function]}
                                                      onMenuClose={[Function]}
                                                      onMenuOpen={[Function]}
                                                      openMenuOnClick={true}
                                                      openMenuOnFocus={false}
                                                      options={Array []}
                                                      pageSize={5}
                                                      placeholder="Loading..."
                                                      screenReaderStatus={[Function]}
                                                      styles={
                                                        Object {
                                                          "menu": [Function],
                                                          "multiValue": [Function],
                                                          "multiValueLabel": [Function],
                                                          "multiValueRemove": [Function],
                                                        }
                                                      }
                                                      tabIndex="0"
                                                      tabSelectsValue={true}
                                                      theme={[Function]}
                                                      value={null}
                                                    >
                                                      <SelectContainer
                                                        className="select-input"
                                                        clearValue={[Function]}
                                                        cx={[Function]}
                                                        getStyles={[Function]}
                                                        getValue={[Function]}
                                                        hasValue={false}
                                                        innerProps={
                                                          Object {
                                                            "id": "selectinput-3",
                                                            "onKeyDown": [Function],
                                                          }
                                                        }
                                                        isDisabled={true}
                                                        isFocused={false}
                                                        isMulti={false}
                                                        isRtl={false}
                                                        options={Array []}
                                                        selectOption={[Function]}
                                                        selectProps={
                                                          Object {
                                                            "aria-live": "polite",
                                                            "autoFocus": undefined,
                                                            "backspaceRemovesValue": true,
                                                            "blurInputOnSelect": false,
                                                            "captureMenuScroll": false,
                                                            "className": "select-input",
                                                            "classNamePrefix": "select-input",
                                                            "closeMenuOnScroll": false,
                                                            "closeMenuOnSelect": true,
                                                            "components": Object {
                                                              "Input": [Function],
                                                            },
                                                            "controlShouldRenderValue": true,
                                                            "delimiter": ",",
                                                            "escapeClearsValue": false,
                                                            "filterOption": [Function],
                                                            "formatGroupLabel": [Function],
                                                            "getOptionLabel": [Function],
                                                            "getOptionValue": [Function],
                                                            "id": "selectinput-3",
                                                            "inputValue": "",
                                                            "isClearable": true,
                                                            "isDisabled": true,
                                                            "isLoading": false,
                                                            "isMulti": false,
                                                            "isOptionDisabled": [Function],
                                                            "isRtl": false,
                                                            "isSearchable": true,
                                                            "loadingMessage": [Function],
                                                            "maxMenuHeight": 300,
                                                            "menuIsOpen": false,
                                                            "menuPlacement": "bottom",
                                                            "menuPosition": "absolute",
                                                            "menuShouldBlockScroll": false,
                                                            "menuShouldScrollIntoView": true,
                                                            "minMenuHeight": 140,
                                                            "name": "entity-sampleSet",
                                                            "noOptionsMessage": [Function],
                                                            "onBlur": [Function],
                                                            "onChange": [Function],
                                                            "onFocus": [Function],
                                                            "onInputChange": [Function],
                                                            "onMenuClose": [Function],
                                                            "onMenuOpen": [Function],
                                                            "openMenuOnClick": true,
                                                            "openMenuOnFocus": false,
                                                            "options": Array [],
                                                            "pageSize": 5,
                                                            "placeholder": "Loading...",
                                                            "promptTextCreator": undefined,
                                                            "screenReaderStatus": [Function],
                                                            "styles": Object {
                                                              "menu": [Function],
                                                              "multiValue": [Function],
                                                              "multiValueLabel": [Function],
                                                              "multiValueRemove": [Function],
                                                            },
                                                            "tabIndex": "0",
                                                            "tabSelectsValue": true,
                                                            "theme": [Function],
                                                            "value": null,
                                                          }
                                                        }
                                                        setValue={[Function]}
                                                        theme={
                                                          Object {
                                                            "borderRadius": 4,
                                                            "colors": Object {
                                                              "danger": "#D9534F",
                                                              "dangerLight": "#FFBDAD",
                                                              "neutral0": "hsl(0, 0%, 100%)",
                                                              "neutral10": "hsl(0, 0%, 90%)",
                                                              "neutral20": "hsl(0, 0%, 80%)",
                                                              "neutral30": "hsl(0, 0%, 70%)",
                                                              "neutral40": "hsl(0, 0%, 60%)",
                                                              "neutral5": "hsl(0, 0%, 95%)",
                                                              "neutral50": "hsl(0, 0%, 50%)",
                                                              "neutral60": "hsl(0, 0%, 40%)",
                                                              "neutral70": "hsl(0, 0%, 30%)",
                                                              "neutral80": "hsl(0, 0%, 20%)",
                                                              "neutral90": "hsl(0, 0%, 10%)",
                                                              "primary": "#2980B9",
                                                              "primary25": "rgba(41, 128, 185, 0.1)",
                                                              "primary50": "#F2F9FC",
                                                              "primary75": "#009BF9",
                                                            },
                                                            "spacing": Object {
                                                              "baseUnit": 4,
                                                              "controlHeight": 38,
                                                              "menuGutter": 8,
                                                            },
                                                          }
                                                        }
                                                      >
                                                        <EmotionCssPropInternal
                                                          __EMOTION_LABEL_PLEASE_DO_NOT_USE__="SelectContainer"
                                                          __EMOTION_TYPE_PLEASE_DO_NOT_USE__="div"
                                                          className="select-input select-input--is-disabled"
                                                          css={
                                                            Object {
                                                              "boxSizing": "border-box",
                                                              "direction": null,
                                                              "label": "container",
                                                              "pointerEvents": "none",
                                                              "position": "relative",
                                                            }
                                                          }
                                                          id="selectinput-3"
                                                          onKeyDown={[Function]}
                                                        >
                                                          <div
                                                            className="select-input select-input--is-disabled css-14jk2my-container"
                                                            id="selectinput-3"
                                                            onKeyDown={[Function]}
                                                          >
                                                            <LiveRegion
                                                              ariaSelection={null}
                                                              clearValue={[Function]}
                                                              cx={[Function]}
                                                              focusableOptions={Array []}
                                                              focusedOption={null}
                                                              focusedValue={null}
                                                              getStyles={[Function]}
                                                              getValue={[Function]}
                                                              hasValue={false}
                                                              isFocused={false}
                                                              isMulti={false}
                                                              isRtl={false}
                                                              options={Array []}
                                                              selectOption={[Function]}
                                                              selectProps={
                                                                Object {
                                                                  "aria-live": "polite",
                                                                  "autoFocus": undefined,
                                                                  "backspaceRemovesValue": true,
                                                                  "blurInputOnSelect": false,
                                                                  "captureMenuScroll": false,
                                                                  "className": "select-input",
                                                                  "classNamePrefix": "select-input",
                                                                  "closeMenuOnScroll": false,
                                                                  "closeMenuOnSelect": true,
                                                                  "components": Object {
                                                                    "Input": [Function],
                                                                  },
                                                                  "controlShouldRenderValue": true,
                                                                  "delimiter": ",",
                                                                  "escapeClearsValue": false,
                                                                  "filterOption": [Function],
                                                                  "formatGroupLabel": [Function],
                                                                  "getOptionLabel": [Function],
                                                                  "getOptionValue": [Function],
                                                                  "id": "selectinput-3",
                                                                  "inputValue": "",
                                                                  "isClearable": true,
                                                                  "isDisabled": true,
                                                                  "isLoading": false,
                                                                  "isMulti": false,
                                                                  "isOptionDisabled": [Function],
                                                                  "isRtl": false,
                                                                  "isSearchable": true,
                                                                  "loadingMessage": [Function],
                                                                  "maxMenuHeight": 300,
                                                                  "menuIsOpen": false,
                                                                  "menuPlacement": "bottom",
                                                                  "menuPosition": "absolute",
                                                                  "menuShouldBlockScroll": false,
                                                                  "menuShouldScrollIntoView": true,
                                                                  "minMenuHeight": 140,
                                                                  "name": "entity-sampleSet",
                                                                  "noOptionsMessage": [Function],
                                                                  "onBlur": [Function],
                                                                  "onChange": [Function],
                                                                  "onFocus": [Function],
                                                                  "onInputChange": [Function],
                                                                  "onMenuClose": [Function],
                                                                  "onMenuOpen": [Function],
                                                                  "openMenuOnClick": true,
                                                                  "openMenuOnFocus": false,
                                                                  "options": Array [],
                                                                  "pageSize": 5,
                                                                  "placeholder": "Loading...",
                                                                  "promptTextCreator": undefined,
                                                                  "screenReaderStatus": [Function],
                                                                  "styles": Object {
                                                                    "menu": [Function],
                                                                    "multiValue": [Function],
                                                                    "multiValueLabel": [Function],
                                                                    "multiValueRemove": [Function],
                                                                  },
                                                                  "tabIndex": "0",
                                                                  "tabSelectsValue": true,
                                                                  "theme": [Function],
                                                                  "value": null,
                                                                }
                                                              }
                                                              selectValue={Array []}
                                                              setValue={[Function]}
                                                              theme={
                                                                Object {
                                                                  "borderRadius": 4,
                                                                  "colors": Object {
                                                                    "danger": "#D9534F",
                                                                    "dangerLight": "#FFBDAD",
                                                                    "neutral0": "hsl(0, 0%, 100%)",
                                                                    "neutral10": "hsl(0, 0%, 90%)",
                                                                    "neutral20": "hsl(0, 0%, 80%)",
                                                                    "neutral30": "hsl(0, 0%, 70%)",
                                                                    "neutral40": "hsl(0, 0%, 60%)",
                                                                    "neutral5": "hsl(0, 0%, 95%)",
                                                                    "neutral50": "hsl(0, 0%, 50%)",
                                                                    "neutral60": "hsl(0, 0%, 40%)",
                                                                    "neutral70": "hsl(0, 0%, 30%)",
                                                                    "neutral80": "hsl(0, 0%, 20%)",
                                                                    "neutral90": "hsl(0, 0%, 10%)",
                                                                    "primary": "#2980B9",
                                                                    "primary25": "rgba(41, 128, 185, 0.1)",
                                                                    "primary50": "#F2F9FC",
                                                                    "primary75": "#009BF9",
                                                                  },
                                                                  "spacing": Object {
                                                                    "baseUnit": 4,
                                                                    "controlHeight": 38,
                                                                    "menuGutter": 8,
                                                                  },
                                                                }
                                                              }
                                                            >
                                                              <A11yText
                                                                aria-atomic="false"
                                                                aria-live="polite"
                                                                aria-relevant="additions text"
                                                              >
                                                                <EmotionCssPropInternal
                                                                  __EMOTION_LABEL_PLEASE_DO_NOT_USE__="A11yText"
                                                                  __EMOTION_TYPE_PLEASE_DO_NOT_USE__="span"
                                                                  aria-atomic="false"
                                                                  aria-live="polite"
                                                                  aria-relevant="additions text"
                                                                  css={
                                                                    Object {
                                                                      "map": "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkExMXlUZXh0LmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQVFJIiwiZmlsZSI6IkExMXlUZXh0LmpzIiwic291cmNlc0NvbnRlbnQiOlsiLy8gQGZsb3dcbi8qKiBAanN4IGpzeCAqL1xuaW1wb3J0IHsgdHlwZSBFbGVtZW50Q29uZmlnIH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsganN4IH0gZnJvbSAnQGVtb3Rpb24vcmVhY3QnO1xuXG4vLyBBc3Npc3RpdmUgdGV4dCB0byBkZXNjcmliZSB2aXN1YWwgZWxlbWVudHMuIEhpZGRlbiBmb3Igc2lnaHRlZCB1c2Vycy5cbmNvbnN0IEExMXlUZXh0ID0gKHByb3BzOiBFbGVtZW50Q29uZmlnPCdzcGFuJz4pID0+IChcbiAgPHNwYW5cbiAgICBjc3M9e3tcbiAgICAgIGxhYmVsOiAnYTExeVRleHQnLFxuICAgICAgekluZGV4OiA5OTk5LFxuICAgICAgYm9yZGVyOiAwLFxuICAgICAgY2xpcDogJ3JlY3QoMXB4LCAxcHgsIDFweCwgMXB4KScsXG4gICAgICBoZWlnaHQ6IDEsXG4gICAgICB3aWR0aDogMSxcbiAgICAgIHBvc2l0aW9uOiAnYWJzb2x1dGUnLFxuICAgICAgb3ZlcmZsb3c6ICdoaWRkZW4nLFxuICAgICAgcGFkZGluZzogMCxcbiAgICAgIHdoaXRlU3BhY2U6ICdub3dyYXAnLFxuICAgIH19XG4gICAgey4uLnByb3BzfVxuICAvPlxuKTtcblxuZXhwb3J0IGRlZmF1bHQgQTExeVRleHQ7XG4iXX0= */",
                                                                      "name": "1f43avz-a11yText-A11yText",
                                                                      "styles": "label:a11yText;z-index:9999;border:0;clip:rect(1px, 1px, 1px, 1px);height:1px;width:1px;position:absolute;overflow:hidden;padding:0;white-space:nowrap;label:A11yText;",
                                                                      "toString": [Function],
                                                                    }
                                                                  }
                                                                >
                                                                  <span
                                                                    aria-atomic="false"
                                                                    aria-live="polite"
                                                                    aria-relevant="additions text"
                                                                    className="css-1f43avz-a11yText-A11yText"
                                                                  />
                                                                </EmotionCssPropInternal>
                                                              </A11yText>
                                                            </LiveRegion>
                                                            <Control
                                                              clearValue={[Function]}
                                                              cx={[Function]}
                                                              getStyles={[Function]}
                                                              getValue={[Function]}
                                                              hasValue={false}
                                                              innerProps={
                                                                Object {
                                                                  "onMouseDown": [Function],
                                                                  "onTouchEnd": [Function],
                                                                }
                                                              }
                                                              innerRef={[Function]}
                                                              isDisabled={true}
                                                              isFocused={false}
                                                              isMulti={false}
                                                              isRtl={false}
                                                              menuIsOpen={false}
                                                              options={Array []}
                                                              selectOption={[Function]}
                                                              selectProps={
                                                                Object {
                                                                  "aria-live": "polite",
                                                                  "autoFocus": undefined,
                                                                  "backspaceRemovesValue": true,
                                                                  "blurInputOnSelect": false,
                                                                  "captureMenuScroll": false,
                                                                  "className": "select-input",
                                                                  "classNamePrefix": "select-input",
                                                                  "closeMenuOnScroll": false,
                                                                  "closeMenuOnSelect": true,
                                                                  "components": Object {
                                                                    "Input": [Function],
                                                                  },
                                                                  "controlShouldRenderValue": true,
                                                                  "delimiter": ",",
                                                                  "escapeClearsValue": false,
                                                                  "filterOption": [Function],
                                                                  "formatGroupLabel": [Function],
                                                                  "getOptionLabel": [Function],
                                                                  "getOptionValue": [Function],
                                                                  "id": "selectinput-3",
                                                                  "inputValue": "",
                                                                  "isClearable": true,
                                                                  "isDisabled": true,
                                                                  "isLoading": false,
                                                                  "isMulti": false,
                                                                  "isOptionDisabled": [Function],
                                                                  "isRtl": false,
                                                                  "isSearchable": true,
                                                                  "loadingMessage": [Function],
                                                                  "maxMenuHeight": 300,
                                                                  "menuIsOpen": false,
                                                                  "menuPlacement": "bottom",
                                                                  "menuPosition": "absolute",
                                                                  "menuShouldBlockScroll": false,
                                                                  "menuShouldScrollIntoView": true,
                                                                  "minMenuHeight": 140,
                                                                  "name": "entity-sampleSet",
                                                                  "noOptionsMessage": [Function],
                                                                  "onBlur": [Function],
                                                                  "onChange": [Function],
                                                                  "onFocus": [Function],
                                                                  "onInputChange": [Function],
                                                                  "onMenuClose": [Function],
                                                                  "onMenuOpen": [Function],
                                                                  "openMenuOnClick": true,
                                                                  "openMenuOnFocus": false,
                                                                  "options": Array [],
                                                                  "pageSize": 5,
                                                                  "placeholder": "Loading...",
                                                                  "promptTextCreator": undefined,
                                                                  "screenReaderStatus": [Function],
                                                                  "styles": Object {
                                                                    "menu": [Function],
                                                                    "multiValue": [Function],
                                                                    "multiValueLabel": [Function],
                                                                    "multiValueRemove": [Function],
                                                                  },
                                                                  "tabIndex": "0",
                                                                  "tabSelectsValue": true,
                                                                  "theme": [Function],
                                                                  "value": null,
                                                                }
                                                              }
                                                              setValue={[Function]}
                                                              theme={
                                                                Object {
                                                                  "borderRadius": 4,
                                                                  "colors": Object {
                                                                    "danger": "#D9534F",
                                                                    "dangerLight": "#FFBDAD",
                                                                    "neutral0": "hsl(0, 0%, 100%)",
                                                                    "neutral10": "hsl(0, 0%, 90%)",
                                                                    "neutral20": "hsl(0, 0%, 80%)",
                                                                    "neutral30": "hsl(0, 0%, 70%)",
                                                                    "neutral40": "hsl(0, 0%, 60%)",
                                                                    "neutral5": "hsl(0, 0%, 95%)",
                                                                    "neutral50": "hsl(0, 0%, 50%)",
                                                                    "neutral60": "hsl(0, 0%, 40%)",
                                                                    "neutral70": "hsl(0, 0%, 30%)",
                                                                    "neutral80": "hsl(0, 0%, 20%)",
                                                                    "neutral90": "hsl(0, 0%, 10%)",
                                                                    "primary": "#2980B9",
                                                                    "primary25": "rgba(41, 128, 185, 0.1)",
                                                                    "primary50": "#F2F9FC",
                                                                    "primary75": "#009BF9",
                                                                  },
                                                                  "spacing": Object {
                                                                    "baseUnit": 4,
                                                                    "controlHeight": 38,
                                                                    "menuGutter": 8,
                                                                  },
                                                                }
                                                              }
                                                            >
                                                              <EmotionCssPropInternal
                                                                __EMOTION_LABEL_PLEASE_DO_NOT_USE__="Control"
                                                                __EMOTION_TYPE_PLEASE_DO_NOT_USE__="div"
                                                                className="select-input__control select-input__control--is-disabled"
                                                                css={
                                                                  Object {
                                                                    "&:hover": Object {
                                                                      "borderColor": "hsl(0, 0%, 70%)",
                                                                    },
                                                                    "alignItems": "center",
                                                                    "backgroundColor": "hsl(0, 0%, 95%)",
                                                                    "borderColor": "hsl(0, 0%, 90%)",
                                                                    "borderRadius": 4,
                                                                    "borderStyle": "solid",
                                                                    "borderWidth": 1,
                                                                    "boxShadow": null,
                                                                    "boxSizing": "border-box",
                                                                    "cursor": "default",
                                                                    "display": "flex",
                                                                    "flexWrap": "wrap",
                                                                    "justifyContent": "space-between",
                                                                    "label": "control",
                                                                    "minHeight": 38,
                                                                    "outline": "0 !important",
                                                                    "position": "relative",
                                                                    "transition": "all 100ms",
                                                                  }
                                                                }
                                                                onMouseDown={[Function]}
                                                                onTouchEnd={[Function]}
                                                              >
                                                                <div
                                                                  className="select-input__control select-input__control--is-disabled css-1fhf3k1-control"
                                                                  onMouseDown={[Function]}
                                                                  onTouchEnd={[Function]}
                                                                >
                                                                  <ValueContainer
                                                                    clearValue={[Function]}
                                                                    cx={[Function]}
                                                                    getStyles={[Function]}
                                                                    getValue={[Function]}
                                                                    hasValue={false}
                                                                    isDisabled={true}
                                                                    isMulti={false}
                                                                    isRtl={false}
                                                                    options={Array []}
                                                                    selectOption={[Function]}
                                                                    selectProps={
                                                                      Object {
                                                                        "aria-live": "polite",
                                                                        "autoFocus": undefined,
                                                                        "backspaceRemovesValue": true,
                                                                        "blurInputOnSelect": false,
                                                                        "captureMenuScroll": false,
                                                                        "className": "select-input",
                                                                        "classNamePrefix": "select-input",
                                                                        "closeMenuOnScroll": false,
                                                                        "closeMenuOnSelect": true,
                                                                        "components": Object {
                                                                          "Input": [Function],
                                                                        },
                                                                        "controlShouldRenderValue": true,
                                                                        "delimiter": ",",
                                                                        "escapeClearsValue": false,
                                                                        "filterOption": [Function],
                                                                        "formatGroupLabel": [Function],
                                                                        "getOptionLabel": [Function],
                                                                        "getOptionValue": [Function],
                                                                        "id": "selectinput-3",
                                                                        "inputValue": "",
                                                                        "isClearable": true,
                                                                        "isDisabled": true,
                                                                        "isLoading": false,
                                                                        "isMulti": false,
                                                                        "isOptionDisabled": [Function],
                                                                        "isRtl": false,
                                                                        "isSearchable": true,
                                                                        "loadingMessage": [Function],
                                                                        "maxMenuHeight": 300,
                                                                        "menuIsOpen": false,
                                                                        "menuPlacement": "bottom",
                                                                        "menuPosition": "absolute",
                                                                        "menuShouldBlockScroll": false,
                                                                        "menuShouldScrollIntoView": true,
                                                                        "minMenuHeight": 140,
                                                                        "name": "entity-sampleSet",
                                                                        "noOptionsMessage": [Function],
                                                                        "onBlur": [Function],
                                                                        "onChange": [Function],
                                                                        "onFocus": [Function],
                                                                        "onInputChange": [Function],
                                                                        "onMenuClose": [Function],
                                                                        "onMenuOpen": [Function],
                                                                        "openMenuOnClick": true,
                                                                        "openMenuOnFocus": false,
                                                                        "options": Array [],
                                                                        "pageSize": 5,
                                                                        "placeholder": "Loading...",
                                                                        "promptTextCreator": undefined,
                                                                        "screenReaderStatus": [Function],
                                                                        "styles": Object {
                                                                          "menu": [Function],
                                                                          "multiValue": [Function],
                                                                          "multiValueLabel": [Function],
                                                                          "multiValueRemove": [Function],
                                                                        },
                                                                        "tabIndex": "0",
                                                                        "tabSelectsValue": true,
                                                                        "theme": [Function],
                                                                        "value": null,
                                                                      }
                                                                    }
                                                                    setValue={[Function]}
                                                                    theme={
                                                                      Object {
                                                                        "borderRadius": 4,
                                                                        "colors": Object {
                                                                          "danger": "#D9534F",
                                                                          "dangerLight": "#FFBDAD",
                                                                          "neutral0": "hsl(0, 0%, 100%)",
                                                                          "neutral10": "hsl(0, 0%, 90%)",
                                                                          "neutral20": "hsl(0, 0%, 80%)",
                                                                          "neutral30": "hsl(0, 0%, 70%)",
                                                                          "neutral40": "hsl(0, 0%, 60%)",
                                                                          "neutral5": "hsl(0, 0%, 95%)",
                                                                          "neutral50": "hsl(0, 0%, 50%)",
                                                                          "neutral60": "hsl(0, 0%, 40%)",
                                                                          "neutral70": "hsl(0, 0%, 30%)",
                                                                          "neutral80": "hsl(0, 0%, 20%)",
                                                                          "neutral90": "hsl(0, 0%, 10%)",
                                                                          "primary": "#2980B9",
                                                                          "primary25": "rgba(41, 128, 185, 0.1)",
                                                                          "primary50": "#F2F9FC",
                                                                          "primary75": "#009BF9",
                                                                        },
                                                                        "spacing": Object {
                                                                          "baseUnit": 4,
                                                                          "controlHeight": 38,
                                                                          "menuGutter": 8,
                                                                        },
                                                                      }
                                                                    }
                                                                  >
                                                                    <EmotionCssPropInternal
                                                                      __EMOTION_LABEL_PLEASE_DO_NOT_USE__="ValueContainer"
                                                                      __EMOTION_TYPE_PLEASE_DO_NOT_USE__="div"
                                                                      className="select-input__value-container"
                                                                      css={
                                                                        Object {
                                                                          "WebkitOverflowScrolling": "touch",
                                                                          "alignItems": "center",
                                                                          "boxSizing": "border-box",
                                                                          "display": "flex",
                                                                          "flex": 1,
                                                                          "flexWrap": "wrap",
                                                                          "overflow": "hidden",
                                                                          "padding": "2px 8px",
                                                                          "position": "relative",
                                                                        }
                                                                      }
                                                                    >
                                                                      <div
                                                                        className="select-input__value-container css-g1d714-ValueContainer"
                                                                      >
                                                                        <Placeholder
                                                                          clearValue={[Function]}
                                                                          cx={[Function]}
                                                                          getStyles={[Function]}
                                                                          getValue={[Function]}
                                                                          hasValue={false}
                                                                          isDisabled={true}
                                                                          isFocused={false}
                                                                          isMulti={false}
                                                                          isRtl={false}
                                                                          key="placeholder"
                                                                          options={Array []}
                                                                          selectOption={[Function]}
                                                                          selectProps={
                                                                            Object {
                                                                              "aria-live": "polite",
                                                                              "autoFocus": undefined,
                                                                              "backspaceRemovesValue": true,
                                                                              "blurInputOnSelect": false,
                                                                              "captureMenuScroll": false,
                                                                              "className": "select-input",
                                                                              "classNamePrefix": "select-input",
                                                                              "closeMenuOnScroll": false,
                                                                              "closeMenuOnSelect": true,
                                                                              "components": Object {
                                                                                "Input": [Function],
                                                                              },
                                                                              "controlShouldRenderValue": true,
                                                                              "delimiter": ",",
                                                                              "escapeClearsValue": false,
                                                                              "filterOption": [Function],
                                                                              "formatGroupLabel": [Function],
                                                                              "getOptionLabel": [Function],
                                                                              "getOptionValue": [Function],
                                                                              "id": "selectinput-3",
                                                                              "inputValue": "",
                                                                              "isClearable": true,
                                                                              "isDisabled": true,
                                                                              "isLoading": false,
                                                                              "isMulti": false,
                                                                              "isOptionDisabled": [Function],
                                                                              "isRtl": false,
                                                                              "isSearchable": true,
                                                                              "loadingMessage": [Function],
                                                                              "maxMenuHeight": 300,
                                                                              "menuIsOpen": false,
                                                                              "menuPlacement": "bottom",
                                                                              "menuPosition": "absolute",
                                                                              "menuShouldBlockScroll": false,
                                                                              "menuShouldScrollIntoView": true,
                                                                              "minMenuHeight": 140,
                                                                              "name": "entity-sampleSet",
                                                                              "noOptionsMessage": [Function],
                                                                              "onBlur": [Function],
                                                                              "onChange": [Function],
                                                                              "onFocus": [Function],
                                                                              "onInputChange": [Function],
                                                                              "onMenuClose": [Function],
                                                                              "onMenuOpen": [Function],
                                                                              "openMenuOnClick": true,
                                                                              "openMenuOnFocus": false,
                                                                              "options": Array [],
                                                                              "pageSize": 5,
                                                                              "placeholder": "Loading...",
                                                                              "promptTextCreator": undefined,
                                                                              "screenReaderStatus": [Function],
                                                                              "styles": Object {
                                                                                "menu": [Function],
                                                                                "multiValue": [Function],
                                                                                "multiValueLabel": [Function],
                                                                                "multiValueRemove": [Function],
                                                                              },
                                                                              "tabIndex": "0",
                                                                              "tabSelectsValue": true,
                                                                              "theme": [Function],
                                                                              "value": null,
                                                                            }
                                                                          }
                                                                          setValue={[Function]}
                                                                          theme={
                                                                            Object {
                                                                              "borderRadius": 4,
                                                                              "colors": Object {
                                                                                "danger": "#D9534F",
                                                                                "dangerLight": "#FFBDAD",
                                                                                "neutral0": "hsl(0, 0%, 100%)",
                                                                                "neutral10": "hsl(0, 0%, 90%)",
                                                                                "neutral20": "hsl(0, 0%, 80%)",
                                                                                "neutral30": "hsl(0, 0%, 70%)",
                                                                                "neutral40": "hsl(0, 0%, 60%)",
                                                                                "neutral5": "hsl(0, 0%, 95%)",
                                                                                "neutral50": "hsl(0, 0%, 50%)",
                                                                                "neutral60": "hsl(0, 0%, 40%)",
                                                                                "neutral70": "hsl(0, 0%, 30%)",
                                                                                "neutral80": "hsl(0, 0%, 20%)",
                                                                                "neutral90": "hsl(0, 0%, 10%)",
                                                                                "primary": "#2980B9",
                                                                                "primary25": "rgba(41, 128, 185, 0.1)",
                                                                                "primary50": "#F2F9FC",
                                                                                "primary75": "#009BF9",
                                                                              },
                                                                              "spacing": Object {
                                                                                "baseUnit": 4,
                                                                                "controlHeight": 38,
                                                                                "menuGutter": 8,
                                                                              },
                                                                            }
                                                                          }
                                                                        >
                                                                          <EmotionCssPropInternal
                                                                            __EMOTION_LABEL_PLEASE_DO_NOT_USE__="Placeholder"
                                                                            __EMOTION_TYPE_PLEASE_DO_NOT_USE__="div"
                                                                            className="select-input__placeholder"
                                                                            css={
                                                                              Object {
                                                                                "boxSizing": "border-box",
                                                                                "color": "hsl(0, 0%, 50%)",
                                                                                "label": "placeholder",
                                                                                "marginLeft": 2,
                                                                                "marginRight": 2,
                                                                                "position": "absolute",
                                                                                "top": "50%",
                                                                                "transform": "translateY(-50%)",
                                                                              }
                                                                            }
                                                                          >
                                                                            <div
                                                                              className="select-input__placeholder css-1wa3eu0-placeholder"
                                                                            >
                                                                              Loading...
                                                                            </div>
                                                                          </EmotionCssPropInternal>
                                                                        </Placeholder>
                                                                        <Component
                                                                          aria-autocomplete="list"
                                                                          autoCapitalize="none"
                                                                          autoComplete="off"
                                                                          autoCorrect="off"
                                                                          clearValue={[Function]}
                                                                          cx={[Function]}
                                                                          getStyles={[Function]}
                                                                          getValue={[Function]}
                                                                          hasValue={false}
                                                                          id="react-select-7-input"
                                                                          innerRef={[Function]}
                                                                          isDisabled={true}
                                                                          isHidden={false}
                                                                          isMulti={false}
                                                                          isRtl={false}
                                                                          onBlur={[Function]}
                                                                          onChange={[Function]}
                                                                          onFocus={[Function]}
                                                                          options={Array []}
                                                                          selectOption={[Function]}
                                                                          selectProps={
                                                                            Object {
                                                                              "aria-live": "polite",
                                                                              "autoFocus": undefined,
                                                                              "backspaceRemovesValue": true,
                                                                              "blurInputOnSelect": false,
                                                                              "captureMenuScroll": false,
                                                                              "className": "select-input",
                                                                              "classNamePrefix": "select-input",
                                                                              "closeMenuOnScroll": false,
                                                                              "closeMenuOnSelect": true,
                                                                              "components": Object {
                                                                                "Input": [Function],
                                                                              },
                                                                              "controlShouldRenderValue": true,
                                                                              "delimiter": ",",
                                                                              "escapeClearsValue": false,
                                                                              "filterOption": [Function],
                                                                              "formatGroupLabel": [Function],
                                                                              "getOptionLabel": [Function],
                                                                              "getOptionValue": [Function],
                                                                              "id": "selectinput-3",
                                                                              "inputValue": "",
                                                                              "isClearable": true,
                                                                              "isDisabled": true,
                                                                              "isLoading": false,
                                                                              "isMulti": false,
                                                                              "isOptionDisabled": [Function],
                                                                              "isRtl": false,
                                                                              "isSearchable": true,
                                                                              "loadingMessage": [Function],
                                                                              "maxMenuHeight": 300,
                                                                              "menuIsOpen": false,
                                                                              "menuPlacement": "bottom",
                                                                              "menuPosition": "absolute",
                                                                              "menuShouldBlockScroll": false,
                                                                              "menuShouldScrollIntoView": true,
                                                                              "minMenuHeight": 140,
                                                                              "name": "entity-sampleSet",
                                                                              "noOptionsMessage": [Function],
                                                                              "onBlur": [Function],
                                                                              "onChange": [Function],
                                                                              "onFocus": [Function],
                                                                              "onInputChange": [Function],
                                                                              "onMenuClose": [Function],
                                                                              "onMenuOpen": [Function],
                                                                              "openMenuOnClick": true,
                                                                              "openMenuOnFocus": false,
                                                                              "options": Array [],
                                                                              "pageSize": 5,
                                                                              "placeholder": "Loading...",
                                                                              "promptTextCreator": undefined,
                                                                              "screenReaderStatus": [Function],
                                                                              "styles": Object {
                                                                                "menu": [Function],
                                                                                "multiValue": [Function],
                                                                                "multiValueLabel": [Function],
                                                                                "multiValueRemove": [Function],
                                                                              },
                                                                              "tabIndex": "0",
                                                                              "tabSelectsValue": true,
                                                                              "theme": [Function],
                                                                              "value": null,
                                                                            }
                                                                          }
                                                                          setValue={[Function]}
                                                                          spellCheck="false"
                                                                          tabIndex="0"
                                                                          theme={
                                                                            Object {
                                                                              "borderRadius": 4,
                                                                              "colors": Object {
                                                                                "danger": "#D9534F",
                                                                                "dangerLight": "#FFBDAD",
                                                                                "neutral0": "hsl(0, 0%, 100%)",
                                                                                "neutral10": "hsl(0, 0%, 90%)",
                                                                                "neutral20": "hsl(0, 0%, 80%)",
                                                                                "neutral30": "hsl(0, 0%, 70%)",
                                                                                "neutral40": "hsl(0, 0%, 60%)",
                                                                                "neutral5": "hsl(0, 0%, 95%)",
                                                                                "neutral50": "hsl(0, 0%, 50%)",
                                                                                "neutral60": "hsl(0, 0%, 40%)",
                                                                                "neutral70": "hsl(0, 0%, 30%)",
                                                                                "neutral80": "hsl(0, 0%, 20%)",
                                                                                "neutral90": "hsl(0, 0%, 10%)",
                                                                                "primary": "#2980B9",
                                                                                "primary25": "rgba(41, 128, 185, 0.1)",
                                                                                "primary50": "#F2F9FC",
                                                                                "primary75": "#009BF9",
                                                                              },
                                                                              "spacing": Object {
                                                                                "baseUnit": 4,
                                                                                "controlHeight": 38,
                                                                                "menuGutter": 8,
                                                                              },
                                                                            }
                                                                          }
                                                                          type="text"
                                                                          value=""
                                                                        >
                                                                          <Input
                                                                            aria-autocomplete="list"
                                                                            autoCapitalize="none"
                                                                            autoComplete="off"
                                                                            autoCorrect="off"
                                                                            clearValue={[Function]}
                                                                            cx={[Function]}
                                                                            getStyles={[Function]}
                                                                            getValue={[Function]}
                                                                            hasValue={false}
                                                                            id="react-select-7-input"
                                                                            innerRef={[Function]}
                                                                            isDisabled={true}
                                                                            isHidden={false}
                                                                            isMulti={false}
                                                                            isRtl={false}
                                                                            onBlur={[Function]}
                                                                            onChange={[Function]}
                                                                            onFocus={[Function]}
                                                                            options={Array []}
                                                                            required={false}
                                                                            selectOption={[Function]}
                                                                            selectProps={
                                                                              Object {
                                                                                "aria-live": "polite",
                                                                                "autoFocus": undefined,
                                                                                "backspaceRemovesValue": true,
                                                                                "blurInputOnSelect": false,
                                                                                "captureMenuScroll": false,
                                                                                "className": "select-input",
                                                                                "classNamePrefix": "select-input",
                                                                                "closeMenuOnScroll": false,
                                                                                "closeMenuOnSelect": true,
                                                                                "components": Object {
                                                                                  "Input": [Function],
                                                                                },
                                                                                "controlShouldRenderValue": true,
                                                                                "delimiter": ",",
                                                                                "escapeClearsValue": false,
                                                                                "filterOption": [Function],
                                                                                "formatGroupLabel": [Function],
                                                                                "getOptionLabel": [Function],
                                                                                "getOptionValue": [Function],
                                                                                "id": "selectinput-3",
                                                                                "inputValue": "",
                                                                                "isClearable": true,
                                                                                "isDisabled": true,
                                                                                "isLoading": false,
                                                                                "isMulti": false,
                                                                                "isOptionDisabled": [Function],
                                                                                "isRtl": false,
                                                                                "isSearchable": true,
                                                                                "loadingMessage": [Function],
                                                                                "maxMenuHeight": 300,
                                                                                "menuIsOpen": false,
                                                                                "menuPlacement": "bottom",
                                                                                "menuPosition": "absolute",
                                                                                "menuShouldBlockScroll": false,
                                                                                "menuShouldScrollIntoView": true,
                                                                                "minMenuHeight": 140,
                                                                                "name": "entity-sampleSet",
                                                                                "noOptionsMessage": [Function],
                                                                                "onBlur": [Function],
                                                                                "onChange": [Function],
                                                                                "onFocus": [Function],
                                                                                "onInputChange": [Function],
                                                                                "onMenuClose": [Function],
                                                                                "onMenuOpen": [Function],
                                                                                "openMenuOnClick": true,
                                                                                "openMenuOnFocus": false,
                                                                                "options": Array [],
                                                                                "pageSize": 5,
                                                                                "placeholder": "Loading...",
                                                                                "promptTextCreator": undefined,
                                                                                "screenReaderStatus": [Function],
                                                                                "styles": Object {
                                                                                  "menu": [Function],
                                                                                  "multiValue": [Function],
                                                                                  "multiValueLabel": [Function],
                                                                                  "multiValueRemove": [Function],
                                                                                },
                                                                                "tabIndex": "0",
                                                                                "tabSelectsValue": true,
                                                                                "theme": [Function],
                                                                                "value": null,
                                                                              }
                                                                            }
                                                                            setValue={[Function]}
                                                                            spellCheck="false"
                                                                            tabIndex="0"
                                                                            theme={
                                                                              Object {
                                                                                "borderRadius": 4,
                                                                                "colors": Object {
                                                                                  "danger": "#D9534F",
                                                                                  "dangerLight": "#FFBDAD",
                                                                                  "neutral0": "hsl(0, 0%, 100%)",
                                                                                  "neutral10": "hsl(0, 0%, 90%)",
                                                                                  "neutral20": "hsl(0, 0%, 80%)",
                                                                                  "neutral30": "hsl(0, 0%, 70%)",
                                                                                  "neutral40": "hsl(0, 0%, 60%)",
                                                                                  "neutral5": "hsl(0, 0%, 95%)",
                                                                                  "neutral50": "hsl(0, 0%, 50%)",
                                                                                  "neutral60": "hsl(0, 0%, 40%)",
                                                                                  "neutral70": "hsl(0, 0%, 30%)",
                                                                                  "neutral80": "hsl(0, 0%, 20%)",
                                                                                  "neutral90": "hsl(0, 0%, 10%)",
                                                                                  "primary": "#2980B9",
                                                                                  "primary25": "rgba(41, 128, 185, 0.1)",
                                                                                  "primary50": "#F2F9FC",
                                                                                  "primary75": "#009BF9",
                                                                                },
                                                                                "spacing": Object {
                                                                                  "baseUnit": 4,
                                                                                  "controlHeight": 38,
                                                                                  "menuGutter": 8,
                                                                                },
                                                                              }
                                                                            }
                                                                            type="text"
                                                                            value=""
                                                                          >
                                                                            <EmotionCssPropInternal
                                                                              __EMOTION_LABEL_PLEASE_DO_NOT_USE__="Input"
                                                                              __EMOTION_TYPE_PLEASE_DO_NOT_USE__="div"
                                                                              css={
                                                                                Object {
                                                                                  "boxSizing": "border-box",
                                                                                  "color": "hsl(0, 0%, 20%)",
                                                                                  "margin": 2,
                                                                                  "paddingBottom": 2,
                                                                                  "paddingTop": 2,
                                                                                  "visibility": "hidden",
                                                                                }
                                                                              }
                                                                            >
                                                                              <div
                                                                                className="css-1bwsx9e-Input"
                                                                              >
                                                                                <AutosizeInput
                                                                                  aria-autocomplete="list"
                                                                                  autoCapitalize="none"
                                                                                  autoComplete="off"
                                                                                  autoCorrect="off"
                                                                                  className="select-input__input"
                                                                                  disabled={true}
                                                                                  id="react-select-7-input"
                                                                                  injectStyles={true}
                                                                                  inputRef={[Function]}
                                                                                  inputStyle={
                                                                                    Object {
                                                                                      "background": 0,
                                                                                      "border": 0,
                                                                                      "color": "inherit",
                                                                                      "fontSize": "inherit",
                                                                                      "label": "input",
                                                                                      "opacity": 1,
                                                                                      "outline": 0,
                                                                                      "padding": 0,
                                                                                    }
                                                                                  }
                                                                                  minWidth={1}
                                                                                  onBlur={[Function]}
                                                                                  onChange={[Function]}
                                                                                  onFocus={[Function]}
                                                                                  required={false}
                                                                                  spellCheck="false"
                                                                                  tabIndex="0"
                                                                                  type="text"
                                                                                  value=""
                                                                                >
                                                                                  <div
                                                                                    className="select-input__input"
                                                                                    style={
                                                                                      Object {
                                                                                        "display": "inline-block",
                                                                                      }
                                                                                    }
                                                                                  >
                                                                                    <input
                                                                                      aria-autocomplete="list"
                                                                                      autoCapitalize="none"
                                                                                      autoComplete="off"
                                                                                      autoCorrect="off"
                                                                                      disabled={true}
                                                                                      id="react-select-7-input"
                                                                                      onBlur={[Function]}
                                                                                      onChange={[Function]}
                                                                                      onFocus={[Function]}
                                                                                      required={false}
                                                                                      spellCheck="false"
                                                                                      style={
                                                                                        Object {
                                                                                          "background": 0,
                                                                                          "border": 0,
                                                                                          "boxSizing": "content-box",
                                                                                          "color": "inherit",
                                                                                          "fontSize": "inherit",
                                                                                          "label": "input",
                                                                                          "opacity": 1,
                                                                                          "outline": 0,
                                                                                          "padding": 0,
                                                                                          "width": "2px",
                                                                                        }
                                                                                      }
                                                                                      tabIndex="0"
                                                                                      type="text"
                                                                                      value=""
                                                                                    />
                                                                                    <div
                                                                                      style={
                                                                                        Object {
                                                                                          "height": 0,
                                                                                          "left": 0,
                                                                                          "overflow": "scroll",
                                                                                          "position": "absolute",
                                                                                          "top": 0,
                                                                                          "visibility": "hidden",
                                                                                          "whiteSpace": "pre",
                                                                                        }
                                                                                      }
                                                                                    />
                                                                                  </div>
                                                                                </AutosizeInput>
                                                                              </div>
                                                                            </EmotionCssPropInternal>
                                                                          </Input>
                                                                        </Component>
                                                                      </div>
                                                                    </EmotionCssPropInternal>
                                                                  </ValueContainer>
                                                                  <IndicatorsContainer
                                                                    clearValue={[Function]}
                                                                    cx={[Function]}
                                                                    getStyles={[Function]}
                                                                    getValue={[Function]}
                                                                    hasValue={false}
                                                                    isDisabled={true}
                                                                    isMulti={false}
                                                                    isRtl={false}
                                                                    options={Array []}
                                                                    selectOption={[Function]}
                                                                    selectProps={
                                                                      Object {
                                                                        "aria-live": "polite",
                                                                        "autoFocus": undefined,
                                                                        "backspaceRemovesValue": true,
                                                                        "blurInputOnSelect": false,
                                                                        "captureMenuScroll": false,
                                                                        "className": "select-input",
                                                                        "classNamePrefix": "select-input",
                                                                        "closeMenuOnScroll": false,
                                                                        "closeMenuOnSelect": true,
                                                                        "components": Object {
                                                                          "Input": [Function],
                                                                        },
                                                                        "controlShouldRenderValue": true,
                                                                        "delimiter": ",",
                                                                        "escapeClearsValue": false,
                                                                        "filterOption": [Function],
                                                                        "formatGroupLabel": [Function],
                                                                        "getOptionLabel": [Function],
                                                                        "getOptionValue": [Function],
                                                                        "id": "selectinput-3",
                                                                        "inputValue": "",
                                                                        "isClearable": true,
                                                                        "isDisabled": true,
                                                                        "isLoading": false,
                                                                        "isMulti": false,
                                                                        "isOptionDisabled": [Function],
                                                                        "isRtl": false,
                                                                        "isSearchable": true,
                                                                        "loadingMessage": [Function],
                                                                        "maxMenuHeight": 300,
                                                                        "menuIsOpen": false,
                                                                        "menuPlacement": "bottom",
                                                                        "menuPosition": "absolute",
                                                                        "menuShouldBlockScroll": false,
                                                                        "menuShouldScrollIntoView": true,
                                                                        "minMenuHeight": 140,
                                                                        "name": "entity-sampleSet",
                                                                        "noOptionsMessage": [Function],
                                                                        "onBlur": [Function],
                                                                        "onChange": [Function],
                                                                        "onFocus": [Function],
                                                                        "onInputChange": [Function],
                                                                        "onMenuClose": [Function],
                                                                        "onMenuOpen": [Function],
                                                                        "openMenuOnClick": true,
                                                                        "openMenuOnFocus": false,
                                                                        "options": Array [],
                                                                        "pageSize": 5,
                                                                        "placeholder": "Loading...",
                                                                        "promptTextCreator": undefined,
                                                                        "screenReaderStatus": [Function],
                                                                        "styles": Object {
                                                                          "menu": [Function],
                                                                          "multiValue": [Function],
                                                                          "multiValueLabel": [Function],
                                                                          "multiValueRemove": [Function],
                                                                        },
                                                                        "tabIndex": "0",
                                                                        "tabSelectsValue": true,
                                                                        "theme": [Function],
                                                                        "value": null,
                                                                      }
                                                                    }
                                                                    setValue={[Function]}
                                                                    theme={
                                                                      Object {
                                                                        "borderRadius": 4,
                                                                        "colors": Object {
                                                                          "danger": "#D9534F",
                                                                          "dangerLight": "#FFBDAD",
                                                                          "neutral0": "hsl(0, 0%, 100%)",
                                                                          "neutral10": "hsl(0, 0%, 90%)",
                                                                          "neutral20": "hsl(0, 0%, 80%)",
                                                                          "neutral30": "hsl(0, 0%, 70%)",
                                                                          "neutral40": "hsl(0, 0%, 60%)",
                                                                          "neutral5": "hsl(0, 0%, 95%)",
                                                                          "neutral50": "hsl(0, 0%, 50%)",
                                                                          "neutral60": "hsl(0, 0%, 40%)",
                                                                          "neutral70": "hsl(0, 0%, 30%)",
                                                                          "neutral80": "hsl(0, 0%, 20%)",
                                                                          "neutral90": "hsl(0, 0%, 10%)",
                                                                          "primary": "#2980B9",
                                                                          "primary25": "rgba(41, 128, 185, 0.1)",
                                                                          "primary50": "#F2F9FC",
                                                                          "primary75": "#009BF9",
                                                                        },
                                                                        "spacing": Object {
                                                                          "baseUnit": 4,
                                                                          "controlHeight": 38,
                                                                          "menuGutter": 8,
                                                                        },
                                                                      }
                                                                    }
                                                                  >
                                                                    <EmotionCssPropInternal
                                                                      __EMOTION_LABEL_PLEASE_DO_NOT_USE__="IndicatorsContainer"
                                                                      __EMOTION_TYPE_PLEASE_DO_NOT_USE__="div"
                                                                      className="select-input__indicators"
                                                                      css={
                                                                        Object {
                                                                          "alignItems": "center",
                                                                          "alignSelf": "stretch",
                                                                          "boxSizing": "border-box",
                                                                          "display": "flex",
                                                                          "flexShrink": 0,
                                                                        }
                                                                      }
                                                                    >
                                                                      <div
                                                                        className="select-input__indicators css-1hb7zxy-IndicatorsContainer"
                                                                      >
                                                                        <IndicatorSeparator
                                                                          clearValue={[Function]}
                                                                          cx={[Function]}
                                                                          getStyles={[Function]}
                                                                          getValue={[Function]}
                                                                          hasValue={false}
                                                                          isDisabled={true}
                                                                          isFocused={false}
                                                                          isMulti={false}
                                                                          isRtl={false}
                                                                          options={Array []}
                                                                          selectOption={[Function]}
                                                                          selectProps={
                                                                            Object {
                                                                              "aria-live": "polite",
                                                                              "autoFocus": undefined,
                                                                              "backspaceRemovesValue": true,
                                                                              "blurInputOnSelect": false,
                                                                              "captureMenuScroll": false,
                                                                              "className": "select-input",
                                                                              "classNamePrefix": "select-input",
                                                                              "closeMenuOnScroll": false,
                                                                              "closeMenuOnSelect": true,
                                                                              "components": Object {
                                                                                "Input": [Function],
                                                                              },
                                                                              "controlShouldRenderValue": true,
                                                                              "delimiter": ",",
                                                                              "escapeClearsValue": false,
                                                                              "filterOption": [Function],
                                                                              "formatGroupLabel": [Function],
                                                                              "getOptionLabel": [Function],
                                                                              "getOptionValue": [Function],
                                                                              "id": "selectinput-3",
                                                                              "inputValue": "",
                                                                              "isClearable": true,
                                                                              "isDisabled": true,
                                                                              "isLoading": false,
                                                                              "isMulti": false,
                                                                              "isOptionDisabled": [Function],
                                                                              "isRtl": false,
                                                                              "isSearchable": true,
                                                                              "loadingMessage": [Function],
                                                                              "maxMenuHeight": 300,
                                                                              "menuIsOpen": false,
                                                                              "menuPlacement": "bottom",
                                                                              "menuPosition": "absolute",
                                                                              "menuShouldBlockScroll": false,
                                                                              "menuShouldScrollIntoView": true,
                                                                              "minMenuHeight": 140,
                                                                              "name": "entity-sampleSet",
                                                                              "noOptionsMessage": [Function],
                                                                              "onBlur": [Function],
                                                                              "onChange": [Function],
                                                                              "onFocus": [Function],
                                                                              "onInputChange": [Function],
                                                                              "onMenuClose": [Function],
                                                                              "onMenuOpen": [Function],
                                                                              "openMenuOnClick": true,
                                                                              "openMenuOnFocus": false,
                                                                              "options": Array [],
                                                                              "pageSize": 5,
                                                                              "placeholder": "Loading...",
                                                                              "promptTextCreator": undefined,
                                                                              "screenReaderStatus": [Function],
                                                                              "styles": Object {
                                                                                "menu": [Function],
                                                                                "multiValue": [Function],
                                                                                "multiValueLabel": [Function],
                                                                                "multiValueRemove": [Function],
                                                                              },
                                                                              "tabIndex": "0",
                                                                              "tabSelectsValue": true,
                                                                              "theme": [Function],
                                                                              "value": null,
                                                                            }
                                                                          }
                                                                          setValue={[Function]}
                                                                          theme={
                                                                            Object {
                                                                              "borderRadius": 4,
                                                                              "colors": Object {
                                                                                "danger": "#D9534F",
                                                                                "dangerLight": "#FFBDAD",
                                                                                "neutral0": "hsl(0, 0%, 100%)",
                                                                                "neutral10": "hsl(0, 0%, 90%)",
                                                                                "neutral20": "hsl(0, 0%, 80%)",
                                                                                "neutral30": "hsl(0, 0%, 70%)",
                                                                                "neutral40": "hsl(0, 0%, 60%)",
                                                                                "neutral5": "hsl(0, 0%, 95%)",
                                                                                "neutral50": "hsl(0, 0%, 50%)",
                                                                                "neutral60": "hsl(0, 0%, 40%)",
                                                                                "neutral70": "hsl(0, 0%, 30%)",
                                                                                "neutral80": "hsl(0, 0%, 20%)",
                                                                                "neutral90": "hsl(0, 0%, 10%)",
                                                                                "primary": "#2980B9",
                                                                                "primary25": "rgba(41, 128, 185, 0.1)",
                                                                                "primary50": "#F2F9FC",
                                                                                "primary75": "#009BF9",
                                                                              },
                                                                              "spacing": Object {
                                                                                "baseUnit": 4,
                                                                                "controlHeight": 38,
                                                                                "menuGutter": 8,
                                                                              },
                                                                            }
                                                                          }
                                                                        >
                                                                          <EmotionCssPropInternal
                                                                            __EMOTION_LABEL_PLEASE_DO_NOT_USE__="IndicatorSeparator"
                                                                            __EMOTION_TYPE_PLEASE_DO_NOT_USE__="span"
                                                                            className="select-input__indicator-separator"
                                                                            css={
                                                                              Object {
                                                                                "alignSelf": "stretch",
                                                                                "backgroundColor": "hsl(0, 0%, 90%)",
                                                                                "boxSizing": "border-box",
                                                                                "label": "indicatorSeparator",
                                                                                "marginBottom": 8,
                                                                                "marginTop": 8,
                                                                                "width": 1,
                                                                              }
                                                                            }
                                                                          >
                                                                            <span
                                                                              className="select-input__indicator-separator css-109onse-indicatorSeparator"
                                                                            />
                                                                          </EmotionCssPropInternal>
                                                                        </IndicatorSeparator>
                                                                        <DropdownIndicator
                                                                          clearValue={[Function]}
                                                                          cx={[Function]}
                                                                          getStyles={[Function]}
                                                                          getValue={[Function]}
                                                                          hasValue={false}
                                                                          innerProps={
                                                                            Object {
                                                                              "aria-hidden": "true",
                                                                              "onMouseDown": [Function],
                                                                              "onTouchEnd": [Function],
                                                                            }
                                                                          }
                                                                          isDisabled={true}
                                                                          isFocused={false}
                                                                          isMulti={false}
                                                                          isRtl={false}
                                                                          options={Array []}
                                                                          selectOption={[Function]}
                                                                          selectProps={
                                                                            Object {
                                                                              "aria-live": "polite",
                                                                              "autoFocus": undefined,
                                                                              "backspaceRemovesValue": true,
                                                                              "blurInputOnSelect": false,
                                                                              "captureMenuScroll": false,
                                                                              "className": "select-input",
                                                                              "classNamePrefix": "select-input",
                                                                              "closeMenuOnScroll": false,
                                                                              "closeMenuOnSelect": true,
                                                                              "components": Object {
                                                                                "Input": [Function],
                                                                              },
                                                                              "controlShouldRenderValue": true,
                                                                              "delimiter": ",",
                                                                              "escapeClearsValue": false,
                                                                              "filterOption": [Function],
                                                                              "formatGroupLabel": [Function],
                                                                              "getOptionLabel": [Function],
                                                                              "getOptionValue": [Function],
                                                                              "id": "selectinput-3",
                                                                              "inputValue": "",
                                                                              "isClearable": true,
                                                                              "isDisabled": true,
                                                                              "isLoading": false,
                                                                              "isMulti": false,
                                                                              "isOptionDisabled": [Function],
                                                                              "isRtl": false,
                                                                              "isSearchable": true,
                                                                              "loadingMessage": [Function],
                                                                              "maxMenuHeight": 300,
                                                                              "menuIsOpen": false,
                                                                              "menuPlacement": "bottom",
                                                                              "menuPosition": "absolute",
                                                                              "menuShouldBlockScroll": false,
                                                                              "menuShouldScrollIntoView": true,
                                                                              "minMenuHeight": 140,
                                                                              "name": "entity-sampleSet",
                                                                              "noOptionsMessage": [Function],
                                                                              "onBlur": [Function],
                                                                              "onChange": [Function],
                                                                              "onFocus": [Function],
                                                                              "onInputChange": [Function],
                                                                              "onMenuClose": [Function],
                                                                              "onMenuOpen": [Function],
                                                                              "openMenuOnClick": true,
                                                                              "openMenuOnFocus": false,
                                                                              "options": Array [],
                                                                              "pageSize": 5,
                                                                              "placeholder": "Loading...",
                                                                              "promptTextCreator": undefined,
                                                                              "screenReaderStatus": [Function],
                                                                              "styles": Object {
                                                                                "menu": [Function],
                                                                                "multiValue": [Function],
                                                                                "multiValueLabel": [Function],
                                                                                "multiValueRemove": [Function],
                                                                              },
                                                                              "tabIndex": "0",
                                                                              "tabSelectsValue": true,
                                                                              "theme": [Function],
                                                                              "value": null,
                                                                            }
                                                                          }
                                                                          setValue={[Function]}
                                                                          theme={
                                                                            Object {
                                                                              "borderRadius": 4,
                                                                              "colors": Object {
                                                                                "danger": "#D9534F",
                                                                                "dangerLight": "#FFBDAD",
                                                                                "neutral0": "hsl(0, 0%, 100%)",
                                                                                "neutral10": "hsl(0, 0%, 90%)",
                                                                                "neutral20": "hsl(0, 0%, 80%)",
                                                                                "neutral30": "hsl(0, 0%, 70%)",
                                                                                "neutral40": "hsl(0, 0%, 60%)",
                                                                                "neutral5": "hsl(0, 0%, 95%)",
                                                                                "neutral50": "hsl(0, 0%, 50%)",
                                                                                "neutral60": "hsl(0, 0%, 40%)",
                                                                                "neutral70": "hsl(0, 0%, 30%)",
                                                                                "neutral80": "hsl(0, 0%, 20%)",
                                                                                "neutral90": "hsl(0, 0%, 10%)",
                                                                                "primary": "#2980B9",
                                                                                "primary25": "rgba(41, 128, 185, 0.1)",
                                                                                "primary50": "#F2F9FC",
                                                                                "primary75": "#009BF9",
                                                                              },
                                                                              "spacing": Object {
                                                                                "baseUnit": 4,
                                                                                "controlHeight": 38,
                                                                                "menuGutter": 8,
                                                                              },
                                                                            }
                                                                          }
                                                                        >
                                                                          <EmotionCssPropInternal
                                                                            __EMOTION_LABEL_PLEASE_DO_NOT_USE__="DropdownIndicator"
                                                                            __EMOTION_TYPE_PLEASE_DO_NOT_USE__="div"
                                                                            aria-hidden="true"
                                                                            className="select-input__indicator select-input__dropdown-indicator"
                                                                            css={
                                                                              Object {
                                                                                ":hover": Object {
                                                                                  "color": "hsl(0, 0%, 60%)",
                                                                                },
                                                                                "boxSizing": "border-box",
                                                                                "color": "hsl(0, 0%, 80%)",
                                                                                "display": "flex",
                                                                                "label": "indicatorContainer",
                                                                                "padding": 8,
                                                                                "transition": "color 150ms",
                                                                              }
                                                                            }
                                                                            onMouseDown={[Function]}
                                                                            onTouchEnd={[Function]}
                                                                          >
                                                                            <div
                                                                              aria-hidden="true"
                                                                              className="select-input__indicator select-input__dropdown-indicator css-tlfecz-indicatorContainer"
                                                                              onMouseDown={[Function]}
                                                                              onTouchEnd={[Function]}
                                                                            >
                                                                              <DownChevron>
                                                                                <Svg
                                                                                  size={20}
                                                                                >
                                                                                  <EmotionCssPropInternal
                                                                                    __EMOTION_LABEL_PLEASE_DO_NOT_USE__="Svg"
                                                                                    __EMOTION_TYPE_PLEASE_DO_NOT_USE__="svg"
                                                                                    aria-hidden="true"
                                                                                    css={
                                                                                      Object {
                                                                                        "map": "/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */",
                                                                                        "name": "tj5bde-Svg",
                                                                                        "styles": "display:inline-block;fill:currentColor;line-height:1;stroke:currentColor;stroke-width:0;label:Svg;",
                                                                                        "toString": [Function],
                                                                                      }
                                                                                    }
                                                                                    focusable="false"
                                                                                    height={20}
                                                                                    viewBox="0 0 20 20"
                                                                                    width={20}
                                                                                  >
                                                                                    <svg
                                                                                      aria-hidden="true"
                                                                                      className="css-tj5bde-Svg"
                                                                                      focusable="false"
                                                                                      height={20}
                                                                                      viewBox="0 0 20 20"
                                                                                      width={20}
                                                                                    >
                                                                                      <path
                                                                                        d="M4.516 7.548c0.436-0.446 1.043-0.481 1.576 0l3.908 3.747 3.908-3.747c0.533-0.481 1.141-0.446 1.574 0 0.436 0.445 0.408 1.197 0 1.615-0.406 0.418-4.695 4.502-4.695 4.502-0.217 0.223-0.502 0.335-0.787 0.335s-0.57-0.112-0.789-0.335c0 0-4.287-4.084-4.695-4.502s-0.436-1.17 0-1.615z"
                                                                                      />
                                                                                    </svg>
                                                                                  </EmotionCssPropInternal>
                                                                                </Svg>
                                                                              </DownChevron>
                                                                            </div>
                                                                          </EmotionCssPropInternal>
                                                                        </DropdownIndicator>
                                                                      </div>
                                                                    </EmotionCssPropInternal>
                                                                  </IndicatorsContainer>
                                                                </div>
                                                              </EmotionCssPropInternal>
                                                            </Control>
                                                          </div>
                                                        </EmotionCssPropInternal>
                                                      </SelectContainer>
                                                    </Select>
                                                  </StateManager>
                                                </div>
                                              </div>
                                            </SelectInputImpl>
                                          </SelectInput>
                                        </QuerySelect>
                                      </div>
                                    </Col>
                                  </div>
                                </Row>
                              </div>
                            </div>
                          </Transition>
                        </Collapse>
                      </PanelCollapse>
                    </PanelBody>
                  </div>
                </Panel>
              </Uncontrolled(Panel)>
            </ForwardRef>
          </BasePropertiesPanel>
        </DataClassPropertiesPanelImpl>
      </ComponentWithDomainPropertiesPanelCollapse>
      <DomainForm
        controlledCollapse={true}
        domain={
          Immutable.Record {
            "name": "test1",
            "container": "3E40EE5E-91B7-1036-BF18-F5B7057C168C",
            "description": null,
            "domainURI": "urn:lsid:labkey.com:DataClass.Folder-5398:test1",
            "domainId": 58021,
            "allowFileLinkProperties": false,
            "allowAttachmentProperties": true,
            "allowFlagProperties": true,
            "allowTimepointProperties": false,
            "showDefaultValueSettings": false,
            "defaultDefaultValueType": "FIXED_EDITABLE",
            "defaultValueOptions": Immutable.List [
              "FIXED_EDITABLE",
              "LAST_ENTERED",
            ],
            "fields": Immutable.List [
              Immutable.Record {
                "conceptURI": null,
                "conditionalFormats": Immutable.List [],
                "defaultScale": "LINEAR",
                "defaultValueType": null,
                "defaultValue": null,
                "defaultDisplayValue": "[none]",
                "description": null,
                "dimension": false,
                "excludeFromShifting": false,
                "format": null,
                "hidden": false,
                "importAliases": null,
                "label": null,
                "lookupContainer": undefined,
                "lookupQuery": undefined,
                "lookupSchema": undefined,
                "lookupValidator": undefined,
                "measure": false,
                "mvEnabled": false,
                "name": "TextFIeld",
                "PHI": "NotPHI",
                "propertyId": 518195,
                "propertyURI": "urn:lsid:labkey.com:DataClass.Folder-5398:test1#Field1",
                "propertyValidators": Array [
                  Object {
                    "description": null,
                    "errorMessage": null,
                    "expression": "~lte=4000",
                    "name": "Text Length",
                    "new": true,
                    "properties": Object {},
                    "rowId": 261363,
                    "type": "Length",
                  },
                ],
                "rangeValidators": Immutable.List [],
                "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                "regexValidators": Immutable.List [],
                "recommendedVariable": false,
                "required": true,
                "scale": 4000,
                "URL": null,
                "shownInDetailsView": true,
                "shownInInsertView": true,
                "shownInUpdateView": true,
                "visible": true,
                "dataType": Immutable.Record {
                  "conceptURI": undefined,
                  "display": "Text",
                  "name": "string",
                  "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                  "alternateRangeURI": "xsd:string",
                  "shortDisplay": "String",
                  "lookupSchema": undefined,
                  "lookupQuery": undefined,
                },
                "lookupQueryValue": undefined,
                "lookupType": Immutable.Record {
                  "conceptURI": undefined,
                  "display": "Lookup",
                  "name": "lookup",
                  "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                  "alternateRangeURI": undefined,
                  "shortDisplay": undefined,
                  "lookupSchema": undefined,
                  "lookupQuery": undefined,
                },
                "original": Object {
                  "conceptURI": null,
                  "dataType": Immutable.Record {
                    "conceptURI": undefined,
                    "display": "Text",
                    "name": "string",
                    "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                    "alternateRangeURI": "xsd:string",
                    "shortDisplay": "String",
                    "lookupSchema": undefined,
                    "lookupQuery": undefined,
                  },
                  "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                },
                "updatedField": false,
                "isPrimaryKey": false,
                "lockType": "NotLocked",
                "wrappedColumnName": undefined,
                "disablePhiLevel": false,
                "lockExistingField": false,
                "sourceOntology": undefined,
                "conceptSubtree": undefined,
                "conceptLabelColumn": undefined,
                "conceptImportColumn": undefined,
                "principalConceptCode": undefined,
                "derivationDataScope": undefined,
                "selected": false,
              },
              Immutable.Record {
                "conceptURI": null,
                "conditionalFormats": Immutable.List [],
                "defaultScale": "LINEAR",
                "defaultValueType": "FIXED_EDITABLE",
                "defaultValue": null,
                "defaultDisplayValue": "[none]",
                "description": null,
                "dimension": false,
                "excludeFromShifting": false,
                "format": null,
                "hidden": false,
                "importAliases": null,
                "label": null,
                "lookupContainer": undefined,
                "lookupQuery": undefined,
                "lookupSchema": undefined,
                "lookupValidator": undefined,
                "measure": true,
                "mvEnabled": false,
                "name": "IntField",
                "PHI": "NotPHI",
                "propertyId": 521044,
                "propertyURI": "urn:lsid:labkey.com:DataClass.Folder-5398:test1#IntField",
                "propertyValidators": Array [],
                "rangeValidators": Immutable.List [],
                "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                "regexValidators": Immutable.List [],
                "recommendedVariable": false,
                "required": false,
                "scale": 4000,
                "URL": null,
                "shownInDetailsView": true,
                "shownInInsertView": true,
                "shownInUpdateView": true,
                "visible": true,
                "dataType": Immutable.Record {
                  "conceptURI": undefined,
                  "display": "Integer",
                  "name": "int",
                  "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                  "alternateRangeURI": "xsd:int",
                  "shortDisplay": undefined,
                  "lookupSchema": undefined,
                  "lookupQuery": undefined,
                },
                "lookupQueryValue": undefined,
                "lookupType": Immutable.Record {
                  "conceptURI": undefined,
                  "display": "Lookup",
                  "name": "lookup",
                  "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                  "alternateRangeURI": undefined,
                  "shortDisplay": undefined,
                  "lookupSchema": undefined,
                  "lookupQuery": undefined,
                },
                "original": Object {
                  "conceptURI": null,
                  "dataType": Immutable.Record {
                    "conceptURI": undefined,
                    "display": "Integer",
                    "name": "int",
                    "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                    "alternateRangeURI": "xsd:int",
                    "shortDisplay": undefined,
                    "lookupSchema": undefined,
                    "lookupQuery": undefined,
                  },
                  "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                },
                "updatedField": false,
                "isPrimaryKey": false,
                "lockType": "NotLocked",
                "wrappedColumnName": undefined,
                "disablePhiLevel": false,
                "lockExistingField": false,
                "sourceOntology": undefined,
                "conceptSubtree": undefined,
                "conceptLabelColumn": undefined,
                "conceptImportColumn": undefined,
                "principalConceptCode": undefined,
                "derivationDataScope": undefined,
                "selected": false,
              },
              Immutable.Record {
                "conceptURI": null,
                "conditionalFormats": Immutable.List [],
                "defaultScale": "LINEAR",
                "defaultValueType": "FIXED_EDITABLE",
                "defaultValue": null,
                "defaultDisplayValue": "[none]",
                "description": null,
                "dimension": false,
                "excludeFromShifting": false,
                "format": null,
                "hidden": false,
                "importAliases": null,
                "label": null,
                "lookupContainer": undefined,
                "lookupQuery": undefined,
                "lookupSchema": undefined,
                "lookupValidator": undefined,
                "measure": false,
                "mvEnabled": false,
                "name": "DateField",
                "PHI": "NotPHI",
                "propertyId": 521045,
                "propertyURI": "urn:lsid:labkey.com:DataClass.Folder-5398:test1#DateField",
                "propertyValidators": Array [],
                "rangeValidators": Immutable.List [],
                "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                "regexValidators": Immutable.List [],
                "recommendedVariable": false,
                "required": false,
                "scale": 4000,
                "URL": null,
                "shownInDetailsView": true,
                "shownInInsertView": true,
                "shownInUpdateView": true,
                "visible": true,
                "dataType": Immutable.Record {
                  "conceptURI": undefined,
                  "display": "Date Time",
                  "name": "dateTime",
                  "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                  "alternateRangeURI": "xsd:dateTime",
                  "shortDisplay": undefined,
                  "lookupSchema": undefined,
                  "lookupQuery": undefined,
                },
                "lookupQueryValue": undefined,
                "lookupType": Immutable.Record {
                  "conceptURI": undefined,
                  "display": "Lookup",
                  "name": "lookup",
                  "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                  "alternateRangeURI": undefined,
                  "shortDisplay": undefined,
                  "lookupSchema": undefined,
                  "lookupQuery": undefined,
                },
                "original": Object {
                  "conceptURI": null,
                  "dataType": Immutable.Record {
                    "conceptURI": undefined,
                    "display": "Date Time",
                    "name": "dateTime",
                    "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                    "alternateRangeURI": "xsd:dateTime",
                    "shortDisplay": undefined,
                    "lookupSchema": undefined,
                    "lookupQuery": undefined,
                  },
                  "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                },
                "updatedField": false,
                "isPrimaryKey": false,
                "lockType": "NotLocked",
                "wrappedColumnName": undefined,
                "disablePhiLevel": false,
                "lockExistingField": false,
                "sourceOntology": undefined,
                "conceptSubtree": undefined,
                "conceptLabelColumn": undefined,
                "conceptImportColumn": undefined,
                "principalConceptCode": undefined,
                "derivationDataScope": undefined,
                "selected": false,
              },
            ],
            "indices": Immutable.List [],
            "domainException": undefined,
            "mandatoryFieldNames": Immutable.List [],
            "reservedFieldNames": Immutable.List [],
            "newDesignFields": undefined,
            "instructions": null,
            "domainKindName": undefined,
          }
        }
        domainFormDisplayOptions={
          Object {
            "disableMvEnabled": false,
            "domainKindDisplayName": "data class",
            "hideAddFieldsButton": false,
            "hideConditionalFormatting": false,
            "hideFilePropertyType": false,
            "hideImportData": false,
            "hideImportExport": false,
            "hideRequired": false,
            "hideStudyPropertyTypes": false,
            "hideTextOptions": false,
            "hideValidators": false,
            "isDragDisabled": false,
            "phiLevelDisabled": false,
          }
        }
        domainIndex={0}
        headerTitle="Fields"
        helpTopic={null}
        initCollapsed={true}
        key="58021"
        onChange={[Function]}
        onToggle={[Function]}
        panelStatus="COMPLETE"
        testMode={true}
        validate={false}
      >
        <LookupProvider>
          <DomainFormImpl
            appPropertiesOnly={false}
            controlledCollapse={true}
            domain={
              Immutable.Record {
                "name": "test1",
                "container": "3E40EE5E-91B7-1036-BF18-F5B7057C168C",
                "description": null,
                "domainURI": "urn:lsid:labkey.com:DataClass.Folder-5398:test1",
                "domainId": 58021,
                "allowFileLinkProperties": false,
                "allowAttachmentProperties": true,
                "allowFlagProperties": true,
                "allowTimepointProperties": false,
                "showDefaultValueSettings": false,
                "defaultDefaultValueType": "FIXED_EDITABLE",
                "defaultValueOptions": Immutable.List [
                  "FIXED_EDITABLE",
                  "LAST_ENTERED",
                ],
                "fields": Immutable.List [
                  Immutable.Record {
                    "conceptURI": null,
                    "conditionalFormats": Immutable.List [],
                    "defaultScale": "LINEAR",
                    "defaultValueType": null,
                    "defaultValue": null,
                    "defaultDisplayValue": "[none]",
                    "description": null,
                    "dimension": false,
                    "excludeFromShifting": false,
                    "format": null,
                    "hidden": false,
                    "importAliases": null,
                    "label": null,
                    "lookupContainer": undefined,
                    "lookupQuery": undefined,
                    "lookupSchema": undefined,
                    "lookupValidator": undefined,
                    "measure": false,
                    "mvEnabled": false,
                    "name": "TextFIeld",
                    "PHI": "NotPHI",
                    "propertyId": 518195,
                    "propertyURI": "urn:lsid:labkey.com:DataClass.Folder-5398:test1#Field1",
                    "propertyValidators": Array [
                      Object {
                        "description": null,
                        "errorMessage": null,
                        "expression": "~lte=4000",
                        "name": "Text Length",
                        "new": true,
                        "properties": Object {},
                        "rowId": 261363,
                        "type": "Length",
                      },
                    ],
                    "rangeValidators": Immutable.List [],
                    "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                    "regexValidators": Immutable.List [],
                    "recommendedVariable": false,
                    "required": true,
                    "scale": 4000,
                    "URL": null,
                    "shownInDetailsView": true,
                    "shownInInsertView": true,
                    "shownInUpdateView": true,
                    "visible": true,
                    "dataType": Immutable.Record {
                      "conceptURI": undefined,
                      "display": "Text",
                      "name": "string",
                      "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                      "alternateRangeURI": "xsd:string",
                      "shortDisplay": "String",
                      "lookupSchema": undefined,
                      "lookupQuery": undefined,
                    },
                    "lookupQueryValue": undefined,
                    "lookupType": Immutable.Record {
                      "conceptURI": undefined,
                      "display": "Lookup",
                      "name": "lookup",
                      "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                      "alternateRangeURI": undefined,
                      "shortDisplay": undefined,
                      "lookupSchema": undefined,
                      "lookupQuery": undefined,
                    },
                    "original": Object {
                      "conceptURI": null,
                      "dataType": Immutable.Record {
                        "conceptURI": undefined,
                        "display": "Text",
                        "name": "string",
                        "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                        "alternateRangeURI": "xsd:string",
                        "shortDisplay": "String",
                        "lookupSchema": undefined,
                        "lookupQuery": undefined,
                      },
                      "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                    },
                    "updatedField": false,
                    "isPrimaryKey": false,
                    "lockType": "NotLocked",
                    "wrappedColumnName": undefined,
                    "disablePhiLevel": false,
                    "lockExistingField": false,
                    "sourceOntology": undefined,
                    "conceptSubtree": undefined,
                    "conceptLabelColumn": undefined,
                    "conceptImportColumn": undefined,
                    "principalConceptCode": undefined,
                    "derivationDataScope": undefined,
                    "selected": false,
                  },
                  Immutable.Record {
                    "conceptURI": null,
                    "conditionalFormats": Immutable.List [],
                    "defaultScale": "LINEAR",
                    "defaultValueType": "FIXED_EDITABLE",
                    "defaultValue": null,
                    "defaultDisplayValue": "[none]",
                    "description": null,
                    "dimension": false,
                    "excludeFromShifting": false,
                    "format": null,
                    "hidden": false,
                    "importAliases": null,
                    "label": null,
                    "lookupContainer": undefined,
                    "lookupQuery": undefined,
                    "lookupSchema": undefined,
                    "lookupValidator": undefined,
                    "measure": true,
                    "mvEnabled": false,
                    "name": "IntField",
                    "PHI": "NotPHI",
                    "propertyId": 521044,
                    "propertyURI": "urn:lsid:labkey.com:DataClass.Folder-5398:test1#IntField",
                    "propertyValidators": Array [],
                    "rangeValidators": Immutable.List [],
                    "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                    "regexValidators": Immutable.List [],
                    "recommendedVariable": false,
                    "required": false,
                    "scale": 4000,
                    "URL": null,
                    "shownInDetailsView": true,
                    "shownInInsertView": true,
                    "shownInUpdateView": true,
                    "visible": true,
                    "dataType": Immutable.Record {
                      "conceptURI": undefined,
                      "display": "Integer",
                      "name": "int",
                      "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                      "alternateRangeURI": "xsd:int",
                      "shortDisplay": undefined,
                      "lookupSchema": undefined,
                      "lookupQuery": undefined,
                    },
                    "lookupQueryValue": undefined,
                    "lookupType": Immutable.Record {
                      "conceptURI": undefined,
                      "display": "Lookup",
                      "name": "lookup",
                      "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                      "alternateRangeURI": undefined,
                      "shortDisplay": undefined,
                      "lookupSchema": undefined,
                      "lookupQuery": undefined,
                    },
                    "original": Object {
                      "conceptURI": null,
                      "dataType": Immutable.Record {
                        "conceptURI": undefined,
                        "display": "Integer",
                        "name": "int",
                        "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                        "alternateRangeURI": "xsd:int",
                        "shortDisplay": undefined,
                        "lookupSchema": undefined,
                        "lookupQuery": undefined,
                      },
                      "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                    },
                    "updatedField": false,
                    "isPrimaryKey": false,
                    "lockType": "NotLocked",
                    "wrappedColumnName": undefined,
                    "disablePhiLevel": false,
                    "lockExistingField": false,
                    "sourceOntology": undefined,
                    "conceptSubtree": undefined,
                    "conceptLabelColumn": undefined,
                    "conceptImportColumn": undefined,
                    "principalConceptCode": undefined,
                    "derivationDataScope": undefined,
                    "selected": false,
                  },
                  Immutable.Record {
                    "conceptURI": null,
                    "conditionalFormats": Immutable.List [],
                    "defaultScale": "LINEAR",
                    "defaultValueType": "FIXED_EDITABLE",
                    "defaultValue": null,
                    "defaultDisplayValue": "[none]",
                    "description": null,
                    "dimension": false,
                    "excludeFromShifting": false,
                    "format": null,
                    "hidden": false,
                    "importAliases": null,
                    "label": null,
                    "lookupContainer": undefined,
                    "lookupQuery": undefined,
                    "lookupSchema": undefined,
                    "lookupValidator": undefined,
                    "measure": false,
                    "mvEnabled": false,
                    "name": "DateField",
                    "PHI": "NotPHI",
                    "propertyId": 521045,
                    "propertyURI": "urn:lsid:labkey.com:DataClass.Folder-5398:test1#DateField",
                    "propertyValidators": Array [],
                    "rangeValidators": Immutable.List [],
                    "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                    "regexValidators": Immutable.List [],
                    "recommendedVariable": false,
                    "required": false,
                    "scale": 4000,
                    "URL": null,
                    "shownInDetailsView": true,
                    "shownInInsertView": true,
                    "shownInUpdateView": true,
                    "visible": true,
                    "dataType": Immutable.Record {
                      "conceptURI": undefined,
                      "display": "Date Time",
                      "name": "dateTime",
                      "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                      "alternateRangeURI": "xsd:dateTime",
                      "shortDisplay": undefined,
                      "lookupSchema": undefined,
                      "lookupQuery": undefined,
                    },
                    "lookupQueryValue": undefined,
                    "lookupType": Immutable.Record {
                      "conceptURI": undefined,
                      "display": "Lookup",
                      "name": "lookup",
                      "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                      "alternateRangeURI": undefined,
                      "shortDisplay": undefined,
                      "lookupSchema": undefined,
                      "lookupQuery": undefined,
                    },
                    "original": Object {
                      "conceptURI": null,
                      "dataType": Immutable.Record {
                        "conceptURI": undefined,
                        "display": "Date Time",
                        "name": "dateTime",
                        "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                        "alternateRangeURI": "xsd:dateTime",
                        "shortDisplay": undefined,
                        "lookupSchema": undefined,
                        "lookupQuery": undefined,
                      },
                      "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                    },
                    "updatedField": false,
                    "isPrimaryKey": false,
                    "lockType": "NotLocked",
                    "wrappedColumnName": undefined,
                    "disablePhiLevel": false,
                    "lockExistingField": false,
                    "sourceOntology": undefined,
                    "conceptSubtree": undefined,
                    "conceptLabelColumn": undefined,
                    "conceptImportColumn": undefined,
                    "principalConceptCode": undefined,
                    "derivationDataScope": undefined,
                    "selected": false,
                  },
                ],
                "indices": Immutable.List [],
                "domainException": undefined,
                "mandatoryFieldNames": Immutable.List [],
                "reservedFieldNames": Immutable.List [],
                "newDesignFields": undefined,
                "instructions": null,
                "domainKindName": undefined,
              }
            }
            domainFormDisplayOptions={
              Object {
                "disableMvEnabled": false,
                "domainKindDisplayName": "data class",
                "hideAddFieldsButton": false,
                "hideConditionalFormatting": false,
                "hideFilePropertyType": false,
                "hideImportData": false,
                "hideImportExport": false,
                "hideRequired": false,
                "hideStudyPropertyTypes": false,
                "hideTextOptions": false,
                "hideValidators": false,
                "isDragDisabled": false,
                "phiLevelDisabled": false,
              }
            }
            domainIndex={0}
            headerTitle="Fields"
            helpNoun="field designer"
            helpTopic={null}
            initCollapsed={true}
            isNew={false}
            onChange={[Function]}
            onToggle={[Function]}
            panelStatus="COMPLETE"
            showHeader={true}
            successBsStyle="success"
            testMode={true}
            validate={false}
          >
            <ForwardRef
              className="domain-form-panel"
              expanded={false}
              onToggle={[Function]}
            >
              <Uncontrolled(Panel)
                className="domain-form-panel"
                expanded={false}
                innerRef={null}
                onToggle={[Function]}
              >
                <Panel
                  bsClass="panel"
                  bsStyle="default"
                  className="domain-form-panel"
                  expanded={false}
                  onToggle={[Function]}
                >
                  <div
                    className="domain-form-panel panel panel-default"
                  >
                    <CollapsiblePanelHeader
                      collapsed={true}
                      controlledCollapse={true}
                      headerDetails="3 Fields Defined"
                      id="domainpropertiesrow-test1-hdr"
                      isValid={true}
                      panelStatus="COMPLETE"
                      title="Fields"
                      togglePanel={[Function]}
                    >
                      <PanelHeading
                        bsClass="panel"
                        className="domain-panel-header domain-heading-collapsible domain-panel-header-collapsed"
                        componentClass="div"
                        id="domainpropertiesrow-test1-hdr"
                        onClick={[Function]}
                      >
                        <div
                          className="domain-panel-header domain-heading-collapsible domain-panel-header-collapsed panel-heading"
                          id="domainpropertiesrow-test1-hdr"
                          onClick={[Function]}
                        >
                          <span
                            className="domain-panel-status-icon domain-panel-status-icon-green"
                          >
                            <FontAwesomeIcon
                              border={false}
                              className=""
                              fixedWidth={false}
                              flip={null}
                              icon={
                                Object {
                                  "icon": Array [
                                    512,
                                    512,
                                    Array [],
                                    "f058",
                                    "M504 256c0 136.967-111.033 248-248 248S8 392.967 8 256 119.033 8 256 8s248 111.033 248 248zM227.314 387.314l184-184c6.248-6.248 6.248-16.379 0-22.627l-22.627-22.627c-6.248-6.249-16.379-6.249-22.628 0L216 308.118l-70.059-70.059c-6.248-6.248-16.379-6.248-22.628 0l-22.627 22.627c-6.248 6.248-6.248 16.379 0 22.627l104 104c6.249 6.249 16.379 6.249 22.628.001z",
                                  ],
                                  "iconName": "check-circle",
                                  "prefix": "fas",
                                }
                              }
                              inverse={false}
                              listItem={false}
                              mask={null}
                              pull={null}
                              pulse={false}
                              rotation={null}
                              size={null}
                              spin={false}
                              swapOpacity={false}
                              symbol={false}
                              title=""
                              transform={null}
                            >
                              <svg
                                aria-hidden="true"
                                className="svg-inline--fa fa-check-circle fa-w-16 "
                                data-icon="check-circle"
                                data-prefix="fas"
                                focusable="false"
                                role="img"
                                style={Object {}}
                                viewBox="0 0 512 512"
                                xmlns="http://www.w3.org/2000/svg"
                              >
                                <path
                                  d="M504 256c0 136.967-111.033 248-248 248S8 392.967 8 256 119.033 8 256 8s248 111.033 248 248zM227.314 387.314l184-184c6.248-6.248 6.248-16.379 0-22.627l-22.627-22.627c-6.248-6.249-16.379-6.249-22.628 0L216 308.118l-70.059-70.059c-6.248-6.248-16.379-6.248-22.628 0l-22.627 22.627c-6.248 6.248-6.248 16.379 0 22.627l104 104c6.249 6.249 16.379 6.249 22.628.001z"
                                  fill="currentColor"
                                  style={Object {}}
                                />
                              </svg>
                            </FontAwesomeIcon>
                          </span>
                          <span
                            className="domain-panel-title"
                          >
                            Fields
                          </span>
                          <span
                            className="pull-right"
                          >
                            <FontAwesomeIcon
                              border={false}
                              className="domain-form-expand-btn"
                              fixedWidth={false}
                              flip={null}
                              icon={
                                Object {
                                  "icon": Array [
                                    448,
                                    512,
                                    Array [],
                                    "f0fe",
                                    "M400 32H48C21.5 32 0 53.5 0 80v352c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V80c0-26.5-21.5-48-48-48zm-32 252c0 6.6-5.4 12-12 12h-92v92c0 6.6-5.4 12-12 12h-56c-6.6 0-12-5.4-12-12v-92H92c-6.6 0-12-5.4-12-12v-56c0-6.6 5.4-12 12-12h92v-92c0-6.6 5.4-12 12-12h56c6.6 0 12 5.4 12 12v92h92c6.6 0 12 5.4 12 12v56z",
                                  ],
                                  "iconName": "plus-square",
                                  "prefix": "fas",
                                }
                              }
                              inverse={false}
                              listItem={false}
                              mask={null}
                              pull={null}
                              pulse={false}
                              rotation={null}
                              size="lg"
                              spin={false}
                              swapOpacity={false}
                              symbol={false}
                              title=""
                              transform={null}
                            >
                              <svg
                                aria-hidden="true"
                                className="svg-inline--fa fa-plus-square fa-w-14 fa-lg domain-form-expand-btn"
                                data-icon="plus-square"
                                data-prefix="fas"
                                focusable="false"
                                role="img"
                                style={Object {}}
                                viewBox="0 0 448 512"
                                xmlns="http://www.w3.org/2000/svg"
                              >
                                <path
                                  d="M400 32H48C21.5 32 0 53.5 0 80v352c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V80c0-26.5-21.5-48-48-48zm-32 252c0 6.6-5.4 12-12 12h-92v92c0 6.6-5.4 12-12 12h-56c-6.6 0-12-5.4-12-12v-92H92c-6.6 0-12-5.4-12-12v-56c0-6.6 5.4-12 12-12h92v-92c0-6.6 5.4-12 12-12h56c6.6 0 12 5.4 12 12v92h92c6.6 0 12 5.4 12 12v56z"
                                  fill="currentColor"
                                  style={Object {}}
                                />
                              </svg>
                            </FontAwesomeIcon>
                          </span>
                          <span
                            className="domain-panel-header-fields-defined"
                          >
                            3 Fields Defined
                          </span>
                        </div>
                      </PanelHeading>
                    </CollapsiblePanelHeader>
                    <PanelBody
                      bsClass="panel"
                      className="domain-field-top-noBuffer"
                      collapsible={true}
                    >
                      <PanelCollapse
                        bsClass="panel"
                      >
                        <Collapse
                          appear={false}
                          dimension="height"
                          getDimensionValue={[Function]}
                          in={false}
                          mountOnEnter={false}
                          timeout={300}
                          unmountOnExit={false}
                        >
                          <Transition
                            appear={false}
                            aria-expanded={null}
                            enter={true}
                            exit={true}
                            in={false}
                            mountOnEnter={false}
                            onEnter={[Function]}
                            onEntered={[Function]}
                            onEntering={[Function]}
                            onExit={[Function]}
                            onExited={[Function]}
                            onExiting={[Function]}
                            timeout={300}
                            unmountOnExit={false}
                          >
                            <div
                              aria-expanded={null}
                              className="panel-collapse collapse"
                            >
                              <div
                                className="domain-field-top-noBuffer panel-body"
                              >
                                <Row
                                  bsClass="row"
                                  className="domain-field-toolbar"
                                  componentClass="div"
                                >
                                  <div
                                    className="domain-field-toolbar row"
                                  >
                                    <Col
                                      bsClass="col"
                                      componentClass="div"
                                      xs={4}
                                    >
                                      <div
                                        className="col-xs-4"
                                      >
                                        <AddEntityButton
                                          buttonClass="domain-toolbar-add-btn"
                                          containerClass="container--toolbar-button"
                                          entity="Field"
                                          onClick={[Function]}
                                        >
                                          <ActionButton
                                            buttonClass="domain-toolbar-add-btn"
                                            containerClass="container--toolbar-button"
                                            helperTitle="More Info"
                                            onClick={[Function]}
                                          >
                                            <div
                                              className="container--toolbar-button"
                                            >
                                              <div
                                                className="domain-toolbar-add-btn"
                                              >
                                                <span
                                                  className="container--action-button btn btn-default"
                                                  onClick={[Function]}
                                                >
                                                  <i
                                                    className="fa fa-plus-circle container--addition-icon"
                                                  />
                                                   Add 
                                                  Field
                                                </span>
                                              </div>
                                            </div>
                                          </ActionButton>
                                        </AddEntityButton>
                                        <ActionButton
                                          buttonClass="domain-toolbar-delete-btn"
                                          containerClass="container--toolbar-button"
                                          disabled={true}
                                          helperTitle="More Info"
                                          onClick={[Function]}
                                        >
                                          <div
                                            className="container--toolbar-button"
                                          >
                                            <div
                                              className="domain-toolbar-delete-btn"
                                            >
                                              <span
                                                className="container--action-button btn btn-default disabled"
                                              >
                                                <i
                                                  className="fa fa-trash domain-toolbar-export-btn-icon"
                                                />
                                                 Delete
                                              </span>
                                            </div>
                                          </div>
                                        </ActionButton>
                                        <ActionButton
                                          buttonClass="domain-toolbar-export-btn"
                                          containerClass="container--toolbar-button"
                                          disabled={false}
                                          helperTitle="More Info"
                                          onClick={[Function]}
                                        >
                                          <div
                                            className="container--toolbar-button"
                                          >
                                            <div
                                              className="domain-toolbar-export-btn"
                                            >
                                              <span
                                                className="container--action-button btn btn-default"
                                                onClick={[Function]}
                                              >
                                                <i
                                                  className="fa fa-download domain-toolbar-export-btn-icon"
                                                />
                                                 Export
                                              </span>
                                            </div>
                                          </div>
                                        </ActionButton>
                                      </div>
                                    </Col>
                                    <Col
                                      bsClass="col"
                                      componentClass="div"
                                      xs={8}
                                    >
                                      <div
                                        className="col-xs-8"
                                      >
                                        <div
                                          className="pull-right domain-field-toolbar-right-aligned"
                                        >
                                          <FormControl
                                            bsClass="form-control"
                                            className="domain-search-input"
                                            componentClass="input"
                                            id="domain-search-name-0"
                                            onChange={[Function]}
                                            placeholder="Search Fields"
                                            type="text"
                                          >
                                            <input
                                              className="domain-search-input form-control"
                                              id="domain-search-name-0"
                                              onChange={[Function]}
                                              placeholder="Search Fields"
                                              type="text"
                                            />
                                          </FormControl>
                                        </div>
                                      </div>
                                    </Col>
                                  </div>
                                </Row>
                                <Row
                                  bsClass="row"
                                  className=""
                                  componentClass="div"
                                >
                                  <div
                                    className="row"
                                  >
                                    <Col
                                      bsClass="col"
                                      componentClass="div"
                                      xs={12}
                                    >
                                      <div
                                        className="col-xs-12"
                                      />
                                    </Col>
                                  </div>
                                </Row>
                                <DragDropContext
                                  onBeforeDragStart={[Function]}
                                  onDragEnd={[Function]}
                                >
                                  <ErrorBoundary>
                                    <App
                                      contextId="0"
                                      dragHandleUsageInstructions="
  Press space bar to start a drag.
  When dragging you can use the arrow keys to move the item around and escape to cancel.
  Some screen readers may require you to be in focus mode or to use your pass through key
"
                                      onBeforeDragStart={[Function]}
                                      onDragEnd={[Function]}
                                      setCallbacks={[Function]}
                                    >
                                      <Provider
                                        context={
                                          Object {
                                            "$$typeof": Symbol(react.context),
                                            "Consumer": Object {
                                              "$$typeof": Symbol(react.context),
                                              "_calculateChangedBits": null,
                                              "_context": [Circular],
                                            },
                                            "Provider": Object {
                                              "$$typeof": Symbol(react.provider),
                                              "_context": [Circular],
                                            },
                                            "_calculateChangedBits": null,
                                            "_currentRenderer": Object {},
                                            "_currentRenderer2": null,
                                            "_currentValue": null,
                                            "_currentValue2": null,
                                            "_threadCount": 0,
                                          }
                                        }
                                        store={
                                          Object {
                                            "@@observable": [Function],
                                            "dispatch": [Function],
                                            "getState": [Function],
                                            "replaceReducer": [Function],
                                            "subscribe": [Function],
                                          }
                                        }
                                      >
                                        <Container>
                                          <div
                                            onScroll={[Function]}
                                            onTouchEnd={[Function]}
                                            onTouchMove={[Function]}
                                            onTouchStart={[Function]}
                                          >
                                            <Sticky
                                              bottomOffset={0}
                                              disableCompensation={false}
                                              disableHardwareAcceleration={false}
                                              relative={false}
                                              topOffset={0}
                                            >
                                              <div>
                                                <div />
                                                <div
                                                  style={
                                                    Object {
                                                      "top": 0,
                                                      "zIndex": 1000,
                                                    }
                                                  }
                                                >
                                                  <div
                                                    className="domain-field-row domain-row-border-default domain-floating-hdr"
                                                  >
                                                    <Alert
                                                      bsStyle="info"
                                                    />
                                                    <Row
                                                      bsClass="row"
                                                      componentClass="div"
                                                    >
                                                      <div
                                                        className="row"
                                                      >
                                                        <div
                                                          className="domain-field-header"
                                                        >
                                                          0
                                                           
                                                          fields
                                                           selected
                                                          <Button
                                                            active={false}
                                                            block={false}
                                                            bsClass="btn"
                                                            bsStyle="default"
                                                            className="domain-panel-header-clear-all"
                                                            disabled={true}
                                                            onClick={[Function]}
                                                          >
                                                            <button
                                                              className="domain-panel-header-clear-all btn btn-default"
                                                              disabled={true}
                                                              onClick={[Function]}
                                                              type="button"
                                                            >
                                                              Clear
                                                            </button>
                                                          </Button>
                                                        </div>
                                                      </div>
                                                    </Row>
                                                    <Row
                                                      bsClass="row"
                                                      className="domain-row-container"
                                                      componentClass="div"
                                                    >
                                                      <div
                                                        className="domain-row-container row"
                                                      >
                                                        <div
                                                          className="domain-row-handle"
                                                        />
                                                        <div
                                                          className="domain-row-action-section"
                                                        >
                                                          <Checkbox
                                                            bsClass="checkbox"
                                                            checked={false}
                                                            className="domain-field-check-icon"
                                                            disabled={false}
                                                            id="domain-select-all-checkbox"
                                                            inline={false}
                                                            name="domain-select-all-checkbox"
                                                            onChange={[Function]}
                                                            title=""
                                                          >
                                                            <div
                                                              className="domain-field-check-icon checkbox"
                                                            >
                                                              <label
                                                                title=""
                                                              >
                                                                <input
                                                                  checked={false}
                                                                  disabled={false}
                                                                  id="domain-select-all-checkbox"
                                                                  name="domain-select-all-checkbox"
                                                                  onChange={[Function]}
                                                                  type="checkbox"
                                                                />
                                                              </label>
                                                            </div>
                                                          </Checkbox>
                                                        </div>
                                                        <div>
                                                          <Col
                                                            bsClass="col"
                                                            className="domain-row-base-fields"
                                                            componentClass="div"
                                                            xs={6}
                                                          >
                                                            <div
                                                              className="domain-row-base-fields col-xs-6"
                                                            >
                                                              <Col
                                                                bsClass="col"
                                                                componentClass="div"
                                                                xs={6}
                                                              >
                                                                <div
                                                                  className="col-xs-6"
                                                                >
                                                                  <b>
                                                                    Name *
                                                                  </b>
                                                                </div>
                                                              </Col>
                                                              <Col
                                                                bsClass="col"
                                                                componentClass="div"
                                                                xs={4}
                                                              >
                                                                <div
                                                                  className="col-xs-4"
                                                                >
                                                                  <b>
                                                                    Data Type *
                                                                  </b>
                                                                </div>
                                                              </Col>
                                                              <Col
                                                                bsClass="col"
                                                                componentClass="div"
                                                                xs={2}
                                                              >
                                                                <div
                                                                  className="col-xs-2"
                                                                >
                                                                  <b>
                                                                    Required
                                                                  </b>
                                                                </div>
                                                              </Col>
                                                            </div>
                                                          </Col>
                                                          <Col
                                                            bsClass="col"
                                                            componentClass="div"
                                                            xs={6}
                                                          >
                                                            <div
                                                              className="col-xs-6"
                                                            >
                                                              <b>
                                                                Details
                                                              </b>
                                                            </div>
                                                          </Col>
                                                        </div>
                                                      </div>
                                                    </Row>
                                                  </div>
                                                </div>
                                              </div>
                                            </Sticky>
                                            <Connect(Droppable)
                                              direction="vertical"
                                              droppableId="domain-form-droppable"
                                              getContainerForClone={[Function]}
                                              ignoreContainerClipping={false}
                                              isCombineEnabled={false}
                                              isDropDisabled={false}
                                              mode="standard"
                                              renderClone={null}
                                              type="DEFAULT"
                                            >
                                              <Droppable
                                                direction="vertical"
                                                droppableId="domain-form-droppable"
                                                getContainerForClone={[Function]}
                                                ignoreContainerClipping={false}
                                                isCombineEnabled={false}
                                                isDropDisabled={false}
                                                mode="standard"
                                                placeholder={null}
                                                renderClone={null}
                                                shouldAnimatePlaceholder={false}
                                                snapshot={
                                                  Object {
                                                    "draggingFromThisWith": null,
                                                    "draggingOverWith": null,
                                                    "isDraggingOver": false,
                                                    "isUsingPlaceholder": false,
                                                  }
                                                }
                                                type="DEFAULT"
                                                updateViewportMaxScroll={[Function]}
                                                useClone={null}
                                              >
                                                <div
                                                  data-rbd-droppable-context-id="0"
                                                  data-rbd-droppable-id="domain-form-droppable"
                                                >
                                                  <Form
                                                    bsClass="form"
                                                    componentClass="form"
                                                    horizontal={false}
                                                    inline={false}
                                                  >
                                                    <form
                                                      className=""
                                                    >
                                                      <DomainRow
                                                        appPropertiesOnly={false}
                                                        availableTypes={
                                                          Immutable.List [
                                                            Immutable.Record {
                                                              "conceptURI": undefined,
                                                              "display": "Text",
                                                              "name": "string",
                                                              "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                              "alternateRangeURI": "xsd:string",
                                                              "shortDisplay": "String",
                                                              "lookupSchema": undefined,
                                                              "lookupQuery": undefined,
                                                            },
                                                            Immutable.Record {
                                                              "conceptURI": undefined,
                                                              "display": "Multi-Line Text",
                                                              "name": "multiLine",
                                                              "rangeURI": "http://www.w3.org/2001/XMLSchema#multiLine",
                                                              "alternateRangeURI": undefined,
                                                              "shortDisplay": undefined,
                                                              "lookupSchema": undefined,
                                                              "lookupQuery": undefined,
                                                            },
                                                            Immutable.Record {
                                                              "conceptURI": undefined,
                                                              "display": "Boolean",
                                                              "name": "boolean",
                                                              "rangeURI": "http://www.w3.org/2001/XMLSchema#boolean",
                                                              "alternateRangeURI": "xsd:boolean",
                                                              "shortDisplay": undefined,
                                                              "lookupSchema": undefined,
                                                              "lookupQuery": undefined,
                                                            },
                                                            Immutable.Record {
                                                              "conceptURI": undefined,
                                                              "display": "Integer",
                                                              "name": "int",
                                                              "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                                              "alternateRangeURI": "xsd:int",
                                                              "shortDisplay": undefined,
                                                              "lookupSchema": undefined,
                                                              "lookupQuery": undefined,
                                                            },
                                                            Immutable.Record {
                                                              "conceptURI": undefined,
                                                              "display": "Decimal (floating point)",
                                                              "name": "double",
                                                              "rangeURI": "http://www.w3.org/2001/XMLSchema#double",
                                                              "alternateRangeURI": "xsd:double",
                                                              "shortDisplay": undefined,
                                                              "lookupSchema": undefined,
                                                              "lookupQuery": undefined,
                                                            },
                                                            Immutable.Record {
                                                              "conceptURI": undefined,
                                                              "display": "Date Time",
                                                              "name": "dateTime",
                                                              "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                                                              "alternateRangeURI": "xsd:dateTime",
                                                              "shortDisplay": undefined,
                                                              "lookupSchema": undefined,
                                                              "lookupQuery": undefined,
                                                            },
                                                            Immutable.Record {
                                                              "conceptURI": "http://www.labkey.org/exp/xml#flag",
                                                              "display": "Flag",
                                                              "name": "flag",
                                                              "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                              "alternateRangeURI": undefined,
                                                              "shortDisplay": undefined,
                                                              "lookupSchema": undefined,
                                                              "lookupQuery": undefined,
                                                            },
                                                            Immutable.Record {
                                                              "conceptURI": undefined,
                                                              "display": "Attachment",
                                                              "name": "attachment",
                                                              "rangeURI": "http://www.labkey.org/exp/xml#attachment",
                                                              "alternateRangeURI": undefined,
                                                              "shortDisplay": undefined,
                                                              "lookupSchema": undefined,
                                                              "lookupQuery": undefined,
                                                            },
                                                            Immutable.Record {
                                                              "conceptURI": undefined,
                                                              "display": "User",
                                                              "name": "users",
                                                              "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                                              "alternateRangeURI": undefined,
                                                              "shortDisplay": undefined,
                                                              "lookupSchema": "core",
                                                              "lookupQuery": "users",
                                                            },
                                                            Immutable.Record {
                                                              "conceptURI": "http://cpas.labkey.com/Study#ParticipantId",
                                                              "display": "Subject/Participant",
                                                              "name": "ParticipantId",
                                                              "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                              "alternateRangeURI": undefined,
                                                              "shortDisplay": undefined,
                                                              "lookupSchema": undefined,
                                                              "lookupQuery": undefined,
                                                            },
                                                            Immutable.Record {
                                                              "conceptURI": undefined,
                                                              "display": "Lookup",
                                                              "name": "lookup",
                                                              "rangeURI": undefined,
                                                              "alternateRangeURI": undefined,
                                                              "shortDisplay": undefined,
                                                              "lookupSchema": undefined,
                                                              "lookupQuery": undefined,
                                                            },
                                                            Immutable.Record {
                                                              "conceptURI": "http://www.labkey.org/exp/xml#sample",
                                                              "display": "Sample",
                                                              "name": "sample",
                                                              "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                                              "alternateRangeURI": undefined,
                                                              "shortDisplay": undefined,
                                                              "lookupSchema": undefined,
                                                              "lookupQuery": undefined,
                                                            },
                                                          ]
                                                        }
                                                        defaultDefaultValueType="FIXED_EDITABLE"
                                                        defaultValueOptions={
                                                          Immutable.List [
                                                            "FIXED_EDITABLE",
                                                            "LAST_ENTERED",
                                                          ]
                                                        }
                                                        domainFormDisplayOptions={
                                                          Object {
                                                            "disableMvEnabled": false,
                                                            "domainKindDisplayName": "data class",
                                                            "hideAddFieldsButton": false,
                                                            "hideConditionalFormatting": false,
                                                            "hideFilePropertyType": false,
                                                            "hideImportData": false,
                                                            "hideImportExport": false,
                                                            "hideRequired": false,
                                                            "hideStudyPropertyTypes": false,
                                                            "hideTextOptions": false,
                                                            "hideValidators": false,
                                                            "isDragDisabled": false,
                                                            "phiLevelDisabled": false,
                                                          }
                                                        }
                                                        domainId={58021}
                                                        domainIndex={0}
                                                        dragging={false}
                                                        expandTransition={300}
                                                        expanded={false}
                                                        field={
                                                          Immutable.Record {
                                                            "conceptURI": null,
                                                            "conditionalFormats": Immutable.List [],
                                                            "defaultScale": "LINEAR",
                                                            "defaultValueType": null,
                                                            "defaultValue": null,
                                                            "defaultDisplayValue": "[none]",
                                                            "description": null,
                                                            "dimension": false,
                                                            "excludeFromShifting": false,
                                                            "format": null,
                                                            "hidden": false,
                                                            "importAliases": null,
                                                            "label": null,
                                                            "lookupContainer": undefined,
                                                            "lookupQuery": undefined,
                                                            "lookupSchema": undefined,
                                                            "lookupValidator": undefined,
                                                            "measure": false,
                                                            "mvEnabled": false,
                                                            "name": "TextFIeld",
                                                            "PHI": "NotPHI",
                                                            "propertyId": 518195,
                                                            "propertyURI": "urn:lsid:labkey.com:DataClass.Folder-5398:test1#Field1",
                                                            "propertyValidators": Array [
                                                              Object {
                                                                "description": null,
                                                                "errorMessage": null,
                                                                "expression": "~lte=4000",
                                                                "name": "Text Length",
                                                                "new": true,
                                                                "properties": Object {},
                                                                "rowId": 261363,
                                                                "type": "Length",
                                                              },
                                                            ],
                                                            "rangeValidators": Immutable.List [],
                                                            "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                            "regexValidators": Immutable.List [],
                                                            "recommendedVariable": false,
                                                            "required": true,
                                                            "scale": 4000,
                                                            "URL": null,
                                                            "shownInDetailsView": true,
                                                            "shownInInsertView": true,
                                                            "shownInUpdateView": true,
                                                            "visible": true,
                                                            "dataType": Immutable.Record {
                                                              "conceptURI": undefined,
                                                              "display": "Text",
                                                              "name": "string",
                                                              "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                              "alternateRangeURI": "xsd:string",
                                                              "shortDisplay": "String",
                                                              "lookupSchema": undefined,
                                                              "lookupQuery": undefined,
                                                            },
                                                            "lookupQueryValue": undefined,
                                                            "lookupType": Immutable.Record {
                                                              "conceptURI": undefined,
                                                              "display": "Lookup",
                                                              "name": "lookup",
                                                              "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                              "alternateRangeURI": undefined,
                                                              "shortDisplay": undefined,
                                                              "lookupSchema": undefined,
                                                              "lookupQuery": undefined,
                                                            },
                                                            "original": Object {
                                                              "conceptURI": null,
                                                              "dataType": Immutable.Record {
                                                                "conceptURI": undefined,
                                                                "display": "Text",
                                                                "name": "string",
                                                                "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                                "alternateRangeURI": "xsd:string",
                                                                "shortDisplay": "String",
                                                                "lookupSchema": undefined,
                                                                "lookupQuery": undefined,
                                                              },
                                                              "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                            },
                                                            "updatedField": false,
                                                            "isPrimaryKey": false,
                                                            "lockType": "NotLocked",
                                                            "wrappedColumnName": undefined,
                                                            "disablePhiLevel": false,
                                                            "lockExistingField": false,
                                                            "sourceOntology": undefined,
                                                            "conceptSubtree": undefined,
                                                            "conceptLabelColumn": undefined,
                                                            "conceptImportColumn": undefined,
                                                            "principalConceptCode": undefined,
                                                            "derivationDataScope": undefined,
                                                            "selected": false,
                                                          }
                                                        }
                                                        fieldDetailsInfo={Object {}}
                                                        getDomainFields={[Function]}
                                                        helpNoun="field designer"
                                                        index={0}
                                                        isDragDisabled={false}
                                                        key="domain-row-key-0"
                                                        maxPhiLevel="NotPHI"
                                                        onChange={[Function]}
                                                        onDelete={[Function]}
                                                        onExpand={[Function]}
                                                        showDefaultValueSettings={false}
                                                        successBsStyle="success"
                                                      >
                                                        <PublicDraggable
                                                          draggableId="domainpropertiesrow-domaindrag-0-0"
                                                          index={0}
                                                          isDragDisabled={false}
                                                        >
                                                          <PrivateDraggable
                                                            canDragInteractiveElements={false}
                                                            draggableId="domainpropertiesrow-domaindrag-0-0"
                                                            index={0}
                                                            isClone={false}
                                                            isDragDisabled={false}
                                                            isEnabled={true}
                                                            shouldRespectForcePress={false}
                                                          >
                                                            <Connect(Draggable)
                                                              canDragInteractiveElements={false}
                                                              draggableId="domainpropertiesrow-domaindrag-0-0"
                                                              index={0}
                                                              isClone={false}
                                                              isDragDisabled={false}
                                                              isEnabled={true}
                                                              shouldRespectForcePress={false}
                                                            >
                                                              <Draggable
                                                                canDragInteractiveElements={false}
                                                                draggableId="domainpropertiesrow-domaindrag-0-0"
                                                                dropAnimationFinished={[Function]}
                                                                index={0}
                                                                isClone={false}
                                                                isDragDisabled={false}
                                                                isEnabled={true}
                                                                mapped={
                                                                  Object {
                                                                    "combineTargetFor": null,
                                                                    "offset": Object {
                                                                      "x": 0,
                                                                      "y": 0,
                                                                    },
                                                                    "shouldAnimateDisplacement": true,
                                                                    "snapshot": Object {
                                                                      "combineTargetFor": null,
                                                                      "combineWith": null,
                                                                      "draggingOver": null,
                                                                      "dropAnimation": null,
                                                                      "isClone": false,
                                                                      "isDragging": false,
                                                                      "isDropAnimating": false,
                                                                      "mode": null,
                                                                    },
                                                                    "type": "SECONDARY",
                                                                  }
                                                                }
                                                                shouldRespectForcePress={false}
                                                              >
                                                                <div
                                                                  className="domain-field-row domain-row-border-default"
                                                                  data-rbd-draggable-context-id="0"
                                                                  data-rbd-draggable-id="domainpropertiesrow-domaindrag-0-0"
                                                                  onTransitionEnd={null}
                                                                  style={
                                                                    Object {
                                                                      "transform": null,
                                                                      "transition": null,
                                                                    }
                                                                  }
                                                                  tabIndex={0}
                                                                >
                                                                  <Row
                                                                    bsClass="row"
                                                                    className="domain-row-container"
                                                                    componentClass="div"
                                                                    key="domainpropertiesrow-domainrow-0-0"
                                                                  >
                                                                    <div
                                                                      className="domain-row-container row"
                                                                    >
                                                                      <AdvancedSettings
                                                                        defaultDefaultValueType="FIXED_EDITABLE"
                                                                        defaultValueOptions={
                                                                          Immutable.List [
                                                                            "FIXED_EDITABLE",
                                                                            "LAST_ENTERED",
                                                                          ]
                                                                        }
                                                                        domainFormDisplayOptions={
                                                                          Object {
                                                                            "disableMvEnabled": false,
                                                                            "domainKindDisplayName": "data class",
                                                                            "hideAddFieldsButton": false,
                                                                            "hideConditionalFormatting": false,
                                                                            "hideFilePropertyType": false,
                                                                            "hideImportData": false,
                                                                            "hideImportExport": false,
                                                                            "hideRequired": false,
                                                                            "hideStudyPropertyTypes": false,
                                                                            "hideTextOptions": false,
                                                                            "hideValidators": false,
                                                                            "isDragDisabled": false,
                                                                            "phiLevelDisabled": false,
                                                                          }
                                                                        }
                                                                        domainId={58021}
                                                                        domainIndex={0}
                                                                        field={
                                                                          Immutable.Record {
                                                                            "conceptURI": null,
                                                                            "conditionalFormats": Immutable.List [],
                                                                            "defaultScale": "LINEAR",
                                                                            "defaultValueType": null,
                                                                            "defaultValue": null,
                                                                            "defaultDisplayValue": "[none]",
                                                                            "description": null,
                                                                            "dimension": false,
                                                                            "excludeFromShifting": false,
                                                                            "format": null,
                                                                            "hidden": false,
                                                                            "importAliases": null,
                                                                            "label": null,
                                                                            "lookupContainer": undefined,
                                                                            "lookupQuery": undefined,
                                                                            "lookupSchema": undefined,
                                                                            "lookupValidator": undefined,
                                                                            "measure": false,
                                                                            "mvEnabled": false,
                                                                            "name": "TextFIeld",
                                                                            "PHI": "NotPHI",
                                                                            "propertyId": 518195,
                                                                            "propertyURI": "urn:lsid:labkey.com:DataClass.Folder-5398:test1#Field1",
                                                                            "propertyValidators": Array [
                                                                              Object {
                                                                                "description": null,
                                                                                "errorMessage": null,
                                                                                "expression": "~lte=4000",
                                                                                "name": "Text Length",
                                                                                "new": true,
                                                                                "properties": Object {},
                                                                                "rowId": 261363,
                                                                                "type": "Length",
                                                                              },
                                                                            ],
                                                                            "rangeValidators": Immutable.List [],
                                                                            "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                                            "regexValidators": Immutable.List [],
                                                                            "recommendedVariable": false,
                                                                            "required": true,
                                                                            "scale": 4000,
                                                                            "URL": null,
                                                                            "shownInDetailsView": true,
                                                                            "shownInInsertView": true,
                                                                            "shownInUpdateView": true,
                                                                            "visible": true,
                                                                            "dataType": Immutable.Record {
                                                                              "conceptURI": undefined,
                                                                              "display": "Text",
                                                                              "name": "string",
                                                                              "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                                              "alternateRangeURI": "xsd:string",
                                                                              "shortDisplay": "String",
                                                                              "lookupSchema": undefined,
                                                                              "lookupQuery": undefined,
                                                                            },
                                                                            "lookupQueryValue": undefined,
                                                                            "lookupType": Immutable.Record {
                                                                              "conceptURI": undefined,
                                                                              "display": "Lookup",
                                                                              "name": "lookup",
                                                                              "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                                              "alternateRangeURI": undefined,
                                                                              "shortDisplay": undefined,
                                                                              "lookupSchema": undefined,
                                                                              "lookupQuery": undefined,
                                                                            },
                                                                            "original": Object {
                                                                              "conceptURI": null,
                                                                              "dataType": Immutable.Record {
                                                                                "conceptURI": undefined,
                                                                                "display": "Text",
                                                                                "name": "string",
                                                                                "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                                                "alternateRangeURI": "xsd:string",
                                                                                "shortDisplay": "String",
                                                                                "lookupSchema": undefined,
                                                                                "lookupQuery": undefined,
                                                                              },
                                                                              "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                                            },
                                                                            "updatedField": false,
                                                                            "isPrimaryKey": false,
                                                                            "lockType": "NotLocked",
                                                                            "wrappedColumnName": undefined,
                                                                            "disablePhiLevel": false,
                                                                            "lockExistingField": false,
                                                                            "sourceOntology": undefined,
                                                                            "conceptSubtree": undefined,
                                                                            "conceptLabelColumn": undefined,
                                                                            "conceptImportColumn": undefined,
                                                                            "principalConceptCode": undefined,
                                                                            "derivationDataScope": undefined,
                                                                            "selected": false,
                                                                          }
                                                                        }
                                                                        helpNoun="field designer"
                                                                        index={0}
                                                                        label="TextFIeld"
                                                                        maxPhiLevel="NotPHI"
                                                                        onApply={[Function]}
                                                                        onHide={[Function]}
                                                                        show={false}
                                                                        showDefaultValueSettings={false}
                                                                        successBsStyle="success"
                                                                      >
                                                                        <Modal
                                                                          animation={true}
                                                                          autoFocus={true}
                                                                          backdrop={true}
                                                                          bsClass="modal"
                                                                          dialogComponentClass={[Function]}
                                                                          enforceFocus={true}
                                                                          keyboard={true}
                                                                          manager={
                                                                            ModalManager {
                                                                              "add": [Function],
                                                                              "containers": Array [],
                                                                              "data": Array [],
                                                                              "handleContainerOverflow": true,
                                                                              "hideSiblingNodes": true,
                                                                              "isTopModal": [Function],
                                                                              "modals": Array [],
                                                                              "remove": [Function],
                                                                            }
                                                                          }
                                                                          onEnter={[Function]}
                                                                          onHide={[Function]}
                                                                          renderBackdrop={[Function]}
                                                                          restoreFocus={true}
                                                                          show={false}
                                                                        >
                                                                          <Modal
                                                                            autoFocus={true}
                                                                            backdrop={true}
                                                                            backdropClassName="modal-backdrop"
                                                                            backdropTransition={[Function]}
                                                                            containerClassName="modal-open"
                                                                            enforceFocus={true}
                                                                            keyboard={true}
                                                                            manager={
                                                                              ModalManager {
                                                                                "add": [Function],
                                                                                "containers": Array [],
                                                                                "data": Array [],
                                                                                "handleContainerOverflow": true,
                                                                                "hideSiblingNodes": true,
                                                                                "isTopModal": [Function],
                                                                                "modals": Array [],
                                                                                "remove": [Function],
                                                                              }
                                                                            }
                                                                            onEnter={[Function]}
                                                                            onEntering={[Function]}
                                                                            onExited={[Function]}
                                                                            onHide={[Function]}
                                                                            onMouseUp={[Function]}
                                                                            renderBackdrop={[Function]}
                                                                            restoreFocus={true}
                                                                            show={false}
                                                                            transition={[Function]}
                                                                          />
                                                                        </Modal>
                                                                      </AdvancedSettings>
                                                                      <div
                                                                        aria-describedby="rbd-hidden-text-0-hidden-text-0"
                                                                        className="domain-row-handle"
                                                                        data-rbd-drag-handle-context-id="0"
                                                                        data-rbd-drag-handle-draggable-id="domainpropertiesrow-domaindrag-0-0"
                                                                        draggable={false}
                                                                        onDragStart={[Function]}
                                                                        role="button"
                                                                        tabIndex={0}
                                                                      >
                                                                        <DragDropHandle>
                                                                          <FontAwesomeIcon
                                                                            border={false}
                                                                            className=""
                                                                            fixedWidth={false}
                                                                            flip={null}
                                                                            icon={
                                                                              Object {
                                                                                "icon": Array [
                                                                                  320,
                                                                                  512,
                                                                                  Array [],
                                                                                  "f58e",
                                                                                  "M96 32H32C14.33 32 0 46.33 0 64v64c0 17.67 14.33 32 32 32h64c17.67 0 32-14.33 32-32V64c0-17.67-14.33-32-32-32zm0 160H32c-17.67 0-32 14.33-32 32v64c0 17.67 14.33 32 32 32h64c17.67 0 32-14.33 32-32v-64c0-17.67-14.33-32-32-32zm0 160H32c-17.67 0-32 14.33-32 32v64c0 17.67 14.33 32 32 32h64c17.67 0 32-14.33 32-32v-64c0-17.67-14.33-32-32-32zM288 32h-64c-17.67 0-32 14.33-32 32v64c0 17.67 14.33 32 32 32h64c17.67 0 32-14.33 32-32V64c0-17.67-14.33-32-32-32zm0 160h-64c-17.67 0-32 14.33-32 32v64c0 17.67 14.33 32 32 32h64c17.67 0 32-14.33 32-32v-64c0-17.67-14.33-32-32-32zm0 160h-64c-17.67 0-32 14.33-32 32v64c0 17.67 14.33 32 32 32h64c17.67 0 32-14.33 32-32v-64c0-17.67-14.33-32-32-32z",
                                                                                ],
                                                                                "iconName": "grip-vertical",
                                                                                "prefix": "fas",
                                                                              }
                                                                            }
                                                                            inverse={false}
                                                                            listItem={false}
                                                                            mask={null}
                                                                            pull={null}
                                                                            pulse={false}
                                                                            rotation={null}
                                                                            size={null}
                                                                            spin={false}
                                                                            swapOpacity={false}
                                                                            symbol={false}
                                                                            title=""
                                                                            transform={null}
                                                                          >
                                                                            <svg
                                                                              aria-hidden="true"
                                                                              className="svg-inline--fa fa-grip-vertical fa-w-10 "
                                                                              data-icon="grip-vertical"
                                                                              data-prefix="fas"
                                                                              focusable="false"
                                                                              role="img"
                                                                              style={Object {}}
                                                                              viewBox="0 0 320 512"
                                                                              xmlns="http://www.w3.org/2000/svg"
                                                                            >
                                                                              <path
                                                                                d="M96 32H32C14.33 32 0 46.33 0 64v64c0 17.67 14.33 32 32 32h64c17.67 0 32-14.33 32-32V64c0-17.67-14.33-32-32-32zm0 160H32c-17.67 0-32 14.33-32 32v64c0 17.67 14.33 32 32 32h64c17.67 0 32-14.33 32-32v-64c0-17.67-14.33-32-32-32zm0 160H32c-17.67 0-32 14.33-32 32v64c0 17.67 14.33 32 32 32h64c17.67 0 32-14.33 32-32v-64c0-17.67-14.33-32-32-32zM288 32h-64c-17.67 0-32 14.33-32 32v64c0 17.67 14.33 32 32 32h64c17.67 0 32-14.33 32-32V64c0-17.67-14.33-32-32-32zm0 160h-64c-17.67 0-32 14.33-32 32v64c0 17.67 14.33 32 32 32h64c17.67 0 32-14.33 32-32v-64c0-17.67-14.33-32-32-32zm0 160h-64c-17.67 0-32 14.33-32 32v64c0 17.67 14.33 32 32 32h64c17.67 0 32-14.33 32-32v-64c0-17.67-14.33-32-32-32z"
                                                                                fill="currentColor"
                                                                                style={Object {}}
                                                                              />
                                                                            </svg>
                                                                          </FontAwesomeIcon>
                                                                        </DragDropHandle>
                                                                      </div>
                                                                      <div
                                                                        className="domain-row-action-section"
                                                                      >
                                                                        <Checkbox
                                                                          bsClass="checkbox"
                                                                          checked={false}
                                                                          className="domain-field-check-icon"
                                                                          disabled={false}
                                                                          id="domainpropertiesrow-selected-0-0"
                                                                          inline={false}
                                                                          name="domainpropertiesrow-selected"
                                                                          onChange={[Function]}
                                                                          title=""
                                                                        >
                                                                          <div
                                                                            className="domain-field-check-icon checkbox"
                                                                          >
                                                                            <label
                                                                              title=""
                                                                            >
                                                                              <input
                                                                                checked={false}
                                                                                disabled={false}
                                                                                id="domainpropertiesrow-selected-0-0"
                                                                                name="domainpropertiesrow-selected"
                                                                                onChange={[Function]}
                                                                                type="checkbox"
                                                                              />
                                                                            </label>
                                                                          </div>
                                                                        </Checkbox>
                                                                        <FieldExpansionToggle
                                                                          cls="domain-field-expand-icon"
                                                                          collapsedTitle="Show additional field properties"
                                                                          expanded={false}
                                                                          expandedTitle="Hide additional field properties"
                                                                          id="domainpropertiesrow-expand-0-0"
                                                                          onClick={[Function]}
                                                                        >
                                                                          <div
                                                                            className="field-icon domain-field-expand-icon"
                                                                            id="domainpropertiesrow-expand-0-0"
                                                                            onClick={[Function]}
                                                                            title="Show additional field properties"
                                                                          >
                                                                            <FontAwesomeIcon
                                                                              border={false}
                                                                              className=""
                                                                              fixedWidth={false}
                                                                              flip={null}
                                                                              icon={
                                                                                Object {
                                                                                  "icon": Array [
                                                                                    448,
                                                                                    512,
                                                                                    Array [],
                                                                                    "f0fe",
                                                                                    "M400 32H48C21.5 32 0 53.5 0 80v352c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V80c0-26.5-21.5-48-48-48zm-32 252c0 6.6-5.4 12-12 12h-92v92c0 6.6-5.4 12-12 12h-56c-6.6 0-12-5.4-12-12v-92H92c-6.6 0-12-5.4-12-12v-56c0-6.6 5.4-12 12-12h92v-92c0-6.6 5.4-12 12-12h56c6.6 0 12 5.4 12 12v92h92c6.6 0 12 5.4 12 12v56z",
                                                                                  ],
                                                                                  "iconName": "plus-square",
                                                                                  "prefix": "fas",
                                                                                }
                                                                              }
                                                                              inverse={false}
                                                                              listItem={false}
                                                                              mask={null}
                                                                              pull={null}
                                                                              pulse={false}
                                                                              rotation={null}
                                                                              size="lg"
                                                                              spin={false}
                                                                              swapOpacity={false}
                                                                              symbol={false}
                                                                              title=""
                                                                              transform={null}
                                                                            >
                                                                              <svg
                                                                                aria-hidden="true"
                                                                                className="svg-inline--fa fa-plus-square fa-w-14 fa-lg "
                                                                                data-icon="plus-square"
                                                                                data-prefix="fas"
                                                                                focusable="false"
                                                                                role="img"
                                                                                style={Object {}}
                                                                                viewBox="0 0 448 512"
                                                                                xmlns="http://www.w3.org/2000/svg"
                                                                              >
                                                                                <path
                                                                                  d="M400 32H48C21.5 32 0 53.5 0 80v352c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V80c0-26.5-21.5-48-48-48zm-32 252c0 6.6-5.4 12-12 12h-92v92c0 6.6-5.4 12-12 12h-56c-6.6 0-12-5.4-12-12v-92H92c-6.6 0-12-5.4-12-12v-56c0-6.6 5.4-12 12-12h92v-92c0-6.6 5.4-12 12-12h56c6.6 0 12 5.4 12 12v92h92c6.6 0 12 5.4 12 12v56z"
                                                                                  fill="currentColor"
                                                                                  style={Object {}}
                                                                                />
                                                                              </svg>
                                                                            </FontAwesomeIcon>
                                                                          </div>
                                                                        </FieldExpansionToggle>
                                                                      </div>
                                                                      <div
                                                                        className="domain-row-main"
                                                                      >
                                                                        <Col
                                                                          bsClass="col"
                                                                          className="domain-row-base-fields domain-row-base-fields-position"
                                                                          componentClass="div"
                                                                          xs={6}
                                                                        >
                                                                          <div
                                                                            className="domain-row-base-fields domain-row-base-fields-position col-xs-6"
                                                                          >
                                                                            <div
                                                                              id="domainpropertiesrow-row-0-0"
                                                                            >
                                                                              <Col
                                                                                bsClass="col"
                                                                                componentClass="div"
                                                                                xs={6}
                                                                              >
                                                                                <div
                                                                                  className="col-xs-6"
                                                                                >
                                                                                  <FormControl
                                                                                    bsClass="form-control"
                                                                                    componentClass="input"
                                                                                    disabled={false}
                                                                                    id="domainpropertiesrow-name-0-0"
                                                                                    name="domainpropertiesrow-name"
                                                                                    onChange={[Function]}
                                                                                    type="text"
                                                                                    value="TextFIeld"
                                                                                  >
                                                                                    <input
                                                                                      className="form-control"
                                                                                      disabled={false}
                                                                                      id="domainpropertiesrow-name-0-0"
                                                                                      name="domainpropertiesrow-name"
                                                                                      onChange={[Function]}
                                                                                      type="text"
                                                                                      value="TextFIeld"
                                                                                    />
                                                                                  </FormControl>
                                                                                </div>
                                                                              </Col>
                                                                              <Col
                                                                                bsClass="col"
                                                                                componentClass="div"
                                                                                xs={4}
                                                                              >
                                                                                <div
                                                                                  className="col-xs-4"
                                                                                >
                                                                                  <FormControl
                                                                                    bsClass="form-control"
                                                                                    componentClass="select"
                                                                                    disabled={false}
                                                                                    id="domainpropertiesrow-type-0-0"
                                                                                    name="domainpropertiesrow-type"
                                                                                    onChange={[Function]}
                                                                                    value="string"
                                                                                  >
                                                                                    <select
                                                                                      className="form-control"
                                                                                      disabled={false}
                                                                                      id="domainpropertiesrow-type-0-0"
                                                                                      name="domainpropertiesrow-type"
                                                                                      onChange={[Function]}
                                                                                      value="string"
                                                                                    >
                                                                                      <option
                                                                                        key="flag"
                                                                                        value="flag"
                                                                                      >
                                                                                        Flag
                                                                                      </option>
                                                                                      <option
                                                                                        key="lookup"
                                                                                        value="lookup"
                                                                                      >
                                                                                        Lookup
                                                                                      </option>
                                                                                      <option
                                                                                        key="multiLine"
                                                                                        value="multiLine"
                                                                                      >
                                                                                        Multi-Line Text
                                                                                      </option>
                                                                                      <option
                                                                                        key="ParticipantId"
                                                                                        value="ParticipantId"
                                                                                      >
                                                                                        Subject/Participant
                                                                                      </option>
                                                                                      <option
                                                                                        key="string"
                                                                                        value="string"
                                                                                      >
                                                                                        Text
                                                                                      </option>
                                                                                    </select>
                                                                                  </FormControl>
                                                                                </div>
                                                                              </Col>
                                                                              <Col
                                                                                bsClass="col"
                                                                                componentClass="div"
                                                                                xs={2}
                                                                              >
                                                                                <div
                                                                                  className="col-xs-2"
                                                                                >
                                                                                  <div
                                                                                    className="domain-field-checkbox-container"
                                                                                  >
                                                                                    <Checkbox
                                                                                      bsClass="checkbox"
                                                                                      checked={true}
                                                                                      className="domain-field-checkbox"
                                                                                      disabled={false}
                                                                                      id="domainpropertiesrow-required-0-0"
                                                                                      inline={false}
                                                                                      name="domainpropertiesrow-required"
                                                                                      onChange={[Function]}
                                                                                      title=""
                                                                                    >
                                                                                      <div
                                                                                        className="domain-field-checkbox checkbox"
                                                                                      >
                                                                                        <label
                                                                                          title=""
                                                                                        >
                                                                                          <input
                                                                                            checked={true}
                                                                                            disabled={false}
                                                                                            id="domainpropertiesrow-required-0-0"
                                                                                            name="domainpropertiesrow-required"
                                                                                            onChange={[Function]}
                                                                                            type="checkbox"
                                                                                          />
                                                                                        </label>
                                                                                      </div>
                                                                                    </Checkbox>
                                                                                  </div>
                                                                                </div>
                                                                              </Col>
                                                                            </div>
                                                                          </div>
                                                                        </Col>
                                                                        <Col
                                                                          bsClass="col"
                                                                          className="domain-row-details-container"
                                                                          componentClass="div"
                                                                          xs={6}
                                                                        >
                                                                          <div
                                                                            className="domain-row-details-container col-xs-6"
                                                                          >
                                                                            <div
                                                                              className="domain-field-details"
                                                                              id="domainpropertiesrow-details-0-0"
                                                                            />
                                                                            <div
                                                                              className="domain-field-buttons"
                                                                            >
                                                                              <DeleteIcon
                                                                                iconCls="domain-field-delete-icon"
                                                                                id="domainpropertiesrow-delete-0-0"
                                                                                onDelete={[Function]}
                                                                                title="Remove field"
                                                                              >
                                                                                <span
                                                                                  className="field-icon"
                                                                                  id="domainpropertiesrow-delete-0-0"
                                                                                  onClick={[Function]}
                                                                                  title="Remove field"
                                                                                >
                                                                                  <FontAwesomeIcon
                                                                                    border={false}
                                                                                    className="domain-field-delete-icon"
                                                                                    fixedWidth={false}
                                                                                    flip={null}
                                                                                    icon={
                                                                                      Object {
                                                                                        "icon": Array [
                                                                                          512,
                                                                                          512,
                                                                                          Array [],
                                                                                          "f057",
                                                                                          "M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8zm121.6 313.1c4.7 4.7 4.7 12.3 0 17L338 377.6c-4.7 4.7-12.3 4.7-17 0L256 312l-65.1 65.6c-4.7 4.7-12.3 4.7-17 0L134.4 338c-4.7-4.7-4.7-12.3 0-17l65.6-65-65.6-65.1c-4.7-4.7-4.7-12.3 0-17l39.6-39.6c4.7-4.7 12.3-4.7 17 0l65 65.7 65.1-65.6c4.7-4.7 12.3-4.7 17 0l39.6 39.6c4.7 4.7 4.7 12.3 0 17L312 256l65.6 65.1z",
                                                                                        ],
                                                                                        "iconName": "times-circle",
                                                                                        "prefix": "fas",
                                                                                      }
                                                                                    }
                                                                                    inverse={false}
                                                                                    listItem={false}
                                                                                    mask={null}
                                                                                    pull={null}
                                                                                    pulse={false}
                                                                                    rotation={null}
                                                                                    size={null}
                                                                                    spin={false}
                                                                                    swapOpacity={false}
                                                                                    symbol={false}
                                                                                    title=""
                                                                                    transform={null}
                                                                                  >
                                                                                    <svg
                                                                                      aria-hidden="true"
                                                                                      className="svg-inline--fa fa-times-circle fa-w-16 domain-field-delete-icon"
                                                                                      data-icon="times-circle"
                                                                                      data-prefix="fas"
                                                                                      focusable="false"
                                                                                      role="img"
                                                                                      style={Object {}}
                                                                                      viewBox="0 0 512 512"
                                                                                      xmlns="http://www.w3.org/2000/svg"
                                                                                    >
                                                                                      <path
                                                                                        d="M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8zm121.6 313.1c4.7 4.7 4.7 12.3 0 17L338 377.6c-4.7 4.7-12.3 4.7-17 0L256 312l-65.1 65.6c-4.7 4.7-12.3 4.7-17 0L134.4 338c-4.7-4.7-4.7-12.3 0-17l65.6-65-65.6-65.1c-4.7-4.7-4.7-12.3 0-17l39.6-39.6c4.7-4.7 12.3-4.7 17 0l65 65.7 65.1-65.6c4.7-4.7 12.3-4.7 17 0l39.6 39.6c4.7 4.7 4.7 12.3 0 17L312 256l65.6 65.1z"
                                                                                        fill="currentColor"
                                                                                        style={Object {}}
                                                                                      />
                                                                                    </svg>
                                                                                  </FontAwesomeIcon>
                                                                                </span>
                                                                              </DeleteIcon>
                                                                            </div>
                                                                          </div>
                                                                        </Col>
                                                                      </div>
                                                                    </div>
                                                                  </Row>
                                                                  <Collapse
                                                                    appear={false}
                                                                    dimension="height"
                                                                    getDimensionValue={[Function]}
                                                                    in={false}
                                                                    mountOnEnter={false}
                                                                    onExited={[Function]}
                                                                    onExiting={[Function]}
                                                                    timeout={300}
                                                                    unmountOnExit={false}
                                                                  >
                                                                    <Transition
                                                                      appear={false}
                                                                      aria-expanded={null}
                                                                      enter={true}
                                                                      exit={true}
                                                                      in={false}
                                                                      mountOnEnter={false}
                                                                      onEnter={[Function]}
                                                                      onEntered={[Function]}
                                                                      onEntering={[Function]}
                                                                      onExit={[Function]}
                                                                      onExited={[Function]}
                                                                      onExiting={[Function]}
                                                                      timeout={300}
                                                                      unmountOnExit={false}
                                                                    >
                                                                      <div
                                                                        aria-expanded={null}
                                                                        className="collapse"
                                                                      >
                                                                        <DomainRowExpandedOptions
                                                                          appPropertiesOnly={false}
                                                                          domainFormDisplayOptions={
                                                                            Object {
                                                                              "disableMvEnabled": false,
                                                                              "domainKindDisplayName": "data class",
                                                                              "hideAddFieldsButton": false,
                                                                              "hideConditionalFormatting": false,
                                                                              "hideFilePropertyType": false,
                                                                              "hideImportData": false,
                                                                              "hideImportExport": false,
                                                                              "hideRequired": false,
                                                                              "hideStudyPropertyTypes": false,
                                                                              "hideTextOptions": false,
                                                                              "hideValidators": false,
                                                                              "isDragDisabled": false,
                                                                              "phiLevelDisabled": false,
                                                                            }
                                                                          }
                                                                          domainIndex={0}
                                                                          field={
                                                                            Immutable.Record {
                                                                              "conceptURI": null,
                                                                              "conditionalFormats": Immutable.List [],
                                                                              "defaultScale": "LINEAR",
                                                                              "defaultValueType": null,
                                                                              "defaultValue": null,
                                                                              "defaultDisplayValue": "[none]",
                                                                              "description": null,
                                                                              "dimension": false,
                                                                              "excludeFromShifting": false,
                                                                              "format": null,
                                                                              "hidden": false,
                                                                              "importAliases": null,
                                                                              "label": null,
                                                                              "lookupContainer": undefined,
                                                                              "lookupQuery": undefined,
                                                                              "lookupSchema": undefined,
                                                                              "lookupValidator": undefined,
                                                                              "measure": false,
                                                                              "mvEnabled": false,
                                                                              "name": "TextFIeld",
                                                                              "PHI": "NotPHI",
                                                                              "propertyId": 518195,
                                                                              "propertyURI": "urn:lsid:labkey.com:DataClass.Folder-5398:test1#Field1",
                                                                              "propertyValidators": Array [
                                                                                Object {
                                                                                  "description": null,
                                                                                  "errorMessage": null,
                                                                                  "expression": "~lte=4000",
                                                                                  "name": "Text Length",
                                                                                  "new": true,
                                                                                  "properties": Object {},
                                                                                  "rowId": 261363,
                                                                                  "type": "Length",
                                                                                },
                                                                              ],
                                                                              "rangeValidators": Immutable.List [],
                                                                              "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                                              "regexValidators": Immutable.List [],
                                                                              "recommendedVariable": false,
                                                                              "required": true,
                                                                              "scale": 4000,
                                                                              "URL": null,
                                                                              "shownInDetailsView": true,
                                                                              "shownInInsertView": true,
                                                                              "shownInUpdateView": true,
                                                                              "visible": true,
                                                                              "dataType": Immutable.Record {
                                                                                "conceptURI": undefined,
                                                                                "display": "Text",
                                                                                "name": "string",
                                                                                "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                                                "alternateRangeURI": "xsd:string",
                                                                                "shortDisplay": "String",
                                                                                "lookupSchema": undefined,
                                                                                "lookupQuery": undefined,
                                                                              },
                                                                              "lookupQueryValue": undefined,
                                                                              "lookupType": Immutable.Record {
                                                                                "conceptURI": undefined,
                                                                                "display": "Lookup",
                                                                                "name": "lookup",
                                                                                "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                                                "alternateRangeURI": undefined,
                                                                                "shortDisplay": undefined,
                                                                                "lookupSchema": undefined,
                                                                                "lookupQuery": undefined,
                                                                              },
                                                                              "original": Object {
                                                                                "conceptURI": null,
                                                                                "dataType": Immutable.Record {
                                                                                  "conceptURI": undefined,
                                                                                  "display": "Text",
                                                                                  "name": "string",
                                                                                  "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                                                  "alternateRangeURI": "xsd:string",
                                                                                  "shortDisplay": "String",
                                                                                  "lookupSchema": undefined,
                                                                                  "lookupQuery": undefined,
                                                                                },
                                                                                "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                                              },
                                                                              "updatedField": false,
                                                                              "isPrimaryKey": false,
                                                                              "lockType": "NotLocked",
                                                                              "wrappedColumnName": undefined,
                                                                              "disablePhiLevel": false,
                                                                              "lockExistingField": false,
                                                                              "sourceOntology": undefined,
                                                                              "conceptSubtree": undefined,
                                                                              "conceptLabelColumn": undefined,
                                                                              "conceptImportColumn": undefined,
                                                                              "principalConceptCode": undefined,
                                                                              "derivationDataScope": undefined,
                                                                              "selected": false,
                                                                            }
                                                                          }
                                                                          getDomainFields={[Function]}
                                                                          index={0}
                                                                          onChange={[Function]}
                                                                          onMultiChange={[Function]}
                                                                          showingModal={[Function]}
                                                                          successBsStyle="success"
                                                                        >
                                                                          <div
                                                                            className="domain-row-container"
                                                                          >
                                                                            <div
                                                                              className="domain-row-container-expand-spacer"
                                                                            />
                                                                            <div
                                                                              className="domain-row-container-expanded"
                                                                            >
                                                                              <Col
                                                                                bsClass="col"
                                                                                componentClass="div"
                                                                                xs={12}
                                                                              >
                                                                                <div
                                                                                  className="col-xs-12"
                                                                                >
                                                                                  <TextFieldOptions
                                                                                    domainIndex={0}
                                                                                    index={0}
                                                                                    label="Text Options"
                                                                                    lockType="NotLocked"
                                                                                    onChange={[Function]}
                                                                                    scale={4000}
                                                                                  >
                                                                                    <div>
                                                                                      <Row
                                                                                        bsClass="row"
                                                                                        componentClass="div"
                                                                                      >
                                                                                        <div
                                                                                          className="row"
                                                                                        >
                                                                                          <Col
                                                                                            bsClass="col"
                                                                                            componentClass="div"
                                                                                            xs={12}
                                                                                          >
                                                                                            <div
                                                                                              className="col-xs-12"
                                                                                            >
                                                                                              <SectionHeading
                                                                                                title="Text Options"
                                                                                              >
                                                                                                <div
                                                                                                  className="domain-field-section-heading"
                                                                                                >
                                                                                                  Text Options
                                                                                                </div>
                                                                                              </SectionHeading>
                                                                                            </div>
                                                                                          </Col>
                                                                                        </div>
                                                                                      </Row>
                                                                                      <Row
                                                                                        bsClass="row"
                                                                                        componentClass="div"
                                                                                      >
                                                                                        <div
                                                                                          className="row"
                                                                                        >
                                                                                          <Col
                                                                                            bsClass="col"
                                                                                            componentClass="div"
                                                                                            xs={12}
                                                                                          >
                                                                                            <div
                                                                                              className="col-xs-12"
                                                                                            >
                                                                                              <div
                                                                                                className="domain-field-label"
                                                                                              >
                                                                                                <DomainFieldLabel
                                                                                                  helpTipBody={
                                                                                                    <React.Fragment>
                                                                                                      <p>
                                                                                                        Sets the maximum character count for a text field.
                                                                                                      </p>
                                                                                                      <p>
                                                                                                        Anything over 4,000 characters will use the 'Unlimited' designation.
                                                                                                      </p>
                                                                                                    </React.Fragment>
                                                                                                  }
                                                                                                  label="Maximum Text Length"
                                                                                                >
                                                                                                  Maximum Text 
                                                                                                  <span
                                                                                                    className="domain-no-wrap"
                                                                                                  >
                                                                                                    Length
                                                                                                    <Component
                                                                                                      customStyle={Object {}}
                                                                                                      id="tooltip"
                                                                                                      size="1x"
                                                                                                      title="Maximum Text Length"
                                                                                                    >
                                                                                                      <span
                                                                                                        className="label-help-target"
                                                                                                        onMouseOut={[Function]}
                                                                                                        onMouseOver={[Function]}
                                                                                                      >
                                                                                                        <FontAwesomeIcon
                                                                                                          border={false}
                                                                                                          className="label-help-icon"
                                                                                                          fixedWidth={false}
                                                                                                          flip={null}
                                                                                                          icon={
                                                                                                            Object {
                                                                                                              "icon": Array [
                                                                                                                512,
                                                                                                                512,
                                                                                                                Array [],
                                                                                                                "f059",
                                                                                                                "M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z",
                                                                                                              ],
                                                                                                              "iconName": "question-circle",
                                                                                                              "prefix": "fas",
                                                                                                            }
                                                                                                          }
                                                                                                          inverse={false}
                                                                                                          listItem={false}
                                                                                                          mask={null}
                                                                                                          pull={null}
                                                                                                          pulse={false}
                                                                                                          rotation={null}
                                                                                                          size="1x"
                                                                                                          spin={false}
                                                                                                          style={Object {}}
                                                                                                          swapOpacity={false}
                                                                                                          symbol={false}
                                                                                                          title=""
                                                                                                          transform={null}
                                                                                                        >
                                                                                                          <svg
                                                                                                            aria-hidden="true"
                                                                                                            className="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                                                                                                            data-icon="question-circle"
                                                                                                            data-prefix="fas"
                                                                                                            focusable="false"
                                                                                                            role="img"
                                                                                                            style={Object {}}
                                                                                                            viewBox="0 0 512 512"
                                                                                                            xmlns="http://www.w3.org/2000/svg"
                                                                                                          >
                                                                                                            <path
                                                                                                              d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                                                                              fill="currentColor"
                                                                                                              style={Object {}}
                                                                                                            />
                                                                                                          </svg>
                                                                                                        </FontAwesomeIcon>
                                                                                                        <Overlay
                                                                                                          animation={[Function]}
                                                                                                          placement="right"
                                                                                                          rootClose={false}
                                                                                                          show={false}
                                                                                                          target={
                                                                                                            <span
                                                                                                              class="label-help-target"
                                                                                                            >
                                                                                                              <svg
                                                                                                                aria-hidden="true"
                                                                                                                class="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                                                                                                                data-icon="question-circle"
                                                                                                                data-prefix="fas"
                                                                                                                focusable="false"
                                                                                                                role="img"
                                                                                                                viewBox="0 0 512 512"
                                                                                                                xmlns="http://www.w3.org/2000/svg"
                                                                                                              >
                                                                                                                <path
                                                                                                                  d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                                                                                  fill="currentColor"
                                                                                                                />
                                                                                                              </svg>
                                                                                                            </span>
                                                                                                          }
                                                                                                        >
                                                                                                          <Overlay
                                                                                                            placement="right"
                                                                                                            rootClose={false}
                                                                                                            show={false}
                                                                                                            target={
                                                                                                              <span
                                                                                                                class="label-help-target"
                                                                                                              >
                                                                                                                <svg
                                                                                                                  aria-hidden="true"
                                                                                                                  class="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                                                                                                                  data-icon="question-circle"
                                                                                                                  data-prefix="fas"
                                                                                                                  focusable="false"
                                                                                                                  role="img"
                                                                                                                  viewBox="0 0 512 512"
                                                                                                                  xmlns="http://www.w3.org/2000/svg"
                                                                                                                >
                                                                                                                  <path
                                                                                                                    d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                                                                                    fill="currentColor"
                                                                                                                  />
                                                                                                                </svg>
                                                                                                              </span>
                                                                                                            }
                                                                                                            transition={[Function]}
                                                                                                          />
                                                                                                        </Overlay>
                                                                                                      </span>
                                                                                                    </Component>
                                                                                                  </span>
                                                                                                </DomainFieldLabel>
                                                                                              </div>
                                                                                            </div>
                                                                                          </Col>
                                                                                        </div>
                                                                                      </Row>
                                                                                      <Row
                                                                                        bsClass="row"
                                                                                        componentClass="div"
                                                                                      >
                                                                                        <div
                                                                                          className="row"
                                                                                        >
                                                                                          <Col
                                                                                            bsClass="col"
                                                                                            className="domain-text-options-col"
                                                                                            componentClass="div"
                                                                                            xs={12}
                                                                                          >
                                                                                            <div
                                                                                              className="domain-text-options-col col-xs-12"
                                                                                            >
                                                                                              <FormControl
                                                                                                bsClass="form-control"
                                                                                                checked={false}
                                                                                                className="domain-text-options-radio1 domain-field-float-left"
                                                                                                componentClass="input"
                                                                                                disabled={false}
                                                                                                id="domainpropertiesrow-maxLength-0-0"
                                                                                                onChange={[Function]}
                                                                                                type="radio"
                                                                                                value="maxLength"
                                                                                              >
                                                                                                <input
                                                                                                  checked={false}
                                                                                                  className="domain-text-options-radio1 domain-field-float-left form-control"
                                                                                                  disabled={false}
                                                                                                  id="domainpropertiesrow-maxLength-0-0"
                                                                                                  onChange={[Function]}
                                                                                                  type="radio"
                                                                                                  value="maxLength"
                                                                                                />
                                                                                              </FormControl>
                                                                                              <div>
                                                                                                Unlimited
                                                                                              </div>
                                                                                            </div>
                                                                                          </Col>
                                                                                        </div>
                                                                                      </Row>
                                                                                      <Row
                                                                                        bsClass="row"
                                                                                        componentClass="div"
                                                                                      >
                                                                                        <div
                                                                                          className="row"
                                                                                        >
                                                                                          <Col
                                                                                            bsClass="col"
                                                                                            componentClass="div"
                                                                                            xs={12}
                                                                                          >
                                                                                            <div
                                                                                              className="col-xs-12"
                                                                                            >
                                                                                              <FormControl
                                                                                                bsClass="form-control"
                                                                                                checked={true}
                                                                                                className="domain-text-options-radio2 domain-field-float-left"
                                                                                                componentClass="input"
                                                                                                id="domainpropertiesrow-customLength-0-0"
                                                                                                onChange={[Function]}
                                                                                                type="radio"
                                                                                                value="customLength"
                                                                                              >
                                                                                                <input
                                                                                                  checked={true}
                                                                                                  className="domain-text-options-radio2 domain-field-float-left form-control"
                                                                                                  id="domainpropertiesrow-customLength-0-0"
                                                                                                  onChange={[Function]}
                                                                                                  type="radio"
                                                                                                  value="customLength"
                                                                                                />
                                                                                              </FormControl>
                                                                                              <span
                                                                                                className="domain-text-options-length domain-field-float-left"
                                                                                              >
                                                                                                No longer than 
                                                                                                <FormControl
                                                                                                  bsClass="form-control"
                                                                                                  className="domain-text-length-field"
                                                                                                  componentClass="input"
                                                                                                  disabled={false}
                                                                                                  id="domainpropertiesrow-scale-0-0"
                                                                                                  name="domainpropertiesrow-scale"
                                                                                                  onChange={[Function]}
                                                                                                  type="number"
                                                                                                  value={4000}
                                                                                                >
                                                                                                  <input
                                                                                                    className="domain-text-length-field form-control"
                                                                                                    disabled={false}
                                                                                                    id="domainpropertiesrow-scale-0-0"
                                                                                                    name="domainpropertiesrow-scale"
                                                                                                    onChange={[Function]}
                                                                                                    type="number"
                                                                                                    value={4000}
                                                                                                  />
                                                                                                </FormControl>
                                                                                                 characters
                                                                                              </span>
                                                                                            </div>
                                                                                          </Col>
                                                                                        </div>
                                                                                      </Row>
                                                                                    </div>
                                                                                  </TextFieldOptions>
                                                                                </div>
                                                                              </Col>
                                                                              <Col
                                                                                bsClass="col"
                                                                                componentClass="div"
                                                                                xs={12}
                                                                              >
                                                                                <div
                                                                                  className="col-xs-12"
                                                                                >
                                                                                  <NameAndLinkingOptions
                                                                                    appPropertiesOnly={false}
                                                                                    domainIndex={0}
                                                                                    field={
                                                                                      Immutable.Record {
                                                                                        "conceptURI": null,
                                                                                        "conditionalFormats": Immutable.List [],
                                                                                        "defaultScale": "LINEAR",
                                                                                        "defaultValueType": null,
                                                                                        "defaultValue": null,
                                                                                        "defaultDisplayValue": "[none]",
                                                                                        "description": null,
                                                                                        "dimension": false,
                                                                                        "excludeFromShifting": false,
                                                                                        "format": null,
                                                                                        "hidden": false,
                                                                                        "importAliases": null,
                                                                                        "label": null,
                                                                                        "lookupContainer": undefined,
                                                                                        "lookupQuery": undefined,
                                                                                        "lookupSchema": undefined,
                                                                                        "lookupValidator": undefined,
                                                                                        "measure": false,
                                                                                        "mvEnabled": false,
                                                                                        "name": "TextFIeld",
                                                                                        "PHI": "NotPHI",
                                                                                        "propertyId": 518195,
                                                                                        "propertyURI": "urn:lsid:labkey.com:DataClass.Folder-5398:test1#Field1",
                                                                                        "propertyValidators": Array [
                                                                                          Object {
                                                                                            "description": null,
                                                                                            "errorMessage": null,
                                                                                            "expression": "~lte=4000",
                                                                                            "name": "Text Length",
                                                                                            "new": true,
                                                                                            "properties": Object {},
                                                                                            "rowId": 261363,
                                                                                            "type": "Length",
                                                                                          },
                                                                                        ],
                                                                                        "rangeValidators": Immutable.List [],
                                                                                        "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                                                        "regexValidators": Immutable.List [],
                                                                                        "recommendedVariable": false,
                                                                                        "required": true,
                                                                                        "scale": 4000,
                                                                                        "URL": null,
                                                                                        "shownInDetailsView": true,
                                                                                        "shownInInsertView": true,
                                                                                        "shownInUpdateView": true,
                                                                                        "visible": true,
                                                                                        "dataType": Immutable.Record {
                                                                                          "conceptURI": undefined,
                                                                                          "display": "Text",
                                                                                          "name": "string",
                                                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                                                          "alternateRangeURI": "xsd:string",
                                                                                          "shortDisplay": "String",
                                                                                          "lookupSchema": undefined,
                                                                                          "lookupQuery": undefined,
                                                                                        },
                                                                                        "lookupQueryValue": undefined,
                                                                                        "lookupType": Immutable.Record {
                                                                                          "conceptURI": undefined,
                                                                                          "display": "Lookup",
                                                                                          "name": "lookup",
                                                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                                                          "alternateRangeURI": undefined,
                                                                                          "shortDisplay": undefined,
                                                                                          "lookupSchema": undefined,
                                                                                          "lookupQuery": undefined,
                                                                                        },
                                                                                        "original": Object {
                                                                                          "conceptURI": null,
                                                                                          "dataType": Immutable.Record {
                                                                                            "conceptURI": undefined,
                                                                                            "display": "Text",
                                                                                            "name": "string",
                                                                                            "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                                                            "alternateRangeURI": "xsd:string",
                                                                                            "shortDisplay": "String",
                                                                                            "lookupSchema": undefined,
                                                                                            "lookupQuery": undefined,
                                                                                          },
                                                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                                                        },
                                                                                        "updatedField": false,
                                                                                        "isPrimaryKey": false,
                                                                                        "lockType": "NotLocked",
                                                                                        "wrappedColumnName": undefined,
                                                                                        "disablePhiLevel": false,
                                                                                        "lockExistingField": false,
                                                                                        "sourceOntology": undefined,
                                                                                        "conceptSubtree": undefined,
                                                                                        "conceptLabelColumn": undefined,
                                                                                        "conceptImportColumn": undefined,
                                                                                        "principalConceptCode": undefined,
                                                                                        "derivationDataScope": undefined,
                                                                                        "selected": false,
                                                                                      }
                                                                                    }
                                                                                    index={0}
                                                                                    onChange={[Function]}
                                                                                  >
                                                                                    <div>
                                                                                      <Row
                                                                                        bsClass="row"
                                                                                        componentClass="div"
                                                                                      >
                                                                                        <div
                                                                                          className="row"
                                                                                        >
                                                                                          <Col
                                                                                            bsClass="col"
                                                                                            componentClass="div"
                                                                                            xs={12}
                                                                                          >
                                                                                            <div
                                                                                              className="col-xs-12"
                                                                                            >
                                                                                              <SectionHeading
                                                                                                cls="domain-field-section-hdr"
                                                                                                title="Name and Linking Options"
                                                                                              >
                                                                                                <div
                                                                                                  className="domain-field-section-heading domain-field-section-hdr"
                                                                                                >
                                                                                                  Name and Linking Options
                                                                                                </div>
                                                                                              </SectionHeading>
                                                                                            </div>
                                                                                          </Col>
                                                                                        </div>
                                                                                      </Row>
                                                                                      <Row
                                                                                        bsClass="row"
                                                                                        componentClass="div"
                                                                                      >
                                                                                        <div
                                                                                          className="row"
                                                                                        >
                                                                                          <Col
                                                                                            bsClass="col"
                                                                                            componentClass="div"
                                                                                            xs={5}
                                                                                          >
                                                                                            <div
                                                                                              className="col-xs-5"
                                                                                            >
                                                                                              <div
                                                                                                className="domain-field-label"
                                                                                              >
                                                                                                Description
                                                                                              </div>
                                                                                              <FormControl
                                                                                                bsClass="form-control"
                                                                                                className="form-control textarea-noresize"
                                                                                                componentClass="textarea"
                                                                                                disabled={false}
                                                                                                id="domainpropertiesrow-description-0-0"
                                                                                                name="domainpropertiesrow-description"
                                                                                                onChange={[Function]}
                                                                                                rows={4}
                                                                                                value=""
                                                                                              >
                                                                                                <textarea
                                                                                                  className="form-control textarea-noresize form-control"
                                                                                                  disabled={false}
                                                                                                  id="domainpropertiesrow-description-0-0"
                                                                                                  name="domainpropertiesrow-description"
                                                                                                  onChange={[Function]}
                                                                                                  rows={4}
                                                                                                  value=""
                                                                                                />
                                                                                              </FormControl>
                                                                                            </div>
                                                                                          </Col>
                                                                                          <Col
                                                                                            bsClass="col"
                                                                                            componentClass="div"
                                                                                            xs={3}
                                                                                          >
                                                                                            <div
                                                                                              className="col-xs-3"
                                                                                            >
                                                                                              <div
                                                                                                className="domain-field-label"
                                                                                              >
                                                                                                Label
                                                                                              </div>
                                                                                              <FormControl
                                                                                                bsClass="form-control"
                                                                                                componentClass="input"
                                                                                                disabled={false}
                                                                                                id="domainpropertiesrow-label-0-0"
                                                                                                name="domainpropertiesrow-label"
                                                                                                onChange={[Function]}
                                                                                                type="text"
                                                                                                value=""
                                                                                              >
                                                                                                <input
                                                                                                  className="form-control"
                                                                                                  disabled={false}
                                                                                                  id="domainpropertiesrow-label-0-0"
                                                                                                  name="domainpropertiesrow-label"
                                                                                                  onChange={[Function]}
                                                                                                  type="text"
                                                                                                  value=""
                                                                                                />
                                                                                              </FormControl>
                                                                                              <div
                                                                                                className="domain-field-label"
                                                                                              >
                                                                                                <DomainFieldLabel
                                                                                                  helpTipBody={
                                                                                                    <React.Fragment>
                                                                                                      Define alternate field names to be used when importing from a file.
                                                                                                      <br />
                                                                                                      <br />
                                                                                                      Multiple aliases may be separated by spaces or commas. To define an alias that contains spaces, use double-quotes (") around it.
                                                                                                    </React.Fragment>
                                                                                                  }
                                                                                                  label="Import Aliases"
                                                                                                >
                                                                                                  Import 
                                                                                                  <span
                                                                                                    className="domain-no-wrap"
                                                                                                  >
                                                                                                    Aliases
                                                                                                    <Component
                                                                                                      customStyle={Object {}}
                                                                                                      id="tooltip"
                                                                                                      size="1x"
                                                                                                      title="Import Aliases"
                                                                                                    >
                                                                                                      <span
                                                                                                        className="label-help-target"
                                                                                                        onMouseOut={[Function]}
                                                                                                        onMouseOver={[Function]}
                                                                                                      >
                                                                                                        <FontAwesomeIcon
                                                                                                          border={false}
                                                                                                          className="label-help-icon"
                                                                                                          fixedWidth={false}
                                                                                                          flip={null}
                                                                                                          icon={
                                                                                                            Object {
                                                                                                              "icon": Array [
                                                                                                                512,
                                                                                                                512,
                                                                                                                Array [],
                                                                                                                "f059",
                                                                                                                "M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z",
                                                                                                              ],
                                                                                                              "iconName": "question-circle",
                                                                                                              "prefix": "fas",
                                                                                                            }
                                                                                                          }
                                                                                                          inverse={false}
                                                                                                          listItem={false}
                                                                                                          mask={null}
                                                                                                          pull={null}
                                                                                                          pulse={false}
                                                                                                          rotation={null}
                                                                                                          size="1x"
                                                                                                          spin={false}
                                                                                                          style={Object {}}
                                                                                                          swapOpacity={false}
                                                                                                          symbol={false}
                                                                                                          title=""
                                                                                                          transform={null}
                                                                                                        >
                                                                                                          <svg
                                                                                                            aria-hidden="true"
                                                                                                            className="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                                                                                                            data-icon="question-circle"
                                                                                                            data-prefix="fas"
                                                                                                            focusable="false"
                                                                                                            role="img"
                                                                                                            style={Object {}}
                                                                                                            viewBox="0 0 512 512"
                                                                                                            xmlns="http://www.w3.org/2000/svg"
                                                                                                          >
                                                                                                            <path
                                                                                                              d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                                                                              fill="currentColor"
                                                                                                              style={Object {}}
                                                                                                            />
                                                                                                          </svg>
                                                                                                        </FontAwesomeIcon>
                                                                                                        <Overlay
                                                                                                          animation={[Function]}
                                                                                                          placement="right"
                                                                                                          rootClose={false}
                                                                                                          show={false}
                                                                                                        >
                                                                                                          <Overlay
                                                                                                            placement="right"
                                                                                                            rootClose={false}
                                                                                                            show={false}
                                                                                                            transition={[Function]}
                                                                                                          />
                                                                                                        </Overlay>
                                                                                                      </span>
                                                                                                    </Component>
                                                                                                  </span>
                                                                                                </DomainFieldLabel>
                                                                                              </div>
                                                                                              <FormControl
                                                                                                bsClass="form-control"
                                                                                                componentClass="input"
                                                                                                disabled={false}
                                                                                                id="domainpropertiesrow-importAliases-0-0"
                                                                                                name="domainpropertiesrow-importAliases"
                                                                                                onChange={[Function]}
                                                                                                type="text"
                                                                                                value=""
                                                                                              >
                                                                                                <input
                                                                                                  className="form-control"
                                                                                                  disabled={false}
                                                                                                  id="domainpropertiesrow-importAliases-0-0"
                                                                                                  name="domainpropertiesrow-importAliases"
                                                                                                  onChange={[Function]}
                                                                                                  type="text"
                                                                                                  value=""
                                                                                                />
                                                                                              </FormControl>
                                                                                            </div>
                                                                                          </Col>
                                                                                          <Col
                                                                                            bsClass="col"
                                                                                            componentClass="div"
                                                                                            xs={4}
                                                                                          >
                                                                                            <div
                                                                                              className="col-xs-4"
                                                                                            >
                                                                                              <div
                                                                                                className="domain-field-label"
                                                                                              >
                                                                                                <DomainFieldLabel
                                                                                                  helpTipBody={
                                                                                                    <React.Fragment>
                                                                                                      Use this to change the display of the field value within a data grid into a link. Multiple formats are supported, which allows ways to easily substitute and link to other locations in LabKey.
                                                                                                      <br />
                                                                                                      <br />
                                                                                                      Learn more about using 
                                                                                                      <HelpLink
                                                                                                        topic="urlEncoding"
                                                                                                      >
                                                                                                        URL Formatting Options
                                                                                                      </HelpLink>
                                                                                                      .
                                                                                                    </React.Fragment>
                                                                                                  }
                                                                                                  label="URL"
                                                                                                >
                                                                                                  <span
                                                                                                    className="domain-no-wrap"
                                                                                                  >
                                                                                                    URL
                                                                                                    <Component
                                                                                                      customStyle={Object {}}
                                                                                                      id="tooltip"
                                                                                                      size="1x"
                                                                                                      title="URL"
                                                                                                    >
                                                                                                      <span
                                                                                                        className="label-help-target"
                                                                                                        onMouseOut={[Function]}
                                                                                                        onMouseOver={[Function]}
                                                                                                      >
                                                                                                        <FontAwesomeIcon
                                                                                                          border={false}
                                                                                                          className="label-help-icon"
                                                                                                          fixedWidth={false}
                                                                                                          flip={null}
                                                                                                          icon={
                                                                                                            Object {
                                                                                                              "icon": Array [
                                                                                                                512,
                                                                                                                512,
                                                                                                                Array [],
                                                                                                                "f059",
                                                                                                                "M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z",
                                                                                                              ],
                                                                                                              "iconName": "question-circle",
                                                                                                              "prefix": "fas",
                                                                                                            }
                                                                                                          }
                                                                                                          inverse={false}
                                                                                                          listItem={false}
                                                                                                          mask={null}
                                                                                                          pull={null}
                                                                                                          pulse={false}
                                                                                                          rotation={null}
                                                                                                          size="1x"
                                                                                                          spin={false}
                                                                                                          style={Object {}}
                                                                                                          swapOpacity={false}
                                                                                                          symbol={false}
                                                                                                          title=""
                                                                                                          transform={null}
                                                                                                        >
                                                                                                          <svg
                                                                                                            aria-hidden="true"
                                                                                                            className="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                                                                                                            data-icon="question-circle"
                                                                                                            data-prefix="fas"
                                                                                                            focusable="false"
                                                                                                            role="img"
                                                                                                            style={Object {}}
                                                                                                            viewBox="0 0 512 512"
                                                                                                            xmlns="http://www.w3.org/2000/svg"
                                                                                                          >
                                                                                                            <path
                                                                                                              d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                                                                              fill="currentColor"
                                                                                                              style={Object {}}
                                                                                                            />
                                                                                                          </svg>
                                                                                                        </FontAwesomeIcon>
                                                                                                        <Overlay
                                                                                                          animation={[Function]}
                                                                                                          placement="right"
                                                                                                          rootClose={false}
                                                                                                          show={false}
                                                                                                        >
                                                                                                          <Overlay
                                                                                                            placement="right"
                                                                                                            rootClose={false}
                                                                                                            show={false}
                                                                                                            transition={[Function]}
                                                                                                          />
                                                                                                        </Overlay>
                                                                                                      </span>
                                                                                                    </Component>
                                                                                                  </span>
                                                                                                </DomainFieldLabel>
                                                                                              </div>
                                                                                              <FormControl
                                                                                                bsClass="form-control"
                                                                                                componentClass="input"
                                                                                                disabled={false}
                                                                                                id="domainpropertiesrow-URL-0-0"
                                                                                                name="domainpropertiesrow-URL"
                                                                                                onChange={[Function]}
                                                                                                type="text"
                                                                                                value=""
                                                                                              >
                                                                                                <input
                                                                                                  className="form-control"
                                                                                                  disabled={false}
                                                                                                  id="domainpropertiesrow-URL-0-0"
                                                                                                  name="domainpropertiesrow-URL"
                                                                                                  onChange={[Function]}
                                                                                                  type="text"
                                                                                                  value=""
                                                                                                />
                                                                                              </FormControl>
                                                                                            </div>
                                                                                          </Col>
                                                                                        </div>
                                                                                      </Row>
                                                                                    </div>
                                                                                  </NameAndLinkingOptions>
                                                                                </div>
                                                                              </Col>
                                                                              <Col
                                                                                bsClass="col"
                                                                                componentClass="div"
                                                                                xs={12}
                                                                              >
                                                                                <div
                                                                                  className="col-xs-12"
                                                                                >
                                                                                  <ConditionalFormattingAndValidation
                                                                                    domainFormDisplayOptions={
                                                                                      Object {
                                                                                        "disableMvEnabled": false,
                                                                                        "domainKindDisplayName": "data class",
                                                                                        "hideAddFieldsButton": false,
                                                                                        "hideConditionalFormatting": false,
                                                                                        "hideFilePropertyType": false,
                                                                                        "hideImportData": false,
                                                                                        "hideImportExport": false,
                                                                                        "hideRequired": false,
                                                                                        "hideStudyPropertyTypes": false,
                                                                                        "hideTextOptions": false,
                                                                                        "hideValidators": false,
                                                                                        "isDragDisabled": false,
                                                                                        "phiLevelDisabled": false,
                                                                                      }
                                                                                    }
                                                                                    domainIndex={0}
                                                                                    field={
                                                                                      Immutable.Record {
                                                                                        "conceptURI": null,
                                                                                        "conditionalFormats": Immutable.List [],
                                                                                        "defaultScale": "LINEAR",
                                                                                        "defaultValueType": null,
                                                                                        "defaultValue": null,
                                                                                        "defaultDisplayValue": "[none]",
                                                                                        "description": null,
                                                                                        "dimension": false,
                                                                                        "excludeFromShifting": false,
                                                                                        "format": null,
                                                                                        "hidden": false,
                                                                                        "importAliases": null,
                                                                                        "label": null,
                                                                                        "lookupContainer": undefined,
                                                                                        "lookupQuery": undefined,
                                                                                        "lookupSchema": undefined,
                                                                                        "lookupValidator": undefined,
                                                                                        "measure": false,
                                                                                        "mvEnabled": false,
                                                                                        "name": "TextFIeld",
                                                                                        "PHI": "NotPHI",
                                                                                        "propertyId": 518195,
                                                                                        "propertyURI": "urn:lsid:labkey.com:DataClass.Folder-5398:test1#Field1",
                                                                                        "propertyValidators": Array [
                                                                                          Object {
                                                                                            "description": null,
                                                                                            "errorMessage": null,
                                                                                            "expression": "~lte=4000",
                                                                                            "name": "Text Length",
                                                                                            "new": true,
                                                                                            "properties": Object {},
                                                                                            "rowId": 261363,
                                                                                            "type": "Length",
                                                                                          },
                                                                                        ],
                                                                                        "rangeValidators": Immutable.List [],
                                                                                        "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                                                        "regexValidators": Immutable.List [],
                                                                                        "recommendedVariable": false,
                                                                                        "required": true,
                                                                                        "scale": 4000,
                                                                                        "URL": null,
                                                                                        "shownInDetailsView": true,
                                                                                        "shownInInsertView": true,
                                                                                        "shownInUpdateView": true,
                                                                                        "visible": true,
                                                                                        "dataType": Immutable.Record {
                                                                                          "conceptURI": undefined,
                                                                                          "display": "Text",
                                                                                          "name": "string",
                                                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                                                          "alternateRangeURI": "xsd:string",
                                                                                          "shortDisplay": "String",
                                                                                          "lookupSchema": undefined,
                                                                                          "lookupQuery": undefined,
                                                                                        },
                                                                                        "lookupQueryValue": undefined,
                                                                                        "lookupType": Immutable.Record {
                                                                                          "conceptURI": undefined,
                                                                                          "display": "Lookup",
                                                                                          "name": "lookup",
                                                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                                                          "alternateRangeURI": undefined,
                                                                                          "shortDisplay": undefined,
                                                                                          "lookupSchema": undefined,
                                                                                          "lookupQuery": undefined,
                                                                                        },
                                                                                        "original": Object {
                                                                                          "conceptURI": null,
                                                                                          "dataType": Immutable.Record {
                                                                                            "conceptURI": undefined,
                                                                                            "display": "Text",
                                                                                            "name": "string",
                                                                                            "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                                                            "alternateRangeURI": "xsd:string",
                                                                                            "shortDisplay": "String",
                                                                                            "lookupSchema": undefined,
                                                                                            "lookupQuery": undefined,
                                                                                          },
                                                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                                                        },
                                                                                        "updatedField": false,
                                                                                        "isPrimaryKey": false,
                                                                                        "lockType": "NotLocked",
                                                                                        "wrappedColumnName": undefined,
                                                                                        "disablePhiLevel": false,
                                                                                        "lockExistingField": false,
                                                                                        "sourceOntology": undefined,
                                                                                        "conceptSubtree": undefined,
                                                                                        "conceptLabelColumn": undefined,
                                                                                        "conceptImportColumn": undefined,
                                                                                        "principalConceptCode": undefined,
                                                                                        "derivationDataScope": undefined,
                                                                                        "selected": false,
                                                                                      }
                                                                                    }
                                                                                    index={0}
                                                                                    onChange={[Function]}
                                                                                    showingModal={[Function]}
                                                                                    successBsStyle="success"
                                                                                  >
                                                                                    <div>
                                                                                      <Row
                                                                                        bsClass="row"
                                                                                        componentClass="div"
                                                                                      >
                                                                                        <div
                                                                                          className="row"
                                                                                        >
                                                                                          <Col
                                                                                            bsClass="col"
                                                                                            componentClass="div"
                                                                                            xs={12}
                                                                                          >
                                                                                            <div
                                                                                              className="col-xs-12"
                                                                                            >
                                                                                              <SectionHeading
                                                                                                cls="domain-field-section-hdr"
                                                                                                title="Conditional Formatting and Validation Options"
                                                                                              >
                                                                                                <div
                                                                                                  className="domain-field-section-heading domain-field-section-hdr"
                                                                                                >
                                                                                                  Conditional Formatting and Validation Options
                                                                                                </div>
                                                                                              </SectionHeading>
                                                                                            </div>
                                                                                          </Col>
                                                                                        </div>
                                                                                      </Row>
                                                                                      <Row
                                                                                        bsClass="row"
                                                                                        componentClass="div"
                                                                                      >
                                                                                        <div
                                                                                          className="row"
                                                                                        >
                                                                                          <Col
                                                                                            bsClass="col"
                                                                                            componentClass="div"
                                                                                            xs={12}
                                                                                          >
                                                                                            <div
                                                                                              className="col-xs-12"
                                                                                            >
                                                                                              <div
                                                                                                className="domain-validation-group"
                                                                                              >
                                                                                                <div
                                                                                                  className="domain-field-label domain-no-wrap"
                                                                                                >
                                                                                                  <DomainFieldLabel
                                                                                                    helpTipBody={
                                                                                                      <React.Fragment>
                                                                                                        <p>
                                                                                                          Conditional formats allow targeted display formatting for values that meet defined conditions.
                                                                                                        </p>
                                                                                                        <p>
                                                                                                          Learn more about using 
                                                                                                          <HelpLink
                                                                                                            topic="fieldEditor#conditional"
                                                                                                          >
                                                                                                            Conditional Formats
                                                                                                          </HelpLink>
                                                                                                          .
                                                                                                        </p>
                                                                                                      </React.Fragment>
                                                                                                    }
                                                                                                    label="Create Conditional Format Criteria"
                                                                                                  >
                                                                                                    Create Conditional Format 
                                                                                                    <span
                                                                                                      className="domain-no-wrap"
                                                                                                    >
                                                                                                      Criteria
                                                                                                      <Component
                                                                                                        customStyle={Object {}}
                                                                                                        id="tooltip"
                                                                                                        size="1x"
                                                                                                        title="Create Conditional Format Criteria"
                                                                                                      >
                                                                                                        <span
                                                                                                          className="label-help-target"
                                                                                                          onMouseOut={[Function]}
                                                                                                          onMouseOver={[Function]}
                                                                                                        >
                                                                                                          <FontAwesomeIcon
                                                                                                            border={false}
                                                                                                            className="label-help-icon"
                                                                                                            fixedWidth={false}
                                                                                                            flip={null}
                                                                                                            icon={
                                                                                                              Object {
                                                                                                                "icon": Array [
                                                                                                                  512,
                                                                                                                  512,
                                                                                                                  Array [],
                                                                                                                  "f059",
                                                                                                                  "M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z",
                                                                                                                ],
                                                                                                                "iconName": "question-circle",
                                                                                                                "prefix": "fas",
                                                                                                              }
                                                                                                            }
                                                                                                            inverse={false}
                                                                                                            listItem={false}
                                                                                                            mask={null}
                                                                                                            pull={null}
                                                                                                            pulse={false}
                                                                                                            rotation={null}
                                                                                                            size="1x"
                                                                                                            spin={false}
                                                                                                            style={Object {}}
                                                                                                            swapOpacity={false}
                                                                                                            symbol={false}
                                                                                                            title=""
                                                                                                            transform={null}
                                                                                                          >
                                                                                                            <svg
                                                                                                              aria-hidden="true"
                                                                                                              className="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                                                                                                              data-icon="question-circle"
                                                                                                              data-prefix="fas"
                                                                                                              focusable="false"
                                                                                                              role="img"
                                                                                                              style={Object {}}
                                                                                                              viewBox="0 0 512 512"
                                                                                                              xmlns="http://www.w3.org/2000/svg"
                                                                                                            >
                                                                                                              <path
                                                                                                                d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                                                                                fill="currentColor"
                                                                                                                style={Object {}}
                                                                                                              />
                                                                                                            </svg>
                                                                                                          </FontAwesomeIcon>
                                                                                                          <Overlay
                                                                                                            animation={[Function]}
                                                                                                            placement="right"
                                                                                                            rootClose={false}
                                                                                                            show={false}
                                                                                                          >
                                                                                                            <Overlay
                                                                                                              placement="right"
                                                                                                              rootClose={false}
                                                                                                              show={false}
                                                                                                              transition={[Function]}
                                                                                                            />
                                                                                                          </Overlay>
                                                                                                        </span>
                                                                                                      </Component>
                                                                                                    </span>
                                                                                                  </DomainFieldLabel>
                                                                                                </div>
                                                                                                <div>
                                                                                                  <Button
                                                                                                    active={false}
                                                                                                    block={false}
                                                                                                    bsClass="btn"
                                                                                                    bsStyle="default"
                                                                                                    className="domain-validation-button"
                                                                                                    disabled={false}
                                                                                                    id="domainpropertiesrow-conditionalFormat-0-0"
                                                                                                    name="domainpropertiesrow-conditionalFormat"
                                                                                                    onClick={[Function]}
                                                                                                  >
                                                                                                    <button
                                                                                                      className="domain-validation-button btn btn-default"
                                                                                                      disabled={false}
                                                                                                      id="domainpropertiesrow-conditionalFormat-0-0"
                                                                                                      name="domainpropertiesrow-conditionalFormat"
                                                                                                      onClick={[Function]}
                                                                                                      type="button"
                                                                                                    >
                                                                                                      Add Format
                                                                                                    </button>
                                                                                                  </Button>
                                                                                                  <span
                                                                                                    className="domain-text-label"
                                                                                                  >
                                                                                                    None Set
                                                                                                  </span>
                                                                                                </div>
                                                                                              </div>
                                                                                              <div
                                                                                                className="domain-validation-group"
                                                                                              >
                                                                                                <div
                                                                                                  className="domain-field-label domain-no-wrap"
                                                                                                >
                                                                                                  <DomainFieldLabel
                                                                                                    helpTipBody={
                                                                                                      <React.Fragment>
                                                                                                        <p>
                                                                                                          RegEx validators allow you to specify a regular expression that defines what string values are valid.
                                                                                                        </p>
                                                                                                        <p>
                                                                                                          Learn more about using 
                                                                                                          <HelpLink
                                                                                                            topic="fieldEditor#regex"
                                                                                                          >
                                                                                                            Regular Expression Validation
                                                                                                          </HelpLink>
                                                                                                          .
                                                                                                        </p>
                                                                                                      </React.Fragment>
                                                                                                    }
                                                                                                    label="Create Regular Expression Validator"
                                                                                                  >
                                                                                                    Create Regular Expression 
                                                                                                    <span
                                                                                                      className="domain-no-wrap"
                                                                                                    >
                                                                                                      Validator
                                                                                                      <Component
                                                                                                        customStyle={Object {}}
                                                                                                        id="tooltip"
                                                                                                        size="1x"
                                                                                                        title="Create Regular Expression Validator"
                                                                                                      >
                                                                                                        <span
                                                                                                          className="label-help-target"
                                                                                                          onMouseOut={[Function]}
                                                                                                          onMouseOver={[Function]}
                                                                                                        >
                                                                                                          <FontAwesomeIcon
                                                                                                            border={false}
                                                                                                            className="label-help-icon"
                                                                                                            fixedWidth={false}
                                                                                                            flip={null}
                                                                                                            icon={
                                                                                                              Object {
                                                                                                                "icon": Array [
                                                                                                                  512,
                                                                                                                  512,
                                                                                                                  Array [],
                                                                                                                  "f059",
                                                                                                                  "M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z",
                                                                                                                ],
                                                                                                                "iconName": "question-circle",
                                                                                                                "prefix": "fas",
                                                                                                              }
                                                                                                            }
                                                                                                            inverse={false}
                                                                                                            listItem={false}
                                                                                                            mask={null}
                                                                                                            pull={null}
                                                                                                            pulse={false}
                                                                                                            rotation={null}
                                                                                                            size="1x"
                                                                                                            spin={false}
                                                                                                            style={Object {}}
                                                                                                            swapOpacity={false}
                                                                                                            symbol={false}
                                                                                                            title=""
                                                                                                            transform={null}
                                                                                                          >
                                                                                                            <svg
                                                                                                              aria-hidden="true"
                                                                                                              className="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                                                                                                              data-icon="question-circle"
                                                                                                              data-prefix="fas"
                                                                                                              focusable="false"
                                                                                                              role="img"
                                                                                                              style={Object {}}
                                                                                                              viewBox="0 0 512 512"
                                                                                                              xmlns="http://www.w3.org/2000/svg"
                                                                                                            >
                                                                                                              <path
                                                                                                                d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                                                                                fill="currentColor"
                                                                                                                style={Object {}}
                                                                                                              />
                                                                                                            </svg>
                                                                                                          </FontAwesomeIcon>
                                                                                                          <Overlay
                                                                                                            animation={[Function]}
                                                                                                            placement="right"
                                                                                                            rootClose={false}
                                                                                                            show={false}
                                                                                                          >
                                                                                                            <Overlay
                                                                                                              placement="right"
                                                                                                              rootClose={false}
                                                                                                              show={false}
                                                                                                              transition={[Function]}
                                                                                                            />
                                                                                                          </Overlay>
                                                                                                        </span>
                                                                                                      </Component>
                                                                                                    </span>
                                                                                                  </DomainFieldLabel>
                                                                                                </div>
                                                                                                <div>
                                                                                                  <Button
                                                                                                    active={false}
                                                                                                    block={false}
                                                                                                    bsClass="btn"
                                                                                                    bsStyle="default"
                                                                                                    className="domain-validation-button"
                                                                                                    disabled={false}
                                                                                                    id="domainpropertiesrow-regexValidator-0-0"
                                                                                                    name="domainpropertiesrow-regexValidator"
                                                                                                    onClick={[Function]}
                                                                                                  >
                                                                                                    <button
                                                                                                      className="domain-validation-button btn btn-default"
                                                                                                      disabled={false}
                                                                                                      id="domainpropertiesrow-regexValidator-0-0"
                                                                                                      name="domainpropertiesrow-regexValidator"
                                                                                                      onClick={[Function]}
                                                                                                      type="button"
                                                                                                    >
                                                                                                      Add Regex
                                                                                                    </button>
                                                                                                  </Button>
                                                                                                  <span
                                                                                                    className="domain-text-label"
                                                                                                  >
                                                                                                    None Set
                                                                                                  </span>
                                                                                                </div>
                                                                                              </div>
                                                                                            </div>
                                                                                          </Col>
                                                                                        </div>
                                                                                      </Row>
                                                                                    </div>
                                                                                  </ConditionalFormattingAndValidation>
                                                                                </div>
                                                                              </Col>
                                                                            </div>
                                                                          </div>
                                                                        </DomainRowExpandedOptions>
                                                                      </div>
                                                                    </Transition>
                                                                  </Collapse>
                                                                </div>
                                                              </Draggable>
                                                            </Connect(Draggable)>
                                                          </PrivateDraggable>
                                                        </PublicDraggable>
                                                      </DomainRow>
                                                      <DomainRow
                                                        appPropertiesOnly={false}
                                                        availableTypes={
                                                          Immutable.List [
                                                            Immutable.Record {
                                                              "conceptURI": undefined,
                                                              "display": "Text",
                                                              "name": "string",
                                                              "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                              "alternateRangeURI": "xsd:string",
                                                              "shortDisplay": "String",
                                                              "lookupSchema": undefined,
                                                              "lookupQuery": undefined,
                                                            },
                                                            Immutable.Record {
                                                              "conceptURI": undefined,
                                                              "display": "Multi-Line Text",
                                                              "name": "multiLine",
                                                              "rangeURI": "http://www.w3.org/2001/XMLSchema#multiLine",
                                                              "alternateRangeURI": undefined,
                                                              "shortDisplay": undefined,
                                                              "lookupSchema": undefined,
                                                              "lookupQuery": undefined,
                                                            },
                                                            Immutable.Record {
                                                              "conceptURI": undefined,
                                                              "display": "Boolean",
                                                              "name": "boolean",
                                                              "rangeURI": "http://www.w3.org/2001/XMLSchema#boolean",
                                                              "alternateRangeURI": "xsd:boolean",
                                                              "shortDisplay": undefined,
                                                              "lookupSchema": undefined,
                                                              "lookupQuery": undefined,
                                                            },
                                                            Immutable.Record {
                                                              "conceptURI": undefined,
                                                              "display": "Integer",
                                                              "name": "int",
                                                              "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                                              "alternateRangeURI": "xsd:int",
                                                              "shortDisplay": undefined,
                                                              "lookupSchema": undefined,
                                                              "lookupQuery": undefined,
                                                            },
                                                            Immutable.Record {
                                                              "conceptURI": undefined,
                                                              "display": "Decimal (floating point)",
                                                              "name": "double",
                                                              "rangeURI": "http://www.w3.org/2001/XMLSchema#double",
                                                              "alternateRangeURI": "xsd:double",
                                                              "shortDisplay": undefined,
                                                              "lookupSchema": undefined,
                                                              "lookupQuery": undefined,
                                                            },
                                                            Immutable.Record {
                                                              "conceptURI": undefined,
                                                              "display": "Date Time",
                                                              "name": "dateTime",
                                                              "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                                                              "alternateRangeURI": "xsd:dateTime",
                                                              "shortDisplay": undefined,
                                                              "lookupSchema": undefined,
                                                              "lookupQuery": undefined,
                                                            },
                                                            Immutable.Record {
                                                              "conceptURI": "http://www.labkey.org/exp/xml#flag",
                                                              "display": "Flag",
                                                              "name": "flag",
                                                              "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                              "alternateRangeURI": undefined,
                                                              "shortDisplay": undefined,
                                                              "lookupSchema": undefined,
                                                              "lookupQuery": undefined,
                                                            },
                                                            Immutable.Record {
                                                              "conceptURI": undefined,
                                                              "display": "Attachment",
                                                              "name": "attachment",
                                                              "rangeURI": "http://www.labkey.org/exp/xml#attachment",
                                                              "alternateRangeURI": undefined,
                                                              "shortDisplay": undefined,
                                                              "lookupSchema": undefined,
                                                              "lookupQuery": undefined,
                                                            },
                                                            Immutable.Record {
                                                              "conceptURI": undefined,
                                                              "display": "User",
                                                              "name": "users",
                                                              "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                                              "alternateRangeURI": undefined,
                                                              "shortDisplay": undefined,
                                                              "lookupSchema": "core",
                                                              "lookupQuery": "users",
                                                            },
                                                            Immutable.Record {
                                                              "conceptURI": "http://cpas.labkey.com/Study#ParticipantId",
                                                              "display": "Subject/Participant",
                                                              "name": "ParticipantId",
                                                              "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                              "alternateRangeURI": undefined,
                                                              "shortDisplay": undefined,
                                                              "lookupSchema": undefined,
                                                              "lookupQuery": undefined,
                                                            },
                                                            Immutable.Record {
                                                              "conceptURI": undefined,
                                                              "display": "Lookup",
                                                              "name": "lookup",
                                                              "rangeURI": undefined,
                                                              "alternateRangeURI": undefined,
                                                              "shortDisplay": undefined,
                                                              "lookupSchema": undefined,
                                                              "lookupQuery": undefined,
                                                            },
                                                            Immutable.Record {
                                                              "conceptURI": "http://www.labkey.org/exp/xml#sample",
                                                              "display": "Sample",
                                                              "name": "sample",
                                                              "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                                              "alternateRangeURI": undefined,
                                                              "shortDisplay": undefined,
                                                              "lookupSchema": undefined,
                                                              "lookupQuery": undefined,
                                                            },
                                                          ]
                                                        }
                                                        defaultDefaultValueType="FIXED_EDITABLE"
                                                        defaultValueOptions={
                                                          Immutable.List [
                                                            "FIXED_EDITABLE",
                                                            "LAST_ENTERED",
                                                          ]
                                                        }
                                                        domainFormDisplayOptions={
                                                          Object {
                                                            "disableMvEnabled": false,
                                                            "domainKindDisplayName": "data class",
                                                            "hideAddFieldsButton": false,
                                                            "hideConditionalFormatting": false,
                                                            "hideFilePropertyType": false,
                                                            "hideImportData": false,
                                                            "hideImportExport": false,
                                                            "hideRequired": false,
                                                            "hideStudyPropertyTypes": false,
                                                            "hideTextOptions": false,
                                                            "hideValidators": false,
                                                            "isDragDisabled": false,
                                                            "phiLevelDisabled": false,
                                                          }
                                                        }
                                                        domainId={58021}
                                                        domainIndex={0}
                                                        dragging={false}
                                                        expandTransition={300}
                                                        expanded={false}
                                                        field={
                                                          Immutable.Record {
                                                            "conceptURI": null,
                                                            "conditionalFormats": Immutable.List [],
                                                            "defaultScale": "LINEAR",
                                                            "defaultValueType": "FIXED_EDITABLE",
                                                            "defaultValue": null,
                                                            "defaultDisplayValue": "[none]",
                                                            "description": null,
                                                            "dimension": false,
                                                            "excludeFromShifting": false,
                                                            "format": null,
                                                            "hidden": false,
                                                            "importAliases": null,
                                                            "label": null,
                                                            "lookupContainer": undefined,
                                                            "lookupQuery": undefined,
                                                            "lookupSchema": undefined,
                                                            "lookupValidator": undefined,
                                                            "measure": true,
                                                            "mvEnabled": false,
                                                            "name": "IntField",
                                                            "PHI": "NotPHI",
                                                            "propertyId": 521044,
                                                            "propertyURI": "urn:lsid:labkey.com:DataClass.Folder-5398:test1#IntField",
                                                            "propertyValidators": Array [],
                                                            "rangeValidators": Immutable.List [],
                                                            "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                                            "regexValidators": Immutable.List [],
                                                            "recommendedVariable": false,
                                                            "required": false,
                                                            "scale": 4000,
                                                            "URL": null,
                                                            "shownInDetailsView": true,
                                                            "shownInInsertView": true,
                                                            "shownInUpdateView": true,
                                                            "visible": true,
                                                            "dataType": Immutable.Record {
                                                              "conceptURI": undefined,
                                                              "display": "Integer",
                                                              "name": "int",
                                                              "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                                              "alternateRangeURI": "xsd:int",
                                                              "shortDisplay": undefined,
                                                              "lookupSchema": undefined,
                                                              "lookupQuery": undefined,
                                                            },
                                                            "lookupQueryValue": undefined,
                                                            "lookupType": Immutable.Record {
                                                              "conceptURI": undefined,
                                                              "display": "Lookup",
                                                              "name": "lookup",
                                                              "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                                              "alternateRangeURI": undefined,
                                                              "shortDisplay": undefined,
                                                              "lookupSchema": undefined,
                                                              "lookupQuery": undefined,
                                                            },
                                                            "original": Object {
                                                              "conceptURI": null,
                                                              "dataType": Immutable.Record {
                                                                "conceptURI": undefined,
                                                                "display": "Integer",
                                                                "name": "int",
                                                                "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                                                "alternateRangeURI": "xsd:int",
                                                                "shortDisplay": undefined,
                                                                "lookupSchema": undefined,
                                                                "lookupQuery": undefined,
                                                              },
                                                              "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                                            },
                                                            "updatedField": false,
                                                            "isPrimaryKey": false,
                                                            "lockType": "NotLocked",
                                                            "wrappedColumnName": undefined,
                                                            "disablePhiLevel": false,
                                                            "lockExistingField": false,
                                                            "sourceOntology": undefined,
                                                            "conceptSubtree": undefined,
                                                            "conceptLabelColumn": undefined,
                                                            "conceptImportColumn": undefined,
                                                            "principalConceptCode": undefined,
                                                            "derivationDataScope": undefined,
                                                            "selected": false,
                                                          }
                                                        }
                                                        fieldDetailsInfo={Object {}}
                                                        getDomainFields={[Function]}
                                                        helpNoun="field designer"
                                                        index={1}
                                                        isDragDisabled={false}
                                                        key="domain-row-key-1"
                                                        maxPhiLevel="NotPHI"
                                                        onChange={[Function]}
                                                        onDelete={[Function]}
                                                        onExpand={[Function]}
                                                        showDefaultValueSettings={false}
                                                        successBsStyle="success"
                                                      >
                                                        <PublicDraggable
                                                          draggableId="domainpropertiesrow-domaindrag-0-1"
                                                          index={1}
                                                          isDragDisabled={false}
                                                        >
                                                          <PrivateDraggable
                                                            canDragInteractiveElements={false}
                                                            draggableId="domainpropertiesrow-domaindrag-0-1"
                                                            index={1}
                                                            isClone={false}
                                                            isDragDisabled={false}
                                                            isEnabled={true}
                                                            shouldRespectForcePress={false}
                                                          >
                                                            <Connect(Draggable)
                                                              canDragInteractiveElements={false}
                                                              draggableId="domainpropertiesrow-domaindrag-0-1"
                                                              index={1}
                                                              isClone={false}
                                                              isDragDisabled={false}
                                                              isEnabled={true}
                                                              shouldRespectForcePress={false}
                                                            >
                                                              <Draggable
                                                                canDragInteractiveElements={false}
                                                                draggableId="domainpropertiesrow-domaindrag-0-1"
                                                                dropAnimationFinished={[Function]}
                                                                index={1}
                                                                isClone={false}
                                                                isDragDisabled={false}
                                                                isEnabled={true}
                                                                mapped={
                                                                  Object {
                                                                    "combineTargetFor": null,
                                                                    "offset": Object {
                                                                      "x": 0,
                                                                      "y": 0,
                                                                    },
                                                                    "shouldAnimateDisplacement": true,
                                                                    "snapshot": Object {
                                                                      "combineTargetFor": null,
                                                                      "combineWith": null,
                                                                      "draggingOver": null,
                                                                      "dropAnimation": null,
                                                                      "isClone": false,
                                                                      "isDragging": false,
                                                                      "isDropAnimating": false,
                                                                      "mode": null,
                                                                    },
                                                                    "type": "SECONDARY",
                                                                  }
                                                                }
                                                                shouldRespectForcePress={false}
                                                              >
                                                                <div
                                                                  className="domain-field-row domain-row-border-default"
                                                                  data-rbd-draggable-context-id="0"
                                                                  data-rbd-draggable-id="domainpropertiesrow-domaindrag-0-1"
                                                                  onTransitionEnd={null}
                                                                  style={
                                                                    Object {
                                                                      "transform": null,
                                                                      "transition": null,
                                                                    }
                                                                  }
                                                                  tabIndex={1}
                                                                >
                                                                  <Row
                                                                    bsClass="row"
                                                                    className="domain-row-container"
                                                                    componentClass="div"
                                                                    key="domainpropertiesrow-domainrow-0-1"
                                                                  >
                                                                    <div
                                                                      className="domain-row-container row"
                                                                    >
                                                                      <AdvancedSettings
                                                                        defaultDefaultValueType="FIXED_EDITABLE"
                                                                        defaultValueOptions={
                                                                          Immutable.List [
                                                                            "FIXED_EDITABLE",
                                                                            "LAST_ENTERED",
                                                                          ]
                                                                        }
                                                                        domainFormDisplayOptions={
                                                                          Object {
                                                                            "disableMvEnabled": false,
                                                                            "domainKindDisplayName": "data class",
                                                                            "hideAddFieldsButton": false,
                                                                            "hideConditionalFormatting": false,
                                                                            "hideFilePropertyType": false,
                                                                            "hideImportData": false,
                                                                            "hideImportExport": false,
                                                                            "hideRequired": false,
                                                                            "hideStudyPropertyTypes": false,
                                                                            "hideTextOptions": false,
                                                                            "hideValidators": false,
                                                                            "isDragDisabled": false,
                                                                            "phiLevelDisabled": false,
                                                                          }
                                                                        }
                                                                        domainId={58021}
                                                                        domainIndex={0}
                                                                        field={
                                                                          Immutable.Record {
                                                                            "conceptURI": null,
                                                                            "conditionalFormats": Immutable.List [],
                                                                            "defaultScale": "LINEAR",
                                                                            "defaultValueType": "FIXED_EDITABLE",
                                                                            "defaultValue": null,
                                                                            "defaultDisplayValue": "[none]",
                                                                            "description": null,
                                                                            "dimension": false,
                                                                            "excludeFromShifting": false,
                                                                            "format": null,
                                                                            "hidden": false,
                                                                            "importAliases": null,
                                                                            "label": null,
                                                                            "lookupContainer": undefined,
                                                                            "lookupQuery": undefined,
                                                                            "lookupSchema": undefined,
                                                                            "lookupValidator": undefined,
                                                                            "measure": true,
                                                                            "mvEnabled": false,
                                                                            "name": "IntField",
                                                                            "PHI": "NotPHI",
                                                                            "propertyId": 521044,
                                                                            "propertyURI": "urn:lsid:labkey.com:DataClass.Folder-5398:test1#IntField",
                                                                            "propertyValidators": Array [],
                                                                            "rangeValidators": Immutable.List [],
                                                                            "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                                                            "regexValidators": Immutable.List [],
                                                                            "recommendedVariable": false,
                                                                            "required": false,
                                                                            "scale": 4000,
                                                                            "URL": null,
                                                                            "shownInDetailsView": true,
                                                                            "shownInInsertView": true,
                                                                            "shownInUpdateView": true,
                                                                            "visible": true,
                                                                            "dataType": Immutable.Record {
                                                                              "conceptURI": undefined,
                                                                              "display": "Integer",
                                                                              "name": "int",
                                                                              "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                                                              "alternateRangeURI": "xsd:int",
                                                                              "shortDisplay": undefined,
                                                                              "lookupSchema": undefined,
                                                                              "lookupQuery": undefined,
                                                                            },
                                                                            "lookupQueryValue": undefined,
                                                                            "lookupType": Immutable.Record {
                                                                              "conceptURI": undefined,
                                                                              "display": "Lookup",
                                                                              "name": "lookup",
                                                                              "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                                                              "alternateRangeURI": undefined,
                                                                              "shortDisplay": undefined,
                                                                              "lookupSchema": undefined,
                                                                              "lookupQuery": undefined,
                                                                            },
                                                                            "original": Object {
                                                                              "conceptURI": null,
                                                                              "dataType": Immutable.Record {
                                                                                "conceptURI": undefined,
                                                                                "display": "Integer",
                                                                                "name": "int",
                                                                                "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                                                                "alternateRangeURI": "xsd:int",
                                                                                "shortDisplay": undefined,
                                                                                "lookupSchema": undefined,
                                                                                "lookupQuery": undefined,
                                                                              },
                                                                              "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                                                            },
                                                                            "updatedField": false,
                                                                            "isPrimaryKey": false,
                                                                            "lockType": "NotLocked",
                                                                            "wrappedColumnName": undefined,
                                                                            "disablePhiLevel": false,
                                                                            "lockExistingField": false,
                                                                            "sourceOntology": undefined,
                                                                            "conceptSubtree": undefined,
                                                                            "conceptLabelColumn": undefined,
                                                                            "conceptImportColumn": undefined,
                                                                            "principalConceptCode": undefined,
                                                                            "derivationDataScope": undefined,
                                                                            "selected": false,
                                                                          }
                                                                        }
                                                                        helpNoun="field designer"
                                                                        index={1}
                                                                        label="IntField"
                                                                        maxPhiLevel="NotPHI"
                                                                        onApply={[Function]}
                                                                        onHide={[Function]}
                                                                        show={false}
                                                                        showDefaultValueSettings={false}
                                                                        successBsStyle="success"
                                                                      >
                                                                        <Modal
                                                                          animation={true}
                                                                          autoFocus={true}
                                                                          backdrop={true}
                                                                          bsClass="modal"
                                                                          dialogComponentClass={[Function]}
                                                                          enforceFocus={true}
                                                                          keyboard={true}
                                                                          manager={
                                                                            ModalManager {
                                                                              "add": [Function],
                                                                              "containers": Array [],
                                                                              "data": Array [],
                                                                              "handleContainerOverflow": true,
                                                                              "hideSiblingNodes": true,
                                                                              "isTopModal": [Function],
                                                                              "modals": Array [],
                                                                              "remove": [Function],
                                                                            }
                                                                          }
                                                                          onEnter={[Function]}
                                                                          onHide={[Function]}
                                                                          renderBackdrop={[Function]}
                                                                          restoreFocus={true}
                                                                          show={false}
                                                                        >
                                                                          <Modal
                                                                            autoFocus={true}
                                                                            backdrop={true}
                                                                            backdropClassName="modal-backdrop"
                                                                            backdropTransition={[Function]}
                                                                            containerClassName="modal-open"
                                                                            enforceFocus={true}
                                                                            keyboard={true}
                                                                            manager={
                                                                              ModalManager {
                                                                                "add": [Function],
                                                                                "containers": Array [],
                                                                                "data": Array [],
                                                                                "handleContainerOverflow": true,
                                                                                "hideSiblingNodes": true,
                                                                                "isTopModal": [Function],
                                                                                "modals": Array [],
                                                                                "remove": [Function],
                                                                              }
                                                                            }
                                                                            onEnter={[Function]}
                                                                            onEntering={[Function]}
                                                                            onExited={[Function]}
                                                                            onHide={[Function]}
                                                                            onMouseUp={[Function]}
                                                                            renderBackdrop={[Function]}
                                                                            restoreFocus={true}
                                                                            show={false}
                                                                            transition={[Function]}
                                                                          />
                                                                        </Modal>
                                                                      </AdvancedSettings>
                                                                      <div
                                                                        aria-describedby="rbd-hidden-text-0-hidden-text-0"
                                                                        className="domain-row-handle"
                                                                        data-rbd-drag-handle-context-id="0"
                                                                        data-rbd-drag-handle-draggable-id="domainpropertiesrow-domaindrag-0-1"
                                                                        draggable={false}
                                                                        onDragStart={[Function]}
                                                                        role="button"
                                                                        tabIndex={0}
                                                                      >
                                                                        <DragDropHandle>
                                                                          <FontAwesomeIcon
                                                                            border={false}
                                                                            className=""
                                                                            fixedWidth={false}
                                                                            flip={null}
                                                                            icon={
                                                                              Object {
                                                                                "icon": Array [
                                                                                  320,
                                                                                  512,
                                                                                  Array [],
                                                                                  "f58e",
                                                                                  "M96 32H32C14.33 32 0 46.33 0 64v64c0 17.67 14.33 32 32 32h64c17.67 0 32-14.33 32-32V64c0-17.67-14.33-32-32-32zm0 160H32c-17.67 0-32 14.33-32 32v64c0 17.67 14.33 32 32 32h64c17.67 0 32-14.33 32-32v-64c0-17.67-14.33-32-32-32zm0 160H32c-17.67 0-32 14.33-32 32v64c0 17.67 14.33 32 32 32h64c17.67 0 32-14.33 32-32v-64c0-17.67-14.33-32-32-32zM288 32h-64c-17.67 0-32 14.33-32 32v64c0 17.67 14.33 32 32 32h64c17.67 0 32-14.33 32-32V64c0-17.67-14.33-32-32-32zm0 160h-64c-17.67 0-32 14.33-32 32v64c0 17.67 14.33 32 32 32h64c17.67 0 32-14.33 32-32v-64c0-17.67-14.33-32-32-32zm0 160h-64c-17.67 0-32 14.33-32 32v64c0 17.67 14.33 32 32 32h64c17.67 0 32-14.33 32-32v-64c0-17.67-14.33-32-32-32z",
                                                                                ],
                                                                                "iconName": "grip-vertical",
                                                                                "prefix": "fas",
                                                                              }
                                                                            }
                                                                            inverse={false}
                                                                            listItem={false}
                                                                            mask={null}
                                                                            pull={null}
                                                                            pulse={false}
                                                                            rotation={null}
                                                                            size={null}
                                                                            spin={false}
                                                                            swapOpacity={false}
                                                                            symbol={false}
                                                                            title=""
                                                                            transform={null}
                                                                          >
                                                                            <svg
                                                                              aria-hidden="true"
                                                                              className="svg-inline--fa fa-grip-vertical fa-w-10 "
                                                                              data-icon="grip-vertical"
                                                                              data-prefix="fas"
                                                                              focusable="false"
                                                                              role="img"
                                                                              style={Object {}}
                                                                              viewBox="0 0 320 512"
                                                                              xmlns="http://www.w3.org/2000/svg"
                                                                            >
                                                                              <path
                                                                                d="M96 32H32C14.33 32 0 46.33 0 64v64c0 17.67 14.33 32 32 32h64c17.67 0 32-14.33 32-32V64c0-17.67-14.33-32-32-32zm0 160H32c-17.67 0-32 14.33-32 32v64c0 17.67 14.33 32 32 32h64c17.67 0 32-14.33 32-32v-64c0-17.67-14.33-32-32-32zm0 160H32c-17.67 0-32 14.33-32 32v64c0 17.67 14.33 32 32 32h64c17.67 0 32-14.33 32-32v-64c0-17.67-14.33-32-32-32zM288 32h-64c-17.67 0-32 14.33-32 32v64c0 17.67 14.33 32 32 32h64c17.67 0 32-14.33 32-32V64c0-17.67-14.33-32-32-32zm0 160h-64c-17.67 0-32 14.33-32 32v64c0 17.67 14.33 32 32 32h64c17.67 0 32-14.33 32-32v-64c0-17.67-14.33-32-32-32zm0 160h-64c-17.67 0-32 14.33-32 32v64c0 17.67 14.33 32 32 32h64c17.67 0 32-14.33 32-32v-64c0-17.67-14.33-32-32-32z"
                                                                                fill="currentColor"
                                                                                style={Object {}}
                                                                              />
                                                                            </svg>
                                                                          </FontAwesomeIcon>
                                                                        </DragDropHandle>
                                                                      </div>
                                                                      <div
                                                                        className="domain-row-action-section"
                                                                      >
                                                                        <Checkbox
                                                                          bsClass="checkbox"
                                                                          checked={false}
                                                                          className="domain-field-check-icon"
                                                                          disabled={false}
                                                                          id="domainpropertiesrow-selected-0-1"
                                                                          inline={false}
                                                                          name="domainpropertiesrow-selected"
                                                                          onChange={[Function]}
                                                                          title=""
                                                                        >
                                                                          <div
                                                                            className="domain-field-check-icon checkbox"
                                                                          >
                                                                            <label
                                                                              title=""
                                                                            >
                                                                              <input
                                                                                checked={false}
                                                                                disabled={false}
                                                                                id="domainpropertiesrow-selected-0-1"
                                                                                name="domainpropertiesrow-selected"
                                                                                onChange={[Function]}
                                                                                type="checkbox"
                                                                              />
                                                                            </label>
                                                                          </div>
                                                                        </Checkbox>
                                                                        <FieldExpansionToggle
                                                                          cls="domain-field-expand-icon"
                                                                          collapsedTitle="Show additional field properties"
                                                                          expanded={false}
                                                                          expandedTitle="Hide additional field properties"
                                                                          id="domainpropertiesrow-expand-0-1"
                                                                          onClick={[Function]}
                                                                        >
                                                                          <div
                                                                            className="field-icon domain-field-expand-icon"
                                                                            id="domainpropertiesrow-expand-0-1"
                                                                            onClick={[Function]}
                                                                            title="Show additional field properties"
                                                                          >
                                                                            <FontAwesomeIcon
                                                                              border={false}
                                                                              className=""
                                                                              fixedWidth={false}
                                                                              flip={null}
                                                                              icon={
                                                                                Object {
                                                                                  "icon": Array [
                                                                                    448,
                                                                                    512,
                                                                                    Array [],
                                                                                    "f0fe",
                                                                                    "M400 32H48C21.5 32 0 53.5 0 80v352c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V80c0-26.5-21.5-48-48-48zm-32 252c0 6.6-5.4 12-12 12h-92v92c0 6.6-5.4 12-12 12h-56c-6.6 0-12-5.4-12-12v-92H92c-6.6 0-12-5.4-12-12v-56c0-6.6 5.4-12 12-12h92v-92c0-6.6 5.4-12 12-12h56c6.6 0 12 5.4 12 12v92h92c6.6 0 12 5.4 12 12v56z",
                                                                                  ],
                                                                                  "iconName": "plus-square",
                                                                                  "prefix": "fas",
                                                                                }
                                                                              }
                                                                              inverse={false}
                                                                              listItem={false}
                                                                              mask={null}
                                                                              pull={null}
                                                                              pulse={false}
                                                                              rotation={null}
                                                                              size="lg"
                                                                              spin={false}
                                                                              swapOpacity={false}
                                                                              symbol={false}
                                                                              title=""
                                                                              transform={null}
                                                                            >
                                                                              <svg
                                                                                aria-hidden="true"
                                                                                className="svg-inline--fa fa-plus-square fa-w-14 fa-lg "
                                                                                data-icon="plus-square"
                                                                                data-prefix="fas"
                                                                                focusable="false"
                                                                                role="img"
                                                                                style={Object {}}
                                                                                viewBox="0 0 448 512"
                                                                                xmlns="http://www.w3.org/2000/svg"
                                                                              >
                                                                                <path
                                                                                  d="M400 32H48C21.5 32 0 53.5 0 80v352c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V80c0-26.5-21.5-48-48-48zm-32 252c0 6.6-5.4 12-12 12h-92v92c0 6.6-5.4 12-12 12h-56c-6.6 0-12-5.4-12-12v-92H92c-6.6 0-12-5.4-12-12v-56c0-6.6 5.4-12 12-12h92v-92c0-6.6 5.4-12 12-12h56c6.6 0 12 5.4 12 12v92h92c6.6 0 12 5.4 12 12v56z"
                                                                                  fill="currentColor"
                                                                                  style={Object {}}
                                                                                />
                                                                              </svg>
                                                                            </FontAwesomeIcon>
                                                                          </div>
                                                                        </FieldExpansionToggle>
                                                                      </div>
                                                                      <div
                                                                        className="domain-row-main"
                                                                      >
                                                                        <Col
                                                                          bsClass="col"
                                                                          className="domain-row-base-fields domain-row-base-fields-position"
                                                                          componentClass="div"
                                                                          xs={6}
                                                                        >
                                                                          <div
                                                                            className="domain-row-base-fields domain-row-base-fields-position col-xs-6"
                                                                          >
                                                                            <div
                                                                              id="domainpropertiesrow-row-0-1"
                                                                            >
                                                                              <Col
                                                                                bsClass="col"
                                                                                componentClass="div"
                                                                                xs={6}
                                                                              >
                                                                                <div
                                                                                  className="col-xs-6"
                                                                                >
                                                                                  <FormControl
                                                                                    bsClass="form-control"
                                                                                    componentClass="input"
                                                                                    disabled={false}
                                                                                    id="domainpropertiesrow-name-0-1"
                                                                                    name="domainpropertiesrow-name"
                                                                                    onChange={[Function]}
                                                                                    type="text"
                                                                                    value="IntField"
                                                                                  >
                                                                                    <input
                                                                                      className="form-control"
                                                                                      disabled={false}
                                                                                      id="domainpropertiesrow-name-0-1"
                                                                                      name="domainpropertiesrow-name"
                                                                                      onChange={[Function]}
                                                                                      type="text"
                                                                                      value="IntField"
                                                                                    />
                                                                                  </FormControl>
                                                                                </div>
                                                                              </Col>
                                                                              <Col
                                                                                bsClass="col"
                                                                                componentClass="div"
                                                                                xs={4}
                                                                              >
                                                                                <div
                                                                                  className="col-xs-4"
                                                                                >
                                                                                  <FormControl
                                                                                    bsClass="form-control"
                                                                                    componentClass="select"
                                                                                    disabled={false}
                                                                                    id="domainpropertiesrow-type-0-1"
                                                                                    name="domainpropertiesrow-type"
                                                                                    onChange={[Function]}
                                                                                    value="int"
                                                                                  >
                                                                                    <select
                                                                                      className="form-control"
                                                                                      disabled={false}
                                                                                      id="domainpropertiesrow-type-0-1"
                                                                                      name="domainpropertiesrow-type"
                                                                                      onChange={[Function]}
                                                                                      value="int"
                                                                                    >
                                                                                      <option
                                                                                        key="int"
                                                                                        value="int"
                                                                                      >
                                                                                        Integer
                                                                                      </option>
                                                                                      <option
                                                                                        key="lookup"
                                                                                        value="lookup"
                                                                                      >
                                                                                        Lookup
                                                                                      </option>
                                                                                      <option
                                                                                        key="sample"
                                                                                        value="sample"
                                                                                      >
                                                                                        Sample
                                                                                      </option>
                                                                                      <option
                                                                                        key="users"
                                                                                        value="users"
                                                                                      >
                                                                                        User
                                                                                      </option>
                                                                                    </select>
                                                                                  </FormControl>
                                                                                </div>
                                                                              </Col>
                                                                              <Col
                                                                                bsClass="col"
                                                                                componentClass="div"
                                                                                xs={2}
                                                                              >
                                                                                <div
                                                                                  className="col-xs-2"
                                                                                >
                                                                                  <div
                                                                                    className="domain-field-checkbox-container"
                                                                                  >
                                                                                    <Checkbox
                                                                                      bsClass="checkbox"
                                                                                      checked={false}
                                                                                      className="domain-field-checkbox"
                                                                                      disabled={false}
                                                                                      id="domainpropertiesrow-required-0-1"
                                                                                      inline={false}
                                                                                      name="domainpropertiesrow-required"
                                                                                      onChange={[Function]}
                                                                                      title=""
                                                                                    >
                                                                                      <div
                                                                                        className="domain-field-checkbox checkbox"
                                                                                      >
                                                                                        <label
                                                                                          title=""
                                                                                        >
                                                                                          <input
                                                                                            checked={false}
                                                                                            disabled={false}
                                                                                            id="domainpropertiesrow-required-0-1"
                                                                                            name="domainpropertiesrow-required"
                                                                                            onChange={[Function]}
                                                                                            type="checkbox"
                                                                                          />
                                                                                        </label>
                                                                                      </div>
                                                                                    </Checkbox>
                                                                                  </div>
                                                                                </div>
                                                                              </Col>
                                                                            </div>
                                                                          </div>
                                                                        </Col>
                                                                        <Col
                                                                          bsClass="col"
                                                                          className="domain-row-details-container"
                                                                          componentClass="div"
                                                                          xs={6}
                                                                        >
                                                                          <div
                                                                            className="domain-row-details-container col-xs-6"
                                                                          >
                                                                            <div
                                                                              className="domain-field-details"
                                                                              id="domainpropertiesrow-details-0-1"
                                                                            />
                                                                            <div
                                                                              className="domain-field-buttons"
                                                                            >
                                                                              <DeleteIcon
                                                                                iconCls="domain-field-delete-icon"
                                                                                id="domainpropertiesrow-delete-0-1"
                                                                                onDelete={[Function]}
                                                                                title="Remove field"
                                                                              >
                                                                                <span
                                                                                  className="field-icon"
                                                                                  id="domainpropertiesrow-delete-0-1"
                                                                                  onClick={[Function]}
                                                                                  title="Remove field"
                                                                                >
                                                                                  <FontAwesomeIcon
                                                                                    border={false}
                                                                                    className="domain-field-delete-icon"
                                                                                    fixedWidth={false}
                                                                                    flip={null}
                                                                                    icon={
                                                                                      Object {
                                                                                        "icon": Array [
                                                                                          512,
                                                                                          512,
                                                                                          Array [],
                                                                                          "f057",
                                                                                          "M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8zm121.6 313.1c4.7 4.7 4.7 12.3 0 17L338 377.6c-4.7 4.7-12.3 4.7-17 0L256 312l-65.1 65.6c-4.7 4.7-12.3 4.7-17 0L134.4 338c-4.7-4.7-4.7-12.3 0-17l65.6-65-65.6-65.1c-4.7-4.7-4.7-12.3 0-17l39.6-39.6c4.7-4.7 12.3-4.7 17 0l65 65.7 65.1-65.6c4.7-4.7 12.3-4.7 17 0l39.6 39.6c4.7 4.7 4.7 12.3 0 17L312 256l65.6 65.1z",
                                                                                        ],
                                                                                        "iconName": "times-circle",
                                                                                        "prefix": "fas",
                                                                                      }
                                                                                    }
                                                                                    inverse={false}
                                                                                    listItem={false}
                                                                                    mask={null}
                                                                                    pull={null}
                                                                                    pulse={false}
                                                                                    rotation={null}
                                                                                    size={null}
                                                                                    spin={false}
                                                                                    swapOpacity={false}
                                                                                    symbol={false}
                                                                                    title=""
                                                                                    transform={null}
                                                                                  >
                                                                                    <svg
                                                                                      aria-hidden="true"
                                                                                      className="svg-inline--fa fa-times-circle fa-w-16 domain-field-delete-icon"
                                                                                      data-icon="times-circle"
                                                                                      data-prefix="fas"
                                                                                      focusable="false"
                                                                                      role="img"
                                                                                      style={Object {}}
                                                                                      viewBox="0 0 512 512"
                                                                                      xmlns="http://www.w3.org/2000/svg"
                                                                                    >
                                                                                      <path
                                                                                        d="M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8zm121.6 313.1c4.7 4.7 4.7 12.3 0 17L338 377.6c-4.7 4.7-12.3 4.7-17 0L256 312l-65.1 65.6c-4.7 4.7-12.3 4.7-17 0L134.4 338c-4.7-4.7-4.7-12.3 0-17l65.6-65-65.6-65.1c-4.7-4.7-4.7-12.3 0-17l39.6-39.6c4.7-4.7 12.3-4.7 17 0l65 65.7 65.1-65.6c4.7-4.7 12.3-4.7 17 0l39.6 39.6c4.7 4.7 4.7 12.3 0 17L312 256l65.6 65.1z"
                                                                                        fill="currentColor"
                                                                                        style={Object {}}
                                                                                      />
                                                                                    </svg>
                                                                                  </FontAwesomeIcon>
                                                                                </span>
                                                                              </DeleteIcon>
                                                                            </div>
                                                                          </div>
                                                                        </Col>
                                                                      </div>
                                                                    </div>
                                                                  </Row>
                                                                  <Collapse
                                                                    appear={false}
                                                                    dimension="height"
                                                                    getDimensionValue={[Function]}
                                                                    in={false}
                                                                    mountOnEnter={false}
                                                                    onExited={[Function]}
                                                                    onExiting={[Function]}
                                                                    timeout={300}
                                                                    unmountOnExit={false}
                                                                  >
                                                                    <Transition
                                                                      appear={false}
                                                                      aria-expanded={null}
                                                                      enter={true}
                                                                      exit={true}
                                                                      in={false}
                                                                      mountOnEnter={false}
                                                                      onEnter={[Function]}
                                                                      onEntered={[Function]}
                                                                      onEntering={[Function]}
                                                                      onExit={[Function]}
                                                                      onExited={[Function]}
                                                                      onExiting={[Function]}
                                                                      timeout={300}
                                                                      unmountOnExit={false}
                                                                    >
                                                                      <div
                                                                        aria-expanded={null}
                                                                        className="collapse"
                                                                      >
                                                                        <DomainRowExpandedOptions
                                                                          appPropertiesOnly={false}
                                                                          domainFormDisplayOptions={
                                                                            Object {
                                                                              "disableMvEnabled": false,
                                                                              "domainKindDisplayName": "data class",
                                                                              "hideAddFieldsButton": false,
                                                                              "hideConditionalFormatting": false,
                                                                              "hideFilePropertyType": false,
                                                                              "hideImportData": false,
                                                                              "hideImportExport": false,
                                                                              "hideRequired": false,
                                                                              "hideStudyPropertyTypes": false,
                                                                              "hideTextOptions": false,
                                                                              "hideValidators": false,
                                                                              "isDragDisabled": false,
                                                                              "phiLevelDisabled": false,
                                                                            }
                                                                          }
                                                                          domainIndex={0}
                                                                          field={
                                                                            Immutable.Record {
                                                                              "conceptURI": null,
                                                                              "conditionalFormats": Immutable.List [],
                                                                              "defaultScale": "LINEAR",
                                                                              "defaultValueType": "FIXED_EDITABLE",
                                                                              "defaultValue": null,
                                                                              "defaultDisplayValue": "[none]",
                                                                              "description": null,
                                                                              "dimension": false,
                                                                              "excludeFromShifting": false,
                                                                              "format": null,
                                                                              "hidden": false,
                                                                              "importAliases": null,
                                                                              "label": null,
                                                                              "lookupContainer": undefined,
                                                                              "lookupQuery": undefined,
                                                                              "lookupSchema": undefined,
                                                                              "lookupValidator": undefined,
                                                                              "measure": true,
                                                                              "mvEnabled": false,
                                                                              "name": "IntField",
                                                                              "PHI": "NotPHI",
                                                                              "propertyId": 521044,
                                                                              "propertyURI": "urn:lsid:labkey.com:DataClass.Folder-5398:test1#IntField",
                                                                              "propertyValidators": Array [],
                                                                              "rangeValidators": Immutable.List [],
                                                                              "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                                                              "regexValidators": Immutable.List [],
                                                                              "recommendedVariable": false,
                                                                              "required": false,
                                                                              "scale": 4000,
                                                                              "URL": null,
                                                                              "shownInDetailsView": true,
                                                                              "shownInInsertView": true,
                                                                              "shownInUpdateView": true,
                                                                              "visible": true,
                                                                              "dataType": Immutable.Record {
                                                                                "conceptURI": undefined,
                                                                                "display": "Integer",
                                                                                "name": "int",
                                                                                "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                                                                "alternateRangeURI": "xsd:int",
                                                                                "shortDisplay": undefined,
                                                                                "lookupSchema": undefined,
                                                                                "lookupQuery": undefined,
                                                                              },
                                                                              "lookupQueryValue": undefined,
                                                                              "lookupType": Immutable.Record {
                                                                                "conceptURI": undefined,
                                                                                "display": "Lookup",
                                                                                "name": "lookup",
                                                                                "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                                                                "alternateRangeURI": undefined,
                                                                                "shortDisplay": undefined,
                                                                                "lookupSchema": undefined,
                                                                                "lookupQuery": undefined,
                                                                              },
                                                                              "original": Object {
                                                                                "conceptURI": null,
                                                                                "dataType": Immutable.Record {
                                                                                  "conceptURI": undefined,
                                                                                  "display": "Integer",
                                                                                  "name": "int",
                                                                                  "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                                                                  "alternateRangeURI": "xsd:int",
                                                                                  "shortDisplay": undefined,
                                                                                  "lookupSchema": undefined,
                                                                                  "lookupQuery": undefined,
                                                                                },
                                                                                "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                                                              },
                                                                              "updatedField": false,
                                                                              "isPrimaryKey": false,
                                                                              "lockType": "NotLocked",
                                                                              "wrappedColumnName": undefined,
                                                                              "disablePhiLevel": false,
                                                                              "lockExistingField": false,
                                                                              "sourceOntology": undefined,
                                                                              "conceptSubtree": undefined,
                                                                              "conceptLabelColumn": undefined,
                                                                              "conceptImportColumn": undefined,
                                                                              "principalConceptCode": undefined,
                                                                              "derivationDataScope": undefined,
                                                                              "selected": false,
                                                                            }
                                                                          }
                                                                          getDomainFields={[Function]}
                                                                          index={1}
                                                                          onChange={[Function]}
                                                                          onMultiChange={[Function]}
                                                                          showingModal={[Function]}
                                                                          successBsStyle="success"
                                                                        >
                                                                          <div
                                                                            className="domain-row-container"
                                                                          >
                                                                            <div
                                                                              className="domain-row-container-expand-spacer"
                                                                            />
                                                                            <div
                                                                              className="domain-row-container-expanded"
                                                                            >
                                                                              <Col
                                                                                bsClass="col"
                                                                                componentClass="div"
                                                                                xs={12}
                                                                              >
                                                                                <div
                                                                                  className="col-xs-12"
                                                                                >
                                                                                  <NumericFieldOptions
                                                                                    defaultScale="LINEAR"
                                                                                    domainIndex={0}
                                                                                    format={null}
                                                                                    index={1}
                                                                                    label="Integer Options"
                                                                                    lockType="NotLocked"
                                                                                    onChange={[Function]}
                                                                                  >
                                                                                    <div>
                                                                                      <Row
                                                                                        bsClass="row"
                                                                                        componentClass="div"
                                                                                      >
                                                                                        <div
                                                                                          className="row"
                                                                                        >
                                                                                          <Col
                                                                                            bsClass="col"
                                                                                            componentClass="div"
                                                                                            xs={12}
                                                                                          >
                                                                                            <div
                                                                                              className="col-xs-12"
                                                                                            >
                                                                                              <SectionHeading
                                                                                                title="Integer Options"
                                                                                              >
                                                                                                <div
                                                                                                  className="domain-field-section-heading"
                                                                                                >
                                                                                                  Integer Options
                                                                                                </div>
                                                                                              </SectionHeading>
                                                                                            </div>
                                                                                          </Col>
                                                                                        </div>
                                                                                      </Row>
                                                                                      <Row
                                                                                        bsClass="row"
                                                                                        componentClass="div"
                                                                                      >
                                                                                        <div
                                                                                          className="row"
                                                                                        >
                                                                                          <Col
                                                                                            bsClass="col"
                                                                                            componentClass="div"
                                                                                            xs={3}
                                                                                          >
                                                                                            <div
                                                                                              className="col-xs-3"
                                                                                            >
                                                                                              <div
                                                                                                className="domain-field-label"
                                                                                              >
                                                                                                <DomainFieldLabel
                                                                                                  helpTipBody={
                                                                                                    <React.Fragment>
                                                                                                      <p>
                                                                                                        To control how a number value is displayed, provide a string format compatible with the Java
                                                                                                         
                                                                                                        <Memo
                                                                                                          urlSuffix="java/text/DecimalFormat.html"
                                                                                                        >
                                                                                                          DecimalFormat
                                                                                                        </Memo>
                                                                                                         class.
                                                                                                      </p>
                                                                                                      <p>
                                                                                                        Learn more about using 
                                                                                                        <HelpLink
                                                                                                          topic="dateFormats#number"
                                                                                                        >
                                                                                                          Number formats
                                                                                                        </HelpLink>
                                                                                                         in LabKey.
                                                                                                      </p>
                                                                                                    </React.Fragment>
                                                                                                  }
                                                                                                  label="Format for Numbers"
                                                                                                >
                                                                                                  Format for 
                                                                                                  <span
                                                                                                    className="domain-no-wrap"
                                                                                                  >
                                                                                                    Numbers
                                                                                                    <Component
                                                                                                      customStyle={Object {}}
                                                                                                      id="tooltip"
                                                                                                      size="1x"
                                                                                                      title="Format for Numbers"
                                                                                                    >
                                                                                                      <span
                                                                                                        className="label-help-target"
                                                                                                        onMouseOut={[Function]}
                                                                                                        onMouseOver={[Function]}
                                                                                                      >
                                                                                                        <FontAwesomeIcon
                                                                                                          border={false}
                                                                                                          className="label-help-icon"
                                                                                                          fixedWidth={false}
                                                                                                          flip={null}
                                                                                                          icon={
                                                                                                            Object {
                                                                                                              "icon": Array [
                                                                                                                512,
                                                                                                                512,
                                                                                                                Array [],
                                                                                                                "f059",
                                                                                                                "M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z",
                                                                                                              ],
                                                                                                              "iconName": "question-circle",
                                                                                                              "prefix": "fas",
                                                                                                            }
                                                                                                          }
                                                                                                          inverse={false}
                                                                                                          listItem={false}
                                                                                                          mask={null}
                                                                                                          pull={null}
                                                                                                          pulse={false}
                                                                                                          rotation={null}
                                                                                                          size="1x"
                                                                                                          spin={false}
                                                                                                          style={Object {}}
                                                                                                          swapOpacity={false}
                                                                                                          symbol={false}
                                                                                                          title=""
                                                                                                          transform={null}
                                                                                                        >
                                                                                                          <svg
                                                                                                            aria-hidden="true"
                                                                                                            className="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                                                                                                            data-icon="question-circle"
                                                                                                            data-prefix="fas"
                                                                                                            focusable="false"
                                                                                                            role="img"
                                                                                                            style={Object {}}
                                                                                                            viewBox="0 0 512 512"
                                                                                                            xmlns="http://www.w3.org/2000/svg"
                                                                                                          >
                                                                                                            <path
                                                                                                              d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                                                                              fill="currentColor"
                                                                                                              style={Object {}}
                                                                                                            />
                                                                                                          </svg>
                                                                                                        </FontAwesomeIcon>
                                                                                                        <Overlay
                                                                                                          animation={[Function]}
                                                                                                          placement="right"
                                                                                                          rootClose={false}
                                                                                                          show={false}
                                                                                                        >
                                                                                                          <Overlay
                                                                                                            placement="right"
                                                                                                            rootClose={false}
                                                                                                            show={false}
                                                                                                            transition={[Function]}
                                                                                                          />
                                                                                                        </Overlay>
                                                                                                      </span>
                                                                                                    </Component>
                                                                                                  </span>
                                                                                                </DomainFieldLabel>
                                                                                              </div>
                                                                                            </div>
                                                                                          </Col>
                                                                                          <Col
                                                                                            bsClass="col"
                                                                                            componentClass="div"
                                                                                            xs={2}
                                                                                          >
                                                                                            <div
                                                                                              className="col-xs-2"
                                                                                            >
                                                                                              <div
                                                                                                className="domain-field-label"
                                                                                              >
                                                                                                Default Scale Type
                                                                                              </div>
                                                                                            </div>
                                                                                          </Col>
                                                                                        </div>
                                                                                      </Row>
                                                                                      <Row
                                                                                        bsClass="row"
                                                                                        componentClass="div"
                                                                                      >
                                                                                        <div
                                                                                          className="row"
                                                                                        >
                                                                                          <Col
                                                                                            bsClass="col"
                                                                                            componentClass="div"
                                                                                            xs={3}
                                                                                          >
                                                                                            <div
                                                                                              className="col-xs-3"
                                                                                            >
                                                                                              <FormControl
                                                                                                bsClass="form-control"
                                                                                                componentClass="input"
                                                                                                disabled={false}
                                                                                                id="domainpropertiesrow-format-0-1"
                                                                                                name="domainpropertiesrow-format"
                                                                                                onChange={[Function]}
                                                                                                type="text"
                                                                                                value=""
                                                                                              >
                                                                                                <input
                                                                                                  className="form-control"
                                                                                                  disabled={false}
                                                                                                  id="domainpropertiesrow-format-0-1"
                                                                                                  name="domainpropertiesrow-format"
                                                                                                  onChange={[Function]}
                                                                                                  type="text"
                                                                                                  value=""
                                                                                                />
                                                                                              </FormControl>
                                                                                            </div>
                                                                                          </Col>
                                                                                          <Col
                                                                                            bsClass="col"
                                                                                            componentClass="div"
                                                                                            xs={2}
                                                                                          >
                                                                                            <div
                                                                                              className="col-xs-2"
                                                                                            >
                                                                                              <FormControl
                                                                                                bsClass="form-control"
                                                                                                componentClass="select"
                                                                                                disabled={false}
                                                                                                id="domainpropertiesrow-defaultScale-0-1"
                                                                                                name="domainpropertiesrow-defaultScale"
                                                                                                onChange={[Function]}
                                                                                                value="LINEAR"
                                                                                              >
                                                                                                <select
                                                                                                  className="form-control"
                                                                                                  disabled={false}
                                                                                                  id="domainpropertiesrow-defaultScale-0-1"
                                                                                                  name="domainpropertiesrow-defaultScale"
                                                                                                  onChange={[Function]}
                                                                                                  value="LINEAR"
                                                                                                >
                                                                                                  <option
                                                                                                    key="domainpropertiesrow-defaultScaleoption-LINEAR-0-1"
                                                                                                    value="LINEAR"
                                                                                                  >
                                                                                                    Linear
                                                                                                  </option>
                                                                                                  <option
                                                                                                    key="domainpropertiesrow-defaultScaleoption-LOG-0-1"
                                                                                                    value="LOG"
                                                                                                  >
                                                                                                    Log
                                                                                                  </option>
                                                                                                </select>
                                                                                              </FormControl>
                                                                                            </div>
                                                                                          </Col>
                                                                                        </div>
                                                                                      </Row>
                                                                                    </div>
                                                                                  </NumericFieldOptions>
                                                                                </div>
                                                                              </Col>
                                                                              <Col
                                                                                bsClass="col"
                                                                                componentClass="div"
                                                                                xs={12}
                                                                              >
                                                                                <div
                                                                                  className="col-xs-12"
                                                                                >
                                                                                  <NameAndLinkingOptions
                                                                                    appPropertiesOnly={false}
                                                                                    domainIndex={0}
                                                                                    field={
                                                                                      Immutable.Record {
                                                                                        "conceptURI": null,
                                                                                        "conditionalFormats": Immutable.List [],
                                                                                        "defaultScale": "LINEAR",
                                                                                        "defaultValueType": "FIXED_EDITABLE",
                                                                                        "defaultValue": null,
                                                                                        "defaultDisplayValue": "[none]",
                                                                                        "description": null,
                                                                                        "dimension": false,
                                                                                        "excludeFromShifting": false,
                                                                                        "format": null,
                                                                                        "hidden": false,
                                                                                        "importAliases": null,
                                                                                        "label": null,
                                                                                        "lookupContainer": undefined,
                                                                                        "lookupQuery": undefined,
                                                                                        "lookupSchema": undefined,
                                                                                        "lookupValidator": undefined,
                                                                                        "measure": true,
                                                                                        "mvEnabled": false,
                                                                                        "name": "IntField",
                                                                                        "PHI": "NotPHI",
                                                                                        "propertyId": 521044,
                                                                                        "propertyURI": "urn:lsid:labkey.com:DataClass.Folder-5398:test1#IntField",
                                                                                        "propertyValidators": Array [],
                                                                                        "rangeValidators": Immutable.List [],
                                                                                        "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                                                                        "regexValidators": Immutable.List [],
                                                                                        "recommendedVariable": false,
                                                                                        "required": false,
                                                                                        "scale": 4000,
                                                                                        "URL": null,
                                                                                        "shownInDetailsView": true,
                                                                                        "shownInInsertView": true,
                                                                                        "shownInUpdateView": true,
                                                                                        "visible": true,
                                                                                        "dataType": Immutable.Record {
                                                                                          "conceptURI": undefined,
                                                                                          "display": "Integer",
                                                                                          "name": "int",
                                                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                                                                          "alternateRangeURI": "xsd:int",
                                                                                          "shortDisplay": undefined,
                                                                                          "lookupSchema": undefined,
                                                                                          "lookupQuery": undefined,
                                                                                        },
                                                                                        "lookupQueryValue": undefined,
                                                                                        "lookupType": Immutable.Record {
                                                                                          "conceptURI": undefined,
                                                                                          "display": "Lookup",
                                                                                          "name": "lookup",
                                                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                                                                          "alternateRangeURI": undefined,
                                                                                          "shortDisplay": undefined,
                                                                                          "lookupSchema": undefined,
                                                                                          "lookupQuery": undefined,
                                                                                        },
                                                                                        "original": Object {
                                                                                          "conceptURI": null,
                                                                                          "dataType": Immutable.Record {
                                                                                            "conceptURI": undefined,
                                                                                            "display": "Integer",
                                                                                            "name": "int",
                                                                                            "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                                                                            "alternateRangeURI": "xsd:int",
                                                                                            "shortDisplay": undefined,
                                                                                            "lookupSchema": undefined,
                                                                                            "lookupQuery": undefined,
                                                                                          },
                                                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                                                                        },
                                                                                        "updatedField": false,
                                                                                        "isPrimaryKey": false,
                                                                                        "lockType": "NotLocked",
                                                                                        "wrappedColumnName": undefined,
                                                                                        "disablePhiLevel": false,
                                                                                        "lockExistingField": false,
                                                                                        "sourceOntology": undefined,
                                                                                        "conceptSubtree": undefined,
                                                                                        "conceptLabelColumn": undefined,
                                                                                        "conceptImportColumn": undefined,
                                                                                        "principalConceptCode": undefined,
                                                                                        "derivationDataScope": undefined,
                                                                                        "selected": false,
                                                                                      }
                                                                                    }
                                                                                    index={1}
                                                                                    onChange={[Function]}
                                                                                  >
                                                                                    <div>
                                                                                      <Row
                                                                                        bsClass="row"
                                                                                        componentClass="div"
                                                                                      >
                                                                                        <div
                                                                                          className="row"
                                                                                        >
                                                                                          <Col
                                                                                            bsClass="col"
                                                                                            componentClass="div"
                                                                                            xs={12}
                                                                                          >
                                                                                            <div
                                                                                              className="col-xs-12"
                                                                                            >
                                                                                              <SectionHeading
                                                                                                cls="domain-field-section-hdr"
                                                                                                title="Name and Linking Options"
                                                                                              >
                                                                                                <div
                                                                                                  className="domain-field-section-heading domain-field-section-hdr"
                                                                                                >
                                                                                                  Name and Linking Options
                                                                                                </div>
                                                                                              </SectionHeading>
                                                                                            </div>
                                                                                          </Col>
                                                                                        </div>
                                                                                      </Row>
                                                                                      <Row
                                                                                        bsClass="row"
                                                                                        componentClass="div"
                                                                                      >
                                                                                        <div
                                                                                          className="row"
                                                                                        >
                                                                                          <Col
                                                                                            bsClass="col"
                                                                                            componentClass="div"
                                                                                            xs={5}
                                                                                          >
                                                                                            <div
                                                                                              className="col-xs-5"
                                                                                            >
                                                                                              <div
                                                                                                className="domain-field-label"
                                                                                              >
                                                                                                Description
                                                                                              </div>
                                                                                              <FormControl
                                                                                                bsClass="form-control"
                                                                                                className="form-control textarea-noresize"
                                                                                                componentClass="textarea"
                                                                                                disabled={false}
                                                                                                id="domainpropertiesrow-description-0-1"
                                                                                                name="domainpropertiesrow-description"
                                                                                                onChange={[Function]}
                                                                                                rows={4}
                                                                                                value=""
                                                                                              >
                                                                                                <textarea
                                                                                                  className="form-control textarea-noresize form-control"
                                                                                                  disabled={false}
                                                                                                  id="domainpropertiesrow-description-0-1"
                                                                                                  name="domainpropertiesrow-description"
                                                                                                  onChange={[Function]}
                                                                                                  rows={4}
                                                                                                  value=""
                                                                                                />
                                                                                              </FormControl>
                                                                                            </div>
                                                                                          </Col>
                                                                                          <Col
                                                                                            bsClass="col"
                                                                                            componentClass="div"
                                                                                            xs={3}
                                                                                          >
                                                                                            <div
                                                                                              className="col-xs-3"
                                                                                            >
                                                                                              <div
                                                                                                className="domain-field-label"
                                                                                              >
                                                                                                Label
                                                                                              </div>
                                                                                              <FormControl
                                                                                                bsClass="form-control"
                                                                                                componentClass="input"
                                                                                                disabled={false}
                                                                                                id="domainpropertiesrow-label-0-1"
                                                                                                name="domainpropertiesrow-label"
                                                                                                onChange={[Function]}
                                                                                                type="text"
                                                                                                value=""
                                                                                              >
                                                                                                <input
                                                                                                  className="form-control"
                                                                                                  disabled={false}
                                                                                                  id="domainpropertiesrow-label-0-1"
                                                                                                  name="domainpropertiesrow-label"
                                                                                                  onChange={[Function]}
                                                                                                  type="text"
                                                                                                  value=""
                                                                                                />
                                                                                              </FormControl>
                                                                                              <div
                                                                                                className="domain-field-label"
                                                                                              >
                                                                                                <DomainFieldLabel
                                                                                                  helpTipBody={
                                                                                                    <React.Fragment>
                                                                                                      Define alternate field names to be used when importing from a file.
                                                                                                      <br />
                                                                                                      <br />
                                                                                                      Multiple aliases may be separated by spaces or commas. To define an alias that contains spaces, use double-quotes (") around it.
                                                                                                    </React.Fragment>
                                                                                                  }
                                                                                                  label="Import Aliases"
                                                                                                >
                                                                                                  Import 
                                                                                                  <span
                                                                                                    className="domain-no-wrap"
                                                                                                  >
                                                                                                    Aliases
                                                                                                    <Component
                                                                                                      customStyle={Object {}}
                                                                                                      id="tooltip"
                                                                                                      size="1x"
                                                                                                      title="Import Aliases"
                                                                                                    >
                                                                                                      <span
                                                                                                        className="label-help-target"
                                                                                                        onMouseOut={[Function]}
                                                                                                        onMouseOver={[Function]}
                                                                                                      >
                                                                                                        <FontAwesomeIcon
                                                                                                          border={false}
                                                                                                          className="label-help-icon"
                                                                                                          fixedWidth={false}
                                                                                                          flip={null}
                                                                                                          icon={
                                                                                                            Object {
                                                                                                              "icon": Array [
                                                                                                                512,
                                                                                                                512,
                                                                                                                Array [],
                                                                                                                "f059",
                                                                                                                "M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z",
                                                                                                              ],
                                                                                                              "iconName": "question-circle",
                                                                                                              "prefix": "fas",
                                                                                                            }
                                                                                                          }
                                                                                                          inverse={false}
                                                                                                          listItem={false}
                                                                                                          mask={null}
                                                                                                          pull={null}
                                                                                                          pulse={false}
                                                                                                          rotation={null}
                                                                                                          size="1x"
                                                                                                          spin={false}
                                                                                                          style={Object {}}
                                                                                                          swapOpacity={false}
                                                                                                          symbol={false}
                                                                                                          title=""
                                                                                                          transform={null}
                                                                                                        >
                                                                                                          <svg
                                                                                                            aria-hidden="true"
                                                                                                            className="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                                                                                                            data-icon="question-circle"
                                                                                                            data-prefix="fas"
                                                                                                            focusable="false"
                                                                                                            role="img"
                                                                                                            style={Object {}}
                                                                                                            viewBox="0 0 512 512"
                                                                                                            xmlns="http://www.w3.org/2000/svg"
                                                                                                          >
                                                                                                            <path
                                                                                                              d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                                                                              fill="currentColor"
                                                                                                              style={Object {}}
                                                                                                            />
                                                                                                          </svg>
                                                                                                        </FontAwesomeIcon>
                                                                                                        <Overlay
                                                                                                          animation={[Function]}
                                                                                                          placement="right"
                                                                                                          rootClose={false}
                                                                                                          show={false}
                                                                                                        >
                                                                                                          <Overlay
                                                                                                            placement="right"
                                                                                                            rootClose={false}
                                                                                                            show={false}
                                                                                                            transition={[Function]}
                                                                                                          />
                                                                                                        </Overlay>
                                                                                                      </span>
                                                                                                    </Component>
                                                                                                  </span>
                                                                                                </DomainFieldLabel>
                                                                                              </div>
                                                                                              <FormControl
                                                                                                bsClass="form-control"
                                                                                                componentClass="input"
                                                                                                disabled={false}
                                                                                                id="domainpropertiesrow-importAliases-0-1"
                                                                                                name="domainpropertiesrow-importAliases"
                                                                                                onChange={[Function]}
                                                                                                type="text"
                                                                                                value=""
                                                                                              >
                                                                                                <input
                                                                                                  className="form-control"
                                                                                                  disabled={false}
                                                                                                  id="domainpropertiesrow-importAliases-0-1"
                                                                                                  name="domainpropertiesrow-importAliases"
                                                                                                  onChange={[Function]}
                                                                                                  type="text"
                                                                                                  value=""
                                                                                                />
                                                                                              </FormControl>
                                                                                            </div>
                                                                                          </Col>
                                                                                          <Col
                                                                                            bsClass="col"
                                                                                            componentClass="div"
                                                                                            xs={4}
                                                                                          >
                                                                                            <div
                                                                                              className="col-xs-4"
                                                                                            >
                                                                                              <div
                                                                                                className="domain-field-label"
                                                                                              >
                                                                                                <DomainFieldLabel
                                                                                                  helpTipBody={
                                                                                                    <React.Fragment>
                                                                                                      Use this to change the display of the field value within a data grid into a link. Multiple formats are supported, which allows ways to easily substitute and link to other locations in LabKey.
                                                                                                      <br />
                                                                                                      <br />
                                                                                                      Learn more about using 
                                                                                                      <HelpLink
                                                                                                        topic="urlEncoding"
                                                                                                      >
                                                                                                        URL Formatting Options
                                                                                                      </HelpLink>
                                                                                                      .
                                                                                                    </React.Fragment>
                                                                                                  }
                                                                                                  label="URL"
                                                                                                >
                                                                                                  <span
                                                                                                    className="domain-no-wrap"
                                                                                                  >
                                                                                                    URL
                                                                                                    <Component
                                                                                                      customStyle={Object {}}
                                                                                                      id="tooltip"
                                                                                                      size="1x"
                                                                                                      title="URL"
                                                                                                    >
                                                                                                      <span
                                                                                                        className="label-help-target"
                                                                                                        onMouseOut={[Function]}
                                                                                                        onMouseOver={[Function]}
                                                                                                      >
                                                                                                        <FontAwesomeIcon
                                                                                                          border={false}
                                                                                                          className="label-help-icon"
                                                                                                          fixedWidth={false}
                                                                                                          flip={null}
                                                                                                          icon={
                                                                                                            Object {
                                                                                                              "icon": Array [
                                                                                                                512,
                                                                                                                512,
                                                                                                                Array [],
                                                                                                                "f059",
                                                                                                                "M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z",
                                                                                                              ],
                                                                                                              "iconName": "question-circle",
                                                                                                              "prefix": "fas",
                                                                                                            }
                                                                                                          }
                                                                                                          inverse={false}
                                                                                                          listItem={false}
                                                                                                          mask={null}
                                                                                                          pull={null}
                                                                                                          pulse={false}
                                                                                                          rotation={null}
                                                                                                          size="1x"
                                                                                                          spin={false}
                                                                                                          style={Object {}}
                                                                                                          swapOpacity={false}
                                                                                                          symbol={false}
                                                                                                          title=""
                                                                                                          transform={null}
                                                                                                        >
                                                                                                          <svg
                                                                                                            aria-hidden="true"
                                                                                                            className="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                                                                                                            data-icon="question-circle"
                                                                                                            data-prefix="fas"
                                                                                                            focusable="false"
                                                                                                            role="img"
                                                                                                            style={Object {}}
                                                                                                            viewBox="0 0 512 512"
                                                                                                            xmlns="http://www.w3.org/2000/svg"
                                                                                                          >
                                                                                                            <path
                                                                                                              d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                                                                              fill="currentColor"
                                                                                                              style={Object {}}
                                                                                                            />
                                                                                                          </svg>
                                                                                                        </FontAwesomeIcon>
                                                                                                        <Overlay
                                                                                                          animation={[Function]}
                                                                                                          placement="right"
                                                                                                          rootClose={false}
                                                                                                          show={false}
                                                                                                        >
                                                                                                          <Overlay
                                                                                                            placement="right"
                                                                                                            rootClose={false}
                                                                                                            show={false}
                                                                                                            transition={[Function]}
                                                                                                          />
                                                                                                        </Overlay>
                                                                                                      </span>
                                                                                                    </Component>
                                                                                                  </span>
                                                                                                </DomainFieldLabel>
                                                                                              </div>
                                                                                              <FormControl
                                                                                                bsClass="form-control"
                                                                                                componentClass="input"
                                                                                                disabled={false}
                                                                                                id="domainpropertiesrow-URL-0-1"
                                                                                                name="domainpropertiesrow-URL"
                                                                                                onChange={[Function]}
                                                                                                type="text"
                                                                                                value=""
                                                                                              >
                                                                                                <input
                                                                                                  className="form-control"
                                                                                                  disabled={false}
                                                                                                  id="domainpropertiesrow-URL-0-1"
                                                                                                  name="domainpropertiesrow-URL"
                                                                                                  onChange={[Function]}
                                                                                                  type="text"
                                                                                                  value=""
                                                                                                />
                                                                                              </FormControl>
                                                                                            </div>
                                                                                          </Col>
                                                                                        </div>
                                                                                      </Row>
                                                                                    </div>
                                                                                  </NameAndLinkingOptions>
                                                                                </div>
                                                                              </Col>
                                                                              <Col
                                                                                bsClass="col"
                                                                                componentClass="div"
                                                                                xs={12}
                                                                              >
                                                                                <div
                                                                                  className="col-xs-12"
                                                                                >
                                                                                  <ConditionalFormattingAndValidation
                                                                                    domainFormDisplayOptions={
                                                                                      Object {
                                                                                        "disableMvEnabled": false,
                                                                                        "domainKindDisplayName": "data class",
                                                                                        "hideAddFieldsButton": false,
                                                                                        "hideConditionalFormatting": false,
                                                                                        "hideFilePropertyType": false,
                                                                                        "hideImportData": false,
                                                                                        "hideImportExport": false,
                                                                                        "hideRequired": false,
                                                                                        "hideStudyPropertyTypes": false,
                                                                                        "hideTextOptions": false,
                                                                                        "hideValidators": false,
                                                                                        "isDragDisabled": false,
                                                                                        "phiLevelDisabled": false,
                                                                                      }
                                                                                    }
                                                                                    domainIndex={0}
                                                                                    field={
                                                                                      Immutable.Record {
                                                                                        "conceptURI": null,
                                                                                        "conditionalFormats": Immutable.List [],
                                                                                        "defaultScale": "LINEAR",
                                                                                        "defaultValueType": "FIXED_EDITABLE",
                                                                                        "defaultValue": null,
                                                                                        "defaultDisplayValue": "[none]",
                                                                                        "description": null,
                                                                                        "dimension": false,
                                                                                        "excludeFromShifting": false,
                                                                                        "format": null,
                                                                                        "hidden": false,
                                                                                        "importAliases": null,
                                                                                        "label": null,
                                                                                        "lookupContainer": undefined,
                                                                                        "lookupQuery": undefined,
                                                                                        "lookupSchema": undefined,
                                                                                        "lookupValidator": undefined,
                                                                                        "measure": true,
                                                                                        "mvEnabled": false,
                                                                                        "name": "IntField",
                                                                                        "PHI": "NotPHI",
                                                                                        "propertyId": 521044,
                                                                                        "propertyURI": "urn:lsid:labkey.com:DataClass.Folder-5398:test1#IntField",
                                                                                        "propertyValidators": Array [],
                                                                                        "rangeValidators": Immutable.List [],
                                                                                        "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                                                                        "regexValidators": Immutable.List [],
                                                                                        "recommendedVariable": false,
                                                                                        "required": false,
                                                                                        "scale": 4000,
                                                                                        "URL": null,
                                                                                        "shownInDetailsView": true,
                                                                                        "shownInInsertView": true,
                                                                                        "shownInUpdateView": true,
                                                                                        "visible": true,
                                                                                        "dataType": Immutable.Record {
                                                                                          "conceptURI": undefined,
                                                                                          "display": "Integer",
                                                                                          "name": "int",
                                                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                                                                          "alternateRangeURI": "xsd:int",
                                                                                          "shortDisplay": undefined,
                                                                                          "lookupSchema": undefined,
                                                                                          "lookupQuery": undefined,
                                                                                        },
                                                                                        "lookupQueryValue": undefined,
                                                                                        "lookupType": Immutable.Record {
                                                                                          "conceptURI": undefined,
                                                                                          "display": "Lookup",
                                                                                          "name": "lookup",
                                                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                                                                          "alternateRangeURI": undefined,
                                                                                          "shortDisplay": undefined,
                                                                                          "lookupSchema": undefined,
                                                                                          "lookupQuery": undefined,
                                                                                        },
                                                                                        "original": Object {
                                                                                          "conceptURI": null,
                                                                                          "dataType": Immutable.Record {
                                                                                            "conceptURI": undefined,
                                                                                            "display": "Integer",
                                                                                            "name": "int",
                                                                                            "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                                                                            "alternateRangeURI": "xsd:int",
                                                                                            "shortDisplay": undefined,
                                                                                            "lookupSchema": undefined,
                                                                                            "lookupQuery": undefined,
                                                                                          },
                                                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                                                                        },
                                                                                        "updatedField": false,
                                                                                        "isPrimaryKey": false,
                                                                                        "lockType": "NotLocked",
                                                                                        "wrappedColumnName": undefined,
                                                                                        "disablePhiLevel": false,
                                                                                        "lockExistingField": false,
                                                                                        "sourceOntology": undefined,
                                                                                        "conceptSubtree": undefined,
                                                                                        "conceptLabelColumn": undefined,
                                                                                        "conceptImportColumn": undefined,
                                                                                        "principalConceptCode": undefined,
                                                                                        "derivationDataScope": undefined,
                                                                                        "selected": false,
                                                                                      }
                                                                                    }
                                                                                    index={1}
                                                                                    onChange={[Function]}
                                                                                    showingModal={[Function]}
                                                                                    successBsStyle="success"
                                                                                  >
                                                                                    <div>
                                                                                      <Row
                                                                                        bsClass="row"
                                                                                        componentClass="div"
                                                                                      >
                                                                                        <div
                                                                                          className="row"
                                                                                        >
                                                                                          <Col
                                                                                            bsClass="col"
                                                                                            componentClass="div"
                                                                                            xs={12}
                                                                                          >
                                                                                            <div
                                                                                              className="col-xs-12"
                                                                                            >
                                                                                              <SectionHeading
                                                                                                cls="domain-field-section-hdr"
                                                                                                title="Conditional Formatting and Validation Options"
                                                                                              >
                                                                                                <div
                                                                                                  className="domain-field-section-heading domain-field-section-hdr"
                                                                                                >
                                                                                                  Conditional Formatting and Validation Options
                                                                                                </div>
                                                                                              </SectionHeading>
                                                                                            </div>
                                                                                          </Col>
                                                                                        </div>
                                                                                      </Row>
                                                                                      <Row
                                                                                        bsClass="row"
                                                                                        componentClass="div"
                                                                                      >
                                                                                        <div
                                                                                          className="row"
                                                                                        >
                                                                                          <Col
                                                                                            bsClass="col"
                                                                                            componentClass="div"
                                                                                            xs={12}
                                                                                          >
                                                                                            <div
                                                                                              className="col-xs-12"
                                                                                            >
                                                                                              <div
                                                                                                className="domain-validation-group"
                                                                                              >
                                                                                                <div
                                                                                                  className="domain-field-label domain-no-wrap"
                                                                                                >
                                                                                                  <DomainFieldLabel
                                                                                                    helpTipBody={
                                                                                                      <React.Fragment>
                                                                                                        <p>
                                                                                                          Conditional formats allow targeted display formatting for values that meet defined conditions.
                                                                                                        </p>
                                                                                                        <p>
                                                                                                          Learn more about using 
                                                                                                          <HelpLink
                                                                                                            topic="fieldEditor#conditional"
                                                                                                          >
                                                                                                            Conditional Formats
                                                                                                          </HelpLink>
                                                                                                          .
                                                                                                        </p>
                                                                                                      </React.Fragment>
                                                                                                    }
                                                                                                    label="Create Conditional Format Criteria"
                                                                                                  >
                                                                                                    Create Conditional Format 
                                                                                                    <span
                                                                                                      className="domain-no-wrap"
                                                                                                    >
                                                                                                      Criteria
                                                                                                      <Component
                                                                                                        customStyle={Object {}}
                                                                                                        id="tooltip"
                                                                                                        size="1x"
                                                                                                        title="Create Conditional Format Criteria"
                                                                                                      >
                                                                                                        <span
                                                                                                          className="label-help-target"
                                                                                                          onMouseOut={[Function]}
                                                                                                          onMouseOver={[Function]}
                                                                                                        >
                                                                                                          <FontAwesomeIcon
                                                                                                            border={false}
                                                                                                            className="label-help-icon"
                                                                                                            fixedWidth={false}
                                                                                                            flip={null}
                                                                                                            icon={
                                                                                                              Object {
                                                                                                                "icon": Array [
                                                                                                                  512,
                                                                                                                  512,
                                                                                                                  Array [],
                                                                                                                  "f059",
                                                                                                                  "M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z",
                                                                                                                ],
                                                                                                                "iconName": "question-circle",
                                                                                                                "prefix": "fas",
                                                                                                              }
                                                                                                            }
                                                                                                            inverse={false}
                                                                                                            listItem={false}
                                                                                                            mask={null}
                                                                                                            pull={null}
                                                                                                            pulse={false}
                                                                                                            rotation={null}
                                                                                                            size="1x"
                                                                                                            spin={false}
                                                                                                            style={Object {}}
                                                                                                            swapOpacity={false}
                                                                                                            symbol={false}
                                                                                                            title=""
                                                                                                            transform={null}
                                                                                                          >
                                                                                                            <svg
                                                                                                              aria-hidden="true"
                                                                                                              className="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                                                                                                              data-icon="question-circle"
                                                                                                              data-prefix="fas"
                                                                                                              focusable="false"
                                                                                                              role="img"
                                                                                                              style={Object {}}
                                                                                                              viewBox="0 0 512 512"
                                                                                                              xmlns="http://www.w3.org/2000/svg"
                                                                                                            >
                                                                                                              <path
                                                                                                                d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                                                                                fill="currentColor"
                                                                                                                style={Object {}}
                                                                                                              />
                                                                                                            </svg>
                                                                                                          </FontAwesomeIcon>
                                                                                                          <Overlay
                                                                                                            animation={[Function]}
                                                                                                            placement="right"
                                                                                                            rootClose={false}
                                                                                                            show={false}
                                                                                                          >
                                                                                                            <Overlay
                                                                                                              placement="right"
                                                                                                              rootClose={false}
                                                                                                              show={false}
                                                                                                              transition={[Function]}
                                                                                                            />
                                                                                                          </Overlay>
                                                                                                        </span>
                                                                                                      </Component>
                                                                                                    </span>
                                                                                                  </DomainFieldLabel>
                                                                                                </div>
                                                                                                <div>
                                                                                                  <Button
                                                                                                    active={false}
                                                                                                    block={false}
                                                                                                    bsClass="btn"
                                                                                                    bsStyle="default"
                                                                                                    className="domain-validation-button"
                                                                                                    disabled={false}
                                                                                                    id="domainpropertiesrow-conditionalFormat-0-1"
                                                                                                    name="domainpropertiesrow-conditionalFormat"
                                                                                                    onClick={[Function]}
                                                                                                  >
                                                                                                    <button
                                                                                                      className="domain-validation-button btn btn-default"
                                                                                                      disabled={false}
                                                                                                      id="domainpropertiesrow-conditionalFormat-0-1"
                                                                                                      name="domainpropertiesrow-conditionalFormat"
                                                                                                      onClick={[Function]}
                                                                                                      type="button"
                                                                                                    >
                                                                                                      Add Format
                                                                                                    </button>
                                                                                                  </Button>
                                                                                                  <span
                                                                                                    className="domain-text-label"
                                                                                                  >
                                                                                                    None Set
                                                                                                  </span>
                                                                                                </div>
                                                                                              </div>
                                                                                              <div
                                                                                                className=""
                                                                                              >
                                                                                                <div
                                                                                                  className="domain-field-label domain-no-wrap"
                                                                                                >
                                                                                                  <DomainFieldLabel
                                                                                                    helpTipBody={
                                                                                                      <React.Fragment>
                                                                                                        <p>
                                                                                                          Range validators allow you to specify numeric comparisons that must be satisfied.
                                                                                                        </p>
                                                                                                        <p>
                                                                                                          Learn more about using 
                                                                                                          <HelpLink
                                                                                                            topic="fieldEditor#range"
                                                                                                          >
                                                                                                            Range Validation
                                                                                                          </HelpLink>
                                                                                                          .
                                                                                                        </p>
                                                                                                      </React.Fragment>
                                                                                                    }
                                                                                                    label="Create Range Validator"
                                                                                                  >
                                                                                                    Create Range 
                                                                                                    <span
                                                                                                      className="domain-no-wrap"
                                                                                                    >
                                                                                                      Validator
                                                                                                      <Component
                                                                                                        customStyle={Object {}}
                                                                                                        id="tooltip"
                                                                                                        size="1x"
                                                                                                        title="Create Range Validator"
                                                                                                      >
                                                                                                        <span
                                                                                                          className="label-help-target"
                                                                                                          onMouseOut={[Function]}
                                                                                                          onMouseOver={[Function]}
                                                                                                        >
                                                                                                          <FontAwesomeIcon
                                                                                                            border={false}
                                                                                                            className="label-help-icon"
                                                                                                            fixedWidth={false}
                                                                                                            flip={null}
                                                                                                            icon={
                                                                                                              Object {
                                                                                                                "icon": Array [
                                                                                                                  512,
                                                                                                                  512,
                                                                                                                  Array [],
                                                                                                                  "f059",
                                                                                                                  "M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z",
                                                                                                                ],
                                                                                                                "iconName": "question-circle",
                                                                                                                "prefix": "fas",
                                                                                                              }
                                                                                                            }
                                                                                                            inverse={false}
                                                                                                            listItem={false}
                                                                                                            mask={null}
                                                                                                            pull={null}
                                                                                                            pulse={false}
                                                                                                            rotation={null}
                                                                                                            size="1x"
                                                                                                            spin={false}
                                                                                                            style={Object {}}
                                                                                                            swapOpacity={false}
                                                                                                            symbol={false}
                                                                                                            title=""
                                                                                                            transform={null}
                                                                                                          >
                                                                                                            <svg
                                                                                                              aria-hidden="true"
                                                                                                              className="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                                                                                                              data-icon="question-circle"
                                                                                                              data-prefix="fas"
                                                                                                              focusable="false"
                                                                                                              role="img"
                                                                                                              style={Object {}}
                                                                                                              viewBox="0 0 512 512"
                                                                                                              xmlns="http://www.w3.org/2000/svg"
                                                                                                            >
                                                                                                              <path
                                                                                                                d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                                                                                fill="currentColor"
                                                                                                                style={Object {}}
                                                                                                              />
                                                                                                            </svg>
                                                                                                          </FontAwesomeIcon>
                                                                                                          <Overlay
                                                                                                            animation={[Function]}
                                                                                                            placement="right"
                                                                                                            rootClose={false}
                                                                                                            show={false}
                                                                                                          >
                                                                                                            <Overlay
                                                                                                              placement="right"
                                                                                                              rootClose={false}
                                                                                                              show={false}
                                                                                                              transition={[Function]}
                                                                                                            />
                                                                                                          </Overlay>
                                                                                                        </span>
                                                                                                      </Component>
                                                                                                    </span>
                                                                                                  </DomainFieldLabel>
                                                                                                </div>
                                                                                                <div>
                                                                                                  <Button
                                                                                                    active={false}
                                                                                                    block={false}
                                                                                                    bsClass="btn"
                                                                                                    bsStyle="default"
                                                                                                    className="domain-validation-button"
                                                                                                    disabled={false}
                                                                                                    id="domainpropertiesrow-rangeValidator-0-1"
                                                                                                    name="domainpropertiesrow-rangeValidator"
                                                                                                    onClick={[Function]}
                                                                                                  >
                                                                                                    <button
                                                                                                      className="domain-validation-button btn btn-default"
                                                                                                      disabled={false}
                                                                                                      id="domainpropertiesrow-rangeValidator-0-1"
                                                                                                      name="domainpropertiesrow-rangeValidator"
                                                                                                      onClick={[Function]}
                                                                                                      type="button"
                                                                                                    >
                                                                                                      Add Range
                                                                                                    </button>
                                                                                                  </Button>
                                                                                                  <span
                                                                                                    className="domain-text-label"
                                                                                                  >
                                                                                                    None Set
                                                                                                  </span>
                                                                                                </div>
                                                                                              </div>
                                                                                            </div>
                                                                                          </Col>
                                                                                        </div>
                                                                                      </Row>
                                                                                    </div>
                                                                                  </ConditionalFormattingAndValidation>
                                                                                </div>
                                                                              </Col>
                                                                            </div>
                                                                          </div>
                                                                        </DomainRowExpandedOptions>
                                                                      </div>
                                                                    </Transition>
                                                                  </Collapse>
                                                                </div>
                                                              </Draggable>
                                                            </Connect(Draggable)>
                                                          </PrivateDraggable>
                                                        </PublicDraggable>
                                                      </DomainRow>
                                                      <DomainRow
                                                        appPropertiesOnly={false}
                                                        availableTypes={
                                                          Immutable.List [
                                                            Immutable.Record {
                                                              "conceptURI": undefined,
                                                              "display": "Text",
                                                              "name": "string",
                                                              "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                              "alternateRangeURI": "xsd:string",
                                                              "shortDisplay": "String",
                                                              "lookupSchema": undefined,
                                                              "lookupQuery": undefined,
                                                            },
                                                            Immutable.Record {
                                                              "conceptURI": undefined,
                                                              "display": "Multi-Line Text",
                                                              "name": "multiLine",
                                                              "rangeURI": "http://www.w3.org/2001/XMLSchema#multiLine",
                                                              "alternateRangeURI": undefined,
                                                              "shortDisplay": undefined,
                                                              "lookupSchema": undefined,
                                                              "lookupQuery": undefined,
                                                            },
                                                            Immutable.Record {
                                                              "conceptURI": undefined,
                                                              "display": "Boolean",
                                                              "name": "boolean",
                                                              "rangeURI": "http://www.w3.org/2001/XMLSchema#boolean",
                                                              "alternateRangeURI": "xsd:boolean",
                                                              "shortDisplay": undefined,
                                                              "lookupSchema": undefined,
                                                              "lookupQuery": undefined,
                                                            },
                                                            Immutable.Record {
                                                              "conceptURI": undefined,
                                                              "display": "Integer",
                                                              "name": "int",
                                                              "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                                              "alternateRangeURI": "xsd:int",
                                                              "shortDisplay": undefined,
                                                              "lookupSchema": undefined,
                                                              "lookupQuery": undefined,
                                                            },
                                                            Immutable.Record {
                                                              "conceptURI": undefined,
                                                              "display": "Decimal (floating point)",
                                                              "name": "double",
                                                              "rangeURI": "http://www.w3.org/2001/XMLSchema#double",
                                                              "alternateRangeURI": "xsd:double",
                                                              "shortDisplay": undefined,
                                                              "lookupSchema": undefined,
                                                              "lookupQuery": undefined,
                                                            },
                                                            Immutable.Record {
                                                              "conceptURI": undefined,
                                                              "display": "Date Time",
                                                              "name": "dateTime",
                                                              "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                                                              "alternateRangeURI": "xsd:dateTime",
                                                              "shortDisplay": undefined,
                                                              "lookupSchema": undefined,
                                                              "lookupQuery": undefined,
                                                            },
                                                            Immutable.Record {
                                                              "conceptURI": "http://www.labkey.org/exp/xml#flag",
                                                              "display": "Flag",
                                                              "name": "flag",
                                                              "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                              "alternateRangeURI": undefined,
                                                              "shortDisplay": undefined,
                                                              "lookupSchema": undefined,
                                                              "lookupQuery": undefined,
                                                            },
                                                            Immutable.Record {
                                                              "conceptURI": undefined,
                                                              "display": "Attachment",
                                                              "name": "attachment",
                                                              "rangeURI": "http://www.labkey.org/exp/xml#attachment",
                                                              "alternateRangeURI": undefined,
                                                              "shortDisplay": undefined,
                                                              "lookupSchema": undefined,
                                                              "lookupQuery": undefined,
                                                            },
                                                            Immutable.Record {
                                                              "conceptURI": undefined,
                                                              "display": "User",
                                                              "name": "users",
                                                              "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                                              "alternateRangeURI": undefined,
                                                              "shortDisplay": undefined,
                                                              "lookupSchema": "core",
                                                              "lookupQuery": "users",
                                                            },
                                                            Immutable.Record {
                                                              "conceptURI": "http://cpas.labkey.com/Study#ParticipantId",
                                                              "display": "Subject/Participant",
                                                              "name": "ParticipantId",
                                                              "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                              "alternateRangeURI": undefined,
                                                              "shortDisplay": undefined,
                                                              "lookupSchema": undefined,
                                                              "lookupQuery": undefined,
                                                            },
                                                            Immutable.Record {
                                                              "conceptURI": undefined,
                                                              "display": "Lookup",
                                                              "name": "lookup",
                                                              "rangeURI": undefined,
                                                              "alternateRangeURI": undefined,
                                                              "shortDisplay": undefined,
                                                              "lookupSchema": undefined,
                                                              "lookupQuery": undefined,
                                                            },
                                                            Immutable.Record {
                                                              "conceptURI": "http://www.labkey.org/exp/xml#sample",
                                                              "display": "Sample",
                                                              "name": "sample",
                                                              "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                                              "alternateRangeURI": undefined,
                                                              "shortDisplay": undefined,
                                                              "lookupSchema": undefined,
                                                              "lookupQuery": undefined,
                                                            },
                                                          ]
                                                        }
                                                        defaultDefaultValueType="FIXED_EDITABLE"
                                                        defaultValueOptions={
                                                          Immutable.List [
                                                            "FIXED_EDITABLE",
                                                            "LAST_ENTERED",
                                                          ]
                                                        }
                                                        domainFormDisplayOptions={
                                                          Object {
                                                            "disableMvEnabled": false,
                                                            "domainKindDisplayName": "data class",
                                                            "hideAddFieldsButton": false,
                                                            "hideConditionalFormatting": false,
                                                            "hideFilePropertyType": false,
                                                            "hideImportData": false,
                                                            "hideImportExport": false,
                                                            "hideRequired": false,
                                                            "hideStudyPropertyTypes": false,
                                                            "hideTextOptions": false,
                                                            "hideValidators": false,
                                                            "isDragDisabled": false,
                                                            "phiLevelDisabled": false,
                                                          }
                                                        }
                                                        domainId={58021}
                                                        domainIndex={0}
                                                        dragging={false}
                                                        expandTransition={300}
                                                        expanded={false}
                                                        field={
                                                          Immutable.Record {
                                                            "conceptURI": null,
                                                            "conditionalFormats": Immutable.List [],
                                                            "defaultScale": "LINEAR",
                                                            "defaultValueType": "FIXED_EDITABLE",
                                                            "defaultValue": null,
                                                            "defaultDisplayValue": "[none]",
                                                            "description": null,
                                                            "dimension": false,
                                                            "excludeFromShifting": false,
                                                            "format": null,
                                                            "hidden": false,
                                                            "importAliases": null,
                                                            "label": null,
                                                            "lookupContainer": undefined,
                                                            "lookupQuery": undefined,
                                                            "lookupSchema": undefined,
                                                            "lookupValidator": undefined,
                                                            "measure": false,
                                                            "mvEnabled": false,
                                                            "name": "DateField",
                                                            "PHI": "NotPHI",
                                                            "propertyId": 521045,
                                                            "propertyURI": "urn:lsid:labkey.com:DataClass.Folder-5398:test1#DateField",
                                                            "propertyValidators": Array [],
                                                            "rangeValidators": Immutable.List [],
                                                            "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                                                            "regexValidators": Immutable.List [],
                                                            "recommendedVariable": false,
                                                            "required": false,
                                                            "scale": 4000,
                                                            "URL": null,
                                                            "shownInDetailsView": true,
                                                            "shownInInsertView": true,
                                                            "shownInUpdateView": true,
                                                            "visible": true,
                                                            "dataType": Immutable.Record {
                                                              "conceptURI": undefined,
                                                              "display": "Date Time",
                                                              "name": "dateTime",
                                                              "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                                                              "alternateRangeURI": "xsd:dateTime",
                                                              "shortDisplay": undefined,
                                                              "lookupSchema": undefined,
                                                              "lookupQuery": undefined,
                                                            },
                                                            "lookupQueryValue": undefined,
                                                            "lookupType": Immutable.Record {
                                                              "conceptURI": undefined,
                                                              "display": "Lookup",
                                                              "name": "lookup",
                                                              "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                                                              "alternateRangeURI": undefined,
                                                              "shortDisplay": undefined,
                                                              "lookupSchema": undefined,
                                                              "lookupQuery": undefined,
                                                            },
                                                            "original": Object {
                                                              "conceptURI": null,
                                                              "dataType": Immutable.Record {
                                                                "conceptURI": undefined,
                                                                "display": "Date Time",
                                                                "name": "dateTime",
                                                                "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                                                                "alternateRangeURI": "xsd:dateTime",
                                                                "shortDisplay": undefined,
                                                                "lookupSchema": undefined,
                                                                "lookupQuery": undefined,
                                                              },
                                                              "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                                                            },
                                                            "updatedField": false,
                                                            "isPrimaryKey": false,
                                                            "lockType": "NotLocked",
                                                            "wrappedColumnName": undefined,
                                                            "disablePhiLevel": false,
                                                            "lockExistingField": false,
                                                            "sourceOntology": undefined,
                                                            "conceptSubtree": undefined,
                                                            "conceptLabelColumn": undefined,
                                                            "conceptImportColumn": undefined,
                                                            "principalConceptCode": undefined,
                                                            "derivationDataScope": undefined,
                                                            "selected": false,
                                                          }
                                                        }
                                                        fieldDetailsInfo={Object {}}
                                                        getDomainFields={[Function]}
                                                        helpNoun="field designer"
                                                        index={2}
                                                        isDragDisabled={false}
                                                        key="domain-row-key-2"
                                                        maxPhiLevel="NotPHI"
                                                        onChange={[Function]}
                                                        onDelete={[Function]}
                                                        onExpand={[Function]}
                                                        showDefaultValueSettings={false}
                                                        successBsStyle="success"
                                                      >
                                                        <PublicDraggable
                                                          draggableId="domainpropertiesrow-domaindrag-0-2"
                                                          index={2}
                                                          isDragDisabled={false}
                                                        >
                                                          <PrivateDraggable
                                                            canDragInteractiveElements={false}
                                                            draggableId="domainpropertiesrow-domaindrag-0-2"
                                                            index={2}
                                                            isClone={false}
                                                            isDragDisabled={false}
                                                            isEnabled={true}
                                                            shouldRespectForcePress={false}
                                                          >
                                                            <Connect(Draggable)
                                                              canDragInteractiveElements={false}
                                                              draggableId="domainpropertiesrow-domaindrag-0-2"
                                                              index={2}
                                                              isClone={false}
                                                              isDragDisabled={false}
                                                              isEnabled={true}
                                                              shouldRespectForcePress={false}
                                                            >
                                                              <Draggable
                                                                canDragInteractiveElements={false}
                                                                draggableId="domainpropertiesrow-domaindrag-0-2"
                                                                dropAnimationFinished={[Function]}
                                                                index={2}
                                                                isClone={false}
                                                                isDragDisabled={false}
                                                                isEnabled={true}
                                                                mapped={
                                                                  Object {
                                                                    "combineTargetFor": null,
                                                                    "offset": Object {
                                                                      "x": 0,
                                                                      "y": 0,
                                                                    },
                                                                    "shouldAnimateDisplacement": true,
                                                                    "snapshot": Object {
                                                                      "combineTargetFor": null,
                                                                      "combineWith": null,
                                                                      "draggingOver": null,
                                                                      "dropAnimation": null,
                                                                      "isClone": false,
                                                                      "isDragging": false,
                                                                      "isDropAnimating": false,
                                                                      "mode": null,
                                                                    },
                                                                    "type": "SECONDARY",
                                                                  }
                                                                }
                                                                shouldRespectForcePress={false}
                                                              >
                                                                <div
                                                                  className="domain-field-row domain-row-border-default"
                                                                  data-rbd-draggable-context-id="0"
                                                                  data-rbd-draggable-id="domainpropertiesrow-domaindrag-0-2"
                                                                  onTransitionEnd={null}
                                                                  style={
                                                                    Object {
                                                                      "transform": null,
                                                                      "transition": null,
                                                                    }
                                                                  }
                                                                  tabIndex={2}
                                                                >
                                                                  <Row
                                                                    bsClass="row"
                                                                    className="domain-row-container"
                                                                    componentClass="div"
                                                                    key="domainpropertiesrow-domainrow-0-2"
                                                                  >
                                                                    <div
                                                                      className="domain-row-container row"
                                                                    >
                                                                      <AdvancedSettings
                                                                        defaultDefaultValueType="FIXED_EDITABLE"
                                                                        defaultValueOptions={
                                                                          Immutable.List [
                                                                            "FIXED_EDITABLE",
                                                                            "LAST_ENTERED",
                                                                          ]
                                                                        }
                                                                        domainFormDisplayOptions={
                                                                          Object {
                                                                            "disableMvEnabled": false,
                                                                            "domainKindDisplayName": "data class",
                                                                            "hideAddFieldsButton": false,
                                                                            "hideConditionalFormatting": false,
                                                                            "hideFilePropertyType": false,
                                                                            "hideImportData": false,
                                                                            "hideImportExport": false,
                                                                            "hideRequired": false,
                                                                            "hideStudyPropertyTypes": false,
                                                                            "hideTextOptions": false,
                                                                            "hideValidators": false,
                                                                            "isDragDisabled": false,
                                                                            "phiLevelDisabled": false,
                                                                          }
                                                                        }
                                                                        domainId={58021}
                                                                        domainIndex={0}
                                                                        field={
                                                                          Immutable.Record {
                                                                            "conceptURI": null,
                                                                            "conditionalFormats": Immutable.List [],
                                                                            "defaultScale": "LINEAR",
                                                                            "defaultValueType": "FIXED_EDITABLE",
                                                                            "defaultValue": null,
                                                                            "defaultDisplayValue": "[none]",
                                                                            "description": null,
                                                                            "dimension": false,
                                                                            "excludeFromShifting": false,
                                                                            "format": null,
                                                                            "hidden": false,
                                                                            "importAliases": null,
                                                                            "label": null,
                                                                            "lookupContainer": undefined,
                                                                            "lookupQuery": undefined,
                                                                            "lookupSchema": undefined,
                                                                            "lookupValidator": undefined,
                                                                            "measure": false,
                                                                            "mvEnabled": false,
                                                                            "name": "DateField",
                                                                            "PHI": "NotPHI",
                                                                            "propertyId": 521045,
                                                                            "propertyURI": "urn:lsid:labkey.com:DataClass.Folder-5398:test1#DateField",
                                                                            "propertyValidators": Array [],
                                                                            "rangeValidators": Immutable.List [],
                                                                            "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                                                                            "regexValidators": Immutable.List [],
                                                                            "recommendedVariable": false,
                                                                            "required": false,
                                                                            "scale": 4000,
                                                                            "URL": null,
                                                                            "shownInDetailsView": true,
                                                                            "shownInInsertView": true,
                                                                            "shownInUpdateView": true,
                                                                            "visible": true,
                                                                            "dataType": Immutable.Record {
                                                                              "conceptURI": undefined,
                                                                              "display": "Date Time",
                                                                              "name": "dateTime",
                                                                              "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                                                                              "alternateRangeURI": "xsd:dateTime",
                                                                              "shortDisplay": undefined,
                                                                              "lookupSchema": undefined,
                                                                              "lookupQuery": undefined,
                                                                            },
                                                                            "lookupQueryValue": undefined,
                                                                            "lookupType": Immutable.Record {
                                                                              "conceptURI": undefined,
                                                                              "display": "Lookup",
                                                                              "name": "lookup",
                                                                              "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                                                                              "alternateRangeURI": undefined,
                                                                              "shortDisplay": undefined,
                                                                              "lookupSchema": undefined,
                                                                              "lookupQuery": undefined,
                                                                            },
                                                                            "original": Object {
                                                                              "conceptURI": null,
                                                                              "dataType": Immutable.Record {
                                                                                "conceptURI": undefined,
                                                                                "display": "Date Time",
                                                                                "name": "dateTime",
                                                                                "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                                                                                "alternateRangeURI": "xsd:dateTime",
                                                                                "shortDisplay": undefined,
                                                                                "lookupSchema": undefined,
                                                                                "lookupQuery": undefined,
                                                                              },
                                                                              "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                                                                            },
                                                                            "updatedField": false,
                                                                            "isPrimaryKey": false,
                                                                            "lockType": "NotLocked",
                                                                            "wrappedColumnName": undefined,
                                                                            "disablePhiLevel": false,
                                                                            "lockExistingField": false,
                                                                            "sourceOntology": undefined,
                                                                            "conceptSubtree": undefined,
                                                                            "conceptLabelColumn": undefined,
                                                                            "conceptImportColumn": undefined,
                                                                            "principalConceptCode": undefined,
                                                                            "derivationDataScope": undefined,
                                                                            "selected": false,
                                                                          }
                                                                        }
                                                                        helpNoun="field designer"
                                                                        index={2}
                                                                        label="DateField"
                                                                        maxPhiLevel="NotPHI"
                                                                        onApply={[Function]}
                                                                        onHide={[Function]}
                                                                        show={false}
                                                                        showDefaultValueSettings={false}
                                                                        successBsStyle="success"
                                                                      >
                                                                        <Modal
                                                                          animation={true}
                                                                          autoFocus={true}
                                                                          backdrop={true}
                                                                          bsClass="modal"
                                                                          dialogComponentClass={[Function]}
                                                                          enforceFocus={true}
                                                                          keyboard={true}
                                                                          manager={
                                                                            ModalManager {
                                                                              "add": [Function],
                                                                              "containers": Array [],
                                                                              "data": Array [],
                                                                              "handleContainerOverflow": true,
                                                                              "hideSiblingNodes": true,
                                                                              "isTopModal": [Function],
                                                                              "modals": Array [],
                                                                              "remove": [Function],
                                                                            }
                                                                          }
                                                                          onEnter={[Function]}
                                                                          onHide={[Function]}
                                                                          renderBackdrop={[Function]}
                                                                          restoreFocus={true}
                                                                          show={false}
                                                                        >
                                                                          <Modal
                                                                            autoFocus={true}
                                                                            backdrop={true}
                                                                            backdropClassName="modal-backdrop"
                                                                            backdropTransition={[Function]}
                                                                            containerClassName="modal-open"
                                                                            enforceFocus={true}
                                                                            keyboard={true}
                                                                            manager={
                                                                              ModalManager {
                                                                                "add": [Function],
                                                                                "containers": Array [],
                                                                                "data": Array [],
                                                                                "handleContainerOverflow": true,
                                                                                "hideSiblingNodes": true,
                                                                                "isTopModal": [Function],
                                                                                "modals": Array [],
                                                                                "remove": [Function],
                                                                              }
                                                                            }
                                                                            onEnter={[Function]}
                                                                            onEntering={[Function]}
                                                                            onExited={[Function]}
                                                                            onHide={[Function]}
                                                                            onMouseUp={[Function]}
                                                                            renderBackdrop={[Function]}
                                                                            restoreFocus={true}
                                                                            show={false}
                                                                            transition={[Function]}
                                                                          />
                                                                        </Modal>
                                                                      </AdvancedSettings>
                                                                      <div
                                                                        aria-describedby="rbd-hidden-text-0-hidden-text-0"
                                                                        className="domain-row-handle"
                                                                        data-rbd-drag-handle-context-id="0"
                                                                        data-rbd-drag-handle-draggable-id="domainpropertiesrow-domaindrag-0-2"
                                                                        draggable={false}
                                                                        onDragStart={[Function]}
                                                                        role="button"
                                                                        tabIndex={0}
                                                                      >
                                                                        <DragDropHandle>
                                                                          <FontAwesomeIcon
                                                                            border={false}
                                                                            className=""
                                                                            fixedWidth={false}
                                                                            flip={null}
                                                                            icon={
                                                                              Object {
                                                                                "icon": Array [
                                                                                  320,
                                                                                  512,
                                                                                  Array [],
                                                                                  "f58e",
                                                                                  "M96 32H32C14.33 32 0 46.33 0 64v64c0 17.67 14.33 32 32 32h64c17.67 0 32-14.33 32-32V64c0-17.67-14.33-32-32-32zm0 160H32c-17.67 0-32 14.33-32 32v64c0 17.67 14.33 32 32 32h64c17.67 0 32-14.33 32-32v-64c0-17.67-14.33-32-32-32zm0 160H32c-17.67 0-32 14.33-32 32v64c0 17.67 14.33 32 32 32h64c17.67 0 32-14.33 32-32v-64c0-17.67-14.33-32-32-32zM288 32h-64c-17.67 0-32 14.33-32 32v64c0 17.67 14.33 32 32 32h64c17.67 0 32-14.33 32-32V64c0-17.67-14.33-32-32-32zm0 160h-64c-17.67 0-32 14.33-32 32v64c0 17.67 14.33 32 32 32h64c17.67 0 32-14.33 32-32v-64c0-17.67-14.33-32-32-32zm0 160h-64c-17.67 0-32 14.33-32 32v64c0 17.67 14.33 32 32 32h64c17.67 0 32-14.33 32-32v-64c0-17.67-14.33-32-32-32z",
                                                                                ],
                                                                                "iconName": "grip-vertical",
                                                                                "prefix": "fas",
                                                                              }
                                                                            }
                                                                            inverse={false}
                                                                            listItem={false}
                                                                            mask={null}
                                                                            pull={null}
                                                                            pulse={false}
                                                                            rotation={null}
                                                                            size={null}
                                                                            spin={false}
                                                                            swapOpacity={false}
                                                                            symbol={false}
                                                                            title=""
                                                                            transform={null}
                                                                          >
                                                                            <svg
                                                                              aria-hidden="true"
                                                                              className="svg-inline--fa fa-grip-vertical fa-w-10 "
                                                                              data-icon="grip-vertical"
                                                                              data-prefix="fas"
                                                                              focusable="false"
                                                                              role="img"
                                                                              style={Object {}}
                                                                              viewBox="0 0 320 512"
                                                                              xmlns="http://www.w3.org/2000/svg"
                                                                            >
                                                                              <path
                                                                                d="M96 32H32C14.33 32 0 46.33 0 64v64c0 17.67 14.33 32 32 32h64c17.67 0 32-14.33 32-32V64c0-17.67-14.33-32-32-32zm0 160H32c-17.67 0-32 14.33-32 32v64c0 17.67 14.33 32 32 32h64c17.67 0 32-14.33 32-32v-64c0-17.67-14.33-32-32-32zm0 160H32c-17.67 0-32 14.33-32 32v64c0 17.67 14.33 32 32 32h64c17.67 0 32-14.33 32-32v-64c0-17.67-14.33-32-32-32zM288 32h-64c-17.67 0-32 14.33-32 32v64c0 17.67 14.33 32 32 32h64c17.67 0 32-14.33 32-32V64c0-17.67-14.33-32-32-32zm0 160h-64c-17.67 0-32 14.33-32 32v64c0 17.67 14.33 32 32 32h64c17.67 0 32-14.33 32-32v-64c0-17.67-14.33-32-32-32zm0 160h-64c-17.67 0-32 14.33-32 32v64c0 17.67 14.33 32 32 32h64c17.67 0 32-14.33 32-32v-64c0-17.67-14.33-32-32-32z"
                                                                                fill="currentColor"
                                                                                style={Object {}}
                                                                              />
                                                                            </svg>
                                                                          </FontAwesomeIcon>
                                                                        </DragDropHandle>
                                                                      </div>
                                                                      <div
                                                                        className="domain-row-action-section"
                                                                      >
                                                                        <Checkbox
                                                                          bsClass="checkbox"
                                                                          checked={false}
                                                                          className="domain-field-check-icon"
                                                                          disabled={false}
                                                                          id="domainpropertiesrow-selected-0-2"
                                                                          inline={false}
                                                                          name="domainpropertiesrow-selected"
                                                                          onChange={[Function]}
                                                                          title=""
                                                                        >
                                                                          <div
                                                                            className="domain-field-check-icon checkbox"
                                                                          >
                                                                            <label
                                                                              title=""
                                                                            >
                                                                              <input
                                                                                checked={false}
                                                                                disabled={false}
                                                                                id="domainpropertiesrow-selected-0-2"
                                                                                name="domainpropertiesrow-selected"
                                                                                onChange={[Function]}
                                                                                type="checkbox"
                                                                              />
                                                                            </label>
                                                                          </div>
                                                                        </Checkbox>
                                                                        <FieldExpansionToggle
                                                                          cls="domain-field-expand-icon"
                                                                          collapsedTitle="Show additional field properties"
                                                                          expanded={false}
                                                                          expandedTitle="Hide additional field properties"
                                                                          id="domainpropertiesrow-expand-0-2"
                                                                          onClick={[Function]}
                                                                        >
                                                                          <div
                                                                            className="field-icon domain-field-expand-icon"
                                                                            id="domainpropertiesrow-expand-0-2"
                                                                            onClick={[Function]}
                                                                            title="Show additional field properties"
                                                                          >
                                                                            <FontAwesomeIcon
                                                                              border={false}
                                                                              className=""
                                                                              fixedWidth={false}
                                                                              flip={null}
                                                                              icon={
                                                                                Object {
                                                                                  "icon": Array [
                                                                                    448,
                                                                                    512,
                                                                                    Array [],
                                                                                    "f0fe",
                                                                                    "M400 32H48C21.5 32 0 53.5 0 80v352c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V80c0-26.5-21.5-48-48-48zm-32 252c0 6.6-5.4 12-12 12h-92v92c0 6.6-5.4 12-12 12h-56c-6.6 0-12-5.4-12-12v-92H92c-6.6 0-12-5.4-12-12v-56c0-6.6 5.4-12 12-12h92v-92c0-6.6 5.4-12 12-12h56c6.6 0 12 5.4 12 12v92h92c6.6 0 12 5.4 12 12v56z",
                                                                                  ],
                                                                                  "iconName": "plus-square",
                                                                                  "prefix": "fas",
                                                                                }
                                                                              }
                                                                              inverse={false}
                                                                              listItem={false}
                                                                              mask={null}
                                                                              pull={null}
                                                                              pulse={false}
                                                                              rotation={null}
                                                                              size="lg"
                                                                              spin={false}
                                                                              swapOpacity={false}
                                                                              symbol={false}
                                                                              title=""
                                                                              transform={null}
                                                                            >
                                                                              <svg
                                                                                aria-hidden="true"
                                                                                className="svg-inline--fa fa-plus-square fa-w-14 fa-lg "
                                                                                data-icon="plus-square"
                                                                                data-prefix="fas"
                                                                                focusable="false"
                                                                                role="img"
                                                                                style={Object {}}
                                                                                viewBox="0 0 448 512"
                                                                                xmlns="http://www.w3.org/2000/svg"
                                                                              >
                                                                                <path
                                                                                  d="M400 32H48C21.5 32 0 53.5 0 80v352c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V80c0-26.5-21.5-48-48-48zm-32 252c0 6.6-5.4 12-12 12h-92v92c0 6.6-5.4 12-12 12h-56c-6.6 0-12-5.4-12-12v-92H92c-6.6 0-12-5.4-12-12v-56c0-6.6 5.4-12 12-12h92v-92c0-6.6 5.4-12 12-12h56c6.6 0 12 5.4 12 12v92h92c6.6 0 12 5.4 12 12v56z"
                                                                                  fill="currentColor"
                                                                                  style={Object {}}
                                                                                />
                                                                              </svg>
                                                                            </FontAwesomeIcon>
                                                                          </div>
                                                                        </FieldExpansionToggle>
                                                                      </div>
                                                                      <div
                                                                        className="domain-row-main"
                                                                      >
                                                                        <Col
                                                                          bsClass="col"
                                                                          className="domain-row-base-fields domain-row-base-fields-position"
                                                                          componentClass="div"
                                                                          xs={6}
                                                                        >
                                                                          <div
                                                                            className="domain-row-base-fields domain-row-base-fields-position col-xs-6"
                                                                          >
                                                                            <div
                                                                              id="domainpropertiesrow-row-0-2"
                                                                            >
                                                                              <Col
                                                                                bsClass="col"
                                                                                componentClass="div"
                                                                                xs={6}
                                                                              >
                                                                                <div
                                                                                  className="col-xs-6"
                                                                                >
                                                                                  <FormControl
                                                                                    bsClass="form-control"
                                                                                    componentClass="input"
                                                                                    disabled={false}
                                                                                    id="domainpropertiesrow-name-0-2"
                                                                                    name="domainpropertiesrow-name"
                                                                                    onChange={[Function]}
                                                                                    type="text"
                                                                                    value="DateField"
                                                                                  >
                                                                                    <input
                                                                                      className="form-control"
                                                                                      disabled={false}
                                                                                      id="domainpropertiesrow-name-0-2"
                                                                                      name="domainpropertiesrow-name"
                                                                                      onChange={[Function]}
                                                                                      type="text"
                                                                                      value="DateField"
                                                                                    />
                                                                                  </FormControl>
                                                                                </div>
                                                                              </Col>
                                                                              <Col
                                                                                bsClass="col"
                                                                                componentClass="div"
                                                                                xs={4}
                                                                              >
                                                                                <div
                                                                                  className="col-xs-4"
                                                                                >
                                                                                  <FormControl
                                                                                    bsClass="form-control"
                                                                                    componentClass="select"
                                                                                    disabled={false}
                                                                                    id="domainpropertiesrow-type-0-2"
                                                                                    name="domainpropertiesrow-type"
                                                                                    onChange={[Function]}
                                                                                    value="dateTime"
                                                                                  >
                                                                                    <select
                                                                                      className="form-control"
                                                                                      disabled={false}
                                                                                      id="domainpropertiesrow-type-0-2"
                                                                                      name="domainpropertiesrow-type"
                                                                                      onChange={[Function]}
                                                                                      value="dateTime"
                                                                                    >
                                                                                      <option
                                                                                        key="dateTime"
                                                                                        value="dateTime"
                                                                                      >
                                                                                        Date Time
                                                                                      </option>
                                                                                    </select>
                                                                                  </FormControl>
                                                                                </div>
                                                                              </Col>
                                                                              <Col
                                                                                bsClass="col"
                                                                                componentClass="div"
                                                                                xs={2}
                                                                              >
                                                                                <div
                                                                                  className="col-xs-2"
                                                                                >
                                                                                  <div
                                                                                    className="domain-field-checkbox-container"
                                                                                  >
                                                                                    <Checkbox
                                                                                      bsClass="checkbox"
                                                                                      checked={false}
                                                                                      className="domain-field-checkbox"
                                                                                      disabled={false}
                                                                                      id="domainpropertiesrow-required-0-2"
                                                                                      inline={false}
                                                                                      name="domainpropertiesrow-required"
                                                                                      onChange={[Function]}
                                                                                      title=""
                                                                                    >
                                                                                      <div
                                                                                        className="domain-field-checkbox checkbox"
                                                                                      >
                                                                                        <label
                                                                                          title=""
                                                                                        >
                                                                                          <input
                                                                                            checked={false}
                                                                                            disabled={false}
                                                                                            id="domainpropertiesrow-required-0-2"
                                                                                            name="domainpropertiesrow-required"
                                                                                            onChange={[Function]}
                                                                                            type="checkbox"
                                                                                          />
                                                                                        </label>
                                                                                      </div>
                                                                                    </Checkbox>
                                                                                  </div>
                                                                                </div>
                                                                              </Col>
                                                                            </div>
                                                                          </div>
                                                                        </Col>
                                                                        <Col
                                                                          bsClass="col"
                                                                          className="domain-row-details-container"
                                                                          componentClass="div"
                                                                          xs={6}
                                                                        >
                                                                          <div
                                                                            className="domain-row-details-container col-xs-6"
                                                                          >
                                                                            <div
                                                                              className="domain-field-details"
                                                                              id="domainpropertiesrow-details-0-2"
                                                                            />
                                                                            <div
                                                                              className="domain-field-buttons"
                                                                            >
                                                                              <DeleteIcon
                                                                                iconCls="domain-field-delete-icon"
                                                                                id="domainpropertiesrow-delete-0-2"
                                                                                onDelete={[Function]}
                                                                                title="Remove field"
                                                                              >
                                                                                <span
                                                                                  className="field-icon"
                                                                                  id="domainpropertiesrow-delete-0-2"
                                                                                  onClick={[Function]}
                                                                                  title="Remove field"
                                                                                >
                                                                                  <FontAwesomeIcon
                                                                                    border={false}
                                                                                    className="domain-field-delete-icon"
                                                                                    fixedWidth={false}
                                                                                    flip={null}
                                                                                    icon={
                                                                                      Object {
                                                                                        "icon": Array [
                                                                                          512,
                                                                                          512,
                                                                                          Array [],
                                                                                          "f057",
                                                                                          "M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8zm121.6 313.1c4.7 4.7 4.7 12.3 0 17L338 377.6c-4.7 4.7-12.3 4.7-17 0L256 312l-65.1 65.6c-4.7 4.7-12.3 4.7-17 0L134.4 338c-4.7-4.7-4.7-12.3 0-17l65.6-65-65.6-65.1c-4.7-4.7-4.7-12.3 0-17l39.6-39.6c4.7-4.7 12.3-4.7 17 0l65 65.7 65.1-65.6c4.7-4.7 12.3-4.7 17 0l39.6 39.6c4.7 4.7 4.7 12.3 0 17L312 256l65.6 65.1z",
                                                                                        ],
                                                                                        "iconName": "times-circle",
                                                                                        "prefix": "fas",
                                                                                      }
                                                                                    }
                                                                                    inverse={false}
                                                                                    listItem={false}
                                                                                    mask={null}
                                                                                    pull={null}
                                                                                    pulse={false}
                                                                                    rotation={null}
                                                                                    size={null}
                                                                                    spin={false}
                                                                                    swapOpacity={false}
                                                                                    symbol={false}
                                                                                    title=""
                                                                                    transform={null}
                                                                                  >
                                                                                    <svg
                                                                                      aria-hidden="true"
                                                                                      className="svg-inline--fa fa-times-circle fa-w-16 domain-field-delete-icon"
                                                                                      data-icon="times-circle"
                                                                                      data-prefix="fas"
                                                                                      focusable="false"
                                                                                      role="img"
                                                                                      style={Object {}}
                                                                                      viewBox="0 0 512 512"
                                                                                      xmlns="http://www.w3.org/2000/svg"
                                                                                    >
                                                                                      <path
                                                                                        d="M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8zm121.6 313.1c4.7 4.7 4.7 12.3 0 17L338 377.6c-4.7 4.7-12.3 4.7-17 0L256 312l-65.1 65.6c-4.7 4.7-12.3 4.7-17 0L134.4 338c-4.7-4.7-4.7-12.3 0-17l65.6-65-65.6-65.1c-4.7-4.7-4.7-12.3 0-17l39.6-39.6c4.7-4.7 12.3-4.7 17 0l65 65.7 65.1-65.6c4.7-4.7 12.3-4.7 17 0l39.6 39.6c4.7 4.7 4.7 12.3 0 17L312 256l65.6 65.1z"
                                                                                        fill="currentColor"
                                                                                        style={Object {}}
                                                                                      />
                                                                                    </svg>
                                                                                  </FontAwesomeIcon>
                                                                                </span>
                                                                              </DeleteIcon>
                                                                            </div>
                                                                          </div>
                                                                        </Col>
                                                                      </div>
                                                                    </div>
                                                                  </Row>
                                                                  <Collapse
                                                                    appear={false}
                                                                    dimension="height"
                                                                    getDimensionValue={[Function]}
                                                                    in={false}
                                                                    mountOnEnter={false}
                                                                    onExited={[Function]}
                                                                    onExiting={[Function]}
                                                                    timeout={300}
                                                                    unmountOnExit={false}
                                                                  >
                                                                    <Transition
                                                                      appear={false}
                                                                      aria-expanded={null}
                                                                      enter={true}
                                                                      exit={true}
                                                                      in={false}
                                                                      mountOnEnter={false}
                                                                      onEnter={[Function]}
                                                                      onEntered={[Function]}
                                                                      onEntering={[Function]}
                                                                      onExit={[Function]}
                                                                      onExited={[Function]}
                                                                      onExiting={[Function]}
                                                                      timeout={300}
                                                                      unmountOnExit={false}
                                                                    >
                                                                      <div
                                                                        aria-expanded={null}
                                                                        className="collapse"
                                                                      >
                                                                        <DomainRowExpandedOptions
                                                                          appPropertiesOnly={false}
                                                                          domainFormDisplayOptions={
                                                                            Object {
                                                                              "disableMvEnabled": false,
                                                                              "domainKindDisplayName": "data class",
                                                                              "hideAddFieldsButton": false,
                                                                              "hideConditionalFormatting": false,
                                                                              "hideFilePropertyType": false,
                                                                              "hideImportData": false,
                                                                              "hideImportExport": false,
                                                                              "hideRequired": false,
                                                                              "hideStudyPropertyTypes": false,
                                                                              "hideTextOptions": false,
                                                                              "hideValidators": false,
                                                                              "isDragDisabled": false,
                                                                              "phiLevelDisabled": false,
                                                                            }
                                                                          }
                                                                          domainIndex={0}
                                                                          field={
                                                                            Immutable.Record {
                                                                              "conceptURI": null,
                                                                              "conditionalFormats": Immutable.List [],
                                                                              "defaultScale": "LINEAR",
                                                                              "defaultValueType": "FIXED_EDITABLE",
                                                                              "defaultValue": null,
                                                                              "defaultDisplayValue": "[none]",
                                                                              "description": null,
                                                                              "dimension": false,
                                                                              "excludeFromShifting": false,
                                                                              "format": null,
                                                                              "hidden": false,
                                                                              "importAliases": null,
                                                                              "label": null,
                                                                              "lookupContainer": undefined,
                                                                              "lookupQuery": undefined,
                                                                              "lookupSchema": undefined,
                                                                              "lookupValidator": undefined,
                                                                              "measure": false,
                                                                              "mvEnabled": false,
                                                                              "name": "DateField",
                                                                              "PHI": "NotPHI",
                                                                              "propertyId": 521045,
                                                                              "propertyURI": "urn:lsid:labkey.com:DataClass.Folder-5398:test1#DateField",
                                                                              "propertyValidators": Array [],
                                                                              "rangeValidators": Immutable.List [],
                                                                              "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                                                                              "regexValidators": Immutable.List [],
                                                                              "recommendedVariable": false,
                                                                              "required": false,
                                                                              "scale": 4000,
                                                                              "URL": null,
                                                                              "shownInDetailsView": true,
                                                                              "shownInInsertView": true,
                                                                              "shownInUpdateView": true,
                                                                              "visible": true,
                                                                              "dataType": Immutable.Record {
                                                                                "conceptURI": undefined,
                                                                                "display": "Date Time",
                                                                                "name": "dateTime",
                                                                                "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                                                                                "alternateRangeURI": "xsd:dateTime",
                                                                                "shortDisplay": undefined,
                                                                                "lookupSchema": undefined,
                                                                                "lookupQuery": undefined,
                                                                              },
                                                                              "lookupQueryValue": undefined,
                                                                              "lookupType": Immutable.Record {
                                                                                "conceptURI": undefined,
                                                                                "display": "Lookup",
                                                                                "name": "lookup",
                                                                                "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                                                                                "alternateRangeURI": undefined,
                                                                                "shortDisplay": undefined,
                                                                                "lookupSchema": undefined,
                                                                                "lookupQuery": undefined,
                                                                              },
                                                                              "original": Object {
                                                                                "conceptURI": null,
                                                                                "dataType": Immutable.Record {
                                                                                  "conceptURI": undefined,
                                                                                  "display": "Date Time",
                                                                                  "name": "dateTime",
                                                                                  "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                                                                                  "alternateRangeURI": "xsd:dateTime",
                                                                                  "shortDisplay": undefined,
                                                                                  "lookupSchema": undefined,
                                                                                  "lookupQuery": undefined,
                                                                                },
                                                                                "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                                                                              },
                                                                              "updatedField": false,
                                                                              "isPrimaryKey": false,
                                                                              "lockType": "NotLocked",
                                                                              "wrappedColumnName": undefined,
                                                                              "disablePhiLevel": false,
                                                                              "lockExistingField": false,
                                                                              "sourceOntology": undefined,
                                                                              "conceptSubtree": undefined,
                                                                              "conceptLabelColumn": undefined,
                                                                              "conceptImportColumn": undefined,
                                                                              "principalConceptCode": undefined,
                                                                              "derivationDataScope": undefined,
                                                                              "selected": false,
                                                                            }
                                                                          }
                                                                          getDomainFields={[Function]}
                                                                          index={2}
                                                                          onChange={[Function]}
                                                                          onMultiChange={[Function]}
                                                                          showingModal={[Function]}
                                                                          successBsStyle="success"
                                                                        >
                                                                          <div
                                                                            className="domain-row-container"
                                                                          >
                                                                            <div
                                                                              className="domain-row-container-expand-spacer"
                                                                            />
                                                                            <div
                                                                              className="domain-row-container-expanded"
                                                                            >
                                                                              <Col
                                                                                bsClass="col"
                                                                                componentClass="div"
                                                                                xs={12}
                                                                              >
                                                                                <div
                                                                                  className="col-xs-12"
                                                                                >
                                                                                  <DateTimeFieldOptions
                                                                                    domainIndex={0}
                                                                                    excludeFromShifting={false}
                                                                                    format={null}
                                                                                    index={2}
                                                                                    label="Date and Time Options"
                                                                                    lockType="NotLocked"
                                                                                    onChange={[Function]}
                                                                                  >
                                                                                    <div>
                                                                                      <Row
                                                                                        bsClass="row"
                                                                                        componentClass="div"
                                                                                      >
                                                                                        <div
                                                                                          className="row"
                                                                                        >
                                                                                          <Col
                                                                                            bsClass="col"
                                                                                            componentClass="div"
                                                                                            xs={12}
                                                                                          >
                                                                                            <div
                                                                                              className="col-xs-12"
                                                                                            >
                                                                                              <SectionHeading
                                                                                                title="Date and Time Options"
                                                                                              >
                                                                                                <div
                                                                                                  className="domain-field-section-heading"
                                                                                                >
                                                                                                  Date and Time Options
                                                                                                </div>
                                                                                              </SectionHeading>
                                                                                            </div>
                                                                                          </Col>
                                                                                        </div>
                                                                                      </Row>
                                                                                      <Row
                                                                                        bsClass="row"
                                                                                        componentClass="div"
                                                                                      >
                                                                                        <div
                                                                                          className="row"
                                                                                        >
                                                                                          <Col
                                                                                            bsClass="col"
                                                                                            componentClass="div"
                                                                                            xs={3}
                                                                                          >
                                                                                            <div
                                                                                              className="col-xs-3"
                                                                                            >
                                                                                              <div
                                                                                                className="domain-field-label"
                                                                                              >
                                                                                                <DomainFieldLabel
                                                                                                  helpTipBody={
                                                                                                    <React.Fragment>
                                                                                                      <p>
                                                                                                        To control how a date or time value is displayed, provide a string format compatible with the Java
                                                                                                         
                                                                                                        <Memo
                                                                                                          urlSuffix="java/text/SimpleDateFormat.html"
                                                                                                        >
                                                                                                          SimpleDateFormat
                                                                                                        </Memo>
                                                                                                         class.
                                                                                                      </p>
                                                                                                      <p>
                                                                                                        Learn more about using 
                                                                                                        <HelpLink
                                                                                                          topic="dateFormats#date"
                                                                                                        >
                                                                                                          Date and Time formats
                                                                                                        </HelpLink>
                                                                                                         in LabKey.
                                                                                                      </p>
                                                                                                    </React.Fragment>
                                                                                                  }
                                                                                                  label="Format for Dates"
                                                                                                >
                                                                                                  Format for 
                                                                                                  <span
                                                                                                    className="domain-no-wrap"
                                                                                                  >
                                                                                                    Dates
                                                                                                    <Component
                                                                                                      customStyle={Object {}}
                                                                                                      id="tooltip"
                                                                                                      size="1x"
                                                                                                      title="Format for Dates"
                                                                                                    >
                                                                                                      <span
                                                                                                        className="label-help-target"
                                                                                                        onMouseOut={[Function]}
                                                                                                        onMouseOver={[Function]}
                                                                                                      >
                                                                                                        <FontAwesomeIcon
                                                                                                          border={false}
                                                                                                          className="label-help-icon"
                                                                                                          fixedWidth={false}
                                                                                                          flip={null}
                                                                                                          icon={
                                                                                                            Object {
                                                                                                              "icon": Array [
                                                                                                                512,
                                                                                                                512,
                                                                                                                Array [],
                                                                                                                "f059",
                                                                                                                "M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z",
                                                                                                              ],
                                                                                                              "iconName": "question-circle",
                                                                                                              "prefix": "fas",
                                                                                                            }
                                                                                                          }
                                                                                                          inverse={false}
                                                                                                          listItem={false}
                                                                                                          mask={null}
                                                                                                          pull={null}
                                                                                                          pulse={false}
                                                                                                          rotation={null}
                                                                                                          size="1x"
                                                                                                          spin={false}
                                                                                                          style={Object {}}
                                                                                                          swapOpacity={false}
                                                                                                          symbol={false}
                                                                                                          title=""
                                                                                                          transform={null}
                                                                                                        >
                                                                                                          <svg
                                                                                                            aria-hidden="true"
                                                                                                            className="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                                                                                                            data-icon="question-circle"
                                                                                                            data-prefix="fas"
                                                                                                            focusable="false"
                                                                                                            role="img"
                                                                                                            style={Object {}}
                                                                                                            viewBox="0 0 512 512"
                                                                                                            xmlns="http://www.w3.org/2000/svg"
                                                                                                          >
                                                                                                            <path
                                                                                                              d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                                                                              fill="currentColor"
                                                                                                              style={Object {}}
                                                                                                            />
                                                                                                          </svg>
                                                                                                        </FontAwesomeIcon>
                                                                                                        <Overlay
                                                                                                          animation={[Function]}
                                                                                                          placement="right"
                                                                                                          rootClose={false}
                                                                                                          show={false}
                                                                                                        >
                                                                                                          <Overlay
                                                                                                            placement="right"
                                                                                                            rootClose={false}
                                                                                                            show={false}
                                                                                                            transition={[Function]}
                                                                                                          />
                                                                                                        </Overlay>
                                                                                                      </span>
                                                                                                    </Component>
                                                                                                  </span>
                                                                                                </DomainFieldLabel>
                                                                                              </div>
                                                                                            </div>
                                                                                          </Col>
                                                                                          <Col
                                                                                            bsClass="col"
                                                                                            componentClass="div"
                                                                                            xs={9}
                                                                                          >
                                                                                            <div
                                                                                              className="col-xs-9"
                                                                                            />
                                                                                          </Col>
                                                                                        </div>
                                                                                      </Row>
                                                                                      <Row
                                                                                        bsClass="row"
                                                                                        componentClass="div"
                                                                                      >
                                                                                        <div
                                                                                          className="row"
                                                                                        >
                                                                                          <Col
                                                                                            bsClass="col"
                                                                                            componentClass="div"
                                                                                            xs={3}
                                                                                          >
                                                                                            <div
                                                                                              className="col-xs-3"
                                                                                            >
                                                                                              <FormControl
                                                                                                bsClass="form-control"
                                                                                                componentClass="input"
                                                                                                disabled={false}
                                                                                                id="domainpropertiesrow-format-0-2"
                                                                                                name="domainpropertiesrow-format"
                                                                                                onChange={[Function]}
                                                                                                type="text"
                                                                                                value=""
                                                                                              >
                                                                                                <input
                                                                                                  className="form-control"
                                                                                                  disabled={false}
                                                                                                  id="domainpropertiesrow-format-0-2"
                                                                                                  name="domainpropertiesrow-format"
                                                                                                  onChange={[Function]}
                                                                                                  type="text"
                                                                                                  value=""
                                                                                                />
                                                                                              </FormControl>
                                                                                            </div>
                                                                                          </Col>
                                                                                          <Col
                                                                                            bsClass="col"
                                                                                            componentClass="div"
                                                                                            xs={9}
                                                                                          >
                                                                                            <div
                                                                                              className="col-xs-9"
                                                                                            />
                                                                                          </Col>
                                                                                        </div>
                                                                                      </Row>
                                                                                    </div>
                                                                                  </DateTimeFieldOptions>
                                                                                </div>
                                                                              </Col>
                                                                              <Col
                                                                                bsClass="col"
                                                                                componentClass="div"
                                                                                xs={12}
                                                                              >
                                                                                <div
                                                                                  className="col-xs-12"
                                                                                >
                                                                                  <NameAndLinkingOptions
                                                                                    appPropertiesOnly={false}
                                                                                    domainIndex={0}
                                                                                    field={
                                                                                      Immutable.Record {
                                                                                        "conceptURI": null,
                                                                                        "conditionalFormats": Immutable.List [],
                                                                                        "defaultScale": "LINEAR",
                                                                                        "defaultValueType": "FIXED_EDITABLE",
                                                                                        "defaultValue": null,
                                                                                        "defaultDisplayValue": "[none]",
                                                                                        "description": null,
                                                                                        "dimension": false,
                                                                                        "excludeFromShifting": false,
                                                                                        "format": null,
                                                                                        "hidden": false,
                                                                                        "importAliases": null,
                                                                                        "label": null,
                                                                                        "lookupContainer": undefined,
                                                                                        "lookupQuery": undefined,
                                                                                        "lookupSchema": undefined,
                                                                                        "lookupValidator": undefined,
                                                                                        "measure": false,
                                                                                        "mvEnabled": false,
                                                                                        "name": "DateField",
                                                                                        "PHI": "NotPHI",
                                                                                        "propertyId": 521045,
                                                                                        "propertyURI": "urn:lsid:labkey.com:DataClass.Folder-5398:test1#DateField",
                                                                                        "propertyValidators": Array [],
                                                                                        "rangeValidators": Immutable.List [],
                                                                                        "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                                                                                        "regexValidators": Immutable.List [],
                                                                                        "recommendedVariable": false,
                                                                                        "required": false,
                                                                                        "scale": 4000,
                                                                                        "URL": null,
                                                                                        "shownInDetailsView": true,
                                                                                        "shownInInsertView": true,
                                                                                        "shownInUpdateView": true,
                                                                                        "visible": true,
                                                                                        "dataType": Immutable.Record {
                                                                                          "conceptURI": undefined,
                                                                                          "display": "Date Time",
                                                                                          "name": "dateTime",
                                                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                                                                                          "alternateRangeURI": "xsd:dateTime",
                                                                                          "shortDisplay": undefined,
                                                                                          "lookupSchema": undefined,
                                                                                          "lookupQuery": undefined,
                                                                                        },
                                                                                        "lookupQueryValue": undefined,
                                                                                        "lookupType": Immutable.Record {
                                                                                          "conceptURI": undefined,
                                                                                          "display": "Lookup",
                                                                                          "name": "lookup",
                                                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                                                                                          "alternateRangeURI": undefined,
                                                                                          "shortDisplay": undefined,
                                                                                          "lookupSchema": undefined,
                                                                                          "lookupQuery": undefined,
                                                                                        },
                                                                                        "original": Object {
                                                                                          "conceptURI": null,
                                                                                          "dataType": Immutable.Record {
                                                                                            "conceptURI": undefined,
                                                                                            "display": "Date Time",
                                                                                            "name": "dateTime",
                                                                                            "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                                                                                            "alternateRangeURI": "xsd:dateTime",
                                                                                            "shortDisplay": undefined,
                                                                                            "lookupSchema": undefined,
                                                                                            "lookupQuery": undefined,
                                                                                          },
                                                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                                                                                        },
                                                                                        "updatedField": false,
                                                                                        "isPrimaryKey": false,
                                                                                        "lockType": "NotLocked",
                                                                                        "wrappedColumnName": undefined,
                                                                                        "disablePhiLevel": false,
                                                                                        "lockExistingField": false,
                                                                                        "sourceOntology": undefined,
                                                                                        "conceptSubtree": undefined,
                                                                                        "conceptLabelColumn": undefined,
                                                                                        "conceptImportColumn": undefined,
                                                                                        "principalConceptCode": undefined,
                                                                                        "derivationDataScope": undefined,
                                                                                        "selected": false,
                                                                                      }
                                                                                    }
                                                                                    index={2}
                                                                                    onChange={[Function]}
                                                                                  >
                                                                                    <div>
                                                                                      <Row
                                                                                        bsClass="row"
                                                                                        componentClass="div"
                                                                                      >
                                                                                        <div
                                                                                          className="row"
                                                                                        >
                                                                                          <Col
                                                                                            bsClass="col"
                                                                                            componentClass="div"
                                                                                            xs={12}
                                                                                          >
                                                                                            <div
                                                                                              className="col-xs-12"
                                                                                            >
                                                                                              <SectionHeading
                                                                                                cls="domain-field-section-hdr"
                                                                                                title="Name and Linking Options"
                                                                                              >
                                                                                                <div
                                                                                                  className="domain-field-section-heading domain-field-section-hdr"
                                                                                                >
                                                                                                  Name and Linking Options
                                                                                                </div>
                                                                                              </SectionHeading>
                                                                                            </div>
                                                                                          </Col>
                                                                                        </div>
                                                                                      </Row>
                                                                                      <Row
                                                                                        bsClass="row"
                                                                                        componentClass="div"
                                                                                      >
                                                                                        <div
                                                                                          className="row"
                                                                                        >
                                                                                          <Col
                                                                                            bsClass="col"
                                                                                            componentClass="div"
                                                                                            xs={5}
                                                                                          >
                                                                                            <div
                                                                                              className="col-xs-5"
                                                                                            >
                                                                                              <div
                                                                                                className="domain-field-label"
                                                                                              >
                                                                                                Description
                                                                                              </div>
                                                                                              <FormControl
                                                                                                bsClass="form-control"
                                                                                                className="form-control textarea-noresize"
                                                                                                componentClass="textarea"
                                                                                                disabled={false}
                                                                                                id="domainpropertiesrow-description-0-2"
                                                                                                name="domainpropertiesrow-description"
                                                                                                onChange={[Function]}
                                                                                                rows={4}
                                                                                                value=""
                                                                                              >
                                                                                                <textarea
                                                                                                  className="form-control textarea-noresize form-control"
                                                                                                  disabled={false}
                                                                                                  id="domainpropertiesrow-description-0-2"
                                                                                                  name="domainpropertiesrow-description"
                                                                                                  onChange={[Function]}
                                                                                                  rows={4}
                                                                                                  value=""
                                                                                                />
                                                                                              </FormControl>
                                                                                            </div>
                                                                                          </Col>
                                                                                          <Col
                                                                                            bsClass="col"
                                                                                            componentClass="div"
                                                                                            xs={3}
                                                                                          >
                                                                                            <div
                                                                                              className="col-xs-3"
                                                                                            >
                                                                                              <div
                                                                                                className="domain-field-label"
                                                                                              >
                                                                                                Label
                                                                                              </div>
                                                                                              <FormControl
                                                                                                bsClass="form-control"
                                                                                                componentClass="input"
                                                                                                disabled={false}
                                                                                                id="domainpropertiesrow-label-0-2"
                                                                                                name="domainpropertiesrow-label"
                                                                                                onChange={[Function]}
                                                                                                type="text"
                                                                                                value=""
                                                                                              >
                                                                                                <input
                                                                                                  className="form-control"
                                                                                                  disabled={false}
                                                                                                  id="domainpropertiesrow-label-0-2"
                                                                                                  name="domainpropertiesrow-label"
                                                                                                  onChange={[Function]}
                                                                                                  type="text"
                                                                                                  value=""
                                                                                                />
                                                                                              </FormControl>
                                                                                              <div
                                                                                                className="domain-field-label"
                                                                                              >
                                                                                                <DomainFieldLabel
                                                                                                  helpTipBody={
                                                                                                    <React.Fragment>
                                                                                                      Define alternate field names to be used when importing from a file.
                                                                                                      <br />
                                                                                                      <br />
                                                                                                      Multiple aliases may be separated by spaces or commas. To define an alias that contains spaces, use double-quotes (") around it.
                                                                                                    </React.Fragment>
                                                                                                  }
                                                                                                  label="Import Aliases"
                                                                                                >
                                                                                                  Import 
                                                                                                  <span
                                                                                                    className="domain-no-wrap"
                                                                                                  >
                                                                                                    Aliases
                                                                                                    <Component
                                                                                                      customStyle={Object {}}
                                                                                                      id="tooltip"
                                                                                                      size="1x"
                                                                                                      title="Import Aliases"
                                                                                                    >
                                                                                                      <span
                                                                                                        className="label-help-target"
                                                                                                        onMouseOut={[Function]}
                                                                                                        onMouseOver={[Function]}
                                                                                                      >
                                                                                                        <FontAwesomeIcon
                                                                                                          border={false}
                                                                                                          className="label-help-icon"
                                                                                                          fixedWidth={false}
                                                                                                          flip={null}
                                                                                                          icon={
                                                                                                            Object {
                                                                                                              "icon": Array [
                                                                                                                512,
                                                                                                                512,
                                                                                                                Array [],
                                                                                                                "f059",
                                                                                                                "M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z",
                                                                                                              ],
                                                                                                              "iconName": "question-circle",
                                                                                                              "prefix": "fas",
                                                                                                            }
                                                                                                          }
                                                                                                          inverse={false}
                                                                                                          listItem={false}
                                                                                                          mask={null}
                                                                                                          pull={null}
                                                                                                          pulse={false}
                                                                                                          rotation={null}
                                                                                                          size="1x"
                                                                                                          spin={false}
                                                                                                          style={Object {}}
                                                                                                          swapOpacity={false}
                                                                                                          symbol={false}
                                                                                                          title=""
                                                                                                          transform={null}
                                                                                                        >
                                                                                                          <svg
                                                                                                            aria-hidden="true"
                                                                                                            className="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                                                                                                            data-icon="question-circle"
                                                                                                            data-prefix="fas"
                                                                                                            focusable="false"
                                                                                                            role="img"
                                                                                                            style={Object {}}
                                                                                                            viewBox="0 0 512 512"
                                                                                                            xmlns="http://www.w3.org/2000/svg"
                                                                                                          >
                                                                                                            <path
                                                                                                              d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                                                                              fill="currentColor"
                                                                                                              style={Object {}}
                                                                                                            />
                                                                                                          </svg>
                                                                                                        </FontAwesomeIcon>
                                                                                                        <Overlay
                                                                                                          animation={[Function]}
                                                                                                          placement="right"
                                                                                                          rootClose={false}
                                                                                                          show={false}
                                                                                                        >
                                                                                                          <Overlay
                                                                                                            placement="right"
                                                                                                            rootClose={false}
                                                                                                            show={false}
                                                                                                            transition={[Function]}
                                                                                                          />
                                                                                                        </Overlay>
                                                                                                      </span>
                                                                                                    </Component>
                                                                                                  </span>
                                                                                                </DomainFieldLabel>
                                                                                              </div>
                                                                                              <FormControl
                                                                                                bsClass="form-control"
                                                                                                componentClass="input"
                                                                                                disabled={false}
                                                                                                id="domainpropertiesrow-importAliases-0-2"
                                                                                                name="domainpropertiesrow-importAliases"
                                                                                                onChange={[Function]}
                                                                                                type="text"
                                                                                                value=""
                                                                                              >
                                                                                                <input
                                                                                                  className="form-control"
                                                                                                  disabled={false}
                                                                                                  id="domainpropertiesrow-importAliases-0-2"
                                                                                                  name="domainpropertiesrow-importAliases"
                                                                                                  onChange={[Function]}
                                                                                                  type="text"
                                                                                                  value=""
                                                                                                />
                                                                                              </FormControl>
                                                                                            </div>
                                                                                          </Col>
                                                                                          <Col
                                                                                            bsClass="col"
                                                                                            componentClass="div"
                                                                                            xs={4}
                                                                                          >
                                                                                            <div
                                                                                              className="col-xs-4"
                                                                                            >
                                                                                              <div
                                                                                                className="domain-field-label"
                                                                                              >
                                                                                                <DomainFieldLabel
                                                                                                  helpTipBody={
                                                                                                    <React.Fragment>
                                                                                                      Use this to change the display of the field value within a data grid into a link. Multiple formats are supported, which allows ways to easily substitute and link to other locations in LabKey.
                                                                                                      <br />
                                                                                                      <br />
                                                                                                      Learn more about using 
                                                                                                      <HelpLink
                                                                                                        topic="urlEncoding"
                                                                                                      >
                                                                                                        URL Formatting Options
                                                                                                      </HelpLink>
                                                                                                      .
                                                                                                    </React.Fragment>
                                                                                                  }
                                                                                                  label="URL"
                                                                                                >
                                                                                                  <span
                                                                                                    className="domain-no-wrap"
                                                                                                  >
                                                                                                    URL
                                                                                                    <Component
                                                                                                      customStyle={Object {}}
                                                                                                      id="tooltip"
                                                                                                      size="1x"
                                                                                                      title="URL"
                                                                                                    >
                                                                                                      <span
                                                                                                        className="label-help-target"
                                                                                                        onMouseOut={[Function]}
                                                                                                        onMouseOver={[Function]}
                                                                                                      >
                                                                                                        <FontAwesomeIcon
                                                                                                          border={false}
                                                                                                          className="label-help-icon"
                                                                                                          fixedWidth={false}
                                                                                                          flip={null}
                                                                                                          icon={
                                                                                                            Object {
                                                                                                              "icon": Array [
                                                                                                                512,
                                                                                                                512,
                                                                                                                Array [],
                                                                                                                "f059",
                                                                                                                "M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z",
                                                                                                              ],
                                                                                                              "iconName": "question-circle",
                                                                                                              "prefix": "fas",
                                                                                                            }
                                                                                                          }
                                                                                                          inverse={false}
                                                                                                          listItem={false}
                                                                                                          mask={null}
                                                                                                          pull={null}
                                                                                                          pulse={false}
                                                                                                          rotation={null}
                                                                                                          size="1x"
                                                                                                          spin={false}
                                                                                                          style={Object {}}
                                                                                                          swapOpacity={false}
                                                                                                          symbol={false}
                                                                                                          title=""
                                                                                                          transform={null}
                                                                                                        >
                                                                                                          <svg
                                                                                                            aria-hidden="true"
                                                                                                            className="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                                                                                                            data-icon="question-circle"
                                                                                                            data-prefix="fas"
                                                                                                            focusable="false"
                                                                                                            role="img"
                                                                                                            style={Object {}}
                                                                                                            viewBox="0 0 512 512"
                                                                                                            xmlns="http://www.w3.org/2000/svg"
                                                                                                          >
                                                                                                            <path
                                                                                                              d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                                                                              fill="currentColor"
                                                                                                              style={Object {}}
                                                                                                            />
                                                                                                          </svg>
                                                                                                        </FontAwesomeIcon>
                                                                                                        <Overlay
                                                                                                          animation={[Function]}
                                                                                                          placement="right"
                                                                                                          rootClose={false}
                                                                                                          show={false}
                                                                                                        >
                                                                                                          <Overlay
                                                                                                            placement="right"
                                                                                                            rootClose={false}
                                                                                                            show={false}
                                                                                                            transition={[Function]}
                                                                                                          />
                                                                                                        </Overlay>
                                                                                                      </span>
                                                                                                    </Component>
                                                                                                  </span>
                                                                                                </DomainFieldLabel>
                                                                                              </div>
                                                                                              <FormControl
                                                                                                bsClass="form-control"
                                                                                                componentClass="input"
                                                                                                disabled={false}
                                                                                                id="domainpropertiesrow-URL-0-2"
                                                                                                name="domainpropertiesrow-URL"
                                                                                                onChange={[Function]}
                                                                                                type="text"
                                                                                                value=""
                                                                                              >
                                                                                                <input
                                                                                                  className="form-control"
                                                                                                  disabled={false}
                                                                                                  id="domainpropertiesrow-URL-0-2"
                                                                                                  name="domainpropertiesrow-URL"
                                                                                                  onChange={[Function]}
                                                                                                  type="text"
                                                                                                  value=""
                                                                                                />
                                                                                              </FormControl>
                                                                                            </div>
                                                                                          </Col>
                                                                                        </div>
                                                                                      </Row>
                                                                                    </div>
                                                                                  </NameAndLinkingOptions>
                                                                                </div>
                                                                              </Col>
                                                                              <Col
                                                                                bsClass="col"
                                                                                componentClass="div"
                                                                                xs={12}
                                                                              >
                                                                                <div
                                                                                  className="col-xs-12"
                                                                                >
                                                                                  <ConditionalFormattingAndValidation
                                                                                    domainFormDisplayOptions={
                                                                                      Object {
                                                                                        "disableMvEnabled": false,
                                                                                        "domainKindDisplayName": "data class",
                                                                                        "hideAddFieldsButton": false,
                                                                                        "hideConditionalFormatting": false,
                                                                                        "hideFilePropertyType": false,
                                                                                        "hideImportData": false,
                                                                                        "hideImportExport": false,
                                                                                        "hideRequired": false,
                                                                                        "hideStudyPropertyTypes": false,
                                                                                        "hideTextOptions": false,
                                                                                        "hideValidators": false,
                                                                                        "isDragDisabled": false,
                                                                                        "phiLevelDisabled": false,
                                                                                      }
                                                                                    }
                                                                                    domainIndex={0}
                                                                                    field={
                                                                                      Immutable.Record {
                                                                                        "conceptURI": null,
                                                                                        "conditionalFormats": Immutable.List [],
                                                                                        "defaultScale": "LINEAR",
                                                                                        "defaultValueType": "FIXED_EDITABLE",
                                                                                        "defaultValue": null,
                                                                                        "defaultDisplayValue": "[none]",
                                                                                        "description": null,
                                                                                        "dimension": false,
                                                                                        "excludeFromShifting": false,
                                                                                        "format": null,
                                                                                        "hidden": false,
                                                                                        "importAliases": null,
                                                                                        "label": null,
                                                                                        "lookupContainer": undefined,
                                                                                        "lookupQuery": undefined,
                                                                                        "lookupSchema": undefined,
                                                                                        "lookupValidator": undefined,
                                                                                        "measure": false,
                                                                                        "mvEnabled": false,
                                                                                        "name": "DateField",
                                                                                        "PHI": "NotPHI",
                                                                                        "propertyId": 521045,
                                                                                        "propertyURI": "urn:lsid:labkey.com:DataClass.Folder-5398:test1#DateField",
                                                                                        "propertyValidators": Array [],
                                                                                        "rangeValidators": Immutable.List [],
                                                                                        "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                                                                                        "regexValidators": Immutable.List [],
                                                                                        "recommendedVariable": false,
                                                                                        "required": false,
                                                                                        "scale": 4000,
                                                                                        "URL": null,
                                                                                        "shownInDetailsView": true,
                                                                                        "shownInInsertView": true,
                                                                                        "shownInUpdateView": true,
                                                                                        "visible": true,
                                                                                        "dataType": Immutable.Record {
                                                                                          "conceptURI": undefined,
                                                                                          "display": "Date Time",
                                                                                          "name": "dateTime",
                                                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                                                                                          "alternateRangeURI": "xsd:dateTime",
                                                                                          "shortDisplay": undefined,
                                                                                          "lookupSchema": undefined,
                                                                                          "lookupQuery": undefined,
                                                                                        },
                                                                                        "lookupQueryValue": undefined,
                                                                                        "lookupType": Immutable.Record {
                                                                                          "conceptURI": undefined,
                                                                                          "display": "Lookup",
                                                                                          "name": "lookup",
                                                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                                                                                          "alternateRangeURI": undefined,
                                                                                          "shortDisplay": undefined,
                                                                                          "lookupSchema": undefined,
                                                                                          "lookupQuery": undefined,
                                                                                        },
                                                                                        "original": Object {
                                                                                          "conceptURI": null,
                                                                                          "dataType": Immutable.Record {
                                                                                            "conceptURI": undefined,
                                                                                            "display": "Date Time",
                                                                                            "name": "dateTime",
                                                                                            "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                                                                                            "alternateRangeURI": "xsd:dateTime",
                                                                                            "shortDisplay": undefined,
                                                                                            "lookupSchema": undefined,
                                                                                            "lookupQuery": undefined,
                                                                                          },
                                                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                                                                                        },
                                                                                        "updatedField": false,
                                                                                        "isPrimaryKey": false,
                                                                                        "lockType": "NotLocked",
                                                                                        "wrappedColumnName": undefined,
                                                                                        "disablePhiLevel": false,
                                                                                        "lockExistingField": false,
                                                                                        "sourceOntology": undefined,
                                                                                        "conceptSubtree": undefined,
                                                                                        "conceptLabelColumn": undefined,
                                                                                        "conceptImportColumn": undefined,
                                                                                        "principalConceptCode": undefined,
                                                                                        "derivationDataScope": undefined,
                                                                                        "selected": false,
                                                                                      }
                                                                                    }
                                                                                    index={2}
                                                                                    onChange={[Function]}
                                                                                    showingModal={[Function]}
                                                                                    successBsStyle="success"
                                                                                  >
                                                                                    <div>
                                                                                      <Row
                                                                                        bsClass="row"
                                                                                        componentClass="div"
                                                                                      >
                                                                                        <div
                                                                                          className="row"
                                                                                        >
                                                                                          <Col
                                                                                            bsClass="col"
                                                                                            componentClass="div"
                                                                                            xs={12}
                                                                                          >
                                                                                            <div
                                                                                              className="col-xs-12"
                                                                                            >
                                                                                              <SectionHeading
                                                                                                cls="domain-field-section-hdr"
                                                                                                title="Conditional Formatting and Validation Options"
                                                                                              >
                                                                                                <div
                                                                                                  className="domain-field-section-heading domain-field-section-hdr"
                                                                                                >
                                                                                                  Conditional Formatting and Validation Options
                                                                                                </div>
                                                                                              </SectionHeading>
                                                                                            </div>
                                                                                          </Col>
                                                                                        </div>
                                                                                      </Row>
                                                                                      <Row
                                                                                        bsClass="row"
                                                                                        componentClass="div"
                                                                                      >
                                                                                        <div
                                                                                          className="row"
                                                                                        >
                                                                                          <Col
                                                                                            bsClass="col"
                                                                                            componentClass="div"
                                                                                            xs={12}
                                                                                          >
                                                                                            <div
                                                                                              className="col-xs-12"
                                                                                            >
                                                                                              <div
                                                                                                className="domain-validation-group"
                                                                                              >
                                                                                                <div
                                                                                                  className="domain-field-label domain-no-wrap"
                                                                                                >
                                                                                                  <DomainFieldLabel
                                                                                                    helpTipBody={
                                                                                                      <React.Fragment>
                                                                                                        <p>
                                                                                                          Conditional formats allow targeted display formatting for values that meet defined conditions.
                                                                                                        </p>
                                                                                                        <p>
                                                                                                          Learn more about using 
                                                                                                          <HelpLink
                                                                                                            topic="fieldEditor#conditional"
                                                                                                          >
                                                                                                            Conditional Formats
                                                                                                          </HelpLink>
                                                                                                          .
                                                                                                        </p>
                                                                                                      </React.Fragment>
                                                                                                    }
                                                                                                    label="Create Conditional Format Criteria"
                                                                                                  >
                                                                                                    Create Conditional Format 
                                                                                                    <span
                                                                                                      className="domain-no-wrap"
                                                                                                    >
                                                                                                      Criteria
                                                                                                      <Component
                                                                                                        customStyle={Object {}}
                                                                                                        id="tooltip"
                                                                                                        size="1x"
                                                                                                        title="Create Conditional Format Criteria"
                                                                                                      >
                                                                                                        <span
                                                                                                          className="label-help-target"
                                                                                                          onMouseOut={[Function]}
                                                                                                          onMouseOver={[Function]}
                                                                                                        >
                                                                                                          <FontAwesomeIcon
                                                                                                            border={false}
                                                                                                            className="label-help-icon"
                                                                                                            fixedWidth={false}
                                                                                                            flip={null}
                                                                                                            icon={
                                                                                                              Object {
                                                                                                                "icon": Array [
                                                                                                                  512,
                                                                                                                  512,
                                                                                                                  Array [],
                                                                                                                  "f059",
                                                                                                                  "M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z",
                                                                                                                ],
                                                                                                                "iconName": "question-circle",
                                                                                                                "prefix": "fas",
                                                                                                              }
                                                                                                            }
                                                                                                            inverse={false}
                                                                                                            listItem={false}
                                                                                                            mask={null}
                                                                                                            pull={null}
                                                                                                            pulse={false}
                                                                                                            rotation={null}
                                                                                                            size="1x"
                                                                                                            spin={false}
                                                                                                            style={Object {}}
                                                                                                            swapOpacity={false}
                                                                                                            symbol={false}
                                                                                                            title=""
                                                                                                            transform={null}
                                                                                                          >
                                                                                                            <svg
                                                                                                              aria-hidden="true"
                                                                                                              className="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                                                                                                              data-icon="question-circle"
                                                                                                              data-prefix="fas"
                                                                                                              focusable="false"
                                                                                                              role="img"
                                                                                                              style={Object {}}
                                                                                                              viewBox="0 0 512 512"
                                                                                                              xmlns="http://www.w3.org/2000/svg"
                                                                                                            >
                                                                                                              <path
                                                                                                                d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                                                                                fill="currentColor"
                                                                                                                style={Object {}}
                                                                                                              />
                                                                                                            </svg>
                                                                                                          </FontAwesomeIcon>
                                                                                                          <Overlay
                                                                                                            animation={[Function]}
                                                                                                            placement="right"
                                                                                                            rootClose={false}
                                                                                                            show={false}
                                                                                                          >
                                                                                                            <Overlay
                                                                                                              placement="right"
                                                                                                              rootClose={false}
                                                                                                              show={false}
                                                                                                              transition={[Function]}
                                                                                                            />
                                                                                                          </Overlay>
                                                                                                        </span>
                                                                                                      </Component>
                                                                                                    </span>
                                                                                                  </DomainFieldLabel>
                                                                                                </div>
                                                                                                <div>
                                                                                                  <Button
                                                                                                    active={false}
                                                                                                    block={false}
                                                                                                    bsClass="btn"
                                                                                                    bsStyle="default"
                                                                                                    className="domain-validation-button"
                                                                                                    disabled={false}
                                                                                                    id="domainpropertiesrow-conditionalFormat-0-2"
                                                                                                    name="domainpropertiesrow-conditionalFormat"
                                                                                                    onClick={[Function]}
                                                                                                  >
                                                                                                    <button
                                                                                                      className="domain-validation-button btn btn-default"
                                                                                                      disabled={false}
                                                                                                      id="domainpropertiesrow-conditionalFormat-0-2"
                                                                                                      name="domainpropertiesrow-conditionalFormat"
                                                                                                      onClick={[Function]}
                                                                                                      type="button"
                                                                                                    >
                                                                                                      Add Format
                                                                                                    </button>
                                                                                                  </Button>
                                                                                                  <span
                                                                                                    className="domain-text-label"
                                                                                                  >
                                                                                                    None Set
                                                                                                  </span>
                                                                                                </div>
                                                                                              </div>
                                                                                              <div
                                                                                                className=""
                                                                                              >
                                                                                                <div
                                                                                                  className="domain-field-label domain-no-wrap"
                                                                                                >
                                                                                                  <DomainFieldLabel
                                                                                                    helpTipBody={
                                                                                                      <React.Fragment>
                                                                                                        <p>
                                                                                                          Range validators allow you to specify numeric comparisons that must be satisfied.
                                                                                                        </p>
                                                                                                        <p>
                                                                                                          Learn more about using 
                                                                                                          <HelpLink
                                                                                                            topic="fieldEditor#range"
                                                                                                          >
                                                                                                            Range Validation
                                                                                                          </HelpLink>
                                                                                                          .
                                                                                                        </p>
                                                                                                      </React.Fragment>
                                                                                                    }
                                                                                                    label="Create Range Validator"
                                                                                                  >
                                                                                                    Create Range 
                                                                                                    <span
                                                                                                      className="domain-no-wrap"
                                                                                                    >
                                                                                                      Validator
                                                                                                      <Component
                                                                                                        customStyle={Object {}}
                                                                                                        id="tooltip"
                                                                                                        size="1x"
                                                                                                        title="Create Range Validator"
                                                                                                      >
                                                                                                        <span
                                                                                                          className="label-help-target"
                                                                                                          onMouseOut={[Function]}
                                                                                                          onMouseOver={[Function]}
                                                                                                        >
                                                                                                          <FontAwesomeIcon
                                                                                                            border={false}
                                                                                                            className="label-help-icon"
                                                                                                            fixedWidth={false}
                                                                                                            flip={null}
                                                                                                            icon={
                                                                                                              Object {
                                                                                                                "icon": Array [
                                                                                                                  512,
                                                                                                                  512,
                                                                                                                  Array [],
                                                                                                                  "f059",
                                                                                                                  "M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z",
                                                                                                                ],
                                                                                                                "iconName": "question-circle",
                                                                                                                "prefix": "fas",
                                                                                                              }
                                                                                                            }
                                                                                                            inverse={false}
                                                                                                            listItem={false}
                                                                                                            mask={null}
                                                                                                            pull={null}
                                                                                                            pulse={false}
                                                                                                            rotation={null}
                                                                                                            size="1x"
                                                                                                            spin={false}
                                                                                                            style={Object {}}
                                                                                                            swapOpacity={false}
                                                                                                            symbol={false}
                                                                                                            title=""
                                                                                                            transform={null}
                                                                                                          >
                                                                                                            <svg
                                                                                                              aria-hidden="true"
                                                                                                              className="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                                                                                                              data-icon="question-circle"
                                                                                                              data-prefix="fas"
                                                                                                              focusable="false"
                                                                                                              role="img"
                                                                                                              style={Object {}}
                                                                                                              viewBox="0 0 512 512"
                                                                                                              xmlns="http://www.w3.org/2000/svg"
                                                                                                            >
                                                                                                              <path
                                                                                                                d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                                                                                fill="currentColor"
                                                                                                                style={Object {}}
                                                                                                              />
                                                                                                            </svg>
                                                                                                          </FontAwesomeIcon>
                                                                                                          <Overlay
                                                                                                            animation={[Function]}
                                                                                                            placement="right"
                                                                                                            rootClose={false}
                                                                                                            show={false}
                                                                                                          >
                                                                                                            <Overlay
                                                                                                              placement="right"
                                                                                                              rootClose={false}
                                                                                                              show={false}
                                                                                                              transition={[Function]}
                                                                                                            />
                                                                                                          </Overlay>
                                                                                                        </span>
                                                                                                      </Component>
                                                                                                    </span>
                                                                                                  </DomainFieldLabel>
                                                                                                </div>
                                                                                                <div>
                                                                                                  <Button
                                                                                                    active={false}
                                                                                                    block={false}
                                                                                                    bsClass="btn"
                                                                                                    bsStyle="default"
                                                                                                    className="domain-validation-button"
                                                                                                    disabled={false}
                                                                                                    id="domainpropertiesrow-rangeValidator-0-2"
                                                                                                    name="domainpropertiesrow-rangeValidator"
                                                                                                    onClick={[Function]}
                                                                                                  >
                                                                                                    <button
                                                                                                      className="domain-validation-button btn btn-default"
                                                                                                      disabled={false}
                                                                                                      id="domainpropertiesrow-rangeValidator-0-2"
                                                                                                      name="domainpropertiesrow-rangeValidator"
                                                                                                      onClick={[Function]}
                                                                                                      type="button"
                                                                                                    >
                                                                                                      Add Range
                                                                                                    </button>
                                                                                                  </Button>
                                                                                                  <span
                                                                                                    className="domain-text-label"
                                                                                                  >
                                                                                                    None Set
                                                                                                  </span>
                                                                                                </div>
                                                                                              </div>
                                                                                            </div>
                                                                                          </Col>
                                                                                        </div>
                                                                                      </Row>
                                                                                    </div>
                                                                                  </ConditionalFormattingAndValidation>
                                                                                </div>
                                                                              </Col>
                                                                            </div>
                                                                          </div>
                                                                        </DomainRowExpandedOptions>
                                                                      </div>
                                                                    </Transition>
                                                                  </Collapse>
                                                                </div>
                                                              </Draggable>
                                                            </Connect(Draggable)>
                                                          </PrivateDraggable>
                                                        </PublicDraggable>
                                                      </DomainRow>
                                                      <AnimateInOut
                                                        on={null}
                                                        shouldAnimate={false}
                                                      />
                                                    </form>
                                                  </Form>
                                                </div>
                                              </Droppable>
                                            </Connect(Droppable)>
                                          </div>
                                        </Container>
                                      </Provider>
                                    </App>
                                  </ErrorBoundary>
                                </DragDropContext>
                                <Row
                                  bsClass="row"
                                  className="domain-add-field-row"
                                  componentClass="div"
                                >
                                  <div
                                    className="domain-add-field-row row"
                                  >
                                    <Col
                                      bsClass="col"
                                      componentClass="div"
                                      xs={12}
                                    >
                                      <div
                                        className="col-xs-12"
                                      >
                                        <AddEntityButton
                                          buttonClass="domain-form-add-btn"
                                          containerClass="pull-right"
                                          entity="Field"
                                          onClick={[Function]}
                                        >
                                          <ActionButton
                                            buttonClass="domain-form-add-btn"
                                            containerClass="pull-right"
                                            helperTitle="More Info"
                                            onClick={[Function]}
                                          >
                                            <div
                                              className="pull-right"
                                            >
                                              <div
                                                className="domain-form-add-btn"
                                              >
                                                <span
                                                  className="container--action-button btn btn-default"
                                                  onClick={[Function]}
                                                >
                                                  <i
                                                    className="fa fa-plus-circle container--addition-icon"
                                                  />
                                                   Add 
                                                  Field
                                                </span>
                                              </div>
                                            </div>
                                          </ActionButton>
                                        </AddEntityButton>
                                      </div>
                                    </Col>
                                  </div>
                                </Row>
                              </div>
                            </div>
                          </Transition>
                        </Collapse>
                      </PanelCollapse>
                    </PanelBody>
                  </div>
                </Panel>
              </Uncontrolled(Panel)>
            </ForwardRef>
          </DomainFormImpl>
        </LookupProvider>
      </DomainForm>
      <div
        className="domain-form-panel domain-designer-buttons"
      >
        <Button
          active={false}
          block={false}
          bsClass="btn"
          bsStyle="default"
          disabled={false}
          onClick={[MockFunction]}
        >
          <button
            className="btn btn-default"
            disabled={false}
            onClick={[MockFunction]}
            type="button"
          >
            Cancel
          </button>
        </Button>
        <Button
          active={false}
          block={false}
          bsClass="btn"
          bsStyle="success"
          className="pull-right"
          disabled={false}
          onClick={[Function]}
        >
          <button
            className="pull-right btn btn-success"
            disabled={false}
            onClick={[Function]}
            type="button"
          >
            Save
          </button>
        </Button>
      </div>
    </BaseDomainDesigner>
  </DataClassDesignerImpl>
</ComponentWithBaseDomainDesigner>
`;
